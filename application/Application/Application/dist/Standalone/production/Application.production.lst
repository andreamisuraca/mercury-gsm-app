

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Apr  3 12:24:02 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,noexec
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	text0,global,reloc=2,class=CODE,delta=1
    38                           	psect	text1,global,reloc=2,class=CODE,delta=1
    39                           	psect	text2,global,reloc=2,class=CODE,delta=1
    40                           	psect	text3,global,reloc=2,class=CODE,delta=1
    41                           	psect	text4,global,reloc=2,class=CODE,delta=1
    42                           	psect	text5,global,reloc=2,class=CODE,delta=1
    43                           	psect	text6,global,reloc=2,class=CODE,delta=1
    44                           	psect	text7,global,reloc=2,class=CODE,delta=1
    45                           	psect	text8,global,reloc=2,class=CODE,delta=1
    46                           	psect	text9,global,reloc=2,class=CODE,delta=1
    47                           	psect	text10,global,reloc=2,class=CODE,delta=1
    48                           	psect	text11,global,reloc=2,class=CODE,delta=1
    49                           	psect	text12,global,reloc=2,class=CODE,delta=1
    50                           	psect	text13,global,reloc=2,class=CODE,delta=1
    51                           	psect	text14,global,reloc=2,class=CODE,delta=1
    52                           	psect	text15,global,reloc=2,class=CODE,delta=1
    53                           	psect	text16,global,reloc=2,class=CODE,delta=1
    54                           	psect	text17,global,reloc=2,class=CODE,delta=1
    55                           	psect	text18,global,reloc=2,class=CODE,delta=1
    56                           	psect	text19,global,reloc=2,class=CODE,delta=1
    57                           	psect	text20,global,reloc=2,class=CODE,delta=1
    58                           	psect	text21,global,reloc=2,class=CODE,delta=1
    59                           	psect	text22,global,reloc=2,class=CODE,delta=1
    60                           	psect	text23,global,reloc=2,class=CODE,delta=1
    61                           	psect	text24,global,reloc=2,class=CODE,delta=1
    62                           	psect	text25,global,reloc=2,class=CODE,delta=1
    63                           	psect	text26,global,reloc=2,class=CODE,delta=1
    64                           	psect	text27,global,reloc=2,class=CODE,delta=1
    65                           	psect	text28,global,reloc=2,class=CODE,delta=1
    66                           	psect	text29,global,reloc=2,class=CODE,delta=1
    67                           	psect	text30,global,reloc=2,class=CODE,delta=1
    68                           	psect	text31,global,reloc=2,class=CODE,delta=1
    69                           	psect	text32,global,reloc=2,class=CODE,delta=1
    70                           	psect	text33,global,reloc=2,class=CODE,delta=1
    71                           	psect	text34,global,reloc=2,class=CODE,delta=1
    72                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text36,global,reloc=2,class=CODE,delta=1
    74                           	psect	text37,global,reloc=2,class=CODE,delta=1
    75                           	psect	text38,global,reloc=2,class=CODE,delta=1
    76                           	psect	text39,global,reloc=2,class=CODE,delta=1
    77                           	psect	text40,global,reloc=2,class=CODE,delta=1
    78                           	psect	text41,global,reloc=2,class=CODE,delta=1
    79                           	psect	text42,global,reloc=2,class=CODE,delta=1
    80                           	psect	text43,global,reloc=2,class=CODE,delta=1
    81                           	psect	text44,global,reloc=2,class=CODE,delta=1
    82                           	psect	text45,global,reloc=2,class=CODE,delta=1
    83                           	psect	text46,global,reloc=2,class=CODE,delta=1
    84                           	psect	text47,global,reloc=2,class=CODE,delta=1
    85                           	psect	text48,global,reloc=2,class=CODE,delta=1
    86                           	psect	text49,global,reloc=2,class=CODE,delta=1
    87                           	psect	text50,global,reloc=2,class=CODE,delta=1
    88                           	psect	text51,global,reloc=2,class=CODE,delta=1
    89                           	psect	text52,global,reloc=2,class=CODE,delta=1
    90                           	psect	text53,global,reloc=2,class=CODE,delta=1
    91                           	psect	text54,global,reloc=2,class=CODE,delta=1
    92                           	psect	text55,global,reloc=2,class=CODE,delta=1
    93                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text58,global,reloc=2,class=CODE,delta=1
    96                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text60,global,reloc=2,class=CODE,delta=1
    98                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text70,global,reloc=2,class=CODE,delta=1
   108                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text74,global,reloc=2,class=CODE,delta=1
   112                           	psect	text75,global,reloc=2,class=CODE,delta=1
   113                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text78,global,reloc=2,class=CODE,delta=1
   116                           	psect	text79,global,reloc=2,class=CODE,delta=1
   117                           	psect	text80,global,reloc=2,class=CODE,delta=1
   118                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text83,global,reloc=2,class=CODE,delta=1
   121                           	psect	text84,global,reloc=2,class=CODE,delta=1
   122                           	psect	text85,global,reloc=2,class=CODE,delta=1
   123                           	psect	text86,global,reloc=2,class=CODE,delta=1
   124                           	psect	text87,global,reloc=2,class=CODE,delta=1
   125                           	psect	text88,global,reloc=2,class=CODE,delta=1
   126                           	psect	text89,global,reloc=2,class=CODE,delta=1
   127                           	psect	text90,global,reloc=2,class=CODE,delta=1
   128                           	psect	text91,global,reloc=2,class=CODE,delta=1
   129                           	psect	text92,global,reloc=2,class=CODE,delta=1
   130                           	psect	text93,global,reloc=2,class=CODE,delta=1
   131                           	psect	text94,global,reloc=2,class=CODE,delta=1
   132                           	psect	text95,global,reloc=2,class=CODE,delta=1
   133                           	psect	text96,global,reloc=2,class=CODE,delta=1
   134                           	psect	text97,global,reloc=2,class=CODE,delta=1
   135                           	psect	text98,global,reloc=2,class=CODE,delta=1
   136                           	psect	text99,global,reloc=2,class=CODE,delta=1
   137                           	psect	text100,global,reloc=2,class=CODE,delta=1
   138                           	psect	text101,global,reloc=2,class=CODE,delta=1
   139                           	psect	text102,global,reloc=2,class=CODE,delta=1
   140                           	psect	text103,global,reloc=2,class=CODE,delta=1
   141                           	psect	text104,global,reloc=2,class=CODE,delta=1
   142                           	psect	text105,global,reloc=2,class=CODE,delta=1
   143                           	psect	text106,global,reloc=2,class=CODE,delta=1
   144                           	psect	text107,global,reloc=2,class=CODE,delta=1
   145                           	psect	text108,global,reloc=2,class=CODE,delta=1
   146                           	psect	text109,global,reloc=2,class=CODE,delta=1
   147                           	psect	text110,global,reloc=2,class=CODE,delta=1
   148                           	psect	text111,global,reloc=2,class=CODE,delta=1
   149                           	psect	text112,global,reloc=2,class=CODE,delta=1
   150                           	psect	text113,global,reloc=2,class=CODE,delta=1
   151                           	psect	text114,global,reloc=2,class=CODE,delta=1
   152                           	psect	text115,global,reloc=2,class=CODE,delta=1
   153                           	psect	text116,global,reloc=2,class=CODE,delta=1
   154                           	psect	text117,global,reloc=2,class=CODE,delta=1
   155                           	psect	text118,global,reloc=2,class=CODE,delta=1
   156                           	psect	text119,global,reloc=2,class=CODE,delta=1
   157                           	psect	text120,global,reloc=2,class=CODE,delta=1
   158                           	psect	text121,global,reloc=2,class=CODE,delta=1
   159                           	psect	text122,global,reloc=2,class=CODE,delta=1
   160                           	psect	text123,global,reloc=2,class=CODE,delta=1
   161                           	psect	text124,global,reloc=2,class=CODE,delta=1
   162                           	psect	text125,global,reloc=2,class=CODE,delta=1
   163                           	psect	text126,global,reloc=2,class=CODE,delta=1
   164                           	psect	text127,global,reloc=2,class=CODE,delta=1
   165                           	psect	text128,global,reloc=2,class=CODE,delta=1
   166                           	psect	text129,global,reloc=2,class=CODE,delta=1
   167                           	psect	text130,global,reloc=2,class=CODE,delta=1
   168                           	psect	text131,global,reloc=2,class=CODE,delta=1
   169                           	psect	text132,global,reloc=2,class=CODE,delta=1
   170                           	psect	text133,global,reloc=2,class=CODE,delta=1
   171                           	psect	text134,global,reloc=2,class=CODE,delta=1
   172                           	psect	text135,global,reloc=2,class=CODE,delta=1
   173                           	psect	text136,global,reloc=2,class=CODE,delta=1
   174                           	psect	text137,global,reloc=2,class=CODE,delta=1
   175                           	psect	text138,global,reloc=2,class=CODE,delta=1
   176                           	psect	text139,global,reloc=2,class=CODE,delta=1
   177                           	psect	text140,global,reloc=2,class=CODE,delta=1
   178                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text142,global,reloc=2,class=CODE,delta=1
   180                           	psect	text143,global,reloc=2,class=CODE,delta=1
   181                           	psect	text144,global,reloc=2,class=CODE,delta=1
   182                           	psect	text145,global,reloc=2,class=CODE,delta=1
   183                           	psect	text146,global,reloc=2,class=CODE,delta=1
   184                           	psect	text147,global,reloc=2,class=CODE,delta=1
   185                           	psect	text148,global,reloc=2,class=CODE,delta=1
   186                           	psect	text149,global,reloc=2,class=CODE,delta=1
   187                           	psect	text150,global,reloc=2,class=CODE,delta=1
   188                           	psect	text151,global,reloc=2,class=CODE,delta=1
   189                           	psect	text152,global,reloc=2,class=CODE,delta=1
   190                           	psect	text153,global,reloc=2,class=CODE,delta=1
   191                           	psect	text154,global,reloc=2,class=CODE,delta=1
   192                           	psect	text155,global,reloc=2,class=CODE,delta=1
   193                           	psect	text156,global,reloc=2,class=CODE,delta=1
   194                           	psect	text157,global,reloc=2,class=CODE,delta=1
   195                           	psect	text158,global,reloc=2,class=CODE,delta=1
   196                           	psect	text159,global,reloc=2,class=CODE,delta=1
   197                           	psect	text160,global,reloc=2,class=CODE,delta=1
   198                           	psect	text161,global,reloc=2,class=CODE,delta=1
   199                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=1
   200                           	psect	text163,global,reloc=2,class=CODE,delta=1
   201                           	psect	text164,global,reloc=2,class=CODE,delta=1,group=1
   202                           	psect	text165,global,reloc=2,class=CODE,delta=1
   203                           	psect	text166,global,reloc=2,class=CODE,delta=1
   204                           	psect	text167,global,reloc=2,class=CODE,delta=1,group=1
   205                           	psect	text168,global,reloc=2,class=CODE,delta=1
   206                           	psect	text169,global,reloc=2,class=CODE,delta=1
   207                           	psect	text170,global,reloc=2,class=CODE,delta=1
   208                           	psect	text171,global,reloc=2,class=CODE,delta=1
   209                           	psect	text172,global,reloc=2,class=CODE,delta=1
   210                           	psect	text173,global,reloc=2,class=CODE,delta=1
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	text177,global,reloc=2,class=CODE,delta=1
   215                           	psect	text178,global,reloc=2,class=CODE,delta=1
   216                           	psect	text179,global,reloc=2,class=CODE,delta=1
   217                           	psect	text180,global,reloc=2,class=CODE,delta=1
   218                           	psect	text181,global,reloc=2,class=CODE,delta=1
   219                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   220                           	psect	text183,global,reloc=2,class=CODE,delta=1
   221                           	psect	text184,global,reloc=2,class=CODE,delta=1
   222                           	psect	text185,global,reloc=2,class=CODE,delta=1
   223                           	psect	text186,global,reloc=2,class=CODE,delta=1
   224                           	psect	text187,global,reloc=2,class=CODE,delta=1
   225                           	psect	text188,global,reloc=2,class=CODE,delta=1
   226                           	psect	text189,global,reloc=2,class=CODE,delta=1
   227                           	psect	text190,global,reloc=2,class=CODE,delta=1
   228                           	psect	text191,global,reloc=2,class=CODE,delta=1
   229                           	psect	text192,global,reloc=2,class=CODE,delta=1
   230                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   231                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   232                           	psect	text194,global,reloc=2,class=CODE,delta=1
   233                           	psect	text195,global,reloc=2,class=CODE,delta=1
   234                           	psect	text196,global,reloc=2,class=CODE,delta=1
   235                           	psect	text197,global,reloc=2,class=CODE,delta=1
   236                           	psect	text198,global,reloc=2,class=CODE,delta=1
   237                           	psect	text199,global,reloc=2,class=CODE,delta=1
   238                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   239                           	psect	text200,global,reloc=2,class=CODE,delta=1
   240                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   241                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   242                           	dabs	1,0x400,48,_BDT
   243                           	dabs	1,0x438,8,_CtrlTrfData
   244                           	dabs	1,0x430,8,_SetupPkt
   245  0000                     
   246                           ; Version 1.45
   247                           ; Generated 16/11/2017 GMT
   248                           ; 
   249                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   250                           ; All rights reserved.
   251                           ; 
   252                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   253                           ; 
   254                           ; Redistribution and use in source and binary forms, with or without modification, are
   255                           ; permitted provided that the following conditions are met:
   256                           ; 
   257                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   258                           ;        conditions and the following disclaimer.
   259                           ; 
   260                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   261                           ;        of conditions and the following disclaimer in the documentation and/or other
   262                           ;        materials provided with the distribution.
   263                           ; 
   264                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   265                           ;        software without specific prior written permission.
   266                           ; 
   267                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   268                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   269                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   270                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   271                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   272                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   273                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   274                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   275                           ; 
   276                           ; 
   277                           ; Code-generator required, PIC18F46J50 Definitions
   278                           ; 
   279                           ; SFR Addresses
   280  0000                     
   281                           	psect	idataBANK0
   282  006DC8                     __pidataBANK0:
   283                           	opt stack 0
   284                           
   285                           ;initializer for findEmptySpot@currentPosition
   286  006DC8  20                 	db	32
   287                           
   288                           ;initializer for isNumberInMemory@currentPosition
   289  006DC9  20                 	db	32
   290                           
   291                           ;initializer for MyApp_Task@isCmdSuccessfull
   292  006DCA  01                 	db	1
   293                           
   294                           	psect	idataBANK1
   295  006DCB                     __pidataBANK1:
   296                           	opt stack 0
   297                           
   298                           ;initializer for _isMemoryEmpty
   299  006DCB  01                 	db	1
   300                           
   301                           ;initializer for InitGprsNetwork@GprsInitSts
   302  006DCC  01                 	db	1
   303                           
   304                           	psect	idataBANK2
   305  006D1A                     __pidataBANK2:
   306                           	opt stack 0
   307                           
   308                           ;initializer for Terminal@EchoOption
   309  006D1A  01                 	db	1
   310                           
   311                           ;initializer for _MainSystemTimebaseFlag
   312  006D1B  01                 	db	1
   313                           
   314                           ;initializer for _ConnTimeout
   315  006D1C  00                 	db	0
   316  006D1D  01                 	db	1
   317  006D1E  0000               	dw	0
   318  006D20  0000               	dw	0
   319  006D22  0000               	dw	0
   320  006D24  0000               	dw	0
   321  006D26  00                 	db	0
   322                           
   323                           ;initializer for _relayBuffer
   324  006D27  50                 	db	80
   325  006D28  00                 	db	0
   326                           
   327                           	psect	idataBANK3
   328  0064DE                     __pidataBANK3:
   329                           	opt stack 0
   330                           
   331                           ;initializer for ModemEvtParser@F9115
   332  0064DE  2B                 	db	43
   333  0064DF  43                 	db	67
   334  0064E0  4D                 	db	77
   335  0064E1  54                 	db	84
   336  0064E2  49                 	db	73
   337                           
   338                           ;initializer for ModemEvtParser@F9113
   339  0064E3  2B                 	db	43
   340  0064E4  43                 	db	67
   341  0064E5  4C                 	db	76
   342  0064E6  49                 	db	73
   343  0064E7  50                 	db	80
   344                           
   345                           ;initializer for ModemEvtParser@F9111
   346  0064E8  52                 	db	82
   347  0064E9  49                 	db	73
   348  0064EA  4E                 	db	78
   349  0064EB  47                 	db	71
   350                           
   351                           ;initializer for Term_MainSm@TermDelay
   352  0064EC  01                 	db	1
   353  0064ED  01                 	db	1
   354  0064EE  0000               	dw	0
   355  0064F0  0000               	dw	0
   356  0064F2  0000               	dw	0
   357  0064F4  0000               	dw	0
   358  0064F6  00                 	db	0
   359                           
   360                           ;initializer for _ConnWait
   361  0064F7  00                 	db	0
   362  0064F8  01                 	db	1
   363  0064F9  0000               	dw	0
   364  0064FB  0000               	dw	0
   365  0064FD  0000               	dw	0
   366  0064FF  0000               	dw	0
   367  006501  00                 	db	0
   368                           
   369                           ;initializer for SendSmsSm@SwTimer
   370  006502  01                 	db	1
   371  006503  01                 	db	1
   372  006504  0000               	dw	0
   373  006506  0000               	dw	0
   374  006508  0000               	dw	0
   375  00650A  0000               	dw	0
   376  00650C  00                 	db	0
   377                           
   378                           ;initializer for CheckModem@Timeout
   379  00650D  00                 	db	0
   380  00650E  01                 	db	1
   381  00650F  0000               	dw	0
   382  006511  0000               	dw	0
   383  006513  0000               	dw	0
   384  006515  0000               	dw	0
   385  006517  00                 	db	0
   386                           
   387                           ;initializer for _blinkInSeconds
   388  006518  FFFF               	dw	65535
   389                           
   390                           	psect	idataBANK4
   391  006D5C                     __pidataBANK4:
   392                           	opt stack 0
   393                           
   394                           ;initializer for ModemEvtParser@F9117
   395  006D5C  43                 	db	67
   396  006D5D  61                 	db	97
   397  006D5E  6C                 	db	108
   398  006D5F  6C                 	db	108
   399  006D60  20                 	db	32
   400  006D61  52                 	db	82
   401  006D62  65                 	db	101
   402  006D63  61                 	db	97
   403  006D64  64                 	db	100
   404  006D65  79                 	db	121
   405                           
   406                           	psect	idataBANK5
   407  005F08                     __pidataBANK5:
   408                           	opt stack 0
   409                           
   410                           ;initializer for _TaskTable
   411  005F08  A6                 	db	low _Mdm_DrvMainFn
   412  005F09  6D                 	db	high _Mdm_DrvMainFn
   413  005F0A  00                 	db	0
   414  005F0B  0000               	dw	0
   415  005F0D  000A               	dw	10
   416  005F0F  00                 	db	0
   417  005F10  C0                 	db	low _I2cSlv_MainTask
   418  005F11  5C                 	db	high _I2cSlv_MainTask
   419  005F12  00                 	db	0
   420  005F13  0000               	dw	0
   421  005F15  0001               	dw	1
   422  005F17  00                 	db	0
   423  005F18  58                 	db	low _Mdm_MainTask
   424  005F19  5F                 	db	high _Mdm_MainTask
   425  005F1A  00                 	db	0
   426  005F1B  0000               	dw	0
   427  005F1D  0001               	dw	1
   428  005F1F  00                 	db	0
   429  005F20  0A                 	db	low _MdmHttp_MainTask
   430  005F21  62                 	db	high _MdmHttp_MainTask
   431  005F22  00                 	db	0
   432  005F23  0000               	dw	0
   433  005F25  0001               	dw	1
   434  005F27  00                 	db	0
   435  005F28  2A                 	db	low _UsbDevice_MainTask
   436  005F29  69                 	db	high _UsbDevice_MainTask
   437  005F2A  00                 	db	0
   438  005F2B  0000               	dw	0
   439  005F2D  0001               	dw	1
   440  005F2F  00                 	db	0
   441  005F30  BA                 	db	low _Wdg_MainTask
   442  005F31  69                 	db	high _Wdg_MainTask
   443  005F32  00                 	db	0
   444  005F33  0000               	dw	0
   445  005F35  0064               	dw	100
   446  005F37  00                 	db	0
   447  005F38  02                 	db	low _Led_MainTask
   448  005F39  3E                 	db	high _Led_MainTask
   449  005F3A  00                 	db	0
   450  005F3B  0000               	dw	0
   451  005F3D  0032               	dw	50
   452  005F3F  00                 	db	0
   453  005F40  34                 	db	low _Rtcm_MainTask
   454  005F41  52                 	db	high _Rtcm_MainTask
   455  005F42  00                 	db	0
   456  005F43  0000               	dw	0
   457  005F45  0064               	dw	100
   458  005F47  00                 	db	0
   459  005F48  92                 	db	low _Term_MainTask
   460  005F49  6B                 	db	high _Term_MainTask
   461  005F4A  00                 	db	0
   462  005F4B  0000               	dw	0
   463  005F4D  0001               	dw	1
   464  005F4F  00                 	db	0
   465  005F50  96                 	db	low _MyApp_Task
   466  005F51  25                 	db	high _MyApp_Task
   467  005F52  00                 	db	0
   468  005F53  0000               	dw	0
   469  005F55  0064               	dw	100
   470  005F57  00                 	db	0
   471                           
   472                           	psect	mediumconst
   473  00FC0E                     __pmediumconst:
   474                           	opt stack 0
   475  00FC0E  00                 	db	0
   476  00FC0F                     delCmdFsm@F9014:
   477                           	opt stack 0
   478  00FC0F  00                 	db	0
   479  00FC10  00                 	db	0
   480  00FC11  00                 	db	0
   481  00FC12  00                 	db	0
   482  00FC13  00                 	db	0
   483  00FC14  00                 	db	0
   484  00FC15  00                 	db	0
   485  00FC16  00                 	db	0
   486  00FC17  00                 	db	0
   487  00FC18  00                 	db	0
   488  00FC19  00                 	db	0
   489  00FC1A  00                 	db	0
   490  00FC1B  00                 	db	0
   491  00FC1C                     __end_ofdelCmdFsm@F9014:
   492                           	opt stack 0
   493  00FC1C                     _USB_SD_Ptr:
   494                           	opt stack 0
   495  00FC1C  5B                 	db	low _sd000
   496  00FC1D  FE                 	db	high _sd000
   497  00FC1E  14                 	db	low _sd001
   498  00FC1F  FE                 	db	high _sd001
   499  00FC20  EE                 	db	low _sd002
   500  00FC21  FD                 	db	high _sd002
   501  00FC22                     __end_of_USB_SD_Ptr:
   502                           	opt stack 0
   503  00FC22                     parseCommand@F9035:
   504                           	opt stack 0
   505  00FC22  52                 	db	82
   506  00FC23  45                 	db	69
   507  00FC24  53                 	db	83
   508  00FC25  3B                 	db	59
   509  00FC26                     __end_ofparseCommand@F9035:
   510                           	opt stack 0
   511  00FC26                     parseCommand@F9033:
   512                           	opt stack 0
   513  00FC26  44                 	db	68
   514  00FC27  45                 	db	69
   515  00FC28  4C                 	db	76
   516  00FC29  3B                 	db	59
   517  00FC2A                     __end_ofparseCommand@F9033:
   518                           	opt stack 0
   519  00FC2A                     parseCommand@F9031:
   520                           	opt stack 0
   521  00FC2A  41                 	db	65
   522  00FC2B  44                 	db	68
   523  00FC2C  44                 	db	68
   524  00FC2D  3B                 	db	59
   525  00FC2E                     __end_ofparseCommand@F9031:
   526                           	opt stack 0
   527  00FC2E                     _USB_CD_Ptr:
   528                           	opt stack 0
   529  00FC2E  AB                 	db	low _configDescriptor1
   530  00FC2F  FD                 	db	high _configDescriptor1
   531  00FC30                     __end_of_USB_CD_Ptr:
   532                           	opt stack 0
   533  00FC30                     _TaskNumber:
   534                           	opt stack 0
   535  00FC30  000A               	dw	10
   536  00FC32                     __end_of_TaskNumber:
   537                           	opt stack 0
   538  00FC32                     _MsgFormat:
   539                           	opt stack 0
   540  00FC32  48                 	db	72
   541  00FC33  6F                 	db	111
   542  00FC34  73                 	db	115
   543  00FC35  74                 	db	116
   544  00FC36  20                 	db	32
   545  00FC37  6D                 	db	109
   546  00FC38  65                 	db	101
   547  00FC39  73                 	db	115
   548  00FC3A  73                 	db	115
   549  00FC3B  61                 	db	97
   550  00FC3C  67                 	db	103
   551  00FC3D  65                 	db	101
   552  00FC3E  20                 	db	32
   553  00FC3F  66                 	db	102
   554  00FC40  6F                 	db	111
   555  00FC41  72                 	db	114
   556  00FC42  6D                 	db	109
   557  00FC43  61                 	db	97
   558  00FC44  74                 	db	116
   559  00FC45  3A                 	db	58
   560  00FC46  20                 	db	32
   561  00FC47  0D                 	db	13
   562  00FC48  0A                 	db	10
   563  00FC49  5B                 	db	91
   564  00FC4A  6F                 	db	111
   565  00FC4B  70                 	db	112
   566  00FC4C  5F                 	db	95
   567  00FC4D  74                 	db	116
   568  00FC4E  79                 	db	121
   569  00FC4F  70                 	db	112
   570  00FC50  65                 	db	101
   571  00FC51  5D                 	db	93
   572  00FC52  3A                 	db	58
   573  00FC53  5B                 	db	91
   574  00FC54  6F                 	db	111
   575  00FC55  70                 	db	112
   576  00FC56  5D                 	db	93
   577  00FC57  3A                 	db	58
   578  00FC58  5B                 	db	91
   579  00FC59  6C                 	db	108
   580  00FC5A  65                 	db	101
   581  00FC5B  6E                 	db	110
   582  00FC5C  5D                 	db	93
   583  00FC5D  3A                 	db	58
   584  00FC5E  5B                 	db	91
   585  00FC5F  61                 	db	97
   586  00FC60  64                 	db	100
   587  00FC61  64                 	db	100
   588  00FC62  72                 	db	114
   589  00FC63  5D                 	db	93
   590  00FC64  3A                 	db	58
   591  00FC65  5B                 	db	91
   592  00FC66  70                 	db	112
   593  00FC67  61                 	db	97
   594  00FC68  79                 	db	121
   595  00FC69  6C                 	db	108
   596  00FC6A  6F                 	db	111
   597  00FC6B  61                 	db	97
   598  00FC6C  64                 	db	100
   599  00FC6D  5D                 	db	93
   600  00FC6E  0D                 	db	13
   601  00FC6F  0A                 	db	10
   602  00FC70  0D                 	db	13
   603  00FC71  0A                 	db	10
   604  00FC72  5B                 	db	91
   605  00FC73  6F                 	db	111
   606  00FC74  70                 	db	112
   607  00FC75  5F                 	db	95
   608  00FC76  74                 	db	116
   609  00FC77  79                 	db	121
   610  00FC78  70                 	db	112
   611  00FC79  65                 	db	101
   612  00FC7A  5D                 	db	93
   613  00FC7B  20                 	db	32
   614  00FC7C  3D                 	db	61
   615  00FC7D  20                 	db	32
   616  00FC7E  53                 	db	83
   617  00FC7F  4F                 	db	79
   618  00FC80  2C                 	db	44
   619  00FC81  53                 	db	83
   620  00FC82  42                 	db	66
   621  00FC83  0D                 	db	13
   622  00FC84  0A                 	db	10
   623  00FC85  5B                 	db	91
   624  00FC86  6F                 	db	111
   625  00FC87  70                 	db	112
   626  00FC88  5D                 	db	93
   627  00FC89  20                 	db	32
   628  00FC8A  3D                 	db	61
   629  00FC8B  20                 	db	32
   630  00FC8C  52                 	db	82
   631  00FC8D  3A                 	db	58
   632  00FC8E  20                 	db	32
   633  00FC8F  72                 	db	114
   634  00FC90  65                 	db	101
   635  00FC91  61                 	db	97
   636  00FC92  64                 	db	100
   637  00FC93  2C                 	db	44
   638  00FC94  57                 	db	87
   639  00FC95  3A                 	db	58
   640  00FC96  20                 	db	32
   641  00FC97  77                 	db	119
   642  00FC98  72                 	db	114
   643  00FC99  69                 	db	105
   644  00FC9A  74                 	db	116
   645  00FC9B  65                 	db	101
   646  00FC9C  0D                 	db	13
   647  00FC9D  0A                 	db	10
   648  00FC9E  5B                 	db	91
   649  00FC9F  6C                 	db	108
   650  00FCA0  65                 	db	101
   651  00FCA1  6E                 	db	110
   652  00FCA2  5D                 	db	93
   653  00FCA3  20                 	db	32
   654  00FCA4  3D                 	db	61
   655  00FCA5  20                 	db	32
   656  00FCA6  32                 	db	50
   657  00FCA7  20                 	db	32
   658  00FCA8  62                 	db	98
   659  00FCA9  79                 	db	121
   660  00FCAA  74                 	db	116
   661  00FCAB  65                 	db	101
   662  00FCAC  20                 	db	32
   663  00FCAD  41                 	db	65
   664  00FCAE  53                 	db	83
   665  00FCAF  43                 	db	67
   666  00FCB0  49                 	db	73
   667  00FCB1  49                 	db	73
   668  00FCB2  0D                 	db	13
   669  00FCB3  0A                 	db	10
   670  00FCB4  5B                 	db	91
   671  00FCB5  61                 	db	97
   672  00FCB6  64                 	db	100
   673  00FCB7  64                 	db	100
   674  00FCB8  72                 	db	114
   675  00FCB9  5D                 	db	93
   676  00FCBA  20                 	db	32
   677  00FCBB  3D                 	db	61
   678  00FCBC  20                 	db	32
   679  00FCBD  32                 	db	50
   680  00FCBE  20                 	db	32
   681  00FCBF  62                 	db	98
   682  00FCC0  79                 	db	121
   683  00FCC1  74                 	db	116
   684  00FCC2  65                 	db	101
   685  00FCC3  20                 	db	32
   686  00FCC4  41                 	db	65
   687  00FCC5  53                 	db	83
   688  00FCC6  43                 	db	67
   689  00FCC7  49                 	db	73
   690  00FCC8  49                 	db	73
   691  00FCC9  0D                 	db	13
   692  00FCCA  0A                 	db	10
   693  00FCCB  5B                 	db	91
   694  00FCCC  70                 	db	112
   695  00FCCD  61                 	db	97
   696  00FCCE  79                 	db	121
   697  00FCCF  6C                 	db	108
   698  00FCD0  6F                 	db	111
   699  00FCD1  61                 	db	97
   700  00FCD2  64                 	db	100
   701  00FCD3  5D                 	db	93
   702  00FCD4  20                 	db	32
   703  00FCD5  3D                 	db	61
   704  00FCD6  20                 	db	32
   705  00FCD7  6D                 	db	109
   706  00FCD8  61                 	db	97
   707  00FCD9  78                 	db	120
   708  00FCDA  20                 	db	32
   709  00FCDB  32                 	db	50
   710  00FCDC  30                 	db	48
   711  00FCDD  20                 	db	32
   712  00FCDE  62                 	db	98
   713  00FCDF  79                 	db	121
   714  00FCE0  74                 	db	116
   715  00FCE1  65                 	db	101
   716  00FCE2  20                 	db	32
   717  00FCE3  41                 	db	65
   718  00FCE4  53                 	db	83
   719  00FCE5  43                 	db	67
   720  00FCE6  49                 	db	73
   721  00FCE7  49                 	db	73
   722  00FCE8  0D                 	db	13
   723  00FCE9  0A                 	db	10
   724  00FCEA  0D                 	db	13
   725  00FCEB  0A                 	db	10
   726  00FCEC  54                 	db	84
   727  00FCED  65                 	db	101
   728  00FCEE  72                 	db	114
   729  00FCEF  6D                 	db	109
   730  00FCF0  69                 	db	105
   731  00FCF1  6E                 	db	110
   732  00FCF2  61                 	db	97
   733  00FCF3  6C                 	db	108
   734  00FCF4  20                 	db	32
   735  00FCF5  4D                 	db	77
   736  00FCF6  6F                 	db	111
   737  00FCF7  64                 	db	100
   738  00FCF8  65                 	db	101
   739  00FCF9  3A                 	db	58
   740  00FCFA  20                 	db	32
   741  00FCFB  43                 	db	67
   742  00FCFC  4F                 	db	79
   743  00FCFD  4D                 	db	77
   744  00FCFE  4D                 	db	77
   745  00FCFF  41                 	db	65
   746  00FD00  4E                 	db	78
   747  00FD01  44                 	db	68
   748  00FD02  20                 	db	32
   749  00FD03  4D                 	db	77
   750  00FD04  4F                 	db	79
   751  00FD05  44                 	db	68
   752  00FD06  45                 	db	69
   753  00FD07  0D                 	db	13
   754  00FD08  0A                 	db	10
   755  00FD09  4D                 	db	77
   756  00FD0A  6F                 	db	111
   757  00FD0B  64                 	db	100
   758  00FD0C  65                 	db	101
   759  00FD0D  6D                 	db	109
   760  00FD0E  20                 	db	32
   761  00FD0F  54                 	db	84
   762  00FD10  79                 	db	121
   763  00FD11  70                 	db	112
   764  00FD12  65                 	db	101
   765  00FD13  3A                 	db	58
   766  00FD14  20                 	db	32
   767  00FD15  47                 	db	71
   768  00FD16  53                 	db	83
   769  00FD17  4D                 	db	77
   770  00FD18  2F                 	db	47
   771  00FD19  47                 	db	71
   772  00FD1A  50                 	db	80
   773  00FD1B  52                 	db	82
   774  00FD1C  53                 	db	83
   775  00FD1D  0D                 	db	13
   776  00FD1E  0A                 	db	10
   777  00FD1F  0D                 	db	13
   778  00FD20  0A                 	db	10
   779  00FD21  00                 	db	0
   780  00FD22                     __end_of_MsgFormat:
   781                           	opt stack 0
   782  00FD22                     _Welcome:
   783                           	opt stack 0
   784  00FD22  2A                 	db	42
   785  00FD23  2A                 	db	42
   786  00FD24  2A                 	db	42
   787  00FD25  2A                 	db	42
   788  00FD26  2A                 	db	42
   789  00FD27  2A                 	db	42
   790  00FD28  2A                 	db	42
   791  00FD29  2A                 	db	42
   792  00FD2A  2A                 	db	42
   793  00FD2B  2A                 	db	42
   794  00FD2C  2A                 	db	42
   795  00FD2D  2A                 	db	42
   796  00FD2E  2A                 	db	42
   797  00FD2F  2A                 	db	42
   798  00FD30  2A                 	db	42
   799  00FD31  2A                 	db	42
   800  00FD32  2A                 	db	42
   801  00FD33  2A                 	db	42
   802  00FD34  2A                 	db	42
   803  00FD35  2A                 	db	42
   804  00FD36  2A                 	db	42
   805  00FD37  2A                 	db	42
   806  00FD38  2A                 	db	42
   807  00FD39  2A                 	db	42
   808  00FD3A  2A                 	db	42
   809  00FD3B  2A                 	db	42
   810  00FD3C  2A                 	db	42
   811  00FD3D  2A                 	db	42
   812  00FD3E  2A                 	db	42
   813  00FD3F  2A                 	db	42
   814  00FD40  2A                 	db	42
   815  00FD41  2A                 	db	42
   816  00FD42  2A                 	db	42
   817  00FD43  2A                 	db	42
   818  00FD44  2A                 	db	42
   819  00FD45  2A                 	db	42
   820  00FD46  2A                 	db	42
   821  00FD47  2A                 	db	42
   822  00FD48  2A                 	db	42
   823  00FD49  2A                 	db	42
   824  00FD4A  2A                 	db	42
   825  00FD4B  2A                 	db	42
   826  00FD4C  2A                 	db	42
   827  00FD4D  2A                 	db	42
   828  00FD4E  2A                 	db	42
   829  00FD4F  2A                 	db	42
   830  00FD50  2A                 	db	42
   831  00FD51  2A                 	db	42
   832  00FD52  2A                 	db	42
   833  00FD53  0D                 	db	13
   834  00FD54  0A                 	db	10
   835  00FD55  20                 	db	32
   836  00FD56  20                 	db	32
   837  00FD57  20                 	db	32
   838  00FD58  20                 	db	32
   839  00FD59  20                 	db	32
   840  00FD5A  20                 	db	32
   841  00FD5B  20                 	db	32
   842  00FD5C  20                 	db	32
   843  00FD5D  20                 	db	32
   844  00FD5E  20                 	db	32
   845  00FD5F  20                 	db	32
   846  00FD60  20                 	db	32
   847  00FD61  20                 	db	32
   848  00FD62  20                 	db	32
   849  00FD63  20                 	db	32
   850  00FD64  20                 	db	32
   851  00FD65  20                 	db	32
   852  00FD66  20                 	db	32
   853  00FD67  4D                 	db	77
   854  00FD68  45                 	db	69
   855  00FD69  52                 	db	82
   856  00FD6A  43                 	db	67
   857  00FD6B  55                 	db	85
   858  00FD6C  52                 	db	82
   859  00FD6D  59                 	db	89
   860  00FD6E  20                 	db	32
   861  00FD6F  53                 	db	83
   862  00FD70  59                 	db	89
   863  00FD71  53                 	db	83
   864  00FD72  54                 	db	84
   865  00FD73  45                 	db	69
   866  00FD74  4D                 	db	77
   867  00FD75  0D                 	db	13
   868  00FD76  0A                 	db	10
   869  00FD77  2A                 	db	42
   870  00FD78  2A                 	db	42
   871  00FD79  2A                 	db	42
   872  00FD7A  2A                 	db	42
   873  00FD7B  2A                 	db	42
   874  00FD7C  2A                 	db	42
   875  00FD7D  2A                 	db	42
   876  00FD7E  2A                 	db	42
   877  00FD7F  2A                 	db	42
   878  00FD80  2A                 	db	42
   879  00FD81  2A                 	db	42
   880  00FD82  2A                 	db	42
   881  00FD83  2A                 	db	42
   882  00FD84  2A                 	db	42
   883  00FD85  2A                 	db	42
   884  00FD86  2A                 	db	42
   885  00FD87  2A                 	db	42
   886  00FD88  2A                 	db	42
   887  00FD89  2A                 	db	42
   888  00FD8A  2A                 	db	42
   889  00FD8B  2A                 	db	42
   890  00FD8C  2A                 	db	42
   891  00FD8D  2A                 	db	42
   892  00FD8E  2A                 	db	42
   893  00FD8F  2A                 	db	42
   894  00FD90  2A                 	db	42
   895  00FD91  2A                 	db	42
   896  00FD92  2A                 	db	42
   897  00FD93  2A                 	db	42
   898  00FD94  2A                 	db	42
   899  00FD95  2A                 	db	42
   900  00FD96  2A                 	db	42
   901  00FD97  2A                 	db	42
   902  00FD98  2A                 	db	42
   903  00FD99  2A                 	db	42
   904  00FD9A  2A                 	db	42
   905  00FD9B  2A                 	db	42
   906  00FD9C  2A                 	db	42
   907  00FD9D  2A                 	db	42
   908  00FD9E  2A                 	db	42
   909  00FD9F  2A                 	db	42
   910  00FDA0  2A                 	db	42
   911  00FDA1  2A                 	db	42
   912  00FDA2  2A                 	db	42
   913  00FDA3  2A                 	db	42
   914  00FDA4  2A                 	db	42
   915  00FDA5  2A                 	db	42
   916  00FDA6  2A                 	db	42
   917  00FDA7  2A                 	db	42
   918  00FDA8  0D                 	db	13
   919  00FDA9  0A                 	db	10
   920  00FDAA  00                 	db	0
   921  00FDAB                     __end_of_Welcome:
   922                           	opt stack 0
   923  00FDAB                     _configDescriptor1:
   924                           	opt stack 0
   925  00FDAB  09                 	db	9
   926  00FDAC  02                 	db	2
   927  00FDAD  43                 	db	67
   928  00FDAE  00                 	db	0
   929  00FDAF  02                 	db	2
   930  00FDB0  01                 	db	1
   931  00FDB1  00                 	db	0
   932  00FDB2  C0                 	db	192
   933  00FDB3  32                 	db	50
   934  00FDB4  09                 	db	9
   935  00FDB5  04                 	db	4
   936  00FDB6  00                 	db	0
   937  00FDB7  00                 	db	0
   938  00FDB8  01                 	db	1
   939  00FDB9  02                 	db	2
   940  00FDBA  02                 	db	2
   941  00FDBB  01                 	db	1
   942  00FDBC  00                 	db	0
   943  00FDBD  05                 	db	5
   944  00FDBE  24                 	db	36
   945  00FDBF  00                 	db	0
   946  00FDC0  10                 	db	16
   947  00FDC1  01                 	db	1
   948  00FDC2  04                 	db	4
   949  00FDC3  24                 	db	36
   950  00FDC4  02                 	db	2
   951  00FDC5  02                 	db	2
   952  00FDC6  05                 	db	5
   953  00FDC7  24                 	db	36
   954  00FDC8  06                 	db	6
   955  00FDC9  00                 	db	0
   956  00FDCA  01                 	db	1
   957  00FDCB  05                 	db	5
   958  00FDCC  24                 	db	36
   959  00FDCD  01                 	db	1
   960  00FDCE  00                 	db	0
   961  00FDCF  01                 	db	1
   962  00FDD0  07                 	db	7
   963  00FDD1  05                 	db	5
   964  00FDD2  81                 	db	129
   965  00FDD3  03                 	db	3
   966  00FDD4  08                 	db	8
   967  00FDD5  00                 	db	0
   968  00FDD6  02                 	db	2
   969  00FDD7  09                 	db	9
   970  00FDD8  04                 	db	4
   971  00FDD9  01                 	db	1
   972  00FDDA  00                 	db	0
   973  00FDDB  02                 	db	2
   974  00FDDC  0A                 	db	10
   975  00FDDD  00                 	db	0
   976  00FDDE  00                 	db	0
   977  00FDDF  00                 	db	0
   978  00FDE0  07                 	db	7
   979  00FDE1  05                 	db	5
   980  00FDE2  02                 	db	2
   981  00FDE3  02                 	db	2
   982  00FDE4  40                 	db	64
   983  00FDE5  00                 	db	0
   984  00FDE6  00                 	db	0
   985  00FDE7  07                 	db	7
   986  00FDE8  05                 	db	5
   987  00FDE9  82                 	db	130
   988  00FDEA  02                 	db	2
   989  00FDEB  40                 	db	64
   990  00FDEC  00                 	db	0
   991  00FDED  00                 	db	0
   992  00FDEE                     __end_of_configDescriptor1:
   993                           	opt stack 0
   994  00FDEE                     _sd002:
   995                           	opt stack 0
   996  00FDEE  26                 	db	38
   997  00FDEF  03                 	db	3
   998  00FDF0  0054               	dw	84
   999  00FDF2  0065               	dw	101
  1000  00FDF4  0072               	dw	114
  1001  00FDF6  006D               	dw	109
  1002  00FDF8  0069               	dw	105
  1003  00FDFA  006E               	dw	110
  1004  00FDFC  0061               	dw	97
  1005  00FDFE  006C               	dw	108
  1006  00FE00  0020               	dw	32
  1007  00FE02  0049               	dw	73
  1008  00FE04  006E               	dw	110
  1009  00FE06  0074               	dw	116
  1010  00FE08  0065               	dw	101
  1011  00FE0A  0072               	dw	114
  1012  00FE0C  0066               	dw	102
  1013  00FE0E  0061               	dw	97
  1014  00FE10  0063               	dw	99
  1015  00FE12  0065               	dw	101
  1016  00FE14                     __end_of_sd002:
  1017                           	opt stack 0
  1018  00FE14                     _sd001:
  1019                           	opt stack 0
  1020  00FE14  1E                 	db	30
  1021  00FE15  03                 	db	3
  1022  00FE16  004D               	dw	77
  1023  00FE18  0065               	dw	101
  1024  00FE1A  0072               	dw	114
  1025  00FE1C  0063               	dw	99
  1026  00FE1E  0075               	dw	117
  1027  00FE20  0072               	dw	114
  1028  00FE22  0079               	dw	121
  1029  00FE24  0020               	dw	32
  1030  00FE26  0053               	dw	83
  1031  00FE28  0079               	dw	121
  1032  00FE2A  0073               	dw	115
  1033  00FE2C  0074               	dw	116
  1034  00FE2E  0065               	dw	101
  1035  00FE30  006D               	dw	109
  1036  00FE32                     __end_of_sd001:
  1037                           	opt stack 0
  1038  00FE32                     _MsgReady:
  1039                           	opt stack 0
  1040  00FE32  0D                 	db	13
  1041  00FE33  0A                 	db	10
  1042  00FE34  53                 	db	83
  1043  00FE35  79                 	db	121
  1044  00FE36  73                 	db	115
  1045  00FE37  74                 	db	116
  1046  00FE38  65                 	db	101
  1047  00FE39  6D                 	db	109
  1048  00FE3A  20                 	db	32
  1049  00FE3B  52                 	db	82
  1050  00FE3C  65                 	db	101
  1051  00FE3D  61                 	db	97
  1052  00FE3E  64                 	db	100
  1053  00FE3F  79                 	db	121
  1054  00FE40  2E                 	db	46
  1055  00FE41  2E                 	db	46
  1056  00FE42  2E                 	db	46
  1057  00FE43  20                 	db	32
  1058  00FE44  0D                 	db	13
  1059  00FE45  0A                 	db	10
  1060  00FE46  0D                 	db	13
  1061  00FE47  0A                 	db	10
  1062  00FE48  00                 	db	0
  1063  00FE49                     __end_of_MsgReady:
  1064                           	opt stack 0
  1065  00FE49                     _device_dsc:
  1066                           	opt stack 0
  1067  00FE49  12                 	db	18
  1068  00FE4A  01                 	db	1
  1069  00FE4B  0200               	dw	512
  1070  00FE4D  02                 	db	2
  1071  00FE4E  00                 	db	0
  1072  00FE4F  00                 	db	0
  1073  00FE50  08                 	db	8
  1074  00FE51  04D8               	dw	1240
  1075  00FE53  000A               	dw	10
  1076  00FE55  0100               	dw	256
  1077  00FE57  01                 	db	1
  1078  00FE58  02                 	db	2
  1079  00FE59  00                 	db	0
  1080  00FE5A  01                 	db	1
  1081  00FE5B                     __end_of_device_dsc:
  1082                           	opt stack 0
  1083  00FE5B                     _sd000:
  1084                           	opt stack 0
  1085  00FE5B  04                 	db	4
  1086  00FE5C  03                 	db	3
  1087  00FE5D  0409               	dw	1033
  1088  00FE5F                     __end_of_sd000:
  1089                           	opt stack 0
  1090  0000                     _RPINR1	set	3815
  1091  0000                     _UEP0bits	set	3878
  1092  0000                     _UIEbits	set	3894
  1093  0000                     _UADDR	set	3896
  1094  0000                     _UIE	set	3894
  1095  0000                     _UEIE	set	3895
  1096  0000                     _UCFG	set	3897
  1097  0000                     _RTCCAL	set	3902
  1098  0000                     _PADCFG1bits	set	3900
  1099  0000                     _RTCCFGbits	set	3903
  1100  0000                     _DSCONLbits	set	3916
  1101  0000                     _DSGPR1	set	3919
  1102  0000                     _DSGPR0	set	3918
  1103  0000                     _DSCONHbits	set	3917
  1104  0000                     _ANCON1bits	set	3913
  1105  0000                     _UEP1	set	3879
  1106  0000                     _UEP0	set	3878
  1107  0000                     _T1CONbits	set	4045
  1108  0000                     _PORTDbits	set	3971
  1109  0000                     _USTAT	set	3940
  1110  0000                     _PIR2bits	set	4001
  1111  0000                     _UCON	set	3941
  1112  0000                     _UIRbits	set	3938
  1113  0000                     _UCONbits	set	3941
  1114  0000                     _UIR	set	3938
  1115  0000                     _UEIR	set	3939
  1116  0000                     _PIE2bits	set	4000
  1117  0000                     _BAUDCON2	set	3964
  1118  0000                     _RCSTA2	set	3996
  1119  0000                     _BAUDCON1	set	3966
  1120  0000                     _RCSTA1	set	4012
  1121  0000                     _TRISCbits	set	3988
  1122  0000                     _TXSTA2	set	4008
  1123  0000                     _TXSTA1	set	4013
  1124  0000                     _RCREG2	set	4010
  1125  0000                     _RCREG1	set	4015
  1126  0000                     _TXREG2	set	4009
  1127  0000                     _TXREG1	set	4014
  1128  0000                     _SPBRG2	set	4011
  1129  0000                     _SPBRGH2	set	3965
  1130  0000                     _SPBRG1	set	4016
  1131  0000                     _SPBRGH1	set	3967
  1132  0000                     _PR4	set	3959
  1133  0000                     _PR2	set	4043
  1134  0000                     _PIE1bits	set	3997
  1135  0000                     _IPR1bits	set	3999
  1136  0000                     _T4CONbits	set	3958
  1137  0000                     _T2CONbits	set	4042
  1138  0000                     _ALRMVALL	set	3982
  1139  0000                     _ALRMVALH	set	3983
  1140  0000                     _RTCVALH	set	3993
  1141  0000                     _RTCVALL	set	3992
  1142  0000                     _ALRMRPTbits	set	3984
  1143  0000                     _ALRMCFGbits	set	3985
  1144  0000                     _PIE3bits	set	4003
  1145  0000                     _IPR3bits	set	4005
  1146  0000                     _OSCCONbits	set	4051
  1147  0000                     _PORTEbits	set	3972
  1148  0000                     _TRISEbits	set	3990
  1149  0000                     _WDTCONbits	set	4032
  1150  0000                     _INTCON2bits	set	4081
  1151  0000                     _TRISBbits	set	3987
  1152  0000                     _OSCTUNEbits	set	3995
  1153  0000                     _SSP2CON1	set	3954
  1154  0000                     _TRISDbits	set	3989
  1155  0000                     _SSP2BUF	set	3957
  1156  0000                     _SSP2CON2bits	set	3953
  1157  0000                     _SSP2STAT	set	3955
  1158  0000                     _SSP2CON2	set	3953
  1159  0000                     _SSP2ADD	set	3956
  1160  0000                     _PIR1bits	set	3998
  1161  0000                     _PIR3bits	set	4004
  1162  0000                     _INTCON3bits	set	4080
  1163  0000                     _INTCONbits	set	4082
  1164  0000                     _RCONbits	set	4048
  1165  00FE5F                     STR_21:
  1166  00FE5F  20                 	db	32
  1167  00FE60  4C                 	db	76	;'L'
  1168  00FE61  61                 	db	97	;'a'
  1169  00FE62  7A                 	db	122	;'z'
  1170  00FE63  79                 	db	121	;'y'
  1171  00FE64  20                 	db	32
  1172  00FE65  64                 	db	100	;'d'
  1173  00FE66  65                 	db	101	;'e'
  1174  00FE67  76                 	db	118	;'v'
  1175  00FE68  69                 	db	105	;'i'
  1176  00FE69  63                 	db	99	;'c'
  1177  00FE6A  65                 	db	101	;'e'
  1178  00FE6B  2E                 	db	46
  1179  00FE6C  2E                 	db	46
  1180  00FE6D  2E                 	db	46
  1181  00FE6E  79                 	db	121	;'y'
  1182  00FE6F  6F                 	db	111	;'o'
  1183  00FE70  75                 	db	117	;'u'
  1184  00FE71  27                 	db	39
  1185  00FE72  76                 	db	118	;'v'
  1186  00FE73  65                 	db	101	;'e'
  1187  00FE74  20                 	db	32
  1188  00FE75  62                 	db	98	;'b'
  1189  00FE76  65                 	db	101	;'e'
  1190  00FE77  65                 	db	101	;'e'
  1191  00FE78  6E                 	db	110	;'n'
  1192  00FE79  20                 	db	32
  1193  00FE7A  74                 	db	116	;'t'
  1194  00FE7B  69                 	db	105	;'i'
  1195  00FE7C  6D                 	db	109	;'m'
  1196  00FE7D  65                 	db	101	;'e'
  1197  00FE7E  64                 	db	100	;'d'
  1198  00FE7F  2D                 	db	45
  1199  00FE80  6F                 	db	111	;'o'
  1200  00FE81  75                 	db	117	;'u'
  1201  00FE82  74                 	db	116	;'t'
  1202  00FE83  21                 	db	33
  1203  00FE84  21                 	db	33
  1204  00FE85  21                 	db	33
  1205  00FE86  0D                 	db	13
  1206  00FE87  0A                 	db	10
  1207  00FE88  00                 	db	0
  1208  00FE89                     STR_8:
  1209  00FE89  41                 	db	65	;'A'
  1210  00FE8A  54                 	db	84	;'T'
  1211  00FE8B  2B                 	db	43
  1212  00FE8C  53                 	db	83	;'S'
  1213  00FE8D  41                 	db	65	;'A'
  1214  00FE8E  50                 	db	80	;'P'
  1215  00FE8F  42                 	db	66	;'B'
  1216  00FE90  52                 	db	82	;'R'
  1217  00FE91  3D                 	db	61	;'='
  1218  00FE92  33                 	db	51	;'3'
  1219  00FE93  2C                 	db	44
  1220  00FE94  31                 	db	49	;'1'
  1221  00FE95  2C                 	db	44
  1222  00FE96  22                 	db	34
  1223  00FE97  43                 	db	67	;'C'
  1224  00FE98  6F                 	db	111	;'o'
  1225  00FE99  6E                 	db	110	;'n'
  1226  00FE9A  74                 	db	116	;'t'
  1227  00FE9B  79                 	db	121	;'y'
  1228  00FE9C  70                 	db	112	;'p'
  1229  00FE9D  65                 	db	101	;'e'
  1230  00FE9E  22                 	db	34
  1231  00FE9F  2C                 	db	44
  1232  00FEA0  22                 	db	34
  1233  00FEA1  47                 	db	71	;'G'
  1234  00FEA2  50                 	db	80	;'P'
  1235  00FEA3  52                 	db	82	;'R'
  1236  00FEA4  53                 	db	83	;'S'
  1237  00FEA5  22                 	db	34
  1238  00FEA6  0D                 	db	13
  1239  00FEA7  00                 	db	0
  1240  00FEA8                     STR_14:
  1241  00FEA8  41                 	db	65	;'A'
  1242  00FEA9  54                 	db	84	;'T'
  1243  00FEAA  2B                 	db	43
  1244  00FEAB  48                 	db	72	;'H'
  1245  00FEAC  54                 	db	84	;'T'
  1246  00FEAD  54                 	db	84	;'T'
  1247  00FEAE  50                 	db	80	;'P'
  1248  00FEAF  50                 	db	80	;'P'
  1249  00FEB0  41                 	db	65	;'A'
  1250  00FEB1  52                 	db	82	;'R'
  1251  00FEB2  41                 	db	65	;'A'
  1252  00FEB3  3D                 	db	61	;'='
  1253  00FEB4  22                 	db	34
  1254  00FEB5  43                 	db	67	;'C'
  1255  00FEB6  49                 	db	73	;'I'
  1256  00FEB7  44                 	db	68	;'D'
  1257  00FEB8  22                 	db	34
  1258  00FEB9  2C                 	db	44
  1259  00FEBA  31                 	db	49	;'1'
  1260  00FEBB  0D                 	db	13
  1261  00FEBC  00                 	db	0
  1262  00FEBD                     STR_9:
  1263  00FEBD  41                 	db	65	;'A'
  1264  00FEBE  54                 	db	84	;'T'
  1265  00FEBF  2B                 	db	43
  1266  00FEC0  53                 	db	83	;'S'
  1267  00FEC1  41                 	db	65	;'A'
  1268  00FEC2  50                 	db	80	;'P'
  1269  00FEC3  42                 	db	66	;'B'
  1270  00FEC4  52                 	db	82	;'R'
  1271  00FEC5  3D                 	db	61	;'='
  1272  00FEC6  33                 	db	51	;'3'
  1273  00FEC7  2C                 	db	44
  1274  00FEC8  31                 	db	49	;'1'
  1275  00FEC9  2C                 	db	44
  1276  00FECA  22                 	db	34
  1277  00FECB  41                 	db	65	;'A'
  1278  00FECC  50                 	db	80	;'P'
  1279  00FECD  4E                 	db	78	;'N'
  1280  00FECE  22                 	db	34
  1281  00FECF  2C                 	db	44
  1282  00FED0  22                 	db	34
  1283  00FED1  00                 	db	0
  1284  00FED2                     STR_23:
  1285  00FED2  46                 	db	70	;'F'
  1286  00FED3  72                 	db	114	;'r'
  1287  00FED4  61                 	db	97	;'a'
  1288  00FED5  6D                 	db	109	;'m'
  1289  00FED6  65                 	db	101	;'e'
  1290  00FED7  77                 	db	119	;'w'
  1291  00FED8  6F                 	db	111	;'o'
  1292  00FED9  72                 	db	114	;'r'
  1293  00FEDA  6B                 	db	107	;'k'
  1294  00FEDB  20                 	db	32
  1295  00FEDC  56                 	db	86	;'V'
  1296  00FEDD  65                 	db	101	;'e'
  1297  00FEDE  72                 	db	114	;'r'
  1298  00FEDF  73                 	db	115	;'s'
  1299  00FEE0  69                 	db	105	;'i'
  1300  00FEE1  6F                 	db	111	;'o'
  1301  00FEE2  6E                 	db	110	;'n'
  1302  00FEE3  3A                 	db	58	;':'
  1303  00FEE4  20                 	db	32
  1304  00FEE5  00                 	db	0
  1305  00FEE6                     STR_15:
  1306  00FEE6  41                 	db	65	;'A'
  1307  00FEE7  54                 	db	84	;'T'
  1308  00FEE8  2B                 	db	43
  1309  00FEE9  48                 	db	72	;'H'
  1310  00FEEA  54                 	db	84	;'T'
  1311  00FEEB  54                 	db	84	;'T'
  1312  00FEEC  50                 	db	80	;'P'
  1313  00FEED  50                 	db	80	;'P'
  1314  00FEEE  41                 	db	65	;'A'
  1315  00FEEF  52                 	db	82	;'R'
  1316  00FEF0  41                 	db	65	;'A'
  1317  00FEF1  3D                 	db	61	;'='
  1318  00FEF2  22                 	db	34
  1319  00FEF3  55                 	db	85	;'U'
  1320  00FEF4  52                 	db	82	;'R'
  1321  00FEF5  4C                 	db	76	;'L'
  1322  00FEF6  22                 	db	34
  1323  00FEF7  2C                 	db	44
  1324  00FEF8  22                 	db	34
  1325  00FEF9  00                 	db	0
  1326  00FEFA                     STR_30:
  1327  00FEFA  41                 	db	65	;'A'
  1328  00FEFB  54                 	db	84	;'T'
  1329  00FEFC  2B                 	db	43
  1330  00FEFD  43                 	db	67	;'C'
  1331  00FEFE  4D                 	db	77	;'M'
  1332  00FEFF  47                 	db	71	;'G'
  1333  00FF00  44                 	db	68	;'D'
  1334  00FF01  41                 	db	65	;'A'
  1335  00FF02  3D                 	db	61	;'='
  1336  00FF03  44                 	db	68	;'D'
  1337  00FF04  45                 	db	69	;'E'
  1338  00FF05  4C                 	db	76	;'L'
  1339  00FF06  20                 	db	32
  1340  00FF07  41                 	db	65	;'A'
  1341  00FF08  4C                 	db	76	;'L'
  1342  00FF09  4C                 	db	76	;'L'
  1343  00FF0A  0D                 	db	13
  1344  00FF0B  0A                 	db	10
  1345  00FF0C  00                 	db	0
  1346  00FF0D                     STR_27:
  1347  00FF0D  42                 	db	66	;'B'
  1348  00FF0E  75                 	db	117	;'u'
  1349  00FF0F  69                 	db	105	;'i'
  1350  00FF10  6C                 	db	108	;'l'
  1351  00FF11  64                 	db	100	;'d'
  1352  00FF12  20                 	db	32
  1353  00FF13  44                 	db	68	;'D'
  1354  00FF14  61                 	db	97	;'a'
  1355  00FF15  74                 	db	116	;'t'
  1356  00FF16  65                 	db	101	;'e'
  1357  00FF17  3A                 	db	58	;':'
  1358  00FF18  20                 	db	32
  1359  00FF19  25                 	db	37
  1360  00FF1A  73                 	db	115	;'s'
  1361  00FF1B  0D                 	db	13
  1362  00FF1C  0A                 	db	10
  1363  00FF1D  00                 	db	0
  1364  00FF1E                     STR_16:
  1365  00FF1E  41                 	db	65	;'A'
  1366  00FF1F  54                 	db	84	;'T'
  1367  00FF20  2B                 	db	43
  1368  00FF21  48                 	db	72	;'H'
  1369  00FF22  54                 	db	84	;'T'
  1370  00FF23  54                 	db	84	;'T'
  1371  00FF24  50                 	db	80	;'P'
  1372  00FF25  41                 	db	65	;'A'
  1373  00FF26  43                 	db	67	;'C'
  1374  00FF27  54                 	db	84	;'T'
  1375  00FF28  49                 	db	73	;'I'
  1376  00FF29  4F                 	db	79	;'O'
  1377  00FF2A  4E                 	db	78	;'N'
  1378  00FF2B  3D                 	db	61	;'='
  1379  00FF2C  30                 	db	48	;'0'
  1380  00FF2D  0D                 	db	13
  1381  00FF2E  00                 	db	0
  1382  00FF2F                     STR_29:
  1383  00FF2F  41                 	db	65	;'A'
  1384  00FF30  54                 	db	84	;'T'
  1385  00FF31  2B                 	db	43
  1386  00FF32  43                 	db	67	;'C'
  1387  00FF33  4D                 	db	77	;'M'
  1388  00FF34  47                 	db	71	;'G'
  1389  00FF35  44                 	db	68	;'D'
  1390  00FF36  3D                 	db	61	;'='
  1391  00FF37  31                 	db	49	;'1'
  1392  00FF38  2C                 	db	44
  1393  00FF39  30                 	db	48	;'0'
  1394  00FF3A  0D                 	db	13
  1395  00FF3B  0A                 	db	10
  1396  00FF3C  00                 	db	0
  1397  00FF3D  41                 	db	65	;'A'
  1398  00FF3E  54                 	db	84	;'T'
  1399  00FF3F  2B                 	db	43
  1400  00FF40  48                 	db	72	;'H'
  1401  00FF41  54                 	db	84	;'T'
  1402  00FF42  54                 	db	84	;'T'
  1403  00FF43  50                 	db	80	;'P'
  1404  00FF44  53                 	db	83	;'S'
  1405  00FF45  53                 	db	83	;'S'
  1406  00FF46  4C                 	db	76	;'L'
  1407  00FF47  3D                 	db	61	;'='
  1408  00FF48  30                 	db	48	;'0'
  1409  00FF49  0D                 	db	13
  1410  00FF4A  00                 	db	0
  1411  00FF4B                     STR_10:
  1412  00FF4B  41                 	db	65	;'A'
  1413  00FF4C  54                 	db	84	;'T'
  1414  00FF4D  2B                 	db	43
  1415  00FF4E  53                 	db	83	;'S'
  1416  00FF4F  41                 	db	65	;'A'
  1417  00FF50  50                 	db	80	;'P'
  1418  00FF51  42                 	db	66	;'B'
  1419  00FF52  52                 	db	82	;'R'
  1420  00FF53  3D                 	db	61	;'='
  1421  00FF54  31                 	db	49	;'1'
  1422  00FF55  2C                 	db	44
  1423  00FF56  31                 	db	49	;'1'
  1424  00FF57  0D                 	db	13
  1425  00FF58  00                 	db	0
  1426  00FF59                     STR_11:
  1427  00FF59  41                 	db	65	;'A'
  1428  00FF5A  54                 	db	84	;'T'
  1429  00FF5B  2B                 	db	43
  1430  00FF5C  53                 	db	83	;'S'
  1431  00FF5D  41                 	db	65	;'A'
  1432  00FF5E  50                 	db	80	;'P'
  1433  00FF5F  42                 	db	66	;'B'
  1434  00FF60  52                 	db	82	;'R'
  1435  00FF61  3D                 	db	61	;'='
  1436  00FF62  32                 	db	50	;'2'
  1437  00FF63  2C                 	db	44
  1438  00FF64  31                 	db	49	;'1'
  1439  00FF65  0D                 	db	13
  1440  00FF66  00                 	db	0
  1441  00FF67                     STR_13:
  1442  00FF67  41                 	db	65	;'A'
  1443  00FF68  54                 	db	84	;'T'
  1444  00FF69  2B                 	db	43
  1445  00FF6A  48                 	db	72	;'H'
  1446  00FF6B  54                 	db	84	;'T'
  1447  00FF6C  54                 	db	84	;'T'
  1448  00FF6D  50                 	db	80	;'P'
  1449  00FF6E  53                 	db	83	;'S'
  1450  00FF6F  53                 	db	83	;'S'
  1451  00FF70  4C                 	db	76	;'L'
  1452  00FF71  3D                 	db	61	;'='
  1453  00FF72  31                 	db	49	;'1'
  1454  00FF73  0D                 	db	13
  1455  00FF74  00                 	db	0
  1456  00FF75                     STR_2:
  1457  00FF75  41                 	db	65	;'A'
  1458  00FF76  54                 	db	84	;'T'
  1459  00FF77  2B                 	db	43
  1460  00FF78  49                 	db	73	;'I'
  1461  00FF79  50                 	db	80	;'P'
  1462  00FF7A  52                 	db	82	;'R'
  1463  00FF7B  3D                 	db	61	;'='
  1464  00FF7C  39                 	db	57	;'9'
  1465  00FF7D  36                 	db	54	;'6'
  1466  00FF7E  30                 	db	48	;'0'
  1467  00FF7F  30                 	db	48	;'0'
  1468  00FF80  0D                 	db	13
  1469  00FF81  0A                 	db	10
  1470  00FF82  00                 	db	0
  1471  00FF83                     STR_17:
  1472  00FF83  41                 	db	65	;'A'
  1473  00FF84  54                 	db	84	;'T'
  1474  00FF85  2B                 	db	43
  1475  00FF86  48                 	db	72	;'H'
  1476  00FF87  54                 	db	84	;'T'
  1477  00FF88  54                 	db	84	;'T'
  1478  00FF89  50                 	db	80	;'P'
  1479  00FF8A  52                 	db	82	;'R'
  1480  00FF8B  45                 	db	69	;'E'
  1481  00FF8C  41                 	db	65	;'A'
  1482  00FF8D  44                 	db	68	;'D'
  1483  00FF8E  0D                 	db	13
  1484  00FF8F  00                 	db	0
  1485  00FF90                     STR_18:
  1486  00FF90  41                 	db	65	;'A'
  1487  00FF91  54                 	db	84	;'T'
  1488  00FF92  2B                 	db	43
  1489  00FF93  48                 	db	72	;'H'
  1490  00FF94  54                 	db	84	;'T'
  1491  00FF95  54                 	db	84	;'T'
  1492  00FF96  50                 	db	80	;'P'
  1493  00FF97  54                 	db	84	;'T'
  1494  00FF98  45                 	db	69	;'E'
  1495  00FF99  52                 	db	82	;'R'
  1496  00FF9A  4D                 	db	77	;'M'
  1497  00FF9B  0D                 	db	13
  1498  00FF9C  00                 	db	0
  1499  00FF9D                     STR_12:
  1500  00FF9D  41                 	db	65	;'A'
  1501  00FF9E  54                 	db	84	;'T'
  1502  00FF9F  2B                 	db	43
  1503  00FFA0  48                 	db	72	;'H'
  1504  00FFA1  54                 	db	84	;'T'
  1505  00FFA2  54                 	db	84	;'T'
  1506  00FFA3  50                 	db	80	;'P'
  1507  00FFA4  49                 	db	73	;'I'
  1508  00FFA5  4E                 	db	78	;'N'
  1509  00FFA6  49                 	db	73	;'I'
  1510  00FFA7  54                 	db	84	;'T'
  1511  00FFA8  0D                 	db	13
  1512  00FFA9  00                 	db	0
  1513  00FFAA                     STR_31:
  1514  00FFAA  41                 	db	65	;'A'
  1515  00FFAB  54                 	db	84	;'T'
  1516  00FFAC  2B                 	db	43
  1517  00FFAD  43                 	db	67	;'C'
  1518  00FFAE  4C                 	db	76	;'L'
  1519  00FFAF  49                 	db	73	;'I'
  1520  00FFB0  50                 	db	80	;'P'
  1521  00FFB1  3D                 	db	61	;'='
  1522  00FFB2  31                 	db	49	;'1'
  1523  00FFB3  0D                 	db	13
  1524  00FFB4  0A                 	db	10
  1525  00FFB5  00                 	db	0
  1526  00FFB6                     STR_28:
  1527  00FFB6  41                 	db	65	;'A'
  1528  00FFB7  70                 	db	112	;'p'
  1529  00FFB8  72                 	db	114	;'r'
  1530  00FFB9  20                 	db	32
  1531  00FFBA  20                 	db	32
  1532  00FFBB  33                 	db	51	;'3'
  1533  00FFBC  20                 	db	32
  1534  00FFBD  32                 	db	50	;'2'
  1535  00FFBE  30                 	db	48	;'0'
  1536  00FFBF  32                 	db	50	;'2'
  1537  00FFC0  32                 	db	50	;'2'
  1538  00FFC1  00                 	db	0
  1539  00FFC2                     STR_4:
  1540  00FFC2  41                 	db	65	;'A'
  1541  00FFC3  54                 	db	84	;'T'
  1542  00FFC4  2B                 	db	43
  1543  00FFC5  43                 	db	67	;'C'
  1544  00FFC6  4D                 	db	77	;'M'
  1545  00FFC7  47                 	db	71	;'G'
  1546  00FFC8  52                 	db	82	;'R'
  1547  00FFC9  3D                 	db	61	;'='
  1548  00FFCA  31                 	db	49	;'1'
  1549  00FFCB  0D                 	db	13
  1550  00FFCC  0A                 	db	10
  1551  00FFCD  00                 	db	0
  1552  00FFCE                     STR_5:
  1553  00FFCE  41                 	db	65	;'A'
  1554  00FFCF  54                 	db	84	;'T'
  1555  00FFD0  2B                 	db	43
  1556  00FFD1  43                 	db	67	;'C'
  1557  00FFD2  4D                 	db	77	;'M'
  1558  00FFD3  47                 	db	71	;'G'
  1559  00FFD4  53                 	db	83	;'S'
  1560  00FFD5  3D                 	db	61	;'='
  1561  00FFD6  22                 	db	34
  1562  00FFD7  00                 	db	0
  1563  00FFD8                     STR_32:
  1564  00FFD8  28                 	db	40
  1565  00FFD9  6E                 	db	110	;'n'
  1566  00FFDA  75                 	db	117	;'u'
  1567  00FFDB  6C                 	db	108	;'l'
  1568  00FFDC  6C                 	db	108	;'l'
  1569  00FFDD  29                 	db	41
  1570  00FFDE  00                 	db	0
  1571  00FFDF                     STR_3:
  1572  00FFDF  41                 	db	65	;'A'
  1573  00FFE0  54                 	db	84	;'T'
  1574  00FFE1  45                 	db	69	;'E'
  1575  00FFE2  30                 	db	48	;'0'
  1576  00FFE3  0D                 	db	13
  1577  00FFE4  0A                 	db	10
  1578  00FFE5  00                 	db	0
  1579  00FFE6                     STR_1:
  1580  00FFE6  41                 	db	65	;'A'
  1581  00FFE7  54                 	db	84	;'T'
  1582  00FFE8  0D                 	db	13
  1583  00FFE9  0A                 	db	10
  1584  00FFEA  00                 	db	0
  1585  00FFEB  41                 	db	65	;'A'
  1586  00FFEC  54                 	db	84	;'T'
  1587  00FFED  41                 	db	65	;'A'
  1588  00FFEE  0D                 	db	13
  1589  00FFEF  00                 	db	0
  1590  00FFF0                     STR_6:
  1591  00FFF0  41                 	db	65	;'A'
  1592  00FFF1  54                 	db	84	;'T'
  1593  00FFF2  48                 	db	72	;'H'
  1594  00FFF3  0D                 	db	13
  1595  00FFF4  00                 	db	0
  1596  00FFF5                     STR_24:
  1597  00FFF5  2E                 	db	46
  1598  00FFF6  00                 	db	0
  1599  0000                     
  1600                           ; #config settings
  1601  00FFF7  00                 	db	0	; dummy byte at the end
  1602  0000                     
  1603                           	psect	cinit
  1604  0022E4                     __pcinit:
  1605                           	opt stack 0
  1606  0022E4                     start_initialization:
  1607                           	opt stack 0
  1608  0022E4                     __initialization:
  1609                           	opt stack 0
  1610                           
  1611                           ; Initialize objects allocated to BANK5 (80 bytes)
  1612                           ; load TBLPTR registers with __pidataBANK5
  1613  0022E4  0E08               	movlw	low __pidataBANK5
  1614  0022E6  6EF6               	movwf	tblptrl,c
  1615  0022E8  0E5F               	movlw	high __pidataBANK5
  1616  0022EA  6EF7               	movwf	tblptrh,c
  1617  0022EC  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1618  0022EE  6EF8               	movwf	tblptru,c
  1619  0022F0  EE05  F0A4         	lfsr	0,__pdataBANK5
  1620  0022F4  EE10 F050          	lfsr	1,80
  1621  0022F8                     copy_data0:
  1622  0022F8  0009               	tblrd		*+
  1623  0022FA  CFF5 FFEE          	movff	tablat,postinc0
  1624  0022FE  50E5               	movf	postdec1,w,c
  1625  002300  50E1               	movf	fsr1l,w,c
  1626  002302  E1FA               	bnz	copy_data0
  1627                           
  1628                           ; Initialize objects allocated to BANK3 (60 bytes)
  1629                           ; load TBLPTR registers with __pidataBANK3
  1630  002304  0EDE               	movlw	low __pidataBANK3
  1631  002306  6EF6               	movwf	tblptrl,c
  1632  002308  0E64               	movlw	high __pidataBANK3
  1633  00230A  6EF7               	movwf	tblptrh,c
  1634  00230C  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1635  00230E  6EF8               	movwf	tblptru,c
  1636  002310  EE03  F0C3         	lfsr	0,__pdataBANK3
  1637  002314  EE10 F03C          	lfsr	1,60
  1638  002318                     copy_data1:
  1639  002318  0009               	tblrd		*+
  1640  00231A  CFF5 FFEE          	movff	tablat,postinc0
  1641  00231E  50E5               	movf	postdec1,w,c
  1642  002320  50E1               	movf	fsr1l,w,c
  1643  002322  E1FA               	bnz	copy_data1
  1644                           
  1645                           ; Initialize objects allocated to BANK2 (15 bytes)
  1646                           ; load TBLPTR registers with __pidataBANK2
  1647  002324  0E1A               	movlw	low __pidataBANK2
  1648  002326  6EF6               	movwf	tblptrl,c
  1649  002328  0E6D               	movlw	high __pidataBANK2
  1650  00232A  6EF7               	movwf	tblptrh,c
  1651  00232C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1652  00232E  6EF8               	movwf	tblptru,c
  1653  002330  EE02  F0F1         	lfsr	0,__pdataBANK2
  1654  002334  EE10 F00F          	lfsr	1,15
  1655  002338                     copy_data2:
  1656  002338  0009               	tblrd		*+
  1657  00233A  CFF5 FFEE          	movff	tablat,postinc0
  1658  00233E  50E5               	movf	postdec1,w,c
  1659  002340  50E1               	movf	fsr1l,w,c
  1660  002342  E1FA               	bnz	copy_data2
  1661                           
  1662                           ; Initialize objects allocated to BANK1 (2 bytes)
  1663                           ; load TBLPTR registers with __pidataBANK1
  1664  002344  0ECB               	movlw	low __pidataBANK1
  1665  002346  6EF6               	movwf	tblptrl,c
  1666  002348  0E6D               	movlw	high __pidataBANK1
  1667  00234A  6EF7               	movwf	tblptrh,c
  1668  00234C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1669  00234E  6EF8               	movwf	tblptru,c
  1670  002350  0009               	tblrd		*+	;fetch initializer
  1671  002352  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1672  002356  0009               	tblrd		*+	;fetch initializer
  1673  002358  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1674                           
  1675                           ; Initialize objects allocated to BANK4 (10 bytes)
  1676                           ; load TBLPTR registers with __pidataBANK4
  1677  00235C  0E5C               	movlw	low __pidataBANK4
  1678  00235E  6EF6               	movwf	tblptrl,c
  1679  002360  0E6D               	movlw	high __pidataBANK4
  1680  002362  6EF7               	movwf	tblptrh,c
  1681  002364  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1682  002366  6EF8               	movwf	tblptru,c
  1683  002368  EE04  F0F6         	lfsr	0,__pdataBANK4
  1684  00236C  EE10 F00A          	lfsr	1,10
  1685  002370                     copy_data3:
  1686  002370  0009               	tblrd		*+
  1687  002372  CFF5 FFEE          	movff	tablat,postinc0
  1688  002376  50E5               	movf	postdec1,w,c
  1689  002378  50E1               	movf	fsr1l,w,c
  1690  00237A  E1FA               	bnz	copy_data3
  1691                           
  1692                           ; Initialize objects allocated to BANK0 (3 bytes)
  1693                           ; load TBLPTR registers with __pidataBANK0
  1694  00237C  0EC8               	movlw	low __pidataBANK0
  1695  00237E  6EF6               	movwf	tblptrl,c
  1696  002380  0E6D               	movlw	high __pidataBANK0
  1697  002382  6EF7               	movwf	tblptrh,c
  1698  002384  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1699  002386  6EF8               	movwf	tblptru,c
  1700  002388  0009               	tblrd		*+	;fetch initializer
  1701  00238A  CFF5 F0E0          	movff	tablat,__pdataBANK0
  1702  00238E  0009               	tblrd		*+	;fetch initializer
  1703  002390  CFF5 F0E1          	movff	tablat,__pdataBANK0+1
  1704  002394  0009               	tblrd		*+	;fetch initializer
  1705  002396  CFF5 F0E2          	movff	tablat,__pdataBANK0+2
  1706                           
  1707                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1708  00239A  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1709  00239E  EE13 F020          	lfsr	1,800
  1710  0023A2                     clear_0:
  1711  0023A2  6AEE               	clrf	postinc0,c
  1712  0023A4  50E5               	movf	postdec1,w,c
  1713  0023A6  50E1               	movf	fsr1l,w,c
  1714  0023A8  E1FC               	bnz	clear_0
  1715  0023AA  50E2               	movf	fsr1h,w,c
  1716  0023AC  E1FA               	bnz	clear_0
  1717                           
  1718                           ; Clear objects allocated to BANK9 (200 bytes)
  1719  0023AE  EE09  F000         	lfsr	0,__pbssBANK9
  1720  0023B2  0EC8               	movlw	200
  1721  0023B4                     clear_1:
  1722  0023B4  6AEE               	clrf	postinc0,c
  1723  0023B6  06E8               	decf	wreg,f,c
  1724  0023B8  E1FD               	bnz	clear_1
  1725                           
  1726                           ; Clear objects allocated to BANK8 (200 bytes)
  1727  0023BA  EE08  F000         	lfsr	0,__pbssBANK8
  1728  0023BE  0EC8               	movlw	200
  1729  0023C0                     clear_2:
  1730  0023C0  6AEE               	clrf	postinc0,c
  1731  0023C2  06E8               	decf	wreg,f,c
  1732  0023C4  E1FD               	bnz	clear_2
  1733                           
  1734                           ; Clear objects allocated to BANK7 (246 bytes)
  1735  0023C6  EE07  F000         	lfsr	0,__pbssBANK7
  1736  0023CA  0EF6               	movlw	246
  1737  0023CC                     clear_3:
  1738  0023CC  6AEE               	clrf	postinc0,c
  1739  0023CE  06E8               	decf	wreg,f,c
  1740  0023D0  E1FD               	bnz	clear_3
  1741                           
  1742                           ; Clear objects allocated to BANK6 (220 bytes)
  1743  0023D2  EE06  F000         	lfsr	0,__pbssBANK6
  1744  0023D6  0EDC               	movlw	220
  1745  0023D8                     clear_4:
  1746  0023D8  6AEE               	clrf	postinc0,c
  1747  0023DA  06E8               	decf	wreg,f,c
  1748  0023DC  E1FD               	bnz	clear_4
  1749                           
  1750                           ; Clear objects allocated to BANK5 (164 bytes)
  1751  0023DE  EE05  F000         	lfsr	0,__pbssBANK5
  1752  0023E2  0EA4               	movlw	164
  1753  0023E4                     clear_5:
  1754  0023E4  6AEE               	clrf	postinc0,c
  1755  0023E6  06E8               	decf	wreg,f,c
  1756  0023E8  E1FD               	bnz	clear_5
  1757                           
  1758                           ; Clear objects allocated to BANK3 (195 bytes)
  1759  0023EA  EE03  F000         	lfsr	0,__pbssBANK3
  1760  0023EE  0EC3               	movlw	195
  1761  0023F0                     clear_6:
  1762  0023F0  6AEE               	clrf	postinc0,c
  1763  0023F2  06E8               	decf	wreg,f,c
  1764  0023F4  E1FD               	bnz	clear_6
  1765                           
  1766                           ; Clear objects allocated to BANK2 (40 bytes)
  1767  0023F6  EE02  F0C9         	lfsr	0,__pbssBANK2
  1768  0023FA  0E28               	movlw	40
  1769  0023FC                     clear_7:
  1770  0023FC  6AEE               	clrf	postinc0,c
  1771  0023FE  06E8               	decf	wreg,f,c
  1772  002400  E1FD               	bnz	clear_7
  1773                           
  1774                           ; Clear objects allocated to BANK1 (53 bytes)
  1775  002402  EE01  F0C9         	lfsr	0,__pbssBANK1
  1776  002406  0E35               	movlw	53
  1777  002408                     clear_8:
  1778  002408  6AEE               	clrf	postinc0,c
  1779  00240A  06E8               	decf	wreg,f,c
  1780  00240C  E1FD               	bnz	clear_8
  1781                           
  1782                           ; Clear objects allocated to BANK4 (182 bytes)
  1783  00240E  EE04  F040         	lfsr	0,__pbssBANK4
  1784  002412  0EB6               	movlw	182
  1785  002414                     clear_9:
  1786  002414  6AEE               	clrf	postinc0,c
  1787  002416  06E8               	decf	wreg,f,c
  1788  002418  E1FD               	bnz	clear_9
  1789                           
  1790                           ; Clear objects allocated to BANK0 (48 bytes)
  1791  00241A  EE00  F0B0         	lfsr	0,__pbssBANK0
  1792  00241E  0E30               	movlw	48
  1793  002420                     clear_10:
  1794  002420  6AEE               	clrf	postinc0,c
  1795  002422  06E8               	decf	wreg,f,c
  1796  002424  E1FD               	bnz	clear_10
  1797                           
  1798                           ; Clear objects allocated to COMRAM (31 bytes)
  1799  002426  EE00  F023         	lfsr	0,__pbssCOMRAM
  1800  00242A  0E1F               	movlw	31
  1801  00242C                     clear_11:
  1802  00242C  6AEE               	clrf	postinc0,c
  1803  00242E  06E8               	decf	wreg,f,c
  1804  002430  E1FD               	bnz	clear_11
  1805  002432                     end_of_initialization:
  1806                           	opt stack 0
  1807  002432                     __end_of__initialization:
  1808                           	opt stack 0
  1809  002432  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1810  002434  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1811  002436  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1812  002438  6EF8               	movwf	tblptru,c
  1813  00243A  0100               	movlb	0
  1814  00243C  EF9C  F036         	goto	_main	;jump to C main() function
  1815                           tblptru	equ	0xFF8
  1816                           tblptrh	equ	0xFF7
  1817                           tblptrl	equ	0xFF6
  1818                           tablat	equ	0xFF5
  1819                           postinc0	equ	0xFEE
  1820                           wreg	equ	0xFE8
  1821                           postdec1	equ	0xFE5
  1822                           fsr1h	equ	0xFE2
  1823                           fsr1l	equ	0xFE1
  1824                           
  1825                           	psect	bssCOMRAM
  1826  000023                     __pbssCOMRAM:
  1827                           	opt stack 0
  1828  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1829                           	opt stack 0
  1830  000023                     	ds	2
  1831  000025                     _USBDeferOUTDataStagePackets:
  1832                           	opt stack 0
  1833  000025                     	ds	1
  1834  000026                     _USBDeferINDataStagePackets:
  1835                           	opt stack 0
  1836  000026                     	ds	1
  1837  000027                     _USBStatusStageEnabledFlag2:
  1838                           	opt stack 0
  1839  000027                     	ds	1
  1840  000028                     _USBStatusStageEnabledFlag1:
  1841                           	opt stack 0
  1842  000028                     	ds	1
  1843  000029                     _USBStatusStageTimeoutCounter:
  1844                           	opt stack 0
  1845  000029                     	ds	1
  1846  00002A                     InitGprsNetwork@GprsNetInitNextState:
  1847                           	opt stack 0
  1848  00002A                     	ds	1
  1849  00002B                     _ComChecCompleted:
  1850                           	opt stack 0
  1851  00002B                     	ds	1
  1852  00002C                     Uart_Uart1RxIsr@UartRxData:
  1853                           	opt stack 0
  1854  00002C                     	ds	1
  1855  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1856                           	opt stack 0
  1857  00002D                     	ds	1
  1858  00002E                     MdmCntSm@MdmCntState:
  1859                           	opt stack 0
  1860  00002E                     	ds	1
  1861  00002F                     RiSm@MdmDrvState:
  1862                           	opt stack 0
  1863  00002F                     	ds	1
  1864  000030                     _Mmd_RingIndicator:
  1865                           	opt stack 0
  1866  000030                     	ds	1
  1867  000031                     I2c_ReadData@ReadStatus:
  1868                           	opt stack 0
  1869  000031                     	ds	1
  1870  000032                     I2c_ReadData@TentativeCounter:
  1871                           	opt stack 0
  1872  000032                     	ds	1
  1873  000033                     I2c_ReadData@DataCounter:
  1874                           	opt stack 0
  1875  000033                     	ds	1
  1876  000034                     I2c_ReadData@I2cReadState:
  1877                           	opt stack 0
  1878  000034                     	ds	1
  1879  000035                     I2c_WriteData@WriteStatus:
  1880                           	opt stack 0
  1881  000035                     	ds	1
  1882  000036                     I2c_WriteData@TentativeCounter:
  1883                           	opt stack 0
  1884  000036                     	ds	1
  1885  000037                     I2c_WriteData@I2cNextState:
  1886                           	opt stack 0
  1887  000037                     	ds	1
  1888  000038                     I2c_WriteData@I2cWriteState:
  1889                           	opt stack 0
  1890  000038                     	ds	1
  1891  000039                     _I2cReadDataEvt:
  1892                           	opt stack 0
  1893  000039                     	ds	1
  1894  00003A                     _NewStringMdmTerminal:
  1895                           	opt stack 0
  1896  00003A                     	ds	1
  1897  00003B                     _NewMdmEvtParserRequest:
  1898                           	opt stack 0
  1899  00003B                     	ds	1
  1900  00003C                     _NewStringReceived:
  1901                           	opt stack 0
  1902  00003C                     	ds	1
  1903  00003D                     _MdmResetRequest:
  1904                           	opt stack 0
  1905  00003D                     	ds	1
  1906  00003E                     _CallClosedEvent:
  1907                           	opt stack 0
  1908  00003E                     	ds	1
  1909  00003F                     _IncomingCallEvent:
  1910                           	opt stack 0
  1911  00003F                     	ds	1
  1912  000040                     _NewSmsEvent:
  1913                           	opt stack 0
  1914  000040                     	ds	1
  1915  000041                     _ActivateRiDetection:
  1916                           	opt stack 0
  1917  000041                     	ds	1
  1918                           tblptru	equ	0xFF8
  1919                           tblptrh	equ	0xFF7
  1920                           tblptrl	equ	0xFF6
  1921                           tablat	equ	0xFF5
  1922                           postinc0	equ	0xFEE
  1923                           wreg	equ	0xFE8
  1924                           postdec1	equ	0xFE5
  1925                           fsr1h	equ	0xFE2
  1926                           fsr1l	equ	0xFE1
  1927                           
  1928                           	psect	bssBANK0
  1929  0000B0                     __pbssBANK0:
  1930                           	opt stack 0
  1931  0000B0                     _inPipes:
  1932                           	opt stack 0
  1933  0000B0                     	ds	6
  1934  0000B6                     _pBDTEntryIn:
  1935                           	opt stack 0
  1936  0000B6                     	ds	6
  1937  0000BC                     _CDCDataOutHandle:
  1938                           	opt stack 0
  1939  0000BC                     	ds	2
  1940  0000BE                     _pBDTEntryEP0OutNext:
  1941                           	opt stack 0
  1942  0000BE                     	ds	2
  1943  0000C0                     _pBDTEntryEP0OutCurrent:
  1944                           	opt stack 0
  1945  0000C0                     	ds	2
  1946  0000C2                     _RxLen:
  1947                           	opt stack 0
  1948  0000C2                     	ds	2
  1949  0000C4                     findEmptySpot@currentState:
  1950                           	opt stack 0
  1951  0000C4                     	ds	1
  1952  0000C5                     isNumberInMemory@currentState:
  1953                           	opt stack 0
  1954  0000C5                     	ds	1
  1955  0000C6                     Eeprom_Reset@memoryAddress:
  1956                           	opt stack 0
  1957  0000C6                     	ds	1
  1958  0000C7                     _cdc_tx_len:
  1959                           	opt stack 0
  1960  0000C7                     	ds	1
  1961  0000C8                     _cdc_trf_state:
  1962                           	opt stack 0
  1963  0000C8                     	ds	1
  1964  0000C9                     _cdc_rx_len:
  1965                           	opt stack 0
  1966  0000C9                     	ds	1
  1967  0000CA                     _USBDeferStatusStagePacket:
  1968                           	opt stack 0
  1969  0000CA                     	ds	1
  1970  0000CB                     _endpoint_number:
  1971                           	opt stack 0
  1972  0000CB                     	ds	1
  1973  0000CC                     _controlTransferState:
  1974                           	opt stack 0
  1975  0000CC                     	ds	1
  1976  0000CD                     _shortPacketStatus:
  1977                           	opt stack 0
  1978  0000CD                     	ds	1
  1979  0000CE                     _USBDeviceState:
  1980                           	opt stack 0
  1981  0000CE                     	ds	1
  1982  0000CF                     _I2cComSts:
  1983                           	opt stack 0
  1984  0000CF                     	ds	1
  1985  0000D0                     HttpGetMethod@GetMethodNextState:
  1986                           	opt stack 0
  1987  0000D0                     	ds	1
  1988  0000D1                     _MdmStatus:
  1989                           	opt stack 0
  1990  0000D1                     	ds	1
  1991  0000D2                     _PhoneNumbLen:
  1992                           	opt stack 0
  1993  0000D2                     	ds	1
  1994  0000D3                     _SmsLen:
  1995                           	opt stack 0
  1996  0000D3                     	ds	1
  1997  0000D4                     _SystemState:
  1998                           	opt stack 0
  1999  0000D4                     	ds	1
  2000  0000D5                     _USTATcopy:
  2001                           	opt stack 0
  2002  0000D5                     	ds	1
  2003  0000D6                     _USBActiveConfiguration:
  2004                           	opt stack 0
  2005  0000D6                     	ds	1
  2006  0000D7                     _I2cWriteDataEvt:
  2007                           	opt stack 0
  2008  0000D7                     	ds	1
  2009  0000D8                     _InitNetwork:
  2010                           	opt stack 0
  2011  0000D8                     	ds	1
  2012  0000D9                     _SmsTxtReady:
  2013                           	opt stack 0
  2014  0000D9                     	ds	1
  2015  0000DA                     _GetSmsText:
  2016                           	opt stack 0
  2017  0000DA                     	ds	1
  2018  0000DB                     _SmsEvent:
  2019                           	opt stack 0
  2020  0000DB                     	ds	1
  2021  0000DC                     _ClipEvent:
  2022                           	opt stack 0
  2023  0000DC                     	ds	1
  2024  0000DD                     _RingEvent:
  2025                           	opt stack 0
  2026  0000DD                     	ds	1
  2027  0000DE                     _SendSmsEvent:
  2028                           	opt stack 0
  2029  0000DE                     	ds	1
  2030  0000DF                     _MdmOnOffPulseRequest:
  2031                           	opt stack 0
  2032  0000DF                     	ds	1
  2033                           tblptru	equ	0xFF8
  2034                           tblptrh	equ	0xFF7
  2035                           tblptrl	equ	0xFF6
  2036                           tablat	equ	0xFF5
  2037                           postinc0	equ	0xFEE
  2038                           wreg	equ	0xFE8
  2039                           postdec1	equ	0xFE5
  2040                           fsr1h	equ	0xFE2
  2041                           fsr1l	equ	0xFE1
  2042                           
  2043                           	psect	dataBANK0
  2044  0000E0                     __pdataBANK0:
  2045                           	opt stack 0
  2046  0000E0                     findEmptySpot@currentPosition:
  2047                           	opt stack 0
  2048  0000E0                     	ds	1
  2049  0000E1                     isNumberInMemory@currentPosition:
  2050                           	opt stack 0
  2051  0000E1                     	ds	1
  2052  0000E2                     MyApp_Task@isCmdSuccessfull:
  2053                           	opt stack 0
  2054  0000E2                     	ds	1
  2055                           tblptru	equ	0xFF8
  2056                           tblptrh	equ	0xFF7
  2057                           tblptrl	equ	0xFF6
  2058                           tablat	equ	0xFF5
  2059                           postinc0	equ	0xFEE
  2060                           wreg	equ	0xFE8
  2061                           postdec1	equ	0xFE5
  2062                           fsr1h	equ	0xFE2
  2063                           fsr1l	equ	0xFE1
  2064                           
  2065                           	psect	bssBANK1
  2066  0001C9                     __pbssBANK1:
  2067                           	opt stack 0
  2068  0001C9                     _outPipes:
  2069                           	opt stack 0
  2070  0001C9                     	ds	8
  2071  0001D1                     _CDCDataInHandle:
  2072                           	opt stack 0
  2073  0001D1                     	ds	2
  2074  0001D3                     triggerCmdFsm@currentState:
  2075                           	opt stack 0
  2076  0001D3                     	ds	1
  2077  0001D4                     resCmdFsm@currentState:
  2078                           	opt stack 0
  2079  0001D4                     	ds	1
  2080  0001D5                     initFsm@currentState:
  2081                           	opt stack 0
  2082  0001D5                     	ds	1
  2083  0001D6                     initEeprom@currentState:
  2084                           	opt stack 0
  2085  0001D6                     	ds	1
  2086  0001D7                     initGprsModem@currentState:
  2087                           	opt stack 0
  2088  0001D7                     	ds	1
  2089  0001D8                     delCmdFsm@currentState:
  2090                           	opt stack 0
  2091  0001D8                     	ds	1
  2092  0001D9                     addCmdFsm@currentState:
  2093                           	opt stack 0
  2094  0001D9                     	ds	1
  2095  0001DA                     MyApp_Task@currentState:
  2096                           	opt stack 0
  2097  0001DA                     	ds	1
  2098  0001DB                     GsmGprsTerminal@SMS:
  2099                           	opt stack 0
  2100  0001DB                     	ds	1
  2101  0001DC                     _cdc_mem_type:
  2102                           	opt stack 0
  2103  0001DC                     	ds	1
  2104  0001DD                     _USBTicksSinceSuspendEnd:
  2105                           	opt stack 0
  2106  0001DD                     	ds	1
  2107  0001DE                     _BothEP0OutUOWNsSet:
  2108                           	opt stack 0
  2109  0001DE                     	ds	1
  2110  0001DF                     _USBBusIsSuspended:
  2111                           	opt stack 0
  2112  0001DF                     	ds	1
  2113  0001E0                     _RemoteWakeup:
  2114                           	opt stack 0
  2115  0001E0                     	ds	1
  2116  0001E1                     I2cSlv_QueryI2cData@Ret:
  2117                           	opt stack 0
  2118  0001E1                     	ds	1
  2119  0001E2                     I2cSlv_QueryI2cData@I2cOpState:
  2120                           	opt stack 0
  2121  0001E2                     	ds	1
  2122  0001E3                     I2cSendMsgSm@I2cComState:
  2123                           	opt stack 0
  2124  0001E3                     	ds	1
  2125  0001E4                     _I2cBusStatus:
  2126                           	opt stack 0
  2127  0001E4                     	ds	1
  2128  0001E5                     HttpGetMethod@GetMOutSts:
  2129                           	opt stack 0
  2130  0001E5                     	ds	1
  2131  0001E6                     HttpGetMethod@GetMethodState:
  2132                           	opt stack 0
  2133  0001E6                     	ds	1
  2134  0001E7                     InitGprsNetwork@GprsNetInitState:
  2135                           	opt stack 0
  2136  0001E7                     	ds	1
  2137  0001E8                     _PostMethod:
  2138                           	opt stack 0
  2139  0001E8                     	ds	1
  2140  0001E9                     _HttpGetMethodSts:
  2141                           	opt stack 0
  2142  0001E9                     	ds	1
  2143  0001EA                     _GprsNetworkSts:
  2144                           	opt stack 0
  2145  0001EA                     	ds	1
  2146  0001EB                     _ApnLenLocal:
  2147                           	opt stack 0
  2148  0001EB                     	ds	1
  2149  0001EC                     SendSmsSm@SendSms_NextState:
  2150                           	opt stack 0
  2151  0001EC                     	ds	1
  2152  0001ED                     SendSmsSm@SendSms_State:
  2153                           	opt stack 0
  2154  0001ED                     	ds	1
  2155  0001EE                     GetSmsSm@GetSmsState:
  2156                           	opt stack 0
  2157  0001EE                     	ds	1
  2158  0001EF                     ConfigureModem@NextState:
  2159                           	opt stack 0
  2160  0001EF                     	ds	1
  2161  0001F0                     ConfigureModem@MdmConfigState:
  2162                           	opt stack 0
  2163  0001F0                     	ds	1
  2164  0001F1                     TurnOnModem@TurnOnMdmState:
  2165                           	opt stack 0
  2166  0001F1                     	ds	1
  2167  0001F2                     CheckModem@CheckMdmSts:
  2168                           	opt stack 0
  2169  0001F2                     	ds	1
  2170  0001F3                     _AlarmEvent:
  2171                           	opt stack 0
  2172  0001F3                     	ds	1
  2173  0001F4                     _Led3OutSts:
  2174                           	opt stack 0
  2175  0001F4                     	ds	1
  2176  0001F5                     _Led3Sts:
  2177                           	opt stack 0
  2178  0001F5                     	ds	1
  2179  0001F6                     _Led2OutSts:
  2180                           	opt stack 0
  2181  0001F6                     	ds	1
  2182  0001F7                     _Led2Sts:
  2183                           	opt stack 0
  2184  0001F7                     	ds	1
  2185  0001F8                     _Led1OutSts:
  2186                           	opt stack 0
  2187  0001F8                     	ds	1
  2188  0001F9                     _Led1Sts:
  2189                           	opt stack 0
  2190  0001F9                     	ds	1
  2191  0001FA                     _ReadAddress:
  2192                           	opt stack 0
  2193  0001FA                     	ds	1
  2194  0001FB                     I2cDummyTx@DummyBuffer:
  2195                           	opt stack 0
  2196  0001FB                     	ds	1
  2197  0001FC                     _GetMethod:
  2198                           	opt stack 0
  2199  0001FC                     	ds	1
  2200  0001FD                     _MdmStsReady:
  2201                           	opt stack 0
  2202  0001FD                     	ds	1
  2203                           tblptru	equ	0xFF8
  2204                           tblptrh	equ	0xFF7
  2205                           tblptrl	equ	0xFF6
  2206                           tablat	equ	0xFF5
  2207                           postinc0	equ	0xFEE
  2208                           wreg	equ	0xFE8
  2209                           postdec1	equ	0xFE5
  2210                           fsr1h	equ	0xFE2
  2211                           fsr1l	equ	0xFE1
  2212                           
  2213                           	psect	dataBANK1
  2214  0001FE                     __pdataBANK1:
  2215                           	opt stack 0
  2216  0001FE                     _isMemoryEmpty:
  2217                           	opt stack 0
  2218  0001FE                     	ds	1
  2219  0001FF                     InitGprsNetwork@GprsInitSts:
  2220                           	opt stack 0
  2221  0001FF                     	ds	1
  2222                           tblptru	equ	0xFF8
  2223                           tblptrh	equ	0xFF7
  2224                           tblptrl	equ	0xFF6
  2225                           tablat	equ	0xFF5
  2226                           postinc0	equ	0xFEE
  2227                           wreg	equ	0xFE8
  2228                           postdec1	equ	0xFE5
  2229                           fsr1h	equ	0xFE2
  2230                           fsr1l	equ	0xFE1
  2231                           
  2232                           	psect	bssBANK2
  2233  0002C9                     __pbssBANK2:
  2234                           	opt stack 0
  2235  0002C9                     _pCDCDst:
  2236                           	opt stack 0
  2237  0002C9                     	ds	3
  2238  0002CC                     _pCDCSrc:
  2239                           	opt stack 0
  2240  0002CC                     	ds	3
  2241  0002CF                     _ep_data_out:
  2242                           	opt stack 0
  2243  0002CF                     	ds	3
  2244  0002D2                     _ep_data_in:
  2245                           	opt stack 0
  2246  0002D2                     	ds	3
  2247  0002D5                     _pDst:
  2248                           	opt stack 0
  2249  0002D5                     	ds	2
  2250  0002D7                     UpdateSchFlag@InterruptCounter:
  2251                           	opt stack 0
  2252  0002D7                     	ds	2
  2253  0002D9                     MdmCntSm@Counter:
  2254                           	opt stack 0
  2255  0002D9                     	ds	2
  2256  0002DB                     RiSm@Counter:
  2257                           	opt stack 0
  2258  0002DB                     	ds	2
  2259  0002DD                     _ExtInt1IsrCallback:
  2260                           	opt stack 0
  2261  0002DD                     	ds	2
  2262  0002DF                     _ExtInt0IsrCallback:
  2263                           	opt stack 0
  2264  0002DF                     	ds	2
  2265  0002E1                     _RtccIsrCallback:
  2266                           	opt stack 0
  2267  0002E1                     	ds	2
  2268  0002E3                     _Tmr4IsrCallback:
  2269                           	opt stack 0
  2270  0002E3                     	ds	2
  2271  0002E5                     _Tmr2IsrCallback:
  2272                           	opt stack 0
  2273  0002E5                     	ds	2
  2274  0002E7                     Term_MainSm@TermMainSmState:
  2275                           	opt stack 0
  2276  0002E7                     	ds	1
  2277  0002E8                     Terminal@FormatOption:
  2278                           	opt stack 0
  2279  0002E8                     	ds	1
  2280  0002E9                     Terminal@SlaveAddr:
  2281                           	opt stack 0
  2282  0002E9                     	ds	1
  2283  0002EA                     Terminal@PackageLen:
  2284                           	opt stack 0
  2285  0002EA                     	ds	1
  2286  0002EB                     Terminal@TermState:
  2287                           	opt stack 0
  2288  0002EB                     	ds	1
  2289  0002EC                     	ds	1
  2290  0002ED                     _IsUsbNumberReceived:
  2291                           	opt stack 0
  2292  0002ED                     	ds	1
  2293  0002EE                     _control_signal_bitmap:
  2294                           	opt stack 0
  2295  0002EE                     	ds	1
  2296  0002EF                     _USBAlternateInterface:
  2297                           	opt stack 0
  2298  0002EF                     	ds	2
  2299                           tblptru	equ	0xFF8
  2300                           tblptrh	equ	0xFF7
  2301                           tblptrl	equ	0xFF6
  2302                           tablat	equ	0xFF5
  2303                           postinc0	equ	0xFEE
  2304                           wreg	equ	0xFE8
  2305                           postdec1	equ	0xFE5
  2306                           fsr1h	equ	0xFE2
  2307                           fsr1l	equ	0xFE1
  2308                           
  2309                           	psect	dataBANK2
  2310  0002F1                     __pdataBANK2:
  2311                           	opt stack 0
  2312  0002F1                     Terminal@EchoOption:
  2313                           	opt stack 0
  2314  0002F1                     	ds	1
  2315  0002F2                     _MainSystemTimebaseFlag:
  2316                           	opt stack 0
  2317  0002F2                     	ds	1
  2318  0002F3                     _ConnTimeout:
  2319                           	opt stack 0
  2320  0002F3                     	ds	11
  2321  0002FE                     _relayBuffer:
  2322                           	opt stack 0
  2323  0002FE                     	ds	2
  2324                           tblptru	equ	0xFF8
  2325                           tblptrh	equ	0xFF7
  2326                           tblptrl	equ	0xFF6
  2327                           tablat	equ	0xFF5
  2328                           postinc0	equ	0xFEE
  2329                           wreg	equ	0xFE8
  2330                           postdec1	equ	0xFE5
  2331                           fsr1h	equ	0xFE2
  2332                           fsr1l	equ	0xFE1
  2333                           
  2334                           	psect	bssBANK3
  2335  000300                     __pbssBANK3:
  2336                           	opt stack 0
  2337  000300                     _Rtcm_RtccAlarm:
  2338                           	opt stack 0
  2339  000300                     	ds	6
  2340  000306                     _pBDTEntryOut:
  2341                           	opt stack 0
  2342  000306                     	ds	6
  2343  00030C                     _BaudRateGen:
  2344                           	opt stack 0
  2345  00030C                     	ds	4
  2346  000310                     _USB1msTickCount:
  2347                           	opt stack 0
  2348  000310                     	ds	4
  2349  000314                     _OsTmr_OsTickCounter:
  2350                           	opt stack 0
  2351  000314                     	ds	4
  2352  000318                     _secondCounter:
  2353                           	opt stack 0
  2354  000318                     	ds	2
  2355  00031A                     _UsbMasterPhoneNumberLen:
  2356                           	opt stack 0
  2357  00031A                     	ds	2
  2358  00031C                     _ApnLocal:
  2359                           	opt stack 0
  2360  00031C                     	ds	2
  2361  00031E                     ConfigureModem@DelayCounter:
  2362                           	opt stack 0
  2363  00031E                     	ds	2
  2364  000320                     ConfigureModem@DelayValueMs:
  2365                           	opt stack 0
  2366  000320                     	ds	2
  2367  000322                     TurnOnModem@Counter:
  2368                           	opt stack 0
  2369  000322                     	ds	2
  2370  000324                     _UartConfig:
  2371                           	opt stack 0
  2372  000324                     	ds	21
  2373  000339                     _readBuffer:
  2374                           	opt stack 0
  2375  000339                     	ds	13
  2376  000346                     _receivedNumber:
  2377                           	opt stack 0
  2378  000346                     	ds	13
  2379  000353                     I2cSlv_QueryI2cData@TimeoutTimer:
  2380                           	opt stack 0
  2381  000353                     	ds	11
  2382  00035E                     _I2cConfig:
  2383                           	opt stack 0
  2384  00035E                     	ds	10
  2385  000368                     _Led2Blink:
  2386                           	opt stack 0
  2387  000368                     	ds	9
  2388  000371                     _Led1Blink:
  2389                           	opt stack 0
  2390  000371                     	ds	9
  2391  00037A                     _dummy_encapsulated_cmd_response:
  2392                           	opt stack 0
  2393  00037A                     	ds	8
  2394  000382                     _line_coding:
  2395                           	opt stack 0
  2396  000382                     	ds	7
  2397  000389                     _Led3Pulse:
  2398                           	opt stack 0
  2399  000389                     	ds	6
  2400  00038F                     _Led2Pulse:
  2401                           	opt stack 0
  2402  00038F                     	ds	6
  2403  000395                     _Led1Pulse:
  2404                           	opt stack 0
  2405  000395                     	ds	6
  2406  00039B                     _I2cRxPacket:
  2407                           	opt stack 0
  2408  00039B                     	ds	6
  2409  0003A1                     _I2cTxPacket:
  2410                           	opt stack 0
  2411  0003A1                     	ds	5
  2412  0003A6                     _HttpGetDataLocal:
  2413                           	opt stack 0
  2414  0003A6                     	ds	5
  2415  0003AB                     _memoryPreamble:
  2416                           	opt stack 0
  2417  0003AB                     	ds	4
  2418  0003AF                     Terminal@Addr:
  2419                           	opt stack 0
  2420  0003AF                     	ds	4
  2421  0003B3                     Terminal@Len:
  2422                           	opt stack 0
  2423  0003B3                     	ds	4
  2424  0003B7                     _AlCfg:
  2425                           	opt stack 0
  2426  0003B7                     	ds	4
  2427  0003BB                     _RtcConfig:
  2428                           	opt stack 0
  2429  0003BB                     	ds	4
  2430  0003BF                     initGprsModem@modemCounter:
  2431                           	opt stack 0
  2432  0003BF                     	ds	2
  2433  0003C1                     _setupCallTicks:
  2434                           	opt stack 0
  2435  0003C1                     	ds	2
  2436                           tblptru	equ	0xFF8
  2437                           tblptrh	equ	0xFF7
  2438                           tblptrl	equ	0xFF6
  2439                           tablat	equ	0xFF5
  2440                           postinc0	equ	0xFEE
  2441                           wreg	equ	0xFE8
  2442                           postdec1	equ	0xFE5
  2443                           fsr1h	equ	0xFE2
  2444                           fsr1l	equ	0xFE1
  2445                           
  2446                           	psect	dataBANK3
  2447  0003C3                     __pdataBANK3:
  2448                           	opt stack 0
  2449  0003C3                     ModemEvtParser@F9115:
  2450                           	opt stack 0
  2451  0003C3                     	ds	5
  2452  0003C8                     ModemEvtParser@F9113:
  2453                           	opt stack 0
  2454  0003C8                     	ds	5
  2455  0003CD                     ModemEvtParser@F9111:
  2456                           	opt stack 0
  2457  0003CD                     	ds	4
  2458  0003D1                     Term_MainSm@TermDelay:
  2459                           	opt stack 0
  2460  0003D1                     	ds	11
  2461  0003DC                     _ConnWait:
  2462                           	opt stack 0
  2463  0003DC                     	ds	11
  2464  0003E7                     SendSmsSm@SwTimer:
  2465                           	opt stack 0
  2466  0003E7                     	ds	11
  2467  0003F2                     CheckModem@Timeout:
  2468                           	opt stack 0
  2469  0003F2                     	ds	11
  2470  0003FD                     _blinkInSeconds:
  2471                           	opt stack 0
  2472  0003FD                     	ds	2
  2473                           tblptru	equ	0xFF8
  2474                           tblptrh	equ	0xFF7
  2475                           tblptrl	equ	0xFF6
  2476                           tablat	equ	0xFF5
  2477                           postinc0	equ	0xFEE
  2478                           wreg	equ	0xFE8
  2479                           postdec1	equ	0xFE5
  2480                           fsr1h	equ	0xFE2
  2481                           fsr1l	equ	0xFE1
  2482                           
  2483                           	psect	bssBANK4
  2484  000440                     __pbssBANK4:
  2485                           	opt stack 0
  2486  000440                     _cdc_notice:
  2487                           	opt stack 0
  2488  000440                     	ds	10
  2489  00044A                     _Rtcm_SystemDate:
  2490                           	opt stack 0
  2491  00044A                     	ds	8
  2492  000452                     Term_MainSm@Data:
  2493                           	opt stack 0
  2494  000452                     	ds	50
  2495  000484                     _smsText:
  2496                           	opt stack 0
  2497  000484                     	ds	20
  2498  000498                     _PhoneNumber:
  2499                           	opt stack 0
  2500  000498                     	ds	20
  2501  0004AC                     _UsbMasterPhoneNumber:
  2502                           	opt stack 0
  2503  0004AC                     	ds	15
  2504  0004BB                     _EepromBuffer:
  2505                           	opt stack 0
  2506  0004BB                     	ds	15
  2507  0004CA                     _callerNumber:
  2508                           	opt stack 0
  2509  0004CA                     	ds	13
  2510  0004D7                     Terminal@SwTimer:
  2511                           	opt stack 0
  2512  0004D7                     	ds	11
  2513  0004E2                     I2cSlv_QueryI2cData@QueryTimer:
  2514                           	opt stack 0
  2515  0004E2                     	ds	11
  2516  0004ED                     _Led3Blink:
  2517                           	opt stack 0
  2518  0004ED                     	ds	9
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           postdec1	equ	0xFE5
  2526                           fsr1h	equ	0xFE2
  2527                           fsr1l	equ	0xFE1
  2528                           
  2529                           	psect	dataBANK4
  2530  0004F6                     __pdataBANK4:
  2531                           	opt stack 0
  2532  0004F6                     ModemEvtParser@F9117:
  2533                           	opt stack 0
  2534  0004F6                     	ds	10
  2535                           tblptru	equ	0xFF8
  2536                           tblptrh	equ	0xFF7
  2537                           tblptrl	equ	0xFF6
  2538                           tablat	equ	0xFF5
  2539                           postinc0	equ	0xFEE
  2540                           wreg	equ	0xFE8
  2541                           postdec1	equ	0xFE5
  2542                           fsr1h	equ	0xFE2
  2543                           fsr1l	equ	0xFE1
  2544                           
  2545                           	psect	bssBANK5
  2546  000500                     __pbssBANK5:
  2547                           	opt stack 0
  2548  000500                     _cdc_data_rx:
  2549                           	opt stack 0
  2550  000500                     	ds	64
  2551  000540                     Terminal@TermRxBuffer:
  2552                           	opt stack 0
  2553  000540                     	ds	50
  2554  000572                     _MessageText:
  2555                           	opt stack 0
  2556  000572                     	ds	50
  2557                           tblptru	equ	0xFF8
  2558                           tblptrh	equ	0xFF7
  2559                           tblptrl	equ	0xFF6
  2560                           tablat	equ	0xFF5
  2561                           postinc0	equ	0xFEE
  2562                           wreg	equ	0xFE8
  2563                           postdec1	equ	0xFE5
  2564                           fsr1h	equ	0xFE2
  2565                           fsr1l	equ	0xFE1
  2566                           
  2567                           	psect	dataBANK5
  2568  0005A4                     __pdataBANK5:
  2569                           	opt stack 0
  2570  0005A4                     _TaskTable:
  2571                           	opt stack 0
  2572  0005A4                     	ds	80
  2573                           tblptru	equ	0xFF8
  2574                           tblptrh	equ	0xFF7
  2575                           tblptrl	equ	0xFF6
  2576                           tablat	equ	0xFF5
  2577                           postinc0	equ	0xFEE
  2578                           wreg	equ	0xFE8
  2579                           postdec1	equ	0xFE5
  2580                           fsr1h	equ	0xFE2
  2581                           fsr1l	equ	0xFE1
  2582                           
  2583                           	psect	bssBANK6
  2584  000600                     __pbssBANK6:
  2585                           	opt stack 0
  2586  000600                     _OsAlarms:
  2587                           	opt stack 0
  2588  000600                     	ds	220
  2589                           tblptru	equ	0xFF8
  2590                           tblptrh	equ	0xFF7
  2591                           tblptrl	equ	0xFF6
  2592                           tablat	equ	0xFF5
  2593                           postinc0	equ	0xFEE
  2594                           wreg	equ	0xFE8
  2595                           postdec1	equ	0xFE5
  2596                           fsr1h	equ	0xFE2
  2597                           fsr1l	equ	0xFE1
  2598                           
  2599                           	psect	bssBANK7
  2600  000700                     __pbssBANK7:
  2601                           	opt stack 0
  2602  000700                     _Mdm_SmsRx:
  2603                           	opt stack 0
  2604  000700                     	ds	102
  2605  000766                     Terminal@Payload:
  2606                           	opt stack 0
  2607  000766                     	ds	80
  2608  0007B6                     _cdc_data_tx:
  2609                           	opt stack 0
  2610  0007B6                     	ds	64
  2611                           tblptru	equ	0xFF8
  2612                           tblptrh	equ	0xFF7
  2613                           tblptrl	equ	0xFF6
  2614                           tablat	equ	0xFF5
  2615                           postinc0	equ	0xFEE
  2616                           wreg	equ	0xFE8
  2617                           postdec1	equ	0xFE5
  2618                           fsr1h	equ	0xFE2
  2619                           fsr1l	equ	0xFE1
  2620                           
  2621                           	psect	bssBANK8
  2622  000800                     __pbssBANK8:
  2623                           	opt stack 0
  2624  000800                     GsmGprsTerminal@UsbBuffer:
  2625                           	opt stack 0
  2626  000800                     	ds	200
  2627                           tblptru	equ	0xFF8
  2628                           tblptrh	equ	0xFF7
  2629                           tblptrl	equ	0xFF6
  2630                           tablat	equ	0xFF5
  2631                           postinc0	equ	0xFEE
  2632                           wreg	equ	0xFE8
  2633                           postdec1	equ	0xFE5
  2634                           fsr1h	equ	0xFE2
  2635                           fsr1l	equ	0xFE1
  2636                           
  2637                           	psect	bssBANK9
  2638  000900                     __pbssBANK9:
  2639                           	opt stack 0
  2640  000900                     GsmGprsTerminal@UartBuffer:
  2641                           	opt stack 0
  2642  000900                     	ds	200
  2643                           tblptru	equ	0xFF8
  2644                           tblptrh	equ	0xFF7
  2645                           tblptrl	equ	0xFF6
  2646                           tablat	equ	0xFF5
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           postdec1	equ	0xFE5
  2650                           fsr1h	equ	0xFE2
  2651                           fsr1l	equ	0xFE1
  2652                           
  2653                           	psect	bssBIGRAMl
  2654  000AC8                     __pbssBIGRAMl:
  2655                           	opt stack 0
  2656  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2657                           	opt stack 0
  2658  000AC8                     	ds	400
  2659  000C58                     _RxBuffer:
  2660                           	opt stack 0
  2661  000C58                     	ds	400
  2662                           tblptru	equ	0xFF8
  2663                           tblptrh	equ	0xFF7
  2664                           tblptrl	equ	0xFF6
  2665                           tablat	equ	0xFF5
  2666                           postinc0	equ	0xFEE
  2667                           wreg	equ	0xFE8
  2668                           postdec1	equ	0xFE5
  2669                           fsr1h	equ	0xFE2
  2670                           fsr1l	equ	0xFE1
  2671                           
  2672                           	psect	cstackBANK10
  2673  000A00                     __pcstackBANK10:
  2674                           	opt stack 0
  2675  000A00                     Terminal@UsbRxBuffer:
  2676                           	opt stack 0
  2677                           
  2678                           ; 200 bytes @ 0x0
  2679  000A00                     	ds	200
  2680                           tblptru	equ	0xFF8
  2681                           tblptrh	equ	0xFF7
  2682                           tblptrl	equ	0xFF6
  2683                           tablat	equ	0xFF5
  2684                           postinc0	equ	0xFEE
  2685                           wreg	equ	0xFE8
  2686                           postdec1	equ	0xFE5
  2687                           fsr1h	equ	0xFE2
  2688                           fsr1l	equ	0xFE1
  2689                           
  2690                           	psect	cstackBANK5
  2691  0005F4                     __pcstackBANK5:
  2692                           	opt stack 0
  2693  0005F4                     ??_InitializeTasks:
  2694  0005F4                     ??_ScheduleTasks:
  2695                           
  2696                           ; 1 bytes @ 0x0
  2697  0005F4                     	ds	4
  2698                           tblptru	equ	0xFF8
  2699                           tblptrh	equ	0xFF7
  2700                           tblptrl	equ	0xFF6
  2701                           tablat	equ	0xFF5
  2702                           postinc0	equ	0xFEE
  2703                           wreg	equ	0xFE8
  2704                           postdec1	equ	0xFE5
  2705                           fsr1h	equ	0xFE2
  2706                           fsr1l	equ	0xFE1
  2707                           
  2708                           	psect	cstackBANK2
  2709  000200                     __pcstackBANK2:
  2710                           	opt stack 0
  2711  000200                     Terminal@UsbTxBuffer:
  2712                           	opt stack 0
  2713                           
  2714                           ; 200 bytes @ 0x0
  2715  000200                     	ds	200
  2716  0002C8                     InitializeTasks@ActiveTaskIndex:
  2717                           	opt stack 0
  2718  0002C8                     ScheduleTasks@ActiveTaskIndex:
  2719                           	opt stack 0
  2720                           
  2721                           ; 1 bytes @ 0xC8
  2722  0002C8                     	ds	1
  2723                           tblptru	equ	0xFF8
  2724                           tblptrh	equ	0xFF7
  2725                           tblptrl	equ	0xFF6
  2726                           tablat	equ	0xFF5
  2727                           postinc0	equ	0xFEE
  2728                           wreg	equ	0xFE8
  2729                           postdec1	equ	0xFE5
  2730                           fsr1h	equ	0xFE2
  2731                           fsr1l	equ	0xFE1
  2732                           
  2733                           	psect	cstackBANK1
  2734  000100                     __pcstackBANK1:
  2735                           	opt stack 0
  2736  000100                     initEeprom@addressToRead:
  2737                           	opt stack 0
  2738  000100                     isNumberInMemory@phoneNumber:
  2739                           	opt stack 0
  2740  000100                     isMasterNumber@phoneNumber:
  2741                           	opt stack 0
  2742  000100                     findEmptySpot@positionInMemory:
  2743                           	opt stack 0
  2744  000100                     SendSmsSm@UartMessage:
  2745                           	opt stack 0
  2746  000100                     InitGprsNetwork@UartMessage:
  2747                           	opt stack 0
  2748  000100                     Terminal@TermTxBuffer:
  2749                           	opt stack 0
  2750  000100                     HttpGetMethod@UartMessage:
  2751                           	opt stack 0
  2752                           
  2753                           ; 200 bytes @ 0x0
  2754  000100                     	ds	1
  2755  000101                     initEeprom@memoryOpResult:
  2756                           	opt stack 0
  2757                           
  2758                           ; 1 bytes @ 0x1
  2759  000101                     	ds	1
  2760  000102                     initEeprom@isInitialized:
  2761                           	opt stack 0
  2762  000102                     isMasterNumber@memoryOpResult:
  2763                           	opt stack 0
  2764  000102                     findEmptySpot@memoryOpResult:
  2765                           	opt stack 0
  2766  000102                     isNumberInMemory@positionInMemory:
  2767                           	opt stack 0
  2768                           
  2769                           ; 2 bytes @ 0x2
  2770  000102                     	ds	1
  2771  000103                     initFsm@isCmdSuccessfull:
  2772                           	opt stack 0
  2773  000103                     resCmdFsm@receivedNumber:
  2774                           	opt stack 0
  2775                           
  2776                           ; 2 bytes @ 0x3
  2777  000103                     	ds	1
  2778  000104                     isNumberInMemory@memoryOpResult:
  2779                           	opt stack 0
  2780                           
  2781                           ; 1 bytes @ 0x4
  2782  000104                     	ds	1
  2783  000105                     initFsm@isInitialized:
  2784                           	opt stack 0
  2785  000105                     addCmdFsm@receivedNumber:
  2786                           	opt stack 0
  2787  000105                     delCmdFsm@receivedNumber:
  2788                           	opt stack 0
  2789  000105                     resCmdFsm@isCmdSuccessfull:
  2790                           	opt stack 0
  2791  000105                     triggerCmdFsm@receivedNumber:
  2792                           	opt stack 0
  2793                           
  2794                           ; 2 bytes @ 0x5
  2795  000105                     	ds	2
  2796  000107                     resCmdFsm@isComplete:
  2797                           	opt stack 0
  2798  000107                     triggerCmdFsm@isComplete:
  2799                           	opt stack 0
  2800  000107                     addCmdFsm@smsText:
  2801                           	opt stack 0
  2802  000107                     delCmdFsm@smsText:
  2803                           	opt stack 0
  2804                           
  2805                           ; 2 bytes @ 0x7
  2806  000107                     	ds	1
  2807  000108                     resCmdFsm@masterOpResult:
  2808                           	opt stack 0
  2809  000108                     triggerCmdFsm@numberInMemory:
  2810                           	opt stack 0
  2811                           
  2812                           ; 1 bytes @ 0x8
  2813  000108                     	ds	1
  2814  000109                     triggerCmdFsm@masterOpResult:
  2815                           	opt stack 0
  2816  000109                     addCmdFsm@isCmdSuccessfull:
  2817                           	opt stack 0
  2818  000109                     delCmdFsm@isCmdSuccessfull:
  2819                           	opt stack 0
  2820                           
  2821                           ; 2 bytes @ 0x9
  2822  000109                     	ds	1
  2823  00010A                     triggerCmdFsm@searchNumber:
  2824                           	opt stack 0
  2825                           
  2826                           ; 1 bytes @ 0xA
  2827  00010A                     	ds	1
  2828  00010B                     addCmdFsm@isComplete:
  2829                           	opt stack 0
  2830  00010B                     delCmdFsm@emptyNumber:
  2831                           	opt stack 0
  2832                           
  2833                           ; 13 bytes @ 0xB
  2834  00010B                     	ds	1
  2835  00010C                     addCmdFsm@masterOpResult:
  2836                           	opt stack 0
  2837                           
  2838                           ; 1 bytes @ 0xC
  2839  00010C                     	ds	1
  2840  00010D                     addCmdFsm@numberInMemory:
  2841                           	opt stack 0
  2842                           
  2843                           ; 1 bytes @ 0xD
  2844  00010D                     	ds	1
  2845  00010E                     addCmdFsm@searchNumber:
  2846                           	opt stack 0
  2847                           
  2848                           ; 1 bytes @ 0xE
  2849  00010E                     	ds	10
  2850  000118                     delCmdFsm@isComplete:
  2851                           	opt stack 0
  2852                           
  2853                           ; 1 bytes @ 0x18
  2854  000118                     	ds	1
  2855  000119                     delCmdFsm@masterOpResult:
  2856                           	opt stack 0
  2857                           
  2858                           ; 1 bytes @ 0x19
  2859  000119                     	ds	1
  2860  00011A                     delCmdFsm@numberInMemory:
  2861                           	opt stack 0
  2862                           
  2863                           ; 1 bytes @ 0x1A
  2864  00011A                     	ds	1
  2865  00011B                     delCmdFsm@searchNumber:
  2866                           	opt stack 0
  2867                           
  2868                           ; 1 bytes @ 0x1B
  2869  00011B                     	ds	23
  2870  000132                     InitGprsNetwork@Index:
  2871                           	opt stack 0
  2872  000132                     Term_MainSm@FwkMajorStr:
  2873                           	opt stack 0
  2874                           
  2875                           ; 4 bytes @ 0x32
  2876  000132                     	ds	4
  2877  000136                     Term_MainSm@FwkMinorStr:
  2878                           	opt stack 0
  2879                           
  2880                           ; 4 bytes @ 0x36
  2881  000136                     	ds	4
  2882  00013A                     Term_MainSm@FwkBuildStr:
  2883                           	opt stack 0
  2884                           
  2885                           ; 4 bytes @ 0x3A
  2886  00013A                     	ds	142
  2887  0001C8                     HttpGetMethod@Index:
  2888                           	opt stack 0
  2889                           
  2890                           ; 1 bytes @ 0xC8
  2891  0001C8                     	ds	1
  2892                           tblptru	equ	0xFF8
  2893                           tblptrh	equ	0xFF7
  2894                           tblptrl	equ	0xFF6
  2895                           tablat	equ	0xFF5
  2896                           postinc0	equ	0xFEE
  2897                           wreg	equ	0xFE8
  2898                           postdec1	equ	0xFE5
  2899                           fsr1h	equ	0xFE2
  2900                           fsr1l	equ	0xFE1
  2901                           
  2902                           	psect	cstackBANK0
  2903  000060                     __pcstackBANK0:
  2904                           	opt stack 0
  2905  000060                     
  2906                           ; 1 bytes @ 0x0
  2907  000060                     	ds	8
  2908  000068                     ??_LowPriorityIsr:
  2909                           
  2910                           ; 1 bytes @ 0x8
  2911  000068                     	ds	21
  2912  00007D                     ??_isdigit:
  2913  00007D                     ??_isspace:
  2914  00007D                     ??_isupper:
  2915  00007D                     ??_Rtcc_GetRtccValue:
  2916  00007D                     ??_UartTxBufferStatus:
  2917  00007D                     ??_USBStdGetDscHandler:
  2918  00007D                     ??_USBStdGetStatusHandler:
  2919  00007D                     ?_GetLastInteractionNumber:
  2920                           	opt stack 0
  2921  00007D                     ?_USBTransferOnePacket:
  2922                           	opt stack 0
  2923  00007D                     ?_strlen:
  2924                           	opt stack 0
  2925  00007D                     ?_sprintf:
  2926                           	opt stack 0
  2927  00007D                     ?_initPreamble:
  2928                           	opt stack 0
  2929  00007D                     ?___wmul:
  2930                           	opt stack 0
  2931  00007D                     ?___awdiv:
  2932                           	opt stack 0
  2933  00007D                     ?___awmod:
  2934                           	opt stack 0
  2935  00007D                     ?___lwmod:
  2936                           	opt stack 0
  2937  00007D                     ?_GetOsTickCounter:
  2938                           	opt stack 0
  2939  00007D                     ?___lmul:
  2940                           	opt stack 0
  2941  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2942                           	opt stack 0
  2943  00007D                     SetAckStatus@AckSts:
  2944                           	opt stack 0
  2945  00007D                     WriteByte@Byte:
  2946                           	opt stack 0
  2947  00007D                     ReadByte@Byte:
  2948                           	opt stack 0
  2949  00007D                     Mcu_SetWdgSts@WdgSts:
  2950                           	opt stack 0
  2951  00007D                     RtccIrqInit@Priority:
  2952                           	opt stack 0
  2953  00007D                     Rtcc_SetRtcStatus@Status:
  2954                           	opt stack 0
  2955  00007D                     TmrBInit@Prescaler:
  2956                           	opt stack 0
  2957  00007D                     Tmr_TmrBIrqSet@Priority:
  2958                           	opt stack 0
  2959  00007D                     Tmr_StartTmr@TmrNumb:
  2960                           	opt stack 0
  2961  00007D                     UartWriteByte@ByteToWrite:
  2962                           	opt stack 0
  2963  00007D                     USBTransferOnePacket@dir:
  2964                           	opt stack 0
  2965  00007D                     USBConfigureEndpoint@direction:
  2966                           	opt stack 0
  2967  00007D                     USBCtrlTrfTxService@byteToSend:
  2968                           	opt stack 0
  2969  00007D                     USBCtrlTrfRxService@i:
  2970                           	opt stack 0
  2971  00007D                     Led_SetLedStatus@LedSts:
  2972                           	opt stack 0
  2973  00007D                     toupper@c:
  2974                           	opt stack 0
  2975  00007D                     tolower@c:
  2976                           	opt stack 0
  2977  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2978                           	opt stack 0
  2979  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2980                           	opt stack 0
  2981  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2982                           	opt stack 0
  2983  00007D                     Uart_ClearRxBuffer@Index:
  2984                           	opt stack 0
  2985  00007D                     GenerateEvt@Event:
  2986                           	opt stack 0
  2987  00007D                     ReceiveEvt@Event:
  2988                           	opt stack 0
  2989  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2990                           	opt stack 0
  2991  00007D                     StringCompare@String1:
  2992                           	opt stack 0
  2993  00007D                     ClearBuffer@Buffer:
  2994                           	opt stack 0
  2995  00007D                     isNumberValid@phoneNumber:
  2996                           	opt stack 0
  2997  00007D                     sprintf@sp:
  2998                           	opt stack 0
  2999  00007D                     ___wmul@multiplier:
  3000                           	opt stack 0
  3001  00007D                     ___awdiv@dividend:
  3002                           	opt stack 0
  3003  00007D                     ___awmod@dividend:
  3004                           	opt stack 0
  3005  00007D                     ___lwmod@dividend:
  3006                           	opt stack 0
  3007  00007D                     memcpy@d1:
  3008                           	opt stack 0
  3009  00007D                     memset@p1:
  3010                           	opt stack 0
  3011  00007D                     strcat@to:
  3012                           	opt stack 0
  3013  00007D                     strcpy@to:
  3014                           	opt stack 0
  3015  00007D                     strlen@s:
  3016                           	opt stack 0
  3017  00007D                     ___lmul@multiplier:
  3018                           	opt stack 0
  3019                           
  3020                           ; 4 bytes @ 0x1D
  3021  00007D                     	ds	1
  3022  00007E                     ??_USBConfigureEndpoint:
  3023  00007E                     Irq_InitIntController@PerInt_LowPInt:
  3024                           	opt stack 0
  3025  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  3026                           	opt stack 0
  3027  00007E                     TmrBInit@Postscaler:
  3028                           	opt stack 0
  3029  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  3030                           	opt stack 0
  3031  00007E                     UartWriteByte@Module:
  3032                           	opt stack 0
  3033  00007E                     UartTxBufferStatus@Module:
  3034                           	opt stack 0
  3035  00007E                     USBCtrlTrfRxService@byteToRead:
  3036                           	opt stack 0
  3037  00007E                     USBCtrlTrfInHandler@lastDTS:
  3038                           	opt stack 0
  3039  00007E                     Led_SetLedStatus@Led:
  3040                           	opt stack 0
  3041  00007E                     _isdigit$6506:
  3042                           	opt stack 0
  3043  00007E                     _isspace$6775:
  3044                           	opt stack 0
  3045  00007E                     _isupper$6778:
  3046                           	opt stack 0
  3047  00007E                     I2c_WriteData@WritePacket:
  3048                           	opt stack 0
  3049  00007E                     Rtcc_RtcConfig@RtcConfig:
  3050                           	opt stack 0
  3051  00007E                     USBTransferOnePacket@data:
  3052                           	opt stack 0
  3053  00007E                     USBStdGetStatusHandler@p:
  3054                           	opt stack 0
  3055                           
  3056                           ; 2 bytes @ 0x1E
  3057  00007E                     	ds	1
  3058  00007F                     ??_strlen:
  3059  00007F                     ??_Rtcc_AlarmConfig:
  3060  00007F                     ??_TmrBInit:
  3061  00007F                     Irq_InitIntController@IntPriorityEn:
  3062                           	opt stack 0
  3063  00007F                     Rtcc_GetRtccValue@RetValue:
  3064                           	opt stack 0
  3065  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  3066                           	opt stack 0
  3067  00007F                     UartTxBufferStatus@TxBufferStatus:
  3068                           	opt stack 0
  3069  00007F                     GenerateEvt@EventStatus:
  3070                           	opt stack 0
  3071  00007F                     isdigit@c:
  3072                           	opt stack 0
  3073  00007F                     isspace@c:
  3074                           	opt stack 0
  3075  00007F                     isupper@c:
  3076                           	opt stack 0
  3077  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  3078                           	opt stack 0
  3079  00007F                     StringCompare@String2:
  3080                           	opt stack 0
  3081  00007F                     ClearBuffer@Len:
  3082                           	opt stack 0
  3083  00007F                     sprintf@f:
  3084                           	opt stack 0
  3085  00007F                     ___wmul@multiplicand:
  3086                           	opt stack 0
  3087  00007F                     ___awdiv@divisor:
  3088                           	opt stack 0
  3089  00007F                     ___awmod@divisor:
  3090                           	opt stack 0
  3091  00007F                     ___lwmod@divisor:
  3092                           	opt stack 0
  3093  00007F                     memcpy@s1:
  3094                           	opt stack 0
  3095  00007F                     memset@c:
  3096                           	opt stack 0
  3097  00007F                     strcat@from:
  3098                           	opt stack 0
  3099  00007F                     strcpy@from:
  3100                           	opt stack 0
  3101                           
  3102                           ; 2 bytes @ 0x1F
  3103  00007F                     	ds	1
  3104  000080                     ??_isalpha:
  3105  000080                     ??_isxdigit:
  3106  000080                     ??_I2c_WriteData:
  3107  000080                     ??_Rtcc_RtcConfig:
  3108  000080                     Rtcc_GetRtccValue@RegValue:
  3109                           	opt stack 0
  3110  000080                     TmrBInit@TmrNumb:
  3111                           	opt stack 0
  3112  000080                     ReceiveEvt@EventStatus:
  3113                           	opt stack 0
  3114  000080                     USBTransferOnePacket@len:
  3115                           	opt stack 0
  3116  000080                     isNumberValid@isNumberOk:
  3117                           	opt stack 0
  3118  000080                     I2c_ReadData@ReadPacket:
  3119                           	opt stack 0
  3120  000080                     Uart_WriteConstString@ConstStringToWrite:
  3121                           	opt stack 0
  3122  000080                     Uart_WriteString@StringToWrite:
  3123                           	opt stack 0
  3124  000080                     Uart_WriteStringLen@StringToWrite:
  3125                           	opt stack 0
  3126  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3127                           	opt stack 0
  3128  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3129                           	opt stack 0
  3130                           
  3131                           ; 2 bytes @ 0x20
  3132  000080                     	ds	1
  3133  000081                     ?_GetElapsedTime:
  3134                           	opt stack 0
  3135  000081                     ?_Rtcm_GetRtccDate:
  3136                           	opt stack 0
  3137  000081                     Mdm_IsSmsReceived@Ret:
  3138                           	opt stack 0
  3139  000081                     Mdm_IsRinging@Ret:
  3140                           	opt stack 0
  3141  000081                     I2cSlv_I2cReadMsgSts@Result:
  3142                           	opt stack 0
  3143  000081                     USBTransferOnePacket@ep:
  3144                           	opt stack 0
  3145  000081                     Led_SetLedBlinkTime@Led:
  3146                           	opt stack 0
  3147  000081                     isNumberValid@i:
  3148                           	opt stack 0
  3149  000081                     ___awdiv@counter:
  3150                           	opt stack 0
  3151  000081                     ___awmod@counter:
  3152                           	opt stack 0
  3153  000081                     ___lwmod@counter:
  3154                           	opt stack 0
  3155  000081                     _isalpha$6772:
  3156                           	opt stack 0
  3157  000081                     _isxdigit$6782:
  3158                           	opt stack 0
  3159  000081                     OsTmr_StartTimer@Timer:
  3160                           	opt stack 0
  3161  000081                     StringCompare@Len:
  3162                           	opt stack 0
  3163  000081                     ClearBuffer@Index:
  3164                           	opt stack 0
  3165  000081                     ___wmul@product:
  3166                           	opt stack 0
  3167  000081                     memcpy@n:
  3168                           	opt stack 0
  3169  000081                     memset@n:
  3170                           	opt stack 0
  3171  000081                     strcat@cp:
  3172                           	opt stack 0
  3173  000081                     strcpy@cp:
  3174                           	opt stack 0
  3175  000081                     strlen@cp:
  3176                           	opt stack 0
  3177  000081                     GetElapsedTime@StartTime:
  3178                           	opt stack 0
  3179  000081                     ___lmul@multiplicand:
  3180                           	opt stack 0
  3181                           
  3182                           ; 4 bytes @ 0x21
  3183  000081                     	ds	1
  3184  000082                     ??_I2c_ReadData:
  3185  000082                     Uart_WriteConstString@Module:
  3186                           	opt stack 0
  3187  000082                     Uart_WriteString@Module:
  3188                           	opt stack 0
  3189  000082                     Uart_WriteStringLen@Len:
  3190                           	opt stack 0
  3191  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3192                           	opt stack 0
  3193  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3194                           	opt stack 0
  3195  000082                     USBConfigureEndpoint@EPNum:
  3196                           	opt stack 0
  3197  000082                     ___awdiv@sign:
  3198                           	opt stack 0
  3199  000082                     ___awmod@sign:
  3200                           	opt stack 0
  3201  000082                     isalpha@c:
  3202                           	opt stack 0
  3203  000082                     isxdigit@c:
  3204                           	opt stack 0
  3205  000082                     USBTransferOnePacket@handle:
  3206                           	opt stack 0
  3207                           
  3208                           ; 2 bytes @ 0x22
  3209  000082                     	ds	1
  3210  000083                     ?_GetCallerNumber:
  3211                           	opt stack 0
  3212  000083                     ?_atoi:
  3213                           	opt stack 0
  3214  000083                     ?_xtoi:
  3215                           	opt stack 0
  3216  000083                     ?___lwdiv:
  3217                           	opt stack 0
  3218  000083                     Uart_WriteStringLen@Index:
  3219                           	opt stack 0
  3220  000083                     Mdm_SetSmsFormat@Index:
  3221                           	opt stack 0
  3222  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3223                           	opt stack 0
  3224  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3225                           	opt stack 0
  3226  000083                     getSetupCall@isCalledReceived:
  3227                           	opt stack 0
  3228  000083                     sprintf@flag:
  3229                           	opt stack 0
  3230  000083                     memcpy@tmp:
  3231                           	opt stack 0
  3232  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3233                           	opt stack 0
  3234  000083                     USBConfigureEndpoint@handle:
  3235                           	opt stack 0
  3236  000083                     putUSBUSART@data:
  3237                           	opt stack 0
  3238  000083                     atoi@s:
  3239                           	opt stack 0
  3240  000083                     ___awdiv@quotient:
  3241                           	opt stack 0
  3242  000083                     ___lwdiv@dividend:
  3243                           	opt stack 0
  3244  000083                     memset@p:
  3245                           	opt stack 0
  3246  000083                     xtoi@s:
  3247                           	opt stack 0
  3248  000083                     OsTmr_StartTimer@Timeout:
  3249                           	opt stack 0
  3250                           
  3251                           ; 4 bytes @ 0x23
  3252  000083                     	ds	1
  3253  000084                     Uart_WriteStringLen@Module:
  3254                           	opt stack 0
  3255  000084                     I2cSlv_SendI2cMsg@TxSts:
  3256                           	opt stack 0
  3257  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3258                           	opt stack 0
  3259  000084                     CDCTxService@i:
  3260                           	opt stack 0
  3261  000084                     getsUSBUSART@buffer:
  3262                           	opt stack 0
  3263  000084                     sprintf@ap:
  3264                           	opt stack 0
  3265  000084                     memcpy@d:
  3266                           	opt stack 0
  3267  000084                     Mdm_SetSmsFormat@UartMessage:
  3268                           	opt stack 0
  3269                           
  3270                           ; 20 bytes @ 0x24
  3271  000084                     	ds	1
  3272  000085                     ??_atoi:
  3273  000085                     ??_xtoi:
  3274  000085                     ??_GetElapsedTime:
  3275  000085                     Rtcc_SetRtccValue@Value:
  3276                           	opt stack 0
  3277  000085                     USBDeviceInit@i:
  3278                           	opt stack 0
  3279  000085                     USBEnableEndpoint@options:
  3280                           	opt stack 0
  3281  000085                     putUSBUSART@length:
  3282                           	opt stack 0
  3283  000085                     CDCTxService@byte_to_send:
  3284                           	opt stack 0
  3285  000085                     Eeprom_Reset@SlaveAddress:
  3286                           	opt stack 0
  3287  000085                     StringCompare@Result:
  3288                           	opt stack 0
  3289  000085                     triggerRelay@res:
  3290                           	opt stack 0
  3291  000085                     StringCopy@SourceStr:
  3292                           	opt stack 0
  3293  000085                     ___lwdiv@divisor:
  3294                           	opt stack 0
  3295  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3296                           	opt stack 0
  3297  000085                     ___lmul@product:
  3298                           	opt stack 0
  3299                           
  3300                           ; 4 bytes @ 0x25
  3301  000085                     	ds	1
  3302  000086                     ??_Rtcc_SetRtccValue:
  3303  000086                     getsUSBUSART@len:
  3304                           	opt stack 0
  3305  000086                     triggerRelay@isRelayOn:
  3306                           	opt stack 0
  3307  000086                     sprintf@c:
  3308                           	opt stack 0
  3309  000086                     USBEnableEndpoint@p:
  3310                           	opt stack 0
  3311  000086                     StringCompare@Index:
  3312                           	opt stack 0
  3313  000086                     memcpy@s:
  3314                           	opt stack 0
  3315                           
  3316                           ; 2 bytes @ 0x26
  3317  000086                     	ds	1
  3318  000087                     atoi@sign:
  3319                           	opt stack 0
  3320  000087                     ___lwdiv@counter:
  3321                           	opt stack 0
  3322  000087                     xtoi@sign:
  3323                           	opt stack 0
  3324  000087                     StringCopy@DestStr:
  3325                           	opt stack 0
  3326  000087                     sprintf@cp:
  3327                           	opt stack 0
  3328                           
  3329                           ; 2 bytes @ 0x27
  3330  000087                     	ds	1
  3331  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3332                           	opt stack 0
  3333  000088                     USBEnableEndpoint@ep:
  3334                           	opt stack 0
  3335  000088                     atoi@a:
  3336                           	opt stack 0
  3337  000088                     ___lwdiv@quotient:
  3338                           	opt stack 0
  3339  000088                     xtoi@val:
  3340                           	opt stack 0
  3341  000088                     parseCommand@addNumberCmd:
  3342                           	opt stack 0
  3343                           
  3344                           ; 4 bytes @ 0x28
  3345  000088                     	ds	1
  3346  000089                     ??_Rtcm_GetRtccDate:
  3347  000089                     ?_strtol:
  3348                           	opt stack 0
  3349  000089                     ?___lldiv:
  3350                           	opt stack 0
  3351  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3352                           	opt stack 0
  3353  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3354                           	opt stack 0
  3355  000089                     StringCopy@Len:
  3356                           	opt stack 0
  3357  000089                     strtol@s:
  3358                           	opt stack 0
  3359  000089                     ___lldiv@dividend:
  3360                           	opt stack 0
  3361  000089                     Rtcm_SetRtccDate@Date:
  3362                           	opt stack 0
  3363                           
  3364                           ; 8 bytes @ 0x29
  3365  000089                     	ds	1
  3366  00008A                     xtoi@c:
  3367                           	opt stack 0
  3368  00008A                     LedBlinkStateMachine@LedBlink:
  3369                           	opt stack 0
  3370  00008A                     LedPulseStateMachine@LedPulse:
  3371                           	opt stack 0
  3372  00008A                     secondsAppTimer@counter:
  3373                           	opt stack 0
  3374  00008A                     utoa@buf:
  3375                           	opt stack 0
  3376  00008A                     Rtcm_GetRtccDate@LocalDate:
  3377                           	opt stack 0
  3378                           
  3379                           ; 8 bytes @ 0x2A
  3380  00008A                     	ds	1
  3381  00008B                     ??_StringCopy:
  3382  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3383                           	opt stack 0
  3384  00008B                     strtol@endptr:
  3385                           	opt stack 0
  3386                           
  3387                           ; 2 bytes @ 0x2B
  3388  00008B                     	ds	1
  3389  00008C                     LedPulseStateMachine@Led:
  3390                           	opt stack 0
  3391  00008C                     secondsAppTimer@isCyclic:
  3392                           	opt stack 0
  3393  00008C                     utoa@val:
  3394                           	opt stack 0
  3395  00008C                     parseCommand@deleteNumberCmd:
  3396                           	opt stack 0
  3397                           
  3398                           ; 4 bytes @ 0x2C
  3399  00008C                     	ds	1
  3400  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3401                           	opt stack 0
  3402  00008D                     StringCopy@Index:
  3403                           	opt stack 0
  3404  00008D                     strtol@base:
  3405                           	opt stack 0
  3406  00008D                     GetElapsedTime@TimeValue:
  3407                           	opt stack 0
  3408  00008D                     ___lldiv@divisor:
  3409                           	opt stack 0
  3410                           
  3411                           ; 4 bytes @ 0x2D
  3412  00008D                     	ds	1
  3413  00008E                     utoa@base:
  3414                           	opt stack 0
  3415                           
  3416                           ; 2 bytes @ 0x2E
  3417  00008E                     	ds	1
  3418  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3419  00008F                     ??_strtol:
  3420  00008F                     secondsAppTimer@seconds:
  3421                           	opt stack 0
  3422  00008F                     Mdm_GetSmsData@MessageText:
  3423                           	opt stack 0
  3424  00008F                     Eeprom_Write@WriteBuffer:
  3425                           	opt stack 0
  3426  00008F                     LedStateMachine@LedSts:
  3427                           	opt stack 0
  3428  00008F                     ModemEvtParser@CallReadyString:
  3429                           	opt stack 0
  3430                           
  3431                           ; 10 bytes @ 0x2F
  3432  00008F                     	ds	1
  3433  000090                     secondsAppTimer@isExpired:
  3434                           	opt stack 0
  3435  000090                     utoa@v:
  3436                           	opt stack 0
  3437  000090                     parseCommand@resetCmd:
  3438                           	opt stack 0
  3439                           
  3440                           ; 4 bytes @ 0x30
  3441  000090                     	ds	1
  3442  000091                     ??_USBStdFeatureReqHandler:
  3443  000091                     Mdm_GetSmsData@GetSmsStatus:
  3444                           	opt stack 0
  3445  000091                     USBStdSetCfgHandler@i:
  3446                           	opt stack 0
  3447  000091                     Eeprom_Write@DataLength:
  3448                           	opt stack 0
  3449  000091                     LedStateMachine@LedOut:
  3450                           	opt stack 0
  3451  000091                     secondsAppTimer@destinationTicks:
  3452                           	opt stack 0
  3453  000091                     GetElapsedTime@CurrentTimestamp:
  3454                           	opt stack 0
  3455  000091                     ___lldiv@quotient:
  3456                           	opt stack 0
  3457                           
  3458                           ; 4 bytes @ 0x31
  3459  000091                     	ds	1
  3460  000092                     Eeprom_Write@WriteSts:
  3461                           	opt stack 0
  3462  000092                     utoa@c:
  3463                           	opt stack 0
  3464  000092                     USBStdFeatureReqHandler@pUEP:
  3465                           	opt stack 0
  3466                           
  3467                           ; 2 bytes @ 0x32
  3468  000092                     	ds	1
  3469  000093                     Eeprom_Write@MemoryAddress:
  3470                           	opt stack 0
  3471  000093                     waitSetupCall@isCallArrived:
  3472                           	opt stack 0
  3473  000093                     cmdVisualEffet@isCmdSuccessfull:
  3474                           	opt stack 0
  3475  000093                     strtol@sign:
  3476                           	opt stack 0
  3477  000093                     LedStateMachine@LedBlink:
  3478                           	opt stack 0
  3479  000093                     itoa@buf:
  3480                           	opt stack 0
  3481                           
  3482                           ; 2 bytes @ 0x33
  3483  000093                     	ds	1
  3484  000094                     USBStdFeatureReqHandler@current_ep_data:
  3485                           	opt stack 0
  3486  000094                     Eeprom_Write@SlaveAddress:
  3487                           	opt stack 0
  3488  000094                     parseCommand@state:
  3489                           	opt stack 0
  3490  000094                     cmdVisualEffet@seconds:
  3491                           	opt stack 0
  3492  000094                     strtol@a:
  3493                           	opt stack 0
  3494                           
  3495                           ; 4 bytes @ 0x34
  3496  000094                     	ds	1
  3497  000095                     Eeprom_Write@CommandLength:
  3498                           	opt stack 0
  3499  000095                     detectCmd@currentState:
  3500                           	opt stack 0
  3501  000095                     ___lldiv@counter:
  3502                           	opt stack 0
  3503  000095                     OsTmr_GetTimerStatus@Timer:
  3504                           	opt stack 0
  3505  000095                     USBStdFeatureReqHandler@p:
  3506                           	opt stack 0
  3507  000095                     LedStateMachine@LedPulse:
  3508                           	opt stack 0
  3509  000095                     itoa@val:
  3510                           	opt stack 0
  3511                           
  3512                           ; 2 bytes @ 0x35
  3513  000095                     	ds	1
  3514  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3515                           	opt stack 0
  3516  000096                     SetUartBaudRate@UartConfig:
  3517                           	opt stack 0
  3518  000096                     saveNumberInMemory@phoneNumber:
  3519                           	opt stack 0
  3520  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3521                           	opt stack 0
  3522                           
  3523                           ; 4 bytes @ 0x36
  3524  000096                     	ds	1
  3525  000097                     ??_USBCtrlEPService:
  3526  000097                     itoa@base:
  3527                           	opt stack 0
  3528                           
  3529                           ; 2 bytes @ 0x37
  3530  000097                     	ds	1
  3531  000098                     Tmr_TmrBPrSet@Prescaler:
  3532                           	opt stack 0
  3533  000098                     Mdm_SetSmsFormat@TextFormat:
  3534                           	opt stack 0
  3535  000098                     USBDeviceTasks@i:
  3536                           	opt stack 0
  3537  000098                     LedStateMachine@LedOutSts:
  3538                           	opt stack 0
  3539  000098                     saveNumberInMemory@address:
  3540                           	opt stack 0
  3541  000098                     strtol@c:
  3542                           	opt stack 0
  3543                           
  3544                           ; 1 bytes @ 0x38
  3545  000098                     	ds	1
  3546  000099                     Tmr_TmrBPrSet@Postscaler:
  3547                           	opt stack 0
  3548  000099                     SetUartBaudRate@Module:
  3549                           	opt stack 0
  3550  000099                     LedStateMachine@Led:
  3551                           	opt stack 0
  3552  000099                     initGprsModem@isInitialized:
  3553                           	opt stack 0
  3554  000099                     detectUsbNumber@isCmdSuccessfull:
  3555                           	opt stack 0
  3556  000099                     itoa@cp:
  3557                           	opt stack 0
  3558  000099                     ModemEvtParser@ClipString:
  3559                           	opt stack 0
  3560                           
  3561                           ; 5 bytes @ 0x39
  3562  000099                     	ds	1
  3563  00009A                     ??_Led_MainTask:
  3564  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3565                           	opt stack 0
  3566  00009A                     SetUartBaudRate@BaudRateRegister:
  3567                           	opt stack 0
  3568  00009A                     SetBaudRate@McuClockHz:
  3569                           	opt stack 0
  3570                           
  3571                           ; 4 bytes @ 0x3A
  3572  00009A                     	ds	1
  3573  00009B                     ??_SendSmsSm:
  3574  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3575                           	opt stack 0
  3576  00009B                     detectUsbNumber@isActionPerformed:
  3577                           	opt stack 0
  3578  00009B                     OsTmr_Wait@WaitTimer:
  3579                           	opt stack 0
  3580  00009B                     InitGprsNetwork@Apn:
  3581                           	opt stack 0
  3582  00009B                     HttpGetMethod@GetData:
  3583                           	opt stack 0
  3584                           
  3585                           ; 2 bytes @ 0x3B
  3586  00009B                     	ds	1
  3587  00009C                     SetUartBaudRate@DivisionFactor:
  3588                           	opt stack 0
  3589  00009C                     Tmr_TmrBPrSet@Divisor:
  3590                           	opt stack 0
  3591                           
  3592                           ; 4 bytes @ 0x3C
  3593  00009C                     	ds	1
  3594  00009D                     ??_HttpGetMethod:
  3595  00009D                     InitGprsNetwork@ApnLen:
  3596                           	opt stack 0
  3597  00009D                     Uart_InitUartModule@UartConfig:
  3598                           	opt stack 0
  3599  00009D                     OsTmr_Wait@DelayMs:
  3600                           	opt stack 0
  3601                           
  3602                           ; 4 bytes @ 0x3D
  3603  00009D                     	ds	1
  3604  00009E                     ??_SetBaudRate:
  3605  00009E                     ??_InitGprsNetwork:
  3606  00009E                     ModemEvtParser@SmsString:
  3607                           	opt stack 0
  3608                           
  3609                           ; 5 bytes @ 0x3E
  3610  00009E                     	ds	1
  3611  00009F                     ??_Uart_InitUartModule:
  3612                           
  3613                           ; 1 bytes @ 0x3F
  3614  00009F                     	ds	1
  3615  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3616                           	opt stack 0
  3617                           
  3618                           ; 2 bytes @ 0x40
  3619  0000A0                     	ds	1
  3620  0000A1                     Uart_InitUartModule@Module:
  3621                           	opt stack 0
  3622  0000A1                     OsTmr_Wait@Ret:
  3623                           	opt stack 0
  3624                           
  3625                           ; 1 bytes @ 0x41
  3626  0000A1                     	ds	1
  3627  0000A2                     ??_Terminal:
  3628  0000A2                     I2c_InitI2cModule@I2cConfig:
  3629                           	opt stack 0
  3630  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3631                           	opt stack 0
  3632                           
  3633                           ; 2 bytes @ 0x42
  3634  0000A2                     	ds	1
  3635  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3636                           	opt stack 0
  3637  0000A3                     ModemEvtParser@RingString:
  3638                           	opt stack 0
  3639                           
  3640                           ; 4 bytes @ 0x43
  3641  0000A3                     	ds	1
  3642  0000A4                     ??_I2c_InitI2cModule:
  3643  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3644                           	opt stack 0
  3645  0000A4                     Terminal@i:
  3646                           	opt stack 0
  3647  0000A4                     InitSchedTimer@TmrBConfig:
  3648                           	opt stack 0
  3649                           
  3650                           ; 7 bytes @ 0x44
  3651  0000A4                     	ds	1
  3652  0000A5                     Terminal@ReceivedBytes:
  3653                           	opt stack 0
  3654  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3655                           	opt stack 0
  3656                           
  3657                           ; 2 bytes @ 0x45
  3658  0000A5                     	ds	1
  3659  0000A6                     Terminal@Index:
  3660                           	opt stack 0
  3661                           
  3662                           ; 1 bytes @ 0x46
  3663  0000A6                     	ds	1
  3664  0000A7                     ModemEvtParser@Match:
  3665                           	opt stack 0
  3666  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3667                           	opt stack 0
  3668                           
  3669                           ; 1 bytes @ 0x47
  3670  0000A7                     	ds	1
  3671  0000A8                     ModemEvtParser@CompareIdx:
  3672                           	opt stack 0
  3673  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3674                           	opt stack 0
  3675                           
  3676                           ; 1 bytes @ 0x48
  3677  0000A8                     	ds	1
  3678  0000A9                     Eeprom_Read@ReadBuffer:
  3679                           	opt stack 0
  3680                           
  3681                           ; 2 bytes @ 0x49
  3682  0000A9                     	ds	2
  3683  0000AB                     Eeprom_Read@DataLength:
  3684                           	opt stack 0
  3685                           
  3686                           ; 1 bytes @ 0x4B
  3687  0000AB                     	ds	1
  3688  0000AC                     Eeprom_Read@MemoryAddress:
  3689                           	opt stack 0
  3690                           
  3691                           ; 1 bytes @ 0x4C
  3692  0000AC                     	ds	1
  3693  0000AD                     Eeprom_Read@SlaveAddress:
  3694                           	opt stack 0
  3695                           
  3696                           ; 1 bytes @ 0x4D
  3697  0000AD                     	ds	1
  3698  0000AE                     Eeprom_Read@ReadSts:
  3699                           	opt stack 0
  3700                           
  3701                           ; 1 bytes @ 0x4E
  3702  0000AE                     	ds	1
  3703  0000AF                     Eeprom_Read@QuerySts:
  3704                           	opt stack 0
  3705                           
  3706                           ; 1 bytes @ 0x4F
  3707  0000AF                     	ds	1
  3708  0000B0                     tblptru	equ	0xFF8
  3709                           tblptrh	equ	0xFF7
  3710                           tblptrl	equ	0xFF6
  3711                           tablat	equ	0xFF5
  3712                           postinc0	equ	0xFEE
  3713                           wreg	equ	0xFE8
  3714                           postdec1	equ	0xFE5
  3715                           fsr1h	equ	0xFE2
  3716                           fsr1l	equ	0xFE1
  3717                           
  3718                           ; 1 bytes @ 0x50
  3719                           
  3720                           	psect	cstackCOMRAM
  3721  000001                     __pcstackCOMRAM:
  3722                           	opt stack 0
  3723  000001                     i2GenerateEvt@Event:
  3724                           	opt stack 0
  3725                           
  3726                           ; 2 bytes @ 0x0
  3727  000001                     	ds	2
  3728  000003                     i2GenerateEvt@EventStatus:
  3729                           	opt stack 0
  3730                           
  3731                           ; 1 bytes @ 0x2
  3732  000003                     	ds	1
  3733  000004                     Uart_MdmGsmGprsReadService@UartData:
  3734                           	opt stack 0
  3735                           
  3736                           ; 1 bytes @ 0x3
  3737  000004                     	ds	1
  3738  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3739                           	opt stack 0
  3740                           
  3741                           ; 2 bytes @ 0x4
  3742  000005                     	ds	2
  3743  000007                     ??_HighPriorityIsr:
  3744                           
  3745                           ; 1 bytes @ 0x6
  3746  000007                     	ds	18
  3747  000019                     ?i1___wmul:
  3748                           	opt stack 0
  3749  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3750                           	opt stack 0
  3751  000019                     i1GenerateEvt@Event:
  3752                           	opt stack 0
  3753  000019                     i1___wmul@multiplier:
  3754                           	opt stack 0
  3755                           
  3756                           ; 2 bytes @ 0x18
  3757  000019                     	ds	2
  3758  00001B                     i1GenerateEvt@EventStatus:
  3759                           	opt stack 0
  3760  00001B                     i1___wmul@multiplicand:
  3761                           	opt stack 0
  3762                           
  3763                           ; 2 bytes @ 0x1A
  3764  00001B                     	ds	1
  3765  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3766                           	opt stack 0
  3767                           
  3768                           ; 2 bytes @ 0x1B
  3769  00001C                     	ds	1
  3770  00001D                     i1___wmul@product:
  3771                           	opt stack 0
  3772                           
  3773                           ; 2 bytes @ 0x1C
  3774  00001D                     	ds	1
  3775  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3776                           	opt stack 0
  3777                           
  3778                           ; 1 bytes @ 0x1D
  3779  00001E                     	ds	1
  3780  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3781                           	opt stack 0
  3782                           
  3783                           ; 1 bytes @ 0x1E
  3784  00001F                     	ds	1
  3785  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3786                           	opt stack 0
  3787                           
  3788                           ; 1 bytes @ 0x1F
  3789  000020                     	ds	1
  3790  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3791                           	opt stack 0
  3792                           
  3793                           ; 2 bytes @ 0x20
  3794  000021                     	ds	2
  3795  000023                     tblptru	equ	0xFF8
  3796                           tblptrh	equ	0xFF7
  3797                           tblptrl	equ	0xFF6
  3798                           tablat	equ	0xFF5
  3799                           postinc0	equ	0xFEE
  3800                           wreg	equ	0xFE8
  3801                           postdec1	equ	0xFE5
  3802                           fsr1h	equ	0xFE2
  3803                           fsr1l	equ	0xFE1
  3804                           
  3805                           ; 1 bytes @ 0x22
  3806 ;;
  3807 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3808 ;;
  3809 ;; *************** function _main *****************
  3810 ;; Defined at:
  3811 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  2   14[None  ] short 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3829 ;;Total ram usage:        0 bytes
  3830 ;; Hardware stack levels required when called:   23
  3831 ;; This function calls:
  3832 ;;		_Sch_MainScheduler
  3833 ;;		_SystemInit
  3834 ;; This function is called by:
  3835 ;;		Startup code after reset
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text0
  3840  006D38                     __ptext0:
  3841                           	opt stack 0
  3842  006D38                     _main:
  3843                           	opt stack 8
  3844                           
  3845                           ;main.c: 61: SystemInit();
  3846                           
  3847                           ;incstack = 0
  3848  006D38  ECA0  F033         	call	_SystemInit	;wreg free
  3849                           
  3850                           ;main.c: 64: Sch_MainScheduler();
  3851  006D3C  EC82  F035         	call	_Sch_MainScheduler	;wreg free
  3852                           
  3853                           ;main.c: 67: return 0;
  3854                           ;	Return value of _main is never used
  3855  006D40  EF66  F000         	goto	start
  3856  006D44                     __end_of_main:
  3857                           	opt stack 0
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           postinc0	equ	0xFEE
  3863                           wreg	equ	0xFE8
  3864                           postdec1	equ	0xFE5
  3865                           fsr1h	equ	0xFE2
  3866                           fsr1l	equ	0xFE1
  3867                           
  3868 ;; *************** function _SystemInit *****************
  3869 ;; Defined at:
  3870 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3888 ;;Total ram usage:        0 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:   15
  3891 ;; This function calls:
  3892 ;;		_InitSchedTimer
  3893 ;;		_Irq_InitIntController
  3894 ;;		_Mcu_ConfigExtInt
  3895 ;;		_Mcu_StartSystemPll
  3896 ;;		_Pm_DsReleasePinControl
  3897 ;;		_Tmr_RegisterTmr2IsrCallback
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text1
  3904  006740                     __ptext1:
  3905                           	opt stack 0
  3906  006740                     _SystemInit:
  3907                           	opt stack 15
  3908                           
  3909                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3910                           
  3911                           ;incstack = 0
  3912  006740  ECD0  F036         	call	_Pm_DsReleasePinControl	;wreg free
  3913                           
  3914                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3915  006744  EC73  F035         	call	_Mcu_StartSystemPll	;wreg free
  3916                           
  3917                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3918  006748  0E01               	movlw	1
  3919  00674A  0100               	movlb	0	; () banked
  3920  00674C  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3921  00674E  0E01               	movlw	1
  3922  006750  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3923  006752  0E01               	movlw	1
  3924  006754  EC44  F034         	call	_Irq_InitIntController
  3925                           
  3926                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3927  006758  0E2A               	movlw	low _Sch_SchmIntService
  3928  00675A  0100               	movlb	0	; () banked
  3929  00675C  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3930  00675E  0E6D               	movlw	high _Sch_SchmIntService
  3931  006760  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3932  006762  ECB3  F036         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3933                           
  3934                           ;sys_init.c: 132: InitSchedTimer();
  3935  006766  EC00  F034         	call	_InitSchedTimer	;wreg free
  3936                           
  3937                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3938  00676A  ECBC  F035         	call	_Mcu_ConfigExtInt	;wreg free
  3939  00676E  0012               	return		;funcret
  3940  006770                     __end_of_SystemInit:
  3941                           	opt stack 0
  3942                           tblptru	equ	0xFF8
  3943                           tblptrh	equ	0xFF7
  3944                           tblptrl	equ	0xFF6
  3945                           tablat	equ	0xFF5
  3946                           postinc0	equ	0xFEE
  3947                           wreg	equ	0xFE8
  3948                           postdec1	equ	0xFE5
  3949                           fsr1h	equ	0xFE2
  3950                           fsr1l	equ	0xFE1
  3951                           
  3952 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3953 ;; Defined at:
  3954 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3957 ;;		 -> Sch_SchmIntService(1), 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3969 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3972 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3973 ;;Total ram usage:        2 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:   11
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_SystemInit
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text2
  3984  006D66                     __ptext2:
  3985                           	opt stack 0
  3986  006D66                     _Tmr_RegisterTmr2IsrCallback:
  3987                           	opt stack 18
  3988                           
  3989                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3990                           
  3991                           ;incstack = 0
  3992  006D66  C07D  F2E5         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3993  006D6A  C07E  F2E6         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3994  006D6E  0012               	return		;funcret
  3995  006D70                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3996                           	opt stack 0
  3997                           tblptru	equ	0xFF8
  3998                           tblptrh	equ	0xFF7
  3999                           tblptrl	equ	0xFF6
  4000                           tablat	equ	0xFF5
  4001                           postinc0	equ	0xFEE
  4002                           wreg	equ	0xFE8
  4003                           postdec1	equ	0xFE5
  4004                           fsr1h	equ	0xFE2
  4005                           fsr1l	equ	0xFE1
  4006                           
  4007 ;; *************** function _Pm_DsReleasePinControl *****************
  4008 ;; Defined at:
  4009 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;		None
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		None
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;Total ram usage:        0 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:   11
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_SystemInit
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text3
  4038  006DA0                     __ptext3:
  4039                           	opt stack 0
  4040  006DA0                     _Pm_DsReleasePinControl:
  4041                           	opt stack 18
  4042                           
  4043                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  4044                           
  4045                           ;incstack = 0
  4046  006DA0  010F               	movlb	15	; () banked
  4047  006DA2  914C               	bcf	76,0,b	;volatile
  4048                           
  4049                           ; BSR set to: 15
  4050  006DA4  0012               	return		;funcret
  4051  006DA6                     __end_of_Pm_DsReleasePinControl:
  4052                           	opt stack 0
  4053                           tblptru	equ	0xFF8
  4054                           tblptrh	equ	0xFF7
  4055                           tblptrl	equ	0xFF6
  4056                           tablat	equ	0xFF5
  4057                           postinc0	equ	0xFEE
  4058                           wreg	equ	0xFE8
  4059                           postdec1	equ	0xFE5
  4060                           fsr1h	equ	0xFE2
  4061                           fsr1l	equ	0xFE1
  4062                           
  4063 ;; *************** function _Mcu_StartSystemPll *****************
  4064 ;; Defined at:
  4065 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2, status,0
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4082 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4083 ;;Total ram usage:        2 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:   11
  4086 ;; This function calls:
  4087 ;;		Nothing
  4088 ;; This function is called by:
  4089 ;;		_SystemInit
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text4
  4094  006AE6                     __ptext4:
  4095                           	opt stack 0
  4096  006AE6                     _Mcu_StartSystemPll:
  4097                           	opt stack 18
  4098                           
  4099                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  4100                           
  4101                           ; BSR set to: 15
  4102                           ;incstack = 0
  4103  006AE6  0E03               	movlw	3
  4104  006AE8  0100               	movlb	0	; () banked
  4105  006AEA  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  4106  006AEC  0EE8               	movlw	232
  4107  006AEE  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4111  006AF0  8C9B               	bsf	3995,6,c	;volatile
  4112  006AF2                     l12506:
  4113                           
  4114                           ; BSR set to: 0
  4115  006AF2  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4116  006AF4  A0D8               	btfss	status,0,c
  4117  006AF6  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4118  006AF8  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4119  006AFA  E1FB               	bnz	l12506
  4120  006AFC  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4121  006AFE  B4D8               	btfsc	status,2,c
  4122  006B00  0012               	return	
  4123  006B02  D7F7               	goto	l237
  4124  006B04                     __end_of_Mcu_StartSystemPll:
  4125                           	opt stack 0
  4126                           tblptru	equ	0xFF8
  4127                           tblptrh	equ	0xFF7
  4128                           tblptrl	equ	0xFF6
  4129                           tablat	equ	0xFF5
  4130                           postinc0	equ	0xFEE
  4131                           wreg	equ	0xFE8
  4132                           postdec1	equ	0xFE5
  4133                           fsr1h	equ	0xFE2
  4134                           fsr1l	equ	0xFE1
  4135                           status	equ	0xFD8
  4136                           
  4137 ;; *************** function _Mcu_ConfigExtInt *****************
  4138 ;; Defined at:
  4139 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;		None
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;		None
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      void 
  4146 ;; Registers used:
  4147 ;;		wreg, status,2
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4157 ;;Total ram usage:        0 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; Hardware stack levels required when called:   11
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_SystemInit
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text5
  4168  006B78                     __ptext5:
  4169                           	opt stack 0
  4170  006B78                     _Mcu_ConfigExtInt:
  4171                           	opt stack 18
  4172                           
  4173                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;incstack = 0
  4177  006B78  8093               	bsf	3987,0,c	;volatile
  4178                           
  4179                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4180  006B7A  8695               	bsf	3989,3,c	;volatile
  4181                           
  4182                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4183  006B7C  010F               	movlb	15	; () banked
  4184  006B7E  8949               	bsf	73,4,b	;volatile
  4185                           
  4186                           ; BSR set to: 15
  4187                           ;mcu_drv.c: 108: RPINR1 = 20;
  4188  006B80  0E14               	movlw	20
  4189  006B82  010E               	movlb	14	; () banked
  4190  006B84  6FE7               	movwf	231,b	;volatile
  4191                           
  4192                           ; BSR set to: 14
  4193                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4194  006B86  88F2               	bsf	intcon,4,c	;volatile
  4195                           
  4196                           ; BSR set to: 14
  4197                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4198  006B88  86F0               	bsf	intcon3,3,c	;volatile
  4199                           
  4200                           ; BSR set to: 14
  4201                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4202  006B8A  8CF0               	bsf	intcon3,6,c	;volatile
  4203                           
  4204                           ; BSR set to: 14
  4205                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4206  006B8C  9CF1               	bcf	intcon2,6,c	;volatile
  4207                           
  4208                           ; BSR set to: 14
  4209                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4210  006B8E  9AF1               	bcf	intcon2,5,c	;volatile
  4211                           
  4212                           ; BSR set to: 14
  4213  006B90  0012               	return		;funcret
  4214  006B92                     __end_of_Mcu_ConfigExtInt:
  4215                           	opt stack 0
  4216                           tblptru	equ	0xFF8
  4217                           tblptrh	equ	0xFF7
  4218                           tblptrl	equ	0xFF6
  4219                           tablat	equ	0xFF5
  4220                           intcon	equ	0xFF2
  4221                           intcon2	equ	0xFF1
  4222                           intcon3	equ	0xFF0
  4223                           postinc0	equ	0xFEE
  4224                           wreg	equ	0xFE8
  4225                           postdec1	equ	0xFE5
  4226                           fsr1h	equ	0xFE2
  4227                           fsr1l	equ	0xFE1
  4228                           status	equ	0xFD8
  4229                           
  4230 ;; *************** function _Irq_InitIntController *****************
  4231 ;; Defined at:
  4232 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  IntPriorityE    1    wreg     enum E7720
  4235 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4236 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4248 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4249 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4251 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4252 ;;Total ram usage:        3 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:   11
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_SystemInit
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text6
  4263  006888                     __ptext6:
  4264                           	opt stack 0
  4265  006888                     _Irq_InitIntController:
  4266                           	opt stack 18
  4267                           
  4268                           ; BSR set to: 14
  4269                           ;incstack = 0
  4270                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4271  006888  0100               	movlb	0	; () banked
  4272  00688A  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4273                           
  4274                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4275  00688C  0100               	movlb	0	; () banked
  4276  00688E  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4277  006890  D002               	bra	u10995
  4278  006892  9ED0               	bcf	4048,7,c	;volatile
  4279  006894  D001               	bra	u10996
  4280  006896                     u10995:
  4281  006896  8ED0               	bsf	4048,7,c	;volatile
  4282  006898                     u10996:
  4283                           
  4284                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4285  006898  0100               	movlb	0	; () banked
  4286  00689A  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4287  00689C  D002               	bra	u11005
  4288  00689E  9EF2               	bcf	intcon,7,c	;volatile
  4289  0068A0  D001               	bra	u11006
  4290  0068A2                     u11005:
  4291  0068A2  8EF2               	bsf	intcon,7,c	;volatile
  4292  0068A4                     u11006:
  4293                           
  4294                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4295  0068A4  0100               	movlb	0	; () banked
  4296  0068A6  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4297  0068A8  D002               	bra	u11015
  4298  0068AA  9CF2               	bcf	intcon,6,c	;volatile
  4299  0068AC  D001               	bra	u11016
  4300  0068AE                     u11015:
  4301  0068AE  8CF2               	bsf	intcon,6,c	;volatile
  4302  0068B0                     u11016:
  4303  0068B0  0012               	return		;funcret
  4304  0068B2                     __end_of_Irq_InitIntController:
  4305                           	opt stack 0
  4306                           tblptru	equ	0xFF8
  4307                           tblptrh	equ	0xFF7
  4308                           tblptrl	equ	0xFF6
  4309                           tablat	equ	0xFF5
  4310                           intcon	equ	0xFF2
  4311                           intcon2	equ	0xFF1
  4312                           intcon3	equ	0xFF0
  4313                           postinc0	equ	0xFEE
  4314                           wreg	equ	0xFE8
  4315                           postdec1	equ	0xFE5
  4316                           fsr1h	equ	0xFE2
  4317                           fsr1l	equ	0xFE1
  4318                           status	equ	0xFD8
  4319                           
  4320 ;; *************** function _InitSchedTimer *****************
  4321 ;; Defined at:
  4322 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;		None
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  1    wreg      void 
  4329 ;; Registers used:
  4330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4337 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4339 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4340 ;;Total ram usage:        7 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:   14
  4343 ;; This function calls:
  4344 ;;		_Tmr_TmrBConfig
  4345 ;; This function is called by:
  4346 ;;		_SystemInit
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text7
  4351  006800                     __ptext7:
  4352                           	opt stack 0
  4353  006800                     _InitSchedTimer:
  4354                           	opt stack 15
  4355                           
  4356                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4357                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4358                           
  4359                           ;incstack = 0
  4360  006800  0E04               	movlw	4
  4361  006802  0100               	movlb	0	; () banked
  4362  006804  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4363                           
  4364                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4365  006806  0E0C               	movlw	12
  4366  006808  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4367                           
  4368                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4369  00680A  0E00               	movlw	0
  4370  00680C  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4371                           
  4372                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4373  00680E  0E01               	movlw	1
  4374  006810  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4375                           
  4376                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4377  006812  0E03               	movlw	3
  4378  006814  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4379  006816  0EE8               	movlw	232
  4380  006818  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4381                           
  4382                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4383  00681A  0E01               	movlw	1
  4384  00681C  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4388  00681E  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4389  006820  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4390  006822  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4391  006824  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4392  006826  0E02               	movlw	2
  4393  006828  EC32  F020         	call	_Tmr_TmrBConfig
  4394  00682C  0012               	return		;funcret
  4395  00682E                     __end_of_InitSchedTimer:
  4396                           	opt stack 0
  4397                           tblptru	equ	0xFF8
  4398                           tblptrh	equ	0xFF7
  4399                           tblptrl	equ	0xFF6
  4400                           tablat	equ	0xFF5
  4401                           intcon	equ	0xFF2
  4402                           intcon2	equ	0xFF1
  4403                           intcon3	equ	0xFF0
  4404                           postinc0	equ	0xFEE
  4405                           wreg	equ	0xFE8
  4406                           postdec1	equ	0xFE5
  4407                           fsr1h	equ	0xFE2
  4408                           fsr1l	equ	0xFE1
  4409                           status	equ	0xFD8
  4410                           
  4411 ;; *************** function _Tmr_TmrBConfig *****************
  4412 ;; Defined at:
  4413 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  TmrNumb         1    wreg     unsigned char 
  4416 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4417 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4429 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4430 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4431 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4432 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4433 ;;Total ram usage:        4 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:   13
  4436 ;; This function calls:
  4437 ;;		_TmrBInit
  4438 ;;		_Tmr_StartTmr
  4439 ;;		_Tmr_TmrBIrqSet
  4440 ;;		_Tmr_TmrBPrSet
  4441 ;; This function is called by:
  4442 ;;		_InitSchedTimer
  4443 ;;		_InitAuxTimer
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text8
  4448  004064                     __ptext8:
  4449                           	opt stack 0
  4450  004064                     _Tmr_TmrBConfig:
  4451                           	opt stack 15
  4452                           
  4453                           ;incstack = 0
  4454                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4455  004064  0100               	movlb	0	; () banked
  4456  004066  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4457                           
  4458                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4459  004068  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4460  00406C  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4461  004070  50DF               	movf	indf2,w,c
  4462  004072  0100               	movlb	0	; () banked
  4463  004074  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4464  004076  EE20 F001          	lfsr	2,1
  4465  00407A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4466  00407C  26D9               	addwf	fsr2l,f,c
  4467  00407E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4468  004080  22DA               	addwfc	fsr2h,f,c
  4469  004082  50DF               	movf	indf2,w,c
  4470  004084  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4471  004086  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4472  004088  ECCB  F026         	call	_TmrBInit
  4473                           
  4474                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4475  00408C  0100               	movlb	0	; () banked
  4476  00408E  EE20 F002          	lfsr	2,2
  4477  004092  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4478  004094  26D9               	addwf	fsr2l,f,c
  4479  004096  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4480  004098  22DA               	addwfc	fsr2h,f,c
  4481  00409A  04DE               	decf	postinc2,w,c
  4482  00409C  A4D8               	btfss	status,2,c
  4483  00409E  D00E               	goto	l546
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;tmr_drv.c: 277: {
  4487                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4488  0040A0  EE20 F003          	lfsr	2,3
  4489  0040A4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4490  0040A6  26D9               	addwf	fsr2l,f,c
  4491  0040A8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4492  0040AA  22DA               	addwfc	fsr2h,f,c
  4493  0040AC  50DF               	movf	indf2,w,c
  4494  0040AE  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4495  0040B0  0E01               	movlw	1
  4496  0040B2  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4497  0040B4  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4498  0040B6  EC71  F030         	call	_Tmr_TmrBIrqSet
  4499                           
  4500                           ;tmr_drv.c: 280: }
  4501  0040BA  D00E               	goto	l547
  4502  0040BC                     l546:
  4503                           
  4504                           ;tmr_drv.c: 281: else
  4505                           ;tmr_drv.c: 282: {
  4506                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4507  0040BC  0100               	movlb	0	; () banked
  4508  0040BE  EE20 F003          	lfsr	2,3
  4509  0040C2  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4510  0040C4  26D9               	addwf	fsr2l,f,c
  4511  0040C6  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4512  0040C8  22DA               	addwfc	fsr2h,f,c
  4513  0040CA  50DF               	movf	indf2,w,c
  4514  0040CC  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4515  0040CE  0E00               	movlw	0
  4516  0040D0  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4517  0040D2  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4518  0040D4  EC71  F030         	call	_Tmr_TmrBIrqSet
  4519  0040D8                     l547:
  4520                           
  4521                           ;tmr_drv.c: 285: }
  4522                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4523  0040D8  0100               	movlb	0	; () banked
  4524  0040DA  EE20 F004          	lfsr	2,4
  4525  0040DE  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4526  0040E0  26D9               	addwf	fsr2l,f,c
  4527  0040E2  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4528  0040E4  22DA               	addwfc	fsr2h,f,c
  4529  0040E6  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4530  0040EA  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4531  0040EE  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4532  0040F2  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4533  0040F6  50DF               	movf	indf2,w,c
  4534  0040F8  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4535  0040FA  EE20 F001          	lfsr	2,1
  4536  0040FE  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4537  004100  26D9               	addwf	fsr2l,f,c
  4538  004102  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4539  004104  22DA               	addwfc	fsr2h,f,c
  4540  004106  50DF               	movf	indf2,w,c
  4541  004108  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4542  00410A  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4543  00410C  EC5D  F019         	call	_Tmr_TmrBPrSet
  4544                           
  4545                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4546  004110  0100               	movlb	0	; () banked
  4547  004112  EE20 F006          	lfsr	2,6
  4548  004116  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4549  004118  26D9               	addwf	fsr2l,f,c
  4550  00411A  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4551  00411C  22DA               	addwfc	fsr2h,f,c
  4552  00411E  04DE               	decf	postinc2,w,c
  4553  004120  A4D8               	btfss	status,2,c
  4554  004122  0012               	return	
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;tmr_drv.c: 290: {
  4558                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4559  004124  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4560  004126  EC43  F035         	call	_Tmr_StartTmr
  4561                           
  4562                           ;tmr_drv.c: 293: }
  4563  00412A  0012               	return	
  4564  00412C                     __end_of_Tmr_TmrBConfig:
  4565                           	opt stack 0
  4566                           tblptru	equ	0xFF8
  4567                           tblptrh	equ	0xFF7
  4568                           tblptrl	equ	0xFF6
  4569                           tablat	equ	0xFF5
  4570                           intcon	equ	0xFF2
  4571                           intcon2	equ	0xFF1
  4572                           intcon3	equ	0xFF0
  4573                           postinc0	equ	0xFEE
  4574                           wreg	equ	0xFE8
  4575                           postdec1	equ	0xFE5
  4576                           fsr1h	equ	0xFE2
  4577                           fsr1l	equ	0xFE1
  4578                           indf2	equ	0xFDF
  4579                           postinc2	equ	0xFDE
  4580                           postdec2	equ	0xFDD
  4581                           fsr2h	equ	0xFDA
  4582                           fsr2l	equ	0xFD9
  4583                           status	equ	0xFD8
  4584                           
  4585 ;; *************** function _Tmr_TmrBPrSet *****************
  4586 ;; Defined at:
  4587 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  TmrNumb         1    wreg     unsigned char 
  4590 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4591 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4592 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4595 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4596 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  1    wreg      enum E7736
  4599 ;; Registers used:
  4600 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4606 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4607 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4609 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4610 ;;Total ram usage:       10 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; Hardware stack levels required when called:   12
  4613 ;; This function calls:
  4614 ;;		___lldiv
  4615 ;;		___lmul
  4616 ;; This function is called by:
  4617 ;;		_Tmr_TmrBConfig
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text9
  4622  0032BA                     __ptext9:
  4623                           	opt stack 0
  4624  0032BA                     _Tmr_TmrBPrSet:
  4625                           	opt stack 15
  4626                           
  4627                           ;incstack = 0
  4628                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4629  0032BA  0100               	movlb	0	; () banked
  4630  0032BC  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4631                           
  4632                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4633                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4634  0032BE  0E00               	movlw	0
  4635  0032C0  0100               	movlb	0	; () banked
  4636  0032C2  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4637  0032C4  0E00               	movlw	0
  4638  0032C6  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4639  0032C8  0E00               	movlw	0
  4640  0032CA  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4641  0032CC  0E00               	movlw	0
  4642  0032CE  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4646  0032D0  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4647  0032D2  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4648  0032D4  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4649  0032D8  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4650  0032DC  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4651  0032DE  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4652  0032E0  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4653  0032E4  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4654  0032E8  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4655  0032EA  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4656  0032EC  ECB1  F02D         	call	___lmul	;wreg free
  4657  0032F0  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4658  0032F4  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4659  0032F8  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4660  0032FC  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4661                           
  4662                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4663  003300  0E00               	movlw	0
  4664  003302  0100               	movlb	0	; () banked
  4665  003304  6F89               	movwf	___lldiv@dividend& (0+255),b
  4666  003306  0E1B               	movlw	27
  4667  003308  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4668  00330A  0EB7               	movlw	183
  4669  00330C  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4670  00330E  0E00               	movlw	0
  4671  003310  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4672  003312  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4673  003316  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4674  00331A  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4675  00331E  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4676  003322  ECEA  F029         	call	___lldiv	;wreg free
  4677  003326  0100               	movlb	0	; () banked
  4678  003328  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4679  00332A  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4680  00332C  E13A               	bnz	l15644
  4681  00332E  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4682  003330  A0D8               	btfss	status,0,c
  4683  003332  D02D               	goto	l529
  4684  003334  D036               	goto	l528
  4685  003336                     
  4686                           ; BSR set to: 0
  4687                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4688                           
  4689                           ; BSR set to: 0
  4690  003336  0E00               	movlw	0
  4691  003338  6F89               	movwf	___lldiv@dividend& (0+255),b
  4692  00333A  0E1B               	movlw	27
  4693  00333C  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4694  00333E  0EB7               	movlw	183
  4695  003340  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4696  003342  0E00               	movlw	0
  4697  003344  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4698  003346  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4699  00334A  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4700  00334E  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4701  003352  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4702  003356  ECEA  F029         	call	___lldiv	;wreg free
  4703  00335A  0100               	movlb	0	; () banked
  4704  00335C  5189               	movf	?___lldiv& (0+255),w,b
  4705  00335E  6ECB               	movwf	4043,c	;volatile
  4706                           
  4707                           ;tmr_drv.c: 210: break;
  4708  003360  D01D               	goto	l531
  4709  003362                     
  4710                           ; BSR set to: 0
  4711                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4712                           
  4713                           ; BSR set to: 0
  4714  003362  0E00               	movlw	0
  4715  003364  6F89               	movwf	___lldiv@dividend& (0+255),b
  4716  003366  0E1B               	movlw	27
  4717  003368  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4718  00336A  0EB7               	movlw	183
  4719  00336C  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4720  00336E  0E00               	movlw	0
  4721  003370  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4722  003372  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4723  003376  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4724  00337A  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4725  00337E  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4726  003382  ECEA  F029         	call	___lldiv	;wreg free
  4727  003386  0100               	movlb	0	; () banked
  4728  003388  5189               	movf	?___lldiv& (0+255),w,b
  4729  00338A  6E77               	movwf	3959,c	;volatile
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;tmr_drv.c: 219: }
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;tmr_drv.c: 218: break;
  4736                           
  4737                           ;tmr_drv.c: 217: default:
  4738                           
  4739                           ;tmr_drv.c: 215: break;
  4740  00338C  D007               	goto	l531
  4741  00338E                     l529:
  4742                           
  4743                           ; BSR set to: 0
  4744                           
  4745                           ; BSR set to: 0
  4746  00338E  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4747                           
  4748                           ; Switch size 1, requested type "space"
  4749                           ; Number of cases is 2, Range of values is 2 to 4
  4750                           ; switch strategies available:
  4751                           ; Name         Instructions Cycles
  4752                           ; simple_byte            7     4 (average)
  4753                           ;	Chosen strategy is simple_byte
  4754  003390  0A02               	xorlw	2	; case 2
  4755  003392  B4D8               	btfsc	status,2,c
  4756  003394  D7D0               	goto	l530
  4757  003396  0A06               	xorlw	6	; case 4
  4758  003398  B4D8               	btfsc	status,2,c
  4759  00339A  D7E3               	goto	l532
  4760  00339C                     l531:
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4764                           
  4765                           ; BSR set to: 0
  4766  00339C  0E00               	movlw	0
  4767  00339E  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4768                           
  4769                           ;tmr_drv.c: 223: }
  4770  0033A0  0012               	return	
  4771  0033A2                     l528:
  4772  0033A2                     l15644:
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;tmr_drv.c: 224: else
  4776                           ;tmr_drv.c: 225: {
  4777                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4778  0033A2  0E01               	movlw	1
  4779  0033A4  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4780                           
  4781                           ; BSR set to: 0
  4782  0033A6  0012               	return	
  4783  0033A8                     __end_of_Tmr_TmrBPrSet:
  4784                           	opt stack 0
  4785                           tblptru	equ	0xFF8
  4786                           tblptrh	equ	0xFF7
  4787                           tblptrl	equ	0xFF6
  4788                           tablat	equ	0xFF5
  4789                           prodh	equ	0xFF4
  4790                           prodl	equ	0xFF3
  4791                           intcon	equ	0xFF2
  4792                           intcon2	equ	0xFF1
  4793                           intcon3	equ	0xFF0
  4794                           postinc0	equ	0xFEE
  4795                           wreg	equ	0xFE8
  4796                           postdec1	equ	0xFE5
  4797                           fsr1h	equ	0xFE2
  4798                           fsr1l	equ	0xFE1
  4799                           indf2	equ	0xFDF
  4800                           postinc2	equ	0xFDE
  4801                           postdec2	equ	0xFDD
  4802                           fsr2h	equ	0xFDA
  4803                           fsr2l	equ	0xFD9
  4804                           status	equ	0xFD8
  4805                           
  4806 ;; *************** function _Tmr_TmrBIrqSet *****************
  4807 ;; Defined at:
  4808 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  TmrNumb         1    wreg     unsigned char 
  4811 ;;  Priority        1   29[BANK0 ] enum E7716
  4812 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  1    wreg      void 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4824 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4825 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4827 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4828 ;;Total ram usage:        3 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:   11
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_Tmr_TmrBConfig
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text10
  4839  0060E2                     __ptext10:
  4840                           	opt stack 0
  4841  0060E2                     _Tmr_TmrBIrqSet:
  4842                           	opt stack 16
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;incstack = 0
  4846                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4847  0060E2  0100               	movlb	0	; () banked
  4848  0060E4  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4849                           
  4850                           ;tmr_drv.c: 156: switch (TmrNumb)
  4851  0060E6  D01A               	goto	l520
  4852  0060E8                     l521:
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4856  0060E8  929E               	bcf	3998,1,c	;volatile
  4857                           
  4858                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4859  0060EA  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4860  0060EC  D002               	bra	u9285
  4861  0060EE  929F               	bcf	3999,1,c	;volatile
  4862  0060F0  D001               	bra	u9286
  4863  0060F2                     u9285:
  4864  0060F2  829F               	bsf	3999,1,c	;volatile
  4865  0060F4                     u9286:
  4866                           
  4867                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4868  0060F4  0100               	movlb	0	; () banked
  4869  0060F6  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4870  0060F8  D002               	bra	u9295
  4871  0060FA  929D               	bcf	3997,1,c	;volatile
  4872  0060FC  D001               	bra	u9296
  4873  0060FE                     u9295:
  4874  0060FE  829D               	bsf	3997,1,c	;volatile
  4875  006100                     u9296:
  4876                           
  4877                           ;tmr_drv.c: 165: break;
  4878  006100  0012               	return	
  4879  006102                     l523:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4883  006102  96A4               	bcf	4004,3,c	;volatile
  4884                           
  4885                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4886  006104  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4887  006106  D002               	bra	u9305
  4888  006108  96A5               	bcf	4005,3,c	;volatile
  4889  00610A  D001               	bra	u9306
  4890  00610C                     u9305:
  4891  00610C  86A5               	bsf	4005,3,c	;volatile
  4892  00610E                     u9306:
  4893                           
  4894                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4895  00610E  0100               	movlb	0	; () banked
  4896  006110  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4897  006112  D002               	bra	u9315
  4898  006114  96A3               	bcf	4003,3,c	;volatile
  4899  006116  D001               	bra	u9316
  4900  006118                     u9315:
  4901  006118  86A3               	bsf	4003,3,c	;volatile
  4902  00611A                     u9316:
  4903                           
  4904                           ;tmr_drv.c: 178: }
  4905                           
  4906                           ;tmr_drv.c: 177: break;
  4907                           
  4908                           ;tmr_drv.c: 176: default:
  4909                           
  4910                           ;tmr_drv.c: 174: break;
  4911  00611A  0012               	return	
  4912  00611C                     l520:
  4913  00611C  0100               	movlb	0	; () banked
  4914  00611E  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4915                           
  4916                           ; Switch size 1, requested type "space"
  4917                           ; Number of cases is 2, Range of values is 2 to 4
  4918                           ; switch strategies available:
  4919                           ; Name         Instructions Cycles
  4920                           ; simple_byte            7     4 (average)
  4921                           ;	Chosen strategy is simple_byte
  4922  006120  0A02               	xorlw	2	; case 2
  4923  006122  B4D8               	btfsc	status,2,c
  4924  006124  D7E1               	goto	l521
  4925  006126  0A06               	xorlw	6	; case 4
  4926  006128  A4D8               	btfss	status,2,c
  4927  00612A  0012               	return	
  4928  00612C  D7EA               	goto	l523
  4929  00612E                     __end_of_Tmr_TmrBIrqSet:
  4930                           	opt stack 0
  4931                           tblptru	equ	0xFF8
  4932                           tblptrh	equ	0xFF7
  4933                           tblptrl	equ	0xFF6
  4934                           tablat	equ	0xFF5
  4935                           prodh	equ	0xFF4
  4936                           prodl	equ	0xFF3
  4937                           intcon	equ	0xFF2
  4938                           intcon2	equ	0xFF1
  4939                           intcon3	equ	0xFF0
  4940                           postinc0	equ	0xFEE
  4941                           wreg	equ	0xFE8
  4942                           postdec1	equ	0xFE5
  4943                           fsr1h	equ	0xFE2
  4944                           fsr1l	equ	0xFE1
  4945                           indf2	equ	0xFDF
  4946                           postinc2	equ	0xFDE
  4947                           postdec2	equ	0xFDD
  4948                           fsr2h	equ	0xFDA
  4949                           fsr2l	equ	0xFD9
  4950                           status	equ	0xFD8
  4951                           
  4952 ;; *************** function _Tmr_StartTmr *****************
  4953 ;; Defined at:
  4954 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  TmrNumb         1    wreg     unsigned char 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg, status,2, status,0
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4971 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4972 ;;Total ram usage:        1 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; Hardware stack levels required when called:   11
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_Tmr_TmrBConfig
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text11
  4983  006A86                     __ptext11:
  4984                           	opt stack 0
  4985  006A86                     _Tmr_StartTmr:
  4986                           	opt stack 16
  4987                           
  4988                           ;incstack = 0
  4989                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4990  006A86  0100               	movlb	0	; () banked
  4991  006A88  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4992                           
  4993                           ;tmr_drv.c: 245: switch (TmrNumb)
  4994  006A8A  D004               	goto	l538
  4995  006A8C                     l539:
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4999  006A8C  84CA               	bsf	4042,2,c	;volatile
  5000                           
  5001                           ;tmr_drv.c: 250: break;
  5002  006A8E  0012               	return	
  5003  006A90                     l541:
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  5007  006A90  8476               	bsf	3958,2,c	;volatile
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;tmr_drv.c: 259: }
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;tmr_drv.c: 258: break;
  5014                           
  5015                           ;tmr_drv.c: 257: default:
  5016                           
  5017                           ;tmr_drv.c: 255: break;
  5018  006A92  0012               	return	
  5019  006A94                     l538:
  5020                           
  5021                           ; BSR set to: 0
  5022  006A94  0100               	movlb	0	; () banked
  5023  006A96  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  5024                           
  5025                           ; Switch size 1, requested type "space"
  5026                           ; Number of cases is 2, Range of values is 2 to 4
  5027                           ; switch strategies available:
  5028                           ; Name         Instructions Cycles
  5029                           ; simple_byte            7     4 (average)
  5030                           ;	Chosen strategy is simple_byte
  5031  006A98  0A02               	xorlw	2	; case 2
  5032  006A9A  B4D8               	btfsc	status,2,c
  5033  006A9C  D7F7               	goto	l539
  5034  006A9E  0A06               	xorlw	6	; case 4
  5035  006AA0  A4D8               	btfss	status,2,c
  5036  006AA2  0012               	return	
  5037  006AA4  D7F5               	goto	l541
  5038  006AA6                     __end_of_Tmr_StartTmr:
  5039                           	opt stack 0
  5040                           tblptru	equ	0xFF8
  5041                           tblptrh	equ	0xFF7
  5042                           tblptrl	equ	0xFF6
  5043                           tablat	equ	0xFF5
  5044                           prodh	equ	0xFF4
  5045                           prodl	equ	0xFF3
  5046                           intcon	equ	0xFF2
  5047                           intcon2	equ	0xFF1
  5048                           intcon3	equ	0xFF0
  5049                           postinc0	equ	0xFEE
  5050                           wreg	equ	0xFE8
  5051                           postdec1	equ	0xFE5
  5052                           fsr1h	equ	0xFE2
  5053                           fsr1l	equ	0xFE1
  5054                           indf2	equ	0xFDF
  5055                           postinc2	equ	0xFDE
  5056                           postdec2	equ	0xFDD
  5057                           fsr2h	equ	0xFDA
  5058                           fsr2l	equ	0xFD9
  5059                           status	equ	0xFD8
  5060                           
  5061 ;; *************** function _TmrBInit *****************
  5062 ;; Defined at:
  5063 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  TmrNumb         1    wreg     unsigned char 
  5066 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  5067 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  1    wreg      void 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2, status,0
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5081 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5082 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5083 ;;Total ram usage:        4 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:   11
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_Tmr_TmrBConfig
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text12
  5094  004D96                     __ptext12:
  5095                           	opt stack 0
  5096  004D96                     _TmrBInit:
  5097                           	opt stack 16
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;incstack = 0
  5101                           ;TmrBInit@TmrNumb stored from wreg
  5102  004D96  0100               	movlb	0	; () banked
  5103  004D98  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  5104                           
  5105                           ;tmr_drv.c: 75: switch (TmrNumb)
  5106  004D9A  D03F               	goto	l500
  5107  004D9C                     l503:
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5111  004D9C  90CA               	bcf	4042,0,c	;volatile
  5112  004D9E  D001               	goto	L1
  5113  004DA0                     l505:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5117  004DA0  80CA               	bsf	4042,0,c	;volatile
  5118  004DA2                     L1:
  5119                           
  5120                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5121  004DA2  92CA               	bcf	4042,1,c	;volatile
  5122                           
  5123                           ;tmr_drv.c: 91: break;
  5124  004DA4  D00E               	goto	l504
  5125  004DA6                     l506:
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5129  004DA6  80CA               	bsf	4042,0,c	;volatile
  5130                           
  5131                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5132  004DA8  82CA               	bsf	4042,1,c	;volatile
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;tmr_drv.c: 100: }
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;tmr_drv.c: 99: break;
  5139                           
  5140                           ;tmr_drv.c: 98: default:
  5141                           
  5142                           ;tmr_drv.c: 96: break;
  5143  004DAA  D00B               	goto	l504
  5144  004DAC                     
  5145                           ; BSR set to: 0
  5146  004DAC  0100               	movlb	0	; () banked
  5147  004DAE  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5148                           
  5149                           ; Switch size 1, requested type "space"
  5150                           ; Number of cases is 3, Range of values is 1 to 16
  5151                           ; switch strategies available:
  5152                           ; Name         Instructions Cycles
  5153                           ; simple_byte           10     6 (average)
  5154                           ;	Chosen strategy is simple_byte
  5155  004DB0  0A01               	xorlw	1	; case 1
  5156  004DB2  B4D8               	btfsc	status,2,c
  5157  004DB4  D7F3               	goto	l503
  5158  004DB6  0A05               	xorlw	5	; case 4
  5159  004DB8  B4D8               	btfsc	status,2,c
  5160  004DBA  D7F2               	goto	l505
  5161  004DBC  0A14               	xorlw	20	; case 16
  5162  004DBE  B4D8               	btfsc	status,2,c
  5163  004DC0  D7F2               	goto	l506
  5164  004DC2                     l504:
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5168                           
  5169                           ; BSR set to: 0
  5170  004DC2  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5171  004DC6  0EFF               	movlw	255
  5172  004DC8  277F               	addwf	??_TmrBInit& (0+255),f,b
  5173  004DCA  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5174  004DCC  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5175  004DCE  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5176  004DD0  50CA               	movf	4042,w,c	;volatile
  5177  004DD2  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5178  004DD4  0B87               	andlw	-121
  5179  004DD6  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5180  004DD8  6ECA               	movwf	4042,c	;volatile
  5181                           
  5182                           ;tmr_drv.c: 104: break;
  5183  004DDA  0012               	return	
  5184  004DDC                     l511:
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5188  004DDC  9076               	bcf	3958,0,c	;volatile
  5189  004DDE  D001               	goto	L2
  5190  004DE0                     l513:
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5194  004DE0  8076               	bsf	3958,0,c	;volatile
  5195  004DE2                     L2:
  5196                           
  5197                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5198  004DE2  9276               	bcf	3958,1,c	;volatile
  5199                           
  5200                           ;tmr_drv.c: 120: break;
  5201  004DE4  D00D               	goto	l512
  5202  004DE6                     l514:
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5206  004DE6  8076               	bsf	3958,0,c	;volatile
  5207                           
  5208                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5209  004DE8  8276               	bsf	3958,1,c	;volatile
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;tmr_drv.c: 129: }
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;tmr_drv.c: 128: break;
  5216                           
  5217                           ;tmr_drv.c: 127: default:
  5218                           
  5219                           ;tmr_drv.c: 125: break;
  5220  004DEA  D00A               	goto	l512
  5221  004DEC                     
  5222                           ; BSR set to: 0
  5223                           
  5224                           ; BSR set to: 0
  5225  004DEC  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5226                           
  5227                           ; Switch size 1, requested type "space"
  5228                           ; Number of cases is 3, Range of values is 1 to 16
  5229                           ; switch strategies available:
  5230                           ; Name         Instructions Cycles
  5231                           ; simple_byte           10     6 (average)
  5232                           ;	Chosen strategy is simple_byte
  5233  004DEE  0A01               	xorlw	1	; case 1
  5234  004DF0  B4D8               	btfsc	status,2,c
  5235  004DF2  D7F4               	goto	l511
  5236  004DF4  0A05               	xorlw	5	; case 4
  5237  004DF6  B4D8               	btfsc	status,2,c
  5238  004DF8  D7F3               	goto	l513
  5239  004DFA  0A14               	xorlw	20	; case 16
  5240  004DFC  B4D8               	btfsc	status,2,c
  5241  004DFE  D7F3               	goto	l514
  5242  004E00                     l512:
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5246                           
  5247                           ; BSR set to: 0
  5248  004E00  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5249  004E04  0EFF               	movlw	255
  5250  004E06  277F               	addwf	??_TmrBInit& (0+255),f,b
  5251  004E08  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5252  004E0A  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5253  004E0C  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5254  004E0E  5076               	movf	3958,w,c	;volatile
  5255  004E10  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5256  004E12  0B87               	andlw	-121
  5257  004E14  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5258  004E16  6E76               	movwf	3958,c	;volatile
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;tmr_drv.c: 137: }
  5262                           
  5263                           ; BSR set to: 0
  5264                           ;tmr_drv.c: 136: break;
  5265                           
  5266                           ;tmr_drv.c: 135: default:
  5267                           
  5268                           ;tmr_drv.c: 133: break;
  5269  004E18  0012               	return	
  5270  004E1A                     l500:
  5271                           
  5272                           ; BSR set to: 0
  5273  004E1A  0100               	movlb	0	; () banked
  5274  004E1C  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5275                           
  5276                           ; Switch size 1, requested type "space"
  5277                           ; Number of cases is 2, Range of values is 2 to 4
  5278                           ; switch strategies available:
  5279                           ; Name         Instructions Cycles
  5280                           ; simple_byte            7     4 (average)
  5281                           ;	Chosen strategy is simple_byte
  5282  004E1E  0A02               	xorlw	2	; case 2
  5283  004E20  B4D8               	btfsc	status,2,c
  5284  004E22  D7C4               	goto	l502
  5285  004E24  0A06               	xorlw	6	; case 4
  5286  004E26  A4D8               	btfss	status,2,c
  5287  004E28  0012               	return	
  5288  004E2A  D7E0               	goto	l510
  5289  004E2C                     __end_of_TmrBInit:
  5290                           	opt stack 0
  5291                           tblptru	equ	0xFF8
  5292                           tblptrh	equ	0xFF7
  5293                           tblptrl	equ	0xFF6
  5294                           tablat	equ	0xFF5
  5295                           prodh	equ	0xFF4
  5296                           prodl	equ	0xFF3
  5297                           intcon	equ	0xFF2
  5298                           intcon2	equ	0xFF1
  5299                           intcon3	equ	0xFF0
  5300                           postinc0	equ	0xFEE
  5301                           wreg	equ	0xFE8
  5302                           postdec1	equ	0xFE5
  5303                           fsr1h	equ	0xFE2
  5304                           fsr1l	equ	0xFE1
  5305                           indf2	equ	0xFDF
  5306                           postinc2	equ	0xFDE
  5307                           postdec2	equ	0xFDD
  5308                           fsr2h	equ	0xFDA
  5309                           fsr2l	equ	0xFD9
  5310                           status	equ	0xFD8
  5311                           
  5312 ;; *************** function _Sch_MainScheduler *****************
  5313 ;; Defined at:
  5314 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5332 ;;Total ram usage:        0 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:   22
  5335 ;; This function calls:
  5336 ;;		_InitializeTasks
  5337 ;;		_ScheduleTasks
  5338 ;; This function is called by:
  5339 ;;		_main
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text13
  5344  006B04                     __ptext13:
  5345                           	opt stack 0
  5346  006B04                     _Sch_MainScheduler:
  5347                           	opt stack 8
  5348                           
  5349                           ;os_sched.c: 178: InitializeTasks();
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;incstack = 0
  5353  006B04  ECAC  F02A         	call	_InitializeTasks	;wreg free
  5354                           
  5355                           ;os_sched.c: 180: SystemState = RunningState;
  5356  006B08  0E01               	movlw	1
  5357  006B0A  0100               	movlb	0	; () banked
  5358  006B0C  6FD4               	movwf	_SystemState& (0+255),b
  5359  006B0E                     
  5360                           ;os_sched.c: 188: {
  5361                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5362                           
  5363                           ; BSR set to: 0
  5364  006B0E  0102               	movlb	2	; () banked
  5365  006B10  51F2               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5366  006B12  A4D8               	btfss	status,2,c
  5367  006B14  D7FC               	goto	l790
  5368                           
  5369                           ; BSR set to: 2
  5370                           ;os_sched.c: 191: {
  5371                           ;os_sched.c: 196: ScheduleTasks();
  5372  006B16  EC31  F017         	call	_ScheduleTasks	;wreg free
  5373                           
  5374                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5375  006B1A  0E01               	movlw	1
  5376  006B1C  0102               	movlb	2	; () banked
  5377  006B1E  6FF2               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5378                           
  5379                           ; BSR set to: 2
  5380                           
  5381                           ; BSR set to: 2
  5382  006B20  D7F6               	goto	l790
  5383  006B22                     __end_of_Sch_MainScheduler:
  5384                           	opt stack 0
  5385                           tblptru	equ	0xFF8
  5386                           tblptrh	equ	0xFF7
  5387                           tblptrl	equ	0xFF6
  5388                           tablat	equ	0xFF5
  5389                           prodh	equ	0xFF4
  5390                           prodl	equ	0xFF3
  5391                           intcon	equ	0xFF2
  5392                           intcon2	equ	0xFF1
  5393                           intcon3	equ	0xFF0
  5394                           postinc0	equ	0xFEE
  5395                           wreg	equ	0xFE8
  5396                           postdec1	equ	0xFE5
  5397                           fsr1h	equ	0xFE2
  5398                           fsr1l	equ	0xFE1
  5399                           indf2	equ	0xFDF
  5400                           postinc2	equ	0xFDE
  5401                           postdec2	equ	0xFDD
  5402                           fsr2h	equ	0xFDA
  5403                           fsr2l	equ	0xFD9
  5404                           status	equ	0xFD8
  5405                           
  5406 ;; *************** function _ScheduleTasks *****************
  5407 ;; Defined at:
  5408 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;  ActiveTaskIn    1  200[BANK2 ] unsigned char 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5423 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       4       0       0       0       0       0       
      +0       0       0       0
  5425 ;;      Totals:         0       0       0       1       0       0       4       0       0       0       0       0       
      +0       0       0       0
  5426 ;;Total ram usage:        5 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:   21
  5429 ;; This function calls:
  5430 ;;		_I2cSlv_MainTask
  5431 ;;		_Led_MainTask
  5432 ;;		_MdmHttp_MainTask
  5433 ;;		_Mdm_DrvMainFn
  5434 ;;		_Mdm_MainTask
  5435 ;;		_MyApp_Task
  5436 ;;		_Rtcm_MainTask
  5437 ;;		_Term_MainTask
  5438 ;;		_UsbDevice_MainTask
  5439 ;;		_Wdg_MainTask
  5440 ;; This function is called by:
  5441 ;;		_Sch_MainScheduler
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text14
  5446  002E62                     __ptext14:
  5447                           	opt stack 0
  5448  002E62                     _ScheduleTasks:
  5449                           	opt stack 8
  5450                           
  5451                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5452                           
  5453                           ; BSR set to: 2
  5454                           ;incstack = 0
  5455  002E62  0E00               	movlw	0
  5456  002E64  0102               	movlb	2	; () banked
  5457  002E66  6FC8               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5458                           
  5459                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5460  002E68  0E00               	movlw	0
  5461  002E6A  6FC8               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5462  002E6C                     l16964:
  5463                           
  5464                           ; BSR set to: 2
  5465  002E6C  0E30               	movlw	low _TaskNumber
  5466  002E6E  6EF6               	movwf	tblptrl,c
  5467  002E70                     	if	1	;There is more than 1 active tblptr byte
  5468  002E70  0EFC               	movlw	high _TaskNumber
  5469  002E72  6EF7               	movwf	tblptrh,c
  5470  002E74                     	endif
  5471  002E74                     	if	0	;There are less than 3 active tblptr bytes
  5472  002E74                     	endif
  5473  002E74  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5474  002E76  0105               	movlb	5	; () banked
  5475  002E78  6FF4               	movwf	??_ScheduleTasks& (0+255),b
  5476  002E7A  6BF5               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5477  002E7C  0009               	tblrd		*+
  5478  002E7E  50F5               	movf	tablat,w,c
  5479  002E80  5DF4               	subwf	??_ScheduleTasks& (0+255),w,b
  5480  002E82  0009               	tblrd		*+
  5481  002E84  50F5               	movf	tablat,w,c
  5482  002E86  59F5               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5483  002E88  B0D8               	btfsc	status,0,c
  5484  002E8A  0012               	return	
  5485                           
  5486                           ; BSR set to: 5
  5487                           ;os_sched.c: 106: {
  5488                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5489                           
  5490                           ; BSR set to: 5
  5491                           
  5492                           ; BSR set to: 5
  5493  002E8C  0102               	movlb	2	; () banked
  5494  002E8E  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5495  002E90  0D08               	mullw	8
  5496  002E92  0E03               	movlw	3
  5497  002E94  26F3               	addwf	prodl,f,c
  5498  002E96  0E00               	movlw	0
  5499  002E98  22F4               	addwfc	prodh,f,c
  5500  002E9A  0EA4               	movlw	low _TaskTable
  5501  002E9C  24F3               	addwf	prodl,w,c
  5502  002E9E  6ED9               	movwf	fsr2l,c
  5503  002EA0  0E05               	movlw	high _TaskTable
  5504  002EA2  20F4               	addwfc	prodh,w,c
  5505  002EA4  6EDA               	movwf	fsr2h,c
  5506  002EA6  2ADE               	incf	postinc2,f,c
  5507  002EA8  0E00               	movlw	0
  5508  002EAA  22DD               	addwfc	postdec2,f,c
  5509                           
  5510                           ; BSR set to: 2
  5511                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5512  002EAC  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5513  002EAE  0D08               	mullw	8
  5514  002EB0  0E05               	movlw	5
  5515  002EB2  26F3               	addwf	prodl,f,c
  5516  002EB4  0E00               	movlw	0
  5517  002EB6  22F4               	addwfc	prodh,f,c
  5518  002EB8  0EA4               	movlw	low _TaskTable
  5519  002EBA  24F3               	addwf	prodl,w,c
  5520  002EBC  6ED9               	movwf	fsr2l,c
  5521  002EBE  0E05               	movlw	high _TaskTable
  5522  002EC0  20F4               	addwfc	prodh,w,c
  5523  002EC2  6EDA               	movwf	fsr2h,c
  5524  002EC4  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5525  002EC6  0D08               	mullw	8
  5526  002EC8  0E03               	movlw	3
  5527  002ECA  26F3               	addwf	prodl,f,c
  5528  002ECC  0E00               	movlw	0
  5529  002ECE  22F4               	addwfc	prodh,f,c
  5530  002ED0  0EA4               	movlw	low _TaskTable
  5531  002ED2  24F3               	addwf	prodl,w,c
  5532  002ED4  6EE1               	movwf	fsr1l,c
  5533  002ED6  0E05               	movlw	high _TaskTable
  5534  002ED8  20F4               	addwfc	prodh,w,c
  5535  002EDA  6EE2               	movwf	fsr1h,c
  5536  002EDC  50DE               	movf	postinc2,w,c
  5537  002EDE  5CE6               	subwf	postinc1,w,c
  5538  002EE0  50DE               	movf	postinc2,w,c
  5539  002EE2  58E6               	subwfb	postinc1,w,c
  5540  002EE4  A0D8               	btfss	status,0,c
  5541  002EE6  D04E               	goto	l775
  5542                           
  5543                           ; BSR set to: 2
  5544                           ;os_sched.c: 111: {
  5545                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5546  002EE8  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5547  002EEA  0D08               	mullw	8
  5548  002EEC  0E03               	movlw	3
  5549  002EEE  26F3               	addwf	prodl,f,c
  5550  002EF0  0E00               	movlw	0
  5551  002EF2  22F4               	addwfc	prodh,f,c
  5552  002EF4  0EA4               	movlw	low _TaskTable
  5553  002EF6  24F3               	addwf	prodl,w,c
  5554  002EF8  6ED9               	movwf	fsr2l,c
  5555  002EFA  0E05               	movlw	high _TaskTable
  5556  002EFC  20F4               	addwfc	prodh,w,c
  5557  002EFE  6EDA               	movwf	fsr2h,c
  5558  002F00  0E00               	movlw	0
  5559  002F02  6EDE               	movwf	postinc2,c
  5560  002F04  0E00               	movlw	0
  5561  002F06  6EDD               	movwf	postdec2,c
  5562                           
  5563                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5564  002F08  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5565  002F0A  0D08               	mullw	8
  5566  002F0C  0E02               	movlw	2
  5567  002F0E  26F3               	addwf	prodl,f,c
  5568  002F10  0E00               	movlw	0
  5569  002F12  22F4               	addwfc	prodh,f,c
  5570  002F14  0EA4               	movlw	low _TaskTable
  5571  002F16  24F3               	addwf	prodl,w,c
  5572  002F18  6ED9               	movwf	fsr2l,c
  5573  002F1A  0E05               	movlw	high _TaskTable
  5574  002F1C  20F4               	addwfc	prodh,w,c
  5575  002F1E  6EDA               	movwf	fsr2h,c
  5576  002F20  0E01               	movlw	1
  5577  002F22  6EDF               	movwf	indf2,c
  5578                           
  5579                           ; BSR set to: 2
  5580                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5581  002F24  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5582  002F26  0D08               	mullw	8
  5583  002F28  0EA4               	movlw	low _TaskTable
  5584  002F2A  24F3               	addwf	prodl,w,c
  5585  002F2C  6ED9               	movwf	fsr2l,c
  5586  002F2E  0E05               	movlw	high _TaskTable
  5587  002F30  20F4               	addwfc	prodh,w,c
  5588  002F32  6EDA               	movwf	fsr2h,c
  5589  002F34  D801               	call	u16748
  5590  002F36  D017               	goto	u16749
  5591  002F38                     u16748:
  5592  002F38  0005               	push	
  5593  002F3A  6EFA               	movwf	pclath,c
  5594  002F3C  50DE               	movf	postinc2,w,c
  5595  002F3E  6EFD               	movwf	tosl,c
  5596  002F40  50DE               	movf	postinc2,w,c
  5597  002F42  6EFE               	movwf	tosh,c
  5598  002F44  50F8               	movf	tblptru,w,c
  5599  002F46  6EFF               	movwf	tosu,c
  5600  002F48  50FA               	movf	pclath,w,c
  5601  002F4A  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5602  002F4C  0D08               	mullw	8
  5603  002F4E  0E07               	movlw	7
  5604  002F50  26F3               	addwf	prodl,f,c
  5605  002F52  0E00               	movlw	0
  5606  002F54  22F4               	addwfc	prodh,f,c
  5607  002F56  0EA4               	movlw	low _TaskTable
  5608  002F58  24F3               	addwf	prodl,w,c
  5609  002F5A  6ED9               	movwf	fsr2l,c
  5610  002F5C  0E05               	movlw	high _TaskTable
  5611  002F5E  20F4               	addwfc	prodh,w,c
  5612  002F60  6EDA               	movwf	fsr2h,c
  5613  002F62  50DF               	movf	indf2,w,c
  5614  002F64  0012               	return		;indir
  5615  002F66                     u16749:
  5616                           
  5617                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5618  002F66  0102               	movlb	2	; () banked
  5619  002F68  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5620  002F6A  0D08               	mullw	8
  5621  002F6C  0E02               	movlw	2
  5622  002F6E  26F3               	addwf	prodl,f,c
  5623  002F70  0E00               	movlw	0
  5624  002F72  22F4               	addwfc	prodh,f,c
  5625  002F74  0EA4               	movlw	low _TaskTable
  5626  002F76  24F3               	addwf	prodl,w,c
  5627  002F78  6ED9               	movwf	fsr2l,c
  5628  002F7A  0E05               	movlw	high _TaskTable
  5629  002F7C  20F4               	addwfc	prodh,w,c
  5630  002F7E  6EDA               	movwf	fsr2h,c
  5631  002F80  0E00               	movlw	0
  5632  002F82  6EDF               	movwf	indf2,c
  5633  002F84                     l775:
  5634                           
  5635                           ; BSR set to: 2
  5636                           
  5637                           ; BSR set to: 2
  5638                           
  5639                           ;os_sched.c: 117: else
  5640                           ;os_sched.c: 118: {
  5641                           
  5642                           ; BSR set to: 2
  5643  002F84  2BC8               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5644  002F86  D772               	goto	l16964
  5645  002F88                     __end_of_ScheduleTasks:
  5646                           	opt stack 0
  5647                           tosu	equ	0xFFF
  5648                           tosh	equ	0xFFE
  5649                           tosl	equ	0xFFD
  5650                           pclath	equ	0xFFA
  5651                           tblptru	equ	0xFF8
  5652                           tblptrh	equ	0xFF7
  5653                           tblptrl	equ	0xFF6
  5654                           tablat	equ	0xFF5
  5655                           prodh	equ	0xFF4
  5656                           prodl	equ	0xFF3
  5657                           intcon	equ	0xFF2
  5658                           intcon2	equ	0xFF1
  5659                           intcon3	equ	0xFF0
  5660                           postinc0	equ	0xFEE
  5661                           wreg	equ	0xFE8
  5662                           postinc1	equ	0xFE6
  5663                           postdec1	equ	0xFE5
  5664                           fsr1h	equ	0xFE2
  5665                           fsr1l	equ	0xFE1
  5666                           indf2	equ	0xFDF
  5667                           postinc2	equ	0xFDE
  5668                           postdec2	equ	0xFDD
  5669                           fsr2h	equ	0xFDA
  5670                           fsr2l	equ	0xFD9
  5671                           status	equ	0xFD8
  5672                           
  5673 ;; *************** function _InitializeTasks *****************
  5674 ;; Defined at:
  5675 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;		None
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;  ActiveTaskIn    1  200[BANK2 ] unsigned char 
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  1    wreg      void 
  5682 ;; Registers used:
  5683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5690 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5691 ;;      Temps:          0       0       0       0       0       0       2       0       0       0       0       0       
      +0       0       0       0
  5692 ;;      Totals:         0       0       0       1       0       0       2       0       0       0       0       0       
      +0       0       0       0
  5693 ;;Total ram usage:        3 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; Hardware stack levels required when called:   21
  5696 ;; This function calls:
  5697 ;;		_I2cSlv_MainTask
  5698 ;;		_Led_MainTask
  5699 ;;		_MdmHttp_MainTask
  5700 ;;		_Mdm_DrvMainFn
  5701 ;;		_Mdm_MainTask
  5702 ;;		_MyApp_Task
  5703 ;;		_Rtcm_MainTask
  5704 ;;		_Term_MainTask
  5705 ;;		_UsbDevice_MainTask
  5706 ;;		_Wdg_MainTask
  5707 ;; This function is called by:
  5708 ;;		_Sch_MainScheduler
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           	psect	text15
  5713  005558                     __ptext15:
  5714                           	opt stack 0
  5715  005558                     _InitializeTasks:
  5716                           	opt stack 8
  5717                           
  5718                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5719                           
  5720                           ; BSR set to: 5
  5721                           ;incstack = 0
  5722  005558  0E00               	movlw	0
  5723  00555A  0102               	movlb	2	; () banked
  5724  00555C  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5725                           
  5726                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5727  00555E  0E00               	movlw	0
  5728  005560  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5729  005562                     l16952:
  5730                           
  5731                           ; BSR set to: 2
  5732  005562  0E30               	movlw	low _TaskNumber
  5733  005564  6EF6               	movwf	tblptrl,c
  5734  005566                     	if	1	;There is more than 1 active tblptr byte
  5735  005566  0EFC               	movlw	high _TaskNumber
  5736  005568  6EF7               	movwf	tblptrh,c
  5737  00556A                     	endif
  5738  00556A                     	if	0	;There are less than 3 active tblptr bytes
  5739  00556A                     	endif
  5740  00556A  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5741  00556C  0105               	movlb	5	; () banked
  5742  00556E  6FF4               	movwf	??_InitializeTasks& (0+255),b
  5743  005570  6BF5               	clrf	(??_InitializeTasks+1)& (0+255),b
  5744  005572  0009               	tblrd		*+
  5745  005574  50F5               	movf	tablat,w,c
  5746  005576  5DF4               	subwf	??_InitializeTasks& (0+255),w,b
  5747  005578  0009               	tblrd		*+
  5748  00557A  50F5               	movf	tablat,w,c
  5749  00557C  59F5               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5750  00557E  B0D8               	btfsc	status,0,c
  5751  005580  0012               	return	
  5752                           
  5753                           ; BSR set to: 5
  5754                           ;os_sched.c: 86: {
  5755                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5756                           
  5757                           ; BSR set to: 5
  5758                           
  5759                           ; BSR set to: 5
  5760  005582  0102               	movlb	2	; () banked
  5761  005584  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5762  005586  0D08               	mullw	8
  5763  005588  0EA4               	movlw	low _TaskTable
  5764  00558A  24F3               	addwf	prodl,w,c
  5765  00558C  6ED9               	movwf	fsr2l,c
  5766  00558E  0E05               	movlw	high _TaskTable
  5767  005590  20F4               	addwfc	prodh,w,c
  5768  005592  6EDA               	movwf	fsr2h,c
  5769  005594  D801               	call	u16708
  5770  005596  D017               	goto	u16709
  5771  005598                     u16708:
  5772  005598  0005               	push	
  5773  00559A  6EFA               	movwf	pclath,c
  5774  00559C  50DE               	movf	postinc2,w,c
  5775  00559E  6EFD               	movwf	tosl,c
  5776  0055A0  50DE               	movf	postinc2,w,c
  5777  0055A2  6EFE               	movwf	tosh,c
  5778  0055A4  50F8               	movf	tblptru,w,c
  5779  0055A6  6EFF               	movwf	tosu,c
  5780  0055A8  50FA               	movf	pclath,w,c
  5781  0055AA  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5782  0055AC  0D08               	mullw	8
  5783  0055AE  0E07               	movlw	7
  5784  0055B0  26F3               	addwf	prodl,f,c
  5785  0055B2  0E00               	movlw	0
  5786  0055B4  22F4               	addwfc	prodh,f,c
  5787  0055B6  0EA4               	movlw	low _TaskTable
  5788  0055B8  24F3               	addwf	prodl,w,c
  5789  0055BA  6ED9               	movwf	fsr2l,c
  5790  0055BC  0E05               	movlw	high _TaskTable
  5791  0055BE  20F4               	addwfc	prodh,w,c
  5792  0055C0  6EDA               	movwf	fsr2h,c
  5793  0055C2  50DF               	movf	indf2,w,c
  5794  0055C4  0012               	return		;indir
  5795  0055C6                     u16709:
  5796  0055C6  0102               	movlb	2	; () banked
  5797  0055C8  2BC8               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5798  0055CA  D7CB               	goto	l16952
  5799  0055CC                     __end_of_InitializeTasks:
  5800                           	opt stack 0
  5801                           tosu	equ	0xFFF
  5802                           tosh	equ	0xFFE
  5803                           tosl	equ	0xFFD
  5804                           pclath	equ	0xFFA
  5805                           tblptru	equ	0xFF8
  5806                           tblptrh	equ	0xFF7
  5807                           tblptrl	equ	0xFF6
  5808                           tablat	equ	0xFF5
  5809                           prodh	equ	0xFF4
  5810                           prodl	equ	0xFF3
  5811                           intcon	equ	0xFF2
  5812                           intcon2	equ	0xFF1
  5813                           intcon3	equ	0xFF0
  5814                           postinc0	equ	0xFEE
  5815                           wreg	equ	0xFE8
  5816                           postinc1	equ	0xFE6
  5817                           postdec1	equ	0xFE5
  5818                           fsr1h	equ	0xFE2
  5819                           fsr1l	equ	0xFE1
  5820                           indf2	equ	0xFDF
  5821                           postinc2	equ	0xFDE
  5822                           postdec2	equ	0xFDD
  5823                           fsr2h	equ	0xFDA
  5824                           fsr2l	equ	0xFD9
  5825                           status	equ	0xFD8
  5826                           
  5827 ;; *************** function _MyApp_Task *****************
  5828 ;; Defined at:
  5829 ;;		line 161 in file "../Source/c/04_App/app_main.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  Options         1    wreg     unsigned char 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  Options         1    0[COMRAM] unsigned char 
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      void 
  5836 ;; Registers used:
  5837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5847 ;;Total ram usage:        0 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:   19
  5850 ;; This function calls:
  5851 ;;		_Led_SetLedBlinkTime
  5852 ;;		_addCmdFsm
  5853 ;;		_cmdVisualEffet
  5854 ;;		_delCmdFsm
  5855 ;;		_detectCmd
  5856 ;;		_detectUsbNumber
  5857 ;;		_initFsm
  5858 ;;		_resCmdFsm
  5859 ;;		_triggerCmdFsm
  5860 ;;		_triggerVisualEffect
  5861 ;; This function is called by:
  5862 ;;		_InitializeTasks
  5863 ;;		_ScheduleTasks
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text16
  5868  002596                     __ptext16:
  5869                           	opt stack 0
  5870  002596                     _MyApp_Task:
  5871                           	opt stack 9
  5872                           
  5873                           ;app_main.c: 163: static appMainFsmStates currentState = APP_MAIN_INIT;
  5874                           ;app_main.c: 164: static bool isCmdSuccessfull = 1;
  5875                           ;app_main.c: 166: cmdVisualEffet(isCmdSuccessfull);
  5876                           
  5877                           ; BSR set to: 5
  5878                           ;incstack = 0
  5879  002596  0100               	movlb	0	; () banked
  5880  002598  51E2               	movf	MyApp_Task@isCmdSuccessfull& (0+255),w,b
  5881  00259A  ECE1  F030         	call	_cmdVisualEffet
  5882                           
  5883                           ;app_main.c: 168: switch (SystemState)
  5884  00259E  D09C               	goto	l2601
  5885  0025A0                     
  5886                           ;app_main.c: 173: Led_SetLedBlinkTime(1u,100,900);
  5887  0025A0  0E00               	movlw	0
  5888  0025A2  0100               	movlb	0	; () banked
  5889  0025A4  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5890  0025A6  0E64               	movlw	100
  5891  0025A8  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5892  0025AA  0E03               	movlw	3
  5893  0025AC  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5894  0025AE  0E84               	movlw	132
  5895  0025B0  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5896  0025B2  0E01               	movlw	1
  5897  0025B4  ECDE  F02E         	call	_Led_SetLedBlinkTime
  5898                           
  5899                           ;app_main.c: 174: Led_SetLedBlinkTime(2u,100,900);
  5900  0025B8  0E00               	movlw	0
  5901  0025BA  0100               	movlb	0	; () banked
  5902  0025BC  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5903  0025BE  0E64               	movlw	100
  5904  0025C0  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5905  0025C2  0E03               	movlw	3
  5906  0025C4  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5907  0025C6  0E84               	movlw	132
  5908  0025C8  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5909  0025CA  0E02               	movlw	2
  5910  0025CC  ECDE  F02E         	call	_Led_SetLedBlinkTime
  5911                           
  5912                           ;app_main.c: 175: break;
  5913  0025D0  0012               	return	
  5914  0025D2                     
  5915                           ;app_main.c: 182: if (initFsm(&isCmdSuccessfull))
  5916  0025D2  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  5917  0025D4  0101               	movlb	1	; () banked
  5918  0025D6  6F03               	movwf	initFsm@isCmdSuccessfull& (0+255),b
  5919  0025D8  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  5920  0025DA  6F04               	movwf	(initFsm@isCmdSuccessfull+1)& (0+255),b
  5921  0025DC  EC21  F022         	call	_initFsm	;wreg free
  5922  0025E0  0900               	iorlw	0
  5923  0025E2  B4D8               	btfsc	status,2,c
  5924  0025E4  0012               	return	
  5925                           
  5926                           ;app_main.c: 183: {
  5927                           ;app_main.c: 184: currentState = APP_MAIN_WAIT_EVENT;
  5928  0025E6  0E01               	movlw	1
  5929  0025E8  0101               	movlb	1	; () banked
  5930  0025EA  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  5931                           
  5932                           ; BSR set to: 1
  5933                           ;app_main.c: 185: }
  5934                           ;app_main.c: 186: break;
  5935  0025EC  0012               	return	
  5936  0025EE                     
  5937                           ; BSR set to: 1
  5938                           ;app_main.c: 189: if (detectUsbNumber(&isCmdSuccessfull))
  5939                           
  5940                           ; BSR set to: 1
  5941  0025EE  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  5942  0025F0  0100               	movlb	0	; () banked
  5943  0025F2  6F99               	movwf	detectUsbNumber@isCmdSuccessfull& (0+255),b
  5944  0025F4  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  5945  0025F6  6F9A               	movwf	(detectUsbNumber@isCmdSuccessfull+1)& (0+255),b
  5946  0025F8  ECAB  F032         	call	_detectUsbNumber	;wreg free
  5947  0025FC  0900               	iorlw	0
  5948  0025FE  A4D8               	btfss	status,2,c
  5949                           
  5950                           ;app_main.c: 190: {
  5951                           ;app_main.c: 191: triggerVisualEffect();
  5952  002600  ECA2  F036         	call	_triggerVisualEffect	;wreg free
  5953                           
  5954                           ;app_main.c: 192: }
  5955                           ;app_main.c: 193: currentState = detectCmd();
  5956  002604  EC31  F026         	call	_detectCmd	;wreg free
  5957  002608  0101               	movlb	1	; () banked
  5958  00260A  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  5959                           
  5960                           ;app_main.c: 194: break;
  5961  00260C  0012               	return	
  5962  00260E                     
  5963                           ; BSR set to: 1
  5964                           ;app_main.c: 197: if (addCmdFsm(receivedNumber, smsText, &isCmdSuccessfull))
  5965                           
  5966                           ; BSR set to: 1
  5967  00260E  0E46               	movlw	low _receivedNumber
  5968  002610  6F05               	movwf	addCmdFsm@receivedNumber& (0+255),b
  5969  002612  0E03               	movlw	high _receivedNumber
  5970  002614  6F06               	movwf	(addCmdFsm@receivedNumber+1)& (0+255),b
  5971  002616  0E84               	movlw	low _smsText
  5972  002618  6F07               	movwf	addCmdFsm@smsText& (0+255),b
  5973  00261A  0E04               	movlw	high _smsText
  5974  00261C  6F08               	movwf	(addCmdFsm@smsText+1)& (0+255),b
  5975  00261E  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  5976  002620  6F09               	movwf	addCmdFsm@isCmdSuccessfull& (0+255),b
  5977  002622  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  5978  002624  6F0A               	movwf	(addCmdFsm@isCmdSuccessfull+1)& (0+255),b
  5979  002626  ECD4  F019         	call	_addCmdFsm	;wreg free
  5980  00262A  0900               	iorlw	0
  5981  00262C  B4D8               	btfsc	status,2,c
  5982  00262E  0012               	return	
  5983                           
  5984                           ;app_main.c: 198: {
  5985                           ;app_main.c: 199: currentState = APP_MAIN_WAIT_EVENT;
  5986  002630  0E01               	movlw	1
  5987  002632  0101               	movlb	1	; () banked
  5988  002634  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  5989                           
  5990                           ; BSR set to: 1
  5991                           ;app_main.c: 200: triggerVisualEffect();
  5992  002636  ECA2  F036         	call	_triggerVisualEffect	;wreg free
  5993                           
  5994                           ;app_main.c: 201: }
  5995                           ;app_main.c: 202: break;
  5996  00263A  0012               	return	
  5997  00263C                     
  5998                           ;app_main.c: 205: if (delCmdFsm(receivedNumber, smsText, &isCmdSuccessfull))
  5999  00263C  0E46               	movlw	low _receivedNumber
  6000  00263E  0101               	movlb	1	; () banked
  6001  002640  6F05               	movwf	delCmdFsm@receivedNumber& (0+255),b
  6002  002642  0E03               	movlw	high _receivedNumber
  6003  002644  6F06               	movwf	(delCmdFsm@receivedNumber+1)& (0+255),b
  6004  002646  0E84               	movlw	low _smsText
  6005  002648  6F07               	movwf	delCmdFsm@smsText& (0+255),b
  6006  00264A  0E04               	movlw	high _smsText
  6007  00264C  6F08               	movwf	(delCmdFsm@smsText+1)& (0+255),b
  6008  00264E  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  6009  002650  6F09               	movwf	delCmdFsm@isCmdSuccessfull& (0+255),b
  6010  002652  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  6011  002654  6F0A               	movwf	(delCmdFsm@isCmdSuccessfull+1)& (0+255),b
  6012  002656  EC5B  F01D         	call	_delCmdFsm	;wreg free
  6013  00265A  0900               	iorlw	0
  6014  00265C  B4D8               	btfsc	status,2,c
  6015  00265E  0012               	return	
  6016                           
  6017                           ;app_main.c: 206: {
  6018                           ;app_main.c: 207: currentState = APP_MAIN_WAIT_EVENT;
  6019  002660  0E01               	movlw	1
  6020  002662  0101               	movlb	1	; () banked
  6021  002664  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  6022                           
  6023                           ; BSR set to: 1
  6024                           ;app_main.c: 208: triggerVisualEffect();
  6025  002666  ECA2  F036         	call	_triggerVisualEffect	;wreg free
  6026                           
  6027                           ;app_main.c: 209: }
  6028                           ;app_main.c: 210: break;
  6029  00266A  0012               	return	
  6030  00266C                     
  6031                           ;app_main.c: 213: if (triggerCmdFsm(receivedNumber))
  6032  00266C  0E46               	movlw	low _receivedNumber
  6033  00266E  0101               	movlb	1	; () banked
  6034  002670  6F05               	movwf	triggerCmdFsm@receivedNumber& (0+255),b
  6035  002672  0E03               	movlw	high _receivedNumber
  6036  002674  6F06               	movwf	(triggerCmdFsm@receivedNumber+1)& (0+255),b
  6037  002676  ECEF  F01C         	call	_triggerCmdFsm	;wreg free
  6038  00267A  0900               	iorlw	0
  6039  00267C  B4D8               	btfsc	status,2,c
  6040  00267E  0012               	return	
  6041                           
  6042                           ;app_main.c: 214: {
  6043                           ;app_main.c: 215: currentState = APP_MAIN_WAIT_EVENT;
  6044  002680  0E01               	movlw	1
  6045  002682  0101               	movlb	1	; () banked
  6046  002684  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  6047                           
  6048                           ; BSR set to: 1
  6049                           ;app_main.c: 216: }
  6050                           ;app_main.c: 217: break;
  6051  002686  0012               	return	
  6052  002688                     
  6053                           ; BSR set to: 1
  6054                           ;app_main.c: 220: if (resCmdFsm(receivedNumber, &isCmdSuccessfull))
  6055                           
  6056                           ; BSR set to: 1
  6057  002688  0E46               	movlw	low _receivedNumber
  6058  00268A  6F03               	movwf	resCmdFsm@receivedNumber& (0+255),b
  6059  00268C  0E03               	movlw	high _receivedNumber
  6060  00268E  6F04               	movwf	(resCmdFsm@receivedNumber+1)& (0+255),b
  6061  002690  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  6062  002692  6F05               	movwf	resCmdFsm@isCmdSuccessfull& (0+255),b
  6063  002694  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  6064  002696  6F06               	movwf	(resCmdFsm@isCmdSuccessfull+1)& (0+255),b
  6065  002698  EC6D  F02A         	call	_resCmdFsm	;wreg free
  6066  00269C  0900               	iorlw	0
  6067  00269E  B4D8               	btfsc	status,2,c
  6068  0026A0  0012               	return	
  6069                           
  6070                           ;app_main.c: 221: {
  6071                           ;app_main.c: 222: currentState = APP_MAIN_INIT;
  6072  0026A2  0E00               	movlw	0
  6073  0026A4  0101               	movlb	1	; () banked
  6074  0026A6  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  6075                           
  6076                           ; BSR set to: 1
  6077                           ;app_main.c: 223: triggerVisualEffect();
  6078  0026A8  ECA2  F036         	call	_triggerVisualEffect	;wreg free
  6079                           
  6080                           ;app_main.c: 229: }
  6081                           
  6082                           ;app_main.c: 228: break;
  6083                           
  6084                           ;app_main.c: 227: default:
  6085                           
  6086                           ;app_main.c: 224: }
  6087                           ;app_main.c: 225: break;
  6088  0026AC  0012               	return	
  6089  0026AE  0101               	movlb	1	; () banked
  6090  0026B0  51DA               	movf	MyApp_Task@currentState& (0+255),w,b
  6091                           
  6092                           ; Switch size 1, requested type "space"
  6093                           ; Number of cases is 6, Range of values is 0 to 5
  6094                           ; switch strategies available:
  6095                           ; Name         Instructions Cycles
  6096                           ; simple_byte           19    10 (average)
  6097                           ;	Chosen strategy is simple_byte
  6098  0026B2  0A00               	xorlw	0	; case 0
  6099  0026B4  B4D8               	btfsc	status,2,c
  6100  0026B6  D78D               	goto	l2606
  6101  0026B8  0A01               	xorlw	1	; case 1
  6102  0026BA  B4D8               	btfsc	status,2,c
  6103  0026BC  D798               	goto	l2609
  6104  0026BE  0A03               	xorlw	3	; case 2
  6105  0026C0  B4D8               	btfsc	status,2,c
  6106  0026C2  D7A5               	goto	l2611
  6107  0026C4  0A01               	xorlw	1	; case 3
  6108  0026C6  B4D8               	btfsc	status,2,c
  6109  0026C8  D7B9               	goto	l2613
  6110  0026CA  0A07               	xorlw	7	; case 4
  6111  0026CC  B4D8               	btfsc	status,2,c
  6112  0026CE  D7CE               	goto	l2615
  6113  0026D0  0A01               	xorlw	1	; case 5
  6114  0026D2  A4D8               	btfss	status,2,c
  6115                           
  6116                           ; BSR set to: 1
  6117                           ;app_main.c: 235: }
  6118                           
  6119                           ; BSR set to: 1
  6120                           ;app_main.c: 234: break;
  6121                           
  6122                           ;app_main.c: 233: default:
  6123                           
  6124                           ; BSR set to: 1
  6125                           ;app_main.c: 230: break;
  6126  0026D4  0012               	return	
  6127  0026D6  D7D8               	goto	l2617
  6128  0026D8                     l2601:
  6129                           
  6130                           ; BSR set to: 1
  6131  0026D8  0100               	movlb	0	; () banked
  6132  0026DA  51D4               	movf	_SystemState& (0+255),w,b
  6133                           
  6134                           ; Switch size 1, requested type "space"
  6135                           ; Number of cases is 2, Range of values is 0 to 1
  6136                           ; switch strategies available:
  6137                           ; Name         Instructions Cycles
  6138                           ; simple_byte            7     4 (average)
  6139                           ;	Chosen strategy is simple_byte
  6140  0026DC  0A00               	xorlw	0	; case 0
  6141  0026DE  B4D8               	btfsc	status,2,c
  6142  0026E0  D75F               	goto	l2602
  6143  0026E2  0A01               	xorlw	1	; case 1
  6144  0026E4  A4D8               	btfss	status,2,c
  6145  0026E6  0012               	return	
  6146  0026E8  D7E2               	goto	l2605
  6147  0026EA                     __end_of_MyApp_Task:
  6148                           	opt stack 0
  6149                           tosu	equ	0xFFF
  6150                           tosh	equ	0xFFE
  6151                           tosl	equ	0xFFD
  6152                           pclath	equ	0xFFA
  6153                           tblptru	equ	0xFF8
  6154                           tblptrh	equ	0xFF7
  6155                           tblptrl	equ	0xFF6
  6156                           tablat	equ	0xFF5
  6157                           prodh	equ	0xFF4
  6158                           prodl	equ	0xFF3
  6159                           intcon	equ	0xFF2
  6160                           intcon2	equ	0xFF1
  6161                           intcon3	equ	0xFF0
  6162                           postinc0	equ	0xFEE
  6163                           wreg	equ	0xFE8
  6164                           postinc1	equ	0xFE6
  6165                           postdec1	equ	0xFE5
  6166                           fsr1h	equ	0xFE2
  6167                           fsr1l	equ	0xFE1
  6168                           indf2	equ	0xFDF
  6169                           postinc2	equ	0xFDE
  6170                           postdec2	equ	0xFDD
  6171                           fsr2h	equ	0xFDA
  6172                           fsr2l	equ	0xFD9
  6173                           status	equ	0xFD8
  6174                           
  6175 ;; *************** function _Term_MainTask *****************
  6176 ;; Defined at:
  6177 ;;		line 847 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  Options         1    wreg     unsigned char 
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;  Options         1    0[COMRAM] unsigned char 
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  1    wreg      void 
  6184 ;; Registers used:
  6185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6195 ;;Total ram usage:        0 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; Hardware stack levels required when called:   17
  6198 ;; This function calls:
  6199 ;;		_Term_MainSm
  6200 ;; This function is called by:
  6201 ;;		_InitializeTasks
  6202 ;;		_ScheduleTasks
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           	psect	text17
  6207  006B92                     __ptext17:
  6208                           	opt stack 0
  6209  006B92                     _Term_MainTask:
  6210                           	opt stack 11
  6211                           
  6212                           ;term.c: 849: switch (SystemState)
  6213                           
  6214                           ;incstack = 0
  6215  006B92  D003               	goto	l2492
  6216  006B94                     
  6217                           ;term.c: 860: Term_MainSm();
  6218  006B94  EC5E  F008         	call	_Term_MainSm	;wreg free
  6219                           
  6220                           ;term.c: 867: }
  6221                           
  6222                           ;term.c: 866: break;
  6223                           
  6224                           ;term.c: 865: default:
  6225                           
  6226                           ;term.c: 862: break;
  6227  006B98  0012               	return	
  6228  006B9A                     l2492:
  6229  006B9A  0100               	movlb	0	; () banked
  6230  006B9C  51D4               	movf	_SystemState& (0+255),w,b
  6231                           
  6232                           ; Switch size 1, requested type "space"
  6233                           ; Number of cases is 2, Range of values is 0 to 1
  6234                           ; switch strategies available:
  6235                           ; Name         Instructions Cycles
  6236                           ; simple_byte            7     4 (average)
  6237                           ;	Chosen strategy is simple_byte
  6238  006B9E  0A00               	xorlw	0	; case 0
  6239  006BA0  B4D8               	btfsc	status,2,c
  6240  006BA2  0012               	return	
  6241  006BA4  0A01               	xorlw	1	; case 1
  6242  006BA6  A4D8               	btfss	status,2,c
  6243  006BA8  0012               	return	
  6244  006BAA  D7F4               	goto	l2495
  6245  006BAC                     __end_of_Term_MainTask:
  6246                           	opt stack 0
  6247                           tosu	equ	0xFFF
  6248                           tosh	equ	0xFFE
  6249                           tosl	equ	0xFFD
  6250                           pclath	equ	0xFFA
  6251                           tblptru	equ	0xFF8
  6252                           tblptrh	equ	0xFF7
  6253                           tblptrl	equ	0xFF6
  6254                           tablat	equ	0xFF5
  6255                           prodh	equ	0xFF4
  6256                           prodl	equ	0xFF3
  6257                           intcon	equ	0xFF2
  6258                           intcon2	equ	0xFF1
  6259                           intcon3	equ	0xFF0
  6260                           postinc0	equ	0xFEE
  6261                           wreg	equ	0xFE8
  6262                           postinc1	equ	0xFE6
  6263                           postdec1	equ	0xFE5
  6264                           fsr1h	equ	0xFE2
  6265                           fsr1l	equ	0xFE1
  6266                           indf2	equ	0xFDF
  6267                           postinc2	equ	0xFDE
  6268                           postdec2	equ	0xFDD
  6269                           fsr2h	equ	0xFDA
  6270                           fsr2l	equ	0xFD9
  6271                           status	equ	0xFD8
  6272                           
  6273 ;; *************** function _Rtcm_MainTask *****************
  6274 ;; Defined at:
  6275 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;  Options         1    wreg     unsigned char 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  Options         1    0[COMRAM] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1    wreg      void 
  6282 ;; Registers used:
  6283 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6293 ;;Total ram usage:        0 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:   14
  6296 ;; This function calls:
  6297 ;;		_Rtcc_AlarmConfig
  6298 ;;		_Rtcc_LockRtc
  6299 ;;		_Rtcc_RtcConfig
  6300 ;;		_Rtcc_SetRtcStatus
  6301 ;;		_Rtcc_UnlockRtc
  6302 ;;		_Rtcm_GetRtccDate
  6303 ;;		_Rtcm_SetRtccDate
  6304 ;; This function is called by:
  6305 ;;		_InitializeTasks
  6306 ;;		_ScheduleTasks
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text18
  6311  005234                     __ptext18:
  6312                           	opt stack 0
  6313  005234                     _Rtcm_MainTask:
  6314                           	opt stack 14
  6315                           
  6316                           ;rtcm.c: 101: switch (SystemState)
  6317                           
  6318                           ;incstack = 0
  6319  005234  D03D               	goto	l2220
  6320  005236                     l2221:
  6321                           
  6322                           ; BSR set to: 0
  6323                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6324  005236  86CD               	bsf	4045,3,c	;volatile
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6328  005238  0E00               	movlw	0
  6329  00523A  0103               	movlb	3	; () banked
  6330  00523C  6FBB               	movwf	_RtcConfig& (0+255),b
  6331                           
  6332                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6333  00523E  0E00               	movlw	0
  6334  005240  6FBC               	movwf	(_RtcConfig+1)& (0+255),b
  6335                           
  6336                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6337  005242  0E01               	movlw	1
  6338  005244  6FBD               	movwf	(_RtcConfig+2)& (0+255),b
  6339                           
  6340                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6341  005246  0E01               	movlw	1
  6342  005248  6FBE               	movwf	(_RtcConfig+3)& (0+255),b
  6343                           
  6344                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6345  00524A  0E01               	movlw	1
  6346  00524C  6FB7               	movwf	_AlCfg& (0+255),b
  6347                           
  6348                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6349  00524E  0E01               	movlw	1
  6350  005250  6FB8               	movwf	(_AlCfg+1)& (0+255),b
  6351                           
  6352                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6353  005252  0E01               	movlw	1
  6354  005254  6FB9               	movwf	(_AlCfg+2)& (0+255),b
  6355                           
  6356                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6357  005256  0E00               	movlw	0
  6358  005258  6FBA               	movwf	(_AlCfg+3)& (0+255),b
  6359                           
  6360                           ; BSR set to: 3
  6361                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6362  00525A  EC65  F036         	call	_Rtcc_UnlockRtc	;wreg free
  6363                           
  6364                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6365  00525E  0EBB               	movlw	low _RtcConfig
  6366  005260  0100               	movlb	0	; () banked
  6367  005262  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6368  005264  0E03               	movlw	high _RtcConfig
  6369  005266  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6370  005268  EC92  F025         	call	_Rtcc_RtcConfig	;wreg free
  6371                           
  6372                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6373  00526C  0EB7               	movlw	low _AlCfg
  6374  00526E  0100               	movlb	0	; () banked
  6375  005270  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6376  005272  0E03               	movlw	high _AlCfg
  6377  005274  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6378  005276  ECC5  F02B         	call	_Rtcc_AlarmConfig	;wreg free
  6379                           
  6380                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6381  00527A  0E01               	movlw	1
  6382  00527C  EC14  F036         	call	_Rtcc_SetRtcStatus
  6383                           
  6384                           ;rtcm.c: 127: Rtcc_LockRtc();
  6385  005280  EC6D  F036         	call	_Rtcc_LockRtc	;wreg free
  6386                           
  6387                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6388  005284  EE24  F04A         	lfsr	2,_Rtcm_SystemDate
  6389  005288  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6390  00528C  0E07               	movlw	7
  6391  00528E                     u16611:
  6392  00528E  CFDB FFEB          	movff	plusw2,plusw0
  6393  005292  06E8               	decf	wreg,f,c
  6394  005294  E2FC               	bc	u16611
  6395  005296  EC8A  F02E         	call	_Rtcm_SetRtccDate	;wreg free
  6396                           
  6397                           ;rtcm.c: 154: break;
  6398  00529A  0012               	return	
  6399  00529C                     
  6400                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6401  00529C  EC62  F02C         	call	_Rtcm_GetRtccDate	;wreg free
  6402  0052A0  EE24  F04A         	lfsr	2,_Rtcm_SystemDate
  6403  0052A4  0E07               	movlw	7
  6404  0052A6                     u16621:
  6405  0052A6  CFEB FFDB          	movff	plusw0,plusw2
  6406  0052AA  06E8               	decf	wreg,f,c
  6407  0052AC  E2FC               	bc	u16621
  6408                           
  6409                           ;rtcm.c: 165: }
  6410                           
  6411                           ;rtcm.c: 164: break;
  6412                           
  6413                           ;rtcm.c: 163: default:
  6414                           
  6415                           ;rtcm.c: 160: break;
  6416  0052AE  0012               	return	
  6417  0052B0                     l2220:
  6418  0052B0  0100               	movlb	0	; () banked
  6419  0052B2  51D4               	movf	_SystemState& (0+255),w,b
  6420                           
  6421                           ; Switch size 1, requested type "space"
  6422                           ; Number of cases is 2, Range of values is 0 to 1
  6423                           ; switch strategies available:
  6424                           ; Name         Instructions Cycles
  6425                           ; simple_byte            7     4 (average)
  6426                           ;	Chosen strategy is simple_byte
  6427  0052B4  0A00               	xorlw	0	; case 0
  6428  0052B6  B4D8               	btfsc	status,2,c
  6429  0052B8  D7BE               	goto	l2221
  6430  0052BA  0A01               	xorlw	1	; case 1
  6431  0052BC  A4D8               	btfss	status,2,c
  6432  0052BE  0012               	return	
  6433  0052C0  D7ED               	goto	l2223
  6434  0052C2                     __end_of_Rtcm_MainTask:
  6435                           	opt stack 0
  6436                           tosu	equ	0xFFF
  6437                           tosh	equ	0xFFE
  6438                           tosl	equ	0xFFD
  6439                           pclath	equ	0xFFA
  6440                           tblptru	equ	0xFF8
  6441                           tblptrh	equ	0xFF7
  6442                           tblptrl	equ	0xFF6
  6443                           tablat	equ	0xFF5
  6444                           prodh	equ	0xFF4
  6445                           prodl	equ	0xFF3
  6446                           intcon	equ	0xFF2
  6447                           intcon2	equ	0xFF1
  6448                           intcon3	equ	0xFF0
  6449                           postinc0	equ	0xFEE
  6450                           plusw0	equ	0xFEB
  6451                           wreg	equ	0xFE8
  6452                           postinc1	equ	0xFE6
  6453                           postdec1	equ	0xFE5
  6454                           fsr1h	equ	0xFE2
  6455                           fsr1l	equ	0xFE1
  6456                           indf2	equ	0xFDF
  6457                           postinc2	equ	0xFDE
  6458                           postdec2	equ	0xFDD
  6459                           plusw2	equ	0xFDB
  6460                           fsr2h	equ	0xFDA
  6461                           fsr2l	equ	0xFD9
  6462                           status	equ	0xFD8
  6463                           
  6464 ;; *************** function _Led_MainTask *****************
  6465 ;; Defined at:
  6466 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  Options         1    wreg     unsigned char 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  Options         1    0[COMRAM] unsigned char 
  6471 ;; Return value:  Size  Location     Type
  6472 ;;                  1    wreg      void 
  6473 ;; Registers used:
  6474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6475 ;; Tracked objects:
  6476 ;;		On entry : 0/0
  6477 ;;		On exit  : 0/0
  6478 ;;		Unchanged: 0/0
  6479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6482 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6483 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6484 ;;Total ram usage:        1 bytes
  6485 ;; Hardware stack levels used:    1
  6486 ;; Hardware stack levels required when called:   14
  6487 ;; This function calls:
  6488 ;;		_LedStateMachine
  6489 ;; This function is called by:
  6490 ;;		_InitializeTasks
  6491 ;;		_ScheduleTasks
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           	psect	text19
  6496  003E02                     __ptext19:
  6497                           	opt stack 0
  6498  003E02                     _Led_MainTask:
  6499                           	opt stack 14
  6500                           
  6501                           ;led.c: 300: switch (SystemState)
  6502                           
  6503                           ;incstack = 0
  6504  003E02  D05C               	goto	l2134
  6505  003E04                     l2135:
  6506                           
  6507                           ; BSR set to: 0
  6508                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6509  003E04  9895               	bcf	3989,4,c	;volatile
  6510                           
  6511                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6512  003E06  9A95               	bcf	3989,5,c	;volatile
  6513                           
  6514                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6515  003E08  9C95               	bcf	3989,6,c	;volatile
  6516                           
  6517                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6518  003E0A  9883               	bcf	3971,4,c	;volatile
  6519                           
  6520                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6521  003E0C  9A83               	bcf	3971,5,c	;volatile
  6522                           
  6523                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6524  003E0E  9C83               	bcf	3971,6,c	;volatile
  6525                           
  6526                           ;led.c: 311: break;
  6527  003E10  0012               	return	
  6528  003E12                     
  6529                           ; BSR set to: 0
  6530                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6531                           
  6532                           ; BSR set to: 0
  6533  003E12  0EF9               	movlw	low _Led1Sts
  6534  003E14  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6535  003E16  0E01               	movlw	high _Led1Sts
  6536  003E18  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6537  003E1A  0EF8               	movlw	low _Led1OutSts
  6538  003E1C  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6539  003E1E  0E01               	movlw	high _Led1OutSts
  6540  003E20  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6541  003E22  0E71               	movlw	low _Led1Blink
  6542  003E24  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6543  003E26  0E03               	movlw	high _Led1Blink
  6544  003E28  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6545  003E2A  0E95               	movlw	low _Led1Pulse
  6546  003E2C  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6547  003E2E  0E03               	movlw	high _Led1Pulse
  6548  003E30  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6549  003E32  0E01               	movlw	1
  6550  003E34  ECED  F024         	call	_LedStateMachine
  6551  003E38  0100               	movlb	0	; () banked
  6552  003E3A  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6553  003E3C  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6554  003E3E  5083               	movf	3971,w,c	;volatile
  6555  003E40  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6556  003E42  0BEF               	andlw	-17
  6557  003E44  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6558  003E46  6E83               	movwf	3971,c	;volatile
  6559                           
  6560                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6561  003E48  0EF7               	movlw	low _Led2Sts
  6562  003E4A  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6563  003E4C  0E01               	movlw	high _Led2Sts
  6564  003E4E  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6565  003E50  0EF6               	movlw	low _Led2OutSts
  6566  003E52  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6567  003E54  0E01               	movlw	high _Led2OutSts
  6568  003E56  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6569  003E58  0E68               	movlw	low _Led2Blink
  6570  003E5A  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6571  003E5C  0E03               	movlw	high _Led2Blink
  6572  003E5E  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6573  003E60  0E8F               	movlw	low _Led2Pulse
  6574  003E62  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6575  003E64  0E03               	movlw	high _Led2Pulse
  6576  003E66  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6577  003E68  0E02               	movlw	2
  6578  003E6A  ECED  F024         	call	_LedStateMachine
  6579  003E6E  0100               	movlb	0	; () banked
  6580  003E70  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6581  003E72  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6582  003E74  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6583  003E76  5083               	movf	3971,w,c	;volatile
  6584  003E78  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6585  003E7A  0BDF               	andlw	-33
  6586  003E7C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6587  003E7E  6E83               	movwf	3971,c	;volatile
  6588                           
  6589                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6590  003E80  0EF5               	movlw	low _Led3Sts
  6591  003E82  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6592  003E84  0E01               	movlw	high _Led3Sts
  6593  003E86  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6594  003E88  0EF4               	movlw	low _Led3OutSts
  6595  003E8A  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6596  003E8C  0E01               	movlw	high _Led3OutSts
  6597  003E8E  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6598  003E90  0EED               	movlw	low _Led3Blink
  6599  003E92  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6600  003E94  0E04               	movlw	high _Led3Blink
  6601  003E96  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6602  003E98  0E89               	movlw	low _Led3Pulse
  6603  003E9A  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6604  003E9C  0E03               	movlw	high _Led3Pulse
  6605  003E9E  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6606  003EA0  0E03               	movlw	3
  6607  003EA2  ECED  F024         	call	_LedStateMachine
  6608  003EA6  0100               	movlb	0	; () banked
  6609  003EA8  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6610  003EAA  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6611  003EAC  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6612  003EAE  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6613  003EB0  5083               	movf	3971,w,c	;volatile
  6614  003EB2  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6615  003EB4  0BBF               	andlw	-65
  6616  003EB6  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6617  003EB8  6E83               	movwf	3971,c	;volatile
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;led.c: 326: }
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;led.c: 325: break;
  6624                           
  6625                           ;led.c: 324: default:
  6626                           
  6627                           ;led.c: 321: break;
  6628  003EBA  0012               	return	
  6629  003EBC                     l2134:
  6630                           
  6631                           ; BSR set to: 0
  6632  003EBC  0100               	movlb	0	; () banked
  6633  003EBE  51D4               	movf	_SystemState& (0+255),w,b
  6634                           
  6635                           ; Switch size 1, requested type "space"
  6636                           ; Number of cases is 2, Range of values is 0 to 1
  6637                           ; switch strategies available:
  6638                           ; Name         Instructions Cycles
  6639                           ; simple_byte            7     4 (average)
  6640                           ;	Chosen strategy is simple_byte
  6641  003EC0  0A00               	xorlw	0	; case 0
  6642  003EC2  B4D8               	btfsc	status,2,c
  6643  003EC4  D79F               	goto	l2135
  6644  003EC6  0A01               	xorlw	1	; case 1
  6645  003EC8  A4D8               	btfss	status,2,c
  6646  003ECA  0012               	return	
  6647  003ECC  D7A2               	goto	l2137
  6648  003ECE                     __end_of_Led_MainTask:
  6649                           	opt stack 0
  6650                           tosu	equ	0xFFF
  6651                           tosh	equ	0xFFE
  6652                           tosl	equ	0xFFD
  6653                           pclath	equ	0xFFA
  6654                           tblptru	equ	0xFF8
  6655                           tblptrh	equ	0xFF7
  6656                           tblptrl	equ	0xFF6
  6657                           tablat	equ	0xFF5
  6658                           prodh	equ	0xFF4
  6659                           prodl	equ	0xFF3
  6660                           intcon	equ	0xFF2
  6661                           intcon2	equ	0xFF1
  6662                           intcon3	equ	0xFF0
  6663                           postinc0	equ	0xFEE
  6664                           plusw0	equ	0xFEB
  6665                           wreg	equ	0xFE8
  6666                           postinc1	equ	0xFE6
  6667                           postdec1	equ	0xFE5
  6668                           fsr1h	equ	0xFE2
  6669                           fsr1l	equ	0xFE1
  6670                           indf2	equ	0xFDF
  6671                           postinc2	equ	0xFDE
  6672                           postdec2	equ	0xFDD
  6673                           plusw2	equ	0xFDB
  6674                           fsr2h	equ	0xFDA
  6675                           fsr2l	equ	0xFD9
  6676                           status	equ	0xFD8
  6677                           
  6678 ;; *************** function _UsbDevice_MainTask *****************
  6679 ;; Defined at:
  6680 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  Options         1    wreg     unsigned char 
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;  Options         1    0[COMRAM] unsigned char 
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  1    wreg      void 
  6687 ;; Registers used:
  6688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6698 ;;Total ram usage:        0 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; Hardware stack levels required when called:   20
  6701 ;; This function calls:
  6702 ;;		_CDCTxService
  6703 ;;		_USBDeviceInit
  6704 ;;		_USBDeviceTasks
  6705 ;; This function is called by:
  6706 ;;		_InitializeTasks
  6707 ;;		_ScheduleTasks
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text20
  6712  00692A                     __ptext20:
  6713                           	opt stack 0
  6714  00692A                     _UsbDevice_MainTask:
  6715                           	opt stack 8
  6716                           
  6717                           ;usb_device_mgr.c: 74: switch (SystemState)
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;incstack = 0
  6721  00692A  D008               	goto	l1992
  6722  00692C                     
  6723                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6724  00692C  EC75  F013         	call	_USBDeviceInit	;wreg free
  6725                           
  6726                           ;usb_device_mgr.c: 80: ;
  6727                           ;usb_device_mgr.c: 81: break;
  6728  006930  0012               	return	
  6729  006932                     
  6730                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6731  006932  ECD8  F00D         	call	_USBDeviceTasks	;wreg free
  6732                           
  6733                           ;usb_device_mgr.c: 90: CDCTxService();
  6734  006936  ECC2  F014         	call	_CDCTxService	;wreg free
  6735                           
  6736                           ;usb_device_mgr.c: 101: }
  6737                           
  6738                           ;usb_device_mgr.c: 100: break;
  6739                           
  6740                           ;usb_device_mgr.c: 99: default:
  6741                           
  6742                           ;usb_device_mgr.c: 96: break;
  6743  00693A  0012               	return	
  6744  00693C                     l1992:
  6745  00693C  0100               	movlb	0	; () banked
  6746  00693E  51D4               	movf	_SystemState& (0+255),w,b
  6747                           
  6748                           ; Switch size 1, requested type "space"
  6749                           ; Number of cases is 2, Range of values is 0 to 1
  6750                           ; switch strategies available:
  6751                           ; Name         Instructions Cycles
  6752                           ; simple_byte            7     4 (average)
  6753                           ;	Chosen strategy is simple_byte
  6754  006940  0A00               	xorlw	0	; case 0
  6755  006942  B4D8               	btfsc	status,2,c
  6756  006944  D7F3               	goto	l1993
  6757  006946  0A01               	xorlw	1	; case 1
  6758  006948  A4D8               	btfss	status,2,c
  6759  00694A  0012               	return	
  6760  00694C  D7F2               	goto	l1995
  6761  00694E                     __end_of_UsbDevice_MainTask:
  6762                           	opt stack 0
  6763                           tosu	equ	0xFFF
  6764                           tosh	equ	0xFFE
  6765                           tosl	equ	0xFFD
  6766                           pclath	equ	0xFFA
  6767                           tblptru	equ	0xFF8
  6768                           tblptrh	equ	0xFF7
  6769                           tblptrl	equ	0xFF6
  6770                           tablat	equ	0xFF5
  6771                           prodh	equ	0xFF4
  6772                           prodl	equ	0xFF3
  6773                           intcon	equ	0xFF2
  6774                           intcon2	equ	0xFF1
  6775                           intcon3	equ	0xFF0
  6776                           postinc0	equ	0xFEE
  6777                           plusw0	equ	0xFEB
  6778                           wreg	equ	0xFE8
  6779                           postinc1	equ	0xFE6
  6780                           postdec1	equ	0xFE5
  6781                           fsr1h	equ	0xFE2
  6782                           fsr1l	equ	0xFE1
  6783                           indf2	equ	0xFDF
  6784                           postinc2	equ	0xFDE
  6785                           postdec2	equ	0xFDD
  6786                           plusw2	equ	0xFDB
  6787                           fsr2h	equ	0xFDA
  6788                           fsr2l	equ	0xFD9
  6789                           status	equ	0xFD8
  6790                           
  6791 ;; *************** function _MdmHttp_MainTask *****************
  6792 ;; Defined at:
  6793 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;  Options         1    wreg     unsigned char 
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  Options         1    0[COMRAM] unsigned char 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  1    wreg      void 
  6800 ;; Registers used:
  6801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6811 ;;Total ram usage:        0 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:   15
  6814 ;; This function calls:
  6815 ;;		_HttpGetMethod
  6816 ;;		_InitGprsNetwork
  6817 ;; This function is called by:
  6818 ;;		_InitializeTasks
  6819 ;;		_ScheduleTasks
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           	psect	text21
  6824  00620A                     __ptext21:
  6825                           	opt stack 0
  6826  00620A                     _MdmHttp_MainTask:
  6827                           	opt stack 13
  6828                           
  6829                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6830                           
  6831                           ;incstack = 0
  6832  00620A  D019               	goto	l1291
  6833  00620C                     
  6834                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6835  00620C  0E03               	movlw	3
  6836  00620E  0100               	movlb	0	; () banked
  6837  006210  19D1               	xorwf	_MdmStatus& (0+255),w,b
  6838  006212  A4D8               	btfss	status,2,c
  6839  006214  0012               	return	
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;mdm_gsm_gprs_http.c: 570: {
  6843                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6844  006216  C31C  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6845  00621A  C31D  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6846  00621E  C1EB  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6847  006222  ECE7  F006         	call	_InitGprsNetwork	;wreg free
  6848  006226  0101               	movlb	1	; () banked
  6849  006228  6FEA               	movwf	_GprsNetworkSts& (0+255),b
  6850                           
  6851                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6852  00622A  0EA6               	movlw	low _HttpGetDataLocal
  6853  00622C  0100               	movlb	0	; () banked
  6854  00622E  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6855  006230  0E03               	movlw	high _HttpGetDataLocal
  6856  006232  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6857  006234  ECF9  F002         	call	_HttpGetMethod	;wreg free
  6858  006238  0101               	movlb	1	; () banked
  6859  00623A  6FE9               	movwf	_HttpGetMethodSts& (0+255),b
  6860                           
  6861                           ; BSR set to: 1
  6862                           ;mdm_gsm_gprs_http.c: 581: }
  6863                           
  6864                           ; BSR set to: 1
  6865                           ;mdm_gsm_gprs_http.c: 580: break;
  6866                           
  6867                           ;mdm_gsm_gprs_http.c: 579: default:
  6868                           
  6869                           ; BSR set to: 1
  6870                           ;mdm_gsm_gprs_http.c: 575: }
  6871                           ;mdm_gsm_gprs_http.c: 576: break;
  6872  00623C  0012               	return	
  6873  00623E                     l1291:
  6874                           
  6875                           ; BSR set to: 1
  6876  00623E  0100               	movlb	0	; () banked
  6877  006240  51D4               	movf	_SystemState& (0+255),w,b
  6878                           
  6879                           ; Switch size 1, requested type "space"
  6880                           ; Number of cases is 2, Range of values is 0 to 1
  6881                           ; switch strategies available:
  6882                           ; Name         Instructions Cycles
  6883                           ; simple_byte            7     4 (average)
  6884                           ;	Chosen strategy is simple_byte
  6885  006242  0A00               	xorlw	0	; case 0
  6886  006244  B4D8               	btfsc	status,2,c
  6887  006246  0012               	return	
  6888  006248  0A01               	xorlw	1	; case 1
  6889  00624A  A4D8               	btfss	status,2,c
  6890  00624C  0012               	return	
  6891  00624E  D7DE               	goto	l1294
  6892  006250                     __end_of_MdmHttp_MainTask:
  6893                           	opt stack 0
  6894                           tosu	equ	0xFFF
  6895                           tosh	equ	0xFFE
  6896                           tosl	equ	0xFFD
  6897                           pclath	equ	0xFFA
  6898                           tblptru	equ	0xFF8
  6899                           tblptrh	equ	0xFF7
  6900                           tblptrl	equ	0xFF6
  6901                           tablat	equ	0xFF5
  6902                           prodh	equ	0xFF4
  6903                           prodl	equ	0xFF3
  6904                           intcon	equ	0xFF2
  6905                           intcon2	equ	0xFF1
  6906                           intcon3	equ	0xFF0
  6907                           postinc0	equ	0xFEE
  6908                           plusw0	equ	0xFEB
  6909                           wreg	equ	0xFE8
  6910                           postinc1	equ	0xFE6
  6911                           postdec1	equ	0xFE5
  6912                           fsr1h	equ	0xFE2
  6913                           fsr1l	equ	0xFE1
  6914                           indf2	equ	0xFDF
  6915                           postinc2	equ	0xFDE
  6916                           postdec2	equ	0xFDD
  6917                           plusw2	equ	0xFDB
  6918                           fsr2h	equ	0xFDA
  6919                           fsr2l	equ	0xFD9
  6920                           status	equ	0xFD8
  6921                           
  6922 ;; *************** function _Mdm_MainTask *****************
  6923 ;; Defined at:
  6924 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;  Options         1    wreg     unsigned char 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;  Options         1    0[COMRAM] unsigned char 
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  1    wreg      void 
  6931 ;; Registers used:
  6932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6942 ;;Total ram usage:        0 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; Hardware stack levels required when called:   15
  6945 ;; This function calls:
  6946 ;;		_CheckModem
  6947 ;;		_ConfigureModem
  6948 ;;		_GetSmsSm
  6949 ;;		_ModemEvtParser
  6950 ;;		_SendSmsSm
  6951 ;;		_TurnOnModem
  6952 ;;		_UartSetConfig
  6953 ;;		_Uart_InitUartModule
  6954 ;; This function is called by:
  6955 ;;		_InitializeTasks
  6956 ;;		_ScheduleTasks
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           	psect	text22
  6961  005F58                     __ptext22:
  6962                           	opt stack 0
  6963  005F58                     _Mdm_MainTask:
  6964                           	opt stack 13
  6965                           
  6966                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6967                           
  6968                           ;incstack = 0
  6969  005F58  D01E               	goto	l1107
  6970  005F5A                     
  6971                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6972  005F5A  EC85  F02D         	call	_UartSetConfig	;wreg free
  6973                           
  6974                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6975  005F5E  0E24               	movlw	low _UartConfig
  6976  005F60  0100               	movlb	0	; () banked
  6977  005F62  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6978  005F64  0E03               	movlw	high _UartConfig
  6979  005F66  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6980  005F68  0E01               	movlw	1
  6981  005F6A  EC61  F005         	call	_Uart_InitUartModule
  6982                           
  6983                           ;mdm_gsm_gprs.c: 764: break;
  6984  005F6E  0012               	return	
  6985  005F70                     
  6986                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6987  005F70  EC13  F010         	call	_CheckModem	;wreg free
  6988                           
  6989                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6990  005F74  042B               	decf	_ComChecCompleted,w,c
  6991  005F76  A4D8               	btfss	status,2,c
  6992  005F78  D005               	goto	l1111
  6993  005F7A  0100               	movlb	0	; () banked
  6994  005F7C  51D1               	movf	_MdmStatus& (0+255),w,b
  6995  005F7E  B4D8               	btfsc	status,2,c
  6996                           
  6997                           ; BSR set to: 0
  6998                           ;mdm_gsm_gprs.c: 772: {
  6999                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  7000  005F80  EC97  F030         	call	_TurnOnModem	;wreg free
  7001  005F84                     l1111:
  7002                           
  7003                           ;mdm_gsm_gprs.c: 775: }
  7004                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  7005  005F84  ECC7  F01D         	call	_ConfigureModem	;wreg free
  7006                           
  7007                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  7008  005F88  EC9B  F00E         	call	_ModemEvtParser	;wreg free
  7009                           
  7010                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  7011  005F8C  EC01  F016         	call	_GetSmsSm	;wreg free
  7012                           
  7013                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  7014  005F90  ECFC  F00C         	call	_SendSmsSm	;wreg free
  7015                           
  7016                           ;mdm_gsm_gprs.c: 789: }
  7017                           
  7018                           ;mdm_gsm_gprs.c: 788: break;
  7019                           
  7020                           ;mdm_gsm_gprs.c: 787: default:
  7021                           
  7022                           ;mdm_gsm_gprs.c: 784: break;
  7023  005F94  0012               	return	
  7024  005F96                     l1107:
  7025  005F96  0100               	movlb	0	; () banked
  7026  005F98  51D4               	movf	_SystemState& (0+255),w,b
  7027                           
  7028                           ; Switch size 1, requested type "space"
  7029                           ; Number of cases is 2, Range of values is 0 to 1
  7030                           ; switch strategies available:
  7031                           ; Name         Instructions Cycles
  7032                           ; simple_byte            7     4 (average)
  7033                           ;	Chosen strategy is simple_byte
  7034  005F9A  0A00               	xorlw	0	; case 0
  7035  005F9C  B4D8               	btfsc	status,2,c
  7036  005F9E  D7DD               	goto	l1108
  7037  005FA0  0A01               	xorlw	1	; case 1
  7038  005FA2  A4D8               	btfss	status,2,c
  7039  005FA4  0012               	return	
  7040  005FA6  D7E4               	goto	l1110
  7041  005FA8                     __end_of_Mdm_MainTask:
  7042                           	opt stack 0
  7043                           tosu	equ	0xFFF
  7044                           tosh	equ	0xFFE
  7045                           tosl	equ	0xFFD
  7046                           pclath	equ	0xFFA
  7047                           tblptru	equ	0xFF8
  7048                           tblptrh	equ	0xFF7
  7049                           tblptrl	equ	0xFF6
  7050                           tablat	equ	0xFF5
  7051                           prodh	equ	0xFF4
  7052                           prodl	equ	0xFF3
  7053                           intcon	equ	0xFF2
  7054                           intcon2	equ	0xFF1
  7055                           intcon3	equ	0xFF0
  7056                           postinc0	equ	0xFEE
  7057                           plusw0	equ	0xFEB
  7058                           wreg	equ	0xFE8
  7059                           postinc1	equ	0xFE6
  7060                           postdec1	equ	0xFE5
  7061                           fsr1h	equ	0xFE2
  7062                           fsr1l	equ	0xFE1
  7063                           indf2	equ	0xFDF
  7064                           postinc2	equ	0xFDE
  7065                           postdec2	equ	0xFDD
  7066                           plusw2	equ	0xFDB
  7067                           fsr2h	equ	0xFDA
  7068                           fsr2l	equ	0xFD9
  7069                           status	equ	0xFD8
  7070                           
  7071 ;; *************** function _I2cSlv_MainTask *****************
  7072 ;; Defined at:
  7073 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;  Options         1    wreg     unsigned char 
  7076 ;; Auto vars:     Size  Location     Type
  7077 ;;  Options         1    0[COMRAM] unsigned char 
  7078 ;; Return value:  Size  Location     Type
  7079 ;;                  1    wreg      void 
  7080 ;; Registers used:
  7081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7082 ;; Tracked objects:
  7083 ;;		On entry : 0/0
  7084 ;;		On exit  : 0/0
  7085 ;;		Unchanged: 0/0
  7086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7091 ;;Total ram usage:        0 bytes
  7092 ;; Hardware stack levels used:    1
  7093 ;; Hardware stack levels required when called:   14
  7094 ;; This function calls:
  7095 ;;		_I2cSendMsgSm
  7096 ;;		_I2cSetConfig
  7097 ;;		_I2c_InitI2cModule
  7098 ;;		_OsAlrm_SetOsAlarm
  7099 ;; This function is called by:
  7100 ;;		_InitializeTasks
  7101 ;;		_ScheduleTasks
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text23
  7106  005CC0                     __ptext23:
  7107                           	opt stack 0
  7108  005CC0                     _I2cSlv_MainTask:
  7109                           	opt stack 14
  7110                           
  7111                           ;i2c_slv.c: 217: switch (SystemState)
  7112                           
  7113                           ;incstack = 0
  7114  005CC0  D020               	goto	l1404
  7115  005CC2                     
  7116                           ;i2c_slv.c: 222: I2cSetConfig();
  7117  005CC2  EC2E  F034         	call	_I2cSetConfig	;wreg free
  7118                           
  7119                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7120  005CC6  0E5E               	movlw	low _I2cConfig
  7121  005CC8  0100               	movlb	0	; () banked
  7122  005CCA  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7123  005CCC  0E03               	movlw	high _I2cConfig
  7124  005CCE  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7125  005CD0  EC1F  F02B         	call	_I2c_InitI2cModule	;wreg free
  7126                           
  7127                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7128  005CD4  0E00               	movlw	0
  7129  005CD6  0100               	movlb	0	; () banked
  7130  005CD8  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7131  005CDA  0E00               	movlw	0
  7132  005CDC  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7133  005CDE  0E32               	movlw	50
  7134  005CE0  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7135  005CE2  0E00               	movlw	0
  7136  005CE4  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7137  005CE6  0E00               	movlw	0
  7138  005CE8  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7139  005CEA  0E00               	movlw	0
  7140  005CEC  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7141  005CEE  0E5C               	movlw	low _I2cDummyTx
  7142  005CF0  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7143  005CF2  0E6B               	movlw	high _I2cDummyTx
  7144  005CF4  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7145  005CF6  ECFA  F020         	call	_OsAlrm_SetOsAlarm	;wreg free
  7146                           
  7147                           ;i2c_slv.c: 227: break;
  7148  005CFA  0012               	return	
  7149  005CFC                     
  7150                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7151  005CFC  EC5E  F021         	call	_I2cSendMsgSm	;wreg free
  7152                           
  7153                           ;i2c_slv.c: 238: }
  7154                           
  7155                           ;i2c_slv.c: 237: break;
  7156                           
  7157                           ;i2c_slv.c: 236: default:
  7158                           
  7159                           ;i2c_slv.c: 233: break;
  7160  005D00  0012               	return	
  7161  005D02                     l1404:
  7162  005D02  0100               	movlb	0	; () banked
  7163  005D04  51D4               	movf	_SystemState& (0+255),w,b
  7164                           
  7165                           ; Switch size 1, requested type "space"
  7166                           ; Number of cases is 2, Range of values is 0 to 1
  7167                           ; switch strategies available:
  7168                           ; Name         Instructions Cycles
  7169                           ; simple_byte            7     4 (average)
  7170                           ;	Chosen strategy is simple_byte
  7171  005D06  0A00               	xorlw	0	; case 0
  7172  005D08  B4D8               	btfsc	status,2,c
  7173  005D0A  D7DB               	goto	l1405
  7174  005D0C  0A01               	xorlw	1	; case 1
  7175  005D0E  A4D8               	btfss	status,2,c
  7176  005D10  0012               	return	
  7177  005D12  D7F4               	goto	l1407
  7178  005D14                     __end_of_I2cSlv_MainTask:
  7179                           	opt stack 0
  7180                           tosu	equ	0xFFF
  7181                           tosh	equ	0xFFE
  7182                           tosl	equ	0xFFD
  7183                           pclath	equ	0xFFA
  7184                           tblptru	equ	0xFF8
  7185                           tblptrh	equ	0xFF7
  7186                           tblptrl	equ	0xFF6
  7187                           tablat	equ	0xFF5
  7188                           prodh	equ	0xFF4
  7189                           prodl	equ	0xFF3
  7190                           intcon	equ	0xFF2
  7191                           intcon2	equ	0xFF1
  7192                           intcon3	equ	0xFF0
  7193                           postinc0	equ	0xFEE
  7194                           plusw0	equ	0xFEB
  7195                           wreg	equ	0xFE8
  7196                           postinc1	equ	0xFE6
  7197                           postdec1	equ	0xFE5
  7198                           fsr1h	equ	0xFE2
  7199                           fsr1l	equ	0xFE1
  7200                           indf2	equ	0xFDF
  7201                           postinc2	equ	0xFDE
  7202                           postdec2	equ	0xFDD
  7203                           plusw2	equ	0xFDB
  7204                           fsr2h	equ	0xFDA
  7205                           fsr2l	equ	0xFD9
  7206                           status	equ	0xFD8
  7207                           
  7208 ;; *************** function _Mdm_DrvMainFn *****************
  7209 ;; Defined at:
  7210 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;  Options         1    wreg     unsigned char 
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;  Options         1    0[COMRAM] unsigned char 
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  1    wreg      void 
  7217 ;; Registers used:
  7218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7228 ;;Total ram usage:        0 bytes
  7229 ;; Hardware stack levels used:    1
  7230 ;; Hardware stack levels required when called:   13
  7231 ;; This function calls:
  7232 ;;		_MdmCntSm
  7233 ;; This function is called by:
  7234 ;;		_InitializeTasks
  7235 ;;		_ScheduleTasks
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           	psect	text24
  7240  006DA6                     __ptext24:
  7241                           	opt stack 0
  7242  006DA6                     _Mdm_DrvMainFn:
  7243                           	opt stack 15
  7244                           
  7245                           ;mdm_drv.c: 307: MdmCntSm();
  7246                           
  7247                           ;incstack = 0
  7248  006DA6  EC99  F024         	call	_MdmCntSm	;wreg free
  7249  006DAA  0012               	return		;funcret
  7250  006DAC                     __end_of_Mdm_DrvMainFn:
  7251                           	opt stack 0
  7252                           tosu	equ	0xFFF
  7253                           tosh	equ	0xFFE
  7254                           tosl	equ	0xFFD
  7255                           pclath	equ	0xFFA
  7256                           tblptru	equ	0xFF8
  7257                           tblptrh	equ	0xFF7
  7258                           tblptrl	equ	0xFF6
  7259                           tablat	equ	0xFF5
  7260                           prodh	equ	0xFF4
  7261                           prodl	equ	0xFF3
  7262                           intcon	equ	0xFF2
  7263                           intcon2	equ	0xFF1
  7264                           intcon3	equ	0xFF0
  7265                           postinc0	equ	0xFEE
  7266                           plusw0	equ	0xFEB
  7267                           wreg	equ	0xFE8
  7268                           postinc1	equ	0xFE6
  7269                           postdec1	equ	0xFE5
  7270                           fsr1h	equ	0xFE2
  7271                           fsr1l	equ	0xFE1
  7272                           indf2	equ	0xFDF
  7273                           postinc2	equ	0xFDE
  7274                           postdec2	equ	0xFDD
  7275                           plusw2	equ	0xFDB
  7276                           fsr2h	equ	0xFDA
  7277                           fsr2l	equ	0xFD9
  7278                           status	equ	0xFD8
  7279                           
  7280 ;; *************** function _Wdg_MainTask *****************
  7281 ;; Defined at:
  7282 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;  Options         1    wreg     unsigned char 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  Options         1    0[COMRAM] unsigned char 
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  1    wreg      void 
  7289 ;; Registers used:
  7290 ;;		wreg, status,2, status,0, cstack
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7300 ;;Total ram usage:        0 bytes
  7301 ;; Hardware stack levels used:    1
  7302 ;; Hardware stack levels required when called:   12
  7303 ;; This function calls:
  7304 ;;		_Mcu_ClearWdg
  7305 ;;		_Mcu_SetWdgSts
  7306 ;; This function is called by:
  7307 ;;		_InitializeTasks
  7308 ;;		_ScheduleTasks
  7309 ;; This function uses a non-reentrant model
  7310 ;;
  7311                           
  7312                           	psect	text25
  7313  0069BA                     __ptext25:
  7314                           	opt stack 0
  7315  0069BA                     _Wdg_MainTask:
  7316                           	opt stack 16
  7317                           
  7318                           ;wdg.c: 75: switch (SystemState)
  7319                           
  7320                           ;incstack = 0
  7321  0069BA  D007               	goto	l2512
  7322  0069BC                     
  7323                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7324  0069BC  0E01               	movlw	1
  7325  0069BE  EC4A  F036         	call	_Mcu_SetWdgSts
  7326                           
  7327                           ;wdg.c: 81: break;
  7328  0069C2  0012               	return	
  7329  0069C4                     
  7330                           ;wdg.c: 86: Mcu_ClearWdg();
  7331  0069C4  ECD6  F036         	call	_Mcu_ClearWdg	;wreg free
  7332                           
  7333                           ;wdg.c: 92: }
  7334                           
  7335                           ;wdg.c: 91: break;
  7336                           
  7337                           ;wdg.c: 90: default:
  7338                           
  7339                           ;wdg.c: 87: break;
  7340  0069C8  0012               	return	
  7341  0069CA                     l2512:
  7342  0069CA  0100               	movlb	0	; () banked
  7343  0069CC  51D4               	movf	_SystemState& (0+255),w,b
  7344                           
  7345                           ; Switch size 1, requested type "space"
  7346                           ; Number of cases is 2, Range of values is 0 to 1
  7347                           ; switch strategies available:
  7348                           ; Name         Instructions Cycles
  7349                           ; simple_byte            7     4 (average)
  7350                           ;	Chosen strategy is simple_byte
  7351  0069CE  0A00               	xorlw	0	; case 0
  7352  0069D0  B4D8               	btfsc	status,2,c
  7353  0069D2  D7F4               	goto	l2513
  7354  0069D4  0A01               	xorlw	1	; case 1
  7355  0069D6  A4D8               	btfss	status,2,c
  7356  0069D8  0012               	return	
  7357  0069DA  D7F4               	goto	l2515
  7358  0069DC                     __end_of_Wdg_MainTask:
  7359                           	opt stack 0
  7360                           tosu	equ	0xFFF
  7361                           tosh	equ	0xFFE
  7362                           tosl	equ	0xFFD
  7363                           pclath	equ	0xFFA
  7364                           tblptru	equ	0xFF8
  7365                           tblptrh	equ	0xFF7
  7366                           tblptrl	equ	0xFF6
  7367                           tablat	equ	0xFF5
  7368                           prodh	equ	0xFF4
  7369                           prodl	equ	0xFF3
  7370                           intcon	equ	0xFF2
  7371                           intcon2	equ	0xFF1
  7372                           intcon3	equ	0xFF0
  7373                           postinc0	equ	0xFEE
  7374                           plusw0	equ	0xFEB
  7375                           wreg	equ	0xFE8
  7376                           postinc1	equ	0xFE6
  7377                           postdec1	equ	0xFE5
  7378                           fsr1h	equ	0xFE2
  7379                           fsr1l	equ	0xFE1
  7380                           indf2	equ	0xFDF
  7381                           postinc2	equ	0xFDE
  7382                           postdec2	equ	0xFDD
  7383                           plusw2	equ	0xFDB
  7384                           fsr2h	equ	0xFDA
  7385                           fsr2l	equ	0xFD9
  7386                           status	equ	0xFD8
  7387                           
  7388 ;; *************** function _Mcu_SetWdgSts *****************
  7389 ;; Defined at:
  7390 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;  WdgSts          1    wreg     unsigned char 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1    wreg      void 
  7397 ;; Registers used:
  7398 ;;		wreg
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7407 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7408 ;;Total ram usage:        1 bytes
  7409 ;; Hardware stack levels used:    1
  7410 ;; Hardware stack levels required when called:   11
  7411 ;; This function calls:
  7412 ;;		Nothing
  7413 ;; This function is called by:
  7414 ;;		_Wdg_MainTask
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text26
  7419  006C94                     __ptext26:
  7420                           	opt stack 0
  7421  006C94                     _Mcu_SetWdgSts:
  7422                           	opt stack 16
  7423                           
  7424                           ;incstack = 0
  7425                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7426  006C94  0100               	movlb	0	; () banked
  7427  006C96  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7428                           
  7429                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7430  006C98  0100               	movlb	0	; () banked
  7431  006C9A  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7432  006C9C  D002               	bra	u14965
  7433  006C9E  90C0               	bcf	4032,0,c	;volatile
  7434  006CA0  D001               	bra	u14966
  7435  006CA2                     u14965:
  7436  006CA2  80C0               	bsf	4032,0,c	;volatile
  7437  006CA4                     u14966:
  7438  006CA4  0012               	return		;funcret
  7439  006CA6                     __end_of_Mcu_SetWdgSts:
  7440                           	opt stack 0
  7441                           tosu	equ	0xFFF
  7442                           tosh	equ	0xFFE
  7443                           tosl	equ	0xFFD
  7444                           pclath	equ	0xFFA
  7445                           tblptru	equ	0xFF8
  7446                           tblptrh	equ	0xFF7
  7447                           tblptrl	equ	0xFF6
  7448                           tablat	equ	0xFF5
  7449                           prodh	equ	0xFF4
  7450                           prodl	equ	0xFF3
  7451                           intcon	equ	0xFF2
  7452                           intcon2	equ	0xFF1
  7453                           intcon3	equ	0xFF0
  7454                           postinc0	equ	0xFEE
  7455                           plusw0	equ	0xFEB
  7456                           wreg	equ	0xFE8
  7457                           postinc1	equ	0xFE6
  7458                           postdec1	equ	0xFE5
  7459                           fsr1h	equ	0xFE2
  7460                           fsr1l	equ	0xFE1
  7461                           indf2	equ	0xFDF
  7462                           postinc2	equ	0xFDE
  7463                           postdec2	equ	0xFDD
  7464                           plusw2	equ	0xFDB
  7465                           fsr2h	equ	0xFDA
  7466                           fsr2l	equ	0xFD9
  7467                           status	equ	0xFD8
  7468                           
  7469 ;; *************** function _Mcu_ClearWdg *****************
  7470 ;; Defined at:
  7471 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;		None
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;		None
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  1    wreg      void 
  7478 ;; Registers used:
  7479 ;;		None
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7489 ;;Total ram usage:        0 bytes
  7490 ;; Hardware stack levels used:    1
  7491 ;; Hardware stack levels required when called:   11
  7492 ;; This function calls:
  7493 ;;		Nothing
  7494 ;; This function is called by:
  7495 ;;		_Wdg_MainTask
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text27
  7500  006DAC                     __ptext27:
  7501                           	opt stack 0
  7502  006DAC                     _Mcu_ClearWdg:
  7503                           	opt stack 16
  7504                           
  7505                           ;incstack = 0
  7506  006DAC  0004               	clrwdt		;# 
  7507  006DAE  0012               	return		;funcret
  7508  006DB0                     __end_of_Mcu_ClearWdg:
  7509                           	opt stack 0
  7510                           tosu	equ	0xFFF
  7511                           tosh	equ	0xFFE
  7512                           tosl	equ	0xFFD
  7513                           pclath	equ	0xFFA
  7514                           tblptru	equ	0xFF8
  7515                           tblptrh	equ	0xFF7
  7516                           tblptrl	equ	0xFF6
  7517                           tablat	equ	0xFF5
  7518                           prodh	equ	0xFF4
  7519                           prodl	equ	0xFF3
  7520                           intcon	equ	0xFF2
  7521                           intcon2	equ	0xFF1
  7522                           intcon3	equ	0xFF0
  7523                           postinc0	equ	0xFEE
  7524                           plusw0	equ	0xFEB
  7525                           wreg	equ	0xFE8
  7526                           postinc1	equ	0xFE6
  7527                           postdec1	equ	0xFE5
  7528                           fsr1h	equ	0xFE2
  7529                           fsr1l	equ	0xFE1
  7530                           indf2	equ	0xFDF
  7531                           postinc2	equ	0xFDE
  7532                           postdec2	equ	0xFDD
  7533                           plusw2	equ	0xFDB
  7534                           fsr2h	equ	0xFDA
  7535                           fsr2l	equ	0xFD9
  7536                           status	equ	0xFD8
  7537                           
  7538 ;; *************** function _USBDeviceTasks *****************
  7539 ;; Defined at:
  7540 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;		None
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  i               1   56[BANK0 ] unsigned char 
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      void 
  7547 ;; Registers used:
  7548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7555 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7557 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7558 ;;Total ram usage:        1 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:   19
  7561 ;; This function calls:
  7562 ;;		_USBCtrlEPAllowStatusStage
  7563 ;;		_USBCtrlEPService
  7564 ;;		_USBDeviceInit
  7565 ;;		_USBIncrement1msInternalTimers
  7566 ;;		_USBStallHandler
  7567 ;;		_USBSuspend
  7568 ;;		_USBWakeFromSuspend
  7569 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7570 ;; This function is called by:
  7571 ;;		_UsbDevice_MainTask
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text28
  7576  001BB0                     __ptext28:
  7577                           	opt stack 0
  7578  001BB0                     _USBDeviceTasks:
  7579                           	opt stack 8
  7580                           
  7581                           ;usb_device.c: 562: }
  7582                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7583                           
  7584                           ; BSR set to: 0
  7585                           
  7586                           ; BSR set to: 0
  7587                           ;usb_device.c: 561: return;
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7591                           
  7592                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7593                           
  7594                           ;usb_device.c: 529: UIE = 0;
  7595                           
  7596                           ;usb_device.c: 524: {
  7597                           ;usb_device.c: 526: UCON = 0;
  7598                           
  7599                           ;usb_device.c: 497: uint8_t i;
  7600                           ;usb_device.c: 523: if (1 != 1)
  7601                           
  7602                           ;incstack = 0
  7603  001BB0  0100               	movlb	0	; () banked
  7604  001BB2  51CE               	movf	_USBDeviceState& (0+255),w,b
  7605  001BB4  A4D8               	btfss	status,2,c
  7606  001BB6  D012               	goto	l1615
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;usb_device.c: 585: {
  7610                           ;usb_device.c: 587: UCON = 0;
  7611  001BB8  0E00               	movlw	0
  7612  001BBA  6E65               	movwf	3941,c	;volatile
  7613                           
  7614                           ;usb_device.c: 590: UIE = 0;
  7615  001BBC  0E00               	movlw	0
  7616  001BBE  010F               	movlb	15	; () banked
  7617  001BC0  6F36               	movwf	54,b	;volatile
  7618                           
  7619                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7620  001BC2  0E16               	movlw	22
  7621  001BC4  6F39               	movwf	57,b	;volatile
  7622  001BC6  0E9F               	movlw	159
  7623  001BC8  6F37               	movwf	55,b	;volatile
  7624  001BCA  0E7B               	movlw	123
  7625  001BCC  6F36               	movwf	54,b	;volatile
  7626                           
  7627                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7628  001BCE  D001               	goto	l1616
  7629  001BD0                     l1617:
  7630  001BD0  8665               	bsf	3941,3,c	;volatile
  7631  001BD2                     l1616:
  7632  001BD2  A665               	btfss	3941,3,c	;volatile
  7633  001BD4  D7FD               	goto	l1617
  7634                           
  7635                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7636  001BD6  0E01               	movlw	1
  7637  001BD8  0100               	movlb	0	; () banked
  7638  001BDA  6FCE               	movwf	_USBDeviceState& (0+255),b
  7639  001BDC                     l1615:
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;usb_device.c: 605: }
  7643                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7644                           
  7645                           ; BSR set to: 0
  7646  001BDC  05CE               	decf	_USBDeviceState& (0+255),w,b
  7647  001BDE  B4D8               	btfsc	status,2,c
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;usb_device.c: 609: {
  7651                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7652  001BE0  BA65               	btfsc	3941,5,c	;volatile
  7653  001BE2  D00A               	goto	l1620
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;usb_device.c: 620: {
  7657                           ;usb_device.c: 626: {UIR = 0;};
  7658  001BE4  0E00               	movlw	0
  7659  001BE6  6E62               	movwf	3938,c	;volatile
  7660                           
  7661                           ;usb_device.c: 630: UIE=0;
  7662  001BE8  0E00               	movlw	0
  7663  001BEA  010F               	movlb	15	; () banked
  7664  001BEC  6F36               	movwf	54,b	;volatile
  7665                           
  7666                           ; BSR set to: 15
  7667                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7668  001BEE  8136               	bsf	54,0,b	;volatile
  7669                           
  7670                           ; BSR set to: 15
  7671                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7672  001BF0  8936               	bsf	54,4,b	;volatile
  7673                           
  7674                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7675  001BF2  0E02               	movlw	2
  7676  001BF4  0100               	movlb	0	; () banked
  7677  001BF6  6FCE               	movwf	_USBDeviceState& (0+255),b
  7678  001BF8                     l1620:
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;usb_device.c: 635: }
  7682                           ;usb_device.c: 636: }
  7683                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7684                           
  7685                           ; BSR set to: 0
  7686                           
  7687                           ; BSR set to: 0
  7688  001BF8  A462               	btfss	3938,2,c	;volatile
  7689  001BFA  D006               	goto	l1621
  7690                           
  7691                           ; BSR set to: 0
  7692  001BFC  010F               	movlb	15	; () banked
  7693  001BFE  A536               	btfss	54,2,b	;volatile
  7694  001C00  D003               	goto	l1621
  7695                           
  7696                           ; BSR set to: 15
  7697                           ;usb_device.c: 653: {
  7698                           ;usb_device.c: 654: (UIR &= 0xFB);
  7699  001C02  9462               	bcf	3938,2,c	;volatile
  7700                           
  7701                           ; BSR set to: 15
  7702                           ;usb_device.c: 658: USBWakeFromSuspend();
  7703  001C04  ECC9  F032         	call	_USBWakeFromSuspend	;wreg free
  7704  001C08                     l1621:
  7705                           
  7706                           ;usb_device.c: 660: }
  7707                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7708  001C08  A265               	btfss	3941,1,c	;volatile
  7709  001C0A  D002               	goto	l1622
  7710                           
  7711                           ;usb_device.c: 666: {
  7712                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7713  001C0C  98A1               	bcf	4001,4,c	;volatile
  7714                           
  7715                           ;usb_device.c: 668: return;
  7716  001C0E  0012               	return	
  7717  001C10                     l1622:
  7718                           
  7719                           ;usb_device.c: 669: }
  7720                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7721  001C10  A062               	btfss	3938,0,c	;volatile
  7722  001C12  D009               	goto	l1623
  7723  001C14  010F               	movlb	15	; () banked
  7724  001C16  A136               	btfss	54,0,b	;volatile
  7725  001C18  D006               	goto	l1623
  7726                           
  7727                           ; BSR set to: 15
  7728                           ;usb_device.c: 682: {
  7729                           ;usb_device.c: 683: USBDeviceInit();
  7730  001C1A  EC75  F013         	call	_USBDeviceInit	;wreg free
  7731                           
  7732                           ;usb_device.c: 687: ;
  7733                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7734  001C1E  0E04               	movlw	4
  7735  001C20  0100               	movlb	0	; () banked
  7736  001C22  6FCE               	movwf	_USBDeviceState& (0+255),b
  7737                           
  7738                           ; BSR set to: 0
  7739                           ;usb_device.c: 699: (UIR &= 0xFE);
  7740  001C24  9062               	bcf	3938,0,c	;volatile
  7741  001C26                     l1623:
  7742                           
  7743                           ;usb_device.c: 700: }
  7744                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7745                           
  7746                           ; BSR set to: 0
  7747  001C26  A862               	btfss	3938,4,c	;volatile
  7748  001C28  D004               	goto	l1624
  7749  001C2A  010F               	movlb	15	; () banked
  7750  001C2C  B936               	btfsc	54,4,b	;volatile
  7751                           
  7752                           ; BSR set to: 15
  7753                           ;usb_device.c: 706: {
  7754                           ;usb_device.c: 712: USBSuspend();
  7755  001C2E  EC6E  F033         	call	_USBSuspend	;wreg free
  7756  001C32                     l1624:
  7757                           
  7758                           ;usb_device.c: 714: }
  7759                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7760  001C32  AC62               	btfss	3938,6,c	;volatile
  7761  001C34  D01C               	goto	l1628
  7762                           
  7763                           ;usb_device.c: 727: {
  7764                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7765  001C36  010F               	movlb	15	; () banked
  7766  001C38  AD36               	btfss	54,6,b	;volatile
  7767  001C3A  D00F               	goto	l1626
  7768                           
  7769                           ; BSR set to: 15
  7770                           ;usb_device.c: 730: {
  7771                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7772  001C3C  0E00               	movlw	0
  7773  001C3E  0100               	movlb	0	; () banked
  7774  001C40  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7775  001C42  0E73               	movlw	115
  7776  001C44  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7777  001C46  0E00               	movlw	0
  7778  001C48  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7779  001C4A  0E00               	movlw	0
  7780  001C4C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7781  001C4E  0E00               	movlw	0
  7782  001C50  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7783  001C52  0E01               	movlw	1
  7784  001C54  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7785  001C56  ECF9  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7786  001C5A                     l1626:
  7787                           
  7788                           ;usb_device.c: 732: }
  7789                           ;usb_device.c: 733: (UIR &= 0xBF);
  7790  001C5A  9C62               	bcf	3938,6,c	;volatile
  7791                           
  7792                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7793  001C5C  ECEE  F034         	call	_USBIncrement1msInternalTimers	;wreg free
  7794                           
  7795                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7796  001C60  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7797  001C62  A4D8               	btfss	status,2,c
  7798                           
  7799                           ;usb_device.c: 754: {
  7800                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7801  001C64  0629               	decf	_USBStatusStageTimeoutCounter,f,c
  7802                           
  7803                           ;usb_device.c: 756: }
  7804                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7805  001C66  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7806  001C68  B4D8               	btfsc	status,2,c
  7807                           
  7808                           ;usb_device.c: 763: {
  7809                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7810  001C6A  EC67  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7811  001C6E                     l1628:
  7812                           
  7813                           ;usb_device.c: 765: }
  7814                           ;usb_device.c: 767: }
  7815                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7816  001C6E  AA62               	btfss	3938,5,c	;volatile
  7817  001C70  D004               	goto	l1629
  7818  001C72  010F               	movlb	15	; () banked
  7819  001C74  BB36               	btfsc	54,5,b	;volatile
  7820                           
  7821                           ; BSR set to: 15
  7822                           ;usb_device.c: 770: {
  7823                           ;usb_device.c: 771: USBStallHandler();
  7824  001C76  EC28  F031         	call	_USBStallHandler	;wreg free
  7825  001C7A                     l1629:
  7826                           
  7827                           ;usb_device.c: 772: }
  7828                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7829  001C7A  A262               	btfss	3938,1,c	;volatile
  7830  001C7C  D013               	goto	l1630
  7831  001C7E  010F               	movlb	15	; () banked
  7832  001C80  A336               	btfss	54,1,b	;volatile
  7833  001C82  D010               	goto	l1630
  7834                           
  7835                           ; BSR set to: 15
  7836                           ;usb_device.c: 775: {
  7837                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7838  001C84  0E7F               	movlw	127
  7839  001C86  0100               	movlb	0	; () banked
  7840  001C88  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7841  001C8A  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7842  001C8C  0E00               	movlw	0
  7843  001C8E  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7844  001C90  0E00               	movlw	0
  7845  001C92  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7846  001C94  0E00               	movlw	0
  7847  001C96  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7848  001C98  0E01               	movlw	1
  7849  001C9A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7850  001C9C  ECF9  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7851                           
  7852                           ;usb_device.c: 777: {UEIR = 0;};
  7853  001CA0  0E00               	movlw	0
  7854  001CA2  6E63               	movwf	3939,c	;volatile
  7855  001CA4                     l1630:
  7856                           
  7857                           ;usb_device.c: 785: }
  7858                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7859  001CA4  0E04               	movlw	4
  7860  001CA6  0100               	movlb	0	; () banked
  7861  001CA8  61CE               	cpfslt	_USBDeviceState& (0+255),b
  7862  001CAA  D002               	goto	l1631
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;usb_device.c: 793: {
  7866                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7867  001CAC  98A1               	bcf	4001,4,c	;volatile
  7868                           
  7869                           ;usb_device.c: 795: return;
  7870  001CAE  0012               	return	
  7871  001CB0                     l1631:
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;usb_device.c: 796: }
  7875                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7876  001CB0  010F               	movlb	15	; () banked
  7877  001CB2  A736               	btfss	54,3,b	;volatile
  7878  001CB4  D03E               	goto	u15920
  7879                           
  7880                           ; BSR set to: 15
  7881                           ;usb_device.c: 802: {
  7882                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7883  001CB6  0E00               	movlw	0
  7884  001CB8  0100               	movlb	0	; () banked
  7885  001CBA  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7886  001CBC                     l16280:
  7887                           
  7888                           ; BSR set to: 0
  7889  001CBC  0E03               	movlw	3
  7890  001CBE  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7891  001CC0  D001               	goto	l1633
  7892  001CC2  D037               	goto	u15920
  7893  001CC4                     l1633:
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;usb_device.c: 804: {
  7897                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7898  001CC4  A662               	btfss	3938,3,c	;volatile
  7899  001CC6  D035               	goto	u15920
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;usb_device.c: 806: {
  7903                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7904  001CC8  CF64 F0D5          	movff	3940,_USTATcopy	;volatile
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7908  001CCC  31D5               	rrcf	_USTATcopy& (0+255),w,b
  7909  001CCE  32E8               	rrcf	wreg,f,c
  7910  001CD0  32E8               	rrcf	wreg,f,c
  7911  001CD2  0B0F               	andlw	15
  7912  001CD4  6FCB               	movwf	_endpoint_number& (0+255),b
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;usb_device.c: 811: (UIR &= 0xF7);
  7916  001CD6  9662               	bcf	3938,3,c	;volatile
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7920  001CD8  B5D5               	btfsc	_USTATcopy& (0+255),2,b
  7921  001CDA  D007               	goto	l1636
  7922                           
  7923                           ; BSR set to: 0
  7924                           ;usb_device.c: 817: {
  7925                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7926  001CDC  51CB               	movf	_endpoint_number& (0+255),w,b
  7927  001CDE  0D01               	mullw	1
  7928  001CE0  0ECF               	movlw	low _ep_data_out
  7929  001CE2  24F3               	addwf	prodl,w,c
  7930  001CE4  6ED9               	movwf	fsr2l,c
  7931  001CE6  0E02               	movlw	high _ep_data_out
  7932  001CE8  D007               	goto	L3
  7933  001CEA                     l1636:
  7934                           
  7935                           ;usb_device.c: 820: else
  7936                           ;usb_device.c: 821: {
  7937                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7938                           
  7939                           ; BSR set to: 2
  7940  001CEA  0100               	movlb	0	; () banked
  7941  001CEC  51CB               	movf	_endpoint_number& (0+255),w,b
  7942  001CEE  0D01               	mullw	1
  7943  001CF0  0ED2               	movlw	low _ep_data_in
  7944  001CF2  24F3               	addwf	prodl,w,c
  7945  001CF4  6ED9               	movwf	fsr2l,c
  7946  001CF6  0E02               	movlw	high _ep_data_in
  7947  001CF8                     L3:
  7948  001CF8  20F4               	addwfc	prodh,w,c
  7949  001CFA  6EDA               	movwf	fsr2h,c
  7950  001CFC  0102               	movlb	2	; () banked
  7951  001CFE  70DF               	btg	indf2,0,c
  7952                           
  7953                           ; BSR set to: 2
  7954                           ;usb_device.c: 823: }
  7955                           ;usb_device.c: 828: if(endpoint_number == 0)
  7956                           
  7957                           ; BSR set to: 2
  7958  001D00  0100               	movlb	0	; () banked
  7959  001D02  51CB               	movf	_endpoint_number& (0+255),w,b
  7960  001D04  A4D8               	btfss	status,2,c
  7961  001D06  D003               	goto	l1638
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;usb_device.c: 829: {
  7965                           ;usb_device.c: 830: USBCtrlEPService();
  7966  001D08  ECAC  F027         	call	_USBCtrlEPService	;wreg free
  7967                           
  7968                           ;usb_device.c: 831: }
  7969  001D0C  D00F               	goto	l1640
  7970  001D0E                     l1638:
  7971                           
  7972                           ;usb_device.c: 832: else
  7973                           ;usb_device.c: 833: {
  7974                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7975  001D0E  0E00               	movlw	0
  7976  001D10  0100               	movlb	0	; () banked
  7977  001D12  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7978  001D14  0E72               	movlw	114
  7979  001D16  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7980  001D18  0ED5               	movlw	low _USTATcopy
  7981  001D1A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7982  001D1C  0E00               	movlw	high _USTATcopy
  7983  001D1E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7984  001D20  0E00               	movlw	0
  7985  001D22  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7986  001D24  0E00               	movlw	0
  7987  001D26  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7988  001D28  ECF9  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7989  001D2C                     l1640:
  7990  001D2C  0100               	movlb	0	; () banked
  7991  001D2E  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7992  001D30  D7C5               	goto	l16280
  7993  001D32                     u15920:
  7994                           
  7995                           ;usb_device.c: 840: }
  7996                           ;usb_device.c: 841: }
  7997                           ;usb_device.c: 842: }
  7998                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7999                           
  8000                           ; BSR set to: 0
  8001  001D32  98A1               	bcf	4001,4,c	;volatile
  8002  001D34  0012               	return		;funcret
  8003  001D36                     __end_of_USBDeviceTasks:
  8004                           	opt stack 0
  8005                           tosu	equ	0xFFF
  8006                           tosh	equ	0xFFE
  8007                           tosl	equ	0xFFD
  8008                           pclath	equ	0xFFA
  8009                           tblptru	equ	0xFF8
  8010                           tblptrh	equ	0xFF7
  8011                           tblptrl	equ	0xFF6
  8012                           tablat	equ	0xFF5
  8013                           prodh	equ	0xFF4
  8014                           prodl	equ	0xFF3
  8015                           intcon	equ	0xFF2
  8016                           intcon2	equ	0xFF1
  8017                           intcon3	equ	0xFF0
  8018                           postinc0	equ	0xFEE
  8019                           plusw0	equ	0xFEB
  8020                           wreg	equ	0xFE8
  8021                           postinc1	equ	0xFE6
  8022                           postdec1	equ	0xFE5
  8023                           fsr1h	equ	0xFE2
  8024                           fsr1l	equ	0xFE1
  8025                           indf2	equ	0xFDF
  8026                           postinc2	equ	0xFDE
  8027                           postdec2	equ	0xFDD
  8028                           plusw2	equ	0xFDB
  8029                           fsr2h	equ	0xFDA
  8030                           fsr2l	equ	0xFD9
  8031                           status	equ	0xFD8
  8032                           
  8033 ;; *************** function _USBWakeFromSuspend *****************
  8034 ;; Defined at:
  8035 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;		None
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;		None
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1    wreg      void 
  8042 ;; Registers used:
  8043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8053 ;;Total ram usage:        0 bytes
  8054 ;; Hardware stack levels used:    1
  8055 ;; Hardware stack levels required when called:   15
  8056 ;; This function calls:
  8057 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8058 ;; This function is called by:
  8059 ;;		_USBDeviceTasks
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text29
  8064  006592                     __ptext29:
  8065                           	opt stack 0
  8066  006592                     _USBWakeFromSuspend:
  8067                           	opt stack 11
  8068                           
  8069                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  8070                           
  8071                           ;incstack = 0
  8072  006592  0E00               	movlw	0
  8073  006594  0101               	movlb	1	; () banked
  8074  006596  6FDF               	movwf	_USBBusIsSuspended& (0+255),b
  8075                           
  8076                           ; BSR set to: 1
  8077                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  8078  006598  0E00               	movlw	0
  8079  00659A  0100               	movlb	0	; () banked
  8080  00659C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8081  00659E  0E74               	movlw	116
  8082  0065A0  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8083  0065A2  0E00               	movlw	0
  8084  0065A4  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8085  0065A6  0E00               	movlw	0
  8086  0065A8  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8087  0065AA  0E00               	movlw	0
  8088  0065AC  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8089  0065AE  0E00               	movlw	0
  8090  0065B0  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8091  0065B2  ECF9  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8092                           
  8093                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  8094  0065B6  9265               	bcf	3941,1,c	;volatile
  8095                           
  8096                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  8097  0065B8  010F               	movlb	15	; () banked
  8098  0065BA  9536               	bcf	54,2,b	;volatile
  8099                           
  8100                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  8101  0065BC  D001               	goto	l1768
  8102  0065BE                     
  8103                           ;usb_device.c: 2361: {
  8104                           ;usb_device.c: 2362: (UIR &= 0xFB);
  8105                           
  8106                           ; BSR set to: 15
  8107  0065BE  9462               	bcf	3938,2,c	;volatile
  8108  0065C0                     l1768:
  8109  0065C0  B462               	btfsc	3938,2,c	;volatile
  8110  0065C2  D7FD               	goto	l1769
  8111                           
  8112                           ;usb_device.c: 2363: }
  8113                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  8114  0065C4  0E00               	movlw	0
  8115  0065C6  0101               	movlb	1	; () banked
  8116  0065C8  6FDD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8117                           
  8118                           ; BSR set to: 1
  8119  0065CA  0012               	return		;funcret
  8120  0065CC                     __end_of_USBWakeFromSuspend:
  8121                           	opt stack 0
  8122                           tosu	equ	0xFFF
  8123                           tosh	equ	0xFFE
  8124                           tosl	equ	0xFFD
  8125                           pclath	equ	0xFFA
  8126                           tblptru	equ	0xFF8
  8127                           tblptrh	equ	0xFF7
  8128                           tblptrl	equ	0xFF6
  8129                           tablat	equ	0xFF5
  8130                           prodh	equ	0xFF4
  8131                           prodl	equ	0xFF3
  8132                           intcon	equ	0xFF2
  8133                           intcon2	equ	0xFF1
  8134                           intcon3	equ	0xFF0
  8135                           postinc0	equ	0xFEE
  8136                           plusw0	equ	0xFEB
  8137                           wreg	equ	0xFE8
  8138                           postinc1	equ	0xFE6
  8139                           postdec1	equ	0xFE5
  8140                           fsr1h	equ	0xFE2
  8141                           fsr1l	equ	0xFE1
  8142                           indf2	equ	0xFDF
  8143                           postinc2	equ	0xFDE
  8144                           postdec2	equ	0xFDD
  8145                           plusw2	equ	0xFDB
  8146                           fsr2h	equ	0xFDA
  8147                           fsr2l	equ	0xFD9
  8148                           status	equ	0xFD8
  8149                           
  8150 ;; *************** function _USBSuspend *****************
  8151 ;; Defined at:
  8152 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;		None
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;		None
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  1    wreg      void 
  8159 ;; Registers used:
  8160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8170 ;;Total ram usage:        0 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; Hardware stack levels required when called:   15
  8173 ;; This function calls:
  8174 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8175 ;; This function is called by:
  8176 ;;		_USBDeviceTasks
  8177 ;; This function uses a non-reentrant model
  8178 ;;
  8179                           
  8180                           	psect	text30
  8181  0066DC                     __ptext30:
  8182                           	opt stack 0
  8183  0066DC                     _USBSuspend:
  8184                           	opt stack 11
  8185                           
  8186                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8187                           
  8188                           ; BSR set to: 1
  8189                           ;incstack = 0
  8190  0066DC  010F               	movlb	15	; () banked
  8191  0066DE  8536               	bsf	54,2,b	;volatile
  8192                           
  8193                           ; BSR set to: 15
  8194                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8195  0066E0  9862               	bcf	3938,4,c	;volatile
  8196                           
  8197                           ; BSR set to: 15
  8198                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8199  0066E2  8265               	bsf	3941,1,c	;volatile
  8200                           
  8201                           ; BSR set to: 15
  8202                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8203  0066E4  0E01               	movlw	1
  8204  0066E6  0101               	movlb	1	; () banked
  8205  0066E8  6FDF               	movwf	_USBBusIsSuspended& (0+255),b
  8206                           
  8207                           ; BSR set to: 1
  8208                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8209  0066EA  0E00               	movlw	0
  8210  0066EC  6FDD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8211                           
  8212                           ; BSR set to: 1
  8213                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8214  0066EE  0E00               	movlw	0
  8215  0066F0  0100               	movlb	0	; () banked
  8216  0066F2  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8217  0066F4  0E75               	movlw	117
  8218  0066F6  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8219  0066F8  0E00               	movlw	0
  8220  0066FA  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8221  0066FC  0E00               	movlw	0
  8222  0066FE  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8223  006700  0E00               	movlw	0
  8224  006702  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8225  006704  0E00               	movlw	0
  8226  006706  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8227  006708  ECF9  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8228  00670C  0012               	return		;funcret
  8229  00670E                     __end_of_USBSuspend:
  8230                           	opt stack 0
  8231                           tosu	equ	0xFFF
  8232                           tosh	equ	0xFFE
  8233                           tosl	equ	0xFFD
  8234                           pclath	equ	0xFFA
  8235                           tblptru	equ	0xFF8
  8236                           tblptrh	equ	0xFF7
  8237                           tblptrl	equ	0xFF6
  8238                           tablat	equ	0xFF5
  8239                           prodh	equ	0xFF4
  8240                           prodl	equ	0xFF3
  8241                           intcon	equ	0xFF2
  8242                           intcon2	equ	0xFF1
  8243                           intcon3	equ	0xFF0
  8244                           postinc0	equ	0xFEE
  8245                           plusw0	equ	0xFEB
  8246                           wreg	equ	0xFE8
  8247                           postinc1	equ	0xFE6
  8248                           postdec1	equ	0xFE5
  8249                           fsr1h	equ	0xFE2
  8250                           fsr1l	equ	0xFE1
  8251                           indf2	equ	0xFDF
  8252                           postinc2	equ	0xFDE
  8253                           postdec2	equ	0xFDD
  8254                           plusw2	equ	0xFDB
  8255                           fsr2h	equ	0xFDA
  8256                           fsr2l	equ	0xFD9
  8257                           status	equ	0xFD8
  8258                           
  8259 ;; *************** function _USBStallHandler *****************
  8260 ;; Defined at:
  8261 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;		None
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;		None
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      void 
  8268 ;; Registers used:
  8269 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8277 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8278 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8279 ;;Total ram usage:        1 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:   11
  8282 ;; This function calls:
  8283 ;;		Nothing
  8284 ;; This function is called by:
  8285 ;;		_USBDeviceTasks
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           	psect	text31
  8290  006250                     __ptext31:
  8291                           	opt stack 0
  8292  006250                     _USBStallHandler:
  8293                           	opt stack 15
  8294                           
  8295                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8296                           
  8297                           ;incstack = 0
  8298  006250  010F               	movlb	15	; () banked
  8299  006252  A126               	btfss	38,0,b	;volatile
  8300  006254  D01D               	goto	l1760
  8301                           
  8302                           ; BSR set to: 15
  8303                           ;usb_device.c: 2233: {
  8304                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8305  006256  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8306  00625A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8307  00625E  0E80               	movlw	128
  8308  006260  18DE               	xorwf	postinc2,w,c
  8309  006262  A4D8               	btfss	status,2,c
  8310  006264  D014               	goto	l1761
  8311                           
  8312                           ; BSR set to: 15
  8313  006266  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8314  00626A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8315  00626E  0E84               	movlw	132
  8316  006270  18DE               	xorwf	postinc2,w,c
  8317  006272  A4D8               	btfss	status,2,c
  8318  006274  D00C               	goto	l1761
  8319                           
  8320                           ; BSR set to: 15
  8321                           ;usb_device.c: 2236: {
  8322                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8323  006276  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8324  00627A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8325  00627E  0E0C               	movlw	12
  8326  006280  6EDF               	movwf	indf2,c
  8327                           
  8328                           ; BSR set to: 15
  8329                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8330  006282  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8331  006286  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8332  00628A  0E00               	movlw	0
  8333  00628C  8EDB               	bsf	plusw2,7,c
  8334  00628E                     l1761:
  8335                           
  8336                           ; BSR set to: 15
  8337                           ;usb_device.c: 2240: }
  8338                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8339                           
  8340                           ; BSR set to: 15
  8341  00628E  9126               	bcf	38,0,b	;volatile
  8342  006290                     l1760:
  8343                           
  8344                           ; BSR set to: 15
  8345                           ;usb_device.c: 2242: }
  8346                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8347  006290  9A62               	bcf	3938,5,c	;volatile
  8348                           
  8349                           ; BSR set to: 15
  8350  006292  0012               	return		;funcret
  8351  006294                     __end_of_USBStallHandler:
  8352                           	opt stack 0
  8353                           tosu	equ	0xFFF
  8354                           tosh	equ	0xFFE
  8355                           tosl	equ	0xFFD
  8356                           pclath	equ	0xFFA
  8357                           tblptru	equ	0xFF8
  8358                           tblptrh	equ	0xFF7
  8359                           tblptrl	equ	0xFF6
  8360                           tablat	equ	0xFF5
  8361                           prodh	equ	0xFF4
  8362                           prodl	equ	0xFF3
  8363                           intcon	equ	0xFF2
  8364                           intcon2	equ	0xFF1
  8365                           intcon3	equ	0xFF0
  8366                           postinc0	equ	0xFEE
  8367                           plusw0	equ	0xFEB
  8368                           wreg	equ	0xFE8
  8369                           postinc1	equ	0xFE6
  8370                           postdec1	equ	0xFE5
  8371                           fsr1h	equ	0xFE2
  8372                           fsr1l	equ	0xFE1
  8373                           indf2	equ	0xFDF
  8374                           postinc2	equ	0xFDE
  8375                           postdec2	equ	0xFDD
  8376                           plusw2	equ	0xFDB
  8377                           fsr2h	equ	0xFDA
  8378                           fsr2l	equ	0xFD9
  8379                           status	equ	0xFD8
  8380                           
  8381 ;; *************** function _USBIncrement1msInternalTimers *****************
  8382 ;; Defined at:
  8383 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;		None
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;		None
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1    wreg      void 
  8390 ;; Registers used:
  8391 ;;		wreg, status,2, status,0
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8401 ;;Total ram usage:        0 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:   11
  8404 ;; This function calls:
  8405 ;;		Nothing
  8406 ;; This function is called by:
  8407 ;;		_USBDeviceTasks
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text32
  8412  0069DC                     __ptext32:
  8413                           	opt stack 0
  8414  0069DC                     _USBIncrement1msInternalTimers:
  8415                           	opt stack 15
  8416                           
  8417                           ;usb_device.c: 3050: USB1msTickCount++;
  8418                           
  8419                           ; BSR set to: 15
  8420                           ;incstack = 0
  8421  0069DC  0E01               	movlw	1
  8422  0069DE  0103               	movlb	3	; () banked
  8423  0069E0  2710               	addwf	_USB1msTickCount& (0+255),f,b
  8424  0069E2  0E00               	movlw	0
  8425  0069E4  2311               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8426  0069E6  2312               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8427  0069E8  2313               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8428                           
  8429                           ; BSR set to: 3
  8430                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8431  0069EA  0101               	movlb	1	; () banked
  8432  0069EC  51DF               	movf	_USBBusIsSuspended& (0+255),w,b
  8433  0069EE  A4D8               	btfss	status,2,c
  8434  0069F0  0012               	return	
  8435                           
  8436                           ; BSR set to: 1
  8437                           ;usb_device.c: 3052: {
  8438                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8439  0069F2  2BDD               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8440                           
  8441                           ; BSR set to: 1
  8442                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8443  0069F4  51DD               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8444  0069F6  A4D8               	btfss	status,2,c
  8445  0069F8  0012               	return	
  8446                           
  8447                           ; BSR set to: 1
  8448                           ;usb_device.c: 3056: {
  8449                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8450  0069FA  69DD               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8451                           
  8452                           ; BSR set to: 1
  8453  0069FC  0012               	return	
  8454  0069FE                     __end_of_USBIncrement1msInternalTimers:
  8455                           	opt stack 0
  8456                           tosu	equ	0xFFF
  8457                           tosh	equ	0xFFE
  8458                           tosl	equ	0xFFD
  8459                           pclath	equ	0xFFA
  8460                           tblptru	equ	0xFF8
  8461                           tblptrh	equ	0xFF7
  8462                           tblptrl	equ	0xFF6
  8463                           tablat	equ	0xFF5
  8464                           prodh	equ	0xFF4
  8465                           prodl	equ	0xFF3
  8466                           intcon	equ	0xFF2
  8467                           intcon2	equ	0xFF1
  8468                           intcon3	equ	0xFF0
  8469                           postinc0	equ	0xFEE
  8470                           plusw0	equ	0xFEB
  8471                           wreg	equ	0xFE8
  8472                           postinc1	equ	0xFE6
  8473                           postdec1	equ	0xFE5
  8474                           fsr1h	equ	0xFE2
  8475                           fsr1l	equ	0xFE1
  8476                           indf2	equ	0xFDF
  8477                           postinc2	equ	0xFDE
  8478                           postdec2	equ	0xFDD
  8479                           plusw2	equ	0xFDB
  8480                           fsr2h	equ	0xFDA
  8481                           fsr2l	equ	0xFD9
  8482                           status	equ	0xFD8
  8483                           
  8484 ;; *************** function _USBDeviceInit *****************
  8485 ;; Defined at:
  8486 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;		None
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  i               1   37[BANK0 ] unsigned char 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      void 
  8493 ;; Registers used:
  8494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8503 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8504 ;;Total ram usage:        1 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:   12
  8507 ;; This function calls:
  8508 ;;		_memset
  8509 ;; This function is called by:
  8510 ;;		_USBDeviceTasks
  8511 ;;		_UsbDevice_MainTask
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           
  8515                           	psect	text33
  8516  0026EA                     __ptext33:
  8517                           	opt stack 0
  8518  0026EA                     _USBDeviceInit:
  8519                           	opt stack 14
  8520                           
  8521                           ;usb_device.c: 297: uint8_t i;
  8522                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8523                           
  8524                           ; BSR set to: 1
  8525                           ;incstack = 0
  8526  0026EA  98A0               	bcf	4000,4,c	;volatile
  8527                           
  8528                           ;usb_device.c: 303: ;
  8529                           ;usb_device.c: 306: {UEIR = 0;};
  8530  0026EC  0E00               	movlw	0
  8531  0026EE  6E63               	movwf	3939,c	;volatile
  8532                           
  8533                           ;usb_device.c: 309: {UIR = 0;};
  8534  0026F0  0E00               	movlw	0
  8535  0026F2  6E62               	movwf	3938,c	;volatile
  8536                           
  8537                           ;usb_device.c: 312: UEP0 = 0;
  8538  0026F4  0E00               	movlw	0
  8539  0026F6  010F               	movlb	15	; () banked
  8540  0026F8  6F26               	movwf	38,b	;volatile
  8541                           
  8542                           ; BSR set to: 15
  8543                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8544  0026FA  0E27               	movlw	39
  8545  0026FC  0100               	movlb	0	; () banked
  8546  0026FE  6F7D               	movwf	memset@p1& (0+255),b
  8547  002700  0E0F               	movlw	15
  8548  002702  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8549  002704  0E00               	movlw	0
  8550  002706  6F80               	movwf	(memset@c+1)& (0+255),b
  8551  002708  0E00               	movlw	0
  8552  00270A  6F7F               	movwf	memset@c& (0+255),b
  8553  00270C  0E00               	movlw	0
  8554  00270E  6F82               	movwf	(memset@n+1)& (0+255),b
  8555  002710  0E02               	movlw	2
  8556  002712  6F81               	movwf	memset@n& (0+255),b
  8557  002714  ECB8  F033         	call	_memset	;wreg free
  8558                           
  8559                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8560  002718  0E16               	movlw	22
  8561  00271A  010F               	movlb	15	; () banked
  8562  00271C  6F39               	movwf	57,b	;volatile
  8563                           
  8564                           ; BSR set to: 15
  8565  00271E  0E9F               	movlw	159
  8566  002720  6F37               	movwf	55,b	;volatile
  8567                           
  8568                           ; BSR set to: 15
  8569  002722  0E7B               	movlw	123
  8570  002724  6F36               	movwf	54,b	;volatile
  8571                           
  8572                           ; BSR set to: 15
  8573                           ;usb_device.c: 319: ;
  8574                           ;usb_device.c: 322: ;
  8575                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8576  002726  0E00               	movlw	0
  8577  002728  0100               	movlb	0	; () banked
  8578  00272A  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8579  00272C                     l14906:
  8580                           
  8581                           ; BSR set to: 0
  8582  00272C  0E0B               	movlw	11
  8583  00272E  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8584  002730  D001               	goto	l1604
  8585  002732  D00E               	goto	u13970
  8586  002734                     l1604:
  8587                           
  8588                           ; BSR set to: 0
  8589                           ;usb_device.c: 326: {
  8590                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8591                           
  8592                           ; BSR set to: 0
  8593  002734  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8594  002736  0D04               	mullw	4
  8595  002738  0E00               	movlw	0
  8596  00273A  24F3               	addwf	prodl,w,c
  8597  00273C  6ED9               	movwf	fsr2l,c
  8598  00273E  0E04               	movlw	4
  8599  002740  20F4               	addwfc	prodh,w,c
  8600  002742  6EDA               	movwf	fsr2h,c
  8601  002744  6ADE               	clrf	postinc2,c
  8602  002746  6ADE               	clrf	postinc2,c
  8603  002748  6ADE               	clrf	postinc2,c
  8604  00274A  6ADD               	clrf	postdec2,c
  8605                           
  8606                           ; BSR set to: 0
  8607  00274C  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8608  00274E  D7EE               	goto	l14906
  8609  002750                     u13970:
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;usb_device.c: 328: }
  8613                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8614  002750  8C65               	bsf	3941,6,c	;volatile
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;usb_device.c: 334: UADDR = 0x00;
  8618  002752  0E00               	movlw	0
  8619  002754  010F               	movlb	15	; () banked
  8620  002756  6F38               	movwf	56,b	;volatile
  8621                           
  8622                           ; BSR set to: 15
  8623                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8624  002758  9865               	bcf	3941,4,c	;volatile
  8625                           
  8626                           ; BSR set to: 15
  8627                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8628  00275A  9C65               	bcf	3941,6,c	;volatile
  8629  00275C                     
  8630                           ;usb_device.c: 344: {
  8631                           ;usb_device.c: 345: (UIR &= 0xF7);
  8632                           
  8633                           ; BSR set to: 15
  8634  00275C  9662               	bcf	3938,3,c	;volatile
  8635                           
  8636                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8637  00275E  0E00               	movlw	0
  8638  002760  0100               	movlb	0	; () banked
  8639  002762  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8643  002764  0E00               	movlw	0
  8644  002766  0101               	movlb	1	; () banked
  8645  002768  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8646                           
  8647                           ; BSR set to: 1
  8648                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8649  00276A  0E00               	movlw	0
  8650  00276C  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8651  00276E  0E00               	movlw	0
  8652  002770  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8653                           
  8654                           ; BSR set to: 1
  8655                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8656  002772  B662               	btfsc	3938,3,c	;volatile
  8657  002774  D7F3               	goto	l1606
  8658                           
  8659                           ; BSR set to: 1
  8660                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8661                           
  8662                           ; BSR set to: 1
  8663  002776  0E01               	movlw	1
  8664  002778  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8665                           
  8666                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8667  00277A  0E01               	movlw	1
  8668  00277C  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8669                           
  8670                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8671  00277E  0E00               	movlw	0
  8672  002780  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8673                           
  8674                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8675  002782  0E00               	movlw	0
  8676  002784  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8677                           
  8678                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8679  002786  0E00               	movlw	0
  8680  002788  6FDF               	movwf	_USBBusIsSuspended& (0+255),b
  8681                           
  8682                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8683  00278A  0E00               	movlw	0
  8684  00278C  0100               	movlb	0	; () banked
  8685  00278E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8686  002790                     l14934:
  8687                           
  8688                           ; BSR set to: 0
  8689  002790  0E02               	movlw	2
  8690  002792  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8691  002794  D001               	goto	l1608
  8692  002796  D02E               	goto	u14000
  8693  002798                     l1608:
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;usb_device.c: 364: {
  8697                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8698                           
  8699                           ; BSR set to: 0
  8700  002798  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8701  00279A  0D02               	mullw	2
  8702  00279C  0EB6               	movlw	low _pBDTEntryIn
  8703  00279E  24F3               	addwf	prodl,w,c
  8704  0027A0  6ED9               	movwf	fsr2l,c
  8705  0027A2  0E00               	movlw	high _pBDTEntryIn
  8706  0027A4  20F4               	addwfc	prodh,w,c
  8707  0027A6  6EDA               	movwf	fsr2h,c
  8708  0027A8  0E00               	movlw	0
  8709  0027AA  6EDE               	movwf	postinc2,c
  8710  0027AC  0E00               	movlw	0
  8711  0027AE  6EDD               	movwf	postdec2,c
  8712                           
  8713                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8714  0027B0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8715  0027B2  0D02               	mullw	2
  8716  0027B4  0E06               	movlw	low _pBDTEntryOut
  8717  0027B6  24F3               	addwf	prodl,w,c
  8718  0027B8  6ED9               	movwf	fsr2l,c
  8719  0027BA  0E03               	movlw	high _pBDTEntryOut
  8720  0027BC  20F4               	addwfc	prodh,w,c
  8721  0027BE  6EDA               	movwf	fsr2h,c
  8722  0027C0  0E00               	movlw	0
  8723  0027C2  6EDE               	movwf	postinc2,c
  8724  0027C4  0E00               	movlw	0
  8725  0027C6  6EDD               	movwf	postdec2,c
  8726                           
  8727                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8728  0027C8  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8729  0027CA  0D01               	mullw	1
  8730  0027CC  0ED2               	movlw	low _ep_data_in
  8731  0027CE  24F3               	addwf	prodl,w,c
  8732  0027D0  6ED9               	movwf	fsr2l,c
  8733  0027D2  0E02               	movlw	high _ep_data_in
  8734  0027D4  20F4               	addwfc	prodh,w,c
  8735  0027D6  6EDA               	movwf	fsr2h,c
  8736  0027D8  0E00               	movlw	0
  8737  0027DA  6EDF               	movwf	indf2,c
  8738                           
  8739                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8740  0027DC  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8741  0027DE  0D01               	mullw	1
  8742  0027E0  0ECF               	movlw	low _ep_data_out
  8743  0027E2  24F3               	addwf	prodl,w,c
  8744  0027E4  6ED9               	movwf	fsr2l,c
  8745  0027E6  0E02               	movlw	high _ep_data_out
  8746  0027E8  20F4               	addwfc	prodh,w,c
  8747  0027EA  6EDA               	movwf	fsr2h,c
  8748  0027EC  0E00               	movlw	0
  8749  0027EE  6EDF               	movwf	indf2,c
  8750                           
  8751                           ; BSR set to: 0
  8752  0027F0  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8753  0027F2  D7CE               	goto	l14934
  8754  0027F4                     u14000:
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;usb_device.c: 369: }
  8758                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8759                           
  8760                           ; BSR set to: 0
  8761  0027F4  0E08               	movlw	8
  8762  0027F6  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8763  0027F8  0E04               	movlw	4
  8764  0027FA  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8768  0027FC  0E16               	movlw	22
  8769  0027FE  010F               	movlb	15	; () banked
  8770  002800  6F26               	movwf	38,b	;volatile
  8771                           
  8772                           ; BSR set to: 15
  8773                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8774  002802  0E04               	movlw	4
  8775  002804  0104               	movlb	4	; () banked
  8776  002806  6F03               	movwf	3,b	;volatile
  8777  002808  0E30               	movlw	48
  8778  00280A  6F02               	movwf	2,b	;volatile
  8779                           
  8780                           ; BSR set to: 4
  8781                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8782  00280C  0E08               	movlw	8
  8783  00280E  6F01               	movwf	1,b	;volatile
  8784                           
  8785                           ; BSR set to: 4
  8786                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8787  002810  0E04               	movlw	4
  8788  002812  6F00               	movwf	0,b	;volatile
  8789                           
  8790                           ; BSR set to: 4
  8791                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8792  002814  8F00               	bsf	0,7,b	;volatile
  8793                           
  8794                           ; BSR set to: 4
  8795                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8796  002816  0E00               	movlw	0
  8797  002818  0100               	movlb	0	; () banked
  8798  00281A  6FD6               	movwf	_USBActiveConfiguration& (0+255),b
  8799                           
  8800                           ; BSR set to: 0
  8801                           ;usb_device.c: 384: USB1msTickCount = 0;
  8802  00281C  0E00               	movlw	0
  8803  00281E  0103               	movlb	3	; () banked
  8804  002820  6F10               	movwf	_USB1msTickCount& (0+255),b
  8805  002822  0E00               	movlw	0
  8806  002824  6F11               	movwf	(_USB1msTickCount+1)& (0+255),b
  8807  002826  0E00               	movlw	0
  8808  002828  6F12               	movwf	(_USB1msTickCount+2)& (0+255),b
  8809  00282A  0E00               	movlw	0
  8810  00282C  6F13               	movwf	(_USB1msTickCount+3)& (0+255),b
  8811                           
  8812                           ; BSR set to: 3
  8813                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8814  00282E  0E00               	movlw	0
  8815  002830  0101               	movlb	1	; () banked
  8816  002832  6FDD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8817                           
  8818                           ; BSR set to: 1
  8819                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8820  002834  0E00               	movlw	0
  8821  002836  0100               	movlb	0	; () banked
  8822  002838  6FCE               	movwf	_USBDeviceState& (0+255),b
  8823                           
  8824                           ; BSR set to: 0
  8825  00283A  0012               	return		;funcret
  8826  00283C                     __end_of_USBDeviceInit:
  8827                           	opt stack 0
  8828                           tosu	equ	0xFFF
  8829                           tosh	equ	0xFFE
  8830                           tosl	equ	0xFFD
  8831                           pclath	equ	0xFFA
  8832                           tblptru	equ	0xFF8
  8833                           tblptrh	equ	0xFF7
  8834                           tblptrl	equ	0xFF6
  8835                           tablat	equ	0xFF5
  8836                           prodh	equ	0xFF4
  8837                           prodl	equ	0xFF3
  8838                           intcon	equ	0xFF2
  8839                           intcon2	equ	0xFF1
  8840                           intcon3	equ	0xFF0
  8841                           postinc0	equ	0xFEE
  8842                           plusw0	equ	0xFEB
  8843                           wreg	equ	0xFE8
  8844                           postinc1	equ	0xFE6
  8845                           postdec1	equ	0xFE5
  8846                           fsr1h	equ	0xFE2
  8847                           fsr1l	equ	0xFE1
  8848                           indf2	equ	0xFDF
  8849                           postinc2	equ	0xFDE
  8850                           postdec2	equ	0xFDD
  8851                           plusw2	equ	0xFDB
  8852                           fsr2h	equ	0xFDA
  8853                           fsr2l	equ	0xFD9
  8854                           status	equ	0xFD8
  8855                           
  8856 ;; *************** function _USBCtrlEPService *****************
  8857 ;; Defined at:
  8858 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;		None
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1    wreg      void 
  8865 ;; Registers used:
  8866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8874 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8875 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8876 ;;Total ram usage:        1 bytes
  8877 ;; Hardware stack levels used:    1
  8878 ;; Hardware stack levels required when called:   18
  8879 ;; This function calls:
  8880 ;;		_USBCtrlTrfInHandler
  8881 ;;		_USBCtrlTrfOutHandler
  8882 ;;		_USBCtrlTrfSetupHandler
  8883 ;;		_memcpy
  8884 ;; This function is called by:
  8885 ;;		_USBDeviceTasks
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889                           	psect	text34
  8890  004F58                     __ptext34:
  8891                           	opt stack 0
  8892  004F58                     _USBCtrlEPService:
  8893                           	opt stack 8
  8894                           
  8895                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;incstack = 0
  8899  004F58  0E2D               	movlw	45
  8900  004F5A  6E29               	movwf	_USBStatusStageTimeoutCounter,c
  8901                           
  8902                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8903  004F5C  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8904  004F60  0EFD               	movlw	253
  8905  004F62  0100               	movlb	0	; () banked
  8906  004F64  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8907  004F66  A4D8               	btfss	status,2,c
  8908  004F68  D038               	goto	l1774
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;usb_device.c: 2401: {
  8912                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8913  004F6A  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8914  004F6E  90D8               	bcf	status,0,c
  8915  004F70  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8916  004F72  0E3F               	movlw	63
  8917  004F74  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8918  004F76  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8919  004F78  0D04               	mullw	4
  8920  004F7A  0E00               	movlw	0
  8921  004F7C  24F3               	addwf	prodl,w,c
  8922  004F7E  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8923  004F80  0E04               	movlw	4
  8924  004F82  20F4               	addwfc	prodh,w,c
  8925  004F84  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8929  004F86  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8930  004F8A  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8934  004F8E  0E04               	movlw	4
  8935  004F90  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8939  004F92  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8940  004F96  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8941  004F9A  30DF               	rrcf	223,w,c
  8942  004F9C  32E8               	rrcf	wreg,f,c
  8943  004F9E  0B0F               	andlw	15
  8944  004FA0  0A0D               	xorlw	13
  8945  004FA2  A4D8               	btfss	status,2,c
  8946  004FA4  D017               	goto	l1775
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;usb_device.c: 2418: {
  8950                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8951  004FA6  0E30               	movlw	48
  8952  004FA8  6F7D               	movwf	memcpy@d1& (0+255),b
  8953  004FAA  0E04               	movlw	4
  8954  004FAC  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8955  004FAE  EE20 F002          	lfsr	2,2
  8956  004FB2  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8957  004FB4  26D9               	addwf	fsr2l,f,c
  8958  004FB6  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8959  004FB8  22DA               	addwfc	fsr2h,f,c
  8960  004FBA  CFDE F07F          	movff	postinc2,memcpy@s1
  8961  004FBE  CFDD F080          	movff	postdec2,memcpy@s1+1
  8962  004FC2  0E00               	movlw	0
  8963  004FC4  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8964  004FC6  0E08               	movlw	8
  8965  004FC8  6F81               	movwf	memcpy@n& (0+255),b
  8966  004FCA  ECBD  F030         	call	_memcpy	;wreg free
  8967                           
  8968                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8969  004FCE  EC61  F029         	call	_USBCtrlTrfSetupHandler	;wreg free
  8970                           
  8971                           ;usb_device.c: 2427: }
  8972  004FD2  0012               	return	
  8973  004FD4                     l1775:
  8974                           
  8975                           ;usb_device.c: 2428: else
  8976                           ;usb_device.c: 2429: {
  8977                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8978  004FD4  EC2F  F02C         	call	_USBCtrlTrfOutHandler	;wreg free
  8979                           
  8980                           ;usb_device.c: 2432: }
  8981                           ;usb_device.c: 2433: }
  8982  004FD8  0012               	return	
  8983  004FDA                     l1774:
  8984                           
  8985                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8986  004FDA  0100               	movlb	0	; () banked
  8987  004FDC  51D5               	movf	_USTATcopy& (0+255),w,b
  8988  004FDE  0BFD               	andlw	253
  8989  004FE0  0A04               	xorlw	4
  8990  004FE2  A4D8               	btfss	status,2,c
  8991  004FE4  0012               	return	
  8992                           
  8993                           ; BSR set to: 0
  8994                           ;usb_device.c: 2435: {
  8995                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8996  004FE6  ECC0  F021         	call	_USBCtrlTrfInHandler	;wreg free
  8997  004FEA  0012               	return	
  8998  004FEC                     __end_of_USBCtrlEPService:
  8999                           	opt stack 0
  9000                           tosu	equ	0xFFF
  9001                           tosh	equ	0xFFE
  9002                           tosl	equ	0xFFD
  9003                           pclath	equ	0xFFA
  9004                           tblptru	equ	0xFF8
  9005                           tblptrh	equ	0xFF7
  9006                           tblptrl	equ	0xFF6
  9007                           tablat	equ	0xFF5
  9008                           prodh	equ	0xFF4
  9009                           prodl	equ	0xFF3
  9010                           intcon	equ	0xFF2
  9011                           intcon2	equ	0xFF1
  9012                           intcon3	equ	0xFF0
  9013                           postinc0	equ	0xFEE
  9014                           plusw0	equ	0xFEB
  9015                           wreg	equ	0xFE8
  9016                           postinc1	equ	0xFE6
  9017                           postdec1	equ	0xFE5
  9018                           fsr1h	equ	0xFE2
  9019                           fsr1l	equ	0xFE1
  9020                           indf2	equ	0xFDF
  9021                           postinc2	equ	0xFDE
  9022                           postdec2	equ	0xFDD
  9023                           plusw2	equ	0xFDB
  9024                           fsr2h	equ	0xFDA
  9025                           fsr2l	equ	0xFD9
  9026                           status	equ	0xFD8
  9027                           
  9028 ;; *************** function _memcpy *****************
  9029 ;; Defined at:
  9030 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;  d1              2   29[BANK0 ] PTR void 
  9033 ;;		 -> SetupPkt(8), 
  9034 ;;  s1              2   31[BANK0 ] PTR const void 
  9035 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9036 ;;  n               2   33[BANK0 ] unsigned int 
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  9039 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9040 ;;  d               2   36[BANK0 ] PTR unsigned char 
  9041 ;;		 -> SetupPkt(8), 
  9042 ;;  tmp             1   35[BANK0 ] unsigned char 
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  2   29[BANK0 ] PTR void 
  9045 ;; Registers used:
  9046 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9052 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9053 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9055 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9056 ;;Total ram usage:       11 bytes
  9057 ;; Hardware stack levels used:    1
  9058 ;; Hardware stack levels required when called:   11
  9059 ;; This function calls:
  9060 ;;		Nothing
  9061 ;; This function is called by:
  9062 ;;		_USBCtrlEPService
  9063 ;; This function uses a non-reentrant model
  9064 ;;
  9065                           
  9066                           	psect	text35
  9067  00617A                     __ptext35:
  9068                           	opt stack 0
  9069  00617A                     _memcpy:
  9070                           	opt stack 14
  9071                           
  9072                           ;incstack = 0
  9073  00617A  C07F  F086         	movff	memcpy@s1,memcpy@s
  9074  00617E  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  9075  006182  C07D  F084         	movff	memcpy@d1,memcpy@d
  9076  006186  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  9077  00618A  D011               	goto	l3447
  9078  00618C                     l14120:
  9079  00618C  C086  FFD9         	movff	memcpy@s,fsr2l
  9080  006190  C087  FFDA         	movff	memcpy@s+1,fsr2h
  9081  006194  50DF               	movf	indf2,w,c
  9082  006196  0100               	movlb	0	; () banked
  9083  006198  6F83               	movwf	memcpy@tmp& (0+255),b
  9084                           
  9085                           ; BSR set to: 0
  9086  00619A  4B86               	infsnz	memcpy@s& (0+255),f,b
  9087  00619C  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  9088                           
  9089                           ; BSR set to: 0
  9090  00619E  C084  FFD9         	movff	memcpy@d,fsr2l
  9091  0061A2  C085  FFDA         	movff	memcpy@d+1,fsr2h
  9092  0061A6  C083  FFDF         	movff	memcpy@tmp,indf2
  9093                           
  9094                           ; BSR set to: 0
  9095  0061AA  4B84               	infsnz	memcpy@d& (0+255),f,b
  9096  0061AC  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  9097  0061AE                     l3447:
  9098                           
  9099                           ; BSR set to: 0
  9100  0061AE  0100               	movlb	0	; () banked
  9101  0061B0  0781               	decf	memcpy@n& (0+255),f,b
  9102  0061B2  A0D8               	btfss	status,0,c
  9103  0061B4  0782               	decf	(memcpy@n+1)& (0+255),f,b
  9104  0061B6  2981               	incf	memcpy@n& (0+255),w,b
  9105  0061B8  E1E9               	bnz	l14120
  9106  0061BA  2982               	incf	(memcpy@n+1)& (0+255),w,b
  9107  0061BC  B4D8               	btfsc	status,2,c
  9108  0061BE  0012               	return	
  9109  0061C0  D7E5               	goto	l3448
  9110  0061C2                     __end_of_memcpy:
  9111                           	opt stack 0
  9112                           tosu	equ	0xFFF
  9113                           tosh	equ	0xFFE
  9114                           tosl	equ	0xFFD
  9115                           pclath	equ	0xFFA
  9116                           tblptru	equ	0xFF8
  9117                           tblptrh	equ	0xFF7
  9118                           tblptrl	equ	0xFF6
  9119                           tablat	equ	0xFF5
  9120                           prodh	equ	0xFF4
  9121                           prodl	equ	0xFF3
  9122                           intcon	equ	0xFF2
  9123                           intcon2	equ	0xFF1
  9124                           intcon3	equ	0xFF0
  9125                           postinc0	equ	0xFEE
  9126                           plusw0	equ	0xFEB
  9127                           wreg	equ	0xFE8
  9128                           postinc1	equ	0xFE6
  9129                           postdec1	equ	0xFE5
  9130                           fsr1h	equ	0xFE2
  9131                           fsr1l	equ	0xFE1
  9132                           indf2	equ	0xFDF
  9133                           postinc2	equ	0xFDE
  9134                           postdec2	equ	0xFDD
  9135                           plusw2	equ	0xFDB
  9136                           fsr2h	equ	0xFDA
  9137                           fsr2l	equ	0xFD9
  9138                           status	equ	0xFD8
  9139                           
  9140 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9141 ;; Defined at:
  9142 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9143 ;; Parameters:    Size  Location     Type
  9144 ;;		None
  9145 ;; Auto vars:     Size  Location     Type
  9146 ;;		None
  9147 ;; Return value:  Size  Location     Type
  9148 ;;                  1    wreg      void 
  9149 ;; Registers used:
  9150 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/0
  9153 ;;		On exit  : 0/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9160 ;;Total ram usage:        0 bytes
  9161 ;; Hardware stack levels used:    1
  9162 ;; Hardware stack levels required when called:   17
  9163 ;; This function calls:
  9164 ;;		_USBCheckStdRequest
  9165 ;;		_USBCtrlEPServiceComplete
  9166 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9167 ;; This function is called by:
  9168 ;;		_USBCtrlEPService
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           	psect	text36
  9173  0052C2                     __ptext36:
  9174                           	opt stack 0
  9175  0052C2                     _USBCtrlTrfSetupHandler:
  9176                           	opt stack 8
  9177                           
  9178                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;incstack = 0
  9182  0052C2  0E00               	movlw	0
  9183  0052C4  0100               	movlb	0	; () banked
  9184  0052C6  6FCD               	movwf	_shortPacketStatus& (0+255),b
  9185                           
  9186                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9187  0052C8  0E00               	movlw	0
  9188  0052CA  6FCA               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9189                           
  9190                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9191  0052CC  0E00               	movlw	0
  9192  0052CE  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9193                           
  9194                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9195  0052D0  0E00               	movlw	0
  9196  0052D2  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9197                           
  9198                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9199  0052D4  0E00               	movlw	0
  9200  0052D6  0101               	movlb	1	; () banked
  9201  0052D8  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9202                           
  9203                           ;usb_device.c: 2493: controlTransferState = 0;
  9204  0052DA  0E00               	movlw	0
  9205  0052DC  0100               	movlb	0	; () banked
  9206  0052DE  6FCC               	movwf	_controlTransferState& (0+255),b
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9210  0052E0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9211  0052E4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9212  0052E8  0E7F               	movlw	127
  9213  0052EA  16DF               	andwf	indf2,f,c
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9217  0052EC  0E04               	movlw	4
  9218  0052EE  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9222  0052F0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9223  0052F4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9224  0052F8  0E7F               	movlw	127
  9225  0052FA  16DF               	andwf	indf2,f,c
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9229  0052FC  0E04               	movlw	4
  9230  0052FE  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9234  005300  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9235  005304  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9236  005308  0E7F               	movlw	127
  9237  00530A  16DF               	andwf	indf2,f,c
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9241  00530C  0E00               	movlw	0
  9242  00530E  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9243                           
  9244                           ; BSR set to: 0
  9245                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9246  005310  0E00               	movlw	0
  9247  005312  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9248  005314  0E00               	movlw	0
  9249  005316  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9253  005318  0E00               	movlw	0
  9254  00531A  0101               	movlb	1	; () banked
  9255  00531C  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9256                           
  9257                           ; BSR set to: 1
  9258                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9259  00531E  0E00               	movlw	0
  9260  005320  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9261  005322  0E00               	movlw	0
  9262  005324  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9263                           
  9264                           ; BSR set to: 1
  9265                           ;usb_device.c: 2517: USBCheckStdRequest();
  9266  005326  ECA5  F01B         	call	_USBCheckStdRequest	;wreg free
  9267                           
  9268                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9269  00532A  0E00               	movlw	0
  9270  00532C  0100               	movlb	0	; () banked
  9271  00532E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9272  005330  0E03               	movlw	3
  9273  005332  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9274  005334  0E00               	movlw	0
  9275  005336  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9276  005338  0E00               	movlw	0
  9277  00533A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9278  00533C  0E00               	movlw	0
  9279  00533E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9280  005340  0E00               	movlw	0
  9281  005342  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9282  005344  ECF9  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9283                           
  9284                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9285  005348  ECDE  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9286  00534C  0012               	return		;funcret
  9287  00534E                     __end_of_USBCtrlTrfSetupHandler:
  9288                           	opt stack 0
  9289                           tosu	equ	0xFFF
  9290                           tosh	equ	0xFFE
  9291                           tosl	equ	0xFFD
  9292                           pclath	equ	0xFFA
  9293                           tblptru	equ	0xFF8
  9294                           tblptrh	equ	0xFF7
  9295                           tblptrl	equ	0xFF6
  9296                           tablat	equ	0xFF5
  9297                           prodh	equ	0xFF4
  9298                           prodl	equ	0xFF3
  9299                           intcon	equ	0xFF2
  9300                           intcon2	equ	0xFF1
  9301                           intcon3	equ	0xFF0
  9302                           postinc0	equ	0xFEE
  9303                           plusw0	equ	0xFEB
  9304                           wreg	equ	0xFE8
  9305                           postinc1	equ	0xFE6
  9306                           postdec1	equ	0xFE5
  9307                           fsr1h	equ	0xFE2
  9308                           fsr1l	equ	0xFE1
  9309                           indf2	equ	0xFDF
  9310                           postinc2	equ	0xFDE
  9311                           postdec2	equ	0xFDD
  9312                           plusw2	equ	0xFDB
  9313                           fsr2h	equ	0xFDA
  9314                           fsr2l	equ	0xFD9
  9315                           status	equ	0xFD8
  9316                           
  9317 ;; *************** function _USBCtrlEPServiceComplete *****************
  9318 ;; Defined at:
  9319 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;		None
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;		None
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  1    wreg      void 
  9326 ;; Registers used:
  9327 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9328 ;; Tracked objects:
  9329 ;;		On entry : 0/0
  9330 ;;		On exit  : 0/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9337 ;;Total ram usage:        0 bytes
  9338 ;; Hardware stack levels used:    1
  9339 ;; Hardware stack levels required when called:   13
  9340 ;; This function calls:
  9341 ;;		_USBCtrlEPAllowDataStage
  9342 ;;		_USBCtrlEPAllowStatusStage
  9343 ;; This function is called by:
  9344 ;;		_USBCtrlTrfSetupHandler
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348                           	psect	text37
  9349  0031BC                     __ptext37:
  9350                           	opt stack 0
  9351  0031BC                     _USBCtrlEPServiceComplete:
  9352                           	opt stack 11
  9353                           
  9354                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9355                           
  9356                           ;incstack = 0
  9357  0031BC  9865               	bcf	3941,4,c	;volatile
  9358                           
  9359                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9360  0031BE  0100               	movlb	0	; () banked
  9361  0031C0  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9362  0031C2  D03B               	goto	l1684
  9363                           
  9364                           ; BSR set to: 0
  9365                           ;usb_device.c: 1647: {
  9366                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9367  0031C4  0101               	movlb	1	; () banked
  9368  0031C6  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9369  0031C8  D00C               	goto	l1685
  9370                           
  9371                           ; BSR set to: 1
  9372                           ;usb_device.c: 1649: {
  9373                           ;usb_device.c: 1650: controlTransferState = 2;
  9374  0031CA  0E02               	movlw	2
  9375  0031CC  0100               	movlb	0	; () banked
  9376  0031CE  6FCC               	movwf	_controlTransferState& (0+255),b
  9377                           
  9378                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9379  0031D0  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9380  0031D2  B4D8               	btfsc	status,2,c
  9381                           
  9382                           ; BSR set to: 0
  9383                           ;usb_device.c: 1662: {
  9384                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9385  0031D4  ECE2  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
  9386                           
  9387                           ;usb_device.c: 1664: }
  9388                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9389  0031D8  0E00               	movlw	0
  9390  0031DA  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9391                           
  9392                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9393  0031DC  0E00               	movlw	0
  9394  0031DE  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9395                           
  9396                           ;usb_device.c: 1670: }
  9397  0031E0  0012               	return	
  9398  0031E2                     l1685:
  9399                           
  9400                           ;usb_device.c: 1671: else
  9401                           ;usb_device.c: 1672: {
  9402                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9403  0031E2  0100               	movlb	0	; () banked
  9404  0031E4  EE20 F001          	lfsr	2,1
  9405  0031E8  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9406  0031EA  26D9               	addwf	fsr2l,f,c
  9407  0031EC  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9408  0031EE  22DA               	addwfc	fsr2h,f,c
  9409  0031F0  0E08               	movlw	8
  9410  0031F2  6EDF               	movwf	indf2,c
  9411                           
  9412                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9413  0031F4  EE20 F002          	lfsr	2,2
  9414  0031F8  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9415  0031FA  26D9               	addwf	fsr2l,f,c
  9416  0031FC  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9417  0031FE  22DA               	addwfc	fsr2h,f,c
  9418  003200  0E30               	movlw	48
  9419  003202  6EDE               	movwf	postinc2,c
  9420  003204  0E04               	movlw	4
  9421  003206  6EDD               	movwf	postdec2,c
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9425  003208  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9426  00320C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9427  003210  0E0C               	movlw	12
  9428  003212  6EDF               	movwf	indf2,c
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9432  003214  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9433  003218  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9434  00321C  0E00               	movlw	0
  9435  00321E  8EDB               	bsf	plusw2,7,c
  9436                           
  9437                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9438  003220  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9439  003224  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9440  003228  0E04               	movlw	4
  9441  00322A  6EDF               	movwf	indf2,c
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9445  00322C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9446  003230  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9447  003234  0E00               	movlw	0
  9448  003236  8EDB               	bsf	plusw2,7,c
  9449                           
  9450                           ; BSR set to: 0
  9451                           ;usb_device.c: 1683: }
  9452                           ;usb_device.c: 1684: }
  9453  003238  0012               	return	
  9454  00323A                     l1684:
  9455                           
  9456                           ; BSR set to: 0
  9457                           ;usb_device.c: 1685: else
  9458                           ;usb_device.c: 1686: {
  9459                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9460  00323A  0104               	movlb	4	; () banked
  9461  00323C  AF30               	btfss	48,7,b	;volatile
  9462  00323E  D012               	goto	l1689
  9463                           
  9464                           ; BSR set to: 4
  9465                           ;usb_device.c: 1688: {
  9466                           ;usb_device.c: 1689: controlTransferState = 1;
  9467  003240  0E01               	movlw	1
  9468  003242  0100               	movlb	0	; () banked
  9469  003244  6FCC               	movwf	_controlTransferState& (0+255),b
  9470                           
  9471                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9472  003246  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9473  003248  B4D8               	btfsc	status,2,c
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;usb_device.c: 1704: {
  9477                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9478  00324A  ECE2  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
  9479                           
  9480                           ;usb_device.c: 1706: }
  9481                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9482  00324E  0E00               	movlw	0
  9483  003250  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9484                           
  9485                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9486  003252  0E00               	movlw	0
  9487  003254  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9488                           
  9489                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9490  003256  0100               	movlb	0	; () banked
  9491  003258  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9492  00325A  A4D8               	btfss	status,2,c
  9493  00325C  0012               	return	
  9494                           
  9495                           ; BSR set to: 0
  9496                           ;usb_device.c: 1731: {
  9497                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9498  00325E  EC67  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9499                           
  9500                           ;usb_device.c: 1733: }
  9501                           ;usb_device.c: 1734: }
  9502  003262  0012               	return	
  9503  003264                     l1689:
  9504                           
  9505                           ;usb_device.c: 1735: else
  9506                           ;usb_device.c: 1736: {
  9507                           ;usb_device.c: 1747: controlTransferState = 2;
  9508  003264  0E02               	movlw	2
  9509  003266  0100               	movlb	0	; () banked
  9510  003268  6FCC               	movwf	_controlTransferState& (0+255),b
  9511                           
  9512                           ; BSR set to: 0
  9513                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9514  00326A  EE20 F001          	lfsr	2,1
  9515  00326E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9516  003270  26D9               	addwf	fsr2l,f,c
  9517  003272  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9518  003274  22DA               	addwfc	fsr2h,f,c
  9519  003276  0E08               	movlw	8
  9520  003278  6EDF               	movwf	indf2,c
  9521                           
  9522                           ; BSR set to: 0
  9523                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9524  00327A  EE20 F002          	lfsr	2,2
  9525  00327E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9526  003280  26D9               	addwf	fsr2l,f,c
  9527  003282  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9528  003284  22DA               	addwfc	fsr2h,f,c
  9529  003286  0E30               	movlw	48
  9530  003288  6EDE               	movwf	postinc2,c
  9531  00328A  0E04               	movlw	4
  9532  00328C  6EDD               	movwf	postdec2,c
  9533                           
  9534                           ; BSR set to: 0
  9535                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9536  00328E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9537  003292  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9538  003296  0E04               	movlw	4
  9539  003298  6EDF               	movwf	indf2,c
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9543  00329A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9544  00329E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9545  0032A2  0E00               	movlw	0
  9546  0032A4  8EDB               	bsf	plusw2,7,c
  9547                           
  9548                           ; BSR set to: 0
  9549                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9550  0032A6  0E00               	movlw	0
  9551  0032A8  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9552                           
  9553                           ; BSR set to: 0
  9554                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9555  0032AA  0E00               	movlw	0
  9556  0032AC  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9560  0032AE  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9561  0032B0  A4D8               	btfss	status,2,c
  9562  0032B2  0012               	return	
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;usb_device.c: 1759: {
  9566                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9567  0032B4  EC67  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9568  0032B8  0012               	return	
  9569  0032BA                     __end_of_USBCtrlEPServiceComplete:
  9570                           	opt stack 0
  9571                           tosu	equ	0xFFF
  9572                           tosh	equ	0xFFE
  9573                           tosl	equ	0xFFD
  9574                           pclath	equ	0xFFA
  9575                           tblptru	equ	0xFF8
  9576                           tblptrh	equ	0xFF7
  9577                           tblptrl	equ	0xFF6
  9578                           tablat	equ	0xFF5
  9579                           prodh	equ	0xFF4
  9580                           prodl	equ	0xFF3
  9581                           intcon	equ	0xFF2
  9582                           intcon2	equ	0xFF1
  9583                           intcon3	equ	0xFF0
  9584                           postinc0	equ	0xFEE
  9585                           plusw0	equ	0xFEB
  9586                           wreg	equ	0xFE8
  9587                           postinc1	equ	0xFE6
  9588                           postdec1	equ	0xFE5
  9589                           fsr1h	equ	0xFE2
  9590                           fsr1l	equ	0xFE1
  9591                           indf2	equ	0xFDF
  9592                           postinc2	equ	0xFDE
  9593                           postdec2	equ	0xFDD
  9594                           plusw2	equ	0xFDB
  9595                           fsr2h	equ	0xFDA
  9596                           fsr2l	equ	0xFD9
  9597                           status	equ	0xFD8
  9598                           
  9599 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9600 ;; Defined at:
  9601 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;		None
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;		None
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  1    wreg      void 
  9608 ;; Registers used:
  9609 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9619 ;;Total ram usage:        0 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; Hardware stack levels required when called:   12
  9622 ;; This function calls:
  9623 ;;		_USBCtrlTrfTxService
  9624 ;; This function is called by:
  9625 ;;		_USBCtrlEPServiceComplete
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           	psect	text38
  9630  004BC4                     __ptext38:
  9631                           	opt stack 0
  9632  004BC4                     _USBCtrlEPAllowDataStage:
  9633                           	opt stack 11
  9634                           
  9635                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9636                           
  9637                           ;incstack = 0
  9638  004BC4  0E00               	movlw	0
  9639  004BC6  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9640                           
  9641                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9642  004BC8  0E00               	movlw	0
  9643  004BCA  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9644                           
  9645                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9646  004BCC  0E02               	movlw	2
  9647  004BCE  0100               	movlb	0	; () banked
  9648  004BD0  19CC               	xorwf	_controlTransferState& (0+255),w,b
  9649  004BD2  A4D8               	btfss	status,2,c
  9650  004BD4  D01F               	goto	l1673
  9651                           
  9652                           ; BSR set to: 0
  9653                           ;usb_device.c: 1512: {
  9654                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9655  004BD6  EE20 F001          	lfsr	2,1
  9656  004BDA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9657  004BDC  26D9               	addwf	fsr2l,f,c
  9658  004BDE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9659  004BE0  22DA               	addwfc	fsr2h,f,c
  9660  004BE2  0E08               	movlw	8
  9661  004BE4  6EDF               	movwf	indf2,c
  9662                           
  9663                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9664  004BE6  EE20 F002          	lfsr	2,2
  9665  004BEA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9666  004BEC  26D9               	addwf	fsr2l,f,c
  9667  004BEE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9668  004BF0  22DA               	addwfc	fsr2h,f,c
  9669  004BF2  0E38               	movlw	56
  9670  004BF4  6EDE               	movwf	postinc2,c
  9671  004BF6  0E04               	movlw	4
  9672  004BF8  6EDD               	movwf	postdec2,c
  9673                           
  9674                           ; BSR set to: 0
  9675                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9676  004BFA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9677  004BFE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9678  004C02  0E48               	movlw	72
  9679  004C04  6EDF               	movwf	indf2,c
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9683  004C06  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9684  004C0A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9685  004C0E  0E00               	movlw	0
  9686  004C10  8EDB               	bsf	plusw2,7,c
  9687                           
  9688                           ;usb_device.c: 1518: }
  9689  004C12  0012               	return	
  9690  004C14                     l1673:
  9691                           
  9692                           ; BSR set to: 0
  9693                           ;usb_device.c: 1519: else
  9694                           ;usb_device.c: 1520: {
  9695                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9696                           
  9697                           ; BSR set to: 0
  9698  004C14  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9699  004C16  0104               	movlb	4	; () banked
  9700  004C18  5D36               	subwf	54,w,b	;volatile
  9701  004C1A  0100               	movlb	0	; () banked
  9702  004C1C  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9703  004C1E  0104               	movlb	4	; () banked
  9704  004C20  5937               	subwfb	55,w,b	;volatile
  9705  004C22  B0D8               	btfsc	status,0,c
  9706  004C24  D004               	goto	l1675
  9707                           
  9708                           ; BSR set to: 4
  9709                           ;usb_device.c: 1524: {
  9710                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9711  004C26  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9712  004C2A  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9713  004C2E                     l1675:
  9714                           
  9715                           ; BSR set to: 4
  9716                           ;usb_device.c: 1526: }
  9717                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9718                           
  9719                           ; BSR set to: 4
  9720  004C2E  EC17  F01C         	call	_USBCtrlTrfTxService	;wreg free
  9721                           
  9722                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9723  004C32  0100               	movlb	0	; () banked
  9724  004C34  EE20 F002          	lfsr	2,2
  9725  004C38  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9726  004C3A  26D9               	addwf	fsr2l,f,c
  9727  004C3C  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9728  004C3E  22DA               	addwfc	fsr2h,f,c
  9729  004C40  0E38               	movlw	56
  9730  004C42  6EDE               	movwf	postinc2,c
  9731  004C44  0E04               	movlw	4
  9732  004C46  6EDD               	movwf	postdec2,c
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9736  004C48  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9737  004C4C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9738  004C50  0E48               	movlw	72
  9739  004C52  6EDF               	movwf	indf2,c
  9740                           
  9741                           ; BSR set to: 0
  9742                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9743  004C54  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9744  004C58  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9745  004C5C  0E00               	movlw	0
  9746  004C5E  8EDB               	bsf	plusw2,7,c
  9747  004C60  0012               	return	
  9748  004C62                     __end_of_USBCtrlEPAllowDataStage:
  9749                           	opt stack 0
  9750                           tosu	equ	0xFFF
  9751                           tosh	equ	0xFFE
  9752                           tosl	equ	0xFFD
  9753                           pclath	equ	0xFFA
  9754                           tblptru	equ	0xFF8
  9755                           tblptrh	equ	0xFF7
  9756                           tblptrl	equ	0xFF6
  9757                           tablat	equ	0xFF5
  9758                           prodh	equ	0xFF4
  9759                           prodl	equ	0xFF3
  9760                           intcon	equ	0xFF2
  9761                           intcon2	equ	0xFF1
  9762                           intcon3	equ	0xFF0
  9763                           postinc0	equ	0xFEE
  9764                           plusw0	equ	0xFEB
  9765                           wreg	equ	0xFE8
  9766                           postinc1	equ	0xFE6
  9767                           postdec1	equ	0xFE5
  9768                           fsr1h	equ	0xFE2
  9769                           fsr1l	equ	0xFE1
  9770                           indf2	equ	0xFDF
  9771                           postinc2	equ	0xFDE
  9772                           postdec2	equ	0xFDD
  9773                           plusw2	equ	0xFDB
  9774                           fsr2h	equ	0xFDA
  9775                           fsr2l	equ	0xFD9
  9776                           status	equ	0xFD8
  9777                           
  9778 ;; *************** function _USBCheckStdRequest *****************
  9779 ;; Defined at:
  9780 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9781 ;; Parameters:    Size  Location     Type
  9782 ;;		None
  9783 ;; Auto vars:     Size  Location     Type
  9784 ;;		None
  9785 ;; Return value:  Size  Location     Type
  9786 ;;                  1    wreg      void 
  9787 ;; Registers used:
  9788 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9789 ;; Tracked objects:
  9790 ;;		On entry : 0/0
  9791 ;;		On exit  : 0/0
  9792 ;;		Unchanged: 0/0
  9793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9798 ;;Total ram usage:        0 bytes
  9799 ;; Hardware stack levels used:    1
  9800 ;; Hardware stack levels required when called:   16
  9801 ;; This function calls:
  9802 ;;		_USBStdFeatureReqHandler
  9803 ;;		_USBStdGetDscHandler
  9804 ;;		_USBStdGetStatusHandler
  9805 ;;		_USBStdSetCfgHandler
  9806 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9807 ;; This function is called by:
  9808 ;;		_USBCtrlTrfSetupHandler
  9809 ;; This function uses a non-reentrant model
  9810 ;;
  9811                           
  9812                           	psect	text39
  9813  00374A                     __ptext39:
  9814                           	opt stack 0
  9815  00374A                     _USBCheckStdRequest:
  9816                           	opt stack 8
  9817                           
  9818                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;incstack = 0
  9822  00374A  0104               	movlb	4	; () banked
  9823  00374C  3930               	swapf	48,w,b	;volatile
  9824  00374E  32E8               	rrcf	wreg,f,c
  9825  003750  0B03               	andlw	3
  9826  003752  0900               	iorlw	0
  9827  003754  A4D8               	btfss	status,2,c
  9828  003756  0012               	return	
  9829  003758  D048               	goto	l1808
  9830  00375A                     l1809:
  9831                           
  9832                           ; BSR set to: 4
  9833                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9834  00375A  0100               	movlb	0	; () banked
  9835  00375C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9839  00375E  0E08               	movlw	8
  9840  003760  6FCE               	movwf	_USBDeviceState& (0+255),b
  9841                           
  9842                           ;usb_device.c: 2713: break;
  9843  003762  0012               	return	
  9844  003764                     
  9845                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9846                           
  9847                           ; BSR set to: 0
  9848  003764  EC9A  F016         	call	_USBStdGetDscHandler	;wreg free
  9849                           
  9850                           ;usb_device.c: 2716: break;
  9851  003768  0012               	return	
  9852  00376A                     
  9853                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9854  00376A  ECBF  F01A         	call	_USBStdSetCfgHandler	;wreg free
  9855                           
  9856                           ;usb_device.c: 2719: break;
  9857  00376E  0012               	return	
  9858  003770                     
  9859                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9860  003770  0ED6               	movlw	low _USBActiveConfiguration
  9861  003772  0100               	movlb	0	; () banked
  9862  003774  6FB0               	movwf	_inPipes& (0+255),b
  9863  003776  0E00               	movlw	high _USBActiveConfiguration
  9864  003778  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9865                           
  9866                           ; BSR set to: 0
  9867                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9868  00377A  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9872  00377C  0E01               	movlw	1
  9873  00377E  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9874                           
  9875                           ; BSR set to: 0
  9876                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9877  003780  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9878                           
  9879                           ;usb_device.c: 2725: break;
  9880  003782  0012               	return	
  9881  003784                     
  9882                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9883                           
  9884                           ; BSR set to: 0
  9885  003784  EC3D  F023         	call	_USBStdGetStatusHandler	;wreg free
  9886                           
  9887                           ;usb_device.c: 2728: break;
  9888  003788  0012               	return	
  9889  00378A                     
  9890                           ;usb_device.c: 2730: case 3:
  9891                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9892  00378A  ECB0  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9893                           
  9894                           ;usb_device.c: 2732: break;
  9895  00378E  0012               	return	
  9896  003790                     
  9897                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9898  003790  0104               	movlb	4	; () banked
  9899  003792  5134               	movf	52,w,b	;volatile
  9900  003794  0D01               	mullw	1
  9901  003796  0EEF               	movlw	low _USBAlternateInterface
  9902  003798  24F3               	addwf	prodl,w,c
  9903  00379A  0100               	movlb	0	; () banked
  9904  00379C  6FB0               	movwf	_inPipes& (0+255),b
  9905  00379E  0E02               	movlw	high _USBAlternateInterface
  9906  0037A0  20F4               	addwfc	prodh,w,c
  9907  0037A2  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9908                           
  9909                           ; BSR set to: 0
  9910                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9911  0037A4  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9915  0037A6  0E01               	movlw	1
  9916  0037A8  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9920  0037AA  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9921                           
  9922                           ;usb_device.c: 2738: break;
  9923  0037AC  0012               	return	
  9924  0037AE                     l1818:
  9925                           
  9926                           ; BSR set to: 4
  9927                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9928  0037AE  0100               	movlb	0	; () banked
  9929  0037B0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9933  0037B2  0104               	movlb	4	; () banked
  9934  0037B4  5134               	movf	52,w,b	;volatile
  9935  0037B6  0D01               	mullw	1
  9936  0037B8  0EEF               	movlw	low _USBAlternateInterface
  9937  0037BA  24F3               	addwf	prodl,w,c
  9938  0037BC  6ED9               	movwf	fsr2l,c
  9939  0037BE  0E02               	movlw	high _USBAlternateInterface
  9940  0037C0  20F4               	addwfc	prodh,w,c
  9941  0037C2  6EDA               	movwf	fsr2h,c
  9942  0037C4  C432 FFDF          	movff	1074,indf2	;volatile
  9943                           
  9944                           ;usb_device.c: 2742: break;
  9945  0037C8  0012               	return	
  9946  0037CA                     
  9947                           ; BSR set to: 4
  9948                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9949                           
  9950                           ; BSR set to: 4
  9951  0037CA  0E00               	movlw	0
  9952  0037CC  0100               	movlb	0	; () banked
  9953  0037CE  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9954  0037D0  0E02               	movlw	2
  9955  0037D2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9956  0037D4  0E00               	movlw	0
  9957  0037D6  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9958  0037D8  0E00               	movlw	0
  9959  0037DA  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9960  0037DC  0E00               	movlw	0
  9961  0037DE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9962  0037E0  0E00               	movlw	0
  9963  0037E2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9964  0037E4  ECF9  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9965                           
  9966                           ;usb_device.c: 2749: }
  9967                           
  9968                           ;usb_device.c: 2748: break;
  9969                           
  9970                           ;usb_device.c: 2747: default:
  9971                           
  9972                           ;usb_device.c: 2746: case 12:
  9973                           
  9974                           ;usb_device.c: 2745: break;
  9975  0037E8  0012               	return	
  9976  0037EA                     l1808:
  9977  0037EA  0104               	movlb	4	; () banked
  9978  0037EC  5131               	movf	49,w,b	;volatile
  9979                           
  9980                           ; Switch size 1, requested type "space"
  9981                           ; Number of cases is 11, Range of values is 0 to 12
  9982                           ; switch strategies available:
  9983                           ; Name         Instructions Cycles
  9984                           ; simple_byte           34    18 (average)
  9985                           ;	Chosen strategy is simple_byte
  9986  0037EE  0A00               	xorlw	0	; case 0
  9987  0037F0  B4D8               	btfsc	status,2,c
  9988  0037F2  D7C8               	goto	l1814
  9989  0037F4  0A01               	xorlw	1	; case 1
  9990  0037F6  B4D8               	btfsc	status,2,c
  9991  0037F8  D7C8               	goto	l1815
  9992  0037FA  0A02               	xorlw	2	; case 3
  9993  0037FC  B4D8               	btfsc	status,2,c
  9994  0037FE  D7C5               	goto	l1815
  9995  003800  0A06               	xorlw	6	; case 5
  9996  003802  B4D8               	btfsc	status,2,c
  9997  003804  D7AA               	goto	l1809
  9998  003806  0A03               	xorlw	3	; case 6
  9999  003808  B4D8               	btfsc	status,2,c
 10000  00380A  D7AC               	goto	l1811
 10001  00380C  0A01               	xorlw	1	; case 7
 10002  00380E  B4D8               	btfsc	status,2,c
 10003  003810  D7DC               	goto	l1819
 10004  003812  0A0F               	xorlw	15	; case 8
 10005  003814  B4D8               	btfsc	status,2,c
 10006  003816  D7AC               	goto	l1813
 10007  003818  0A01               	xorlw	1	; case 9
 10008  00381A  B4D8               	btfsc	status,2,c
 10009  00381C  D7A6               	goto	l1812
 10010  00381E  0A03               	xorlw	3	; case 10
 10011  003820  B4D8               	btfsc	status,2,c
 10012  003822  D7B6               	goto	l1817
 10013  003824  0A01               	xorlw	1	; case 11
 10014  003826  B4D8               	btfsc	status,2,c
 10015  003828  D7C2               	goto	l1818
 10016  00382A  0A07               	xorlw	7	; case 12
 10017  00382C  0012               	return	
 10018  00382E                     __end_of_USBCheckStdRequest:
 10019                           	opt stack 0
 10020                           tosu	equ	0xFFF
 10021                           tosh	equ	0xFFE
 10022                           tosl	equ	0xFFD
 10023                           pclath	equ	0xFFA
 10024                           tblptru	equ	0xFF8
 10025                           tblptrh	equ	0xFF7
 10026                           tblptrl	equ	0xFF6
 10027                           tablat	equ	0xFF5
 10028                           prodh	equ	0xFF4
 10029                           prodl	equ	0xFF3
 10030                           intcon	equ	0xFF2
 10031                           intcon2	equ	0xFF1
 10032                           intcon3	equ	0xFF0
 10033                           postinc0	equ	0xFEE
 10034                           plusw0	equ	0xFEB
 10035                           wreg	equ	0xFE8
 10036                           postinc1	equ	0xFE6
 10037                           postdec1	equ	0xFE5
 10038                           fsr1h	equ	0xFE2
 10039                           fsr1l	equ	0xFE1
 10040                           indf2	equ	0xFDF
 10041                           postinc2	equ	0xFDE
 10042                           postdec2	equ	0xFDD
 10043                           plusw2	equ	0xFDB
 10044                           fsr2h	equ	0xFDA
 10045                           fsr2l	equ	0xFD9
 10046                           status	equ	0xFD8
 10047                           
 10048 ;; *************** function _USBStdSetCfgHandler *****************
 10049 ;; Defined at:
 10050 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;		None
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;  i               1   49[BANK0 ] unsigned char 
 10055 ;; Return value:  Size  Location     Type
 10056 ;;                  1    wreg      void 
 10057 ;; Registers used:
 10058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10059 ;; Tracked objects:
 10060 ;;		On entry : 0/0
 10061 ;;		On exit  : 0/0
 10062 ;;		Unchanged: 0/0
 10063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10065 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10067 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10068 ;;Total ram usage:        1 bytes
 10069 ;; Hardware stack levels used:    1
 10070 ;; Hardware stack levels required when called:   15
 10071 ;; This function calls:
 10072 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10073 ;;		_memset
 10074 ;; This function is called by:
 10075 ;;		_USBCheckStdRequest
 10076 ;; This function uses a non-reentrant model
 10077 ;;
 10078                           
 10079                           	psect	text40
 10080  00357E                     __ptext40:
 10081                           	opt stack 0
 10082  00357E                     _USBStdSetCfgHandler:
 10083                           	opt stack 8
 10084                           
 10085                           ;usb_device.c: 1988: uint8_t i;
 10086                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
 10087                           
 10088                           ;incstack = 0
 10089  00357E  0100               	movlb	0	; () banked
 10090  003580  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10091                           
 10092                           ; BSR set to: 0
 10093                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
 10094  003582  0E27               	movlw	39
 10095  003584  6F7D               	movwf	memset@p1& (0+255),b
 10096  003586  0E0F               	movlw	15
 10097  003588  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10098  00358A  0E00               	movlw	0
 10099  00358C  6F80               	movwf	(memset@c+1)& (0+255),b
 10100  00358E  0E00               	movlw	0
 10101  003590  6F7F               	movwf	memset@c& (0+255),b
 10102  003592  0E00               	movlw	0
 10103  003594  6F82               	movwf	(memset@n+1)& (0+255),b
 10104  003596  0E02               	movlw	2
 10105  003598  6F81               	movwf	memset@n& (0+255),b
 10106  00359A  ECB8  F033         	call	_memset	;wreg free
 10107                           
 10108                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10109  00359E  0E00               	movlw	0
 10110  0035A0  0100               	movlb	0	; () banked
 10111  0035A2  6F7D               	movwf	memset@p1& (0+255),b
 10112  0035A4  0E04               	movlw	4
 10113  0035A6  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10114  0035A8  0E00               	movlw	0
 10115  0035AA  6F80               	movwf	(memset@c+1)& (0+255),b
 10116  0035AC  0E00               	movlw	0
 10117  0035AE  6F7F               	movwf	memset@c& (0+255),b
 10118  0035B0  0E00               	movlw	0
 10119  0035B2  6F82               	movwf	(memset@n+1)& (0+255),b
 10120  0035B4  0E30               	movlw	48
 10121  0035B6  6F81               	movwf	memset@n& (0+255),b
 10122  0035B8  ECB8  F033         	call	_memset	;wreg free
 10123                           
 10124                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10125  0035BC  8C65               	bsf	3941,6,c	;volatile
 10126                           
 10127                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10128  0035BE  0E00               	movlw	0
 10129  0035C0  0100               	movlb	0	; () banked
 10130  0035C2  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10131  0035C4                     l13448:
 10132                           
 10133                           ; BSR set to: 0
 10134  0035C4  0E02               	movlw	2
 10135  0035C6  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10136  0035C8  D001               	goto	l1725
 10137  0035CA  D016               	goto	u12020
 10138  0035CC                     l1725:
 10139                           
 10140                           ; BSR set to: 0
 10141                           ;usb_device.c: 2006: {
 10142                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10143                           
 10144                           ; BSR set to: 0
 10145  0035CC  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10146  0035CE  0D01               	mullw	1
 10147  0035D0  0ED2               	movlw	low _ep_data_in
 10148  0035D2  24F3               	addwf	prodl,w,c
 10149  0035D4  6ED9               	movwf	fsr2l,c
 10150  0035D6  0E02               	movlw	high _ep_data_in
 10151  0035D8  20F4               	addwfc	prodh,w,c
 10152  0035DA  6EDA               	movwf	fsr2h,c
 10153  0035DC  0E00               	movlw	0
 10154  0035DE  6EDF               	movwf	indf2,c
 10155                           
 10156                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10157  0035E0  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10158  0035E2  0D01               	mullw	1
 10159  0035E4  0ECF               	movlw	low _ep_data_out
 10160  0035E6  24F3               	addwf	prodl,w,c
 10161  0035E8  6ED9               	movwf	fsr2l,c
 10162  0035EA  0E02               	movlw	high _ep_data_out
 10163  0035EC  20F4               	addwfc	prodh,w,c
 10164  0035EE  6EDA               	movwf	fsr2h,c
 10165  0035F0  0E00               	movlw	0
 10166  0035F2  6EDF               	movwf	indf2,c
 10167                           
 10168                           ; BSR set to: 0
 10169  0035F4  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10170  0035F6  D7E6               	goto	l13448
 10171  0035F8                     u12020:
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;usb_device.c: 2009: }
 10175                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10176                           
 10177                           ; BSR set to: 0
 10178  0035F8  0EEF               	movlw	low _USBAlternateInterface
 10179  0035FA  6F7D               	movwf	memset@p1& (0+255),b
 10180  0035FC  0E02               	movlw	high _USBAlternateInterface
 10181  0035FE  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10182  003600  0E00               	movlw	0
 10183  003602  6F80               	movwf	(memset@c+1)& (0+255),b
 10184  003604  0E00               	movlw	0
 10185  003606  6F7F               	movwf	memset@c& (0+255),b
 10186  003608  0E00               	movlw	0
 10187  00360A  6F82               	movwf	(memset@n+1)& (0+255),b
 10188  00360C  0E02               	movlw	2
 10189  00360E  6F81               	movwf	memset@n& (0+255),b
 10190  003610  ECB8  F033         	call	_memset	;wreg free
 10191                           
 10192                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10193  003614  9C65               	bcf	3941,6,c	;volatile
 10194                           
 10195                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10196  003616  0E08               	movlw	8
 10197  003618  0100               	movlb	0	; () banked
 10198  00361A  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10199  00361C  0E04               	movlw	4
 10200  00361E  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10201                           
 10202                           ; BSR set to: 0
 10203                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10204  003620  0E00               	movlw	0
 10205  003622  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10206  003624  0E04               	movlw	4
 10207  003626  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10211  003628  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10212  00362C  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10216  003630  C432 F0D6          	movff	1074,_USBActiveConfiguration	;volatile
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10220  003634  51D6               	movf	_USBActiveConfiguration& (0+255),w,b
 10221  003636  A4D8               	btfss	status,2,c
 10222  003638  D003               	goto	l1727
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;usb_device.c: 2028: {
 10226                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10227  00363A  0E10               	movlw	16
 10228  00363C  6FCE               	movwf	_USBDeviceState& (0+255),b
 10229                           
 10230                           ;usb_device.c: 2031: }
 10231  00363E  0012               	return	
 10232  003640                     l1727:
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;usb_device.c: 2032: else
 10236                           ;usb_device.c: 2033: {
 10237                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10238                           
 10239                           ; BSR set to: 0
 10240  003640  0E00               	movlw	0
 10241  003642  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10242  003644  0E01               	movlw	1
 10243  003646  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10244  003648  0ED6               	movlw	low _USBActiveConfiguration
 10245  00364A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10246  00364C  0E00               	movlw	high _USBActiveConfiguration
 10247  00364E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10248  003650  0E00               	movlw	0
 10249  003652  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10250  003654  0E01               	movlw	1
 10251  003656  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10252  003658  ECF9  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10253                           
 10254                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10255  00365C  0E20               	movlw	32
 10256  00365E  0100               	movlb	0	; () banked
 10257  003660  6FCE               	movwf	_USBDeviceState& (0+255),b
 10258  003662  0012               	return	
 10259  003664                     __end_of_USBStdSetCfgHandler:
 10260                           	opt stack 0
 10261                           tosu	equ	0xFFF
 10262                           tosh	equ	0xFFE
 10263                           tosl	equ	0xFFD
 10264                           pclath	equ	0xFFA
 10265                           tblptru	equ	0xFF8
 10266                           tblptrh	equ	0xFF7
 10267                           tblptrl	equ	0xFF6
 10268                           tablat	equ	0xFF5
 10269                           prodh	equ	0xFF4
 10270                           prodl	equ	0xFF3
 10271                           intcon	equ	0xFF2
 10272                           intcon2	equ	0xFF1
 10273                           intcon3	equ	0xFF0
 10274                           postinc0	equ	0xFEE
 10275                           plusw0	equ	0xFEB
 10276                           wreg	equ	0xFE8
 10277                           postinc1	equ	0xFE6
 10278                           postdec1	equ	0xFE5
 10279                           fsr1h	equ	0xFE2
 10280                           fsr1l	equ	0xFE1
 10281                           indf2	equ	0xFDF
 10282                           postinc2	equ	0xFDE
 10283                           postdec2	equ	0xFDD
 10284                           plusw2	equ	0xFDB
 10285                           fsr2h	equ	0xFDA
 10286                           fsr2l	equ	0xFD9
 10287                           status	equ	0xFD8
 10288                           
 10289 ;; *************** function _USBStdGetStatusHandler *****************
 10290 ;; Defined at:
 10291 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;		None
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10296 ;;		 -> NULL(0), BDT(48), 
 10297 ;; Return value:  Size  Location     Type
 10298 ;;                  1    wreg      void 
 10299 ;; Registers used:
 10300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10307 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10308 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10309 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10310 ;;Total ram usage:        3 bytes
 10311 ;; Hardware stack levels used:    1
 10312 ;; Hardware stack levels required when called:   11
 10313 ;; This function calls:
 10314 ;;		Nothing
 10315 ;; This function is called by:
 10316 ;;		_USBCheckStdRequest
 10317 ;; This function uses a non-reentrant model
 10318 ;;
 10319                           
 10320                           	psect	text41
 10321  00467A                     __ptext41:
 10322                           	opt stack 0
 10323  00467A                     _USBStdGetStatusHandler:
 10324                           	opt stack 12
 10325                           
 10326                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10327                           
 10328                           ; BSR set to: 0
 10329                           ;incstack = 0
 10330  00467A  0E00               	movlw	0
 10331  00467C  0104               	movlb	4	; () banked
 10332  00467E  6F38               	movwf	56,b	;volatile
 10333                           
 10334                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10335  004680  0E00               	movlw	0
 10336  004682  6F39               	movwf	57,b	;volatile
 10337                           
 10338                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10339  004684  D03D               	goto	l1746
 10340  004686                     l1747:
 10341                           
 10342                           ; BSR set to: 4
 10343                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10344  004686  0100               	movlb	0	; () banked
 10345  004688  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10346                           
 10347                           ;usb_device.c: 2163: }
 10348                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10349                           
 10350                           ; BSR set to: 4
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;usb_device.c: 2161: {
 10354                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10355                           
 10356                           ;usb_device.c: 2160: if(0 == 1)
 10357  00468A  0101               	movlb	1	; () banked
 10358  00468C  05E0               	decf	_RemoteWakeup& (0+255),w,b
 10359  00468E  A4D8               	btfss	status,2,c
 10360  004690  D042               	goto	l1750
 10361                           
 10362                           ; BSR set to: 1
 10363                           ;usb_device.c: 2166: {
 10364                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10365  004692  0104               	movlb	4	; () banked
 10366  004694  8338               	bsf	56,1,b	;volatile
 10367                           
 10368                           ; BSR set to: 4
 10369                           ;usb_device.c: 2168: }
 10370                           ;usb_device.c: 2169: break;
 10371  004696  D03F               	goto	l1750
 10372  004698                     l1751:
 10373                           
 10374                           ; BSR set to: 4
 10375                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10376  004698  0100               	movlb	0	; () banked
 10377  00469A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10378                           
 10379                           ;usb_device.c: 2172: break;
 10380  00469C  D03C               	goto	l1750
 10381  00469E                     l1752:
 10382                           
 10383                           ; BSR set to: 4
 10384                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10385  00469E  0100               	movlb	0	; () banked
 10386  0046A0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10387                           
 10388                           ;usb_device.c: 2178: {
 10389                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10390                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10391  0046A2  0104               	movlb	4	; () banked
 10392  0046A4  BF34               	btfsc	52,7,b	;volatile
 10393  0046A6  D00B               	goto	l1753
 10394                           
 10395                           ; BSR set to: 4
 10396                           ;usb_device.c: 2182: {
 10397                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10398  0046A8  5134               	movf	52,w,b	;volatile
 10399  0046AA  0B0F               	andlw	15
 10400  0046AC  0100               	movlb	0	; () banked
 10401  0046AE  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10402  0046B0  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10403  0046B2  0D02               	mullw	2
 10404  0046B4  0E06               	movlw	low _pBDTEntryOut
 10405  0046B6  24F3               	addwf	prodl,w,c
 10406  0046B8  6ED9               	movwf	fsr2l,c
 10407  0046BA  0E03               	movlw	high _pBDTEntryOut
 10408  0046BC  D00B               	goto	L4
 10409  0046BE                     l1753:
 10410                           
 10411                           ;usb_device.c: 2185: else
 10412                           ;usb_device.c: 2186: {
 10413                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10414                           
 10415                           ; BSR set to: 0
 10416  0046BE  0104               	movlb	4	; () banked
 10417  0046C0  5134               	movf	52,w,b	;volatile
 10418  0046C2  0B0F               	andlw	15
 10419  0046C4  0100               	movlb	0	; () banked
 10420  0046C6  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10421  0046C8  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10422  0046CA  0D02               	mullw	2
 10423  0046CC  0EB6               	movlw	low _pBDTEntryIn
 10424  0046CE  24F3               	addwf	prodl,w,c
 10425  0046D0  6ED9               	movwf	fsr2l,c
 10426  0046D2  0E00               	movlw	high _pBDTEntryIn
 10427  0046D4                     L4:
 10428  0046D4  20F4               	addwfc	prodh,w,c
 10429  0046D6  6EDA               	movwf	fsr2h,c
 10430  0046D8  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10431  0046DC  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10432                           
 10433                           ; BSR set to: 0
 10434                           ;usb_device.c: 2188: }
 10435                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10436                           
 10437                           ; BSR set to: 0
 10438  0046E0  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10439  0046E4  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10440  0046E8  AEDF               	btfss	indf2,7,c
 10441  0046EA  D015               	goto	l1750
 10442                           
 10443                           ; BSR set to: 0
 10444  0046EC  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10445  0046F0  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10446  0046F4  A4DF               	btfss	indf2,2,c
 10447  0046F6  D00F               	goto	l1750
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10451  0046F8  0E01               	movlw	1
 10452  0046FA  0104               	movlb	4	; () banked
 10453  0046FC  6F38               	movwf	56,b	;volatile
 10454                           
 10455                           ; BSR set to: 4
 10456                           ;usb_device.c: 2193: }
 10457                           ;usb_device.c: 2194: }
 10458                           
 10459                           ; BSR set to: 4
 10460                           ;usb_device.c: 2192: break;
 10461  0046FE  D00B               	goto	l1750
 10462  004700                     l1746:
 10463                           
 10464                           ; BSR set to: 4
 10465                           
 10466                           ; BSR set to: 4
 10467  004700  5130               	movf	48,w,b	;volatile
 10468  004702  0B1F               	andlw	31
 10469                           
 10470                           ; Switch size 1, requested type "space"
 10471                           ; Number of cases is 3, Range of values is 0 to 2
 10472                           ; switch strategies available:
 10473                           ; Name         Instructions Cycles
 10474                           ; simple_byte           10     6 (average)
 10475                           ;	Chosen strategy is simple_byte
 10476  004704  0A00               	xorlw	0	; case 0
 10477  004706  B4D8               	btfsc	status,2,c
 10478  004708  D7BE               	goto	l1747
 10479  00470A  0A01               	xorlw	1	; case 1
 10480  00470C  B4D8               	btfsc	status,2,c
 10481  00470E  D7C4               	goto	l1751
 10482  004710  0A03               	xorlw	3	; case 2
 10483  004712  B4D8               	btfsc	status,2,c
 10484  004714  D7C4               	goto	l1752
 10485  004716                     l1750:
 10486                           
 10487                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10488  004716  0100               	movlb	0	; () banked
 10489  004718  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10490  00471A  0012               	return	
 10491                           
 10492                           ; BSR set to: 0
 10493                           ;usb_device.c: 2197: {
 10494                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10495  00471C  0E38               	movlw	56
 10496  00471E  6FB0               	movwf	_inPipes& (0+255),b
 10497  004720  0E04               	movlw	4
 10498  004722  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10499                           
 10500                           ; BSR set to: 0
 10501                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10502  004724  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10503                           
 10504                           ; BSR set to: 0
 10505                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10506  004726  0E02               	movlw	2
 10507  004728  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10508  00472A  0012               	return	
 10509  00472C                     __end_of_USBStdGetStatusHandler:
 10510                           	opt stack 0
 10511                           tosu	equ	0xFFF
 10512                           tosh	equ	0xFFE
 10513                           tosl	equ	0xFFD
 10514                           pclath	equ	0xFFA
 10515                           tblptru	equ	0xFF8
 10516                           tblptrh	equ	0xFF7
 10517                           tblptrl	equ	0xFF6
 10518                           tablat	equ	0xFF5
 10519                           prodh	equ	0xFF4
 10520                           prodl	equ	0xFF3
 10521                           intcon	equ	0xFF2
 10522                           intcon2	equ	0xFF1
 10523                           intcon3	equ	0xFF0
 10524                           postinc0	equ	0xFEE
 10525                           plusw0	equ	0xFEB
 10526                           wreg	equ	0xFE8
 10527                           postinc1	equ	0xFE6
 10528                           postdec1	equ	0xFE5
 10529                           fsr1h	equ	0xFE2
 10530                           fsr1l	equ	0xFE1
 10531                           indf2	equ	0xFDF
 10532                           postinc2	equ	0xFDE
 10533                           postdec2	equ	0xFDD
 10534                           plusw2	equ	0xFDB
 10535                           fsr2h	equ	0xFDA
 10536                           fsr2l	equ	0xFD9
 10537                           status	equ	0xFD8
 10538                           
 10539 ;; *************** function _USBStdGetDscHandler *****************
 10540 ;; Defined at:
 10541 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10542 ;; Parameters:    Size  Location     Type
 10543 ;;		None
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;		None
 10546 ;; Return value:  Size  Location     Type
 10547 ;;                  1    wreg      void 
 10548 ;; Registers used:
 10549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10550 ;; Tracked objects:
 10551 ;;		On entry : 0/0
 10552 ;;		On exit  : 0/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10558 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10559 ;;Total ram usage:        2 bytes
 10560 ;; Hardware stack levels used:    1
 10561 ;; Hardware stack levels required when called:   11
 10562 ;; This function calls:
 10563 ;;		Nothing
 10564 ;; This function is called by:
 10565 ;;		_USBCheckStdRequest
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569                           	psect	text42
 10570  002D34                     __ptext42:
 10571                           	opt stack 0
 10572  002D34                     _USBStdGetDscHandler:
 10573                           	opt stack 12
 10574                           
 10575                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10576                           
 10577                           ; BSR set to: 0
 10578                           ;incstack = 0
 10579  002D34  0E80               	movlw	128
 10580  002D36  0104               	movlb	4	; () banked
 10581  002D38  1930               	xorwf	48,w,b	;volatile
 10582  002D3A  A4D8               	btfss	status,2,c
 10583  002D3C  0012               	return	
 10584                           
 10585                           ; BSR set to: 4
 10586                           ;usb_device.c: 2064: {
 10587                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10588  002D3E  0EC0               	movlw	192
 10589  002D40  0100               	movlb	0	; () banked
 10590  002D42  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10591                           
 10592                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10593  002D44  D082               	goto	l1733
 10594  002D46                     
 10595                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10596                           
 10597                           ; BSR set to: 0
 10598  002D46  0E49               	movlw	low _device_dsc
 10599  002D48  0100               	movlb	0	; () banked
 10600  002D4A  6FB0               	movwf	_inPipes& (0+255),b
 10601  002D4C  0EFE               	movlw	high _device_dsc
 10602  002D4E  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10606  002D50  0E00               	movlw	0
 10607  002D52  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10608  002D54  0E12               	movlw	18
 10609  002D56  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10610                           
 10611                           ;usb_device.c: 2076: break;
 10612  002D58  0012               	return	
 10613  002D5A                     
 10614                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10615                           
 10616                           ; BSR set to: 0
 10617  002D5A  0104               	movlb	4	; () banked
 10618  002D5C  5132               	movf	50,w,b	;volatile
 10619  002D5E  A4D8               	btfss	status,2,c
 10620  002D60  D040               	goto	l1737
 10621                           
 10622                           ; BSR set to: 4
 10623                           ;usb_device.c: 2082: {
 10624                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10625  002D62  5132               	movf	50,w,b	;volatile
 10626  002D64  0D02               	mullw	2
 10627  002D66  0E2E               	movlw	low _USB_CD_Ptr
 10628  002D68  24F3               	addwf	prodl,w,c
 10629  002D6A  6EF6               	movwf	tblptrl,c
 10630  002D6C  0EFC               	movlw	high _USB_CD_Ptr
 10631  002D6E  20F4               	addwfc	prodh,w,c
 10632  002D70  6EF7               	movwf	tblptrh,c
 10633  002D72                     	if	0	;There are less than 3 active tblptr bytes
 10634  002D72                     	endif
 10635  002D72  0009               	tblrd		*+
 10636  002D74  CFF5 F0B0          	movff	tablat,_inPipes
 10637  002D78  000A               	tblrd		*-
 10638  002D7A  CFF5 F0B1          	movff	tablat,_inPipes+1
 10639                           
 10640                           ; BSR set to: 4
 10641                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10642  002D7E  0E02               	movlw	2
 10643  002D80  0100               	movlb	0	; () banked
 10644  002D82  25B0               	addwf	_inPipes& (0+255),w,b
 10645  002D84  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10646  002D86  0E00               	movlw	0
 10647  002D88  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10648  002D8A  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10649  002D8C  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10650  002D90  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10651  002D94  6AF8               	clrf	tblptru,c
 10652  002D96  0E0E               	movlw	(high __ramtop+-1)
 10653  002D98  64F7               	cpfsgt	tblptrh,c
 10654  002D9A  D003               	bra	u12067
 10655  002D9C  0008               	tblrd		*
 10656  002D9E  50F5               	movf	tablat,w,c
 10657  002DA0  D005               	bra	u12060
 10658  002DA2                     u12067:
 10659  002DA2  CFF6 FFE9          	movff	tblptrl,fsr0l
 10660  002DA6  CFF7 FFEA          	movff	tblptrh,fsr0h
 10661  002DAA  50EF               	movf	indf0,w,c
 10662  002DAC                     u12060:
 10663  002DAC  0100               	movlb	0	; () banked
 10664  002DAE  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10665                           
 10666                           ; BSR set to: 0
 10667                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10668  002DB0  0E03               	movlw	3
 10669  002DB2  25B0               	addwf	_inPipes& (0+255),w,b
 10670  002DB4  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10671  002DB6  0E00               	movlw	0
 10672  002DB8  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10673  002DBA  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10674  002DBC  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10675  002DC0  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10676  002DC4  6AF8               	clrf	tblptru,c
 10677  002DC6  0E0E               	movlw	(high __ramtop+-1)
 10678  002DC8  64F7               	cpfsgt	tblptrh,c
 10679  002DCA  D003               	bra	u12077
 10680  002DCC  0008               	tblrd		*
 10681  002DCE  50F5               	movf	tablat,w,c
 10682  002DD0  D005               	bra	u12070
 10683  002DD2                     u12077:
 10684  002DD2  CFF6 FFE9          	movff	tblptrl,fsr0l
 10685  002DD6  CFF7 FFEA          	movff	tblptrh,fsr0h
 10686  002DDA  50EF               	movf	indf0,w,c
 10687  002DDC                     u12070:
 10688  002DDC  0100               	movlb	0	; () banked
 10689  002DDE  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10690                           
 10691                           ;usb_device.c: 2094: }
 10692  002DE0  0012               	return	
 10693  002DE2                     l1737:
 10694                           
 10695                           ;usb_device.c: 2095: else
 10696                           ;usb_device.c: 2096: {
 10697                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10698                           
 10699                           ; BSR set to: 0
 10700  002DE2  0E00               	movlw	0
 10701  002DE4  0100               	movlb	0	; () banked
 10702  002DE6  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10703                           
 10704                           ; BSR set to: 0
 10705                           ;usb_device.c: 2098: }
 10706                           ;usb_device.c: 2099: break;
 10707  002DE8  0012               	return	
 10708  002DEA                     
 10709                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10710                           
 10711                           ; BSR set to: 0
 10712  002DEA  0E03               	movlw	3
 10713  002DEC  0104               	movlb	4	; () banked
 10714  002DEE  6132               	cpfslt	50,b	;volatile
 10715  002DF0  D024               	goto	l1740
 10716                           
 10717                           ; BSR set to: 4
 10718                           ;usb_device.c: 2105: {
 10719                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10720  002DF2  5132               	movf	50,w,b	;volatile
 10721  002DF4  0D02               	mullw	2
 10722  002DF6  0E1C               	movlw	low _USB_SD_Ptr
 10723  002DF8  24F3               	addwf	prodl,w,c
 10724  002DFA  6EF6               	movwf	tblptrl,c
 10725  002DFC  0EFC               	movlw	high _USB_SD_Ptr
 10726  002DFE  20F4               	addwfc	prodh,w,c
 10727  002E00  6EF7               	movwf	tblptrh,c
 10728  002E02                     	if	0	;There are less than 3 active tblptr bytes
 10729  002E02                     	endif
 10730  002E02  0009               	tblrd		*+
 10731  002E04  CFF5 F0B0          	movff	tablat,_inPipes
 10732  002E08  000A               	tblrd		*-
 10733  002E0A  CFF5 F0B1          	movff	tablat,_inPipes+1
 10734                           
 10735                           ; BSR set to: 4
 10736                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10737  002E0E  C0B0  FFF6         	movff	_inPipes,tblptrl
 10738  002E12  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10739  002E16  6AF8               	clrf	tblptru,c
 10740  002E18  0E0E               	movlw	(high __ramtop+-1)
 10741  002E1A  64F7               	cpfsgt	tblptrh,c
 10742  002E1C  D003               	bra	u12097
 10743  002E1E  0008               	tblrd		*
 10744  002E20  50F5               	movf	tablat,w,c
 10745  002E22  D005               	bra	u12090
 10746  002E24                     u12097:
 10747  002E24  CFF6 FFE9          	movff	tblptrl,fsr0l
 10748  002E28  CFF7 FFEA          	movff	tblptrh,fsr0h
 10749  002E2C  50EF               	movf	indf0,w,c
 10750  002E2E                     u12090:
 10751  002E2E  0100               	movlb	0	; () banked
 10752  002E30  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10753  002E32  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10754  002E34  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10755  002E36  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10756                           
 10757                           ;usb_device.c: 2110: }
 10758  002E38  0012               	return	
 10759  002E3A                     l1740:
 10760                           
 10761                           ;usb_device.c: 2120: else
 10762                           ;usb_device.c: 2121: {
 10763                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10764                           
 10765                           ; BSR set to: 0
 10766  002E3A  0E00               	movlw	0
 10767  002E3C  0100               	movlb	0	; () banked
 10768  002E3E  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10769                           
 10770                           ; BSR set to: 0
 10771                           ;usb_device.c: 2123: }
 10772                           ;usb_device.c: 2124: break;
 10773  002E40  0012               	return	
 10774  002E42                     
 10775                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10776                           
 10777                           ; BSR set to: 0
 10778  002E42  0E00               	movlw	0
 10779  002E44  0100               	movlb	0	; () banked
 10780  002E46  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;usb_device.c: 2128: }
 10784                           
 10785                           ;usb_device.c: 2127: break;
 10786  002E48  0012               	return	
 10787  002E4A                     l1733:
 10788                           
 10789                           ; BSR set to: 0
 10790                           
 10791                           ; BSR set to: 0
 10792  002E4A  0104               	movlb	4	; () banked
 10793  002E4C  5133               	movf	51,w,b	;volatile
 10794                           
 10795                           ; Switch size 1, requested type "space"
 10796                           ; Number of cases is 3, Range of values is 1 to 3
 10797                           ; switch strategies available:
 10798                           ; Name         Instructions Cycles
 10799                           ; simple_byte           10     6 (average)
 10800                           ;	Chosen strategy is simple_byte
 10801  002E4E  0A01               	xorlw	1	; case 1
 10802  002E50  B4D8               	btfsc	status,2,c
 10803  002E52  D779               	goto	l1734
 10804  002E54  0A03               	xorlw	3	; case 2
 10805  002E56  B4D8               	btfsc	status,2,c
 10806  002E58  D780               	goto	l1736
 10807  002E5A  0A01               	xorlw	1	; case 3
 10808  002E5C  B4D8               	btfsc	status,2,c
 10809  002E5E  D7C5               	goto	l1739
 10810  002E60  D7F0               	goto	l1742
 10811  002E62                     __end_of_USBStdGetDscHandler:
 10812                           	opt stack 0
 10813                           tosu	equ	0xFFF
 10814                           tosh	equ	0xFFE
 10815                           tosl	equ	0xFFD
 10816                           pclath	equ	0xFFA
 10817                           tblptru	equ	0xFF8
 10818                           tblptrh	equ	0xFF7
 10819                           tblptrl	equ	0xFF6
 10820                           tablat	equ	0xFF5
 10821                           prodh	equ	0xFF4
 10822                           prodl	equ	0xFF3
 10823                           intcon	equ	0xFF2
 10824                           intcon2	equ	0xFF1
 10825                           intcon3	equ	0xFF0
 10826                           indf0	equ	0xFEF
 10827                           postinc0	equ	0xFEE
 10828                           plusw0	equ	0xFEB
 10829                           fsr0h	equ	0xFEA
 10830                           fsr0l	equ	0xFE9
 10831                           wreg	equ	0xFE8
 10832                           postinc1	equ	0xFE6
 10833                           postdec1	equ	0xFE5
 10834                           fsr1h	equ	0xFE2
 10835                           fsr1l	equ	0xFE1
 10836                           indf2	equ	0xFDF
 10837                           postinc2	equ	0xFDE
 10838                           postdec2	equ	0xFDD
 10839                           plusw2	equ	0xFDB
 10840                           fsr2h	equ	0xFDA
 10841                           fsr2l	equ	0xFD9
 10842                           status	equ	0xFD8
 10843                           
 10844 ;; *************** function _USBStdFeatureReqHandler *****************
 10845 ;; Defined at:
 10846 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;		None
 10849 ;; Auto vars:     Size  Location     Type
 10850 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10851 ;;		 -> NULL(0), BDT(48), 
 10852 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10853 ;;		 -> UEP0(1), 
 10854 ;;  current_ep_d    1   52[BANK0 ] struct .
 10855 ;; Return value:  Size  Location     Type
 10856 ;;                  1    wreg      void 
 10857 ;; Registers used:
 10858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10859 ;; Tracked objects:
 10860 ;;		On entry : 0/0
 10861 ;;		On exit  : 0/0
 10862 ;;		Unchanged: 0/0
 10863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10865 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10866 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10867 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10868 ;;Total ram usage:        6 bytes
 10869 ;; Hardware stack levels used:    1
 10870 ;; Hardware stack levels required when called:   15
 10871 ;; This function calls:
 10872 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10873 ;; This function is called by:
 10874 ;;		_USBCheckStdRequest
 10875 ;; This function uses a non-reentrant model
 10876 ;;
 10877                           
 10878                           	psect	text43
 10879  001360                     __ptext43:
 10880                           	opt stack 0
 10881  001360                     _USBStdFeatureReqHandler:
 10882                           	opt stack 8
 10883                           
 10884                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10885                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10886                           ;usb_device.c: 2778: unsigned char* pUEP;
 10887                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10888                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10889                           
 10890                           ;incstack = 0
 10891  001360  0104               	movlb	4	; () banked
 10892  001362  0532               	decf	50,w,b	;volatile
 10893  001364  A4D8               	btfss	status,2,c
 10894  001366  D011               	goto	l1826
 10895                           
 10896                           ; BSR set to: 4
 10897  001368  5130               	movf	48,w,b	;volatile
 10898  00136A  0B1F               	andlw	31
 10899  00136C  0900               	iorlw	0
 10900  00136E  A4D8               	btfss	status,2,c
 10901  001370  D00C               	goto	l1826
 10902                           
 10903                           ; BSR set to: 4
 10904                           ;usb_device.c: 2818: {
 10905                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10906  001372  0100               	movlb	0	; () banked
 10907  001374  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10911  001376  0E03               	movlw	3
 10912  001378  0104               	movlb	4	; () banked
 10913  00137A  1931               	xorwf	49,w,b	;volatile
 10914  00137C  A4D8               	btfss	status,2,c
 10915  00137E  D002               	goto	l1825
 10916                           
 10917                           ; BSR set to: 4
 10918                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10919  001380  0E01               	movlw	1
 10920  001382  D001               	goto	L5
 10921  001384                     l1825:
 10922                           
 10923                           ;usb_device.c: 2822: else
 10924                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10925                           
 10926                           ; BSR set to: 1
 10927  001384  0E00               	movlw	0
 10928  001386                     L5:
 10929  001386  0101               	movlb	1	; () banked
 10930  001388  6FE0               	movwf	_RemoteWakeup& (0+255),b
 10931  00138A                     l1826:
 10932                           
 10933                           ;usb_device.c: 2824: }
 10934                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10935                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10936                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10937                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10938                           
 10939                           ; BSR set to: 1
 10940  00138A  0104               	movlb	4	; () banked
 10941  00138C  5132               	movf	50,w,b	;volatile
 10942  00138E  A4D8               	btfss	status,2,c
 10943  001390  0012               	return	
 10944                           
 10945                           ; BSR set to: 4
 10946  001392  5130               	movf	48,w,b	;volatile
 10947  001394  0B1F               	andlw	31
 10948  001396  0A02               	xorlw	2
 10949  001398  A4D8               	btfss	status,2,c
 10950  00139A  0012               	return	
 10951                           
 10952                           ; BSR set to: 4
 10953  00139C  5134               	movf	52,w,b	;volatile
 10954  00139E  0B0F               	andlw	15
 10955  0013A0  0900               	iorlw	0
 10956  0013A2  B4D8               	btfsc	status,2,c
 10957  0013A4  0012               	return	
 10958                           
 10959                           ; BSR set to: 4
 10960  0013A6  5134               	movf	52,w,b	;volatile
 10961  0013A8  0B0F               	andlw	15
 10962  0013AA  0100               	movlb	0	; () banked
 10963  0013AC  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10964  0013AE  0E03               	movlw	3
 10965  0013B0  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10966  0013B2  0012               	return	
 10967                           
 10968                           ; BSR set to: 0
 10969  0013B4  0E20               	movlw	32
 10970  0013B6  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 10971  0013B8  A4D8               	btfss	status,2,c
 10972  0013BA  0012               	return	
 10973                           
 10974                           ; BSR set to: 0
 10975                           ;usb_device.c: 2831: {
 10976                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10977  0013BC  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10978                           
 10979                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10980  0013BE  0104               	movlb	4	; () banked
 10981  0013C0  BF34               	btfsc	52,7,b	;volatile
 10982  0013C2  D01C               	goto	l1828
 10983                           
 10984                           ; BSR set to: 4
 10985                           ;usb_device.c: 2838: {
 10986                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10987  0013C4  5134               	movf	52,w,b	;volatile
 10988  0013C6  0B0F               	andlw	15
 10989  0013C8  0100               	movlb	0	; () banked
 10990  0013CA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10991  0013CC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10992  0013CE  0D02               	mullw	2
 10993  0013D0  0E06               	movlw	low _pBDTEntryOut
 10994  0013D2  24F3               	addwf	prodl,w,c
 10995  0013D4  6ED9               	movwf	fsr2l,c
 10996  0013D6  0E03               	movlw	high _pBDTEntryOut
 10997  0013D8  20F4               	addwfc	prodh,w,c
 10998  0013DA  6EDA               	movwf	fsr2h,c
 10999  0013DC  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11000  0013E0  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11001                           
 11002                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 11003  0013E4  0104               	movlb	4	; () banked
 11004  0013E6  5134               	movf	52,w,b	;volatile
 11005  0013E8  0B0F               	andlw	15
 11006  0013EA  0100               	movlb	0	; () banked
 11007  0013EC  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11008  0013EE  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11009  0013F0  0D01               	mullw	1
 11010  0013F2  0ECF               	movlw	low _ep_data_out
 11011  0013F4  24F3               	addwf	prodl,w,c
 11012  0013F6  6ED9               	movwf	fsr2l,c
 11013  0013F8  0E02               	movlw	high _ep_data_out
 11014  0013FA  D01C               	goto	L6
 11015  0013FC                     l1828:
 11016                           
 11017                           ;usb_device.c: 2842: else
 11018                           ;usb_device.c: 2843: {
 11019                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11020                           
 11021                           ; BSR set to: 0
 11022  0013FC  0104               	movlb	4	; () banked
 11023  0013FE  5134               	movf	52,w,b	;volatile
 11024  001400  0B0F               	andlw	15
 11025  001402  0100               	movlb	0	; () banked
 11026  001404  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11027  001406  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11028  001408  0D02               	mullw	2
 11029  00140A  0EB6               	movlw	low _pBDTEntryIn
 11030  00140C  24F3               	addwf	prodl,w,c
 11031  00140E  6ED9               	movwf	fsr2l,c
 11032  001410  0E00               	movlw	high _pBDTEntryIn
 11033  001412  20F4               	addwfc	prodh,w,c
 11034  001414  6EDA               	movwf	fsr2h,c
 11035  001416  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11036  00141A  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11037                           
 11038                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 11039  00141E  0104               	movlb	4	; () banked
 11040  001420  5134               	movf	52,w,b	;volatile
 11041  001422  0B0F               	andlw	15
 11042  001424  0100               	movlb	0	; () banked
 11043  001426  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11044  001428  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11045  00142A  0D01               	mullw	1
 11046  00142C  0ED2               	movlw	low _ep_data_in
 11047  00142E  24F3               	addwf	prodl,w,c
 11048  001430  6ED9               	movwf	fsr2l,c
 11049  001432  0E02               	movlw	high _ep_data_in
 11050  001434                     L6:
 11051  001434  20F4               	addwfc	prodh,w,c
 11052  001436  6EDA               	movwf	fsr2h,c
 11053  001438  50DF               	movf	indf2,w,c
 11054  00143A  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 11055                           
 11056                           ; BSR set to: 0
 11057                           ;usb_device.c: 2846: }
 11058                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 11059                           
 11060                           ; BSR set to: 0
 11061  00143C  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 11062  00143E  D002               	goto	l1830
 11063                           
 11064                           ; BSR set to: 0
 11065                           ;usb_device.c: 2853: {
 11066                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 11067  001440  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 11068                           
 11069                           ;usb_device.c: 2855: }
 11070  001442  D001               	goto	l1831
 11071  001444                     l1830:
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;usb_device.c: 2856: else
 11075                           ;usb_device.c: 2857: {
 11076                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 11077                           
 11078                           ; BSR set to: 0
 11079  001444  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 11080  001446                     l1831:
 11081                           
 11082                           ; BSR set to: 0
 11083                           ;usb_device.c: 2859: }
 11084                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 11085                           
 11086                           ; BSR set to: 0
 11087  001446  0104               	movlb	4	; () banked
 11088  001448  BF34               	btfsc	52,7,b	;volatile
 11089  00144A  D00B               	goto	l1832
 11090                           
 11091                           ; BSR set to: 4
 11092                           ;usb_device.c: 2865: {
 11093                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11094  00144C  5134               	movf	52,w,b	;volatile
 11095  00144E  0B0F               	andlw	15
 11096  001450  0100               	movlb	0	; () banked
 11097  001452  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11098  001454  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11099  001456  0D02               	mullw	2
 11100  001458  0E06               	movlw	low _pBDTEntryOut
 11101  00145A  24F3               	addwf	prodl,w,c
 11102  00145C  6ED9               	movwf	fsr2l,c
 11103  00145E  0E03               	movlw	high _pBDTEntryOut
 11104  001460  D00B               	goto	L7
 11105  001462                     l1832:
 11106                           
 11107                           ;usb_device.c: 2868: else
 11108                           ;usb_device.c: 2869: {
 11109                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11110                           
 11111                           ; BSR set to: 0
 11112  001462  0104               	movlb	4	; () banked
 11113  001464  5134               	movf	52,w,b	;volatile
 11114  001466  0B0F               	andlw	15
 11115  001468  0100               	movlb	0	; () banked
 11116  00146A  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11117  00146C  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11118  00146E  0D02               	mullw	2
 11119  001470  0EB6               	movlw	low _pBDTEntryIn
 11120  001472  24F3               	addwf	prodl,w,c
 11121  001474  6ED9               	movwf	fsr2l,c
 11122  001476  0E00               	movlw	high _pBDTEntryIn
 11123  001478                     L7:
 11124  001478  20F4               	addwfc	prodh,w,c
 11125  00147A  6EDA               	movwf	fsr2h,c
 11126  00147C  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11127  001480  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11128                           
 11129                           ; BSR set to: 0
 11130                           ;usb_device.c: 2871: }
 11131                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11132                           
 11133                           ; BSR set to: 0
 11134  001484  0E03               	movlw	3
 11135  001486  0104               	movlb	4	; () banked
 11136  001488  1931               	xorwf	49,w,b	;volatile
 11137  00148A  A4D8               	btfss	status,2,c
 11138  00148C  D031               	goto	l1834
 11139                           
 11140                           ; BSR set to: 4
 11141                           ;usb_device.c: 2875: {
 11142                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11143  00148E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11144  001492  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11145  001496  0100               	movlb	0	; () banked
 11146  001498  AEDF               	btfss	indf2,7,c
 11147  00149A  D01D               	goto	l1837
 11148                           
 11149                           ; BSR set to: 0
 11150                           ;usb_device.c: 2877: {
 11151                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11152  00149C  0104               	movlb	4	; () banked
 11153  00149E  BF34               	btfsc	52,7,b	;volatile
 11154  0014A0  D00B               	goto	l1836
 11155                           
 11156                           ; BSR set to: 4
 11157                           ;usb_device.c: 2881: {
 11158                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11159  0014A2  5134               	movf	52,w,b	;volatile
 11160  0014A4  0B0F               	andlw	15
 11161  0014A6  0100               	movlb	0	; () banked
 11162  0014A8  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11163  0014AA  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11164  0014AC  0D01               	mullw	1
 11165  0014AE  0ECF               	movlw	low _ep_data_out
 11166  0014B0  24F3               	addwf	prodl,w,c
 11167  0014B2  6ED9               	movwf	fsr2l,c
 11168  0014B4  0E02               	movlw	high _ep_data_out
 11169  0014B6  D00B               	goto	L8
 11170  0014B8                     l1836:
 11171                           
 11172                           ;usb_device.c: 2884: else
 11173                           ;usb_device.c: 2885: {
 11174                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11175                           
 11176                           ; BSR set to: 2
 11177  0014B8  0104               	movlb	4	; () banked
 11178  0014BA  5134               	movf	52,w,b	;volatile
 11179  0014BC  0B0F               	andlw	15
 11180  0014BE  0100               	movlb	0	; () banked
 11181  0014C0  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11182  0014C2  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11183  0014C4  0D01               	mullw	1
 11184  0014C6  0ED2               	movlw	low _ep_data_in
 11185  0014C8  24F3               	addwf	prodl,w,c
 11186  0014CA  6ED9               	movwf	fsr2l,c
 11187  0014CC  0E02               	movlw	high _ep_data_in
 11188  0014CE                     L8:
 11189  0014CE  20F4               	addwfc	prodh,w,c
 11190  0014D0  6EDA               	movwf	fsr2h,c
 11191  0014D2  0102               	movlb	2	; () banked
 11192  0014D4  82DF               	bsf	indf2,1,c
 11193  0014D6                     l1837:
 11194                           
 11195                           ;usb_device.c: 2887: }
 11196                           ;usb_device.c: 2888: }
 11197                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11198                           
 11199                           ; BSR set to: 2
 11200                           
 11201                           ; BSR set to: 2
 11202  0014D6  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11203  0014DA  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11204  0014DE  0E00               	movlw	0
 11205  0014E0  84DB               	bsf	plusw2,2,c
 11206                           
 11207                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11208  0014E2  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11209  0014E6  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11210  0014EA  0E00               	movlw	0
 11211  0014EC  8EDB               	bsf	plusw2,7,c
 11212                           
 11213                           ;usb_device.c: 2893: }
 11214  0014EE  0012               	return	
 11215  0014F0                     l1834:
 11216                           
 11217                           ;usb_device.c: 2894: else
 11218                           ;usb_device.c: 2895: {
 11219                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11220  0014F0  0E04               	movlw	4
 11221  0014F2  0100               	movlb	0	; () banked
 11222  0014F4  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11226  0014F6  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11227  0014FA  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11228  0014FE  AEDF               	btfss	indf2,7,c
 11229  001500  D01B               	goto	l1839
 11230                           
 11231                           ; BSR set to: 0
 11232                           ;usb_device.c: 2902: {
 11233                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11234  001502  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11235  001506  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11236  00150A  0E7F               	movlw	127
 11237  00150C  16DF               	andwf	indf2,f,c
 11238                           
 11239                           ; BSR set to: 0
 11240                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11241  00150E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11242  001512  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11243  001516  0E00               	movlw	0
 11244  001518  8CDB               	bsf	plusw2,6,c
 11245                           
 11246                           ; BSR set to: 0
 11247                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11248  00151A  0E00               	movlw	0
 11249  00151C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11250  00151E  0E05               	movlw	5
 11251  001520  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11252  001522  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11253  001526  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11254  00152A  0E00               	movlw	0
 11255  00152C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11256  00152E  0E02               	movlw	2
 11257  001530  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11258  001532  ECF9  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11259                           
 11260                           ;usb_device.c: 2908: }
 11261  001536  D006               	goto	l1840
 11262  001538                     l1839:
 11263                           
 11264                           ;usb_device.c: 2909: else
 11265                           ;usb_device.c: 2910: {
 11266                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11267  001538  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11268  00153C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11269  001540  0E00               	movlw	0
 11270  001542  8CDB               	bsf	plusw2,6,c
 11271  001544                     l1840:
 11272                           
 11273                           ;usb_device.c: 2913: }
 11274                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11275  001544  0E04               	movlw	4
 11276  001546  0100               	movlb	0	; () banked
 11277  001548  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11278                           
 11279                           ; BSR set to: 0
 11280                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11281  00154A  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11282  00154C  D006               	goto	u12310
 11283                           
 11284                           ; BSR set to: 0
 11285  00154E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11286  001552  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11287  001556  AEDF               	btfss	indf2,7,c
 11288  001558  D033               	goto	l1841
 11289  00155A                     u12310:
 11290                           
 11291                           ; BSR set to: 0
 11292                           ;usb_device.c: 2924: {
 11293                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11294  00155A  0104               	movlb	4	; () banked
 11295  00155C  BF34               	btfsc	52,7,b	;volatile
 11296  00155E  D00B               	goto	l1844
 11297                           
 11298                           ; BSR set to: 4
 11299                           ;usb_device.c: 2926: {
 11300                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11301  001560  5134               	movf	52,w,b	;volatile
 11302  001562  0B0F               	andlw	15
 11303  001564  0100               	movlb	0	; () banked
 11304  001566  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11305  001568  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11306  00156A  0D01               	mullw	1
 11307  00156C  0ECF               	movlw	low _ep_data_out
 11308  00156E  24F3               	addwf	prodl,w,c
 11309  001570  6ED9               	movwf	fsr2l,c
 11310  001572  0E02               	movlw	high _ep_data_out
 11311  001574  D00B               	goto	L9
 11312  001576                     l1844:
 11313                           
 11314                           ;usb_device.c: 2929: else
 11315                           ;usb_device.c: 2930: {
 11316                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11317                           
 11318                           ; BSR set to: 2
 11319  001576  0104               	movlb	4	; () banked
 11320  001578  5134               	movf	52,w,b	;volatile
 11321  00157A  0B0F               	andlw	15
 11322  00157C  0100               	movlb	0	; () banked
 11323  00157E  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11324  001580  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11325  001582  0D01               	mullw	1
 11326  001584  0ED2               	movlw	low _ep_data_in
 11327  001586  24F3               	addwf	prodl,w,c
 11328  001588  6ED9               	movwf	fsr2l,c
 11329  00158A  0E02               	movlw	high _ep_data_in
 11330  00158C                     L9:
 11331  00158C  20F4               	addwfc	prodh,w,c
 11332  00158E  6EDA               	movwf	fsr2h,c
 11333  001590  0102               	movlb	2	; () banked
 11334  001592  92DF               	bcf	indf2,1,c
 11335                           
 11336                           ; BSR set to: 2
 11337                           ;usb_device.c: 2932: }
 11338                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11339                           
 11340                           ; BSR set to: 2
 11341  001594  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11342  001598  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11343  00159C  0E3B               	movlw	59
 11344  00159E  16DF               	andwf	indf2,f,c
 11345                           
 11346                           ; BSR set to: 2
 11347                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11348  0015A0  0E00               	movlw	0
 11349  0015A2  0100               	movlb	0	; () banked
 11350  0015A4  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11351  0015A6  0E05               	movlw	5
 11352  0015A8  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11353  0015AA  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11354  0015AE  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11355  0015B2  0E00               	movlw	0
 11356  0015B4  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11357  0015B6  0E02               	movlw	2
 11358  0015B8  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11359  0015BA  ECF9  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11360                           
 11361                           ;usb_device.c: 2938: }
 11362  0015BE  D006               	goto	l1846
 11363  0015C0                     l1841:
 11364                           
 11365                           ;usb_device.c: 2939: else
 11366                           ;usb_device.c: 2940: {
 11367                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11368  0015C0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11369  0015C4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11370  0015C8  0E3B               	movlw	59
 11371  0015CA  16DF               	andwf	indf2,f,c
 11372  0015CC                     l1846:
 11373                           
 11374                           ;usb_device.c: 2943: }
 11375                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11376  0015CC  0104               	movlb	4	; () banked
 11377  0015CE  5134               	movf	52,w,b	;volatile
 11378  0015D0  0B0F               	andlw	15
 11379  0015D2  0100               	movlb	0	; () banked
 11380  0015D4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11381  0015D6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11382  0015D8  0D01               	mullw	1
 11383  0015DA  0E26               	movlw	38
 11384  0015DC  24F3               	addwf	prodl,w,c
 11385  0015DE  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11386  0015E0  0E0F               	movlw	15
 11387  0015E2  20F4               	addwfc	prodh,w,c
 11388  0015E4  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11389                           
 11390                           ; BSR set to: 0
 11391                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11392  0015E6  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11393  0015EA  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11394  0015EE  0EFE               	movlw	254
 11395  0015F0  16DF               	andwf	indf2,f,c
 11396                           
 11397                           ; BSR set to: 0
 11398  0015F2  0012               	return	
 11399  0015F4                     __end_of_USBStdFeatureReqHandler:
 11400                           	opt stack 0
 11401                           tosu	equ	0xFFF
 11402                           tosh	equ	0xFFE
 11403                           tosl	equ	0xFFD
 11404                           pclath	equ	0xFFA
 11405                           tblptru	equ	0xFF8
 11406                           tblptrh	equ	0xFF7
 11407                           tblptrl	equ	0xFF6
 11408                           tablat	equ	0xFF5
 11409                           prodh	equ	0xFF4
 11410                           prodl	equ	0xFF3
 11411                           intcon	equ	0xFF2
 11412                           intcon2	equ	0xFF1
 11413                           intcon3	equ	0xFF0
 11414                           indf0	equ	0xFEF
 11415                           postinc0	equ	0xFEE
 11416                           plusw0	equ	0xFEB
 11417                           fsr0h	equ	0xFEA
 11418                           fsr0l	equ	0xFE9
 11419                           wreg	equ	0xFE8
 11420                           postinc1	equ	0xFE6
 11421                           postdec1	equ	0xFE5
 11422                           fsr1h	equ	0xFE2
 11423                           fsr1l	equ	0xFE1
 11424                           indf2	equ	0xFDF
 11425                           postinc2	equ	0xFDE
 11426                           postdec2	equ	0xFDD
 11427                           plusw2	equ	0xFDB
 11428                           fsr2h	equ	0xFDA
 11429                           fsr2l	equ	0xFD9
 11430                           status	equ	0xFD8
 11431                           
 11432 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11433 ;; Defined at:
 11434 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11435 ;; Parameters:    Size  Location     Type
 11436 ;;  event           2   41[BANK0 ] enum E8367
 11437 ;;  pdata           2   43[BANK0 ] PTR void 
 11438 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11439 ;;  size            2   45[BANK0 ] unsigned int 
 11440 ;; Auto vars:     Size  Location     Type
 11441 ;;		None
 11442 ;; Return value:  Size  Location     Type
 11443 ;;                  1    wreg      unsigned char 
 11444 ;; Registers used:
 11445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11446 ;; Tracked objects:
 11447 ;;		On entry : 0/0
 11448 ;;		On exit  : 0/0
 11449 ;;		Unchanged: 0/0
 11450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11451 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11453 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11454 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11455 ;;Total ram usage:        8 bytes
 11456 ;; Hardware stack levels used:    1
 11457 ;; Hardware stack levels required when called:   14
 11458 ;; This function calls:
 11459 ;;		_CDCInitEP
 11460 ;;		_USBCheckCDCRequest
 11461 ;; This function is called by:
 11462 ;;		_USBDeviceTasks
 11463 ;;		_USBStdSetCfgHandler
 11464 ;;		_USBSuspend
 11465 ;;		_USBWakeFromSuspend
 11466 ;;		_USBCtrlTrfSetupHandler
 11467 ;;		_USBCheckStdRequest
 11468 ;;		_USBStdFeatureReqHandler
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text44
 11473  0059F2                     __ptext44:
 11474                           	opt stack 0
 11475  0059F2                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11476                           	opt stack 12
 11477                           
 11478                           ;usb_device_mgr.c: 106: switch( (int) event )
 11479                           
 11480                           ;incstack = 0
 11481  0059F2  D006               	goto	l2000
 11482  0059F4                     
 11483                           ;usb_device_mgr.c: 134: CDCInitEP();
 11484  0059F4  EC8F  F02B         	call	_CDCInitEP	;wreg free
 11485                           
 11486                           ;usb_device_mgr.c: 142: break;
 11487                           
 11488                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11489                           
 11490                           ;usb_device_mgr.c: 139: break;
 11491  0059F8  0012               	return	
 11492  0059FA                     
 11493                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11494  0059FA  EC96  F023         	call	_USBCheckCDCRequest	;wreg free
 11495                           
 11496                           ;usb_device_mgr.c: 163: }
 11497                           
 11498                           ;usb_device_mgr.c: 162: break;
 11499                           
 11500                           ;usb_device_mgr.c: 161: default:
 11501                           
 11502                           ;usb_device_mgr.c: 159: break;
 11503                           
 11504                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11505                           
 11506                           ;usb_device_mgr.c: 156: break;
 11507                           
 11508                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11509                           
 11510                           ;usb_device_mgr.c: 153: break;
 11511  0059FE  0012               	return	
 11512  005A00                     l2000:
 11513  005A00  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11514  005A04  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11515                           
 11516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11517                           ; Switch size 1, requested type "space"
 11518                           ; Number of cases is 2, Range of values is 0 to 127
 11519                           ; switch strategies available:
 11520                           ; Name         Instructions Cycles
 11521                           ; simple_byte            7     4 (average)
 11522                           ;	Chosen strategy is simple_byte
 11523  005A08  0100               	movlb	0	; () banked
 11524  005A0A  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11525  005A0C  0A00               	xorlw	0	; case 0
 11526  005A0E  B4D8               	btfsc	status,2,c
 11527  005A10  D004               	goto	l17276
 11528  005A12  0A7F               	xorlw	127	; case 127
 11529  005A14  A4D8               	btfss	status,2,c
 11530  005A16  0012               	return	
 11531  005A18  D018               	goto	l17278
 11532  005A1A                     l17276:
 11533                           
 11534                           ; BSR set to: 0
 11535                           ; Switch size 1, requested type "space"
 11536                           ; Number of cases is 8, Range of values is 1 to 117
 11537                           ; switch strategies available:
 11538                           ; Name         Instructions Cycles
 11539                           ; simple_byte           25    13 (average)
 11540                           ;	Chosen strategy is simple_byte
 11541  005A1A  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11542  005A1C  0A01               	xorlw	1	; case 1
 11543  005A1E  B4D8               	btfsc	status,2,c
 11544  005A20  D7E9               	goto	l2006
 11545  005A22  0A03               	xorlw	3	; case 2
 11546  005A24  B4D8               	btfsc	status,2,c
 11547  005A26  0012               	return	
 11548  005A28  0A01               	xorlw	1	; case 3
 11549  005A2A  B4D8               	btfsc	status,2,c
 11550  005A2C  D7E6               	goto	l2008
 11551  005A2E  0A06               	xorlw	6	; case 5
 11552  005A30  B4D8               	btfsc	status,2,c
 11553  005A32  0012               	return	
 11554  005A34  0A77               	xorlw	119	; case 114
 11555  005A36  B4D8               	btfsc	status,2,c
 11556  005A38  0012               	return	
 11557  005A3A  0A01               	xorlw	1	; case 115
 11558  005A3C  B4D8               	btfsc	status,2,c
 11559  005A3E  0012               	return	
 11560  005A40  0A07               	xorlw	7	; case 116
 11561  005A42  B4D8               	btfsc	status,2,c
 11562  005A44  0012               	return	
 11563  005A46  0A01               	xorlw	1	; case 117
 11564  005A48  0012               	return	
 11565  005A4A                     l17278:
 11566                           
 11567                           ; BSR set to: 0
 11568                           ; Switch size 1, requested type "space"
 11569                           ; Number of cases is 1, Range of values is 255 to 255
 11570                           ; switch strategies available:
 11571                           ; Name         Instructions Cycles
 11572                           ; simple_byte            4     3 (average)
 11573                           ;	Chosen strategy is simple_byte
 11574  005A4A  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11575  005A4C  0AFF               	xorlw	255	; case 255
 11576  005A4E  0012               	return	
 11577  005A50                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11578                           	opt stack 0
 11579                           tosu	equ	0xFFF
 11580                           tosh	equ	0xFFE
 11581                           tosl	equ	0xFFD
 11582                           pclath	equ	0xFFA
 11583                           tblptru	equ	0xFF8
 11584                           tblptrh	equ	0xFF7
 11585                           tblptrl	equ	0xFF6
 11586                           tablat	equ	0xFF5
 11587                           prodh	equ	0xFF4
 11588                           prodl	equ	0xFF3
 11589                           intcon	equ	0xFF2
 11590                           intcon2	equ	0xFF1
 11591                           intcon3	equ	0xFF0
 11592                           indf0	equ	0xFEF
 11593                           postinc0	equ	0xFEE
 11594                           plusw0	equ	0xFEB
 11595                           fsr0h	equ	0xFEA
 11596                           fsr0l	equ	0xFE9
 11597                           wreg	equ	0xFE8
 11598                           postinc1	equ	0xFE6
 11599                           postdec1	equ	0xFE5
 11600                           fsr1h	equ	0xFE2
 11601                           fsr1l	equ	0xFE1
 11602                           indf2	equ	0xFDF
 11603                           postinc2	equ	0xFDE
 11604                           postdec2	equ	0xFDD
 11605                           plusw2	equ	0xFDB
 11606                           fsr2h	equ	0xFDA
 11607                           fsr2l	equ	0xFD9
 11608                           status	equ	0xFD8
 11609                           
 11610 ;; *************** function _USBCheckCDCRequest *****************
 11611 ;; Defined at:
 11612 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11613 ;; Parameters:    Size  Location     Type
 11614 ;;		None
 11615 ;; Auto vars:     Size  Location     Type
 11616 ;;		None
 11617 ;; Return value:  Size  Location     Type
 11618 ;;                  1    wreg      void 
 11619 ;; Registers used:
 11620 ;;		wreg, status,2, status,0
 11621 ;; Tracked objects:
 11622 ;;		On entry : 0/0
 11623 ;;		On exit  : 0/0
 11624 ;;		Unchanged: 0/0
 11625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11630 ;;Total ram usage:        0 bytes
 11631 ;; Hardware stack levels used:    1
 11632 ;; Hardware stack levels required when called:   11
 11633 ;; This function calls:
 11634 ;;		Nothing
 11635 ;; This function is called by:
 11636 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11637 ;; This function uses a non-reentrant model
 11638 ;;
 11639                           
 11640                           	psect	text45
 11641  00472C                     __ptext45:
 11642                           	opt stack 0
 11643  00472C                     _USBCheckCDCRequest:
 11644                           	opt stack 14
 11645                           
 11646                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11647                           
 11648                           ;incstack = 0
 11649  00472C  0104               	movlb	4	; () banked
 11650  00472E  5130               	movf	48,w,b	;volatile
 11651  004730  0B1F               	andlw	31
 11652  004732  06E8               	decf	wreg,f,c
 11653  004734  A4D8               	btfss	status,2,c
 11654  004736  0012               	return	
 11655                           
 11656                           ; BSR set to: 4
 11657                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11658                           
 11659                           ; BSR set to: 4
 11660                           
 11661                           ; BSR set to: 4
 11662  004738  3930               	swapf	48,w,b	;volatile
 11663  00473A  32E8               	rrcf	wreg,f,c
 11664  00473C  0B03               	andlw	3
 11665  00473E  06E8               	decf	wreg,f,c
 11666  004740  A4D8               	btfss	status,2,c
 11667  004742  0012               	return	
 11668                           
 11669                           ; BSR set to: 4
 11670                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11671                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11672                           
 11673                           ; BSR set to: 4
 11674                           
 11675                           ; BSR set to: 4
 11676  004744  5134               	movf	52,w,b	;volatile
 11677  004746  B4D8               	btfsc	status,2,c
 11678  004748  D037               	goto	l1902
 11679                           
 11680                           ; BSR set to: 4
 11681  00474A  0534               	decf	52,w,b	;volatile
 11682  00474C  A4D8               	btfss	status,2,c
 11683  00474E  0012               	return	
 11684  004750  D033               	goto	l1902
 11685  004752                     
 11686                           ; BSR set to: 4
 11687                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11688                           
 11689                           ; BSR set to: 4
 11690  004752  0E7A               	movlw	low _dummy_encapsulated_cmd_response
 11691  004754  0100               	movlb	0	; () banked
 11692  004756  6FB0               	movwf	_inPipes& (0+255),b
 11693  004758  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11694  00475A  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11695                           
 11696                           ; BSR set to: 0
 11697                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11698  00475C  0E00               	movlw	0
 11699  00475E  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11700  004760  0E08               	movlw	8
 11701  004762  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11702                           
 11703                           ; BSR set to: 0
 11704                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11705  004764  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11706                           
 11707                           ; BSR set to: 0
 11708                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11709  004766  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11710                           
 11711                           ;usb_device_cdc.c: 178: break;
 11712  004768  0012               	return	
 11713  00476A                     
 11714                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11715                           
 11716                           ; BSR set to: 0
 11717  00476A  0E7A               	movlw	low _dummy_encapsulated_cmd_response
 11718  00476C  0100               	movlb	0	; () banked
 11719  00476E  6FB0               	movwf	_inPipes& (0+255),b
 11720  004770  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11721  004772  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11722                           
 11723                           ; BSR set to: 0
 11724                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11725  004774  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11726                           
 11727                           ;usb_device_cdc.c: 183: break;
 11728  004776  0012               	return	
 11729  004778                     l1906:
 11730                           
 11731                           ; BSR set to: 4
 11732                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11733  004778  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11734  00477C  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11735                           
 11736                           ; BSR set to: 4
 11737                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11738  004780  0E82               	movlw	low _line_coding
 11739  004782  0101               	movlb	1	; () banked
 11740  004784  6FC9               	movwf	_outPipes& (0+255),b
 11741  004786  0E03               	movlw	high _line_coding
 11742  004788  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11743                           
 11744                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11745  00478A  0E00               	movlw	0
 11746  00478C  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11747  00478E  0E00               	movlw	0
 11748  004790  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11749                           
 11750                           ; BSR set to: 1
 11751                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11752  004792  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11753                           
 11754                           ;usb_device_cdc.c: 192: break;
 11755  004794  0012               	return	
 11756  004796                     
 11757                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11758                           
 11759                           ; BSR set to: 1
 11760  004796  0E82               	movlw	low _line_coding
 11761  004798  0100               	movlb	0	; () banked
 11762  00479A  6FB0               	movwf	_inPipes& (0+255),b
 11763  00479C  0E03               	movlw	high _line_coding
 11764  00479E  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11765                           
 11766                           ; BSR set to: 0
 11767  0047A0  0E00               	movlw	0
 11768  0047A2  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11769  0047A4  0E07               	movlw	7
 11770  0047A6  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11771                           
 11772                           ; BSR set to: 0
 11773  0047A8  0EC1               	movlw	193
 11774  0047AA  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11775                           
 11776                           ;usb_device_cdc.c: 199: break;
 11777  0047AC  0012               	return	
 11778  0047AE                     l1908:
 11779                           
 11780                           ; BSR set to: 4
 11781                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11782  0047AE  C432 F2EE          	movff	1074,_control_signal_bitmap	;volatile
 11783                           
 11784                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11785  0047B2  0100               	movlb	0	; () banked
 11786  0047B4  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11787                           
 11788                           ; BSR set to: 0
 11789                           ;usb_device_cdc.c: 261: }
 11790                           
 11791                           ; BSR set to: 0
 11792                           ;usb_device_cdc.c: 260: break;
 11793                           
 11794                           ;usb_device_cdc.c: 259: default:
 11795                           
 11796                           ;usb_device_cdc.c: 235: break;
 11797  0047B6  0012               	return	
 11798  0047B8                     l1902:
 11799                           
 11800                           ; BSR set to: 0
 11801  0047B8  0104               	movlb	4	; () banked
 11802  0047BA  5131               	movf	49,w,b	;volatile
 11803                           
 11804                           ; Switch size 1, requested type "space"
 11805                           ; Number of cases is 5, Range of values is 0 to 34
 11806                           ; switch strategies available:
 11807                           ; Name         Instructions Cycles
 11808                           ; simple_byte           16     9 (average)
 11809                           ;	Chosen strategy is simple_byte
 11810  0047BC  0A00               	xorlw	0	; case 0
 11811  0047BE  B4D8               	btfsc	status,2,c
 11812  0047C0  D7C8               	goto	l1903
 11813  0047C2  0A01               	xorlw	1	; case 1
 11814  0047C4  B4D8               	btfsc	status,2,c
 11815  0047C6  D7D1               	goto	l1905
 11816  0047C8  0A21               	xorlw	33	; case 32
 11817  0047CA  B4D8               	btfsc	status,2,c
 11818  0047CC  D7D5               	goto	l1906
 11819  0047CE  0A01               	xorlw	1	; case 33
 11820  0047D0  B4D8               	btfsc	status,2,c
 11821  0047D2  D7E1               	goto	l1907
 11822  0047D4  0A03               	xorlw	3	; case 34
 11823  0047D6  A4D8               	btfss	status,2,c
 11824  0047D8  0012               	return	
 11825  0047DA  D7E9               	goto	l1908
 11826  0047DC                     __end_of_USBCheckCDCRequest:
 11827                           	opt stack 0
 11828                           tosu	equ	0xFFF
 11829                           tosh	equ	0xFFE
 11830                           tosl	equ	0xFFD
 11831                           pclath	equ	0xFFA
 11832                           tblptru	equ	0xFF8
 11833                           tblptrh	equ	0xFF7
 11834                           tblptrl	equ	0xFF6
 11835                           tablat	equ	0xFF5
 11836                           prodh	equ	0xFF4
 11837                           prodl	equ	0xFF3
 11838                           intcon	equ	0xFF2
 11839                           intcon2	equ	0xFF1
 11840                           intcon3	equ	0xFF0
 11841                           indf0	equ	0xFEF
 11842                           postinc0	equ	0xFEE
 11843                           plusw0	equ	0xFEB
 11844                           fsr0h	equ	0xFEA
 11845                           fsr0l	equ	0xFE9
 11846                           wreg	equ	0xFE8
 11847                           postinc1	equ	0xFE6
 11848                           postdec1	equ	0xFE5
 11849                           fsr1h	equ	0xFE2
 11850                           fsr1l	equ	0xFE1
 11851                           indf2	equ	0xFDF
 11852                           postinc2	equ	0xFDE
 11853                           postdec2	equ	0xFDD
 11854                           plusw2	equ	0xFDB
 11855                           fsr2h	equ	0xFDA
 11856                           fsr2l	equ	0xFD9
 11857                           status	equ	0xFD8
 11858                           
 11859 ;; *************** function _CDCInitEP *****************
 11860 ;; Defined at:
 11861 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;		None
 11864 ;; Auto vars:     Size  Location     Type
 11865 ;;		None
 11866 ;; Return value:  Size  Location     Type
 11867 ;;                  1    wreg      void 
 11868 ;; Registers used:
 11869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11870 ;; Tracked objects:
 11871 ;;		On entry : 0/0
 11872 ;;		On exit  : 0/0
 11873 ;;		Unchanged: 0/0
 11874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11879 ;;Total ram usage:        0 bytes
 11880 ;; Hardware stack levels used:    1
 11881 ;; Hardware stack levels required when called:   13
 11882 ;; This function calls:
 11883 ;;		_USBEnableEndpoint
 11884 ;;		_USBTransferOnePacket
 11885 ;; This function is called by:
 11886 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11887 ;; This function uses a non-reentrant model
 11888 ;;
 11889                           
 11890                           	psect	text46
 11891  00571E                     __ptext46:
 11892                           	opt stack 0
 11893  00571E                     _CDCInitEP:
 11894                           	opt stack 12
 11895                           
 11896                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11897                           
 11898                           ;incstack = 0
 11899  00571E  0E80               	movlw	128
 11900  005720  0103               	movlb	3	; () banked
 11901  005722  6F82               	movwf	_line_coding& (0+255),b
 11902  005724  0E25               	movlw	37
 11903  005726  6F83               	movwf	(_line_coding+1)& (0+255),b
 11904  005728  0E00               	movlw	0
 11905  00572A  6F84               	movwf	(_line_coding+2)& (0+255),b
 11906  00572C  0E00               	movlw	0
 11907  00572E  6F85               	movwf	(_line_coding+3)& (0+255),b
 11908                           
 11909                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11910  005730  0E00               	movlw	0
 11911  005732  6F86               	movwf	(_line_coding+4)& (0+255),b
 11912                           
 11913                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11914  005734  0E00               	movlw	0
 11915  005736  6F87               	movwf	(_line_coding+5)& (0+255),b
 11916                           
 11917                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11918  005738  0E08               	movlw	8
 11919  00573A  6F88               	movwf	(_line_coding+6)& (0+255),b
 11920                           
 11921                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11922  00573C  0E00               	movlw	0
 11923  00573E  0100               	movlb	0	; () banked
 11924  005740  6FC9               	movwf	_cdc_rx_len& (0+255),b
 11925                           
 11926                           ; BSR set to: 0
 11927                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11928  005742  0E1A               	movlw	26
 11929  005744  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11930  005746  0E01               	movlw	1
 11931  005748  EC4A  F031         	call	_USBEnableEndpoint
 11932                           
 11933                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11934  00574C  0E1E               	movlw	30
 11935  00574E  0100               	movlb	0	; () banked
 11936  005750  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11937  005752  0E02               	movlw	2
 11938  005754  EC4A  F031         	call	_USBEnableEndpoint
 11939                           
 11940                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11941  005758  0E00               	movlw	0
 11942  00575A  0100               	movlb	0	; () banked
 11943  00575C  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11944  00575E  0E00               	movlw	low _cdc_data_rx
 11945  005760  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11946  005762  0E05               	movlw	high _cdc_data_rx
 11947  005764  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11948  005766  0E40               	movlw	64
 11949  005768  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11950  00576A  0E02               	movlw	2
 11951  00576C  EC81  F022         	call	_USBTransferOnePacket
 11952  005770  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11953  005774  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11954                           
 11955                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11956  005778  0E00               	movlw	0
 11957  00577A  0101               	movlb	1	; () banked
 11958  00577C  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11959  00577E  0E00               	movlw	0
 11960  005780  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11961                           
 11962                           ; BSR set to: 1
 11963                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11964  005782  0E00               	movlw	0
 11965  005784  0100               	movlb	0	; () banked
 11966  005786  6FC8               	movwf	_cdc_trf_state& (0+255),b
 11967                           
 11968                           ; BSR set to: 0
 11969  005788  0012               	return		;funcret
 11970  00578A                     __end_of_CDCInitEP:
 11971                           	opt stack 0
 11972                           tosu	equ	0xFFF
 11973                           tosh	equ	0xFFE
 11974                           tosl	equ	0xFFD
 11975                           pclath	equ	0xFFA
 11976                           tblptru	equ	0xFF8
 11977                           tblptrh	equ	0xFF7
 11978                           tblptrl	equ	0xFF6
 11979                           tablat	equ	0xFF5
 11980                           prodh	equ	0xFF4
 11981                           prodl	equ	0xFF3
 11982                           intcon	equ	0xFF2
 11983                           intcon2	equ	0xFF1
 11984                           intcon3	equ	0xFF0
 11985                           indf0	equ	0xFEF
 11986                           postinc0	equ	0xFEE
 11987                           plusw0	equ	0xFEB
 11988                           fsr0h	equ	0xFEA
 11989                           fsr0l	equ	0xFE9
 11990                           wreg	equ	0xFE8
 11991                           postinc1	equ	0xFE6
 11992                           postdec1	equ	0xFE5
 11993                           fsr1h	equ	0xFE2
 11994                           fsr1l	equ	0xFE1
 11995                           indf2	equ	0xFDF
 11996                           postinc2	equ	0xFDE
 11997                           postdec2	equ	0xFDD
 11998                           plusw2	equ	0xFDB
 11999                           fsr2h	equ	0xFDA
 12000                           fsr2l	equ	0xFD9
 12001                           status	equ	0xFD8
 12002                           
 12003 ;; *************** function _USBEnableEndpoint *****************
 12004 ;; Defined at:
 12005 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12006 ;; Parameters:    Size  Location     Type
 12007 ;;  ep              1    wreg     unsigned char 
 12008 ;;  options         1   37[BANK0 ] unsigned char 
 12009 ;; Auto vars:     Size  Location     Type
 12010 ;;  ep              1   40[BANK0 ] unsigned char 
 12011 ;;  p               2   38[BANK0 ] PTR unsigned char 
 12012 ;;		 -> UEP0(1), 
 12013 ;; Return value:  Size  Location     Type
 12014 ;;                  1    wreg      void 
 12015 ;; Registers used:
 12016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12017 ;; Tracked objects:
 12018 ;;		On entry : 0/0
 12019 ;;		On exit  : 0/0
 12020 ;;		Unchanged: 0/0
 12021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12022 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12023 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12025 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12026 ;;Total ram usage:        4 bytes
 12027 ;; Hardware stack levels used:    1
 12028 ;; Hardware stack levels required when called:   12
 12029 ;; This function calls:
 12030 ;;		_USBConfigureEndpoint
 12031 ;; This function is called by:
 12032 ;;		_CDCInitEP
 12033 ;; This function uses a non-reentrant model
 12034 ;;
 12035                           
 12036                           	psect	text47
 12037  006294                     __ptext47:
 12038                           	opt stack 0
 12039  006294                     _USBEnableEndpoint:
 12040                           	opt stack 12
 12041                           
 12042                           ; BSR set to: 0
 12043                           ;incstack = 0
 12044                           ;USBEnableEndpoint@ep stored from wreg
 12045  006294  0100               	movlb	0	; () banked
 12046  006296  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 12047                           
 12048                           ;usb_device.c: 898: unsigned char* p;
 12049                           ;usb_device.c: 902: if(options & 0x04)
 12050  006298  0100               	movlb	0	; () banked
 12051  00629A  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 12052  00629C  D005               	goto	l1643
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;usb_device.c: 903: {
 12056                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 12057  00629E  0E00               	movlw	0
 12058  0062A0  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12059  0062A2  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12060  0062A4  EC7F  F026         	call	_USBConfigureEndpoint
 12061  0062A8                     l1643:
 12062                           
 12063                           ;usb_device.c: 905: }
 12064                           ;usb_device.c: 906: if(options & 0x02)
 12065  0062A8  0100               	movlb	0	; () banked
 12066  0062AA  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 12067  0062AC  D005               	goto	l1644
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;usb_device.c: 907: {
 12071                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 12072  0062AE  0E01               	movlw	1
 12073  0062B0  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12074  0062B2  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12075  0062B4  EC7F  F026         	call	_USBConfigureEndpoint
 12076  0062B8                     l1644:
 12077                           
 12078                           ;usb_device.c: 909: }
 12079                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 12080  0062B8  0100               	movlb	0	; () banked
 12081  0062BA  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12082  0062BC  0D01               	mullw	1
 12083  0062BE  0E26               	movlw	38
 12084  0062C0  24F3               	addwf	prodl,w,c
 12085  0062C2  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 12086  0062C4  0E0F               	movlw	15
 12087  0062C6  20F4               	addwfc	prodh,w,c
 12088  0062C8  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;usb_device.c: 919: *p = options;
 12092  0062CA  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 12093  0062CE  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 12094  0062D2  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 12095                           
 12096                           ; BSR set to: 0
 12097  0062D6  0012               	return		;funcret
 12098  0062D8                     __end_of_USBEnableEndpoint:
 12099                           	opt stack 0
 12100                           tosu	equ	0xFFF
 12101                           tosh	equ	0xFFE
 12102                           tosl	equ	0xFFD
 12103                           pclath	equ	0xFFA
 12104                           tblptru	equ	0xFF8
 12105                           tblptrh	equ	0xFF7
 12106                           tblptrl	equ	0xFF6
 12107                           tablat	equ	0xFF5
 12108                           prodh	equ	0xFF4
 12109                           prodl	equ	0xFF3
 12110                           intcon	equ	0xFF2
 12111                           intcon2	equ	0xFF1
 12112                           intcon3	equ	0xFF0
 12113                           indf0	equ	0xFEF
 12114                           postinc0	equ	0xFEE
 12115                           plusw0	equ	0xFEB
 12116                           fsr0h	equ	0xFEA
 12117                           fsr0l	equ	0xFE9
 12118                           wreg	equ	0xFE8
 12119                           postinc1	equ	0xFE6
 12120                           postdec1	equ	0xFE5
 12121                           fsr1h	equ	0xFE2
 12122                           fsr1l	equ	0xFE1
 12123                           indf2	equ	0xFDF
 12124                           postinc2	equ	0xFDE
 12125                           postdec2	equ	0xFDD
 12126                           plusw2	equ	0xFDB
 12127                           fsr2h	equ	0xFDA
 12128                           fsr2l	equ	0xFD9
 12129                           status	equ	0xFD8
 12130                           
 12131 ;; *************** function _USBConfigureEndpoint *****************
 12132 ;; Defined at:
 12133 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12134 ;; Parameters:    Size  Location     Type
 12135 ;;  EPNum           1    wreg     unsigned char 
 12136 ;;  direction       1   29[BANK0 ] unsigned char 
 12137 ;; Auto vars:     Size  Location     Type
 12138 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12139 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12140 ;;		 -> BDT(48), 
 12141 ;; Return value:  Size  Location     Type
 12142 ;;                  1    wreg      void 
 12143 ;; Registers used:
 12144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12145 ;; Tracked objects:
 12146 ;;		On entry : 0/0
 12147 ;;		On exit  : 0/0
 12148 ;;		Unchanged: 0/0
 12149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12150 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12151 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12152 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12153 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12154 ;;Total ram usage:        8 bytes
 12155 ;; Hardware stack levels used:    1
 12156 ;; Hardware stack levels required when called:   11
 12157 ;; This function calls:
 12158 ;;		Nothing
 12159 ;; This function is called by:
 12160 ;;		_USBEnableEndpoint
 12161 ;; This function uses a non-reentrant model
 12162 ;;
 12163                           
 12164                           	psect	text48
 12165  004CFE                     __ptext48:
 12166                           	opt stack 0
 12167  004CFE                     _USBConfigureEndpoint:
 12168                           	opt stack 12
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;incstack = 0
 12172                           ;USBConfigureEndpoint@EPNum stored from wreg
 12173  004CFE  0100               	movlb	0	; () banked
 12174  004D00  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12175                           
 12176                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12177                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12178  004D02  0E00               	movlw	0
 12179  004D04  0100               	movlb	0	; () banked
 12180  004D06  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12181  004D08  0E04               	movlw	4
 12182  004D0A  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12183                           
 12184                           ; BSR set to: 0
 12185                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12186  004D0C  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12187  004D0E  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12188  004D10  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12189  004D12  90D8               	bcf	status,0,c
 12190  004D14  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12191  004D16  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12192  004D18  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12193  004D1A  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12194  004D1C  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12195  004D1E  90D8               	bcf	status,0,c
 12196  004D20  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12197  004D22  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12198  004D24  90D8               	bcf	status,0,c
 12199  004D26  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12200  004D28  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12201  004D2A  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12202  004D2C  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12203  004D2E  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12204  004D30  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12205  004D32  90D8               	bcf	status,0,c
 12206  004D34  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12207  004D36  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12208  004D38  90D8               	bcf	status,0,c
 12209  004D3A  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12210  004D3C  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12211  004D3E  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12212  004D40  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12213  004D42  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12214  004D44  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12215                           
 12216                           ; BSR set to: 0
 12217                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12218  004D46  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12219  004D4A  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12220  004D4E  9EDF               	bcf	indf2,7,c
 12221                           
 12222                           ; BSR set to: 0
 12223                           ;usb_device.c: 1575: if(direction == 0)
 12224  004D50  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12225  004D52  A4D8               	btfss	status,2,c
 12226  004D54  D007               	goto	l1679
 12227                           
 12228                           ; BSR set to: 0
 12229                           ;usb_device.c: 1576: {
 12230                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12231  004D56  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12232  004D58  0D02               	mullw	2
 12233  004D5A  0E06               	movlw	low _pBDTEntryOut
 12234  004D5C  24F3               	addwf	prodl,w,c
 12235  004D5E  6ED9               	movwf	fsr2l,c
 12236  004D60  0E03               	movlw	high _pBDTEntryOut
 12237  004D62  D006               	goto	L10
 12238  004D64                     l1679:
 12239                           
 12240                           ; BSR set to: 0
 12241                           ;usb_device.c: 1579: else
 12242                           ;usb_device.c: 1580: {
 12243                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12244                           
 12245                           ; BSR set to: 0
 12246  004D64  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12247  004D66  0D02               	mullw	2
 12248  004D68  0EB6               	movlw	low _pBDTEntryIn
 12249  004D6A  24F3               	addwf	prodl,w,c
 12250  004D6C  6ED9               	movwf	fsr2l,c
 12251  004D6E  0E00               	movlw	high _pBDTEntryIn
 12252  004D70                     L10:
 12253  004D70  20F4               	addwfc	prodh,w,c
 12254  004D72  6EDA               	movwf	fsr2h,c
 12255  004D74  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12256  004D78  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12257                           
 12258                           ; BSR set to: 0
 12259                           ;usb_device.c: 1582: }
 12260                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12261                           
 12262                           ; BSR set to: 0
 12263  004D7C  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12264  004D80  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12265  004D84  9CDF               	bcf	indf2,6,c
 12266                           
 12267                           ; BSR set to: 0
 12268                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12269  004D86  EE20 F004          	lfsr	2,4
 12270  004D8A  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12271  004D8C  26D9               	addwf	fsr2l,f,c
 12272  004D8E  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12273  004D90  22DA               	addwfc	fsr2h,f,c
 12274  004D92  8CDF               	bsf	indf2,6,c
 12275                           
 12276                           ; BSR set to: 0
 12277  004D94  0012               	return		;funcret
 12278  004D96                     __end_of_USBConfigureEndpoint:
 12279                           	opt stack 0
 12280                           tosu	equ	0xFFF
 12281                           tosh	equ	0xFFE
 12282                           tosl	equ	0xFFD
 12283                           pclath	equ	0xFFA
 12284                           tblptru	equ	0xFF8
 12285                           tblptrh	equ	0xFF7
 12286                           tblptrl	equ	0xFF6
 12287                           tablat	equ	0xFF5
 12288                           prodh	equ	0xFF4
 12289                           prodl	equ	0xFF3
 12290                           intcon	equ	0xFF2
 12291                           intcon2	equ	0xFF1
 12292                           intcon3	equ	0xFF0
 12293                           indf0	equ	0xFEF
 12294                           postinc0	equ	0xFEE
 12295                           plusw0	equ	0xFEB
 12296                           fsr0h	equ	0xFEA
 12297                           fsr0l	equ	0xFE9
 12298                           wreg	equ	0xFE8
 12299                           postinc1	equ	0xFE6
 12300                           postdec1	equ	0xFE5
 12301                           fsr1h	equ	0xFE2
 12302                           fsr1l	equ	0xFE1
 12303                           indf2	equ	0xFDF
 12304                           postinc2	equ	0xFDE
 12305                           postdec2	equ	0xFDD
 12306                           plusw2	equ	0xFDB
 12307                           fsr2h	equ	0xFDA
 12308                           fsr2l	equ	0xFD9
 12309                           status	equ	0xFD8
 12310                           
 12311 ;; *************** function _USBCtrlTrfOutHandler *****************
 12312 ;; Defined at:
 12313 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12314 ;; Parameters:    Size  Location     Type
 12315 ;;		None
 12316 ;; Auto vars:     Size  Location     Type
 12317 ;;		None
 12318 ;; Return value:  Size  Location     Type
 12319 ;;                  1    wreg      void 
 12320 ;; Registers used:
 12321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12322 ;; Tracked objects:
 12323 ;;		On entry : 0/0
 12324 ;;		On exit  : 0/0
 12325 ;;		Unchanged: 0/0
 12326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12331 ;;Total ram usage:        0 bytes
 12332 ;; Hardware stack levels used:    1
 12333 ;; Hardware stack levels required when called:   13
 12334 ;; This function calls:
 12335 ;;		_USBCtrlTrfRxService
 12336 ;; This function is called by:
 12337 ;;		_USBCtrlEPService
 12338 ;; This function uses a non-reentrant model
 12339 ;;
 12340                           
 12341                           	psect	text49
 12342  00585E                     __ptext49:
 12343                           	opt stack 0
 12344  00585E                     _USBCtrlTrfOutHandler:
 12345                           	opt stack 12
 12346                           
 12347                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12348                           
 12349                           ; BSR set to: 0
 12350                           ;incstack = 0
 12351  00585E  0E02               	movlw	2
 12352  005860  0100               	movlb	0	; () banked
 12353  005862  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12354  005864  A4D8               	btfss	status,2,c
 12355  005866  D003               	goto	l1785
 12356                           
 12357                           ; BSR set to: 0
 12358                           ;usb_device.c: 2558: {
 12359                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12360  005868  ECC4  F017         	call	_USBCtrlTrfRxService	;wreg free
 12361                           
 12362                           ;usb_device.c: 2560: }
 12363  00586C  0012               	return	
 12364  00586E                     l1785:
 12365                           
 12366                           ;usb_device.c: 2561: else
 12367                           ;usb_device.c: 2562: {
 12368                           ;usb_device.c: 2565: controlTransferState = 0;
 12369  00586E  0E00               	movlw	0
 12370  005870  0100               	movlb	0	; () banked
 12371  005872  6FCC               	movwf	_controlTransferState& (0+255),b
 12372                           
 12373                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12374  005874  0101               	movlb	1	; () banked
 12375  005876  51DE               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12376  005878  A4D8               	btfss	status,2,c
 12377  00587A  D020               	goto	l1787
 12378                           
 12379                           ; BSR set to: 1
 12380                           ;usb_device.c: 2573: {
 12381                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12382  00587C  0100               	movlb	0	; () banked
 12383  00587E  EE20 F001          	lfsr	2,1
 12384  005882  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12385  005884  26D9               	addwf	fsr2l,f,c
 12386  005886  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12387  005888  22DA               	addwfc	fsr2h,f,c
 12388  00588A  0E08               	movlw	8
 12389  00588C  6EDF               	movwf	indf2,c
 12390                           
 12391                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12392  00588E  EE20 F002          	lfsr	2,2
 12393  005892  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12394  005894  26D9               	addwf	fsr2l,f,c
 12395  005896  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12396  005898  22DA               	addwfc	fsr2h,f,c
 12397  00589A  0E30               	movlw	48
 12398  00589C  6EDE               	movwf	postinc2,c
 12399  00589E  0E04               	movlw	4
 12400  0058A0  6EDD               	movwf	postdec2,c
 12401                           
 12402                           ; BSR set to: 0
 12403                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12404  0058A2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12405  0058A6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12406  0058AA  0E0C               	movlw	12
 12407  0058AC  6EDF               	movwf	indf2,c
 12408                           
 12409                           ; BSR set to: 0
 12410                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12411  0058AE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12412  0058B2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12413  0058B6  0E00               	movlw	0
 12414  0058B8  8EDB               	bsf	plusw2,7,c
 12415                           
 12416                           ;usb_device.c: 2578: }
 12417  0058BA  0012               	return	
 12418  0058BC                     l1787:
 12419                           
 12420                           ;usb_device.c: 2579: else
 12421                           ;usb_device.c: 2580: {
 12422                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12423                           
 12424                           ; BSR set to: 0
 12425  0058BC  0E00               	movlw	0
 12426  0058BE  0101               	movlb	1	; () banked
 12427  0058C0  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12428                           
 12429                           ; BSR set to: 1
 12430  0058C2  0012               	return	
 12431  0058C4                     __end_of_USBCtrlTrfOutHandler:
 12432                           	opt stack 0
 12433                           tosu	equ	0xFFF
 12434                           tosh	equ	0xFFE
 12435                           tosl	equ	0xFFD
 12436                           pclath	equ	0xFFA
 12437                           tblptru	equ	0xFF8
 12438                           tblptrh	equ	0xFF7
 12439                           tblptrl	equ	0xFF6
 12440                           tablat	equ	0xFF5
 12441                           prodh	equ	0xFF4
 12442                           prodl	equ	0xFF3
 12443                           intcon	equ	0xFF2
 12444                           intcon2	equ	0xFF1
 12445                           intcon3	equ	0xFF0
 12446                           indf0	equ	0xFEF
 12447                           postinc0	equ	0xFEE
 12448                           plusw0	equ	0xFEB
 12449                           fsr0h	equ	0xFEA
 12450                           fsr0l	equ	0xFE9
 12451                           wreg	equ	0xFE8
 12452                           postinc1	equ	0xFE6
 12453                           postdec1	equ	0xFE5
 12454                           fsr1h	equ	0xFE2
 12455                           fsr1l	equ	0xFE1
 12456                           indf2	equ	0xFDF
 12457                           postinc2	equ	0xFDE
 12458                           postdec2	equ	0xFDD
 12459                           plusw2	equ	0xFDB
 12460                           fsr2h	equ	0xFDA
 12461                           fsr2l	equ	0xFD9
 12462                           status	equ	0xFD8
 12463                           
 12464 ;; *************** function _USBCtrlTrfRxService *****************
 12465 ;; Defined at:
 12466 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12467 ;; Parameters:    Size  Location     Type
 12468 ;;		None
 12469 ;; Auto vars:     Size  Location     Type
 12470 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12471 ;;  i               1   29[BANK0 ] unsigned char 
 12472 ;; Return value:  Size  Location     Type
 12473 ;;                  1    wreg      void 
 12474 ;; Registers used:
 12475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/0
 12478 ;;		On exit  : 0/0
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12482 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12484 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12485 ;;Total ram usage:        2 bytes
 12486 ;; Hardware stack levels used:    1
 12487 ;; Hardware stack levels required when called:   12
 12488 ;; This function calls:
 12489 ;;		_USBCtrlEPAllowStatusStage
 12490 ;; This function is called by:
 12491 ;;		_USBCtrlTrfOutHandler
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           	psect	text50
 12496  002F88                     __ptext50:
 12497                           	opt stack 0
 12498  002F88                     _USBCtrlTrfRxService:
 12499                           	opt stack 12
 12500                           
 12501                           ;usb_device.c: 1872: uint8_t byteToRead;
 12502                           ;usb_device.c: 1873: uint8_t i;
 12503                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12504                           
 12505                           ;incstack = 0
 12506  002F88  0100               	movlb	0	; () banked
 12507  002F8A  EE20 F001          	lfsr	2,1
 12508  002F8E  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12509  002F90  26D9               	addwf	fsr2l,f,c
 12510  002F92  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12511  002F94  22DA               	addwfc	fsr2h,f,c
 12512  002F96  50DF               	movf	indf2,w,c
 12513  002F98  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12514                           
 12515                           ; BSR set to: 0
 12516                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12517  002F9A  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12518  002F9C  0101               	movlb	1	; () banked
 12519  002F9E  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12520  002FA0  0E00               	movlw	0
 12521  002FA2  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12522  002FA4  A0D8               	btfss	status,0,c
 12523                           
 12524                           ; BSR set to: 1
 12525                           ;usb_device.c: 1884: {
 12526                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12527  002FA6  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12528                           
 12529                           ; BSR set to: 1
 12530                           ;usb_device.c: 1886: }
 12531                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12532                           
 12533                           ; BSR set to: 1
 12534  002FAA  0100               	movlb	0	; () banked
 12535  002FAC  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12536  002FAE  0101               	movlb	1	; () banked
 12537  002FB0  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12538  002FB2  0E00               	movlw	0
 12539  002FB4  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12540                           
 12541                           ; BSR set to: 1
 12542                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12543  002FB6  0E00               	movlw	0
 12544  002FB8  0100               	movlb	0	; () banked
 12545  002FBA  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12546  002FBC  D013               	goto	l1713
 12547  002FBE                     
 12548                           ; BSR set to: 0
 12549                           ;usb_device.c: 1893: {
 12550                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12551                           
 12552                           ; BSR set to: 0
 12553  002FBE  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12554  002FC0  0D01               	mullw	1
 12555  002FC2  0E38               	movlw	56
 12556  002FC4  24F3               	addwf	prodl,w,c
 12557  002FC6  6ED9               	movwf	fsr2l,c
 12558  002FC8  0E04               	movlw	4
 12559  002FCA  20F4               	addwfc	prodh,w,c
 12560  002FCC  6EDA               	movwf	fsr2h,c
 12561  002FCE  C1C9  FFE1         	movff	_outPipes,fsr1l
 12562  002FD2  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12563  002FD6  CFDF FFE7          	movff	indf2,indf1
 12564                           
 12565                           ; BSR set to: 0
 12566  002FDA  0101               	movlb	1	; () banked
 12567  002FDC  4BC9               	infsnz	_outPipes& (0+255),f,b
 12568  002FDE  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12569                           
 12570                           ; BSR set to: 1
 12571  002FE0  0100               	movlb	0	; () banked
 12572  002FE2  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12573  002FE4                     l1713:
 12574                           
 12575                           ; BSR set to: 0
 12576                           
 12577                           ; BSR set to: 0
 12578  002FE4  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12579  002FE6  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12580  002FE8  A0D8               	btfss	status,0,c
 12581  002FEA  D7E9               	goto	l1714
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;usb_device.c: 1895: }
 12585                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12586                           
 12587                           ; BSR set to: 0
 12588  002FEC  0101               	movlb	1	; () banked
 12589  002FEE  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12590  002FF0  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12591  002FF2  B4D8               	btfsc	status,2,c
 12592  002FF4  D033               	goto	l1716
 12593                           
 12594                           ; BSR set to: 1
 12595                           ;usb_device.c: 1900: {
 12596                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12597  002FF6  0100               	movlb	0	; () banked
 12598  002FF8  EE20 F001          	lfsr	2,1
 12599  002FFC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12600  002FFE  26D9               	addwf	fsr2l,f,c
 12601  003000  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12602  003002  22DA               	addwfc	fsr2h,f,c
 12603  003004  0E08               	movlw	8
 12604  003006  6EDF               	movwf	indf2,c
 12605                           
 12606                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12607  003008  EE20 F002          	lfsr	2,2
 12608  00300C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12609  00300E  26D9               	addwf	fsr2l,f,c
 12610  003010  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12611  003012  22DA               	addwfc	fsr2h,f,c
 12612  003014  0E38               	movlw	56
 12613  003016  6EDE               	movwf	postinc2,c
 12614  003018  0E04               	movlw	4
 12615  00301A  6EDD               	movwf	postdec2,c
 12616                           
 12617                           ; BSR set to: 0
 12618                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12619  00301C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12620  003020  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12621  003024  BCDF               	btfsc	indf2,6,c
 12622  003026  D00D               	goto	l1717
 12623                           
 12624                           ; BSR set to: 0
 12625                           ;usb_device.c: 1904: {
 12626                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12627  003028  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12628  00302C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12629  003030  0E48               	movlw	72
 12630  003032  6EDF               	movwf	indf2,c
 12631                           
 12632                           ; BSR set to: 0
 12633                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12634  003034  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12635  003038  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12636  00303C  0E00               	movlw	0
 12637  00303E  8EDB               	bsf	plusw2,7,c
 12638                           
 12639                           ;usb_device.c: 1907: }
 12640  003040  0012               	return	
 12641  003042                     l1717:
 12642                           
 12643                           ; BSR set to: 0
 12644                           ;usb_device.c: 1908: else
 12645                           ;usb_device.c: 1909: {
 12646                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12647                           
 12648                           ; BSR set to: 0
 12649  003042  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12650  003046  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12651  00304A  0E08               	movlw	8
 12652  00304C  6EDF               	movwf	indf2,c
 12653                           
 12654                           ; BSR set to: 0
 12655                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12656  00304E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12657  003052  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12658  003056  0E00               	movlw	0
 12659  003058  8EDB               	bsf	plusw2,7,c
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;usb_device.c: 1912: }
 12663                           ;usb_device.c: 1913: }
 12664  00305A  0012               	return	
 12665  00305C                     l1716:
 12666                           
 12667                           ;usb_device.c: 1914: else
 12668                           ;usb_device.c: 1915: {
 12669                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12670                           
 12671                           ; BSR set to: 0
 12672  00305C  0100               	movlb	0	; () banked
 12673  00305E  EE20 F001          	lfsr	2,1
 12674  003062  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12675  003064  26D9               	addwf	fsr2l,f,c
 12676  003066  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12677  003068  22DA               	addwfc	fsr2h,f,c
 12678  00306A  0E08               	movlw	8
 12679  00306C  6EDF               	movwf	indf2,c
 12680                           
 12681                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12682  00306E  EE20 F002          	lfsr	2,2
 12683  003072  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12684  003074  26D9               	addwf	fsr2l,f,c
 12685  003076  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12686  003078  22DA               	addwfc	fsr2h,f,c
 12687  00307A  0E30               	movlw	48
 12688  00307C  6EDE               	movwf	postinc2,c
 12689  00307E  0E04               	movlw	4
 12690  003080  6EDD               	movwf	postdec2,c
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12694  003082  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12695  003086  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12696  00308A  0E04               	movlw	4
 12697  00308C  6EDF               	movwf	indf2,c
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12701  00308E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12702  003092  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12703  003096  0E00               	movlw	0
 12704  003098  8EDB               	bsf	plusw2,7,c
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;usb_device.c: 1944: }
 12708                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12709                           
 12710                           ; BSR set to: 0
 12711  00309A  0101               	movlb	1	; () banked
 12712  00309C  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12713                           
 12714                           ; BSR set to: 1
 12715                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12716  00309E  0100               	movlb	0	; () banked
 12717  0030A0  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12718  0030A2  A4D8               	btfss	status,2,c
 12719  0030A4  0012               	return	
 12720                           
 12721                           ; BSR set to: 0
 12722                           ;usb_device.c: 1960: {
 12723                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12724  0030A6  EC67  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12725  0030AA  0012               	return	
 12726  0030AC                     __end_of_USBCtrlTrfRxService:
 12727                           	opt stack 0
 12728                           tosu	equ	0xFFF
 12729                           tosh	equ	0xFFE
 12730                           tosl	equ	0xFFD
 12731                           pclath	equ	0xFFA
 12732                           tblptru	equ	0xFF8
 12733                           tblptrh	equ	0xFF7
 12734                           tblptrl	equ	0xFF6
 12735                           tablat	equ	0xFF5
 12736                           prodh	equ	0xFF4
 12737                           prodl	equ	0xFF3
 12738                           intcon	equ	0xFF2
 12739                           intcon2	equ	0xFF1
 12740                           intcon3	equ	0xFF0
 12741                           indf0	equ	0xFEF
 12742                           postinc0	equ	0xFEE
 12743                           plusw0	equ	0xFEB
 12744                           fsr0h	equ	0xFEA
 12745                           fsr0l	equ	0xFE9
 12746                           wreg	equ	0xFE8
 12747                           indf1	equ	0xFE7
 12748                           postinc1	equ	0xFE6
 12749                           postdec1	equ	0xFE5
 12750                           fsr1h	equ	0xFE2
 12751                           fsr1l	equ	0xFE1
 12752                           indf2	equ	0xFDF
 12753                           postinc2	equ	0xFDE
 12754                           postdec2	equ	0xFDD
 12755                           plusw2	equ	0xFDB
 12756                           fsr2h	equ	0xFDA
 12757                           fsr2l	equ	0xFD9
 12758                           status	equ	0xFD8
 12759                           
 12760 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12761 ;; Defined at:
 12762 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12763 ;; Parameters:    Size  Location     Type
 12764 ;;		None
 12765 ;; Auto vars:     Size  Location     Type
 12766 ;;		None
 12767 ;; Return value:  Size  Location     Type
 12768 ;;                  1    wreg      void 
 12769 ;; Registers used:
 12770 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12771 ;; Tracked objects:
 12772 ;;		On entry : 0/0
 12773 ;;		On exit  : 0/0
 12774 ;;		Unchanged: 0/0
 12775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12780 ;;Total ram usage:        0 bytes
 12781 ;; Hardware stack levels used:    1
 12782 ;; Hardware stack levels required when called:   11
 12783 ;; This function calls:
 12784 ;;		Nothing
 12785 ;; This function is called by:
 12786 ;;		_USBDeviceTasks
 12787 ;;		_USBCtrlEPServiceComplete
 12788 ;;		_USBCtrlTrfRxService
 12789 ;; This function uses a non-reentrant model
 12790 ;;
 12791                           
 12792                           	psect	text51
 12793  003ECE                     __ptext51:
 12794                           	opt stack 0
 12795  003ECE                     _USBCtrlEPAllowStatusStage:
 12796                           	opt stack 12
 12797                           
 12798                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12799                           
 12800                           ;incstack = 0
 12801  003ECE  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 12802  003ED0  A4D8               	btfss	status,2,c
 12803  003ED2  0012               	return	
 12804                           
 12805                           ;usb_device.c: 1442: {
 12806                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12807  003ED4  0E01               	movlw	1
 12808  003ED6  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12809                           
 12810                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12811  003ED8  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12812  003EDA  A4D8               	btfss	status,2,c
 12813  003EDC  0012               	return	
 12814                           
 12815                           ;usb_device.c: 1445: {
 12816                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12817  003EDE  0E01               	movlw	1
 12818  003EE0  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12819                           
 12820                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12821  003EE2  0E02               	movlw	2
 12822  003EE4  0100               	movlb	0	; () banked
 12823  003EE6  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12824  003EE8  A4D8               	btfss	status,2,c
 12825  003EEA  D015               	goto	l1667
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;usb_device.c: 1451: {
 12829                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12830  003EEC  EE20 F001          	lfsr	2,1
 12831  003EF0  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12832  003EF2  26D9               	addwf	fsr2l,f,c
 12833  003EF4  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12834  003EF6  22DA               	addwfc	fsr2h,f,c
 12835  003EF8  0E00               	movlw	0
 12836  003EFA  6EDF               	movwf	indf2,c
 12837                           
 12838                           ; BSR set to: 0
 12839                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12840  003EFC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12841  003F00  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12842  003F04  0E48               	movlw	72
 12843  003F06  6EDF               	movwf	indf2,c
 12844                           
 12845                           ; BSR set to: 0
 12846                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12847  003F08  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12848  003F0C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12849  003F10  0E00               	movlw	0
 12850  003F12  8EDB               	bsf	plusw2,7,c
 12851                           
 12852                           ;usb_device.c: 1455: }
 12853  003F14  0012               	return	
 12854  003F16                     l1667:
 12855                           
 12856                           ; BSR set to: 0
 12857                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12858                           
 12859                           ; BSR set to: 0
 12860  003F16  05CC               	decf	_controlTransferState& (0+255),w,b
 12861  003F18  A4D8               	btfss	status,2,c
 12862  003F1A  0012               	return	
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;usb_device.c: 1457: {
 12866                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12867  003F1C  0E00               	movlw	0
 12868  003F1E  0101               	movlb	1	; () banked
 12869  003F20  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12870                           
 12871                           ; BSR set to: 1
 12872                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12873  003F22  0100               	movlb	0	; () banked
 12874  003F24  EE20 F001          	lfsr	2,1
 12875  003F28  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12876  003F2A  26D9               	addwf	fsr2l,f,c
 12877  003F2C  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12878  003F2E  22DA               	addwfc	fsr2h,f,c
 12879  003F30  0E08               	movlw	8
 12880  003F32  6EDF               	movwf	indf2,c
 12881                           
 12882                           ; BSR set to: 0
 12883                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12884  003F34  EE20 F002          	lfsr	2,2
 12885  003F38  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12886  003F3A  26D9               	addwf	fsr2l,f,c
 12887  003F3C  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12888  003F3E  22DA               	addwfc	fsr2h,f,c
 12889  003F40  0E30               	movlw	48
 12890  003F42  6EDE               	movwf	postinc2,c
 12891  003F44  0E04               	movlw	4
 12892  003F46  6EDD               	movwf	postdec2,c
 12893                           
 12894                           ; BSR set to: 0
 12895                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12896  003F48  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12897  003F4C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12898  003F50  0E04               	movlw	4
 12899  003F52  6EDF               	movwf	indf2,c
 12900                           
 12901                           ; BSR set to: 0
 12902                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12903  003F54  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12904  003F58  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12905  003F5C  0E00               	movlw	0
 12906  003F5E  8EDB               	bsf	plusw2,7,c
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12910  003F60  0E01               	movlw	1
 12911  003F62  0101               	movlb	1	; () banked
 12912  003F64  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12913                           
 12914                           ; BSR set to: 1
 12915                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12916  003F66  0100               	movlb	0	; () banked
 12917  003F68  EE20 F001          	lfsr	2,1
 12918  003F6C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12919  003F6E  26D9               	addwf	fsr2l,f,c
 12920  003F70  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12921  003F72  22DA               	addwfc	fsr2h,f,c
 12922  003F74  0E08               	movlw	8
 12923  003F76  6EDF               	movwf	indf2,c
 12924                           
 12925                           ; BSR set to: 0
 12926                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12927  003F78  EE20 F002          	lfsr	2,2
 12928  003F7C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12929  003F7E  26D9               	addwf	fsr2l,f,c
 12930  003F80  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12931  003F82  22DA               	addwfc	fsr2h,f,c
 12932  003F84  0E30               	movlw	48
 12933  003F86  6EDE               	movwf	postinc2,c
 12934  003F88  0E04               	movlw	4
 12935  003F8A  6EDD               	movwf	postdec2,c
 12936                           
 12937                           ; BSR set to: 0
 12938                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12939  003F8C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12940  003F90  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12941  003F94  0E80               	movlw	128
 12942  003F96  6EDF               	movwf	indf2,c
 12943                           
 12944                           ; BSR set to: 0
 12945                           
 12946                           ; BSR set to: 0
 12947                           
 12948                           ; BSR set to: 0
 12949  003F98  0012               	return	
 12950  003F9A                     __end_of_USBCtrlEPAllowStatusStage:
 12951                           	opt stack 0
 12952                           tosu	equ	0xFFF
 12953                           tosh	equ	0xFFE
 12954                           tosl	equ	0xFFD
 12955                           pclath	equ	0xFFA
 12956                           tblptru	equ	0xFF8
 12957                           tblptrh	equ	0xFF7
 12958                           tblptrl	equ	0xFF6
 12959                           tablat	equ	0xFF5
 12960                           prodh	equ	0xFF4
 12961                           prodl	equ	0xFF3
 12962                           intcon	equ	0xFF2
 12963                           intcon2	equ	0xFF1
 12964                           intcon3	equ	0xFF0
 12965                           indf0	equ	0xFEF
 12966                           postinc0	equ	0xFEE
 12967                           plusw0	equ	0xFEB
 12968                           fsr0h	equ	0xFEA
 12969                           fsr0l	equ	0xFE9
 12970                           wreg	equ	0xFE8
 12971                           indf1	equ	0xFE7
 12972                           postinc1	equ	0xFE6
 12973                           postdec1	equ	0xFE5
 12974                           fsr1h	equ	0xFE2
 12975                           fsr1l	equ	0xFE1
 12976                           indf2	equ	0xFDF
 12977                           postinc2	equ	0xFDE
 12978                           postdec2	equ	0xFDD
 12979                           plusw2	equ	0xFDB
 12980                           fsr2h	equ	0xFDA
 12981                           fsr2l	equ	0xFD9
 12982                           status	equ	0xFD8
 12983                           
 12984 ;; *************** function _USBCtrlTrfInHandler *****************
 12985 ;; Defined at:
 12986 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12987 ;; Parameters:    Size  Location     Type
 12988 ;;		None
 12989 ;; Auto vars:     Size  Location     Type
 12990 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12991 ;; Return value:  Size  Location     Type
 12992 ;;                  1    wreg      void 
 12993 ;; Registers used:
 12994 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12995 ;; Tracked objects:
 12996 ;;		On entry : 0/0
 12997 ;;		On exit  : 0/0
 12998 ;;		Unchanged: 0/0
 12999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13001 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13003 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13004 ;;Total ram usage:        1 bytes
 13005 ;; Hardware stack levels used:    1
 13006 ;; Hardware stack levels required when called:   12
 13007 ;; This function calls:
 13008 ;;		_USBCtrlTrfTxService
 13009 ;; This function is called by:
 13010 ;;		_USBCtrlEPService
 13011 ;; This function uses a non-reentrant model
 13012 ;;
 13013                           
 13014                           	psect	text52
 13015  004380                     __ptext52:
 13016                           	opt stack 0
 13017  004380                     _USBCtrlTrfInHandler:
 13018                           	opt stack 13
 13019                           
 13020                           ;usb_device.c: 2611: uint8_t lastDTS;
 13021                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 13022                           
 13023                           ;incstack = 0
 13024  004380  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13025  004384  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13026  004388  0100               	movlb	0	; () banked
 13027  00438A  0E00               	movlw	0
 13028  00438C  BCDF               	btfsc	indf2,6,c
 13029  00438E  0E01               	movlw	1
 13030  004390  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 13031                           
 13032                           ; BSR set to: 0
 13033                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 13034  004392  0E04               	movlw	4
 13035  004394  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 13039  004396  0E08               	movlw	8
 13040  004398  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 13041  00439A  A4D8               	btfss	status,2,c
 13042  00439C  D00D               	goto	l1794
 13043                           
 13044                           ; BSR set to: 0
 13045                           ;usb_device.c: 2622: {
 13046                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 13047  00439E  0104               	movlb	4	; () banked
 13048  0043A0  5132               	movf	50,w,b	;volatile
 13049  0043A2  0B7F               	andlw	127
 13050  0043A4  010F               	movlb	15	; () banked
 13051  0043A6  6F38               	movwf	56,b	;volatile
 13052                           
 13053                           ; BSR set to: 15
 13054                           ;usb_device.c: 2624: if(UADDR != 0u)
 13055  0043A8  5138               	movf	56,w,b	;volatile
 13056  0043AA  B4D8               	btfsc	status,2,c
 13057  0043AC  D002               	goto	l1793
 13058                           
 13059                           ; BSR set to: 15
 13060                           ;usb_device.c: 2625: {
 13061                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 13062  0043AE  0E10               	movlw	16
 13063  0043B0  D001               	goto	L11
 13064  0043B2                     l1793:
 13065                           
 13066                           ;usb_device.c: 2628: else
 13067                           ;usb_device.c: 2629: {
 13068                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 13069                           
 13070                           ; BSR set to: 0
 13071  0043B2  0E04               	movlw	4
 13072  0043B4                     L11:
 13073  0043B4  0100               	movlb	0	; () banked
 13074  0043B6  6FCE               	movwf	_USBDeviceState& (0+255),b
 13075  0043B8                     l1794:
 13076                           
 13077                           ; BSR set to: 0
 13078                           ;usb_device.c: 2631: }
 13079                           ;usb_device.c: 2632: }
 13080                           ;usb_device.c: 2635: if(controlTransferState == 1)
 13081                           
 13082                           ; BSR set to: 0
 13083                           
 13084                           ; BSR set to: 0
 13085  0043B8  05CC               	decf	_controlTransferState& (0+255),w,b
 13086  0043BA  A4D8               	btfss	status,2,c
 13087  0043BC  D03B               	goto	l1795
 13088                           
 13089                           ; BSR set to: 0
 13090                           ;usb_device.c: 2636: {
 13091                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 13092  0043BE  EE20 F002          	lfsr	2,2
 13093  0043C2  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13094  0043C4  26D9               	addwf	fsr2l,f,c
 13095  0043C6  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13096  0043C8  22DA               	addwfc	fsr2h,f,c
 13097  0043CA  0E38               	movlw	56
 13098  0043CC  6EDE               	movwf	postinc2,c
 13099  0043CE  0E04               	movlw	4
 13100  0043D0  6EDD               	movwf	postdec2,c
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 13104  0043D2  EC17  F01C         	call	_USBCtrlTrfTxService	;wreg free
 13105                           
 13106                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 13107  0043D6  0E02               	movlw	2
 13108  0043D8  0100               	movlb	0	; () banked
 13109  0043DA  19CD               	xorwf	_shortPacketStatus& (0+255),w,b
 13110  0043DC  A4D8               	btfss	status,2,c
 13111  0043DE  D00D               	goto	l1796
 13112                           
 13113                           ; BSR set to: 0
 13114                           ;usb_device.c: 2645: {
 13115                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 13116  0043E0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13117  0043E4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13118  0043E8  0E04               	movlw	4
 13119  0043EA  6EDF               	movwf	indf2,c
 13120                           
 13121                           ; BSR set to: 0
 13122                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13123  0043EC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13124  0043F0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13125  0043F4  0E00               	movlw	0
 13126  0043F6  8EDB               	bsf	plusw2,7,c
 13127                           
 13128                           ;usb_device.c: 2650: }
 13129  0043F8  0012               	return	
 13130  0043FA                     l1796:
 13131                           
 13132                           ; BSR set to: 0
 13133                           ;usb_device.c: 2651: else
 13134                           ;usb_device.c: 2652: {
 13135                           ;usb_device.c: 2653: if(lastDTS == 0)
 13136                           
 13137                           ; BSR set to: 0
 13138  0043FA  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13139  0043FC  A4D8               	btfss	status,2,c
 13140  0043FE  D00D               	goto	l1798
 13141                           
 13142                           ; BSR set to: 0
 13143                           ;usb_device.c: 2654: {
 13144                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13145  004400  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13146  004404  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13147  004408  0E48               	movlw	72
 13148  00440A  6EDF               	movwf	indf2,c
 13149                           
 13150                           ; BSR set to: 0
 13151                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13152  00440C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13153  004410  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13154  004414  0E00               	movlw	0
 13155  004416  8EDB               	bsf	plusw2,7,c
 13156                           
 13157                           ;usb_device.c: 2657: }
 13158  004418  0012               	return	
 13159  00441A                     l1798:
 13160                           
 13161                           ; BSR set to: 0
 13162                           ;usb_device.c: 2658: else
 13163                           ;usb_device.c: 2659: {
 13164                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13165                           
 13166                           ; BSR set to: 0
 13167  00441A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13168  00441E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13169  004422  0E08               	movlw	8
 13170  004424  6EDF               	movwf	indf2,c
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13174  004426  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13175  00442A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13176  00442E  0E00               	movlw	0
 13177  004430  8EDB               	bsf	plusw2,7,c
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;usb_device.c: 2662: }
 13181                           ;usb_device.c: 2663: }
 13182                           ;usb_device.c: 2664: }
 13183                           
 13184                           ; BSR set to: 0
 13185  004432  0012               	return	
 13186  004434                     l1795:
 13187                           
 13188                           ; BSR set to: 0
 13189                           ;usb_device.c: 2665: else
 13190                           ;usb_device.c: 2666: {
 13191                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13192  004434  0101               	movlb	1	; () banked
 13193  004436  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13194                           
 13195                           ; BSR set to: 1
 13196                           ;usb_device.c: 2675: }
 13197                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13198                           
 13199                           ; BSR set to: 1
 13200  004438  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13201                           
 13202                           ; BSR set to: 1
 13203                           ;usb_device.c: 2677: }
 13204                           ;usb_device.c: 2679: controlTransferState = 0;
 13205                           
 13206                           ; BSR set to: 1
 13207  00443A  0E00               	movlw	0
 13208  00443C  0100               	movlb	0	; () banked
 13209  00443E  6FCC               	movwf	_controlTransferState& (0+255),b
 13210  004440  0012               	return	
 13211  004442                     __end_of_USBCtrlTrfInHandler:
 13212                           	opt stack 0
 13213                           tosu	equ	0xFFF
 13214                           tosh	equ	0xFFE
 13215                           tosl	equ	0xFFD
 13216                           pclath	equ	0xFFA
 13217                           tblptru	equ	0xFF8
 13218                           tblptrh	equ	0xFF7
 13219                           tblptrl	equ	0xFF6
 13220                           tablat	equ	0xFF5
 13221                           prodh	equ	0xFF4
 13222                           prodl	equ	0xFF3
 13223                           intcon	equ	0xFF2
 13224                           intcon2	equ	0xFF1
 13225                           intcon3	equ	0xFF0
 13226                           indf0	equ	0xFEF
 13227                           postinc0	equ	0xFEE
 13228                           plusw0	equ	0xFEB
 13229                           fsr0h	equ	0xFEA
 13230                           fsr0l	equ	0xFE9
 13231                           wreg	equ	0xFE8
 13232                           indf1	equ	0xFE7
 13233                           postinc1	equ	0xFE6
 13234                           postdec1	equ	0xFE5
 13235                           fsr1h	equ	0xFE2
 13236                           fsr1l	equ	0xFE1
 13237                           indf2	equ	0xFDF
 13238                           postinc2	equ	0xFDE
 13239                           postdec2	equ	0xFDD
 13240                           plusw2	equ	0xFDB
 13241                           fsr2h	equ	0xFDA
 13242                           fsr2l	equ	0xFD9
 13243                           status	equ	0xFD8
 13244                           
 13245 ;; *************** function _USBCtrlTrfTxService *****************
 13246 ;; Defined at:
 13247 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13248 ;; Parameters:    Size  Location     Type
 13249 ;;		None
 13250 ;; Auto vars:     Size  Location     Type
 13251 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13252 ;; Return value:  Size  Location     Type
 13253 ;;                  1    wreg      void 
 13254 ;; Registers used:
 13255 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13256 ;; Tracked objects:
 13257 ;;		On entry : 0/0
 13258 ;;		On exit  : 0/0
 13259 ;;		Unchanged: 0/0
 13260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13264 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13265 ;;Total ram usage:        1 bytes
 13266 ;; Hardware stack levels used:    1
 13267 ;; Hardware stack levels required when called:   11
 13268 ;; This function calls:
 13269 ;;		Nothing
 13270 ;; This function is called by:
 13271 ;;		_USBCtrlEPAllowDataStage
 13272 ;;		_USBCtrlTrfInHandler
 13273 ;; This function uses a non-reentrant model
 13274 ;;
 13275                           
 13276                           	psect	text53
 13277  00382E                     __ptext53:
 13278                           	opt stack 0
 13279  00382E                     _USBCtrlTrfTxService:
 13280                           	opt stack 11
 13281                           
 13282                           ;usb_device.c: 1791: uint8_t byteToSend;
 13283                           ;usb_device.c: 1795: byteToSend = 8;
 13284                           
 13285                           ; BSR set to: 0
 13286                           ;incstack = 0
 13287  00382E  0E08               	movlw	8
 13288  003830  0100               	movlb	0	; () banked
 13289  003832  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13293  003834  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13294  003836  E110               	bnz	l13268
 13295  003838  0E08               	movlw	8
 13296  00383A  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13297  00383C  B0D8               	btfsc	status,0,c
 13298  00383E  D00C               	goto	l1700
 13299                           
 13300                           ; BSR set to: 0
 13301                           ;usb_device.c: 1797: {
 13302                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13303  003840  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13304                           
 13305                           ; BSR set to: 0
 13306                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13307  003844  51CD               	movf	_shortPacketStatus& (0+255),w,b
 13308  003846  A4D8               	btfss	status,2,c
 13309  003848  D002               	goto	l1698
 13310                           
 13311                           ; BSR set to: 0
 13312                           ;usb_device.c: 1806: {
 13313                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13314  00384A  0E01               	movlw	1
 13315  00384C  D004               	goto	L12
 13316  00384E                     l1698:
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13320                           
 13321                           ; BSR set to: 0
 13322  00384E  05CD               	decf	_shortPacketStatus& (0+255),w,b
 13323  003850  A4D8               	btfss	status,2,c
 13324  003852  D002               	goto	l1700
 13325                           
 13326                           ; BSR set to: 0
 13327                           ;usb_device.c: 1810: {
 13328                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13329  003854  0E02               	movlw	2
 13330  003856                     L12:
 13331  003856  6FCD               	movwf	_shortPacketStatus& (0+255),b
 13332  003858                     l1700:
 13333  003858                     l13268:
 13334                           
 13335                           ; BSR set to: 0
 13336                           ;usb_device.c: 1812: }
 13337                           ;usb_device.c: 1813: }
 13338                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13339  003858  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13340  00385A  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13341  00385C  0E00               	movlw	0
 13342  00385E  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13343                           
 13344                           ; BSR set to: 0
 13345                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13346  003860  EE20 F001          	lfsr	2,1
 13347  003864  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13348  003866  26D9               	addwf	fsr2l,f,c
 13349  003868  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13350  00386A  22DA               	addwfc	fsr2h,f,c
 13351  00386C  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13352                           
 13353                           ; BSR set to: 0
 13354                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13355  003870  0E38               	movlw	56
 13356  003872  0102               	movlb	2	; () banked
 13357  003874  6FD5               	movwf	_pDst& (0+255),b
 13358  003876  0E04               	movlw	4
 13359  003878  6FD6               	movwf	(_pDst+1)& (0+255),b
 13360                           
 13361                           ; BSR set to: 2
 13362                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13363  00387A  0100               	movlb	0	; () banked
 13364  00387C  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13365  00387E  D01E               	goto	l1702
 13366  003880  D03E               	goto	l1706
 13367  003882                     
 13368                           ; BSR set to: 0
 13369                           ;usb_device.c: 1830: {
 13370                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13371                           
 13372                           ; BSR set to: 0
 13373  003882  C0B0  FFF6         	movff	_inPipes,tblptrl
 13374  003886  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13375  00388A  6AF8               	clrf	tblptru,c
 13376  00388C  C2D5  FFD9         	movff	_pDst,fsr2l
 13377  003890  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13378  003894  0E0E               	movlw	(high __ramtop+-1)
 13379  003896  64F7               	cpfsgt	tblptrh,c
 13380  003898  D003               	bra	u11837
 13381  00389A  0008               	tblrd		*
 13382  00389C  50F5               	movf	tablat,w,c
 13383  00389E  D005               	bra	u11830
 13384  0038A0                     u11837:
 13385  0038A0  CFF6 FFE9          	movff	tblptrl,fsr0l
 13386  0038A4  CFF7 FFEA          	movff	tblptrh,fsr0h
 13387  0038A8  50EF               	movf	indf0,w,c
 13388  0038AA                     u11830:
 13389  0038AA  6EDF               	movwf	indf2,c
 13390  0038AC  0100               	movlb	0	; () banked
 13391  0038AE  4BB0               	infsnz	_inPipes& (0+255),f,b
 13392  0038B0  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13393                           
 13394                           ; BSR set to: 0
 13395  0038B2  0102               	movlb	2	; () banked
 13396  0038B4  4BD5               	infsnz	_pDst& (0+255),f,b
 13397  0038B6  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13398                           
 13399                           ; BSR set to: 2
 13400                           ;usb_device.c: 1832: byteToSend--;
 13401  0038B8  0100               	movlb	0	; () banked
 13402  0038BA  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13403  0038BC                     l1702:
 13404                           
 13405                           ; BSR set to: 0
 13406                           
 13407                           ; BSR set to: 0
 13408  0038BC  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13409  0038BE  B4D8               	btfsc	status,2,c
 13410  0038C0  0012               	return	
 13411  0038C2  D7DF               	goto	l1703
 13412  0038C4                     
 13413                           ; BSR set to: 0
 13414                           ;usb_device.c: 1838: {
 13415                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13416                           
 13417                           ; BSR set to: 0
 13418  0038C4  C0B0  FFF6         	movff	_inPipes,tblptrl
 13419  0038C8  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13420  0038CC  6AF8               	clrf	tblptru,c
 13421  0038CE  C2D5  FFD9         	movff	_pDst,fsr2l
 13422  0038D2  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13423  0038D6  0E0E               	movlw	(high __ramtop+-1)
 13424  0038D8  64F7               	cpfsgt	tblptrh,c
 13425  0038DA  D003               	bra	u11857
 13426  0038DC  0008               	tblrd		*
 13427  0038DE  50F5               	movf	tablat,w,c
 13428  0038E0  D005               	bra	u11850
 13429  0038E2                     u11857:
 13430  0038E2  CFF6 FFE9          	movff	tblptrl,fsr0l
 13431  0038E6  CFF7 FFEA          	movff	tblptrh,fsr0h
 13432  0038EA  50EF               	movf	indf0,w,c
 13433  0038EC                     u11850:
 13434  0038EC  6EDF               	movwf	indf2,c
 13435  0038EE  0100               	movlb	0	; () banked
 13436  0038F0  4BB0               	infsnz	_inPipes& (0+255),f,b
 13437  0038F2  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13438                           
 13439                           ; BSR set to: 0
 13440  0038F4  0102               	movlb	2	; () banked
 13441  0038F6  4BD5               	infsnz	_pDst& (0+255),f,b
 13442  0038F8  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13443                           
 13444                           ; BSR set to: 2
 13445                           ;usb_device.c: 1840: byteToSend--;
 13446  0038FA  0100               	movlb	0	; () banked
 13447  0038FC  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13448  0038FE                     l1706:
 13449                           
 13450                           ; BSR set to: 0
 13451                           
 13452                           ; BSR set to: 0
 13453  0038FE  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13454  003900  B4D8               	btfsc	status,2,c
 13455  003902  0012               	return	
 13456  003904  D7DF               	goto	l1707
 13457  003906                     __end_of_USBCtrlTrfTxService:
 13458                           	opt stack 0
 13459                           tosu	equ	0xFFF
 13460                           tosh	equ	0xFFE
 13461                           tosl	equ	0xFFD
 13462                           pclath	equ	0xFFA
 13463                           tblptru	equ	0xFF8
 13464                           tblptrh	equ	0xFF7
 13465                           tblptrl	equ	0xFF6
 13466                           tablat	equ	0xFF5
 13467                           prodh	equ	0xFF4
 13468                           prodl	equ	0xFF3
 13469                           intcon	equ	0xFF2
 13470                           intcon2	equ	0xFF1
 13471                           intcon3	equ	0xFF0
 13472                           indf0	equ	0xFEF
 13473                           postinc0	equ	0xFEE
 13474                           plusw0	equ	0xFEB
 13475                           fsr0h	equ	0xFEA
 13476                           fsr0l	equ	0xFE9
 13477                           wreg	equ	0xFE8
 13478                           indf1	equ	0xFE7
 13479                           postinc1	equ	0xFE6
 13480                           postdec1	equ	0xFE5
 13481                           fsr1h	equ	0xFE2
 13482                           fsr1l	equ	0xFE1
 13483                           indf2	equ	0xFDF
 13484                           postinc2	equ	0xFDE
 13485                           postdec2	equ	0xFDD
 13486                           plusw2	equ	0xFDB
 13487                           fsr2h	equ	0xFDA
 13488                           fsr2l	equ	0xFD9
 13489                           status	equ	0xFD8
 13490                           
 13491 ;; *************** function _CDCTxService *****************
 13492 ;; Defined at:
 13493 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13494 ;; Parameters:    Size  Location     Type
 13495 ;;		None
 13496 ;; Auto vars:     Size  Location     Type
 13497 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13498 ;;  i               1   36[BANK0 ] unsigned char 
 13499 ;; Return value:  Size  Location     Type
 13500 ;;                  1    wreg      void 
 13501 ;; Registers used:
 13502 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13503 ;; Tracked objects:
 13504 ;;		On entry : 0/0
 13505 ;;		On exit  : 0/0
 13506 ;;		Unchanged: 0/0
 13507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13509 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13511 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13512 ;;Total ram usage:        2 bytes
 13513 ;; Hardware stack levels used:    1
 13514 ;; Hardware stack levels required when called:   12
 13515 ;; This function calls:
 13516 ;;		_USBTransferOnePacket
 13517 ;; This function is called by:
 13518 ;;		_UsbDevice_MainTask
 13519 ;; This function uses a non-reentrant model
 13520 ;;
 13521                           
 13522                           	psect	text54
 13523  002984                     __ptext54:
 13524                           	opt stack 0
 13525  002984                     _CDCTxService:
 13526                           	opt stack 15
 13527                           
 13528                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13529                           ;usb_device_cdc.c: 842: uint8_t i;
 13530                           ;usb_device_cdc.c: 844: ;
 13531                           ;usb_device_cdc.c: 846: {};
 13532                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13533                           
 13534                           ; BSR set to: 0
 13535                           ;incstack = 0
 13536  002984  0101               	movlb	1	; () banked
 13537  002986  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13538  002988  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13539  00298A  B4D8               	btfsc	status,2,c
 13540  00298C  D006               	goto	l1952
 13541                           
 13542                           ; BSR set to: 1
 13543  00298E  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13544  002992  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13545  002996  BEDF               	btfsc	indf2,7,c
 13546  002998  0012               	return	
 13547  00299A                     l1952:
 13548                           
 13549                           ; BSR set to: 1
 13550                           ;usb_device_cdc.c: 852: }
 13551                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13552                           
 13553                           ; BSR set to: 1
 13554  00299A  0E03               	movlw	3
 13555  00299C  0100               	movlb	0	; () banked
 13556  00299E  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13557  0029A0  A4D8               	btfss	status,2,c
 13558  0029A2  D002               	goto	l1954
 13559                           
 13560                           ; BSR set to: 0
 13561                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13562  0029A4  0E00               	movlw	0
 13563  0029A6  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13564  0029A8                     l1954:
 13565                           
 13566                           ; BSR set to: 0
 13567                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13568  0029A8  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13569  0029AA  B4D8               	btfsc	status,2,c
 13570  0029AC  0012               	return	
 13571                           
 13572                           ; BSR set to: 0
 13573                           ;usb_device_cdc.c: 869: }
 13574                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13575                           
 13576                           ; BSR set to: 0
 13577                           
 13578                           ; BSR set to: 0
 13579                           ;usb_device_cdc.c: 866: {
 13580                           ;usb_device_cdc.c: 867: ;
 13581                           ;usb_device_cdc.c: 868: return;
 13582  0029AE  0E02               	movlw	2
 13583  0029B0  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13584  0029B2  A4D8               	btfss	status,2,c
 13585  0029B4  D013               	goto	l1956
 13586                           
 13587                           ; BSR set to: 0
 13588                           ;usb_device_cdc.c: 875: {
 13589                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13590  0029B6  0E01               	movlw	1
 13591  0029B8  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13592  0029BA  0E00               	movlw	0
 13593  0029BC  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13594  0029BE  0E00               	movlw	0
 13595  0029C0  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13596  0029C2  0E00               	movlw	0
 13597  0029C4  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13598  0029C6  0E02               	movlw	2
 13599  0029C8  EC81  F022         	call	_USBTransferOnePacket
 13600  0029CC  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13601  0029D0  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13602                           
 13603                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13604  0029D4  0E03               	movlw	3
 13605  0029D6  0100               	movlb	0	; () banked
 13606  0029D8  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13607                           
 13608                           ;usb_device_cdc.c: 879: }
 13609  0029DA  0012               	return	
 13610  0029DC                     l1956:
 13611                           
 13612                           ; BSR set to: 0
 13613                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13614                           
 13615                           ; BSR set to: 0
 13616  0029DC  05C8               	decf	_cdc_trf_state& (0+255),w,b
 13617  0029DE  A4D8               	btfss	status,2,c
 13618  0029E0  0012               	return	
 13619                           
 13620                           ; BSR set to: 0
 13621                           ;usb_device_cdc.c: 881: {
 13622                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13623  0029E2  0E40               	movlw	64
 13624  0029E4  65C7               	cpfsgt	_cdc_tx_len& (0+255),b
 13625  0029E6  D003               	goto	l1959
 13626                           
 13627                           ; BSR set to: 0
 13628                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13629  0029E8  0E40               	movlw	64
 13630  0029EA  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13631  0029EC  D002               	goto	l1960
 13632  0029EE                     l1959:
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;usb_device_cdc.c: 887: else
 13636                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13637  0029EE  C0C7  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13638  0029F2                     l1960:
 13639                           
 13640                           ; BSR set to: 0
 13641                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13642                           
 13643                           ; BSR set to: 0
 13644  0029F2  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13645  0029F4  0800               	sublw	0
 13646  0029F6  25C7               	addwf	_cdc_tx_len& (0+255),w,b
 13647  0029F8  6FC7               	movwf	_cdc_tx_len& (0+255),b
 13648                           
 13649                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13650  0029FA  0EB6               	movlw	low _cdc_data_tx
 13651  0029FC  0102               	movlb	2	; () banked
 13652  0029FE  6FC9               	movwf	_pCDCDst& (0+255),b
 13653  002A00  0E07               	movlw	high _cdc_data_tx
 13654  002A02  6FCA               	movwf	(_pCDCDst+1)& (0+255),b
 13655                           
 13656                           ; BSR set to: 2
 13657                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13658  002A04  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13659                           
 13660                           ; BSR set to: 2
 13661                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13662  002A08  0101               	movlb	1	; () banked
 13663  002A0A  51DC               	movf	_cdc_mem_type& (0+255),w,b
 13664  002A0C  B4D8               	btfsc	status,2,c
 13665  002A0E  D01D               	goto	l1962
 13666  002A10  D03D               	goto	l1966
 13667  002A12                     
 13668                           ;usb_device_cdc.c: 901: {
 13669                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13670                           
 13671                           ; BSR set to: 1
 13672  002A12  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13673  002A16  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13674  002A1A  6AF8               	clrf	tblptru,c
 13675  002A1C  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13676  002A20  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13677  002A24  0E0E               	movlw	(high __ramtop+-1)
 13678  002A26  64F7               	cpfsgt	tblptrh,c
 13679  002A28  D003               	bra	u16017
 13680  002A2A  0008               	tblrd		*
 13681  002A2C  50F5               	movf	tablat,w,c
 13682  002A2E  D005               	bra	u16010
 13683  002A30                     u16017:
 13684  002A30  CFF6 FFE9          	movff	tblptrl,fsr0l
 13685  002A34  CFF7 FFEA          	movff	tblptrh,fsr0h
 13686  002A38  50EF               	movf	indf0,w,c
 13687  002A3A                     u16010:
 13688  002A3A  6EDF               	movwf	indf2,c
 13689                           
 13690                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13691  002A3C  0102               	movlb	2	; () banked
 13692  002A3E  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13693  002A40  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13694                           
 13695                           ; BSR set to: 2
 13696                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13697  002A42  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13698  002A44  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13699                           
 13700                           ; BSR set to: 2
 13701                           ;usb_device_cdc.c: 905: i--;
 13702  002A46  0100               	movlb	0	; () banked
 13703  002A48  0784               	decf	CDCTxService@i& (0+255),f,b
 13704  002A4A                     l1962:
 13705                           
 13706                           ; BSR set to: 0
 13707  002A4A  0100               	movlb	0	; () banked
 13708  002A4C  5184               	movf	CDCTxService@i& (0+255),w,b
 13709  002A4E  B4D8               	btfsc	status,2,c
 13710  002A50  D021               	goto	u16040
 13711  002A52  D7DF               	goto	l1963
 13712  002A54                     
 13713                           ; BSR set to: 0
 13714                           ;usb_device_cdc.c: 911: {
 13715                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13716                           
 13717                           ; BSR set to: 0
 13718  002A54  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13719  002A58  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13720  002A5C  6AF8               	clrf	tblptru,c
 13721  002A5E  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13722  002A62  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13723  002A66  0E0E               	movlw	(high __ramtop+-1)
 13724  002A68  64F7               	cpfsgt	tblptrh,c
 13725  002A6A  D003               	bra	u16037
 13726  002A6C  0008               	tblrd		*
 13727  002A6E  50F5               	movf	tablat,w,c
 13728  002A70  D005               	bra	u16030
 13729  002A72                     u16037:
 13730  002A72  CFF6 FFE9          	movff	tblptrl,fsr0l
 13731  002A76  CFF7 FFEA          	movff	tblptrh,fsr0h
 13732  002A7A  50EF               	movf	indf0,w,c
 13733  002A7C                     u16030:
 13734  002A7C  6EDF               	movwf	indf2,c
 13735                           
 13736                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13737  002A7E  0102               	movlb	2	; () banked
 13738  002A80  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13739  002A82  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13740                           
 13741                           ; BSR set to: 2
 13742                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13743  002A84  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13744  002A86  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13745                           
 13746                           ; BSR set to: 2
 13747                           ;usb_device_cdc.c: 915: i--;
 13748  002A88  0100               	movlb	0	; () banked
 13749  002A8A  0784               	decf	CDCTxService@i& (0+255),f,b
 13750  002A8C                     l1966:
 13751                           
 13752                           ; BSR set to: 0
 13753  002A8C  0100               	movlb	0	; () banked
 13754  002A8E  5184               	movf	CDCTxService@i& (0+255),w,b
 13755  002A90  A4D8               	btfss	status,2,c
 13756  002A92  D7E0               	goto	l1967
 13757  002A94                     u16040:
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;usb_device_cdc.c: 916: }
 13761                           ;usb_device_cdc.c: 917: }
 13762                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13763                           
 13764                           ; BSR set to: 0
 13765                           
 13766                           ; BSR set to: 0
 13767  002A94  51C7               	movf	_cdc_tx_len& (0+255),w,b
 13768  002A96  A4D8               	btfss	status,2,c
 13769  002A98  D008               	goto	l1971
 13770                           
 13771                           ; BSR set to: 0
 13772                           ;usb_device_cdc.c: 924: {
 13773                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13774  002A9A  0E40               	movlw	64
 13775  002A9C  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13776  002A9E  A4D8               	btfss	status,2,c
 13777  002AA0  D002               	goto	l1970
 13778                           
 13779                           ; BSR set to: 0
 13780                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13781  002AA2  0E02               	movlw	2
 13782  002AA4  D001               	goto	L13
 13783  002AA6                     l1970:
 13784                           
 13785                           ; BSR set to: 0
 13786                           ;usb_device_cdc.c: 927: else
 13787                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13788                           
 13789                           ; BSR set to: 0
 13790  002AA6  0E03               	movlw	3
 13791  002AA8                     L13:
 13792  002AA8  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13793  002AAA                     l1971:
 13794                           
 13795                           ; BSR set to: 0
 13796                           ;usb_device_cdc.c: 929: }
 13797                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13798                           
 13799                           ; BSR set to: 0
 13800                           
 13801                           ; BSR set to: 0
 13802  002AAA  0E01               	movlw	1
 13803  002AAC  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13804  002AAE  0EB6               	movlw	low _cdc_data_tx
 13805  002AB0  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13806  002AB2  0E07               	movlw	high _cdc_data_tx
 13807  002AB4  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13808  002AB6  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13809  002ABA  0E02               	movlw	2
 13810  002ABC  EC81  F022         	call	_USBTransferOnePacket
 13811  002AC0  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13812  002AC4  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13813  002AC8  0012               	return	
 13814  002ACA                     __end_of_CDCTxService:
 13815                           	opt stack 0
 13816                           tosu	equ	0xFFF
 13817                           tosh	equ	0xFFE
 13818                           tosl	equ	0xFFD
 13819                           pclath	equ	0xFFA
 13820                           tblptru	equ	0xFF8
 13821                           tblptrh	equ	0xFF7
 13822                           tblptrl	equ	0xFF6
 13823                           tablat	equ	0xFF5
 13824                           prodh	equ	0xFF4
 13825                           prodl	equ	0xFF3
 13826                           intcon	equ	0xFF2
 13827                           intcon2	equ	0xFF1
 13828                           intcon3	equ	0xFF0
 13829                           indf0	equ	0xFEF
 13830                           postinc0	equ	0xFEE
 13831                           plusw0	equ	0xFEB
 13832                           fsr0h	equ	0xFEA
 13833                           fsr0l	equ	0xFE9
 13834                           wreg	equ	0xFE8
 13835                           indf1	equ	0xFE7
 13836                           postinc1	equ	0xFE6
 13837                           postdec1	equ	0xFE5
 13838                           fsr1h	equ	0xFE2
 13839                           fsr1l	equ	0xFE1
 13840                           indf2	equ	0xFDF
 13841                           postinc2	equ	0xFDE
 13842                           postdec2	equ	0xFDD
 13843                           plusw2	equ	0xFDB
 13844                           fsr2h	equ	0xFDA
 13845                           fsr2l	equ	0xFD9
 13846                           status	equ	0xFD8
 13847                           
 13848 ;; *************** function _Term_MainSm *****************
 13849 ;; Defined at:
 13850 ;;		line 709 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13851 ;; Parameters:    Size  Location     Type
 13852 ;;		None
 13853 ;; Auto vars:     Size  Location     Type
 13854 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13855 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13856 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13857 ;;  FwkBuildYear    4    0        unsigned char [4]
 13858 ;;  FwkBuildMont    4    0        unsigned char [4]
 13859 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13860 ;; Return value:  Size  Location     Type
 13861 ;;                  1    wreg      void 
 13862 ;; Registers used:
 13863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13864 ;; Tracked objects:
 13865 ;;		On entry : 0/0
 13866 ;;		On exit  : 0/0
 13867 ;;		Unchanged: 0/0
 13868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13870 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13872 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13873 ;;Total ram usage:       12 bytes
 13874 ;; Hardware stack levels used:    1
 13875 ;; Hardware stack levels required when called:   16
 13876 ;; This function calls:
 13877 ;;		_OsTmr_GetTimerStatus
 13878 ;;		_OsTmr_StartTimer
 13879 ;;		_Terminal
 13880 ;;		_memset
 13881 ;;		_putUSBUSART
 13882 ;;		_sprintf
 13883 ;;		_strcat
 13884 ;;		_strcpy
 13885 ;;		_strlen
 13886 ;;		_utoa
 13887 ;; This function is called by:
 13888 ;;		_Term_MainTask
 13889 ;; This function uses a non-reentrant model
 13890 ;;
 13891                           
 13892                           	psect	text55
 13893  0010BC                     __ptext55:
 13894                           	opt stack 0
 13895  0010BC                     _Term_MainSm:
 13896                           	opt stack 11
 13897                           
 13898                           ;term.c: 711: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13899                           ;term.c: 712: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13900                           ;term.c: 713: static UINT8 Data[50];
 13901                           ;term.c: 714: UINT8 FwkMajorStr[4];
 13902                           ;term.c: 715: UINT8 FwkMinorStr[4];
 13903                           ;term.c: 716: UINT8 FwkBuildStr[4];
 13904                           ;term.c: 717: UINT8 FwkBuildDayStr[4];
 13905                           ;term.c: 718: UINT8 FwkBuildMonthStr[4];
 13906                           ;term.c: 719: UINT8 FwkBuildYearStr[4];
 13907                           ;term.c: 721: switch (TermMainSmState)
 13908                           
 13909                           ;incstack = 0
 13910  0010BC  D133               	goto	l2467
 13911  0010BE                     
 13912                           ;term.c: 725: OsTmr_StartTimer(&TermDelay,2000);
 13913  0010BE  0ED1               	movlw	low Term_MainSm@TermDelay
 13914  0010C0  0100               	movlb	0	; () banked
 13915  0010C2  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13916  0010C4  0E03               	movlw	high Term_MainSm@TermDelay
 13917  0010C6  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13918  0010C8  0ED0               	movlw	208
 13919  0010CA  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13920  0010CC  0E07               	movlw	7
 13921  0010CE  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13922  0010D0  0E00               	movlw	0
 13923  0010D2  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13924  0010D4  0E00               	movlw	0
 13925  0010D6  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13926  0010D8  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 13927                           
 13928                           ;term.c: 727: TermMainSmState = Term_InitDelay;
 13929  0010DC  0E01               	movlw	1
 13930  0010DE  0102               	movlb	2	; () banked
 13931  0010E0  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13932                           
 13933                           ;term.c: 728: break;
 13934  0010E2  0012               	return	
 13935  0010E4                     
 13936                           ; BSR set to: 2
 13937                           ;term.c: 732: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13938                           
 13939                           ; BSR set to: 2
 13940  0010E4  0ED1               	movlw	low Term_MainSm@TermDelay
 13941  0010E6  0100               	movlb	0	; () banked
 13942  0010E8  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13943  0010EA  0E03               	movlw	high Term_MainSm@TermDelay
 13944  0010EC  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13945  0010EE  ECD2  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 13946  0010F2  06E8               	decf	wreg,f,c
 13947  0010F4  A4D8               	btfss	status,2,c
 13948  0010F6  0012               	return	
 13949                           
 13950                           ;term.c: 733: {
 13951                           ;term.c: 735: TermMainSmState = Term_InitState;
 13952  0010F8  0E02               	movlw	2
 13953  0010FA  0102               	movlb	2	; () banked
 13954  0010FC  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13955                           
 13956                           ; BSR set to: 2
 13957                           ;term.c: 736: }
 13958                           ;term.c: 737: break;
 13959  0010FE  0012               	return	
 13960  001100                     
 13961                           ; BSR set to: 2
 13962                           ;term.c: 741: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13963                           
 13964                           ; BSR set to: 2
 13965  001100  0E1F               	movlw	31
 13966  001102  0100               	movlb	0	; () banked
 13967  001104  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 13968  001106  0012               	return	
 13969                           
 13970                           ; BSR set to: 0
 13971  001108  B265               	btfsc	3941,1,c	;volatile
 13972  00110A  0012               	return	
 13973                           
 13974                           ; BSR set to: 0
 13975                           ;term.c: 745: else
 13976                           ;term.c: 746: {
 13977                           ;term.c: 748: TermMainSmState = Term_WelcomeState;
 13978                           
 13979                           ; BSR set to: 0
 13980                           
 13981                           ; BSR set to: 0
 13982                           ;term.c: 742: {
 13983                           ;term.c: 744: }
 13984  00110C  0E03               	movlw	3
 13985  00110E  0102               	movlb	2	; () banked
 13986  001110  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13987                           
 13988                           ; BSR set to: 2
 13989                           ;term.c: 749: }
 13990                           ;term.c: 750: break;
 13991  001112  0012               	return	
 13992  001114                     
 13993                           ; BSR set to: 2
 13994                           ;term.c: 754: if((cdc_trf_state == 0))
 13995                           
 13996                           ; BSR set to: 2
 13997  001114  0100               	movlb	0	; () banked
 13998  001116  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13999  001118  A4D8               	btfss	status,2,c
 14000  00111A  0012               	return	
 14001                           
 14002                           ; BSR set to: 0
 14003                           ;term.c: 755: {
 14004                           ;term.c: 757: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 14005  00111C  0E22               	movlw	low _Welcome
 14006  00111E  6F83               	movwf	putUSBUSART@data& (0+255),b
 14007  001120  0EFD               	movlw	high _Welcome
 14008  001122  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14009  001124  0E88               	movlw	136
 14010  001126  6F85               	movwf	putUSBUSART@length& (0+255),b
 14011  001128  EC10  F035         	call	_putUSBUSART	;wreg free
 14012                           
 14013                           ;term.c: 759: TermMainSmState = Term_InstDescState;
 14014  00112C  0E04               	movlw	4
 14015  00112E  0102               	movlb	2	; () banked
 14016  001130  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14017                           
 14018                           ; BSR set to: 2
 14019                           ;term.c: 760: }
 14020                           ;term.c: 761: break;
 14021  001132  0012               	return	
 14022  001134                     
 14023                           ; BSR set to: 2
 14024                           ;term.c: 765: if((cdc_trf_state == 0))
 14025                           
 14026                           ; BSR set to: 2
 14027  001134  0100               	movlb	0	; () banked
 14028  001136  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14029  001138  A4D8               	btfss	status,2,c
 14030  00113A  0012               	return	
 14031                           
 14032                           ; BSR set to: 0
 14033                           ;term.c: 766: {
 14034                           ;term.c: 768: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 14035  00113C  0E32               	movlw	low _MsgFormat
 14036  00113E  6F83               	movwf	putUSBUSART@data& (0+255),b
 14037  001140  0EFC               	movlw	high _MsgFormat
 14038  001142  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14039  001144  0EEF               	movlw	239
 14040  001146  6F85               	movwf	putUSBUSART@length& (0+255),b
 14041  001148  EC10  F035         	call	_putUSBUSART	;wreg free
 14042                           
 14043                           ;term.c: 770: TermMainSmState = Term_FwkVerState;
 14044  00114C  0E05               	movlw	5
 14045  00114E  0102               	movlb	2	; () banked
 14046  001150  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14047                           
 14048                           ; BSR set to: 2
 14049                           ;term.c: 771: }
 14050                           ;term.c: 772: break;
 14051  001152  0012               	return	
 14052  001154                     
 14053                           ; BSR set to: 2
 14054                           ;term.c: 776: if((cdc_trf_state == 0))
 14055                           
 14056                           ; BSR set to: 2
 14057  001154  0100               	movlb	0	; () banked
 14058  001156  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14059  001158  A4D8               	btfss	status,2,c
 14060  00115A  0012               	return	
 14061                           
 14062                           ; BSR set to: 0
 14063                           ;term.c: 777: {
 14064                           ;term.c: 779: memset(Data,0,50);
 14065  00115C  0E52               	movlw	low Term_MainSm@Data
 14066  00115E  6F7D               	movwf	memset@p1& (0+255),b
 14067  001160  0E04               	movlw	high Term_MainSm@Data
 14068  001162  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14069  001164  0E00               	movlw	0
 14070  001166  6F80               	movwf	(memset@c+1)& (0+255),b
 14071  001168  0E00               	movlw	0
 14072  00116A  6F7F               	movwf	memset@c& (0+255),b
 14073  00116C  0E00               	movlw	0
 14074  00116E  6F82               	movwf	(memset@n+1)& (0+255),b
 14075  001170  0E32               	movlw	50
 14076  001172  6F81               	movwf	memset@n& (0+255),b
 14077  001174  ECB8  F033         	call	_memset	;wreg free
 14078                           
 14079                           ;term.c: 781: utoa(FwkMajorStr,1,10);
 14080  001178  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14081  00117A  0100               	movlb	0	; () banked
 14082  00117C  6F8A               	movwf	utoa@buf& (0+255),b
 14083  00117E  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14084  001180  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14085  001182  0E00               	movlw	0
 14086  001184  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14087  001186  0E01               	movlw	1
 14088  001188  6F8C               	movwf	utoa@val& (0+255),b
 14089  00118A  0E00               	movlw	0
 14090  00118C  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14091  00118E  0E0A               	movlw	10
 14092  001190  6F8E               	movwf	utoa@base& (0+255),b
 14093  001192  EC44  F024         	call	_utoa	;wreg free
 14094                           
 14095                           ;term.c: 782: utoa(FwkMinorStr,2,10);
 14096  001196  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14097  001198  0100               	movlb	0	; () banked
 14098  00119A  6F8A               	movwf	utoa@buf& (0+255),b
 14099  00119C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14100  00119E  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14101  0011A0  0E00               	movlw	0
 14102  0011A2  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14103  0011A4  0E02               	movlw	2
 14104  0011A6  6F8C               	movwf	utoa@val& (0+255),b
 14105  0011A8  0E00               	movlw	0
 14106  0011AA  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14107  0011AC  0E0A               	movlw	10
 14108  0011AE  6F8E               	movwf	utoa@base& (0+255),b
 14109  0011B0  EC44  F024         	call	_utoa	;wreg free
 14110                           
 14111                           ;term.c: 783: utoa(FwkBuildStr,0,10);
 14112  0011B4  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14113  0011B6  0100               	movlb	0	; () banked
 14114  0011B8  6F8A               	movwf	utoa@buf& (0+255),b
 14115  0011BA  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14116  0011BC  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14117  0011BE  0E00               	movlw	0
 14118  0011C0  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14119  0011C2  0E00               	movlw	0
 14120  0011C4  6F8C               	movwf	utoa@val& (0+255),b
 14121  0011C6  0E00               	movlw	0
 14122  0011C8  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14123  0011CA  0E0A               	movlw	10
 14124  0011CC  6F8E               	movwf	utoa@base& (0+255),b
 14125  0011CE  EC44  F024         	call	_utoa	;wreg free
 14126                           
 14127                           ;term.c: 784: strcpy(Data,"Framework Version: ");
 14128  0011D2  0E52               	movlw	low Term_MainSm@Data
 14129  0011D4  0100               	movlb	0	; () banked
 14130  0011D6  6F7D               	movwf	strcpy@to& (0+255),b
 14131  0011D8  0E04               	movlw	high Term_MainSm@Data
 14132  0011DA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14133  0011DC  0ED2               	movlw	low STR_23
 14134  0011DE  6F7F               	movwf	strcpy@from& (0+255),b
 14135  0011E0  0EFE               	movlw	high STR_23
 14136  0011E2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14137  0011E4  EC87  F033         	call	_strcpy	;wreg free
 14138                           
 14139                           ;term.c: 785: strcat(Data,FwkMajorStr);
 14140  0011E8  0E52               	movlw	low Term_MainSm@Data
 14141  0011EA  0100               	movlb	0	; () banked
 14142  0011EC  6F7D               	movwf	strcat@to& (0+255),b
 14143  0011EE  0E04               	movlw	high Term_MainSm@Data
 14144  0011F0  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14145  0011F2  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14146  0011F4  6F7F               	movwf	strcat@from& (0+255),b
 14147  0011F6  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14148  0011F8  6F80               	movwf	(strcat@from+1)& (0+255),b
 14149  0011FA  EC57  F02D         	call	_strcat	;wreg free
 14150                           
 14151                           ;term.c: 786: strcat(Data,".");
 14152  0011FE  0E52               	movlw	low Term_MainSm@Data
 14153  001200  0100               	movlb	0	; () banked
 14154  001202  6F7D               	movwf	strcat@to& (0+255),b
 14155  001204  0E04               	movlw	high Term_MainSm@Data
 14156  001206  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14157  001208  0EF5               	movlw	low STR_24
 14158  00120A  6F7F               	movwf	strcat@from& (0+255),b
 14159  00120C  0EFF               	movlw	high STR_24
 14160  00120E  6F80               	movwf	(strcat@from+1)& (0+255),b
 14161  001210  EC57  F02D         	call	_strcat	;wreg free
 14162                           
 14163                           ;term.c: 787: strcat(Data,FwkMinorStr);
 14164  001214  0E52               	movlw	low Term_MainSm@Data
 14165  001216  0100               	movlb	0	; () banked
 14166  001218  6F7D               	movwf	strcat@to& (0+255),b
 14167  00121A  0E04               	movlw	high Term_MainSm@Data
 14168  00121C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14169  00121E  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14170  001220  6F7F               	movwf	strcat@from& (0+255),b
 14171  001222  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14172  001224  6F80               	movwf	(strcat@from+1)& (0+255),b
 14173  001226  EC57  F02D         	call	_strcat	;wreg free
 14174                           
 14175                           ;term.c: 788: strcat(Data,".");
 14176  00122A  0E52               	movlw	low Term_MainSm@Data
 14177  00122C  0100               	movlb	0	; () banked
 14178  00122E  6F7D               	movwf	strcat@to& (0+255),b
 14179  001230  0E04               	movlw	high Term_MainSm@Data
 14180  001232  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14181  001234  0EF5               	movlw	low STR_24
 14182  001236  6F7F               	movwf	strcat@from& (0+255),b
 14183  001238  0EFF               	movlw	high STR_24
 14184  00123A  6F80               	movwf	(strcat@from+1)& (0+255),b
 14185  00123C  EC57  F02D         	call	_strcat	;wreg free
 14186                           
 14187                           ;term.c: 789: strcat(Data,FwkBuildStr);
 14188  001240  0E52               	movlw	low Term_MainSm@Data
 14189  001242  0100               	movlb	0	; () banked
 14190  001244  6F7D               	movwf	strcat@to& (0+255),b
 14191  001246  0E04               	movlw	high Term_MainSm@Data
 14192  001248  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14193  00124A  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14194  00124C  6F7F               	movwf	strcat@from& (0+255),b
 14195  00124E  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14196  001250  6F80               	movwf	(strcat@from+1)& (0+255),b
 14197  001252  EC57  F02D         	call	_strcat	;wreg free
 14198                           
 14199                           ;term.c: 790: strcat(Data,"\r\n");
 14200  001256  0E52               	movlw	low Term_MainSm@Data
 14201  001258  0100               	movlb	0	; () banked
 14202  00125A  6F7D               	movwf	strcat@to& (0+255),b
 14203  00125C  0E04               	movlw	high Term_MainSm@Data
 14204  00125E  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14205  001260  0E86               	movlw	low (STR_21+39)
 14206  001262  6F7F               	movwf	strcat@from& (0+255),b
 14207  001264  0EFE               	movlw	high (STR_21+39)
 14208  001266  6F80               	movwf	(strcat@from+1)& (0+255),b
 14209  001268  EC57  F02D         	call	_strcat	;wreg free
 14210                           
 14211                           ;term.c: 792: putUSBUSART((void*)Data,strlen(Data));
 14212  00126C  0E52               	movlw	low Term_MainSm@Data
 14213  00126E  0100               	movlb	0	; () banked
 14214  001270  6F83               	movwf	putUSBUSART@data& (0+255),b
 14215  001272  0E04               	movlw	high Term_MainSm@Data
 14216  001274  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14217  001276  0E52               	movlw	low Term_MainSm@Data
 14218  001278  6F7D               	movwf	strlen@s& (0+255),b
 14219  00127A  0E04               	movlw	high Term_MainSm@Data
 14220  00127C  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14221  00127E  EC12  F032         	call	_strlen	;wreg free
 14222  001282  0100               	movlb	0	; () banked
 14223  001284  517D               	movf	?_strlen& (0+255),w,b
 14224  001286  6F85               	movwf	putUSBUSART@length& (0+255),b
 14225  001288  EC10  F035         	call	_putUSBUSART	;wreg free
 14226                           
 14227                           ;term.c: 794: TermMainSmState = Term_FwkBuildDateState;
 14228  00128C  0E06               	movlw	6
 14229  00128E  0102               	movlb	2	; () banked
 14230  001290  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14231                           
 14232                           ; BSR set to: 2
 14233                           ;term.c: 795: }
 14234                           ;term.c: 796: break;
 14235  001292  0012               	return	
 14236  001294                     
 14237                           ; BSR set to: 2
 14238                           ;term.c: 800: if((cdc_trf_state == 0))
 14239                           
 14240                           ; BSR set to: 2
 14241  001294  0100               	movlb	0	; () banked
 14242  001296  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14243  001298  A4D8               	btfss	status,2,c
 14244  00129A  0012               	return	
 14245                           
 14246                           ; BSR set to: 0
 14247                           ;term.c: 801: {
 14248                           ;term.c: 803: memset(Data,0,50);
 14249  00129C  0E52               	movlw	low Term_MainSm@Data
 14250  00129E  6F7D               	movwf	memset@p1& (0+255),b
 14251  0012A0  0E04               	movlw	high Term_MainSm@Data
 14252  0012A2  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14253  0012A4  0E00               	movlw	0
 14254  0012A6  6F80               	movwf	(memset@c+1)& (0+255),b
 14255  0012A8  0E00               	movlw	0
 14256  0012AA  6F7F               	movwf	memset@c& (0+255),b
 14257  0012AC  0E00               	movlw	0
 14258  0012AE  6F82               	movwf	(memset@n+1)& (0+255),b
 14259  0012B0  0E32               	movlw	50
 14260  0012B2  6F81               	movwf	memset@n& (0+255),b
 14261  0012B4  ECB8  F033         	call	_memset	;wreg free
 14262                           
 14263                           ;term.c: 805: sprintf(Data,"Build Date: %s\r\n","Apr  3 2022");
 14264  0012B8  0E52               	movlw	low Term_MainSm@Data
 14265  0012BA  0100               	movlb	0	; () banked
 14266  0012BC  6F7D               	movwf	sprintf@sp& (0+255),b
 14267  0012BE  0E04               	movlw	high Term_MainSm@Data
 14268  0012C0  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14269  0012C2  0E0D               	movlw	low STR_27
 14270  0012C4  6F7F               	movwf	sprintf@f& (0+255),b
 14271  0012C6  0EFF               	movlw	high STR_27
 14272  0012C8  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14273  0012CA  0EB6               	movlw	low STR_28
 14274  0012CC  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14275  0012CE  0EFF               	movlw	high STR_28
 14276  0012D0  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14277  0012D2  EC9A  F01E         	call	_sprintf	;wreg free
 14278                           
 14279                           ;term.c: 807: putUSBUSART((void*)Data,strlen(Data));
 14280  0012D6  0E52               	movlw	low Term_MainSm@Data
 14281  0012D8  0100               	movlb	0	; () banked
 14282  0012DA  6F83               	movwf	putUSBUSART@data& (0+255),b
 14283  0012DC  0E04               	movlw	high Term_MainSm@Data
 14284  0012DE  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14285  0012E0  0E52               	movlw	low Term_MainSm@Data
 14286  0012E2  6F7D               	movwf	strlen@s& (0+255),b
 14287  0012E4  0E04               	movlw	high Term_MainSm@Data
 14288  0012E6  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14289  0012E8  EC12  F032         	call	_strlen	;wreg free
 14290  0012EC  0100               	movlb	0	; () banked
 14291  0012EE  517D               	movf	?_strlen& (0+255),w,b
 14292  0012F0  6F85               	movwf	putUSBUSART@length& (0+255),b
 14293  0012F2  EC10  F035         	call	_putUSBUSART	;wreg free
 14294                           
 14295                           ;term.c: 809: TermMainSmState = Term_SysInitState;
 14296  0012F6  0E07               	movlw	7
 14297  0012F8  0102               	movlb	2	; () banked
 14298  0012FA  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14299                           
 14300                           ; BSR set to: 2
 14301                           ;term.c: 810: }
 14302                           ;term.c: 811: break;
 14303  0012FC  0012               	return	
 14304  0012FE                     
 14305                           ; BSR set to: 2
 14306                           ;term.c: 815: if((cdc_trf_state == 0))
 14307                           
 14308                           ; BSR set to: 2
 14309  0012FE  0100               	movlb	0	; () banked
 14310  001300  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14311  001302  A4D8               	btfss	status,2,c
 14312  001304  0012               	return	
 14313                           
 14314                           ; BSR set to: 0
 14315                           ;term.c: 816: {
 14316                           ;term.c: 818: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14317  001306  0E32               	movlw	low _MsgReady
 14318  001308  6F83               	movwf	putUSBUSART@data& (0+255),b
 14319  00130A  0EFE               	movlw	high _MsgReady
 14320  00130C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14321  00130E  0E16               	movlw	22
 14322  001310  6F85               	movwf	putUSBUSART@length& (0+255),b
 14323  001312  EC10  F035         	call	_putUSBUSART	;wreg free
 14324                           
 14325                           ;term.c: 820: TermMainSmState = Term_FinalState;
 14326  001316  0E08               	movlw	8
 14327  001318  0102               	movlb	2	; () banked
 14328  00131A  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14329                           
 14330                           ; BSR set to: 2
 14331                           ;term.c: 821: }
 14332                           ;term.c: 822: break;
 14333  00131C  0012               	return	
 14334  00131E                     
 14335                           ; BSR set to: 2
 14336                           ;term.c: 826: Terminal();
 14337                           
 14338                           ; BSR set to: 2
 14339  00131E  EC68  F000         	call	_Terminal	;wreg free
 14340                           
 14341                           ;term.c: 831: }
 14342                           
 14343                           ;term.c: 830: break;
 14344                           
 14345                           ;term.c: 829: default:
 14346                           
 14347                           ;term.c: 827: break;
 14348  001322  0012               	return	
 14349  001324                     l2467:
 14350  001324  0102               	movlb	2	; () banked
 14351  001326  51E7               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14352                           
 14353                           ; Switch size 1, requested type "space"
 14354                           ; Number of cases is 9, Range of values is 0 to 8
 14355                           ; switch strategies available:
 14356                           ; Name         Instructions Cycles
 14357                           ; simple_byte           28    15 (average)
 14358                           ;	Chosen strategy is simple_byte
 14359  001328  0A00               	xorlw	0	; case 0
 14360  00132A  B4D8               	btfsc	status,2,c
 14361  00132C  D6C8               	goto	l2468
 14362  00132E  0A01               	xorlw	1	; case 1
 14363  001330  B4D8               	btfsc	status,2,c
 14364  001332  D6D8               	goto	l2470
 14365  001334  0A03               	xorlw	3	; case 2
 14366  001336  B4D8               	btfsc	status,2,c
 14367  001338  D6E3               	goto	l2472
 14368  00133A  0A01               	xorlw	1	; case 3
 14369  00133C  B4D8               	btfsc	status,2,c
 14370  00133E  D6EA               	goto	l2477
 14371  001340  0A07               	xorlw	7	; case 4
 14372  001342  B4D8               	btfsc	status,2,c
 14373  001344  D6F7               	goto	l2479
 14374  001346  0A01               	xorlw	1	; case 5
 14375  001348  B4D8               	btfsc	status,2,c
 14376  00134A  D704               	goto	l2481
 14377  00134C  0A03               	xorlw	3	; case 6
 14378  00134E  B4D8               	btfsc	status,2,c
 14379  001350  D7A1               	goto	l2483
 14380  001352  0A01               	xorlw	1	; case 7
 14381  001354  B4D8               	btfsc	status,2,c
 14382  001356  D7D3               	goto	l2485
 14383  001358  0A0F               	xorlw	15	; case 8
 14384  00135A  A4D8               	btfss	status,2,c
 14385  00135C  0012               	return	
 14386  00135E  D7DF               	goto	l2487
 14387  001360                     __end_of_Term_MainSm:
 14388                           	opt stack 0
 14389                           tosu	equ	0xFFF
 14390                           tosh	equ	0xFFE
 14391                           tosl	equ	0xFFD
 14392                           pclath	equ	0xFFA
 14393                           tblptru	equ	0xFF8
 14394                           tblptrh	equ	0xFF7
 14395                           tblptrl	equ	0xFF6
 14396                           tablat	equ	0xFF5
 14397                           prodh	equ	0xFF4
 14398                           prodl	equ	0xFF3
 14399                           intcon	equ	0xFF2
 14400                           intcon2	equ	0xFF1
 14401                           intcon3	equ	0xFF0
 14402                           indf0	equ	0xFEF
 14403                           postinc0	equ	0xFEE
 14404                           plusw0	equ	0xFEB
 14405                           fsr0h	equ	0xFEA
 14406                           fsr0l	equ	0xFE9
 14407                           wreg	equ	0xFE8
 14408                           indf1	equ	0xFE7
 14409                           postinc1	equ	0xFE6
 14410                           postdec1	equ	0xFE5
 14411                           fsr1h	equ	0xFE2
 14412                           fsr1l	equ	0xFE1
 14413                           indf2	equ	0xFDF
 14414                           postinc2	equ	0xFDE
 14415                           postdec2	equ	0xFDD
 14416                           plusw2	equ	0xFDB
 14417                           fsr2h	equ	0xFDA
 14418                           fsr2l	equ	0xFD9
 14419                           status	equ	0xFD8
 14420                           
 14421 ;; *************** function _strlen *****************
 14422 ;; Defined at:
 14423 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14424 ;; Parameters:    Size  Location     Type
 14425 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14426 ;;		 -> Term_MainSm@Data(50), 
 14427 ;; Auto vars:     Size  Location     Type
 14428 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14429 ;;		 -> Term_MainSm@Data(50), 
 14430 ;; Return value:  Size  Location     Type
 14431 ;;                  2   29[BANK0 ] unsigned int 
 14432 ;; Registers used:
 14433 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14434 ;; Tracked objects:
 14435 ;;		On entry : 0/0
 14436 ;;		On exit  : 0/0
 14437 ;;		Unchanged: 0/0
 14438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14439 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14440 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14441 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14442 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14443 ;;Total ram usage:        6 bytes
 14444 ;; Hardware stack levels used:    1
 14445 ;; Hardware stack levels required when called:   11
 14446 ;; This function calls:
 14447 ;;		Nothing
 14448 ;; This function is called by:
 14449 ;;		_Term_MainSm
 14450 ;; This function uses a non-reentrant model
 14451 ;;
 14452                           
 14453                           	psect	text56
 14454  006424                     __ptext56:
 14455                           	opt stack 0
 14456  006424                     _strlen:
 14457                           	opt stack 15
 14458                           
 14459                           ;incstack = 0
 14460  006424  C07D  F081         	movff	strlen@s,strlen@cp
 14461  006428  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14462  00642C  D003               	goto	l3594
 14463  00642E  0100               	movlb	0	; () banked
 14464  006430  4B81               	infsnz	strlen@cp& (0+255),f,b
 14465  006432  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14466  006434                     l3594:
 14467                           
 14468                           ; BSR set to: 0
 14469  006434  C081  FFD9         	movff	strlen@cp,fsr2l
 14470  006438  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14471  00643C  50DF               	movf	indf2,w,c
 14472  00643E  A4D8               	btfss	status,2,c
 14473  006440  D7F6               	goto	l3595
 14474  006442  C07D  F07F         	movff	strlen@s,??_strlen
 14475  006446  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14476  00644A  0100               	movlb	0	; () banked
 14477  00644C  1F7F               	comf	??_strlen& (0+255),f,b
 14478  00644E  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14479  006450  4B7F               	infsnz	??_strlen& (0+255),f,b
 14480  006452  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14481  006454  5181               	movf	strlen@cp& (0+255),w,b
 14482  006456  257F               	addwf	??_strlen& (0+255),w,b
 14483  006458  6F7D               	movwf	?_strlen& (0+255),b
 14484  00645A  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14485  00645C  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14486  00645E  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14487  006460  0012               	return	
 14488  006462                     __end_of_strlen:
 14489                           	opt stack 0
 14490                           tosu	equ	0xFFF
 14491                           tosh	equ	0xFFE
 14492                           tosl	equ	0xFFD
 14493                           pclath	equ	0xFFA
 14494                           tblptru	equ	0xFF8
 14495                           tblptrh	equ	0xFF7
 14496                           tblptrl	equ	0xFF6
 14497                           tablat	equ	0xFF5
 14498                           prodh	equ	0xFF4
 14499                           prodl	equ	0xFF3
 14500                           intcon	equ	0xFF2
 14501                           intcon2	equ	0xFF1
 14502                           intcon3	equ	0xFF0
 14503                           indf0	equ	0xFEF
 14504                           postinc0	equ	0xFEE
 14505                           plusw0	equ	0xFEB
 14506                           fsr0h	equ	0xFEA
 14507                           fsr0l	equ	0xFE9
 14508                           wreg	equ	0xFE8
 14509                           indf1	equ	0xFE7
 14510                           postinc1	equ	0xFE6
 14511                           postdec1	equ	0xFE5
 14512                           fsr1h	equ	0xFE2
 14513                           fsr1l	equ	0xFE1
 14514                           indf2	equ	0xFDF
 14515                           postinc2	equ	0xFDE
 14516                           postdec2	equ	0xFDD
 14517                           plusw2	equ	0xFDB
 14518                           fsr2h	equ	0xFDA
 14519                           fsr2l	equ	0xFD9
 14520                           status	equ	0xFD8
 14521                           
 14522 ;; *************** function _strcat *****************
 14523 ;; Defined at:
 14524 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14525 ;; Parameters:    Size  Location     Type
 14526 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14527 ;;		 -> Term_MainSm@Data(50), 
 14528 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14529 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14530 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14531 ;; Auto vars:     Size  Location     Type
 14532 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14533 ;;		 -> Term_MainSm@Data(50), 
 14534 ;; Return value:  Size  Location     Type
 14535 ;;                  2   29[BANK0 ] PTR unsigned char 
 14536 ;; Registers used:
 14537 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14538 ;; Tracked objects:
 14539 ;;		On entry : 0/0
 14540 ;;		On exit  : 0/0
 14541 ;;		Unchanged: 0/0
 14542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14543 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14544 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14546 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14547 ;;Total ram usage:        6 bytes
 14548 ;; Hardware stack levels used:    1
 14549 ;; Hardware stack levels required when called:   11
 14550 ;; This function calls:
 14551 ;;		Nothing
 14552 ;; This function is called by:
 14553 ;;		_Term_MainSm
 14554 ;; This function uses a non-reentrant model
 14555 ;;
 14556                           
 14557                           	psect	text57
 14558  005AAE                     __ptext57:
 14559                           	opt stack 0
 14560  005AAE                     _strcat:
 14561                           	opt stack 15
 14562                           
 14563                           ; BSR set to: 0
 14564                           ;incstack = 0
 14565  005AAE  C07D  F081         	movff	strcat@to,strcat@cp
 14566  005AB2  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14567  005AB6  D003               	goto	l3579
 14568  005AB8  0100               	movlb	0	; () banked
 14569  005ABA  4B81               	infsnz	strcat@cp& (0+255),f,b
 14570  005ABC  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14571  005ABE                     l3579:
 14572                           
 14573                           ; BSR set to: 0
 14574  005ABE  C081  FFD9         	movff	strcat@cp,fsr2l
 14575  005AC2  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14576  005AC6  50DF               	movf	indf2,w,c
 14577  005AC8  B4D8               	btfsc	status,2,c
 14578  005ACA  D006               	goto	l3582
 14579  005ACC  D7F5               	goto	l3580
 14580  005ACE  0100               	movlb	0	; () banked
 14581  005AD0  4B81               	infsnz	strcat@cp& (0+255),f,b
 14582  005AD2  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14583  005AD4  4B7F               	infsnz	strcat@from& (0+255),f,b
 14584  005AD6  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14585  005AD8                     l3582:
 14586                           
 14587                           ; BSR set to: 0
 14588  005AD8  C07F  FFF6         	movff	strcat@from,tblptrl
 14589  005ADC  C080  FFF7         	movff	strcat@from+1,tblptrh
 14590  005AE0  6AF8               	clrf	tblptru,c
 14591  005AE2  C081  FFD9         	movff	strcat@cp,fsr2l
 14592  005AE6  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14593  005AEA  0E0E               	movlw	(high __ramtop+-1)
 14594  005AEC  64F7               	cpfsgt	tblptrh,c
 14595  005AEE  D003               	bra	u14577
 14596  005AF0  0008               	tblrd		*
 14597  005AF2  50F5               	movf	tablat,w,c
 14598  005AF4  D005               	bra	u14570
 14599  005AF6                     u14577:
 14600  005AF6  CFF6 FFE9          	movff	tblptrl,fsr0l
 14601  005AFA  CFF7 FFEA          	movff	tblptrh,fsr0h
 14602  005AFE  50EF               	movf	indf0,w,c
 14603  005B00                     u14570:
 14604  005B00  6EDF               	movwf	indf2,c
 14605  005B02  50DF               	movf	indf2,w,c
 14606  005B04  B4D8               	btfsc	status,2,c
 14607  005B06  0012               	return	
 14608  005B08  D7E2               	goto	l3583
 14609  005B0A                     __end_of_strcat:
 14610                           	opt stack 0
 14611                           tosu	equ	0xFFF
 14612                           tosh	equ	0xFFE
 14613                           tosl	equ	0xFFD
 14614                           pclath	equ	0xFFA
 14615                           tblptru	equ	0xFF8
 14616                           tblptrh	equ	0xFF7
 14617                           tblptrl	equ	0xFF6
 14618                           tablat	equ	0xFF5
 14619                           prodh	equ	0xFF4
 14620                           prodl	equ	0xFF3
 14621                           intcon	equ	0xFF2
 14622                           intcon2	equ	0xFF1
 14623                           intcon3	equ	0xFF0
 14624                           indf0	equ	0xFEF
 14625                           postinc0	equ	0xFEE
 14626                           plusw0	equ	0xFEB
 14627                           fsr0h	equ	0xFEA
 14628                           fsr0l	equ	0xFE9
 14629                           wreg	equ	0xFE8
 14630                           indf1	equ	0xFE7
 14631                           postinc1	equ	0xFE6
 14632                           postdec1	equ	0xFE5
 14633                           fsr1h	equ	0xFE2
 14634                           fsr1l	equ	0xFE1
 14635                           indf2	equ	0xFDF
 14636                           postinc2	equ	0xFDE
 14637                           postdec2	equ	0xFDD
 14638                           plusw2	equ	0xFDB
 14639                           fsr2h	equ	0xFDA
 14640                           fsr2l	equ	0xFD9
 14641                           status	equ	0xFD8
 14642                           
 14643 ;; *************** function _sprintf *****************
 14644 ;; Defined at:
 14645 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14646 ;; Parameters:    Size  Location     Type
 14647 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14648 ;;		 -> Term_MainSm@Data(50), 
 14649 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14650 ;;		 -> STR_27(17), 
 14651 ;; Auto vars:     Size  Location     Type
 14652 ;;  tmpval          4    0        struct .
 14653 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14654 ;;		 -> STR_32(7), STR_28(12), 
 14655 ;;  ap              2   36[BANK0 ] PTR void [1]
 14656 ;;		 -> ?_sprintf(2), 
 14657 ;;  len             2    0        unsigned int 
 14658 ;;  val             2    0        unsigned int 
 14659 ;;  c               1   38[BANK0 ] char 
 14660 ;;  flag            1   35[BANK0 ] unsigned char 
 14661 ;;  prec            1    0        char 
 14662 ;; Return value:  Size  Location     Type
 14663 ;;                  2   29[BANK0 ] int 
 14664 ;; Registers used:
 14665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14666 ;; Tracked objects:
 14667 ;;		On entry : 0/0
 14668 ;;		On exit  : 0/0
 14669 ;;		Unchanged: 0/0
 14670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14671 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14672 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14674 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14675 ;;Total ram usage:       12 bytes
 14676 ;; Hardware stack levels used:    1
 14677 ;; Hardware stack levels required when called:   11
 14678 ;; This function calls:
 14679 ;;		Nothing
 14680 ;; This function is called by:
 14681 ;;		_Term_MainSm
 14682 ;; This function uses a non-reentrant model
 14683 ;;
 14684                           
 14685                           	psect	text58
 14686  003D34                     __ptext58:
 14687                           	opt stack 0
 14688  003D34                     _sprintf:
 14689                           	opt stack 15
 14690                           
 14691                           ;doprnt.c: 494: va_list ap;
 14692                           ;doprnt.c: 499: signed char c;
 14693                           ;doprnt.c: 506: signed char prec;
 14694                           ;doprnt.c: 508: unsigned char flag;
 14695                           ;doprnt.c: 523: union {
 14696                           ;doprnt.c: 524: unsigned long vd;
 14697                           ;doprnt.c: 525: double integ;
 14698                           ;doprnt.c: 526: } tmpval;
 14699                           ;doprnt.c: 528: unsigned int val;
 14700                           ;doprnt.c: 529: unsigned len;
 14701                           ;doprnt.c: 530: const char * cp;
 14702                           ;doprnt.c: 533: *ap = __va_start();
 14703                           
 14704                           ;incstack = 0
 14705  003D34  0E81               	movlw	low (?_sprintf+4)
 14706  003D36  0100               	movlb	0	; () banked
 14707  003D38  6F84               	movwf	sprintf@ap& (0+255),b
 14708  003D3A  0E00               	movlw	high (?_sprintf+4)
 14709  003D3C  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14710                           
 14711                           ;doprnt.c: 536: while(c = *f++) {
 14712  003D3E  D04E               	goto	l2983
 14713  003D40                     
 14714                           ; BSR set to: 0
 14715                           ;doprnt.c: 538: if(c != '%')
 14716                           
 14717                           ; BSR set to: 0
 14718  003D40  0E25               	movlw	37
 14719  003D42  1986               	xorwf	sprintf@c& (0+255),w,b
 14720  003D44  B4D8               	btfsc	status,2,c
 14721  003D46  D009               	goto	l2973
 14722                           
 14723                           ; BSR set to: 0
 14724                           ;doprnt.c: 540: {
 14725                           ;doprnt.c: 541: ((*sp++ = (c)));
 14726  003D48  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14727  003D4C  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14728  003D50  C086  FFDF         	movff	sprintf@c,indf2
 14729                           
 14730                           ; BSR set to: 0
 14731  003D54  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14732  003D56  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14733                           
 14734                           ;doprnt.c: 542: continue;
 14735  003D58  D041               	goto	l2983
 14736  003D5A                     l2973:
 14737                           
 14738                           ; BSR set to: 0
 14739                           ;doprnt.c: 543: }
 14740                           ;doprnt.c: 548: flag = 0;
 14741                           
 14742                           ; BSR set to: 0
 14743  003D5A  0E00               	movlw	0
 14744  003D5C  6F83               	movwf	sprintf@flag& (0+255),b
 14745                           
 14746                           ;doprnt.c: 635: switch(c = *f++) {
 14747  003D5E  D02E               	goto	l2974
 14748  003D60                     
 14749                           ; BSR set to: 0
 14750                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14751                           
 14752                           ; BSR set to: 0
 14753  003D60  C084  FFD9         	movff	sprintf@ap,fsr2l
 14754  003D64  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14755  003D68  CFDE F087          	movff	postinc2,sprintf@cp
 14756  003D6C  CFDD F088          	movff	postdec2,sprintf@cp+1
 14757                           
 14758                           ; BSR set to: 0
 14759  003D70  0E02               	movlw	2
 14760  003D72  2784               	addwf	sprintf@ap& (0+255),f,b
 14761  003D74  0E00               	movlw	0
 14762  003D76  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14763                           
 14764                           ; BSR set to: 0
 14765                           ;doprnt.c: 740: if(!cp)
 14766  003D78  5187               	movf	sprintf@cp& (0+255),w,b
 14767  003D7A  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14768  003D7C  A4D8               	btfss	status,2,c
 14769  003D7E  D014               	goto	l2979
 14770                           
 14771                           ; BSR set to: 0
 14772                           ;doprnt.c: 741: cp = "(null)";
 14773  003D80  0ED8               	movlw	low STR_32
 14774  003D82  6F87               	movwf	sprintf@cp& (0+255),b
 14775  003D84  0EFF               	movlw	high STR_32
 14776  003D86  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14777                           
 14778                           ; BSR set to: 0
 14779                           ;doprnt.c: 777: while(*cp)
 14780  003D88  D00F               	goto	l2979
 14781  003D8A                     
 14782                           ; BSR set to: 0
 14783                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14784                           
 14785                           ; BSR set to: 0
 14786  003D8A  C087  FFF6         	movff	sprintf@cp,tblptrl
 14787  003D8E  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14788  003D92                     	if	0	;tblptru may be non-zero
 14789  003D92                     	endif
 14790  003D92                     	if	0	;tblptru may be non-zero
 14791  003D92                     	endif
 14792  003D92  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14793  003D96  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14794  003D9A  0008               	tblrd		*
 14795  003D9C  CFF5 FFDF          	movff	tablat,indf2
 14796                           
 14797                           ; BSR set to: 0
 14798  003DA0  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14799  003DA2  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14800                           
 14801                           ; BSR set to: 0
 14802  003DA4  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14803  003DA6  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14804  003DA8                     l2979:
 14805                           
 14806                           ; BSR set to: 0
 14807                           
 14808                           ; BSR set to: 0
 14809  003DA8  C087  FFF6         	movff	sprintf@cp,tblptrl
 14810  003DAC  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14811  003DB0                     	if	0	;tblptru may be non-zero
 14812  003DB0                     	endif
 14813  003DB0                     	if	0	;tblptru may be non-zero
 14814  003DB0                     	endif
 14815  003DB0  0008               	tblrd		*
 14816  003DB2  50F5               	movf	tablat,w,c
 14817  003DB4  0900               	iorlw	0
 14818  003DB6  B4D8               	btfsc	status,2,c
 14819  003DB8  D011               	goto	l2983
 14820  003DBA  D7E7               	goto	l2980
 14821  003DBC                     l2974:
 14822                           
 14823                           ; BSR set to: 0
 14824                           
 14825                           ; BSR set to: 0
 14826  003DBC  C07F  FFF6         	movff	sprintf@f,tblptrl
 14827  003DC0  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14828  003DC4  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14829  003DC6  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14830  003DC8                     	if	0	;tblptru may be non-zero
 14831  003DC8                     	endif
 14832  003DC8                     	if	0	;tblptru may be non-zero
 14833  003DC8                     	endif
 14834  003DC8  0008               	tblrd		*
 14835  003DCA  CFF5 F086          	movff	tablat,sprintf@c
 14836  003DCE  5186               	movf	sprintf@c& (0+255),w,b
 14837                           
 14838                           ; Switch size 1, requested type "space"
 14839                           ; Number of cases is 2, Range of values is 0 to 115
 14840                           ; switch strategies available:
 14841                           ; Name         Instructions Cycles
 14842                           ; simple_byte            7     4 (average)
 14843                           ;	Chosen strategy is simple_byte
 14844  003DD0  0A00               	xorlw	0	; case 0
 14845  003DD2  B4D8               	btfsc	status,2,c
 14846  003DD4  D00F               	goto	u14630
 14847  003DD6  0A73               	xorlw	115	; case 115
 14848  003DD8  B4D8               	btfsc	status,2,c
 14849  003DDA  D7C2               	goto	l2977
 14850  003DDC                     l2983:
 14851                           
 14852                           ; BSR set to: 0
 14853                           
 14854                           ; BSR set to: 0
 14855                           
 14856                           ;doprnt.c: 1422: {
 14857                           
 14858                           ; BSR set to: 0
 14859  003DDC  C07F  FFF6         	movff	sprintf@f,tblptrl
 14860  003DE0  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14861  003DE4  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14862  003DE6  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14863  003DE8                     	if	0	;tblptru may be non-zero
 14864  003DE8                     	endif
 14865  003DE8                     	if	0	;tblptru may be non-zero
 14866  003DE8                     	endif
 14867  003DE8  0008               	tblrd		*
 14868  003DEA  CFF5 F086          	movff	tablat,sprintf@c
 14869  003DEE  5186               	movf	sprintf@c& (0+255),w,b
 14870  003DF0  A4D8               	btfss	status,2,c
 14871  003DF2  D7A6               	goto	l2972
 14872  003DF4                     u14630:
 14873                           
 14874                           ; BSR set to: 0
 14875                           ;doprnt.c: 1538: *sp = 0;
 14876                           
 14877                           ; BSR set to: 0
 14878                           
 14879                           ;doprnt.c: 1469: }
 14880                           ;doprnt.c: 1533: }
 14881                           ;doprnt.c: 1535: alldone:
 14882                           
 14883                           ; BSR set to: 0
 14884  003DF4  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14885  003DF8  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14886  003DFC  0E00               	movlw	0
 14887  003DFE  6EDF               	movwf	indf2,c
 14888  003E00  0012               	return	
 14889  003E02                     __end_of_sprintf:
 14890                           	opt stack 0
 14891                           tosu	equ	0xFFF
 14892                           tosh	equ	0xFFE
 14893                           tosl	equ	0xFFD
 14894                           pclath	equ	0xFFA
 14895                           tblptru	equ	0xFF8
 14896                           tblptrh	equ	0xFF7
 14897                           tblptrl	equ	0xFF6
 14898                           tablat	equ	0xFF5
 14899                           prodh	equ	0xFF4
 14900                           prodl	equ	0xFF3
 14901                           intcon	equ	0xFF2
 14902                           intcon2	equ	0xFF1
 14903                           intcon3	equ	0xFF0
 14904                           indf0	equ	0xFEF
 14905                           postinc0	equ	0xFEE
 14906                           plusw0	equ	0xFEB
 14907                           fsr0h	equ	0xFEA
 14908                           fsr0l	equ	0xFE9
 14909                           wreg	equ	0xFE8
 14910                           indf1	equ	0xFE7
 14911                           postinc1	equ	0xFE6
 14912                           postdec1	equ	0xFE5
 14913                           fsr1h	equ	0xFE2
 14914                           fsr1l	equ	0xFE1
 14915                           indf2	equ	0xFDF
 14916                           postinc2	equ	0xFDE
 14917                           postdec2	equ	0xFDD
 14918                           plusw2	equ	0xFDB
 14919                           fsr2h	equ	0xFDA
 14920                           fsr2l	equ	0xFD9
 14921                           status	equ	0xFD8
 14922                           
 14923 ;; *************** function _memset *****************
 14924 ;; Defined at:
 14925 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14926 ;; Parameters:    Size  Location     Type
 14927 ;;  p1              2   29[BANK0 ] PTR void 
 14928 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14929 ;;  c               2   31[BANK0 ] int 
 14930 ;;  n               2   33[BANK0 ] unsigned int 
 14931 ;; Auto vars:     Size  Location     Type
 14932 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14933 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14934 ;; Return value:  Size  Location     Type
 14935 ;;                  2   29[BANK0 ] PTR void 
 14936 ;; Registers used:
 14937 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14938 ;; Tracked objects:
 14939 ;;		On entry : 0/0
 14940 ;;		On exit  : 0/0
 14941 ;;		Unchanged: 0/0
 14942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14943 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14944 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14946 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14947 ;;Total ram usage:        8 bytes
 14948 ;; Hardware stack levels used:    1
 14949 ;; Hardware stack levels required when called:   11
 14950 ;; This function calls:
 14951 ;;		Nothing
 14952 ;; This function is called by:
 14953 ;;		_USBDeviceInit
 14954 ;;		_USBStdSetCfgHandler
 14955 ;;		_Term_MainSm
 14956 ;; This function uses a non-reentrant model
 14957 ;;
 14958                           
 14959                           	psect	text59
 14960  006770                     __ptext59:
 14961                           	opt stack 0
 14962  006770                     _memset:
 14963                           	opt stack 14
 14964                           
 14965                           ; BSR set to: 0
 14966                           ;incstack = 0
 14967  006770  C07D  F083         	movff	memset@p1,memset@p
 14968  006774  C07E  F084         	movff	memset@p1+1,memset@p+1
 14969  006778  D009               	goto	l3453
 14970  00677A                     l13230:
 14971  00677A  C083  FFD9         	movff	memset@p,fsr2l
 14972  00677E  C084  FFDA         	movff	memset@p+1,fsr2h
 14973  006782  C07F  FFDF         	movff	memset@c,indf2
 14974  006786  0100               	movlb	0	; () banked
 14975  006788  4B83               	infsnz	memset@p& (0+255),f,b
 14976  00678A  2B84               	incf	(memset@p+1)& (0+255),f,b
 14977  00678C                     l3453:
 14978                           
 14979                           ; BSR set to: 0
 14980  00678C  0100               	movlb	0	; () banked
 14981  00678E  0781               	decf	memset@n& (0+255),f,b
 14982  006790  A0D8               	btfss	status,0,c
 14983  006792  0782               	decf	(memset@n+1)& (0+255),f,b
 14984  006794  2981               	incf	memset@n& (0+255),w,b
 14985  006796  E1F1               	bnz	l13230
 14986  006798  2982               	incf	(memset@n+1)& (0+255),w,b
 14987  00679A  B4D8               	btfsc	status,2,c
 14988  00679C  0012               	return	
 14989  00679E  D7ED               	goto	l3454
 14990  0067A0                     __end_of_memset:
 14991                           	opt stack 0
 14992                           tosu	equ	0xFFF
 14993                           tosh	equ	0xFFE
 14994                           tosl	equ	0xFFD
 14995                           pclath	equ	0xFFA
 14996                           tblptru	equ	0xFF8
 14997                           tblptrh	equ	0xFF7
 14998                           tblptrl	equ	0xFF6
 14999                           tablat	equ	0xFF5
 15000                           prodh	equ	0xFF4
 15001                           prodl	equ	0xFF3
 15002                           intcon	equ	0xFF2
 15003                           intcon2	equ	0xFF1
 15004                           intcon3	equ	0xFF0
 15005                           indf0	equ	0xFEF
 15006                           postinc0	equ	0xFEE
 15007                           plusw0	equ	0xFEB
 15008                           fsr0h	equ	0xFEA
 15009                           fsr0l	equ	0xFE9
 15010                           wreg	equ	0xFE8
 15011                           indf1	equ	0xFE7
 15012                           postinc1	equ	0xFE6
 15013                           postdec1	equ	0xFE5
 15014                           fsr1h	equ	0xFE2
 15015                           fsr1l	equ	0xFE1
 15016                           indf2	equ	0xFDF
 15017                           postinc2	equ	0xFDE
 15018                           postdec2	equ	0xFDD
 15019                           plusw2	equ	0xFDB
 15020                           fsr2h	equ	0xFDA
 15021                           fsr2l	equ	0xFD9
 15022                           status	equ	0xFD8
 15023                           
 15024 ;; *************** function _Terminal *****************
 15025 ;; Defined at:
 15026 ;;		line 429 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 15027 ;; Parameters:    Size  Location     Type
 15028 ;;		None
 15029 ;; Auto vars:     Size  Location     Type
 15030 ;;  i               1   68[BANK0 ] unsigned char 
 15031 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 15032 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 15033 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 15034 ;;  Index           1   70[BANK0 ] unsigned char 
 15035 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 15036 ;; Return value:  Size  Location     Type
 15037 ;;                  1    wreg      void 
 15038 ;; Registers used:
 15039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15040 ;; Tracked objects:
 15041 ;;		On entry : 0/0
 15042 ;;		On exit  : 0/0
 15043 ;;		Unchanged: 0/0
 15044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15046 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15047 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15048 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15049 ;;Total ram usage:      455 bytes
 15050 ;; Hardware stack levels used:    1
 15051 ;; Hardware stack levels required when called:   15
 15052 ;; This function calls:
 15053 ;;		_I2cSlv_I2cReadMsgSts
 15054 ;;		_I2cSlv_ReceiveI2cMsg
 15055 ;;		_I2cSlv_SendI2cMsg
 15056 ;;		_OsTmr_Wait
 15057 ;;		_atoi
 15058 ;;		_getsUSBUSART
 15059 ;;		_itoa
 15060 ;;		_putUSBUSART
 15061 ;;		_strcpy
 15062 ;;		_strtol
 15063 ;;		_xtoi
 15064 ;; This function is called by:
 15065 ;;		_Term_MainSm
 15066 ;; This function uses a non-reentrant model
 15067 ;;
 15068                           
 15069                           	psect	text60
 15070  0000D0                     __ptext60:
 15071                           	opt stack 0
 15072  0000D0                     _Terminal:
 15073                           	opt stack 11
 15074                           
 15075                           ;term.c: 431: static TermStateType TermState = Term_GetData;
 15076                           ;term.c: 432: UINT8 UsbRxBuffer[200u];
 15077                           ;term.c: 433: UINT8 UsbTxBuffer[200u];
 15078                           ;term.c: 434: UINT8 TermTxBuffer[50u];
 15079                           ;term.c: 435: static UINT8 TermRxBuffer[50u];
 15080                           ;term.c: 436: UINT8 Index;
 15081                           ;term.c: 437: static UINT8 Len[4];
 15082                           ;term.c: 438: static UINT8 PackageLen;
 15083                           ;term.c: 439: static UINT8 Addr[4];
 15084                           ;term.c: 440: static UINT8 SlaveAddr;
 15085                           ;term.c: 441: static PayloadType Payload[20u];
 15086                           ;term.c: 442: UINT8 ReceivedBytes = 0;
 15087                           
 15088                           ; BSR set to: 0
 15089                           ;incstack = 0
 15090  0000D0  0E00               	movlw	0
 15091  0000D2  0100               	movlb	0	; () banked
 15092  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15093                           
 15094                           ; BSR set to: 0
 15095                           ;term.c: 444: static UINT8 FormatOption = 0u;
 15096                           ;term.c: 445: static UINT8 EchoOption = 1u;
 15097                           ;term.c: 446: static SwTimerType SwTimer;
 15098                           ;term.c: 449: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 15099  0000D6  0E1F               	movlw	31
 15100  0000D8  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 15101  0000DA  0012               	return	
 15102                           
 15103                           ; BSR set to: 0
 15104  0000DC  B265               	btfsc	3941,1,c	;volatile
 15105  0000DE  0012               	return	
 15106  0000E0  D27B               	goto	l2407
 15107  0000E2                     
 15108                           ;term.c: 456: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 15109                           
 15110                           ; BSR set to: 0
 15111  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 15112  0000E4  0100               	movlb	0	; () banked
 15113  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 15114  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 15115  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15116  0000EC  0EC8               	movlw	200
 15117  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 15118  0000F0  EC16  F027         	call	_getsUSBUSART	;wreg free
 15119  0000F4  0100               	movlb	0	; () banked
 15120  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15121                           
 15122                           ; BSR set to: 0
 15123                           ;term.c: 459: if (ReceivedBytes > 0)
 15124  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15125  0000FA  B4D8               	btfsc	status,2,c
 15126  0000FC  0012               	return	
 15127                           
 15128                           ; BSR set to: 0
 15129                           ;term.c: 460: {
 15130                           ;term.c: 462: if (EchoOption == 1u)
 15131  0000FE  0102               	movlb	2	; () banked
 15132  000100  05F1               	decf	Terminal@EchoOption& (0+255),w,b
 15133  000102  A4D8               	btfss	status,2,c
 15134  000104  D026               	goto	l2411
 15135                           
 15136                           ; BSR set to: 2
 15137                           ;term.c: 463: {
 15138                           ;term.c: 465: if((cdc_trf_state == 0))
 15139  000106  0100               	movlb	0	; () banked
 15140  000108  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15141  00010A  A4D8               	btfss	status,2,c
 15142  00010C  D022               	goto	l2411
 15143                           
 15144                           ; BSR set to: 0
 15145                           ;term.c: 466: {
 15146                           ;term.c: 467: UsbRxBuffer[ReceivedBytes] = '\r';
 15147  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15148  000110  0D01               	mullw	1
 15149  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15150  000114  24F3               	addwf	prodl,w,c
 15151  000116  6ED9               	movwf	fsr2l,c
 15152  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15153  00011A  20F4               	addwfc	prodh,w,c
 15154  00011C  6EDA               	movwf	fsr2h,c
 15155  00011E  0E0D               	movlw	13
 15156  000120  6EDF               	movwf	indf2,c
 15157                           
 15158                           ; BSR set to: 0
 15159                           ;term.c: 468: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15160  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15161  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15162  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15163  000128  0E01               	movlw	1
 15164  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15165  00012C  0E00               	movlw	0
 15166  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15167  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15168  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15169  000134  6ED9               	movwf	fsr2l,c
 15170  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15171  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15172  00013A  6EDA               	movwf	fsr2h,c
 15173  00013C  0E0A               	movlw	10
 15174  00013E  6EDF               	movwf	indf2,c
 15175                           
 15176                           ; BSR set to: 0
 15177                           ;term.c: 469: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15178  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15179  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15180  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15181  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15182  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15183  00014A  0F02               	addlw	2
 15184  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15185  00014E  EC10  F035         	call	_putUSBUSART	;wreg free
 15186  000152                     l2411:
 15187                           
 15188                           ;term.c: 470: }
 15189                           ;term.c: 471: }
 15190                           ;term.c: 474: if ((UsbRxBuffer[0u] == 'S') &&
 15191                           ;term.c: 475: (UsbRxBuffer[0u + 1u] == 'O') &&
 15192                           ;term.c: 476: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15193  000152  0E53               	movlw	83
 15194  000154  010A               	movlb	10	; () banked
 15195  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15196  000158  A4D8               	btfss	status,2,c
 15197  00015A  D043               	goto	l2412
 15198                           
 15199                           ; BSR set to: 10
 15200  00015C  0E4F               	movlw	79
 15201  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15202  000160  A4D8               	btfss	status,2,c
 15203  000162  D03F               	goto	l2412
 15204                           
 15205                           ; BSR set to: 10
 15206  000164  0E3A               	movlw	58
 15207  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15208  000168  A4D8               	btfss	status,2,c
 15209  00016A  D03B               	goto	l2412
 15210                           
 15211                           ; BSR set to: 10
 15212                           ;term.c: 477: {
 15213                           ;term.c: 479: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15214  00016C  0E47               	movlw	71
 15215  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15216  000170  A4D8               	btfss	status,2,c
 15217  000172  0012               	return	
 15218                           
 15219                           ; BSR set to: 10
 15220  000174  0E3A               	movlw	58
 15221  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15222  000178  A4D8               	btfss	status,2,c
 15223  00017A  0012               	return	
 15224                           
 15225                           ; BSR set to: 10
 15226                           ;term.c: 480: {
 15227                           ;term.c: 482: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15228  00017C  0E44               	movlw	68
 15229  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15230  000180  A4D8               	btfss	status,2,c
 15231  000182  D015               	goto	l2414
 15232                           
 15233                           ; BSR set to: 10
 15234  000184  0E46               	movlw	70
 15235  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15236  000188  A4D8               	btfss	status,2,c
 15237  00018A  D011               	goto	l2414
 15238                           
 15239                           ; BSR set to: 10
 15240                           ;term.c: 483: {
 15241                           ;term.c: 484: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15242  00018C  0E41               	movlw	65
 15243  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15244  000190  A4D8               	btfss	status,2,c
 15245  000192  D004               	goto	l2415
 15246                           
 15247                           ; BSR set to: 10
 15248                           ;term.c: 485: {
 15249                           ;term.c: 486: FormatOption = 1u;
 15250  000194  0E01               	movlw	1
 15251  000196  0102               	movlb	2	; () banked
 15252  000198  6FE8               	movwf	Terminal@FormatOption& (0+255),b
 15253                           
 15254                           ;term.c: 487: }
 15255  00019A  0012               	return	
 15256  00019C                     l2415:
 15257                           
 15258                           ;term.c: 488: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15259                           
 15260                           ; BSR set to: 2
 15261  00019C  0E42               	movlw	66
 15262  00019E  010A               	movlb	10	; () banked
 15263  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15264  0001A2  A4D8               	btfss	status,2,c
 15265  0001A4  0012               	return	
 15266                           
 15267                           ; BSR set to: 10
 15268                           ;term.c: 489: {
 15269                           ;term.c: 490: FormatOption = 0u;
 15270  0001A6  0E00               	movlw	0
 15271  0001A8  0102               	movlb	2	; () banked
 15272  0001AA  6FE8               	movwf	Terminal@FormatOption& (0+255),b
 15273                           
 15274                           ; BSR set to: 2
 15275                           ;term.c: 491: }
 15276                           ;term.c: 492: }
 15277                           
 15278                           ; BSR set to: 2
 15279  0001AC  0012               	return	
 15280  0001AE                     l2414:
 15281                           
 15282                           ;term.c: 494: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15283                           
 15284                           ; BSR set to: 2
 15285  0001AE  0E45               	movlw	69
 15286  0001B0  010A               	movlb	10	; () banked
 15287  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15288  0001B4  A4D8               	btfss	status,2,c
 15289  0001B6  0012               	return	
 15290                           
 15291                           ; BSR set to: 10
 15292  0001B8  0E4D               	movlw	77
 15293  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15294  0001BC  A4D8               	btfss	status,2,c
 15295  0001BE  0012               	return	
 15296                           
 15297                           ; BSR set to: 10
 15298                           ;term.c: 495: {
 15299                           ;term.c: 496: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15300  0001C0  0E31               	movlw	49
 15301  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15302  0001C4  A4D8               	btfss	status,2,c
 15303  0001C6  D004               	goto	l2420
 15304                           
 15305                           ; BSR set to: 10
 15306                           ;term.c: 497: {
 15307                           ;term.c: 498: EchoOption = 1u;
 15308  0001C8  0E01               	movlw	1
 15309  0001CA  0102               	movlb	2	; () banked
 15310  0001CC  6FF1               	movwf	Terminal@EchoOption& (0+255),b
 15311                           
 15312                           ;term.c: 499: }
 15313  0001CE  0012               	return	
 15314  0001D0                     l2420:
 15315                           
 15316                           ;term.c: 500: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15317                           
 15318                           ; BSR set to: 2
 15319  0001D0  0E30               	movlw	48
 15320  0001D2  010A               	movlb	10	; () banked
 15321  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15322  0001D6  A4D8               	btfss	status,2,c
 15323  0001D8  0012               	return	
 15324                           
 15325                           ; BSR set to: 10
 15326                           ;term.c: 501: {
 15327                           ;term.c: 502: EchoOption = 0u;
 15328  0001DA  0E00               	movlw	0
 15329  0001DC  0102               	movlb	2	; () banked
 15330  0001DE  6FF1               	movwf	Terminal@EchoOption& (0+255),b
 15331                           
 15332                           ; BSR set to: 2
 15333                           ;term.c: 508: }
 15334                           ;term.c: 509: }
 15335                           ;term.c: 510: }
 15336                           
 15337                           ; BSR set to: 2
 15338                           
 15339                           ; BSR set to: 2
 15340                           
 15341                           ;term.c: 505: else
 15342                           ;term.c: 506: {
 15343                           
 15344                           ; BSR set to: 2
 15345                           
 15346                           ; BSR set to: 2
 15347                           ;term.c: 503: }
 15348                           ;term.c: 504: }
 15349                           
 15350                           ; BSR set to: 2
 15351  0001E0  0012               	return	
 15352  0001E2                     l2412:
 15353                           
 15354                           ;term.c: 511: else if ((UsbRxBuffer[0u] == 'S') &&
 15355                           ;term.c: 512: (UsbRxBuffer[0u + 1u] == 'B') &&
 15356                           ;term.c: 513: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15357                           
 15358                           ; BSR set to: 2
 15359  0001E2  0E53               	movlw	83
 15360  0001E4  010A               	movlb	10	; () banked
 15361  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15362  0001E8  A4D8               	btfss	status,2,c
 15363  0001EA  D0D3               	goto	l2425
 15364                           
 15365                           ; BSR set to: 10
 15366  0001EC  0E42               	movlw	66
 15367  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15368  0001F0  A4D8               	btfss	status,2,c
 15369  0001F2  D0CF               	goto	l2425
 15370                           
 15371                           ; BSR set to: 10
 15372  0001F4  0E3A               	movlw	58
 15373  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15374  0001F8  A4D8               	btfss	status,2,c
 15375  0001FA  D0CB               	goto	l2425
 15376                           
 15377                           ; BSR set to: 10
 15378                           ;term.c: 514: {
 15379                           ;term.c: 515: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15380  0001FC  0E57               	movlw	87
 15381  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15382  000200  A4D8               	btfss	status,2,c
 15383  000202  D091               	goto	l2426
 15384                           
 15385                           ; BSR set to: 10
 15386  000204  0E3A               	movlw	58
 15387  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15388  000208  A4D8               	btfss	status,2,c
 15389  00020A  D08D               	goto	l2426
 15390                           
 15391                           ; BSR set to: 10
 15392                           ;term.c: 516: {
 15393                           ;term.c: 518: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15394  00020C  CA05  F3B3         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15395                           
 15396                           ;term.c: 519: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15397  000210  CA06  F3B4         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15398                           
 15399                           ;term.c: 521: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15400  000214  CA08  F3AF         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15401                           
 15402                           ;term.c: 522: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15403  000218  CA09  F3B0         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15404                           
 15405                           ; BSR set to: 10
 15406                           ;term.c: 524: PackageLen = atoi((void*)Len);
 15407  00021C  0EB3               	movlw	low Terminal@Len
 15408  00021E  0100               	movlb	0	; () banked
 15409  000220  6F83               	movwf	atoi@s& (0+255),b
 15410  000222  0E03               	movlw	high Terminal@Len
 15411  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15412  000226  EC83  F01C         	call	_atoi	;wreg free
 15413  00022A  0100               	movlb	0	; () banked
 15414  00022C  5183               	movf	?_atoi& (0+255),w,b
 15415  00022E  0102               	movlb	2	; () banked
 15416  000230  6FEA               	movwf	Terminal@PackageLen& (0+255),b
 15417                           
 15418                           ; BSR set to: 2
 15419                           ;term.c: 525: SlaveAddr = xtoi((void*)Addr);
 15420  000232  0EAF               	movlw	low Terminal@Addr
 15421  000234  0100               	movlb	0	; () banked
 15422  000236  6F83               	movwf	xtoi@s& (0+255),b
 15423  000238  0E03               	movlw	high Terminal@Addr
 15424  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15425  00023C  EC32  F01B         	call	_xtoi	;wreg free
 15426  000240  0100               	movlb	0	; () banked
 15427  000242  5183               	movf	?_xtoi& (0+255),w,b
 15428  000244  0102               	movlb	2	; () banked
 15429  000246  6FE9               	movwf	Terminal@SlaveAddr& (0+255),b
 15430                           
 15431                           ; BSR set to: 2
 15432                           ;term.c: 527: for (Index = 0; Index <= PackageLen; Index++)
 15433  000248  0E00               	movlw	0
 15434  00024A  0100               	movlb	0	; () banked
 15435  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15436  00024E  D032               	goto	l2427
 15437  000250                     
 15438                           ;term.c: 528: {
 15439                           ;term.c: 529: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15440                           
 15441                           ; BSR set to: 0
 15442  000250  0100               	movlb	0	; () banked
 15443  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15444  000254  0D02               	mullw	2
 15445  000256  0E0B               	movlw	11
 15446  000258  26F3               	addwf	prodl,f,c
 15447  00025A  0E00               	movlw	0
 15448  00025C  22F4               	addwfc	prodh,f,c
 15449  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15450  000260  24F3               	addwf	prodl,w,c
 15451  000262  6ED9               	movwf	fsr2l,c
 15452  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15453  000266  20F4               	addwfc	prodh,w,c
 15454  000268  6EDA               	movwf	fsr2h,c
 15455  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15456  00026C  0D04               	mullw	4
 15457  00026E  0E66               	movlw	low Terminal@Payload
 15458  000270  24F3               	addwf	prodl,w,c
 15459  000272  6EE1               	movwf	fsr1l,c
 15460  000274  0E07               	movlw	high Terminal@Payload
 15461  000276  20F4               	addwfc	prodh,w,c
 15462  000278  6EE2               	movwf	fsr1h,c
 15463  00027A  CFDF FFE7          	movff	indf2,indf1
 15464                           
 15465                           ;term.c: 530: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15466  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15467  000280  0D02               	mullw	2
 15468  000282  0E0C               	movlw	12
 15469  000284  26F3               	addwf	prodl,f,c
 15470  000286  0E00               	movlw	0
 15471  000288  22F4               	addwfc	prodh,f,c
 15472  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15473  00028C  24F3               	addwf	prodl,w,c
 15474  00028E  6ED9               	movwf	fsr2l,c
 15475  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15476  000292  20F4               	addwfc	prodh,w,c
 15477  000294  6EDA               	movwf	fsr2h,c
 15478  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15479  000298  0D04               	mullw	4
 15480  00029A  0E01               	movlw	1
 15481  00029C  26F3               	addwf	prodl,f,c
 15482  00029E  0E00               	movlw	0
 15483  0002A0  22F4               	addwfc	prodh,f,c
 15484  0002A2  0E66               	movlw	low Terminal@Payload
 15485  0002A4  24F3               	addwf	prodl,w,c
 15486  0002A6  6EE1               	movwf	fsr1l,c
 15487  0002A8  0E07               	movlw	high Terminal@Payload
 15488  0002AA  20F4               	addwfc	prodh,w,c
 15489  0002AC  6EE2               	movwf	fsr1h,c
 15490  0002AE  CFDF FFE7          	movff	indf2,indf1
 15491                           
 15492                           ; BSR set to: 0
 15493  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15494  0002B4                     l2427:
 15495                           
 15496                           ; BSR set to: 0
 15497                           
 15498                           ; BSR set to: 0
 15499  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15500  0002B6  0102               	movlb	2	; () banked
 15501  0002B8  5DEA               	subwf	Terminal@PackageLen& (0+255),w,b
 15502  0002BA  B0D8               	btfsc	status,0,c
 15503  0002BC  D7C9               	goto	l2428
 15504                           
 15505                           ; BSR set to: 2
 15506                           ;term.c: 531: }
 15507                           ;term.c: 533: for (Index = 0; Index <= PackageLen; Index++)
 15508                           
 15509                           ; BSR set to: 2
 15510  0002BE  0E00               	movlw	0
 15511  0002C0  0100               	movlb	0	; () banked
 15512  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15513  0002C4  D01F               	goto	l2430
 15514  0002C6                     
 15515                           ;term.c: 534: {
 15516                           ;term.c: 538: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15517                           
 15518                           ; BSR set to: 0
 15519  0002C6  0100               	movlb	0	; () banked
 15520  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15521  0002CA  0D04               	mullw	4
 15522  0002CC  0E66               	movlw	low Terminal@Payload
 15523  0002CE  24F3               	addwf	prodl,w,c
 15524  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15525  0002D2  0E07               	movlw	high Terminal@Payload
 15526  0002D4  20F4               	addwfc	prodh,w,c
 15527  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15528  0002D8  0E00               	movlw	0
 15529  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15530  0002DC  0E00               	movlw	0
 15531  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15532  0002E0  0E00               	movlw	0
 15533  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15534  0002E4  0E10               	movlw	16
 15535  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15536  0002E8  EC11  F00C         	call	_strtol	;wreg free
 15537  0002EC  0100               	movlb	0	; () banked
 15538  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15539  0002F0  0D01               	mullw	1
 15540  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15541  0002F4  24F3               	addwf	prodl,w,c
 15542  0002F6  6ED9               	movwf	fsr2l,c
 15543  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15544  0002FA  20F4               	addwfc	prodh,w,c
 15545  0002FC  6EDA               	movwf	fsr2h,c
 15546  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15547                           
 15548                           ; BSR set to: 0
 15549  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15550  000304                     l2430:
 15551                           
 15552                           ; BSR set to: 0
 15553                           
 15554                           ; BSR set to: 0
 15555  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15556  000306  0102               	movlb	2	; () banked
 15557  000308  5DEA               	subwf	Terminal@PackageLen& (0+255),w,b
 15558  00030A  B0D8               	btfsc	status,0,c
 15559  00030C  D7DC               	goto	l2431
 15560                           
 15561                           ; BSR set to: 2
 15562                           ;term.c: 540: }
 15563                           ;term.c: 543: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15564                           
 15565                           ; BSR set to: 2
 15566  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15567  000310  0100               	movlb	0	; () banked
 15568  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15569  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15570  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15571  000318  C2E9  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15572  00031C  C2EA  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15573  000320  EC31  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 15574                           
 15575                           ;term.c: 544: }
 15576  000324  0012               	return	
 15577  000326                     l2426:
 15578                           
 15579                           ;term.c: 545: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15580  000326  0E52               	movlw	82
 15581  000328  010A               	movlb	10	; () banked
 15582  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15583  00032C  A4D8               	btfss	status,2,c
 15584  00032E  0012               	return	
 15585                           
 15586                           ; BSR set to: 10
 15587  000330  0E3A               	movlw	58
 15588  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15589  000334  A4D8               	btfss	status,2,c
 15590  000336  0012               	return	
 15591                           
 15592                           ; BSR set to: 10
 15593                           ;term.c: 546: {
 15594                           ;term.c: 548: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15595  000338  CA05  F3B3         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15596                           
 15597                           ;term.c: 549: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15598  00033C  CA06  F3B4         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15599                           
 15600                           ;term.c: 551: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15601  000340  CA08  F3AF         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15602                           
 15603                           ;term.c: 552: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15604  000344  CA09  F3B0         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15605                           
 15606                           ; BSR set to: 10
 15607                           ;term.c: 554: PackageLen = atoi((void*)Len);
 15608  000348  0EB3               	movlw	low Terminal@Len
 15609  00034A  0100               	movlb	0	; () banked
 15610  00034C  6F83               	movwf	atoi@s& (0+255),b
 15611  00034E  0E03               	movlw	high Terminal@Len
 15612  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15613  000352  EC83  F01C         	call	_atoi	;wreg free
 15614  000356  0100               	movlb	0	; () banked
 15615  000358  5183               	movf	?_atoi& (0+255),w,b
 15616  00035A  0102               	movlb	2	; () banked
 15617  00035C  6FEA               	movwf	Terminal@PackageLen& (0+255),b
 15618                           
 15619                           ; BSR set to: 2
 15620                           ;term.c: 555: SlaveAddr = xtoi((void*)Addr);
 15621  00035E  0EAF               	movlw	low Terminal@Addr
 15622  000360  0100               	movlb	0	; () banked
 15623  000362  6F83               	movwf	xtoi@s& (0+255),b
 15624  000364  0E03               	movlw	high Terminal@Addr
 15625  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15626  000368  EC32  F01B         	call	_xtoi	;wreg free
 15627  00036C  0100               	movlb	0	; () banked
 15628  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15629  000370  0102               	movlb	2	; () banked
 15630  000372  6FE9               	movwf	Terminal@SlaveAddr& (0+255),b
 15631                           
 15632                           ; BSR set to: 2
 15633                           ;term.c: 558: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15634  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15635  000376  0100               	movlb	0	; () banked
 15636  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15637  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15638  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15639  00037E  C2E9  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15640  000382  C2EA  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15641  000386  ECD2  F031         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15642                           
 15643                           ;term.c: 561: TermState = Term_PrepSlvI2cResp;
 15644  00038A  0E01               	movlw	1
 15645  00038C  0102               	movlb	2	; () banked
 15646  00038E  6FEB               	movwf	Terminal@TermState& (0+255),b
 15647                           
 15648                           ; BSR set to: 2
 15649                           ;term.c: 562: }
 15650                           ;term.c: 563: }
 15651                           
 15652                           ; BSR set to: 2
 15653  000390  0012               	return	
 15654  000392                     l2425:
 15655                           
 15656                           ;term.c: 564: else if ((UsbRxBuffer[0u] == 'T') &&
 15657                           ;term.c: 565: (UsbRxBuffer[0u + 1u] == 'E') &&
 15658                           ;term.c: 566: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15659                           
 15660                           ; BSR set to: 2
 15661  000392  0E54               	movlw	84
 15662  000394  010A               	movlb	10	; () banked
 15663  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15664  000398  A4D8               	btfss	status,2,c
 15665  00039A  0012               	return	
 15666                           
 15667                           ; BSR set to: 10
 15668  00039C  0E45               	movlw	69
 15669  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15670  0003A0  A4D8               	btfss	status,2,c
 15671  0003A2  0012               	return	
 15672                           
 15673                           ; BSR set to: 10
 15674  0003A4  0E4C               	movlw	76
 15675  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15676  0003A8  A4D8               	btfss	status,2,c
 15677  0003AA  0012               	return	
 15678                           
 15679                           ; BSR set to: 10
 15680                           ;term.c: 567: {
 15681                           ;term.c: 569: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15682  0003AC  CA03  F3B3         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15683                           
 15684                           ;term.c: 570: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15685  0003B0  CA04  F3B4         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15686                           
 15687                           ; BSR set to: 10
 15688                           ;term.c: 571: UsbMasterPhoneNumberLen = atoi(Len);
 15689  0003B4  0EB3               	movlw	low Terminal@Len
 15690  0003B6  0100               	movlb	0	; () banked
 15691  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15692  0003BA  0E03               	movlw	high Terminal@Len
 15693  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15694  0003BE  EC83  F01C         	call	_atoi	;wreg free
 15695  0003C2  C083  F31A         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15696  0003C6  C084  F31B         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15697                           
 15698                           ;term.c: 573: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15699  0003CA  0E00               	movlw	0
 15700  0003CC  0100               	movlb	0	; () banked
 15701  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15702  0003D0  D018               	goto	l2437
 15703  0003D2                     
 15704                           ; BSR set to: 0
 15705                           ;term.c: 574: {
 15706                           ;term.c: 575: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15707                           
 15708                           ; BSR set to: 0
 15709  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15710  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15711  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15712  0003D8  0E05               	movlw	5
 15713  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15714  0003DC  0E00               	movlw	0
 15715  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15716  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15717  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15718  0003E4  6ED9               	movwf	fsr2l,c
 15719  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15720  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15721  0003EA  6EDA               	movwf	fsr2h,c
 15722  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15723  0003EE  0D01               	mullw	1
 15724  0003F0  0EAC               	movlw	low _UsbMasterPhoneNumber
 15725  0003F2  24F3               	addwf	prodl,w,c
 15726  0003F4  6EE1               	movwf	fsr1l,c
 15727  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15728  0003F8  20F4               	addwfc	prodh,w,c
 15729  0003FA  6EE2               	movwf	fsr1h,c
 15730  0003FC  CFDF FFE7          	movff	indf2,indf1
 15731                           
 15732                           ; BSR set to: 0
 15733  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15734  000402                     l2437:
 15735                           
 15736                           ; BSR set to: 0
 15737                           
 15738                           ; BSR set to: 0
 15739  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15740  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15741  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15742  000408  0103               	movlb	3	; () banked
 15743  00040A  511A               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15744  00040C  0100               	movlb	0	; () banked
 15745  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15746  000410  0103               	movlb	3	; () banked
 15747  000412  511B               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15748  000414  0100               	movlb	0	; () banked
 15749  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15750  000418  A0D8               	btfss	status,0,c
 15751  00041A  D7DB               	goto	l2438
 15752                           
 15753                           ; BSR set to: 0
 15754                           ;term.c: 576: }
 15755                           ;term.c: 577: IsUsbNumberReceived = 1;
 15756                           
 15757                           ; BSR set to: 0
 15758  00041C  0E01               	movlw	1
 15759  00041E  0102               	movlb	2	; () banked
 15760  000420  6FED               	movwf	_IsUsbNumberReceived& (0+255),b
 15761                           
 15762                           ; BSR set to: 2
 15763                           ;term.c: 584: }
 15764                           ;term.c: 616: }
 15765                           ;term.c: 617: break;
 15766                           
 15767                           ; BSR set to: 2
 15768                           
 15769                           ; BSR set to: 2
 15770                           
 15771                           ; BSR set to: 2
 15772                           
 15773                           ; BSR set to: 2
 15774                           
 15775                           ;term.c: 582: {
 15776                           
 15777                           ; BSR set to: 2
 15778                           
 15779                           ; BSR set to: 2
 15780                           
 15781                           ; BSR set to: 2
 15782                           
 15783                           ; BSR set to: 2
 15784                           
 15785                           ;term.c: 578: }
 15786  000422  0012               	return	
 15787  000424                     
 15788                           ; BSR set to: 2
 15789                           ;term.c: 621: if((cdc_trf_state == 0))
 15790                           
 15791                           ; BSR set to: 2
 15792  000424  0100               	movlb	0	; () banked
 15793  000426  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15794  000428  A4D8               	btfss	status,2,c
 15795  00042A  0012               	return	
 15796                           
 15797                           ; BSR set to: 0
 15798                           ;term.c: 622: {
 15799                           ;term.c: 623: UsbTxBuffer[0] = 'S';
 15800  00042C  0E53               	movlw	83
 15801  00042E  0102               	movlb	2	; () banked
 15802  000430  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15803                           
 15804                           ;term.c: 624: UsbTxBuffer[1] = 'B';
 15805  000432  0E42               	movlw	66
 15806  000434  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15807                           
 15808                           ;term.c: 625: UsbTxBuffer[2] = '[';
 15809  000436  0E5B               	movlw	91
 15810  000438  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15811                           
 15812                           ; BSR set to: 2
 15813                           ;term.c: 626: UsbTxBuffer[3] = Addr[0];
 15814  00043A  C3AF  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15815                           
 15816                           ; BSR set to: 2
 15817                           ;term.c: 627: UsbTxBuffer[4] = Addr[1];
 15818  00043E  C3B0  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15819                           
 15820                           ;term.c: 628: UsbTxBuffer[5] = ']';
 15821  000442  0E5D               	movlw	93
 15822  000444  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15823                           
 15824                           ;term.c: 629: UsbTxBuffer[6] = ':';
 15825  000446  0E3A               	movlw	58
 15826  000448  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15827                           
 15828                           ; BSR set to: 2
 15829                           ;term.c: 630: putUSBUSART(UsbTxBuffer,7);
 15830  00044A  0E00               	movlw	low Terminal@UsbTxBuffer
 15831  00044C  0100               	movlb	0	; () banked
 15832  00044E  6F83               	movwf	putUSBUSART@data& (0+255),b
 15833  000450  0E02               	movlw	high Terminal@UsbTxBuffer
 15834  000452  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15835  000454  0E07               	movlw	7
 15836  000456  6F85               	movwf	putUSBUSART@length& (0+255),b
 15837  000458  EC10  F035         	call	_putUSBUSART	;wreg free
 15838                           
 15839                           ;term.c: 633: TermState = Term_ReadSlvI2cData;
 15840  00045C  0E02               	movlw	2
 15841  00045E  0102               	movlb	2	; () banked
 15842  000460  6FEB               	movwf	Terminal@TermState& (0+255),b
 15843                           
 15844                           ; BSR set to: 2
 15845                           ;term.c: 634: }
 15846                           ;term.c: 635: break;
 15847  000462  0012               	return	
 15848  000464                     
 15849                           ; BSR set to: 2
 15850                           ;term.c: 639: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15851                           
 15852                           ; BSR set to: 2
 15853  000464  EC32  F035         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15854  000468  06E8               	decf	wreg,f,c
 15855  00046A  A4D8               	btfss	status,2,c
 15856  00046C  D088               	goto	l2446
 15857                           
 15858                           ;term.c: 640: {
 15859                           ;term.c: 642: if (FormatOption == 1u)
 15860  00046E  0102               	movlb	2	; () banked
 15861  000470  05E8               	decf	Terminal@FormatOption& (0+255),w,b
 15862  000472  A4D8               	btfss	status,2,c
 15863  000474  D027               	goto	u14510
 15864                           
 15865                           ; BSR set to: 2
 15866                           ;term.c: 643: {
 15867                           ;term.c: 645: for (Index = 0; Index <= PackageLen; Index++)
 15868  000476  0E00               	movlw	0
 15869  000478  0100               	movlb	0	; () banked
 15870  00047A  6FA6               	movwf	Terminal@Index& (0+255),b
 15871  00047C  D01E               	goto	l2448
 15872  00047E                     
 15873                           ;term.c: 646: {
 15874                           ;term.c: 647: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15875                           
 15876                           ; BSR set to: 0
 15877  00047E  0100               	movlb	0	; () banked
 15878  000480  51A6               	movf	Terminal@Index& (0+255),w,b
 15879  000482  0D04               	mullw	4
 15880  000484  0E66               	movlw	low Terminal@Payload
 15881  000486  24F3               	addwf	prodl,w,c
 15882  000488  6F93               	movwf	itoa@buf& (0+255),b
 15883  00048A  0E07               	movlw	high Terminal@Payload
 15884  00048C  20F4               	addwfc	prodh,w,c
 15885  00048E  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15886  000490  51A6               	movf	Terminal@Index& (0+255),w,b
 15887  000492  0D01               	mullw	1
 15888  000494  0E40               	movlw	low Terminal@TermRxBuffer
 15889  000496  24F3               	addwf	prodl,w,c
 15890  000498  6ED9               	movwf	fsr2l,c
 15891  00049A  0E05               	movlw	high Terminal@TermRxBuffer
 15892  00049C  20F4               	addwfc	prodh,w,c
 15893  00049E  6EDA               	movwf	fsr2h,c
 15894  0004A0  50DF               	movf	indf2,w,c
 15895  0004A2  6FA2               	movwf	??_Terminal& (0+255),b
 15896  0004A4  51A2               	movf	??_Terminal& (0+255),w,b
 15897  0004A6  6F95               	movwf	itoa@val& (0+255),b
 15898  0004A8  6B96               	clrf	(itoa@val+1)& (0+255),b
 15899  0004AA  0E00               	movlw	0
 15900  0004AC  6F98               	movwf	(itoa@base+1)& (0+255),b
 15901  0004AE  0E0A               	movlw	10
 15902  0004B0  6F97               	movwf	itoa@base& (0+255),b
 15903  0004B2  EC6C  F031         	call	_itoa	;wreg free
 15904  0004B6  0100               	movlb	0	; () banked
 15905  0004B8  2BA6               	incf	Terminal@Index& (0+255),f,b
 15906  0004BA                     l2448:
 15907                           
 15908                           ; BSR set to: 0
 15909                           
 15910                           ; BSR set to: 0
 15911  0004BA  51A6               	movf	Terminal@Index& (0+255),w,b
 15912  0004BC  0102               	movlb	2	; () banked
 15913  0004BE  5DEA               	subwf	Terminal@PackageLen& (0+255),w,b
 15914  0004C0  B0D8               	btfsc	status,0,c
 15915  0004C2  D7DD               	goto	l2449
 15916  0004C4                     u14510:
 15917                           
 15918                           ; BSR set to: 2
 15919                           ;term.c: 648: }
 15920                           ;term.c: 649: }
 15921                           ;term.c: 652: if((cdc_trf_state == 0))
 15922                           
 15923                           ; BSR set to: 2
 15924                           
 15925                           ; BSR set to: 2
 15926  0004C4  0100               	movlb	0	; () banked
 15927  0004C6  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15928  0004C8  A4D8               	btfss	status,2,c
 15929  0004CA  0012               	return	
 15930                           
 15931                           ; BSR set to: 0
 15932                           ;term.c: 653: {
 15933                           ;term.c: 655: if (FormatOption == 1u)
 15934  0004CC  0102               	movlb	2	; () banked
 15935  0004CE  05E8               	decf	Terminal@FormatOption& (0+255),w,b
 15936  0004D0  A4D8               	btfss	status,2,c
 15937  0004D2  D02B               	goto	l2452
 15938                           
 15939                           ; BSR set to: 2
 15940                           ;term.c: 656: {
 15941                           ;term.c: 657: Payload[(2*PackageLen)].Byte[3] = '\r';
 15942  0004D4  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 15943  0004D6  0D08               	mullw	8
 15944  0004D8  0E03               	movlw	3
 15945  0004DA  26F3               	addwf	prodl,f,c
 15946  0004DC  0E00               	movlw	0
 15947  0004DE  22F4               	addwfc	prodh,f,c
 15948  0004E0  0E66               	movlw	low Terminal@Payload
 15949  0004E2  24F3               	addwf	prodl,w,c
 15950  0004E4  6ED9               	movwf	fsr2l,c
 15951  0004E6  0E07               	movlw	high Terminal@Payload
 15952  0004E8  20F4               	addwfc	prodh,w,c
 15953  0004EA  6EDA               	movwf	fsr2h,c
 15954  0004EC  0E0D               	movlw	13
 15955  0004EE  6EDF               	movwf	indf2,c
 15956                           
 15957                           ;term.c: 658: Payload[(2*PackageLen)].Byte[2] = '\n';
 15958  0004F0  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 15959  0004F2  0D08               	mullw	8
 15960  0004F4  0E02               	movlw	2
 15961  0004F6  26F3               	addwf	prodl,f,c
 15962  0004F8  0E00               	movlw	0
 15963  0004FA  22F4               	addwfc	prodh,f,c
 15964  0004FC  0E66               	movlw	low Terminal@Payload
 15965  0004FE  24F3               	addwf	prodl,w,c
 15966  000500  6ED9               	movwf	fsr2l,c
 15967  000502  0E07               	movlw	high Terminal@Payload
 15968  000504  20F4               	addwfc	prodh,w,c
 15969  000506  6EDA               	movwf	fsr2h,c
 15970  000508  0E0A               	movlw	10
 15971  00050A  6EDF               	movwf	indf2,c
 15972                           
 15973                           ; BSR set to: 2
 15974                           ;term.c: 660: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15975  00050C  0E66               	movlw	low Terminal@Payload
 15976  00050E  0100               	movlb	0	; () banked
 15977  000510  6F83               	movwf	putUSBUSART@data& (0+255),b
 15978  000512  0E07               	movlw	high Terminal@Payload
 15979  000514  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15980  000516  0102               	movlb	2	; () banked
 15981  000518  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 15982  00051A  0D02               	mullw	2
 15983  00051C  50F3               	movf	prodl,w,c
 15984  00051E  0F04               	addlw	4
 15985  000520  0100               	movlb	0	; () banked
 15986  000522  6F85               	movwf	putUSBUSART@length& (0+255),b
 15987  000524  EC10  F035         	call	_putUSBUSART	;wreg free
 15988                           
 15989                           ;term.c: 661: }
 15990  000528  D026               	goto	l2453
 15991  00052A                     l2452:
 15992                           
 15993                           ;term.c: 662: else
 15994                           ;term.c: 663: {
 15995                           ;term.c: 664: TermRxBuffer[PackageLen] = '\r';
 15996  00052A  0102               	movlb	2	; () banked
 15997  00052C  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 15998  00052E  0D01               	mullw	1
 15999  000530  0E40               	movlw	low Terminal@TermRxBuffer
 16000  000532  24F3               	addwf	prodl,w,c
 16001  000534  6ED9               	movwf	fsr2l,c
 16002  000536  0E05               	movlw	high Terminal@TermRxBuffer
 16003  000538  20F4               	addwfc	prodh,w,c
 16004  00053A  6EDA               	movwf	fsr2h,c
 16005  00053C  0E0D               	movlw	13
 16006  00053E  6EDF               	movwf	indf2,c
 16007                           
 16008                           ; BSR set to: 2
 16009                           ;term.c: 665: TermRxBuffer[PackageLen + 1] = '\n';
 16010  000540  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 16011  000542  0100               	movlb	0	; () banked
 16012  000544  6FA2               	movwf	??_Terminal& (0+255),b
 16013  000546  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16014  000548  0E01               	movlw	1
 16015  00054A  27A2               	addwf	??_Terminal& (0+255),f,b
 16016  00054C  0E00               	movlw	0
 16017  00054E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 16018  000550  0E40               	movlw	low Terminal@TermRxBuffer
 16019  000552  25A2               	addwf	??_Terminal& (0+255),w,b
 16020  000554  6ED9               	movwf	fsr2l,c
 16021  000556  0E05               	movlw	high Terminal@TermRxBuffer
 16022  000558  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 16023  00055A  6EDA               	movwf	fsr2h,c
 16024  00055C  0E0A               	movlw	10
 16025  00055E  6EDF               	movwf	indf2,c
 16026                           
 16027                           ; BSR set to: 0
 16028                           ;term.c: 667: putUSBUSART(TermRxBuffer,PackageLen + 2);
 16029  000560  0E40               	movlw	low Terminal@TermRxBuffer
 16030  000562  6F83               	movwf	putUSBUSART@data& (0+255),b
 16031  000564  0E05               	movlw	high Terminal@TermRxBuffer
 16032  000566  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16033  000568  0102               	movlb	2	; () banked
 16034  00056A  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 16035  00056C  0F02               	addlw	2
 16036  00056E  0100               	movlb	0	; () banked
 16037  000570  6F85               	movwf	putUSBUSART@length& (0+255),b
 16038  000572  EC10  F035         	call	_putUSBUSART	;wreg free
 16039  000576                     l2453:
 16040                           
 16041                           ;term.c: 668: }
 16042                           ;term.c: 670: TermState = Term_GetData;
 16043  000576  0E00               	movlw	0
 16044  000578  0102               	movlb	2	; () banked
 16045  00057A  6FEB               	movwf	Terminal@TermState& (0+255),b
 16046                           
 16047                           ; BSR set to: 2
 16048                           ;term.c: 671: }
 16049                           ;term.c: 672: }
 16050  00057C  0012               	return	
 16051  00057E                     l2446:
 16052                           
 16053                           ;term.c: 673: else
 16054                           ;term.c: 674: {
 16055                           ;term.c: 676: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 16056                           
 16057                           ; BSR set to: 2
 16058  00057E  0ED7               	movlw	low Terminal@SwTimer
 16059  000580  0100               	movlb	0	; () banked
 16060  000582  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 16061  000584  0E04               	movlw	high Terminal@SwTimer
 16062  000586  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 16063  000588  0EB8               	movlw	184
 16064  00058A  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 16065  00058C  0E0B               	movlw	11
 16066  00058E  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 16067  000590  0E00               	movlw	0
 16068  000592  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 16069  000594  0E00               	movlw	0
 16070  000596  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 16071  000598  EC2C  F02A         	call	_OsTmr_Wait	;wreg free
 16072  00059C  06E8               	decf	wreg,f,c
 16073  00059E  A4D8               	btfss	status,2,c
 16074  0005A0  0012               	return	
 16075                           
 16076                           ;term.c: 677: {
 16077                           ;term.c: 679: if((cdc_trf_state == 0))
 16078  0005A2  0100               	movlb	0	; () banked
 16079  0005A4  51C8               	movf	_cdc_trf_state& (0+255),w,b
 16080  0005A6  A4D8               	btfss	status,2,c
 16081  0005A8  0012               	return	
 16082                           
 16083                           ; BSR set to: 0
 16084                           ;term.c: 680: {
 16085                           ;term.c: 681: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 16086  0005AA  0E00               	movlw	low Terminal@UsbTxBuffer
 16087  0005AC  6F7D               	movwf	strcpy@to& (0+255),b
 16088  0005AE  0E02               	movlw	high Terminal@UsbTxBuffer
 16089  0005B0  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 16090  0005B2  0E5F               	movlw	low STR_21
 16091  0005B4  6F7F               	movwf	strcpy@from& (0+255),b
 16092  0005B6  0EFE               	movlw	high STR_21
 16093  0005B8  6F80               	movwf	(strcpy@from+1)& (0+255),b
 16094  0005BA  EC87  F033         	call	_strcpy	;wreg free
 16095                           
 16096                           ;term.c: 682: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 16097  0005BE  0E00               	movlw	low Terminal@UsbTxBuffer
 16098  0005C0  0100               	movlb	0	; () banked
 16099  0005C2  6F83               	movwf	putUSBUSART@data& (0+255),b
 16100  0005C4  0E02               	movlw	high Terminal@UsbTxBuffer
 16101  0005C6  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16102  0005C8  0E29               	movlw	41
 16103  0005CA  6F85               	movwf	putUSBUSART@length& (0+255),b
 16104  0005CC  EC10  F035         	call	_putUSBUSART	;wreg free
 16105                           
 16106                           ;term.c: 684: TermState = Term_GetData;
 16107  0005D0  0E00               	movlw	0
 16108  0005D2  0102               	movlb	2	; () banked
 16109  0005D4  6FEB               	movwf	Terminal@TermState& (0+255),b
 16110                           
 16111                           ; BSR set to: 2
 16112                           ;term.c: 695: }
 16113                           
 16114                           ; BSR set to: 2
 16115                           ;term.c: 694: break;
 16116                           
 16117                           ;term.c: 693: default:
 16118                           
 16119                           ; BSR set to: 2
 16120                           ;term.c: 691: break;
 16121                           
 16122                           ;term.c: 690: case Term_ReadSlvUartData:
 16123                           
 16124                           ; BSR set to: 2
 16125                           ;term.c: 685: }
 16126                           ;term.c: 686: }
 16127                           ;term.c: 687: }
 16128                           ;term.c: 688: break;
 16129                           
 16130                           ; BSR set to: 2
 16131                           
 16132                           ; BSR set to: 2
 16133  0005D6  0012               	return	
 16134  0005D8                     l2407:
 16135                           
 16136                           ; BSR set to: 2
 16137  0005D8  0102               	movlb	2	; () banked
 16138  0005DA  51EB               	movf	Terminal@TermState& (0+255),w,b
 16139                           
 16140                           ; Switch size 1, requested type "space"
 16141                           ; Number of cases is 4, Range of values is 0 to 3
 16142                           ; switch strategies available:
 16143                           ; Name         Instructions Cycles
 16144                           ; simple_byte           13     7 (average)
 16145                           ;	Chosen strategy is simple_byte
 16146  0005DC  0A00               	xorlw	0	; case 0
 16147  0005DE  B4D8               	btfsc	status,2,c
 16148  0005E0  D580               	goto	l2408
 16149  0005E2  0A01               	xorlw	1	; case 1
 16150  0005E4  B4D8               	btfsc	status,2,c
 16151  0005E6  D71E               	goto	l2443
 16152  0005E8  0A03               	xorlw	3	; case 2
 16153  0005EA  B4D8               	btfsc	status,2,c
 16154  0005EC  D73B               	goto	l2445
 16155  0005EE  0A01               	xorlw	1	; case 3
 16156  0005F0  0012               	return	
 16157  0005F2                     __end_of_Terminal:
 16158                           	opt stack 0
 16159                           tosu	equ	0xFFF
 16160                           tosh	equ	0xFFE
 16161                           tosl	equ	0xFFD
 16162                           pclath	equ	0xFFA
 16163                           tblptru	equ	0xFF8
 16164                           tblptrh	equ	0xFF7
 16165                           tblptrl	equ	0xFF6
 16166                           tablat	equ	0xFF5
 16167                           prodh	equ	0xFF4
 16168                           prodl	equ	0xFF3
 16169                           intcon	equ	0xFF2
 16170                           intcon2	equ	0xFF1
 16171                           intcon3	equ	0xFF0
 16172                           indf0	equ	0xFEF
 16173                           postinc0	equ	0xFEE
 16174                           plusw0	equ	0xFEB
 16175                           fsr0h	equ	0xFEA
 16176                           fsr0l	equ	0xFE9
 16177                           wreg	equ	0xFE8
 16178                           indf1	equ	0xFE7
 16179                           postinc1	equ	0xFE6
 16180                           postdec1	equ	0xFE5
 16181                           fsr1h	equ	0xFE2
 16182                           fsr1l	equ	0xFE1
 16183                           indf2	equ	0xFDF
 16184                           postinc2	equ	0xFDE
 16185                           postdec2	equ	0xFDD
 16186                           plusw2	equ	0xFDB
 16187                           fsr2h	equ	0xFDA
 16188                           fsr2l	equ	0xFD9
 16189                           status	equ	0xFD8
 16190                           
 16191 ;; *************** function _xtoi *****************
 16192 ;; Defined at:
 16193 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16194 ;; Parameters:    Size  Location     Type
 16195 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16196 ;;		 -> Terminal@Addr(4), 
 16197 ;; Auto vars:     Size  Location     Type
 16198 ;;  val             2   40[BANK0 ] unsigned int 
 16199 ;;  c               1   42[BANK0 ] unsigned char 
 16200 ;;  sign            1   39[BANK0 ] unsigned char 
 16201 ;; Return value:  Size  Location     Type
 16202 ;;                  2   35[BANK0 ] unsigned int 
 16203 ;; Registers used:
 16204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16205 ;; Tracked objects:
 16206 ;;		On entry : 0/0
 16207 ;;		On exit  : 0/0
 16208 ;;		Unchanged: 0/0
 16209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16210 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16211 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16212 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16213 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16214 ;;Total ram usage:        8 bytes
 16215 ;; Hardware stack levels used:    1
 16216 ;; Hardware stack levels required when called:   13
 16217 ;; This function calls:
 16218 ;;		_isdigit
 16219 ;;		_isspace
 16220 ;;		_isupper
 16221 ;;		_isxdigit
 16222 ;;		_tolower
 16223 ;; This function is called by:
 16224 ;;		_Terminal
 16225 ;; This function uses a non-reentrant model
 16226 ;;
 16227                           
 16228                           	psect	text61
 16229  003664                     __ptext61:
 16230                           	opt stack 0
 16231  003664                     _xtoi:
 16232                           	opt stack 12
 16233                           
 16234                           ;incstack = 0
 16235  003664  0E00               	movlw	0
 16236  003666  0100               	movlb	0	; () banked
 16237  003668  6F87               	movwf	xtoi@sign& (0+255),b
 16238  00366A  0E00               	movlw	0
 16239  00366C  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16240  00366E  0E00               	movlw	0
 16241  003670  6F88               	movwf	xtoi@val& (0+255),b
 16242  003672  D003               	goto	l3648
 16243  003674                     
 16244                           ; BSR set to: 0
 16245  003674  0100               	movlb	0	; () banked
 16246  003676  4B83               	infsnz	xtoi@s& (0+255),f,b
 16247  003678  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16248  00367A                     l3648:
 16249                           
 16250                           ; BSR set to: 0
 16251                           
 16252                           ; BSR set to: 0
 16253  00367A  C083  FFD9         	movff	xtoi@s,fsr2l
 16254  00367E  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16255  003682  50DF               	movf	indf2,w,c
 16256  003684  EC59  F034         	call	_isspace
 16257  003688  B0D8               	btfsc	status,0,c
 16258  00368A  D7F4               	goto	l3649
 16259  00368C  C083  FFD9         	movff	xtoi@s,fsr2l
 16260  003690  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16261  003694  0E2D               	movlw	45
 16262  003696  18DE               	xorwf	postinc2,w,c
 16263  003698  A4D8               	btfss	status,2,c
 16264  00369A  D003               	goto	l3651
 16265  00369C  0100               	movlb	0	; () banked
 16266  00369E  2B87               	incf	xtoi@sign& (0+255),f,b
 16267  0036A0  D009               	goto	L15
 16268  0036A2                     l3651:
 16269                           
 16270                           ; BSR set to: 0
 16271  0036A2  C083  FFD9         	movff	xtoi@s,fsr2l
 16272  0036A6  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16273  0036AA  0E2B               	movlw	43
 16274  0036AC  18DE               	xorwf	postinc2,w,c
 16275  0036AE  A4D8               	btfss	status,2,c
 16276  0036B0  D028               	goto	l3654
 16277  0036B2  0100               	movlb	0	; () banked
 16278  0036B4                     L15:
 16279  0036B4  4B83               	infsnz	xtoi@s& (0+255),f,b
 16280  0036B6  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16281                           
 16282                           ; BSR set to: 0
 16283                           
 16284                           ; BSR set to: 0
 16285  0036B8  D024               	goto	l3654
 16286  0036BA                     
 16287                           ; BSR set to: 0
 16288  0036BA  0100               	movlb	0	; () banked
 16289  0036BC  518A               	movf	xtoi@c& (0+255),w,b
 16290  0036BE  ECFF  F034         	call	_isupper
 16291  0036C2  A0D8               	btfss	status,0,c
 16292  0036C4  D006               	goto	l3656
 16293  0036C6  0100               	movlb	0	; () banked
 16294  0036C8  518A               	movf	xtoi@c& (0+255),w,b
 16295  0036CA  ECF0  F035         	call	_tolower
 16296  0036CE  0100               	movlb	0	; () banked
 16297  0036D0  6F8A               	movwf	xtoi@c& (0+255),b
 16298  0036D2                     l3656:
 16299  0036D2  0100               	movlb	0	; () banked
 16300  0036D4  518A               	movf	xtoi@c& (0+255),w,b
 16301  0036D6  EC21  F035         	call	_isdigit
 16302  0036DA  A0D8               	btfss	status,0,c
 16303  0036DC  D002               	goto	l3657
 16304  0036DE  0E30               	movlw	48
 16305  0036E0  D001               	goto	L14
 16306  0036E2                     l3657:
 16307                           
 16308                           ; BSR set to: 0
 16309  0036E2  0E57               	movlw	87
 16310  0036E4                     L14:
 16311  0036E4  0100               	movlb	0	; () banked
 16312  0036E6  5F8A               	subwf	xtoi@c& (0+255),f,b
 16313                           
 16314                           ; BSR set to: 0
 16315  0036E8  3B88               	swapf	xtoi@val& (0+255),f,b
 16316  0036EA  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16317  0036EC  0EF0               	movlw	240
 16318  0036EE  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16319  0036F0  5188               	movf	xtoi@val& (0+255),w,b
 16320  0036F2  0B0F               	andlw	15
 16321  0036F4  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16322  0036F6  0EF0               	movlw	240
 16323  0036F8  1788               	andwf	xtoi@val& (0+255),f,b
 16324  0036FA  518A               	movf	xtoi@c& (0+255),w,b
 16325  0036FC  2788               	addwf	xtoi@val& (0+255),f,b
 16326  0036FE  0E00               	movlw	0
 16327  003700  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16328  003702                     l3654:
 16329                           
 16330                           ; BSR set to: 0
 16331  003702  C083  FFD9         	movff	xtoi@s,fsr2l
 16332  003706  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16333  00370A  0100               	movlb	0	; () banked
 16334  00370C  4B83               	infsnz	xtoi@s& (0+255),f,b
 16335  00370E  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16336  003710  50DF               	movf	indf2,w,c
 16337  003712  6F8A               	movwf	xtoi@c& (0+255),b
 16338  003714  518A               	movf	xtoi@c& (0+255),w,b
 16339  003716  EC8D  F032         	call	_isxdigit
 16340  00371A  B0D8               	btfsc	status,0,c
 16341  00371C  D7CE               	goto	l3655
 16342  00371E  0100               	movlb	0	; () banked
 16343  003720  5187               	movf	xtoi@sign& (0+255),w,b
 16344  003722  B4D8               	btfsc	status,2,c
 16345  003724  D00D               	goto	l3660
 16346                           
 16347                           ; BSR set to: 0
 16348  003726  C088  F085         	movff	xtoi@val,??_xtoi
 16349  00372A  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16350  00372E  1F85               	comf	??_xtoi& (0+255),f,b
 16351  003730  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16352  003732  4B85               	infsnz	??_xtoi& (0+255),f,b
 16353  003734  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16354  003736  C085  F083         	movff	??_xtoi,?_xtoi
 16355  00373A  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16356  00373E  0012               	return	
 16357  003740                     l3660:
 16358                           
 16359                           ; BSR set to: 0
 16360  003740  C088  F083         	movff	xtoi@val,?_xtoi
 16361  003744  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16362                           
 16363                           ; BSR set to: 0
 16364  003748  0012               	return		;funcret
 16365  00374A                     __end_of_xtoi:
 16366                           	opt stack 0
 16367                           tosu	equ	0xFFF
 16368                           tosh	equ	0xFFE
 16369                           tosl	equ	0xFFD
 16370                           pclath	equ	0xFFA
 16371                           tblptru	equ	0xFF8
 16372                           tblptrh	equ	0xFF7
 16373                           tblptrl	equ	0xFF6
 16374                           tablat	equ	0xFF5
 16375                           prodh	equ	0xFF4
 16376                           prodl	equ	0xFF3
 16377                           intcon	equ	0xFF2
 16378                           intcon2	equ	0xFF1
 16379                           intcon3	equ	0xFF0
 16380                           indf0	equ	0xFEF
 16381                           postinc0	equ	0xFEE
 16382                           plusw0	equ	0xFEB
 16383                           fsr0h	equ	0xFEA
 16384                           fsr0l	equ	0xFE9
 16385                           wreg	equ	0xFE8
 16386                           indf1	equ	0xFE7
 16387                           postinc1	equ	0xFE6
 16388                           postdec1	equ	0xFE5
 16389                           fsr1h	equ	0xFE2
 16390                           fsr1l	equ	0xFE1
 16391                           indf2	equ	0xFDF
 16392                           postinc2	equ	0xFDE
 16393                           postdec2	equ	0xFDD
 16394                           plusw2	equ	0xFDB
 16395                           fsr2h	equ	0xFDA
 16396                           fsr2l	equ	0xFD9
 16397                           status	equ	0xFD8
 16398                           
 16399 ;; *************** function _tolower *****************
 16400 ;; Defined at:
 16401 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16402 ;; Parameters:    Size  Location     Type
 16403 ;;  c               1    wreg     unsigned char 
 16404 ;; Auto vars:     Size  Location     Type
 16405 ;;  c               1   29[BANK0 ] unsigned char 
 16406 ;; Return value:  Size  Location     Type
 16407 ;;                  1    wreg      unsigned char 
 16408 ;; Registers used:
 16409 ;;		wreg, status,2, status,0
 16410 ;; Tracked objects:
 16411 ;;		On entry : 0/0
 16412 ;;		On exit  : 0/0
 16413 ;;		Unchanged: 0/0
 16414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16416 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16418 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16419 ;;Total ram usage:        1 bytes
 16420 ;; Hardware stack levels used:    1
 16421 ;; Hardware stack levels required when called:   11
 16422 ;; This function calls:
 16423 ;;		Nothing
 16424 ;; This function is called by:
 16425 ;;		_xtoi
 16426 ;; This function uses a non-reentrant model
 16427 ;;
 16428                           
 16429                           	psect	text62
 16430  006BE0                     __ptext62:
 16431                           	opt stack 0
 16432  006BE0                     _tolower:
 16433                           	opt stack 13
 16434                           
 16435                           ; BSR set to: 0
 16436                           ;incstack = 0
 16437                           ;tolower@c stored from wreg
 16438  006BE0  0100               	movlb	0	; () banked
 16439  006BE2  6F7D               	movwf	tolower@c& (0+255),b
 16440  006BE4  0E5B               	movlw	91
 16441  006BE6  0100               	movlb	0	; () banked
 16442  006BE8  617D               	cpfslt	tolower@c& (0+255),b
 16443  006BEA  D004               	goto	l3707
 16444                           
 16445                           ; BSR set to: 0
 16446  006BEC  0E40               	movlw	64
 16447  006BEE  657D               	cpfsgt	tolower@c& (0+255),b
 16448  006BF0  D001               	goto	l3707
 16449                           
 16450                           ; BSR set to: 0
 16451  006BF2  8B7D               	bsf	tolower@c& (0+255),5,b
 16452  006BF4                     l3707:
 16453                           
 16454                           ; BSR set to: 0
 16455                           
 16456                           ; BSR set to: 0
 16457  006BF4  517D               	movf	tolower@c& (0+255),w,b
 16458  006BF6  0012               	return	
 16459  006BF8                     __end_of_tolower:
 16460                           	opt stack 0
 16461                           tosu	equ	0xFFF
 16462                           tosh	equ	0xFFE
 16463                           tosl	equ	0xFFD
 16464                           pclath	equ	0xFFA
 16465                           tblptru	equ	0xFF8
 16466                           tblptrh	equ	0xFF7
 16467                           tblptrl	equ	0xFF6
 16468                           tablat	equ	0xFF5
 16469                           prodh	equ	0xFF4
 16470                           prodl	equ	0xFF3
 16471                           intcon	equ	0xFF2
 16472                           intcon2	equ	0xFF1
 16473                           intcon3	equ	0xFF0
 16474                           indf0	equ	0xFEF
 16475                           postinc0	equ	0xFEE
 16476                           plusw0	equ	0xFEB
 16477                           fsr0h	equ	0xFEA
 16478                           fsr0l	equ	0xFE9
 16479                           wreg	equ	0xFE8
 16480                           indf1	equ	0xFE7
 16481                           postinc1	equ	0xFE6
 16482                           postdec1	equ	0xFE5
 16483                           fsr1h	equ	0xFE2
 16484                           fsr1l	equ	0xFE1
 16485                           indf2	equ	0xFDF
 16486                           postinc2	equ	0xFDE
 16487                           postdec2	equ	0xFDD
 16488                           plusw2	equ	0xFDB
 16489                           fsr2h	equ	0xFDA
 16490                           fsr2l	equ	0xFD9
 16491                           status	equ	0xFD8
 16492                           
 16493 ;; *************** function _isxdigit *****************
 16494 ;; Defined at:
 16495 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16496 ;; Parameters:    Size  Location     Type
 16497 ;;  c               1    wreg     unsigned char 
 16498 ;; Auto vars:     Size  Location     Type
 16499 ;;  c               1   34[BANK0 ] unsigned char 
 16500 ;; Return value:  Size  Location     Type
 16501 ;;		None               void
 16502 ;; Registers used:
 16503 ;;		wreg, status,2, status,0, cstack
 16504 ;; Tracked objects:
 16505 ;;		On entry : 0/0
 16506 ;;		On exit  : 0/0
 16507 ;;		Unchanged: 0/0
 16508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16510 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16512 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16513 ;;Total ram usage:        3 bytes
 16514 ;; Hardware stack levels used:    1
 16515 ;; Hardware stack levels required when called:   12
 16516 ;; This function calls:
 16517 ;;		_isdigit
 16518 ;; This function is called by:
 16519 ;;		_xtoi
 16520 ;; This function uses a non-reentrant model
 16521 ;;
 16522                           
 16523                           	psect	text63
 16524  00651A                     __ptext63:
 16525                           	opt stack 0
 16526  00651A                     _isxdigit:
 16527                           	opt stack 12
 16528                           
 16529                           ; BSR set to: 0
 16530                           ;incstack = 0
 16531                           ;isxdigit@c stored from wreg
 16532  00651A  0100               	movlb	0	; () banked
 16533  00651C  6F82               	movwf	isxdigit@c& (0+255),b
 16534  00651E  0E01               	movlw	1
 16535  006520  0100               	movlb	0	; () banked
 16536  006522  6F81               	movwf	_isxdigit$6782& (0+255),b
 16537                           
 16538                           ; BSR set to: 0
 16539  006524  0E67               	movlw	103
 16540  006526  6182               	cpfslt	isxdigit@c& (0+255),b
 16541  006528  D003               	goto	u12820
 16542                           
 16543                           ; BSR set to: 0
 16544  00652A  0E61               	movlw	97
 16545  00652C  6182               	cpfslt	isxdigit@c& (0+255),b
 16546  00652E  D00E               	goto	l3703
 16547  006530                     u12820:
 16548                           
 16549                           ; BSR set to: 0
 16550                           
 16551                           ; BSR set to: 0
 16552  006530  0E47               	movlw	71
 16553  006532  6182               	cpfslt	isxdigit@c& (0+255),b
 16554  006534  D003               	goto	u12840
 16555                           
 16556                           ; BSR set to: 0
 16557  006536  0E41               	movlw	65
 16558  006538  6182               	cpfslt	isxdigit@c& (0+255),b
 16559  00653A  D008               	goto	l3703
 16560  00653C                     u12840:
 16561                           
 16562                           ; BSR set to: 0
 16563                           
 16564                           ; BSR set to: 0
 16565  00653C  5182               	movf	isxdigit@c& (0+255),w,b
 16566  00653E  EC21  F035         	call	_isdigit
 16567  006542  B0D8               	btfsc	status,0,c
 16568  006544  D003               	goto	l3703
 16569  006546  0E00               	movlw	0
 16570  006548  0100               	movlb	0	; () banked
 16571  00654A  6F81               	movwf	_isxdigit$6782& (0+255),b
 16572  00654C                     l3703:
 16573                           
 16574                           ; BSR set to: 0
 16575  00654C  C081  F080         	movff	_isxdigit$6782,??_isxdigit
 16576  006550  0100               	movlb	0	; () banked
 16577  006552  3180               	rrcf	??_isxdigit& (0+255),w,b
 16578  006554  0012               	return	
 16579  006556                     __end_of_isxdigit:
 16580                           	opt stack 0
 16581                           tosu	equ	0xFFF
 16582                           tosh	equ	0xFFE
 16583                           tosl	equ	0xFFD
 16584                           pclath	equ	0xFFA
 16585                           tblptru	equ	0xFF8
 16586                           tblptrh	equ	0xFF7
 16587                           tblptrl	equ	0xFF6
 16588                           tablat	equ	0xFF5
 16589                           prodh	equ	0xFF4
 16590                           prodl	equ	0xFF3
 16591                           intcon	equ	0xFF2
 16592                           intcon2	equ	0xFF1
 16593                           intcon3	equ	0xFF0
 16594                           indf0	equ	0xFEF
 16595                           postinc0	equ	0xFEE
 16596                           plusw0	equ	0xFEB
 16597                           fsr0h	equ	0xFEA
 16598                           fsr0l	equ	0xFE9
 16599                           wreg	equ	0xFE8
 16600                           indf1	equ	0xFE7
 16601                           postinc1	equ	0xFE6
 16602                           postdec1	equ	0xFE5
 16603                           fsr1h	equ	0xFE2
 16604                           fsr1l	equ	0xFE1
 16605                           indf2	equ	0xFDF
 16606                           postinc2	equ	0xFDE
 16607                           postdec2	equ	0xFDD
 16608                           plusw2	equ	0xFDB
 16609                           fsr2h	equ	0xFDA
 16610                           fsr2l	equ	0xFD9
 16611                           status	equ	0xFD8
 16612                           
 16613 ;; *************** function _strtol *****************
 16614 ;; Defined at:
 16615 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16616 ;; Parameters:    Size  Location     Type
 16617 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16618 ;;		 -> Terminal@Payload(80), 
 16619 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16620 ;;		 -> NULL(0), 
 16621 ;;  base            2   45[BANK0 ] int 
 16622 ;; Auto vars:     Size  Location     Type
 16623 ;;  a               4   52[BANK0 ] long 
 16624 ;;  c               1   56[BANK0 ] unsigned char 
 16625 ;;  sign            1   51[BANK0 ] unsigned char 
 16626 ;; Return value:  Size  Location     Type
 16627 ;;                  4   41[BANK0 ] long 
 16628 ;; Registers used:
 16629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16630 ;; Tracked objects:
 16631 ;;		On entry : 0/0
 16632 ;;		On exit  : 0/0
 16633 ;;		Unchanged: 0/0
 16634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16635 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16636 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16637 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16638 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16639 ;;Total ram usage:       16 bytes
 16640 ;; Hardware stack levels used:    1
 16641 ;; Hardware stack levels required when called:   13
 16642 ;; This function calls:
 16643 ;;		___lmul
 16644 ;;		_isalpha
 16645 ;;		_isdigit
 16646 ;;		_isspace
 16647 ;;		_toupper
 16648 ;; This function is called by:
 16649 ;;		_Terminal
 16650 ;; This function uses a non-reentrant model
 16651 ;;
 16652                           
 16653                           	psect	text64
 16654  001822                     __ptext64:
 16655                           	opt stack 0
 16656  001822                     _strtol:
 16657                           	opt stack 12
 16658                           
 16659                           ; BSR set to: 0
 16660                           ;incstack = 0
 16661  001822  C089  FFD9         	movff	strtol@s,fsr2l
 16662  001826  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16663  00182A  50DF               	movf	indf2,w,c
 16664  00182C  0100               	movlb	0	; () banked
 16665  00182E  6F98               	movwf	strtol@c& (0+255),b
 16666                           
 16667                           ; BSR set to: 0
 16668  001830  4B89               	infsnz	strtol@s& (0+255),f,b
 16669  001832  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16670                           
 16671                           ; BSR set to: 0
 16672  001834  5198               	movf	strtol@c& (0+255),w,b
 16673  001836  EC59  F034         	call	_isspace
 16674  00183A  B0D8               	btfsc	status,0,c
 16675  00183C  D7F2               	goto	_strtol
 16676  00183E  0E00               	movlw	0
 16677  001840  0100               	movlb	0	; () banked
 16678  001842  6F94               	movwf	strtol@a& (0+255),b
 16679  001844  0E00               	movlw	0
 16680  001846  6F95               	movwf	(strtol@a+1)& (0+255),b
 16681  001848  0E00               	movlw	0
 16682  00184A  6F96               	movwf	(strtol@a+2)& (0+255),b
 16683  00184C  0E00               	movlw	0
 16684  00184E  6F97               	movwf	(strtol@a+3)& (0+255),b
 16685  001850  0E00               	movlw	0
 16686  001852  6F93               	movwf	strtol@sign& (0+255),b
 16687                           
 16688                           ; BSR set to: 0
 16689  001854  0E2D               	movlw	45
 16690  001856  1998               	xorwf	strtol@c& (0+255),w,b
 16691  001858  A4D8               	btfss	status,2,c
 16692  00185A  D003               	goto	l3610
 16693                           
 16694                           ; BSR set to: 0
 16695  00185C  0E01               	movlw	1
 16696  00185E  6F93               	movwf	strtol@sign& (0+255),b
 16697  001860  D004               	goto	u13320
 16698  001862                     l3610:
 16699                           
 16700                           ; BSR set to: 0
 16701                           
 16702                           ; BSR set to: 0
 16703  001862  0E2B               	movlw	43
 16704  001864  1998               	xorwf	strtol@c& (0+255),w,b
 16705  001866  A4D8               	btfss	status,2,c
 16706  001868  D008               	goto	l3612
 16707  00186A                     u13320:
 16708                           
 16709                           ; BSR set to: 0
 16710  00186A  C089  FFD9         	movff	strtol@s,fsr2l
 16711  00186E  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16712  001872  50DF               	movf	indf2,w,c
 16713  001874  6F98               	movwf	strtol@c& (0+255),b
 16714                           
 16715                           ; BSR set to: 0
 16716  001876  4B89               	infsnz	strtol@s& (0+255),f,b
 16717  001878  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16718  00187A                     l3612:
 16719                           
 16720                           ; BSR set to: 0
 16721                           
 16722                           ; BSR set to: 0
 16723                           
 16724                           ; BSR set to: 0
 16725  00187A  0E30               	movlw	48
 16726  00187C  1998               	xorwf	strtol@c& (0+255),w,b
 16727  00187E  A4D8               	btfss	status,2,c
 16728  001880  D02E               	goto	l3620
 16729                           
 16730                           ; BSR set to: 0
 16731  001882  C089  FFD9         	movff	strtol@s,fsr2l
 16732  001886  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16733  00188A  50DF               	movf	indf2,w,c
 16734  00188C  6F98               	movwf	strtol@c& (0+255),b
 16735                           
 16736                           ; BSR set to: 0
 16737  00188E  4B89               	infsnz	strtol@s& (0+255),f,b
 16738  001890  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16739                           
 16740                           ; BSR set to: 0
 16741  001892  518D               	movf	strtol@base& (0+255),w,b
 16742  001894  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16743  001896  B4D8               	btfsc	status,2,c
 16744  001898  D005               	goto	u13350
 16745                           
 16746                           ; BSR set to: 0
 16747  00189A  0E10               	movlw	16
 16748  00189C  198D               	xorwf	strtol@base& (0+255),w,b
 16749  00189E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16750  0018A0  A4D8               	btfss	status,2,c
 16751  0018A2  D015               	goto	l3614
 16752  0018A4                     u13350:
 16753                           
 16754                           ; BSR set to: 0
 16755                           
 16756                           ; BSR set to: 0
 16757  0018A4  0E78               	movlw	120
 16758  0018A6  1998               	xorwf	strtol@c& (0+255),w,b
 16759  0018A8  B4D8               	btfsc	status,2,c
 16760  0018AA  D004               	goto	u13370
 16761                           
 16762                           ; BSR set to: 0
 16763  0018AC  0E58               	movlw	88
 16764  0018AE  1998               	xorwf	strtol@c& (0+255),w,b
 16765  0018B0  A4D8               	btfss	status,2,c
 16766  0018B2  D00D               	goto	l3614
 16767  0018B4                     u13370:
 16768                           
 16769                           ; BSR set to: 0
 16770                           
 16771                           ; BSR set to: 0
 16772  0018B4  0E00               	movlw	0
 16773  0018B6  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16774  0018B8  0E10               	movlw	16
 16775  0018BA  6F8D               	movwf	strtol@base& (0+255),b
 16776                           
 16777                           ; BSR set to: 0
 16778  0018BC  C089  FFD9         	movff	strtol@s,fsr2l
 16779  0018C0  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16780  0018C4  50DF               	movf	indf2,w,c
 16781  0018C6  6F98               	movwf	strtol@c& (0+255),b
 16782                           
 16783                           ; BSR set to: 0
 16784  0018C8  4B89               	infsnz	strtol@s& (0+255),f,b
 16785  0018CA  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16786  0018CC  D008               	goto	l3620
 16787  0018CE                     l3614:
 16788                           
 16789                           ; BSR set to: 0
 16790                           
 16791                           ; BSR set to: 0
 16792  0018CE  518D               	movf	strtol@base& (0+255),w,b
 16793  0018D0  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16794  0018D2  A4D8               	btfss	status,2,c
 16795  0018D4  D004               	goto	l3620
 16796                           
 16797                           ; BSR set to: 0
 16798  0018D6  0E00               	movlw	0
 16799  0018D8  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16800  0018DA  0E08               	movlw	8
 16801  0018DC  6F8D               	movwf	strtol@base& (0+255),b
 16802  0018DE                     l3620:
 16803                           
 16804                           ; BSR set to: 0
 16805                           
 16806                           ; BSR set to: 0
 16807                           
 16808                           ; BSR set to: 0
 16809                           
 16810                           ; BSR set to: 0
 16811  0018DE  518D               	movf	strtol@base& (0+255),w,b
 16812  0018E0  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16813  0018E2  A4D8               	btfss	status,2,c
 16814  0018E4  D004               	goto	l3621
 16815                           
 16816                           ; BSR set to: 0
 16817  0018E6  0E00               	movlw	0
 16818  0018E8  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16819  0018EA  0E0A               	movlw	10
 16820  0018EC  6F8D               	movwf	strtol@base& (0+255),b
 16821  0018EE                     l3621:
 16822                           
 16823                           ; BSR set to: 0
 16824                           
 16825                           ; BSR set to: 0
 16826                           
 16827                           ; BSR set to: 0
 16828  0018EE  5198               	movf	strtol@c& (0+255),w,b
 16829  0018F0  ECD0  F033         	call	_isalpha
 16830  0018F4  A0D8               	btfss	status,0,c
 16831  0018F6  D008               	goto	l3623
 16832  0018F8  0100               	movlb	0	; () banked
 16833  0018FA  5198               	movf	strtol@c& (0+255),w,b
 16834  0018FC  ECFC  F035         	call	_toupper
 16835  001900  0FC9               	addlw	201
 16836  001902  0100               	movlb	0	; () banked
 16837  001904  6F98               	movwf	strtol@c& (0+255),b
 16838  001906  D009               	goto	l3626
 16839  001908                     l3623:
 16840                           
 16841                           ; BSR set to: 0
 16842  001908  0100               	movlb	0	; () banked
 16843  00190A  5198               	movf	strtol@c& (0+255),w,b
 16844  00190C  EC21  F035         	call	_isdigit
 16845  001910  A0D8               	btfss	status,0,c
 16846  001912  D039               	goto	l3627
 16847  001914  0E30               	movlw	48
 16848  001916  0100               	movlb	0	; () banked
 16849  001918  5F98               	subwf	strtol@c& (0+255),f,b
 16850  00191A                     l3626:
 16851                           
 16852                           ; BSR set to: 0
 16853                           
 16854                           ; BSR set to: 0
 16855                           
 16856                           ; BSR set to: 0
 16857  00191A  5198               	movf	strtol@c& (0+255),w,b
 16858  00191C  6F8F               	movwf	??_strtol& (0+255),b
 16859  00191E  6B90               	clrf	(??_strtol+1)& (0+255),b
 16860  001920  518D               	movf	strtol@base& (0+255),w,b
 16861  001922  5D8F               	subwf	??_strtol& (0+255),w,b
 16862  001924  5190               	movf	(??_strtol+1)& (0+255),w,b
 16863  001926  0A80               	xorlw	128
 16864  001928  6F91               	movwf	(??_strtol+2)& (0+255),b
 16865  00192A  518E               	movf	(strtol@base+1)& (0+255),w,b
 16866  00192C  0A80               	xorlw	128
 16867  00192E  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16868  001930  B0D8               	btfsc	status,0,c
 16869  001932  D029               	goto	l3627
 16870                           
 16871                           ; BSR set to: 0
 16872                           
 16873                           ; BSR set to: 0
 16874                           
 16875                           ; BSR set to: 0
 16876  001934  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16877  001938  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16878  00193C  0E00               	movlw	0
 16879  00193E  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16880  001940  0EFF               	movlw	-1
 16881  001942  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16882  001944  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16883  001946  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16884  00194A  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16885  00194E  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16886  001952  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16887  001956  ECB1  F02D         	call	___lmul	;wreg free
 16888  00195A  0100               	movlb	0	; () banked
 16889  00195C  5198               	movf	strtol@c& (0+255),w,b
 16890  00195E  257D               	addwf	?___lmul& (0+255),w,b
 16891  001960  6F94               	movwf	strtol@a& (0+255),b
 16892  001962  0E00               	movlw	0
 16893  001964  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16894  001966  6F95               	movwf	(strtol@a+1)& (0+255),b
 16895  001968  0E00               	movlw	0
 16896  00196A  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16897  00196C  6F96               	movwf	(strtol@a+2)& (0+255),b
 16898  00196E  0E00               	movlw	0
 16899  001970  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16900  001972  6F97               	movwf	(strtol@a+3)& (0+255),b
 16901                           
 16902                           ; BSR set to: 0
 16903  001974  C089  FFD9         	movff	strtol@s,fsr2l
 16904  001978  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16905  00197C  50DF               	movf	indf2,w,c
 16906  00197E  6F98               	movwf	strtol@c& (0+255),b
 16907                           
 16908                           ; BSR set to: 0
 16909  001980  4B89               	infsnz	strtol@s& (0+255),f,b
 16910  001982  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16911  001984  D7B4               	goto	l3621
 16912  001986                     l3627:
 16913                           
 16914                           ; BSR set to: 0
 16915  001986  0100               	movlb	0	; () banked
 16916  001988  518B               	movf	strtol@endptr& (0+255),w,b
 16917  00198A  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16918  00198C  B4D8               	btfsc	status,2,c
 16919  00198E  D00E               	goto	l3629
 16920                           
 16921                           ; BSR set to: 0
 16922  001990  0EFF               	movlw	255
 16923  001992  2589               	addwf	strtol@s& (0+255),w,b
 16924  001994  6F8F               	movwf	??_strtol& (0+255),b
 16925  001996  0EFF               	movlw	255
 16926  001998  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16927  00199A  6F90               	movwf	(??_strtol+1)& (0+255),b
 16928  00199C  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16929  0019A0  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16930  0019A4  C08F  FFDE         	movff	??_strtol,postinc2
 16931  0019A8  C090  FFDD         	movff	??_strtol+1,postdec2
 16932  0019AC                     l3629:
 16933                           
 16934                           ; BSR set to: 0
 16935                           
 16936                           ; BSR set to: 0
 16937  0019AC  5193               	movf	strtol@sign& (0+255),w,b
 16938  0019AE  B4D8               	btfsc	status,2,c
 16939  0019B0  D01A               	goto	l3630
 16940                           
 16941                           ; BSR set to: 0
 16942  0019B2  C094  F08F         	movff	strtol@a,??_strtol
 16943  0019B6  C095  F090         	movff	strtol@a+1,??_strtol+1
 16944  0019BA  C096  F091         	movff	strtol@a+2,??_strtol+2
 16945  0019BE  C097  F092         	movff	strtol@a+3,??_strtol+3
 16946  0019C2  1F8F               	comf	??_strtol& (0+255),f,b
 16947  0019C4  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16948  0019C6  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16949  0019C8  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16950  0019CA  2B8F               	incf	??_strtol& (0+255),f,b
 16951  0019CC  0E00               	movlw	0
 16952  0019CE  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16953  0019D0  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16954  0019D2  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16955  0019D4  C08F  F089         	movff	??_strtol,?_strtol
 16956  0019D8  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16957  0019DC  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16958  0019E0  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16959                           
 16960                           ; BSR set to: 0
 16961  0019E4  0012               	return	
 16962  0019E6                     l3630:
 16963                           
 16964                           ; BSR set to: 0
 16965  0019E6  C094  F089         	movff	strtol@a,?_strtol
 16966  0019EA  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16967  0019EE  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16968  0019F2  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16969                           
 16970                           ; BSR set to: 0
 16971  0019F6  0012               	return		;funcret
 16972  0019F8                     __end_of_strtol:
 16973                           	opt stack 0
 16974                           tosu	equ	0xFFF
 16975                           tosh	equ	0xFFE
 16976                           tosl	equ	0xFFD
 16977                           pclath	equ	0xFFA
 16978                           tblptru	equ	0xFF8
 16979                           tblptrh	equ	0xFF7
 16980                           tblptrl	equ	0xFF6
 16981                           tablat	equ	0xFF5
 16982                           prodh	equ	0xFF4
 16983                           prodl	equ	0xFF3
 16984                           intcon	equ	0xFF2
 16985                           intcon2	equ	0xFF1
 16986                           intcon3	equ	0xFF0
 16987                           indf0	equ	0xFEF
 16988                           postinc0	equ	0xFEE
 16989                           plusw0	equ	0xFEB
 16990                           fsr0h	equ	0xFEA
 16991                           fsr0l	equ	0xFE9
 16992                           wreg	equ	0xFE8
 16993                           indf1	equ	0xFE7
 16994                           postinc1	equ	0xFE6
 16995                           postdec1	equ	0xFE5
 16996                           fsr1h	equ	0xFE2
 16997                           fsr1l	equ	0xFE1
 16998                           indf2	equ	0xFDF
 16999                           postinc2	equ	0xFDE
 17000                           postdec2	equ	0xFDD
 17001                           plusw2	equ	0xFDB
 17002                           fsr2h	equ	0xFDA
 17003                           fsr2l	equ	0xFD9
 17004                           status	equ	0xFD8
 17005                           
 17006 ;; *************** function _toupper *****************
 17007 ;; Defined at:
 17008 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 17009 ;; Parameters:    Size  Location     Type
 17010 ;;  c               1    wreg     unsigned char 
 17011 ;; Auto vars:     Size  Location     Type
 17012 ;;  c               1   29[BANK0 ] unsigned char 
 17013 ;; Return value:  Size  Location     Type
 17014 ;;                  1    wreg      unsigned char 
 17015 ;; Registers used:
 17016 ;;		wreg, status,2, status,0
 17017 ;; Tracked objects:
 17018 ;;		On entry : 0/0
 17019 ;;		On exit  : 0/0
 17020 ;;		Unchanged: 0/0
 17021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17025 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17026 ;;Total ram usage:        1 bytes
 17027 ;; Hardware stack levels used:    1
 17028 ;; Hardware stack levels required when called:   11
 17029 ;; This function calls:
 17030 ;;		Nothing
 17031 ;; This function is called by:
 17032 ;;		_strtol
 17033 ;; This function uses a non-reentrant model
 17034 ;;
 17035                           
 17036                           	psect	text65
 17037  006BF8                     __ptext65:
 17038                           	opt stack 0
 17039  006BF8                     _toupper:
 17040                           	opt stack 13
 17041                           
 17042                           ; BSR set to: 0
 17043                           ;incstack = 0
 17044                           ;toupper@c stored from wreg
 17045  006BF8  0100               	movlb	0	; () banked
 17046  006BFA  6F7D               	movwf	toupper@c& (0+255),b
 17047  006BFC  0E7B               	movlw	123
 17048  006BFE  0100               	movlb	0	; () banked
 17049  006C00  617D               	cpfslt	toupper@c& (0+255),b
 17050  006C02  D004               	goto	l3634
 17051                           
 17052                           ; BSR set to: 0
 17053  006C04  0E60               	movlw	96
 17054  006C06  657D               	cpfsgt	toupper@c& (0+255),b
 17055  006C08  D001               	goto	l3634
 17056                           
 17057                           ; BSR set to: 0
 17058  006C0A  9B7D               	bcf	toupper@c& (0+255),5,b
 17059  006C0C                     l3634:
 17060                           
 17061                           ; BSR set to: 0
 17062                           
 17063                           ; BSR set to: 0
 17064  006C0C  517D               	movf	toupper@c& (0+255),w,b
 17065  006C0E  0012               	return	
 17066  006C10                     __end_of_toupper:
 17067                           	opt stack 0
 17068                           tosu	equ	0xFFF
 17069                           tosh	equ	0xFFE
 17070                           tosl	equ	0xFFD
 17071                           pclath	equ	0xFFA
 17072                           tblptru	equ	0xFF8
 17073                           tblptrh	equ	0xFF7
 17074                           tblptrl	equ	0xFF6
 17075                           tablat	equ	0xFF5
 17076                           prodh	equ	0xFF4
 17077                           prodl	equ	0xFF3
 17078                           intcon	equ	0xFF2
 17079                           intcon2	equ	0xFF1
 17080                           intcon3	equ	0xFF0
 17081                           indf0	equ	0xFEF
 17082                           postinc0	equ	0xFEE
 17083                           plusw0	equ	0xFEB
 17084                           fsr0h	equ	0xFEA
 17085                           fsr0l	equ	0xFE9
 17086                           wreg	equ	0xFE8
 17087                           indf1	equ	0xFE7
 17088                           postinc1	equ	0xFE6
 17089                           postdec1	equ	0xFE5
 17090                           fsr1h	equ	0xFE2
 17091                           fsr1l	equ	0xFE1
 17092                           indf2	equ	0xFDF
 17093                           postinc2	equ	0xFDE
 17094                           postdec2	equ	0xFDD
 17095                           plusw2	equ	0xFDB
 17096                           fsr2h	equ	0xFDA
 17097                           fsr2l	equ	0xFD9
 17098                           status	equ	0xFD8
 17099                           
 17100 ;; *************** function _isspace *****************
 17101 ;; Defined at:
 17102 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 17103 ;; Parameters:    Size  Location     Type
 17104 ;;  c               1    wreg     unsigned char 
 17105 ;; Auto vars:     Size  Location     Type
 17106 ;;  c               1   31[BANK0 ] unsigned char 
 17107 ;; Return value:  Size  Location     Type
 17108 ;;		None               void
 17109 ;; Registers used:
 17110 ;;		wreg, status,2, status,0
 17111 ;; Tracked objects:
 17112 ;;		On entry : 0/0
 17113 ;;		On exit  : 0/0
 17114 ;;		Unchanged: 0/0
 17115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17117 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17118 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17119 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17120 ;;Total ram usage:        3 bytes
 17121 ;; Hardware stack levels used:    1
 17122 ;; Hardware stack levels required when called:   11
 17123 ;; This function calls:
 17124 ;;		Nothing
 17125 ;; This function is called by:
 17126 ;;		_strtol
 17127 ;;		_xtoi
 17128 ;; This function uses a non-reentrant model
 17129 ;;
 17130                           
 17131                           	psect	text66
 17132  0068B2                     __ptext66:
 17133                           	opt stack 0
 17134  0068B2                     _isspace:
 17135                           	opt stack 13
 17136                           
 17137                           ; BSR set to: 0
 17138                           ;incstack = 0
 17139                           ;isspace@c stored from wreg
 17140  0068B2  0100               	movlb	0	; () banked
 17141  0068B4  6F7F               	movwf	isspace@c& (0+255),b
 17142  0068B6  0E01               	movlw	1
 17143  0068B8  0100               	movlb	0	; () banked
 17144  0068BA  6F7E               	movwf	_isspace$6775& (0+255),b
 17145                           
 17146                           ; BSR set to: 0
 17147  0068BC  0E20               	movlw	32
 17148  0068BE  197F               	xorwf	isspace@c& (0+255),w,b
 17149  0068C0  B4D8               	btfsc	status,2,c
 17150  0068C2  D008               	goto	l3691
 17151                           
 17152                           ; BSR set to: 0
 17153  0068C4  0E0E               	movlw	14
 17154  0068C6  617F               	cpfslt	isspace@c& (0+255),b
 17155  0068C8  D003               	goto	u12730
 17156                           
 17157                           ; BSR set to: 0
 17158  0068CA  0E09               	movlw	9
 17159  0068CC  617F               	cpfslt	isspace@c& (0+255),b
 17160  0068CE  D002               	goto	l3691
 17161  0068D0                     u12730:
 17162                           
 17163                           ; BSR set to: 0
 17164                           
 17165                           ; BSR set to: 0
 17166  0068D0  0E00               	movlw	0
 17167  0068D2  6F7E               	movwf	_isspace$6775& (0+255),b
 17168  0068D4                     l3691:
 17169                           
 17170                           ; BSR set to: 0
 17171                           
 17172                           ; BSR set to: 0
 17173  0068D4  C07E  F07D         	movff	_isspace$6775,??_isspace
 17174  0068D8  317D               	rrcf	??_isspace& (0+255),w,b
 17175  0068DA  0012               	return	
 17176  0068DC                     __end_of_isspace:
 17177                           	opt stack 0
 17178                           tosu	equ	0xFFF
 17179                           tosh	equ	0xFFE
 17180                           tosl	equ	0xFFD
 17181                           pclath	equ	0xFFA
 17182                           tblptru	equ	0xFF8
 17183                           tblptrh	equ	0xFF7
 17184                           tblptrl	equ	0xFF6
 17185                           tablat	equ	0xFF5
 17186                           prodh	equ	0xFF4
 17187                           prodl	equ	0xFF3
 17188                           intcon	equ	0xFF2
 17189                           intcon2	equ	0xFF1
 17190                           intcon3	equ	0xFF0
 17191                           indf0	equ	0xFEF
 17192                           postinc0	equ	0xFEE
 17193                           plusw0	equ	0xFEB
 17194                           fsr0h	equ	0xFEA
 17195                           fsr0l	equ	0xFE9
 17196                           wreg	equ	0xFE8
 17197                           indf1	equ	0xFE7
 17198                           postinc1	equ	0xFE6
 17199                           postdec1	equ	0xFE5
 17200                           fsr1h	equ	0xFE2
 17201                           fsr1l	equ	0xFE1
 17202                           indf2	equ	0xFDF
 17203                           postinc2	equ	0xFDE
 17204                           postdec2	equ	0xFDD
 17205                           plusw2	equ	0xFDB
 17206                           fsr2h	equ	0xFDA
 17207                           fsr2l	equ	0xFD9
 17208                           status	equ	0xFD8
 17209                           
 17210 ;; *************** function _isalpha *****************
 17211 ;; Defined at:
 17212 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17213 ;; Parameters:    Size  Location     Type
 17214 ;;  c               1    wreg     unsigned char 
 17215 ;; Auto vars:     Size  Location     Type
 17216 ;;  c               1   34[BANK0 ] unsigned char 
 17217 ;; Return value:  Size  Location     Type
 17218 ;;		None               void
 17219 ;; Registers used:
 17220 ;;		wreg, status,2, status,0, cstack
 17221 ;; Tracked objects:
 17222 ;;		On entry : 0/0
 17223 ;;		On exit  : 0/0
 17224 ;;		Unchanged: 0/0
 17225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17227 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17228 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17229 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17230 ;;Total ram usage:        3 bytes
 17231 ;; Hardware stack levels used:    1
 17232 ;; Hardware stack levels required when called:   12
 17233 ;; This function calls:
 17234 ;;		_isupper
 17235 ;; This function is called by:
 17236 ;;		_strtol
 17237 ;; This function uses a non-reentrant model
 17238 ;;
 17239                           
 17240                           	psect	text67
 17241  0067A0                     __ptext67:
 17242                           	opt stack 0
 17243  0067A0                     _isalpha:
 17244                           	opt stack 12
 17245                           
 17246                           ; BSR set to: 0
 17247                           ;incstack = 0
 17248                           ;isalpha@c stored from wreg
 17249  0067A0  0100               	movlb	0	; () banked
 17250  0067A2  6F82               	movwf	isalpha@c& (0+255),b
 17251  0067A4  0E01               	movlw	1
 17252  0067A6  0100               	movlb	0	; () banked
 17253  0067A8  6F81               	movwf	_isalpha$6772& (0+255),b
 17254                           
 17255                           ; BSR set to: 0
 17256  0067AA  0E7B               	movlw	123
 17257  0067AC  6182               	cpfslt	isalpha@c& (0+255),b
 17258  0067AE  D003               	goto	u12750
 17259                           
 17260                           ; BSR set to: 0
 17261  0067B0  0E61               	movlw	97
 17262  0067B2  6182               	cpfslt	isalpha@c& (0+255),b
 17263  0067B4  D008               	goto	l3686
 17264  0067B6                     u12750:
 17265                           
 17266                           ; BSR set to: 0
 17267                           
 17268                           ; BSR set to: 0
 17269  0067B6  5182               	movf	isalpha@c& (0+255),w,b
 17270  0067B8  ECFF  F034         	call	_isupper
 17271  0067BC  B0D8               	btfsc	status,0,c
 17272  0067BE  D003               	goto	l3686
 17273  0067C0  0E00               	movlw	0
 17274  0067C2  0100               	movlb	0	; () banked
 17275  0067C4  6F81               	movwf	_isalpha$6772& (0+255),b
 17276  0067C6                     l3686:
 17277                           
 17278                           ; BSR set to: 0
 17279  0067C6  C081  F080         	movff	_isalpha$6772,??_isalpha
 17280  0067CA  0100               	movlb	0	; () banked
 17281  0067CC  3180               	rrcf	??_isalpha& (0+255),w,b
 17282  0067CE  0012               	return	
 17283  0067D0                     __end_of_isalpha:
 17284                           	opt stack 0
 17285                           tosu	equ	0xFFF
 17286                           tosh	equ	0xFFE
 17287                           tosl	equ	0xFFD
 17288                           pclath	equ	0xFFA
 17289                           tblptru	equ	0xFF8
 17290                           tblptrh	equ	0xFF7
 17291                           tblptrl	equ	0xFF6
 17292                           tablat	equ	0xFF5
 17293                           prodh	equ	0xFF4
 17294                           prodl	equ	0xFF3
 17295                           intcon	equ	0xFF2
 17296                           intcon2	equ	0xFF1
 17297                           intcon3	equ	0xFF0
 17298                           indf0	equ	0xFEF
 17299                           postinc0	equ	0xFEE
 17300                           plusw0	equ	0xFEB
 17301                           fsr0h	equ	0xFEA
 17302                           fsr0l	equ	0xFE9
 17303                           wreg	equ	0xFE8
 17304                           indf1	equ	0xFE7
 17305                           postinc1	equ	0xFE6
 17306                           postdec1	equ	0xFE5
 17307                           fsr1h	equ	0xFE2
 17308                           fsr1l	equ	0xFE1
 17309                           indf2	equ	0xFDF
 17310                           postinc2	equ	0xFDE
 17311                           postdec2	equ	0xFDD
 17312                           plusw2	equ	0xFDB
 17313                           fsr2h	equ	0xFDA
 17314                           fsr2l	equ	0xFD9
 17315                           status	equ	0xFD8
 17316                           
 17317 ;; *************** function _isupper *****************
 17318 ;; Defined at:
 17319 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17320 ;; Parameters:    Size  Location     Type
 17321 ;;  c               1    wreg     unsigned char 
 17322 ;; Auto vars:     Size  Location     Type
 17323 ;;  c               1   31[BANK0 ] unsigned char 
 17324 ;; Return value:  Size  Location     Type
 17325 ;;		None               void
 17326 ;; Registers used:
 17327 ;;		wreg, status,2, status,0
 17328 ;; Tracked objects:
 17329 ;;		On entry : 0/0
 17330 ;;		On exit  : 0/0
 17331 ;;		Unchanged: 0/0
 17332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17334 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17335 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17336 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17337 ;;Total ram usage:        3 bytes
 17338 ;; Hardware stack levels used:    1
 17339 ;; Hardware stack levels required when called:   11
 17340 ;; This function calls:
 17341 ;;		Nothing
 17342 ;; This function is called by:
 17343 ;;		_xtoi
 17344 ;;		_isalpha
 17345 ;; This function uses a non-reentrant model
 17346 ;;
 17347                           
 17348                           	psect	text68
 17349  0069FE                     __ptext68:
 17350                           	opt stack 0
 17351  0069FE                     _isupper:
 17352                           	opt stack 13
 17353                           
 17354                           ; BSR set to: 0
 17355                           ;incstack = 0
 17356                           ;isupper@c stored from wreg
 17357  0069FE  0100               	movlb	0	; () banked
 17358  006A00  6F7F               	movwf	isupper@c& (0+255),b
 17359  006A02  0E00               	movlw	0
 17360  006A04  0100               	movlb	0	; () banked
 17361  006A06  6F7E               	movwf	_isupper$6778& (0+255),b
 17362                           
 17363                           ; BSR set to: 0
 17364  006A08  0E5B               	movlw	91
 17365  006A0A  617F               	cpfslt	isupper@c& (0+255),b
 17366  006A0C  D005               	goto	l3696
 17367                           
 17368                           ; BSR set to: 0
 17369  006A0E  0E40               	movlw	64
 17370  006A10  657F               	cpfsgt	isupper@c& (0+255),b
 17371  006A12  D002               	goto	l3696
 17372                           
 17373                           ; BSR set to: 0
 17374  006A14  0E01               	movlw	1
 17375  006A16  6F7E               	movwf	_isupper$6778& (0+255),b
 17376  006A18                     l3696:
 17377                           
 17378                           ; BSR set to: 0
 17379                           
 17380                           ; BSR set to: 0
 17381  006A18  C07E  F07D         	movff	_isupper$6778,??_isupper
 17382  006A1C  317D               	rrcf	??_isupper& (0+255),w,b
 17383  006A1E  0012               	return	
 17384  006A20                     __end_of_isupper:
 17385                           	opt stack 0
 17386                           tosu	equ	0xFFF
 17387                           tosh	equ	0xFFE
 17388                           tosl	equ	0xFFD
 17389                           pclath	equ	0xFFA
 17390                           tblptru	equ	0xFF8
 17391                           tblptrh	equ	0xFF7
 17392                           tblptrl	equ	0xFF6
 17393                           tablat	equ	0xFF5
 17394                           prodh	equ	0xFF4
 17395                           prodl	equ	0xFF3
 17396                           intcon	equ	0xFF2
 17397                           intcon2	equ	0xFF1
 17398                           intcon3	equ	0xFF0
 17399                           indf0	equ	0xFEF
 17400                           postinc0	equ	0xFEE
 17401                           plusw0	equ	0xFEB
 17402                           fsr0h	equ	0xFEA
 17403                           fsr0l	equ	0xFE9
 17404                           wreg	equ	0xFE8
 17405                           indf1	equ	0xFE7
 17406                           postinc1	equ	0xFE6
 17407                           postdec1	equ	0xFE5
 17408                           fsr1h	equ	0xFE2
 17409                           fsr1l	equ	0xFE1
 17410                           indf2	equ	0xFDF
 17411                           postinc2	equ	0xFDE
 17412                           postdec2	equ	0xFDD
 17413                           plusw2	equ	0xFDB
 17414                           fsr2h	equ	0xFDA
 17415                           fsr2l	equ	0xFD9
 17416                           status	equ	0xFD8
 17417                           
 17418 ;; *************** function _strcpy *****************
 17419 ;; Defined at:
 17420 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17421 ;; Parameters:    Size  Location     Type
 17422 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17423 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17424 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17425 ;;		 -> STR_23(20), STR_21(42), 
 17426 ;; Auto vars:     Size  Location     Type
 17427 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17428 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17429 ;; Return value:  Size  Location     Type
 17430 ;;                  2   29[BANK0 ] PTR unsigned char 
 17431 ;; Registers used:
 17432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17433 ;; Tracked objects:
 17434 ;;		On entry : 0/0
 17435 ;;		On exit  : 0/0
 17436 ;;		Unchanged: 0/0
 17437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17438 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17439 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17441 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17442 ;;Total ram usage:        6 bytes
 17443 ;; Hardware stack levels used:    1
 17444 ;; Hardware stack levels required when called:   11
 17445 ;; This function calls:
 17446 ;;		Nothing
 17447 ;; This function is called by:
 17448 ;;		_Terminal
 17449 ;;		_Term_MainSm
 17450 ;; This function uses a non-reentrant model
 17451 ;;
 17452                           
 17453                           	psect	text69
 17454  00670E                     __ptext69:
 17455                           	opt stack 0
 17456  00670E                     _strcpy:
 17457                           	opt stack 15
 17458                           
 17459                           ; BSR set to: 0
 17460                           ;incstack = 0
 17461  00670E  C07D  F081         	movff	strcpy@to,strcpy@cp
 17462  006712  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17463  006716  D005               	goto	l3588
 17464  006718  0100               	movlb	0	; () banked
 17465  00671A  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17466  00671C  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17467  00671E  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17468  006720  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17469  006722                     l3588:
 17470                           
 17471                           ; BSR set to: 0
 17472  006722  C07F  FFF6         	movff	strcpy@from,tblptrl
 17473  006726  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17474  00672A                     	if	0	;tblptru may be non-zero
 17475  00672A                     	endif
 17476  00672A                     	if	0	;tblptru may be non-zero
 17477  00672A                     	endif
 17478  00672A  C081  FFD9         	movff	strcpy@cp,fsr2l
 17479  00672E  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17480  006732  0008               	tblrd		*
 17481  006734  CFF5 FFDF          	movff	tablat,indf2
 17482  006738  50DF               	movf	indf2,w,c
 17483  00673A  B4D8               	btfsc	status,2,c
 17484  00673C  0012               	return	
 17485  00673E  D7EC               	goto	l3589
 17486  006740                     __end_of_strcpy:
 17487                           	opt stack 0
 17488                           tosu	equ	0xFFF
 17489                           tosh	equ	0xFFE
 17490                           tosl	equ	0xFFD
 17491                           pclath	equ	0xFFA
 17492                           tblptru	equ	0xFF8
 17493                           tblptrh	equ	0xFF7
 17494                           tblptrl	equ	0xFF6
 17495                           tablat	equ	0xFF5
 17496                           prodh	equ	0xFF4
 17497                           prodl	equ	0xFF3
 17498                           intcon	equ	0xFF2
 17499                           intcon2	equ	0xFF1
 17500                           intcon3	equ	0xFF0
 17501                           indf0	equ	0xFEF
 17502                           postinc0	equ	0xFEE
 17503                           plusw0	equ	0xFEB
 17504                           fsr0h	equ	0xFEA
 17505                           fsr0l	equ	0xFE9
 17506                           wreg	equ	0xFE8
 17507                           indf1	equ	0xFE7
 17508                           postinc1	equ	0xFE6
 17509                           postdec1	equ	0xFE5
 17510                           fsr1h	equ	0xFE2
 17511                           fsr1l	equ	0xFE1
 17512                           indf2	equ	0xFDF
 17513                           postinc2	equ	0xFDE
 17514                           postdec2	equ	0xFDD
 17515                           plusw2	equ	0xFDB
 17516                           fsr2h	equ	0xFDA
 17517                           fsr2l	equ	0xFD9
 17518                           status	equ	0xFD8
 17519                           
 17520 ;; *************** function _putUSBUSART *****************
 17521 ;; Defined at:
 17522 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17523 ;; Parameters:    Size  Location     Type
 17524 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17525 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17526 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17527 ;;		 -> RxBuffer(400), 
 17528 ;;  length          1   37[BANK0 ] unsigned char 
 17529 ;; Auto vars:     Size  Location     Type
 17530 ;;		None
 17531 ;; Return value:  Size  Location     Type
 17532 ;;                  1    wreg      void 
 17533 ;; Registers used:
 17534 ;;		wreg, status,2, status,0
 17535 ;; Tracked objects:
 17536 ;;		On entry : 0/0
 17537 ;;		On exit  : 0/0
 17538 ;;		Unchanged: 0/0
 17539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17540 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17543 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17544 ;;Total ram usage:        3 bytes
 17545 ;; Hardware stack levels used:    1
 17546 ;; Hardware stack levels required when called:   11
 17547 ;; This function calls:
 17548 ;;		Nothing
 17549 ;; This function is called by:
 17550 ;;		_Terminal
 17551 ;;		_Term_MainSm
 17552 ;;		_GsmGprsTerminal
 17553 ;; This function uses a non-reentrant model
 17554 ;;
 17555                           
 17556                           	psect	text70
 17557  006A20                     __ptext70:
 17558                           	opt stack 0
 17559  006A20                     _putUSBUSART:
 17560                           	opt stack 15
 17561                           
 17562                           ;usb_device_cdc.c: 584: ;
 17563                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17564                           
 17565                           ;incstack = 0
 17566  006A20  0100               	movlb	0	; () banked
 17567  006A22  51C8               	movf	_cdc_trf_state& (0+255),w,b
 17568  006A24  A4D8               	btfss	status,2,c
 17569  006A26  0012               	return	
 17570                           
 17571                           ; BSR set to: 0
 17572                           ;usb_device_cdc.c: 586: {
 17573                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17574  006A28  C083  F2CC         	movff	putUSBUSART@data,_pCDCSrc
 17575  006A2C  C084  F2CD         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17576                           
 17577                           ; BSR set to: 0
 17578  006A30  C085  F0C7         	movff	putUSBUSART@length,_cdc_tx_len
 17579                           
 17580                           ; BSR set to: 0
 17581  006A34  0E01               	movlw	1
 17582  006A36  0101               	movlb	1	; () banked
 17583  006A38  6FDC               	movwf	_cdc_mem_type& (0+255),b
 17584                           
 17585                           ; BSR set to: 1
 17586  006A3A  0E01               	movlw	1
 17587  006A3C  0100               	movlb	0	; () banked
 17588  006A3E  6FC8               	movwf	_cdc_trf_state& (0+255),b
 17589  006A40  0012               	return	
 17590  006A42                     __end_of_putUSBUSART:
 17591                           	opt stack 0
 17592                           tosu	equ	0xFFF
 17593                           tosh	equ	0xFFE
 17594                           tosl	equ	0xFFD
 17595                           pclath	equ	0xFFA
 17596                           tblptru	equ	0xFF8
 17597                           tblptrh	equ	0xFF7
 17598                           tblptrl	equ	0xFF6
 17599                           tablat	equ	0xFF5
 17600                           prodh	equ	0xFF4
 17601                           prodl	equ	0xFF3
 17602                           intcon	equ	0xFF2
 17603                           intcon2	equ	0xFF1
 17604                           intcon3	equ	0xFF0
 17605                           indf0	equ	0xFEF
 17606                           postinc0	equ	0xFEE
 17607                           plusw0	equ	0xFEB
 17608                           fsr0h	equ	0xFEA
 17609                           fsr0l	equ	0xFE9
 17610                           wreg	equ	0xFE8
 17611                           indf1	equ	0xFE7
 17612                           postinc1	equ	0xFE6
 17613                           postdec1	equ	0xFE5
 17614                           fsr1h	equ	0xFE2
 17615                           fsr1l	equ	0xFE1
 17616                           indf2	equ	0xFDF
 17617                           postinc2	equ	0xFDE
 17618                           postdec2	equ	0xFDD
 17619                           plusw2	equ	0xFDB
 17620                           fsr2h	equ	0xFDA
 17621                           fsr2l	equ	0xFD9
 17622                           status	equ	0xFD8
 17623                           
 17624 ;; *************** function _itoa *****************
 17625 ;; Defined at:
 17626 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17627 ;; Parameters:    Size  Location     Type
 17628 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17629 ;;		 -> Terminal@Payload(80), 
 17630 ;;  val             2   53[BANK0 ] int 
 17631 ;;  base            2   55[BANK0 ] int 
 17632 ;; Auto vars:     Size  Location     Type
 17633 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17634 ;;		 -> Terminal@Payload(80), 
 17635 ;; Return value:  Size  Location     Type
 17636 ;;                  2   51[BANK0 ] PTR unsigned char 
 17637 ;; Registers used:
 17638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17639 ;; Tracked objects:
 17640 ;;		On entry : 0/0
 17641 ;;		On exit  : 0/0
 17642 ;;		Unchanged: 0/0
 17643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17644 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17645 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17647 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17648 ;;Total ram usage:        8 bytes
 17649 ;; Hardware stack levels used:    1
 17650 ;; Hardware stack levels required when called:   13
 17651 ;; This function calls:
 17652 ;;		_utoa
 17653 ;; This function is called by:
 17654 ;;		_Terminal
 17655 ;; This function uses a non-reentrant model
 17656 ;;
 17657                           
 17658                           	psect	text71
 17659  0062D8                     __ptext71:
 17660                           	opt stack 0
 17661  0062D8                     _itoa:
 17662                           	opt stack 12
 17663                           
 17664                           ; BSR set to: 0
 17665                           ;incstack = 0
 17666  0062D8  C093  F099         	movff	itoa@buf,itoa@cp
 17667  0062DC  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17668  0062E0  0100               	movlb	0	; () banked
 17669  0062E2  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17670  0062E4  D00C               	goto	l3336
 17671                           
 17672                           ; BSR set to: 0
 17673  0062E6  C093  FFD9         	movff	itoa@buf,fsr2l
 17674  0062EA  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17675  0062EE  0E2D               	movlw	45
 17676  0062F0  6EDF               	movwf	indf2,c
 17677                           
 17678                           ; BSR set to: 0
 17679  0062F2  4B93               	infsnz	itoa@buf& (0+255),f,b
 17680  0062F4  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17681                           
 17682                           ; BSR set to: 0
 17683  0062F6  6D95               	negf	itoa@val& (0+255),b
 17684  0062F8  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17685  0062FA  B0D8               	btfsc	status,0,c
 17686  0062FC  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17687  0062FE                     l3336:
 17688                           
 17689                           ; BSR set to: 0
 17690                           
 17691                           ; BSR set to: 0
 17692  0062FE  C093  F08A         	movff	itoa@buf,utoa@buf
 17693  006302  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17694  006306  C095  F08C         	movff	itoa@val,utoa@val
 17695  00630A  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17696  00630E  C097  F08E         	movff	itoa@base,utoa@base
 17697  006312  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17698  006316  EC44  F024         	call	_utoa	;wreg free
 17699  00631A  0012               	return	
 17700  00631C                     __end_of_itoa:
 17701                           	opt stack 0
 17702                           tosu	equ	0xFFF
 17703                           tosh	equ	0xFFE
 17704                           tosl	equ	0xFFD
 17705                           pclath	equ	0xFFA
 17706                           tblptru	equ	0xFF8
 17707                           tblptrh	equ	0xFF7
 17708                           tblptrl	equ	0xFF6
 17709                           tablat	equ	0xFF5
 17710                           prodh	equ	0xFF4
 17711                           prodl	equ	0xFF3
 17712                           intcon	equ	0xFF2
 17713                           intcon2	equ	0xFF1
 17714                           intcon3	equ	0xFF0
 17715                           indf0	equ	0xFEF
 17716                           postinc0	equ	0xFEE
 17717                           plusw0	equ	0xFEB
 17718                           fsr0h	equ	0xFEA
 17719                           fsr0l	equ	0xFE9
 17720                           wreg	equ	0xFE8
 17721                           indf1	equ	0xFE7
 17722                           postinc1	equ	0xFE6
 17723                           postdec1	equ	0xFE5
 17724                           fsr1h	equ	0xFE2
 17725                           fsr1l	equ	0xFE1
 17726                           indf2	equ	0xFDF
 17727                           postinc2	equ	0xFDE
 17728                           postdec2	equ	0xFDD
 17729                           plusw2	equ	0xFDB
 17730                           fsr2h	equ	0xFDA
 17731                           fsr2l	equ	0xFD9
 17732                           status	equ	0xFD8
 17733                           
 17734 ;; *************** function _utoa *****************
 17735 ;; Defined at:
 17736 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17737 ;; Parameters:    Size  Location     Type
 17738 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17739 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17740 ;;  val             2   44[BANK0 ] unsigned int 
 17741 ;;  base            2   46[BANK0 ] int 
 17742 ;; Auto vars:     Size  Location     Type
 17743 ;;  v               2   48[BANK0 ] unsigned int 
 17744 ;;  c               1   50[BANK0 ] unsigned char 
 17745 ;; Return value:  Size  Location     Type
 17746 ;;                  2   42[BANK0 ] PTR unsigned char 
 17747 ;; Registers used:
 17748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17749 ;; Tracked objects:
 17750 ;;		On entry : 0/0
 17751 ;;		On exit  : 0/0
 17752 ;;		Unchanged: 0/0
 17753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17754 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17755 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17757 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17758 ;;Total ram usage:        9 bytes
 17759 ;; Hardware stack levels used:    1
 17760 ;; Hardware stack levels required when called:   12
 17761 ;; This function calls:
 17762 ;;		___lwdiv
 17763 ;;		___lwmod
 17764 ;; This function is called by:
 17765 ;;		_Term_MainSm
 17766 ;;		_itoa
 17767 ;; This function uses a non-reentrant model
 17768 ;;
 17769                           
 17770                           	psect	text72
 17771  004888                     __ptext72:
 17772                           	opt stack 0
 17773  004888                     _utoa:
 17774                           	opt stack 14
 17775                           
 17776                           ;incstack = 0
 17777  004888  C08C  F090         	movff	utoa@val,utoa@v
 17778  00488C  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17779  004890  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17780  004894  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17781  004898  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17782  00489C  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17783  0048A0  EC08  F02F         	call	___lwdiv	;wreg free
 17784  0048A4  C083  F090         	movff	?___lwdiv,utoa@v
 17785  0048A8  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17786  0048AC  0100               	movlb	0	; () banked
 17787  0048AE  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17788  0048B0  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17789                           
 17790                           ; BSR set to: 0
 17791  0048B2  5190               	movf	utoa@v& (0+255),w,b
 17792  0048B4  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17793  0048B6  A4D8               	btfss	status,2,c
 17794  0048B8  D7EB               	goto	l3340
 17795                           
 17796                           ; BSR set to: 0
 17797                           
 17798                           ; BSR set to: 0
 17799  0048BA  C08A  FFD9         	movff	utoa@buf,fsr2l
 17800  0048BE  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17801  0048C2  0E00               	movlw	0
 17802  0048C4  6EDF               	movwf	indf2,c
 17803                           
 17804                           ; BSR set to: 0
 17805  0048C6  078A               	decf	utoa@buf& (0+255),f,b
 17806  0048C8  A0D8               	btfss	status,0,c
 17807  0048CA  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17808  0048CC                     
 17809                           ; BSR set to: 0
 17810                           
 17811                           ; BSR set to: 0
 17812  0048CC  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17813  0048D0  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17814  0048D4  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17815  0048D8  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17816  0048DC  EC8E  F031         	call	___lwmod	;wreg free
 17817  0048E0  0100               	movlb	0	; () banked
 17818  0048E2  517D               	movf	?___lwmod& (0+255),w,b
 17819  0048E4  6F92               	movwf	utoa@c& (0+255),b
 17820                           
 17821                           ; BSR set to: 0
 17822  0048E6  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17823  0048EA  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17824  0048EE  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17825  0048F2  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17826  0048F6  EC08  F02F         	call	___lwdiv	;wreg free
 17827  0048FA  C083  F08C         	movff	?___lwdiv,utoa@val
 17828  0048FE  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17829  004902  0E09               	movlw	9
 17830  004904  0100               	movlb	0	; () banked
 17831  004906  6592               	cpfsgt	utoa@c& (0+255),b
 17832  004908  D002               	goto	l3343
 17833                           
 17834                           ; BSR set to: 0
 17835  00490A  0E07               	movlw	7
 17836  00490C  2792               	addwf	utoa@c& (0+255),f,b
 17837  00490E                     l3343:
 17838                           
 17839                           ; BSR set to: 0
 17840  00490E  0E30               	movlw	48
 17841  004910  2792               	addwf	utoa@c& (0+255),f,b
 17842                           
 17843                           ; BSR set to: 0
 17844  004912  C08A  FFD9         	movff	utoa@buf,fsr2l
 17845  004916  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17846  00491A  C092  FFDF         	movff	utoa@c,indf2
 17847                           
 17848                           ; BSR set to: 0
 17849  00491E  078A               	decf	utoa@buf& (0+255),f,b
 17850  004920  A0D8               	btfss	status,0,c
 17851  004922  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17852                           
 17853                           ; BSR set to: 0
 17854  004924  518C               	movf	utoa@val& (0+255),w,b
 17855  004926  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17856  004928  A4D8               	btfss	status,2,c
 17857  00492A  D7D0               	goto	l3342
 17858                           
 17859                           ; BSR set to: 0
 17860                           ;	Return value of _utoa is never used
 17861                           
 17862                           ; BSR set to: 0
 17863  00492C  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17864  00492E  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17865  004930  0012               	return	
 17866  004932                     __end_of_utoa:
 17867                           	opt stack 0
 17868                           tosu	equ	0xFFF
 17869                           tosh	equ	0xFFE
 17870                           tosl	equ	0xFFD
 17871                           pclath	equ	0xFFA
 17872                           tblptru	equ	0xFF8
 17873                           tblptrh	equ	0xFF7
 17874                           tblptrl	equ	0xFF6
 17875                           tablat	equ	0xFF5
 17876                           prodh	equ	0xFF4
 17877                           prodl	equ	0xFF3
 17878                           intcon	equ	0xFF2
 17879                           intcon2	equ	0xFF1
 17880                           intcon3	equ	0xFF0
 17881                           indf0	equ	0xFEF
 17882                           postinc0	equ	0xFEE
 17883                           plusw0	equ	0xFEB
 17884                           fsr0h	equ	0xFEA
 17885                           fsr0l	equ	0xFE9
 17886                           wreg	equ	0xFE8
 17887                           indf1	equ	0xFE7
 17888                           postinc1	equ	0xFE6
 17889                           postdec1	equ	0xFE5
 17890                           fsr1h	equ	0xFE2
 17891                           fsr1l	equ	0xFE1
 17892                           indf2	equ	0xFDF
 17893                           postinc2	equ	0xFDE
 17894                           postdec2	equ	0xFDD
 17895                           plusw2	equ	0xFDB
 17896                           fsr2h	equ	0xFDA
 17897                           fsr2l	equ	0xFD9
 17898                           status	equ	0xFD8
 17899                           
 17900 ;; *************** function ___lwmod *****************
 17901 ;; Defined at:
 17902 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17903 ;; Parameters:    Size  Location     Type
 17904 ;;  dividend        2   29[BANK0 ] unsigned int 
 17905 ;;  divisor         2   31[BANK0 ] unsigned int 
 17906 ;; Auto vars:     Size  Location     Type
 17907 ;;  counter         1   33[BANK0 ] unsigned char 
 17908 ;; Return value:  Size  Location     Type
 17909 ;;                  2   29[BANK0 ] unsigned int 
 17910 ;; Registers used:
 17911 ;;		wreg, status,2, status,0
 17912 ;; Tracked objects:
 17913 ;;		On entry : 0/0
 17914 ;;		On exit  : 0/0
 17915 ;;		Unchanged: 0/0
 17916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17917 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17918 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17920 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17921 ;;Total ram usage:        5 bytes
 17922 ;; Hardware stack levels used:    1
 17923 ;; Hardware stack levels required when called:   11
 17924 ;; This function calls:
 17925 ;;		Nothing
 17926 ;; This function is called by:
 17927 ;;		_utoa
 17928 ;; This function uses a non-reentrant model
 17929 ;;
 17930                           
 17931                           	psect	text73
 17932  00631C                     __ptext73:
 17933                           	opt stack 0
 17934  00631C                     ___lwmod:
 17935                           	opt stack 14
 17936                           
 17937                           ; BSR set to: 0
 17938                           ;incstack = 0
 17939  00631C  0100               	movlb	0	; () banked
 17940  00631E  517F               	movf	___lwmod@divisor& (0+255),w,b
 17941  006320  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17942  006322  B4D8               	btfsc	status,2,c
 17943  006324  D018               	goto	l3438
 17944                           
 17945                           ; BSR set to: 0
 17946  006326  0E01               	movlw	1
 17947  006328  6F81               	movwf	___lwmod@counter& (0+255),b
 17948  00632A  D004               	goto	l3433
 17949  00632C                     
 17950                           ; BSR set to: 0
 17951                           
 17952                           ; BSR set to: 0
 17953  00632C  90D8               	bcf	status,0,c
 17954  00632E  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17955  006330  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17956  006332  2B81               	incf	___lwmod@counter& (0+255),f,b
 17957  006334                     l3433:
 17958                           
 17959                           ; BSR set to: 0
 17960                           
 17961                           ; BSR set to: 0
 17962  006334  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17963  006336  D7FA               	goto	l3434
 17964  006338                     u12390:
 17965                           
 17966                           ; BSR set to: 0
 17967                           
 17968                           ; BSR set to: 0
 17969                           
 17970                           ; BSR set to: 0
 17971  006338  517F               	movf	___lwmod@divisor& (0+255),w,b
 17972  00633A  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17973  00633C  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17974  00633E  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17975  006340  A0D8               	btfss	status,0,c
 17976  006342  D004               	goto	l3437
 17977                           
 17978                           ; BSR set to: 0
 17979  006344  517F               	movf	___lwmod@divisor& (0+255),w,b
 17980  006346  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17981  006348  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17982  00634A  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17983  00634C                     l3437:
 17984                           
 17985                           ; BSR set to: 0
 17986                           
 17987                           ; BSR set to: 0
 17988  00634C  90D8               	bcf	status,0,c
 17989  00634E  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17990  006350  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17991                           
 17992                           ; BSR set to: 0
 17993  006352  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17994  006354  D7F1               	goto	u12390
 17995  006356                     l3438:
 17996                           
 17997                           ; BSR set to: 0
 17998                           
 17999                           ; BSR set to: 0
 18000  006356  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 18001  00635A  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 18002                           
 18003                           ; BSR set to: 0
 18004  00635E  0012               	return		;funcret
 18005  006360                     __end_of___lwmod:
 18006                           	opt stack 0
 18007                           tosu	equ	0xFFF
 18008                           tosh	equ	0xFFE
 18009                           tosl	equ	0xFFD
 18010                           pclath	equ	0xFFA
 18011                           tblptru	equ	0xFF8
 18012                           tblptrh	equ	0xFF7
 18013                           tblptrl	equ	0xFF6
 18014                           tablat	equ	0xFF5
 18015                           prodh	equ	0xFF4
 18016                           prodl	equ	0xFF3
 18017                           intcon	equ	0xFF2
 18018                           intcon2	equ	0xFF1
 18019                           intcon3	equ	0xFF0
 18020                           indf0	equ	0xFEF
 18021                           postinc0	equ	0xFEE
 18022                           plusw0	equ	0xFEB
 18023                           fsr0h	equ	0xFEA
 18024                           fsr0l	equ	0xFE9
 18025                           wreg	equ	0xFE8
 18026                           indf1	equ	0xFE7
 18027                           postinc1	equ	0xFE6
 18028                           postdec1	equ	0xFE5
 18029                           fsr1h	equ	0xFE2
 18030                           fsr1l	equ	0xFE1
 18031                           indf2	equ	0xFDF
 18032                           postinc2	equ	0xFDE
 18033                           postdec2	equ	0xFDD
 18034                           plusw2	equ	0xFDB
 18035                           fsr2h	equ	0xFDA
 18036                           fsr2l	equ	0xFD9
 18037                           status	equ	0xFD8
 18038                           
 18039 ;; *************** function _getsUSBUSART *****************
 18040 ;; Defined at:
 18041 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 18042 ;; Parameters:    Size  Location     Type
 18043 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 18044 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 18045 ;;  len             1   38[BANK0 ] unsigned char 
 18046 ;; Auto vars:     Size  Location     Type
 18047 ;;		None
 18048 ;; Return value:  Size  Location     Type
 18049 ;;                  1    wreg      unsigned char 
 18050 ;; Registers used:
 18051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18052 ;; Tracked objects:
 18053 ;;		On entry : 0/0
 18054 ;;		On exit  : 0/0
 18055 ;;		Unchanged: 0/0
 18056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18057 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18059 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18060 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18061 ;;Total ram usage:        4 bytes
 18062 ;; Hardware stack levels used:    1
 18063 ;; Hardware stack levels required when called:   12
 18064 ;; This function calls:
 18065 ;;		_USBTransferOnePacket
 18066 ;; This function is called by:
 18067 ;;		_Terminal
 18068 ;;		_GsmGprsTerminal
 18069 ;; This function uses a non-reentrant model
 18070 ;;
 18071                           
 18072                           	psect	text74
 18073  004E2C                     __ptext74:
 18074                           	opt stack 0
 18075  004E2C                     _getsUSBUSART:
 18076                           	opt stack 13
 18077                           
 18078                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 18079                           
 18080                           ; BSR set to: 0
 18081                           ;incstack = 0
 18082  004E2C  0E00               	movlw	0
 18083  004E2E  0100               	movlb	0	; () banked
 18084  004E30  6FC9               	movwf	_cdc_rx_len& (0+255),b
 18085                           
 18086                           ; BSR set to: 0
 18087                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 18088  004E32  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18089  004E34  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18090  004E36  B4D8               	btfsc	status,2,c
 18091  004E38  D006               	goto	u13110
 18092                           
 18093                           ; BSR set to: 0
 18094  004E3A  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18095  004E3E  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18096  004E42  BEDF               	btfsc	indf2,7,c
 18097  004E44  D03B               	goto	l1924
 18098  004E46                     u13110:
 18099                           
 18100                           ; BSR set to: 0
 18101                           ;usb_device_cdc.c: 493: {
 18102                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18103                           
 18104                           ; BSR set to: 0
 18105  004E46  EE20 F001          	lfsr	2,1
 18106  004E4A  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18107  004E4C  26D9               	addwf	fsr2l,f,c
 18108  004E4E  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18109  004E50  22DA               	addwfc	fsr2h,f,c
 18110  004E52  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18111  004E54  5CDE               	subwf	postinc2,w,c
 18112  004E56  B0D8               	btfsc	status,0,c
 18113  004E58  D008               	goto	l1927
 18114                           
 18115                           ; BSR set to: 0
 18116                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18117  004E5A  EE20 F001          	lfsr	2,1
 18118  004E5E  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18119  004E60  26D9               	addwf	fsr2l,f,c
 18120  004E62  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18121  004E64  22DA               	addwfc	fsr2h,f,c
 18122  004E66  50DF               	movf	indf2,w,c
 18123  004E68  6F86               	movwf	getsUSBUSART@len& (0+255),b
 18124  004E6A                     l1927:
 18125                           
 18126                           ; BSR set to: 0
 18127                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18128                           
 18129                           ; BSR set to: 0
 18130  004E6A  0E00               	movlw	0
 18131  004E6C  6FC9               	movwf	_cdc_rx_len& (0+255),b
 18132  004E6E  D013               	goto	l1928
 18133  004E70                     
 18134                           ; BSR set to: 0
 18135                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18136                           
 18137                           ; BSR set to: 0
 18138  004E70  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18139  004E72  0D01               	mullw	1
 18140  004E74  0E00               	movlw	low _cdc_data_rx
 18141  004E76  24F3               	addwf	prodl,w,c
 18142  004E78  6ED9               	movwf	fsr2l,c
 18143  004E7A  0E05               	movlw	high _cdc_data_rx
 18144  004E7C  20F4               	addwfc	prodh,w,c
 18145  004E7E  6EDA               	movwf	fsr2h,c
 18146  004E80  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18147  004E82  0D01               	mullw	1
 18148  004E84  50F3               	movf	prodl,w,c
 18149  004E86  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18150  004E88  6EE1               	movwf	fsr1l,c
 18151  004E8A  50F4               	movf	prodh,w,c
 18152  004E8C  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18153  004E8E  6EE2               	movwf	fsr1h,c
 18154  004E90  CFDF FFE7          	movff	indf2,indf1
 18155                           
 18156                           ; BSR set to: 0
 18157  004E94  2BC9               	incf	_cdc_rx_len& (0+255),f,b
 18158  004E96                     l1928:
 18159                           
 18160                           ; BSR set to: 0
 18161                           
 18162                           ; BSR set to: 0
 18163  004E96  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18164  004E98  5DC9               	subwf	_cdc_rx_len& (0+255),w,b
 18165  004E9A  A0D8               	btfss	status,0,c
 18166  004E9C  D7E9               	goto	l1929
 18167                           
 18168                           ; BSR set to: 0
 18169                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18170                           
 18171                           ; BSR set to: 0
 18172  004E9E  0E00               	movlw	0
 18173  004EA0  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18174  004EA2  0E00               	movlw	low _cdc_data_rx
 18175  004EA4  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18176  004EA6  0E05               	movlw	high _cdc_data_rx
 18177  004EA8  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18178  004EAA  0E40               	movlw	64
 18179  004EAC  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18180  004EAE  0E02               	movlw	2
 18181  004EB0  EC81  F022         	call	_USBTransferOnePacket
 18182  004EB4  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18183  004EB8  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18184  004EBC                     l1924:
 18185                           
 18186                           ;usb_device_cdc.c: 513: }
 18187                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18188  004EBC  0100               	movlb	0	; () banked
 18189  004EBE  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18190  004EC0  0012               	return	
 18191  004EC2                     __end_of_getsUSBUSART:
 18192                           	opt stack 0
 18193                           tosu	equ	0xFFF
 18194                           tosh	equ	0xFFE
 18195                           tosl	equ	0xFFD
 18196                           pclath	equ	0xFFA
 18197                           tblptru	equ	0xFF8
 18198                           tblptrh	equ	0xFF7
 18199                           tblptrl	equ	0xFF6
 18200                           tablat	equ	0xFF5
 18201                           prodh	equ	0xFF4
 18202                           prodl	equ	0xFF3
 18203                           intcon	equ	0xFF2
 18204                           intcon2	equ	0xFF1
 18205                           intcon3	equ	0xFF0
 18206                           indf0	equ	0xFEF
 18207                           postinc0	equ	0xFEE
 18208                           plusw0	equ	0xFEB
 18209                           fsr0h	equ	0xFEA
 18210                           fsr0l	equ	0xFE9
 18211                           wreg	equ	0xFE8
 18212                           indf1	equ	0xFE7
 18213                           postinc1	equ	0xFE6
 18214                           postdec1	equ	0xFE5
 18215                           fsr1h	equ	0xFE2
 18216                           fsr1l	equ	0xFE1
 18217                           indf2	equ	0xFDF
 18218                           postinc2	equ	0xFDE
 18219                           postdec2	equ	0xFDD
 18220                           plusw2	equ	0xFDB
 18221                           fsr2h	equ	0xFDA
 18222                           fsr2l	equ	0xFD9
 18223                           status	equ	0xFD8
 18224                           
 18225 ;; *************** function _USBTransferOnePacket *****************
 18226 ;; Defined at:
 18227 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18228 ;; Parameters:    Size  Location     Type
 18229 ;;  ep              1    wreg     unsigned char 
 18230 ;;  dir             1   29[BANK0 ] unsigned char 
 18231 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18232 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18233 ;;  len             1   32[BANK0 ] unsigned char 
 18234 ;; Auto vars:     Size  Location     Type
 18235 ;;  ep              1   33[BANK0 ] unsigned char 
 18236 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18237 ;;		 -> NULL(0), BDT(48), 
 18238 ;; Return value:  Size  Location     Type
 18239 ;;                  2   29[BANK0 ] PTR void 
 18240 ;; Registers used:
 18241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18242 ;; Tracked objects:
 18243 ;;		On entry : 0/0
 18244 ;;		On exit  : 0/0
 18245 ;;		Unchanged: 0/0
 18246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18247 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18248 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18250 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18251 ;;Total ram usage:        7 bytes
 18252 ;; Hardware stack levels used:    1
 18253 ;; Hardware stack levels required when called:   11
 18254 ;; This function calls:
 18255 ;;		Nothing
 18256 ;; This function is called by:
 18257 ;;		_CDCInitEP
 18258 ;;		_getsUSBUSART
 18259 ;;		_CDCTxService
 18260 ;;		_USBCDCEventHandler
 18261 ;; This function uses a non-reentrant model
 18262 ;;
 18263                           
 18264                           	psect	text75
 18265  004502                     __ptext75:
 18266                           	opt stack 0
 18267  004502                     _USBTransferOnePacket:
 18268                           	opt stack 13
 18269                           
 18270                           ; BSR set to: 0
 18271                           ;incstack = 0
 18272                           ;USBTransferOnePacket@ep stored from wreg
 18273  004502  0100               	movlb	0	; () banked
 18274  004504  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18275                           
 18276                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18277                           ;usb_device.c: 1018: if(dir != 0)
 18278  004506  0100               	movlb	0	; () banked
 18279  004508  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18280  00450A  B4D8               	btfsc	status,2,c
 18281  00450C  D007               	goto	l1648
 18282                           
 18283                           ; BSR set to: 0
 18284                           ;usb_device.c: 1019: {
 18285                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18286  00450E  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18287  004510  0D02               	mullw	2
 18288  004512  0EB6               	movlw	low _pBDTEntryIn
 18289  004514  24F3               	addwf	prodl,w,c
 18290  004516  6ED9               	movwf	fsr2l,c
 18291  004518  0E00               	movlw	high _pBDTEntryIn
 18292  00451A  D006               	goto	L16
 18293  00451C                     l1648:
 18294                           
 18295                           ; BSR set to: 0
 18296                           ;usb_device.c: 1023: else
 18297                           ;usb_device.c: 1024: {
 18298                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18299                           
 18300                           ; BSR set to: 0
 18301  00451C  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18302  00451E  0D02               	mullw	2
 18303  004520  0E06               	movlw	low _pBDTEntryOut
 18304  004522  24F3               	addwf	prodl,w,c
 18305  004524  6ED9               	movwf	fsr2l,c
 18306  004526  0E03               	movlw	high _pBDTEntryOut
 18307  004528                     L16:
 18308  004528  20F4               	addwfc	prodh,w,c
 18309  00452A  6EDA               	movwf	fsr2h,c
 18310  00452C  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18311  004530  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18312                           
 18313                           ; BSR set to: 0
 18314                           ;usb_device.c: 1027: }
 18315                           ;usb_device.c: 1031: if(handle == 0)
 18316                           
 18317                           ; BSR set to: 0
 18318  004534  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18319  004536  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18320  004538  A4D8               	btfss	status,2,c
 18321  00453A  D005               	goto	l1650
 18322                           
 18323                           ; BSR set to: 0
 18324                           ;usb_device.c: 1032: {
 18325                           ;usb_device.c: 1033: return 0;
 18326  00453C  0E00               	movlw	0
 18327  00453E  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18328  004540  0E00               	movlw	0
 18329  004542  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18330                           
 18331                           ; BSR set to: 0
 18332  004544  0012               	return	
 18333  004546                     l1650:
 18334                           
 18335                           ; BSR set to: 0
 18336                           ;usb_device.c: 1034: }
 18337                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18338                           
 18339                           ; BSR set to: 0
 18340  004546  EE20 F002          	lfsr	2,2
 18341  00454A  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18342  00454C  26D9               	addwf	fsr2l,f,c
 18343  00454E  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18344  004550  22DA               	addwfc	fsr2h,f,c
 18345  004552  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18346  004556  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18347                           
 18348                           ;usb_device.c: 1048: handle->CNT = len;
 18349  00455A  EE20 F001          	lfsr	2,1
 18350  00455E  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18351  004560  26D9               	addwf	fsr2l,f,c
 18352  004562  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18353  004564  22DA               	addwfc	fsr2h,f,c
 18354  004566  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18355                           
 18356                           ; BSR set to: 0
 18357                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18358  00456A  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18359  00456E  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18360  004572  0E40               	movlw	64
 18361  004574  16DF               	andwf	indf2,f,c
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18365  004576  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18366  00457A  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18367  00457E  0E00               	movlw	0
 18368  004580  86DB               	bsf	plusw2,3,c
 18369                           
 18370                           ; BSR set to: 0
 18371                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18372  004582  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18373  004586  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18374  00458A  0E00               	movlw	0
 18375  00458C  8EDB               	bsf	plusw2,7,c
 18376                           
 18377                           ; BSR set to: 0
 18378                           ;usb_device.c: 1054: if(dir != 0)
 18379  00458E  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18380  004590  B4D8               	btfsc	status,2,c
 18381  004592  D007               	goto	l1652
 18382                           
 18383                           ; BSR set to: 0
 18384                           ;usb_device.c: 1055: {
 18385                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18386  004594  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18387  004596  0D02               	mullw	2
 18388  004598  0EB6               	movlw	low _pBDTEntryIn
 18389  00459A  24F3               	addwf	prodl,w,c
 18390  00459C  6ED9               	movwf	fsr2l,c
 18391  00459E  0E00               	movlw	high _pBDTEntryIn
 18392  0045A0  D006               	goto	L17
 18393  0045A2                     l1652:
 18394                           
 18395                           ; BSR set to: 0
 18396                           ;usb_device.c: 1059: else
 18397                           ;usb_device.c: 1060: {
 18398                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18399                           
 18400                           ; BSR set to: 0
 18401  0045A2  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18402  0045A4  0D02               	mullw	2
 18403  0045A6  0E06               	movlw	low _pBDTEntryOut
 18404  0045A8  24F3               	addwf	prodl,w,c
 18405  0045AA  6ED9               	movwf	fsr2l,c
 18406  0045AC  0E03               	movlw	high _pBDTEntryOut
 18407  0045AE                     L17:
 18408  0045AE  20F4               	addwfc	prodh,w,c
 18409  0045B0  6EDA               	movwf	fsr2h,c
 18410  0045B2  0E04               	movlw	4
 18411  0045B4  1ADF               	xorwf	indf2,f,c
 18412                           
 18413                           ; BSR set to: 0
 18414                           ;usb_device.c: 1063: }
 18415                           ;usb_device.c: 1064: return (void*)handle;
 18416                           
 18417                           ; BSR set to: 0
 18418  0045B6  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18419  0045BA  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18420  0045BE  0012               	return	
 18421  0045C0                     __end_of_USBTransferOnePacket:
 18422                           	opt stack 0
 18423                           tosu	equ	0xFFF
 18424                           tosh	equ	0xFFE
 18425                           tosl	equ	0xFFD
 18426                           pclath	equ	0xFFA
 18427                           tblptru	equ	0xFF8
 18428                           tblptrh	equ	0xFF7
 18429                           tblptrl	equ	0xFF6
 18430                           tablat	equ	0xFF5
 18431                           prodh	equ	0xFF4
 18432                           prodl	equ	0xFF3
 18433                           intcon	equ	0xFF2
 18434                           intcon2	equ	0xFF1
 18435                           intcon3	equ	0xFF0
 18436                           indf0	equ	0xFEF
 18437                           postinc0	equ	0xFEE
 18438                           plusw0	equ	0xFEB
 18439                           fsr0h	equ	0xFEA
 18440                           fsr0l	equ	0xFE9
 18441                           wreg	equ	0xFE8
 18442                           indf1	equ	0xFE7
 18443                           postinc1	equ	0xFE6
 18444                           postdec1	equ	0xFE5
 18445                           fsr1h	equ	0xFE2
 18446                           fsr1l	equ	0xFE1
 18447                           indf2	equ	0xFDF
 18448                           postinc2	equ	0xFDE
 18449                           postdec2	equ	0xFDD
 18450                           plusw2	equ	0xFDB
 18451                           fsr2h	equ	0xFDA
 18452                           fsr2l	equ	0xFD9
 18453                           status	equ	0xFD8
 18454                           
 18455 ;; *************** function _atoi *****************
 18456 ;; Defined at:
 18457 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18458 ;; Parameters:    Size  Location     Type
 18459 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18460 ;;		 -> Terminal@Len(4), 
 18461 ;; Auto vars:     Size  Location     Type
 18462 ;;  a               2   40[BANK0 ] int 
 18463 ;;  sign            1   39[BANK0 ] unsigned char 
 18464 ;; Return value:  Size  Location     Type
 18465 ;;                  2   35[BANK0 ] int 
 18466 ;; Registers used:
 18467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18468 ;; Tracked objects:
 18469 ;;		On entry : 0/0
 18470 ;;		On exit  : 0/0
 18471 ;;		Unchanged: 0/0
 18472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18473 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18474 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18475 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18476 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18477 ;;Total ram usage:        7 bytes
 18478 ;; Hardware stack levels used:    1
 18479 ;; Hardware stack levels required when called:   12
 18480 ;; This function calls:
 18481 ;;		___wmul
 18482 ;;		_isdigit
 18483 ;; This function is called by:
 18484 ;;		_Terminal
 18485 ;; This function uses a non-reentrant model
 18486 ;;
 18487                           
 18488                           	psect	text76
 18489  003906                     __ptext76:
 18490                           	opt stack 0
 18491  003906                     _atoi:
 18492                           	opt stack 13
 18493                           
 18494                           ; BSR set to: 0
 18495                           ;incstack = 0
 18496  003906  D003               	goto	l3149
 18497  003908  0100               	movlb	0	; () banked
 18498  00390A  4B83               	infsnz	atoi@s& (0+255),f,b
 18499  00390C  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18500  00390E                     l3149:
 18501                           
 18502                           ; BSR set to: 0
 18503  00390E  C083  FFD9         	movff	atoi@s,fsr2l
 18504  003912  C084  FFDA         	movff	atoi@s+1,fsr2h
 18505  003916  0E20               	movlw	32
 18506  003918  18DE               	xorwf	postinc2,w,c
 18507  00391A  B4D8               	btfsc	status,2,c
 18508  00391C  D7F5               	goto	l3150
 18509  00391E  C083  FFD9         	movff	atoi@s,fsr2l
 18510  003922  C084  FFDA         	movff	atoi@s+1,fsr2h
 18511  003926  0E09               	movlw	9
 18512  003928  18DE               	xorwf	postinc2,w,c
 18513  00392A  B4D8               	btfsc	status,2,c
 18514  00392C  D7ED               	goto	l3150
 18515  00392E  0E00               	movlw	0
 18516  003930  0100               	movlb	0	; () banked
 18517  003932  6F89               	movwf	(atoi@a+1)& (0+255),b
 18518  003934  0E00               	movlw	0
 18519  003936  6F88               	movwf	atoi@a& (0+255),b
 18520  003938  0E00               	movlw	0
 18521  00393A  6F87               	movwf	atoi@sign& (0+255),b
 18522                           
 18523                           ; BSR set to: 0
 18524  00393C  C083  FFD9         	movff	atoi@s,fsr2l
 18525  003940  C084  FFDA         	movff	atoi@s+1,fsr2h
 18526  003944  0E2D               	movlw	45
 18527  003946  18DE               	xorwf	postinc2,w,c
 18528  003948  A4D8               	btfss	status,2,c
 18529  00394A  D002               	goto	l3152
 18530                           
 18531                           ; BSR set to: 0
 18532  00394C  2B87               	incf	atoi@sign& (0+255),f,b
 18533  00394E  D026               	goto	l14286
 18534  003950                     l3152:
 18535                           
 18536                           ; BSR set to: 0
 18537                           
 18538                           ; BSR set to: 0
 18539  003950  C083  FFD9         	movff	atoi@s,fsr2l
 18540  003954  C084  FFDA         	movff	atoi@s+1,fsr2h
 18541  003958  0E2B               	movlw	43
 18542  00395A  18DE               	xorwf	postinc2,w,c
 18543  00395C  A4D8               	btfss	status,2,c
 18544  00395E  D020               	goto	l3155
 18545  003960  D01D               	goto	l14286
 18546  003962                     
 18547                           ; BSR set to: 0
 18548  003962  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18549  003966  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18550  00396A  0E00               	movlw	0
 18551  00396C  0100               	movlb	0	; () banked
 18552  00396E  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18553  003970  0E0A               	movlw	10
 18554  003972  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18555  003974  EC6E  F034         	call	___wmul	;wreg free
 18556  003978  C083  FFD9         	movff	atoi@s,fsr2l
 18557  00397C  C084  FFDA         	movff	atoi@s+1,fsr2h
 18558  003980  50DF               	movf	indf2,w,c
 18559  003982  0100               	movlb	0	; () banked
 18560  003984  6F85               	movwf	??_atoi& (0+255),b
 18561  003986  6B86               	clrf	(??_atoi+1)& (0+255),b
 18562  003988  517D               	movf	?___wmul& (0+255),w,b
 18563  00398A  2785               	addwf	??_atoi& (0+255),f,b
 18564  00398C  517E               	movf	(?___wmul+1)& (0+255),w,b
 18565  00398E  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18566  003990  0ED0               	movlw	208
 18567  003992  2585               	addwf	??_atoi& (0+255),w,b
 18568  003994  6F88               	movwf	atoi@a& (0+255),b
 18569  003996  0EFF               	movlw	255
 18570  003998  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18571  00399A  6F89               	movwf	(atoi@a+1)& (0+255),b
 18572  00399C                     l14286:
 18573                           
 18574                           ; BSR set to: 0
 18575  00399C  4B83               	infsnz	atoi@s& (0+255),f,b
 18576  00399E  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18577  0039A0                     l3155:
 18578                           
 18579                           ; BSR set to: 0
 18580                           
 18581                           ; BSR set to: 0
 18582  0039A0  C083  FFD9         	movff	atoi@s,fsr2l
 18583  0039A4  C084  FFDA         	movff	atoi@s+1,fsr2h
 18584  0039A8  50DF               	movf	indf2,w,c
 18585  0039AA  EC21  F035         	call	_isdigit
 18586  0039AE  B0D8               	btfsc	status,0,c
 18587  0039B0  D7D8               	goto	l3156
 18588  0039B2  0100               	movlb	0	; () banked
 18589  0039B4  5187               	movf	atoi@sign& (0+255),w,b
 18590  0039B6  B4D8               	btfsc	status,2,c
 18591  0039B8  D00D               	goto	l3158
 18592                           
 18593                           ; BSR set to: 0
 18594  0039BA  C088  F085         	movff	atoi@a,??_atoi
 18595  0039BE  C089  F086         	movff	atoi@a+1,??_atoi+1
 18596  0039C2  1F85               	comf	??_atoi& (0+255),f,b
 18597  0039C4  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18598  0039C6  4B85               	infsnz	??_atoi& (0+255),f,b
 18599  0039C8  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18600  0039CA  C085  F083         	movff	??_atoi,?_atoi
 18601  0039CE  C086  F084         	movff	??_atoi+1,?_atoi+1
 18602  0039D2  0012               	return	
 18603  0039D4                     l3158:
 18604                           
 18605                           ; BSR set to: 0
 18606  0039D4  C088  F083         	movff	atoi@a,?_atoi
 18607  0039D8  C089  F084         	movff	atoi@a+1,?_atoi+1
 18608                           
 18609                           ; BSR set to: 0
 18610  0039DC  0012               	return		;funcret
 18611  0039DE                     __end_of_atoi:
 18612                           	opt stack 0
 18613                           tosu	equ	0xFFF
 18614                           tosh	equ	0xFFE
 18615                           tosl	equ	0xFFD
 18616                           pclath	equ	0xFFA
 18617                           tblptru	equ	0xFF8
 18618                           tblptrh	equ	0xFF7
 18619                           tblptrl	equ	0xFF6
 18620                           tablat	equ	0xFF5
 18621                           prodh	equ	0xFF4
 18622                           prodl	equ	0xFF3
 18623                           intcon	equ	0xFF2
 18624                           intcon2	equ	0xFF1
 18625                           intcon3	equ	0xFF0
 18626                           indf0	equ	0xFEF
 18627                           postinc0	equ	0xFEE
 18628                           plusw0	equ	0xFEB
 18629                           fsr0h	equ	0xFEA
 18630                           fsr0l	equ	0xFE9
 18631                           wreg	equ	0xFE8
 18632                           indf1	equ	0xFE7
 18633                           postinc1	equ	0xFE6
 18634                           postdec1	equ	0xFE5
 18635                           fsr1h	equ	0xFE2
 18636                           fsr1l	equ	0xFE1
 18637                           indf2	equ	0xFDF
 18638                           postinc2	equ	0xFDE
 18639                           postdec2	equ	0xFDD
 18640                           plusw2	equ	0xFDB
 18641                           fsr2h	equ	0xFDA
 18642                           fsr2l	equ	0xFD9
 18643                           status	equ	0xFD8
 18644                           
 18645 ;; *************** function _isdigit *****************
 18646 ;; Defined at:
 18647 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18648 ;; Parameters:    Size  Location     Type
 18649 ;;  c               1    wreg     unsigned char 
 18650 ;; Auto vars:     Size  Location     Type
 18651 ;;  c               1   31[BANK0 ] unsigned char 
 18652 ;; Return value:  Size  Location     Type
 18653 ;;		None               void
 18654 ;; Registers used:
 18655 ;;		wreg, status,2, status,0
 18656 ;; Tracked objects:
 18657 ;;		On entry : 0/0
 18658 ;;		On exit  : 0/0
 18659 ;;		Unchanged: 0/0
 18660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18662 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18663 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18664 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18665 ;;Total ram usage:        3 bytes
 18666 ;; Hardware stack levels used:    1
 18667 ;; Hardware stack levels required when called:   11
 18668 ;; This function calls:
 18669 ;;		Nothing
 18670 ;; This function is called by:
 18671 ;;		_atoi
 18672 ;;		_strtol
 18673 ;;		_xtoi
 18674 ;;		_isxdigit
 18675 ;; This function uses a non-reentrant model
 18676 ;;
 18677                           
 18678                           	psect	text77
 18679  006A42                     __ptext77:
 18680                           	opt stack 0
 18681  006A42                     _isdigit:
 18682                           	opt stack 12
 18683                           
 18684                           ; BSR set to: 0
 18685                           ;incstack = 0
 18686                           ;isdigit@c stored from wreg
 18687  006A42  0100               	movlb	0	; () banked
 18688  006A44  6F7F               	movwf	isdigit@c& (0+255),b
 18689  006A46  0E00               	movlw	0
 18690  006A48  0100               	movlb	0	; () banked
 18691  006A4A  6F7E               	movwf	_isdigit$6506& (0+255),b
 18692                           
 18693                           ; BSR set to: 0
 18694  006A4C  0E3A               	movlw	58
 18695  006A4E  617F               	cpfslt	isdigit@c& (0+255),b
 18696  006A50  D005               	goto	l3330
 18697                           
 18698                           ; BSR set to: 0
 18699  006A52  0E2F               	movlw	47
 18700  006A54  657F               	cpfsgt	isdigit@c& (0+255),b
 18701  006A56  D002               	goto	l3330
 18702                           
 18703                           ; BSR set to: 0
 18704  006A58  0E01               	movlw	1
 18705  006A5A  6F7E               	movwf	_isdigit$6506& (0+255),b
 18706  006A5C                     l3330:
 18707                           
 18708                           ; BSR set to: 0
 18709                           
 18710                           ; BSR set to: 0
 18711  006A5C  C07E  F07D         	movff	_isdigit$6506,??_isdigit
 18712  006A60  317D               	rrcf	??_isdigit& (0+255),w,b
 18713  006A62  0012               	return	
 18714  006A64                     __end_of_isdigit:
 18715                           	opt stack 0
 18716                           tosu	equ	0xFFF
 18717                           tosh	equ	0xFFE
 18718                           tosl	equ	0xFFD
 18719                           pclath	equ	0xFFA
 18720                           tblptru	equ	0xFF8
 18721                           tblptrh	equ	0xFF7
 18722                           tblptrl	equ	0xFF6
 18723                           tablat	equ	0xFF5
 18724                           prodh	equ	0xFF4
 18725                           prodl	equ	0xFF3
 18726                           intcon	equ	0xFF2
 18727                           intcon2	equ	0xFF1
 18728                           intcon3	equ	0xFF0
 18729                           indf0	equ	0xFEF
 18730                           postinc0	equ	0xFEE
 18731                           plusw0	equ	0xFEB
 18732                           fsr0h	equ	0xFEA
 18733                           fsr0l	equ	0xFE9
 18734                           wreg	equ	0xFE8
 18735                           indf1	equ	0xFE7
 18736                           postinc1	equ	0xFE6
 18737                           postdec1	equ	0xFE5
 18738                           fsr1h	equ	0xFE2
 18739                           fsr1l	equ	0xFE1
 18740                           indf2	equ	0xFDF
 18741                           postinc2	equ	0xFDE
 18742                           postdec2	equ	0xFDD
 18743                           plusw2	equ	0xFDB
 18744                           fsr2h	equ	0xFDA
 18745                           fsr2l	equ	0xFD9
 18746                           status	equ	0xFD8
 18747                           
 18748 ;; *************** function _Rtcm_SetRtccDate *****************
 18749 ;; Defined at:
 18750 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18751 ;; Parameters:    Size  Location     Type
 18752 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18753 ;; Auto vars:     Size  Location     Type
 18754 ;;		None
 18755 ;; Return value:  Size  Location     Type
 18756 ;;                  1    wreg      void 
 18757 ;; Registers used:
 18758 ;;		wreg, status,2, status,0, cstack
 18759 ;; Tracked objects:
 18760 ;;		On entry : 0/0
 18761 ;;		On exit  : 0/0
 18762 ;;		Unchanged: 0/0
 18763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18764 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18767 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18768 ;;Total ram usage:        8 bytes
 18769 ;; Hardware stack levels used:    1
 18770 ;; Hardware stack levels required when called:   13
 18771 ;; This function calls:
 18772 ;;		_Rtcc_LockRtc
 18773 ;;		_Rtcc_SetRtccValue
 18774 ;;		_Rtcc_UnlockRtc
 18775 ;; This function is called by:
 18776 ;;		_Rtcm_MainTask
 18777 ;; This function uses a non-reentrant model
 18778 ;;
 18779                           
 18780                           	psect	text78
 18781  005D14                     __ptext78:
 18782                           	opt stack 0
 18783  005D14                     _Rtcm_SetRtccDate:
 18784                           	opt stack 14
 18785                           
 18786                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18787                           
 18788                           ; BSR set to: 0
 18789                           ;incstack = 0
 18790  005D14  EC65  F036         	call	_Rtcc_UnlockRtc	;wreg free
 18791                           
 18792                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18793  005D18  0100               	movlb	0	; () banked
 18794  005D1A  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18795  005D1C  0F30               	addlw	48
 18796  005D1E  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18797  005D20  0E00               	movlw	0
 18798  005D22  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18799                           
 18800                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18801  005D26  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18802  005D2A  0E01               	movlw	1
 18803  005D2C  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18804                           
 18805                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18806  005D30  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18807  005D34  0E02               	movlw	2
 18808  005D36  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18809                           
 18810                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18811  005D3A  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18812  005D3E  0E03               	movlw	3
 18813  005D40  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18814                           
 18815                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18816  005D44  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18817  005D48  0E04               	movlw	4
 18818  005D4A  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18819                           
 18820                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18821  005D4E  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18822  005D52  0E05               	movlw	5
 18823  005D54  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18824                           
 18825                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18826  005D58  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18827  005D5C  0E06               	movlw	6
 18828  005D5E  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18829                           
 18830                           ;rtcm.c: 191: Rtcc_LockRtc();
 18831  005D62  EC6D  F036         	call	_Rtcc_LockRtc	;wreg free
 18832  005D66  0012               	return		;funcret
 18833  005D68                     __end_of_Rtcm_SetRtccDate:
 18834                           	opt stack 0
 18835                           tosu	equ	0xFFF
 18836                           tosh	equ	0xFFE
 18837                           tosl	equ	0xFFD
 18838                           pclath	equ	0xFFA
 18839                           tblptru	equ	0xFF8
 18840                           tblptrh	equ	0xFF7
 18841                           tblptrl	equ	0xFF6
 18842                           tablat	equ	0xFF5
 18843                           prodh	equ	0xFF4
 18844                           prodl	equ	0xFF3
 18845                           intcon	equ	0xFF2
 18846                           intcon2	equ	0xFF1
 18847                           intcon3	equ	0xFF0
 18848                           indf0	equ	0xFEF
 18849                           postinc0	equ	0xFEE
 18850                           plusw0	equ	0xFEB
 18851                           fsr0h	equ	0xFEA
 18852                           fsr0l	equ	0xFE9
 18853                           wreg	equ	0xFE8
 18854                           indf1	equ	0xFE7
 18855                           postinc1	equ	0xFE6
 18856                           postdec1	equ	0xFE5
 18857                           fsr1h	equ	0xFE2
 18858                           fsr1l	equ	0xFE1
 18859                           indf2	equ	0xFDF
 18860                           postinc2	equ	0xFDE
 18861                           postdec2	equ	0xFDD
 18862                           plusw2	equ	0xFDB
 18863                           fsr2h	equ	0xFDA
 18864                           fsr2l	equ	0xFD9
 18865                           status	equ	0xFD8
 18866                           
 18867 ;; *************** function _Rtcc_UnlockRtc *****************
 18868 ;; Defined at:
 18869 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18870 ;; Parameters:    Size  Location     Type
 18871 ;;		None
 18872 ;; Auto vars:     Size  Location     Type
 18873 ;;		None
 18874 ;; Return value:  Size  Location     Type
 18875 ;;                  1    wreg      void 
 18876 ;; Registers used:
 18877 ;;		None
 18878 ;; Tracked objects:
 18879 ;;		On entry : 0/0
 18880 ;;		On exit  : 0/0
 18881 ;;		Unchanged: 0/0
 18882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18887 ;;Total ram usage:        0 bytes
 18888 ;; Hardware stack levels used:    1
 18889 ;; Hardware stack levels required when called:   11
 18890 ;; This function calls:
 18891 ;;		Nothing
 18892 ;; This function is called by:
 18893 ;;		_Rtcm_MainTask
 18894 ;;		_Rtcm_SetRtccDate
 18895 ;;		_Rtcm_SetRtccAlarm
 18896 ;; This function uses a non-reentrant model
 18897 ;;
 18898                           
 18899                           	psect	text79
 18900  006CCA                     __ptext79:
 18901                           	opt stack 0
 18902  006CCA                     _Rtcc_UnlockRtc:
 18903                           	opt stack 15
 18904                           
 18905                           ;incstack = 0
 18906  006CCA  010F               	movlb	15	;# 
 18907  006CCC  0E55               	movlw	85	;# 
 18908  006CCE  6EA7               	movwf	4007,c	;# 
 18909  006CD0  0EAA               	movlw	170	;# 
 18910  006CD2  6EA7               	movwf	4007,c	;# 
 18911                           
 18912                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18913  006CD4  010F               	movlb	15	; () banked
 18914  006CD6  8B3F               	bsf	63,5,b	;volatile
 18915                           
 18916                           ; BSR set to: 15
 18917  006CD8  0012               	return		;funcret
 18918  006CDA                     __end_of_Rtcc_UnlockRtc:
 18919                           	opt stack 0
 18920                           tosu	equ	0xFFF
 18921                           tosh	equ	0xFFE
 18922                           tosl	equ	0xFFD
 18923                           pclath	equ	0xFFA
 18924                           tblptru	equ	0xFF8
 18925                           tblptrh	equ	0xFF7
 18926                           tblptrl	equ	0xFF6
 18927                           tablat	equ	0xFF5
 18928                           prodh	equ	0xFF4
 18929                           prodl	equ	0xFF3
 18930                           intcon	equ	0xFF2
 18931                           intcon2	equ	0xFF1
 18932                           intcon3	equ	0xFF0
 18933                           indf0	equ	0xFEF
 18934                           postinc0	equ	0xFEE
 18935                           plusw0	equ	0xFEB
 18936                           fsr0h	equ	0xFEA
 18937                           fsr0l	equ	0xFE9
 18938                           wreg	equ	0xFE8
 18939                           indf1	equ	0xFE7
 18940                           postinc1	equ	0xFE6
 18941                           postdec1	equ	0xFE5
 18942                           fsr1h	equ	0xFE2
 18943                           fsr1l	equ	0xFE1
 18944                           indf2	equ	0xFDF
 18945                           postinc2	equ	0xFDE
 18946                           postdec2	equ	0xFDD
 18947                           plusw2	equ	0xFDB
 18948                           fsr2h	equ	0xFDA
 18949                           fsr2l	equ	0xFD9
 18950                           status	equ	0xFD8
 18951                           
 18952 ;; *************** function _Rtcc_SetRtccValue *****************
 18953 ;; Defined at:
 18954 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18955 ;; Parameters:    Size  Location     Type
 18956 ;;  RtccPtrVal      1    wreg     enum E7757
 18957 ;;  Value           1   37[BANK0 ] unsigned char 
 18958 ;; Auto vars:     Size  Location     Type
 18959 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18960 ;; Return value:  Size  Location     Type
 18961 ;;                  1    wreg      void 
 18962 ;; Registers used:
 18963 ;;		wreg, status,2, status,0, cstack
 18964 ;; Tracked objects:
 18965 ;;		On entry : 0/0
 18966 ;;		On exit  : 0/0
 18967 ;;		Unchanged: 0/0
 18968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18969 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18970 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18971 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18972 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18973 ;;Total ram usage:        4 bytes
 18974 ;; Hardware stack levels used:    1
 18975 ;; Hardware stack levels required when called:   12
 18976 ;; This function calls:
 18977 ;;		___awdiv
 18978 ;;		___awmod
 18979 ;; This function is called by:
 18980 ;;		_Rtcm_SetRtccDate
 18981 ;; This function uses a non-reentrant model
 18982 ;;
 18983                           
 18984                           	psect	text80
 18985  0015F4                     __ptext80:
 18986                           	opt stack 0
 18987  0015F4                     _Rtcc_SetRtccValue:
 18988                           	opt stack 14
 18989                           
 18990                           ; BSR set to: 15
 18991                           ;incstack = 0
 18992                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18993  0015F4  0100               	movlb	0	; () banked
 18994  0015F6  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18995                           
 18996                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18997  0015F8  D0FC               	goto	l441
 18998  0015FA                     l442:
 18999                           
 19000                           ; BSR set to: 0
 19001                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 19002  0015FA  010F               	movlb	15	; () banked
 19003  0015FC  833F               	bsf	63,1,b	;volatile
 19004                           
 19005                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 19006  0015FE  813F               	bsf	63,0,b	;volatile
 19007                           
 19008                           ; BSR set to: 15
 19009                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19010  001600  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19011  001604  0100               	movlb	0	; () banked
 19012  001606  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19013  001608  0E00               	movlw	0
 19014  00160A  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19015  00160C  0E0A               	movlw	10
 19016  00160E  6F7F               	movwf	___awmod@divisor& (0+255),b
 19017  001610  ECE6  F02A         	call	___awmod	;wreg free
 19018  001614  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19019  001618  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19020  00161C  0E0F               	movlw	15
 19021  00161E  0100               	movlb	0	; () banked
 19022  001620  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19023  001622  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19024  001626  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19025  001628  0E00               	movlw	0
 19026  00162A  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19027  00162C  0E0A               	movlw	10
 19028  00162E  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19029  001630  ECA7  F029         	call	___awdiv	;wreg free
 19030  001634  0100               	movlb	0	; () banked
 19031  001636  397D               	swapf	?___awdiv& (0+255),w,b
 19032  001638  0BF0               	andlw	240
 19033  00163A  0BF0               	andlw	240
 19034  00163C  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19035  00163E  6E98               	movwf	3992,c	;volatile
 19036                           
 19037                           ;rtcc_drv.c: 393: break;
 19038  001640  0012               	return	
 19039  001642                     l444:
 19040                           
 19041                           ; BSR set to: 0
 19042                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19043  001642  010F               	movlb	15	; () banked
 19044  001644  833F               	bsf	63,1,b	;volatile
 19045                           
 19046                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19047  001646  913F               	bcf	63,0,b	;volatile
 19048                           
 19049                           ; BSR set to: 15
 19050                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19051  001648  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19052  00164C  0100               	movlb	0	; () banked
 19053  00164E  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19054  001650  0E00               	movlw	0
 19055  001652  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19056  001654  0E0A               	movlw	10
 19057  001656  6F7F               	movwf	___awmod@divisor& (0+255),b
 19058  001658  ECE6  F02A         	call	___awmod	;wreg free
 19059  00165C  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19060  001660  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19061  001664  0E0F               	movlw	15
 19062  001666  0100               	movlb	0	; () banked
 19063  001668  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19064  00166A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19065  00166E  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19066  001670  0E00               	movlw	0
 19067  001672  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19068  001674  0E0A               	movlw	10
 19069  001676  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19070  001678  ECA7  F029         	call	___awdiv	;wreg free
 19071  00167C  0100               	movlb	0	; () banked
 19072  00167E  397D               	swapf	?___awdiv& (0+255),w,b
 19073  001680  0BF0               	andlw	240
 19074  001682  0BF0               	andlw	240
 19075  001684  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19076  001686  6E99               	movwf	3993,c	;volatile
 19077                           
 19078                           ;rtcc_drv.c: 401: break;
 19079  001688  0012               	return	
 19080  00168A                     l445:
 19081                           
 19082                           ; BSR set to: 0
 19083                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19084  00168A  010F               	movlb	15	; () banked
 19085  00168C  833F               	bsf	63,1,b	;volatile
 19086                           
 19087                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19088  00168E  913F               	bcf	63,0,b	;volatile
 19089                           
 19090                           ; BSR set to: 15
 19091                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19092  001690  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19093  001694  0100               	movlb	0	; () banked
 19094  001696  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19095  001698  0E00               	movlw	0
 19096  00169A  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19097  00169C  0E0A               	movlw	10
 19098  00169E  6F7F               	movwf	___awmod@divisor& (0+255),b
 19099  0016A0  ECE6  F02A         	call	___awmod	;wreg free
 19100  0016A4  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19101  0016A8  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19102  0016AC  0E0F               	movlw	15
 19103  0016AE  0100               	movlb	0	; () banked
 19104  0016B0  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19105  0016B2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19106  0016B6  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19107  0016B8  0E00               	movlw	0
 19108  0016BA  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19109  0016BC  0E0A               	movlw	10
 19110  0016BE  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19111  0016C0  ECA7  F029         	call	___awdiv	;wreg free
 19112  0016C4  0100               	movlb	0	; () banked
 19113  0016C6  397D               	swapf	?___awdiv& (0+255),w,b
 19114  0016C8  0BF0               	andlw	240
 19115  0016CA  0BF0               	andlw	240
 19116  0016CC  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19117  0016CE  6E98               	movwf	3992,c	;volatile
 19118                           
 19119                           ;rtcc_drv.c: 409: break;
 19120  0016D0  0012               	return	
 19121  0016D2                     l446:
 19122                           
 19123                           ; BSR set to: 0
 19124                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19125  0016D2  010F               	movlb	15	; () banked
 19126  0016D4  933F               	bcf	63,1,b	;volatile
 19127                           
 19128                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19129  0016D6  813F               	bsf	63,0,b	;volatile
 19130                           
 19131                           ; BSR set to: 15
 19132                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19133  0016D8  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19134  0016DC  0100               	movlb	0	; () banked
 19135  0016DE  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19136  0016E0  0E00               	movlw	0
 19137  0016E2  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19138  0016E4  0E0A               	movlw	10
 19139  0016E6  6F7F               	movwf	___awmod@divisor& (0+255),b
 19140  0016E8  ECE6  F02A         	call	___awmod	;wreg free
 19141  0016EC  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19142  0016F0  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19143  0016F4  0E0F               	movlw	15
 19144  0016F6  0100               	movlb	0	; () banked
 19145  0016F8  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19146  0016FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19147  0016FE  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19148  001700  0E00               	movlw	0
 19149  001702  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19150  001704  0E0A               	movlw	10
 19151  001706  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19152  001708  ECA7  F029         	call	___awdiv	;wreg free
 19153  00170C  0100               	movlb	0	; () banked
 19154  00170E  397D               	swapf	?___awdiv& (0+255),w,b
 19155  001710  0BF0               	andlw	240
 19156  001712  0BF0               	andlw	240
 19157  001714  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19158  001716  6E99               	movwf	3993,c	;volatile
 19159                           
 19160                           ;rtcc_drv.c: 417: break;
 19161  001718  0012               	return	
 19162  00171A                     l447:
 19163                           
 19164                           ; BSR set to: 0
 19165                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19166  00171A  010F               	movlb	15	; () banked
 19167  00171C  933F               	bcf	63,1,b	;volatile
 19168                           
 19169                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19170  00171E  813F               	bsf	63,0,b	;volatile
 19171                           
 19172                           ; BSR set to: 15
 19173                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19174  001720  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19175  001724  0100               	movlb	0	; () banked
 19176  001726  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19177  001728  0E00               	movlw	0
 19178  00172A  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19179  00172C  0E0A               	movlw	10
 19180  00172E  6F7F               	movwf	___awmod@divisor& (0+255),b
 19181  001730  ECE6  F02A         	call	___awmod	;wreg free
 19182  001734  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19183  001738  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19184  00173C  0E0F               	movlw	15
 19185  00173E  0100               	movlb	0	; () banked
 19186  001740  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19187  001742  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19188  001746  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19189  001748  0E00               	movlw	0
 19190  00174A  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19191  00174C  0E0A               	movlw	10
 19192  00174E  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19193  001750  ECA7  F029         	call	___awdiv	;wreg free
 19194  001754  0100               	movlb	0	; () banked
 19195  001756  397D               	swapf	?___awdiv& (0+255),w,b
 19196  001758  0BF0               	andlw	240
 19197  00175A  0BF0               	andlw	240
 19198  00175C  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19199  00175E  6E98               	movwf	3992,c	;volatile
 19200                           
 19201                           ;rtcc_drv.c: 425: break;
 19202  001760  0012               	return	
 19203  001762                     l448:
 19204                           
 19205                           ; BSR set to: 0
 19206                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19207  001762  010F               	movlb	15	; () banked
 19208  001764  933F               	bcf	63,1,b	;volatile
 19209                           
 19210                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19211  001766  913F               	bcf	63,0,b	;volatile
 19212                           
 19213                           ; BSR set to: 15
 19214                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19215  001768  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19216  00176C  0100               	movlb	0	; () banked
 19217  00176E  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19218  001770  0E00               	movlw	0
 19219  001772  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19220  001774  0E0A               	movlw	10
 19221  001776  6F7F               	movwf	___awmod@divisor& (0+255),b
 19222  001778  ECE6  F02A         	call	___awmod	;wreg free
 19223  00177C  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19224  001780  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19225  001784  0E0F               	movlw	15
 19226  001786  0100               	movlb	0	; () banked
 19227  001788  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19228  00178A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19229  00178E  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19230  001790  0E00               	movlw	0
 19231  001792  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19232  001794  0E0A               	movlw	10
 19233  001796  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19234  001798  ECA7  F029         	call	___awdiv	;wreg free
 19235  00179C  0100               	movlb	0	; () banked
 19236  00179E  397D               	swapf	?___awdiv& (0+255),w,b
 19237  0017A0  0BF0               	andlw	240
 19238  0017A2  0BF0               	andlw	240
 19239  0017A4  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19240  0017A6  6E99               	movwf	3993,c	;volatile
 19241                           
 19242                           ;rtcc_drv.c: 433: break;
 19243  0017A8  0012               	return	
 19244  0017AA                     l449:
 19245                           
 19246                           ; BSR set to: 0
 19247                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19248  0017AA  010F               	movlb	15	; () banked
 19249  0017AC  933F               	bcf	63,1,b	;volatile
 19250                           
 19251                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19252  0017AE  913F               	bcf	63,0,b	;volatile
 19253                           
 19254                           ; BSR set to: 15
 19255                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19256  0017B0  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19257  0017B4  0100               	movlb	0	; () banked
 19258  0017B6  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19259  0017B8  0E00               	movlw	0
 19260  0017BA  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19261  0017BC  0E0A               	movlw	10
 19262  0017BE  6F7F               	movwf	___awmod@divisor& (0+255),b
 19263  0017C0  ECE6  F02A         	call	___awmod	;wreg free
 19264  0017C4  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19265  0017C8  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19266  0017CC  0E0F               	movlw	15
 19267  0017CE  0100               	movlb	0	; () banked
 19268  0017D0  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19269  0017D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19270  0017D6  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19271  0017D8  0E00               	movlw	0
 19272  0017DA  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19273  0017DC  0E0A               	movlw	10
 19274  0017DE  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19275  0017E0  ECA7  F029         	call	___awdiv	;wreg free
 19276  0017E4  0100               	movlb	0	; () banked
 19277  0017E6  397D               	swapf	?___awdiv& (0+255),w,b
 19278  0017E8  0BF0               	andlw	240
 19279  0017EA  0BF0               	andlw	240
 19280  0017EC  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19281  0017EE  6E98               	movwf	3992,c	;volatile
 19282                           
 19283                           ; BSR set to: 0
 19284                           ;rtcc_drv.c: 445: }
 19285                           
 19286                           ; BSR set to: 0
 19287                           ;rtcc_drv.c: 444: break;
 19288                           
 19289                           ;rtcc_drv.c: 443: default:
 19290                           
 19291                           ;rtcc_drv.c: 441: break;
 19292  0017F0  0012               	return	
 19293  0017F2                     l441:
 19294                           
 19295                           ; BSR set to: 0
 19296  0017F2  0100               	movlb	0	; () banked
 19297  0017F4  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19298                           
 19299                           ; Switch size 1, requested type "space"
 19300                           ; Number of cases is 7, Range of values is 0 to 6
 19301                           ; switch strategies available:
 19302                           ; Name         Instructions Cycles
 19303                           ; simple_byte           22    12 (average)
 19304                           ;	Chosen strategy is simple_byte
 19305  0017F6  0A00               	xorlw	0	; case 0
 19306  0017F8  B4D8               	btfsc	status,2,c
 19307  0017FA  D6FF               	goto	l442
 19308  0017FC  0A01               	xorlw	1	; case 1
 19309  0017FE  B4D8               	btfsc	status,2,c
 19310  001800  D720               	goto	l444
 19311  001802  0A03               	xorlw	3	; case 2
 19312  001804  B4D8               	btfsc	status,2,c
 19313  001806  D741               	goto	l445
 19314  001808  0A01               	xorlw	1	; case 3
 19315  00180A  B4D8               	btfsc	status,2,c
 19316  00180C  D762               	goto	l446
 19317  00180E  0A07               	xorlw	7	; case 4
 19318  001810  B4D8               	btfsc	status,2,c
 19319  001812  D783               	goto	l447
 19320  001814  0A01               	xorlw	1	; case 5
 19321  001816  B4D8               	btfsc	status,2,c
 19322  001818  D7A4               	goto	l448
 19323  00181A  0A03               	xorlw	3	; case 6
 19324  00181C  A4D8               	btfss	status,2,c
 19325  00181E  0012               	return	
 19326  001820  D7C4               	goto	l449
 19327  001822                     __end_of_Rtcc_SetRtccValue:
 19328                           	opt stack 0
 19329                           tosu	equ	0xFFF
 19330                           tosh	equ	0xFFE
 19331                           tosl	equ	0xFFD
 19332                           pclath	equ	0xFFA
 19333                           tblptru	equ	0xFF8
 19334                           tblptrh	equ	0xFF7
 19335                           tblptrl	equ	0xFF6
 19336                           tablat	equ	0xFF5
 19337                           prodh	equ	0xFF4
 19338                           prodl	equ	0xFF3
 19339                           intcon	equ	0xFF2
 19340                           intcon2	equ	0xFF1
 19341                           intcon3	equ	0xFF0
 19342                           indf0	equ	0xFEF
 19343                           postinc0	equ	0xFEE
 19344                           plusw0	equ	0xFEB
 19345                           fsr0h	equ	0xFEA
 19346                           fsr0l	equ	0xFE9
 19347                           wreg	equ	0xFE8
 19348                           indf1	equ	0xFE7
 19349                           postinc1	equ	0xFE6
 19350                           postdec1	equ	0xFE5
 19351                           fsr1h	equ	0xFE2
 19352                           fsr1l	equ	0xFE1
 19353                           indf2	equ	0xFDF
 19354                           postinc2	equ	0xFDE
 19355                           postdec2	equ	0xFDD
 19356                           plusw2	equ	0xFDB
 19357                           fsr2h	equ	0xFDA
 19358                           fsr2l	equ	0xFD9
 19359                           status	equ	0xFD8
 19360                           
 19361 ;; *************** function ___awmod *****************
 19362 ;; Defined at:
 19363 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19364 ;; Parameters:    Size  Location     Type
 19365 ;;  dividend        2   29[BANK0 ] int 
 19366 ;;  divisor         2   31[BANK0 ] int 
 19367 ;; Auto vars:     Size  Location     Type
 19368 ;;  sign            1   34[BANK0 ] unsigned char 
 19369 ;;  counter         1   33[BANK0 ] unsigned char 
 19370 ;; Return value:  Size  Location     Type
 19371 ;;                  2   29[BANK0 ] int 
 19372 ;; Registers used:
 19373 ;;		wreg, status,2, status,0
 19374 ;; Tracked objects:
 19375 ;;		On entry : 0/0
 19376 ;;		On exit  : 0/0
 19377 ;;		Unchanged: 0/0
 19378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19379 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19380 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19382 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19383 ;;Total ram usage:        6 bytes
 19384 ;; Hardware stack levels used:    1
 19385 ;; Hardware stack levels required when called:   11
 19386 ;; This function calls:
 19387 ;;		Nothing
 19388 ;; This function is called by:
 19389 ;;		_Rtcc_SetRtccValue
 19390 ;;		_Rtcc_SetRtccAlarm
 19391 ;; This function uses a non-reentrant model
 19392 ;;
 19393                           
 19394                           	psect	text81
 19395  0055CC                     __ptext81:
 19396                           	opt stack 0
 19397  0055CC                     ___awmod:
 19398                           	opt stack 14
 19399                           
 19400                           ; BSR set to: 0
 19401                           ;incstack = 0
 19402  0055CC  0E00               	movlw	0
 19403  0055CE  0100               	movlb	0	; () banked
 19404  0055D0  6F82               	movwf	___awmod@sign& (0+255),b
 19405                           
 19406                           ; BSR set to: 0
 19407  0055D2  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19408  0055D4  D006               	goto	l3181
 19409                           
 19410                           ; BSR set to: 0
 19411  0055D6  6D7D               	negf	___awmod@dividend& (0+255),b
 19412  0055D8  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19413  0055DA  B0D8               	btfsc	status,0,c
 19414  0055DC  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19415                           
 19416                           ; BSR set to: 0
 19417  0055DE  0E01               	movlw	1
 19418  0055E0  6F82               	movwf	___awmod@sign& (0+255),b
 19419  0055E2                     l3181:
 19420                           
 19421                           ; BSR set to: 0
 19422                           
 19423                           ; BSR set to: 0
 19424  0055E2  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19425  0055E4  D004               	goto	l3182
 19426                           
 19427                           ; BSR set to: 0
 19428  0055E6  6D7F               	negf	___awmod@divisor& (0+255),b
 19429  0055E8  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19430  0055EA  B0D8               	btfsc	status,0,c
 19431  0055EC  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19432  0055EE                     l3182:
 19433                           
 19434                           ; BSR set to: 0
 19435                           
 19436                           ; BSR set to: 0
 19437  0055EE  517F               	movf	___awmod@divisor& (0+255),w,b
 19438  0055F0  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19439  0055F2  B4D8               	btfsc	status,2,c
 19440  0055F4  D018               	goto	l3189
 19441                           
 19442                           ; BSR set to: 0
 19443  0055F6  0E01               	movlw	1
 19444  0055F8  6F81               	movwf	___awmod@counter& (0+255),b
 19445  0055FA  D004               	goto	l3184
 19446  0055FC                     
 19447                           ; BSR set to: 0
 19448                           
 19449                           ; BSR set to: 0
 19450  0055FC  90D8               	bcf	status,0,c
 19451  0055FE  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19452  005600  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19453  005602  2B81               	incf	___awmod@counter& (0+255),f,b
 19454  005604                     l3184:
 19455                           
 19456                           ; BSR set to: 0
 19457                           
 19458                           ; BSR set to: 0
 19459  005604  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19460  005606  D7FA               	goto	l3185
 19461  005608                     u13650:
 19462                           
 19463                           ; BSR set to: 0
 19464                           
 19465                           ; BSR set to: 0
 19466                           
 19467                           ; BSR set to: 0
 19468  005608  517F               	movf	___awmod@divisor& (0+255),w,b
 19469  00560A  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19470  00560C  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19471  00560E  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19472  005610  A0D8               	btfss	status,0,c
 19473  005612  D004               	goto	l3188
 19474                           
 19475                           ; BSR set to: 0
 19476  005614  517F               	movf	___awmod@divisor& (0+255),w,b
 19477  005616  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19478  005618  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19479  00561A  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19480  00561C                     l3188:
 19481                           
 19482                           ; BSR set to: 0
 19483                           
 19484                           ; BSR set to: 0
 19485  00561C  90D8               	bcf	status,0,c
 19486  00561E  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19487  005620  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19488                           
 19489                           ; BSR set to: 0
 19490  005622  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19491  005624  D7F1               	goto	u13650
 19492  005626                     l3189:
 19493                           
 19494                           ; BSR set to: 0
 19495                           
 19496                           ; BSR set to: 0
 19497                           
 19498                           ; BSR set to: 0
 19499  005626  5182               	movf	___awmod@sign& (0+255),w,b
 19500  005628  B4D8               	btfsc	status,2,c
 19501  00562A  D004               	goto	l3190
 19502                           
 19503                           ; BSR set to: 0
 19504  00562C  6D7D               	negf	___awmod@dividend& (0+255),b
 19505  00562E  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19506  005630  B0D8               	btfsc	status,0,c
 19507  005632  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19508  005634                     l3190:
 19509                           
 19510                           ; BSR set to: 0
 19511                           
 19512                           ; BSR set to: 0
 19513  005634  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19514  005638  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19515  00563C  0012               	return	
 19516  00563E                     __end_of___awmod:
 19517                           	opt stack 0
 19518                           tosu	equ	0xFFF
 19519                           tosh	equ	0xFFE
 19520                           tosl	equ	0xFFD
 19521                           pclath	equ	0xFFA
 19522                           tblptru	equ	0xFF8
 19523                           tblptrh	equ	0xFF7
 19524                           tblptrl	equ	0xFF6
 19525                           tablat	equ	0xFF5
 19526                           prodh	equ	0xFF4
 19527                           prodl	equ	0xFF3
 19528                           intcon	equ	0xFF2
 19529                           intcon2	equ	0xFF1
 19530                           intcon3	equ	0xFF0
 19531                           indf0	equ	0xFEF
 19532                           postinc0	equ	0xFEE
 19533                           plusw0	equ	0xFEB
 19534                           fsr0h	equ	0xFEA
 19535                           fsr0l	equ	0xFE9
 19536                           wreg	equ	0xFE8
 19537                           indf1	equ	0xFE7
 19538                           postinc1	equ	0xFE6
 19539                           postdec1	equ	0xFE5
 19540                           fsr1h	equ	0xFE2
 19541                           fsr1l	equ	0xFE1
 19542                           indf2	equ	0xFDF
 19543                           postinc2	equ	0xFDE
 19544                           postdec2	equ	0xFDD
 19545                           plusw2	equ	0xFDB
 19546                           fsr2h	equ	0xFDA
 19547                           fsr2l	equ	0xFD9
 19548                           status	equ	0xFD8
 19549                           
 19550 ;; *************** function ___awdiv *****************
 19551 ;; Defined at:
 19552 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19553 ;; Parameters:    Size  Location     Type
 19554 ;;  dividend        2   29[BANK0 ] int 
 19555 ;;  divisor         2   31[BANK0 ] int 
 19556 ;; Auto vars:     Size  Location     Type
 19557 ;;  quotient        2   35[BANK0 ] int 
 19558 ;;  sign            1   34[BANK0 ] unsigned char 
 19559 ;;  counter         1   33[BANK0 ] unsigned char 
 19560 ;; Return value:  Size  Location     Type
 19561 ;;                  2   29[BANK0 ] int 
 19562 ;; Registers used:
 19563 ;;		wreg, status,2, status,0
 19564 ;; Tracked objects:
 19565 ;;		On entry : 0/0
 19566 ;;		On exit  : 0/0
 19567 ;;		Unchanged: 0/0
 19568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19569 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19570 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19572 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19573 ;;Total ram usage:        8 bytes
 19574 ;; Hardware stack levels used:    1
 19575 ;; Hardware stack levels required when called:   11
 19576 ;; This function calls:
 19577 ;;		Nothing
 19578 ;; This function is called by:
 19579 ;;		_Rtcc_SetRtccValue
 19580 ;;		_Rtcc_SetRtccAlarm
 19581 ;; This function uses a non-reentrant model
 19582 ;;
 19583                           
 19584                           	psect	text82
 19585  00534E                     __ptext82:
 19586                           	opt stack 0
 19587  00534E                     ___awdiv:
 19588                           	opt stack 14
 19589                           
 19590                           ; BSR set to: 0
 19591                           ;incstack = 0
 19592  00534E  0E00               	movlw	0
 19593  005350  0100               	movlb	0	; () banked
 19594  005352  6F82               	movwf	___awdiv@sign& (0+255),b
 19595                           
 19596                           ; BSR set to: 0
 19597  005354  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19598  005356  D006               	goto	l3168
 19599                           
 19600                           ; BSR set to: 0
 19601  005358  6D7F               	negf	___awdiv@divisor& (0+255),b
 19602  00535A  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19603  00535C  B0D8               	btfsc	status,0,c
 19604  00535E  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19605                           
 19606                           ; BSR set to: 0
 19607  005360  0E01               	movlw	1
 19608  005362  6F82               	movwf	___awdiv@sign& (0+255),b
 19609  005364                     l3168:
 19610                           
 19611                           ; BSR set to: 0
 19612                           
 19613                           ; BSR set to: 0
 19614  005364  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19615  005366  D006               	goto	l3169
 19616                           
 19617                           ; BSR set to: 0
 19618  005368  6D7D               	negf	___awdiv@dividend& (0+255),b
 19619  00536A  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19620  00536C  B0D8               	btfsc	status,0,c
 19621  00536E  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19622                           
 19623                           ; BSR set to: 0
 19624  005370  0E01               	movlw	1
 19625  005372  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19626  005374                     l3169:
 19627                           
 19628                           ; BSR set to: 0
 19629                           
 19630                           ; BSR set to: 0
 19631  005374  0E00               	movlw	0
 19632  005376  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19633  005378  0E00               	movlw	0
 19634  00537A  6F83               	movwf	___awdiv@quotient& (0+255),b
 19635                           
 19636                           ; BSR set to: 0
 19637  00537C  517F               	movf	___awdiv@divisor& (0+255),w,b
 19638  00537E  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19639  005380  B4D8               	btfsc	status,2,c
 19640  005382  D01C               	goto	l3176
 19641                           
 19642                           ; BSR set to: 0
 19643  005384  0E01               	movlw	1
 19644  005386  6F81               	movwf	___awdiv@counter& (0+255),b
 19645  005388  D004               	goto	l3171
 19646  00538A                     
 19647                           ; BSR set to: 0
 19648                           
 19649                           ; BSR set to: 0
 19650  00538A  90D8               	bcf	status,0,c
 19651  00538C  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19652  00538E  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19653  005390  2B81               	incf	___awdiv@counter& (0+255),f,b
 19654  005392                     l3171:
 19655                           
 19656                           ; BSR set to: 0
 19657                           
 19658                           ; BSR set to: 0
 19659  005392  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19660  005394  D7FA               	goto	l3172
 19661  005396                     u13590:
 19662                           
 19663                           ; BSR set to: 0
 19664                           
 19665                           ; BSR set to: 0
 19666                           
 19667                           ; BSR set to: 0
 19668  005396  90D8               	bcf	status,0,c
 19669  005398  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19670  00539A  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19671                           
 19672                           ; BSR set to: 0
 19673  00539C  517F               	movf	___awdiv@divisor& (0+255),w,b
 19674  00539E  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19675  0053A0  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19676  0053A2  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19677  0053A4  A0D8               	btfss	status,0,c
 19678  0053A6  D005               	goto	l3175
 19679                           
 19680                           ; BSR set to: 0
 19681  0053A8  517F               	movf	___awdiv@divisor& (0+255),w,b
 19682  0053AA  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19683  0053AC  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19684  0053AE  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19685                           
 19686                           ; BSR set to: 0
 19687  0053B0  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19688  0053B2                     l3175:
 19689                           
 19690                           ; BSR set to: 0
 19691                           
 19692                           ; BSR set to: 0
 19693  0053B2  90D8               	bcf	status,0,c
 19694  0053B4  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19695  0053B6  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19696                           
 19697                           ; BSR set to: 0
 19698  0053B8  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19699  0053BA  D7ED               	goto	u13590
 19700  0053BC                     l3176:
 19701                           
 19702                           ; BSR set to: 0
 19703                           
 19704                           ; BSR set to: 0
 19705                           
 19706                           ; BSR set to: 0
 19707  0053BC  5182               	movf	___awdiv@sign& (0+255),w,b
 19708  0053BE  B4D8               	btfsc	status,2,c
 19709  0053C0  D004               	goto	l3177
 19710                           
 19711                           ; BSR set to: 0
 19712  0053C2  6D83               	negf	___awdiv@quotient& (0+255),b
 19713  0053C4  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19714  0053C6  B0D8               	btfsc	status,0,c
 19715  0053C8  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19716  0053CA                     l3177:
 19717                           
 19718                           ; BSR set to: 0
 19719                           
 19720                           ; BSR set to: 0
 19721  0053CA  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19722  0053CE  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19723  0053D2  0012               	return	
 19724  0053D4                     __end_of___awdiv:
 19725                           	opt stack 0
 19726                           tosu	equ	0xFFF
 19727                           tosh	equ	0xFFE
 19728                           tosl	equ	0xFFD
 19729                           pclath	equ	0xFFA
 19730                           tblptru	equ	0xFF8
 19731                           tblptrh	equ	0xFF7
 19732                           tblptrl	equ	0xFF6
 19733                           tablat	equ	0xFF5
 19734                           prodh	equ	0xFF4
 19735                           prodl	equ	0xFF3
 19736                           intcon	equ	0xFF2
 19737                           intcon2	equ	0xFF1
 19738                           intcon3	equ	0xFF0
 19739                           indf0	equ	0xFEF
 19740                           postinc0	equ	0xFEE
 19741                           plusw0	equ	0xFEB
 19742                           fsr0h	equ	0xFEA
 19743                           fsr0l	equ	0xFE9
 19744                           wreg	equ	0xFE8
 19745                           indf1	equ	0xFE7
 19746                           postinc1	equ	0xFE6
 19747                           postdec1	equ	0xFE5
 19748                           fsr1h	equ	0xFE2
 19749                           fsr1l	equ	0xFE1
 19750                           indf2	equ	0xFDF
 19751                           postinc2	equ	0xFDE
 19752                           postdec2	equ	0xFDD
 19753                           plusw2	equ	0xFDB
 19754                           fsr2h	equ	0xFDA
 19755                           fsr2l	equ	0xFD9
 19756                           status	equ	0xFD8
 19757                           
 19758 ;; *************** function _Rtcc_LockRtc *****************
 19759 ;; Defined at:
 19760 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19761 ;; Parameters:    Size  Location     Type
 19762 ;;		None
 19763 ;; Auto vars:     Size  Location     Type
 19764 ;;		None
 19765 ;; Return value:  Size  Location     Type
 19766 ;;                  1    wreg      void 
 19767 ;; Registers used:
 19768 ;;		None
 19769 ;; Tracked objects:
 19770 ;;		On entry : 0/0
 19771 ;;		On exit  : 0/0
 19772 ;;		Unchanged: 0/0
 19773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19778 ;;Total ram usage:        0 bytes
 19779 ;; Hardware stack levels used:    1
 19780 ;; Hardware stack levels required when called:   11
 19781 ;; This function calls:
 19782 ;;		Nothing
 19783 ;; This function is called by:
 19784 ;;		_Rtcm_MainTask
 19785 ;;		_Rtcm_SetRtccDate
 19786 ;;		_Rtcm_SetRtccAlarm
 19787 ;; This function uses a non-reentrant model
 19788 ;;
 19789                           
 19790                           	psect	text83
 19791  006CDA                     __ptext83:
 19792                           	opt stack 0
 19793  006CDA                     _Rtcc_LockRtc:
 19794                           	opt stack 15
 19795                           
 19796                           ; BSR set to: 0
 19797                           ;incstack = 0
 19798  006CDA  010F               	movlb	15	;# 
 19799  006CDC  0E55               	movlw	85	;# 
 19800  006CDE  6EA7               	movwf	4007,c	;# 
 19801  006CE0  0EAA               	movlw	170	;# 
 19802  006CE2  6EA7               	movwf	4007,c	;# 
 19803                           
 19804                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19805  006CE4  010F               	movlb	15	; () banked
 19806  006CE6  9B3F               	bcf	63,5,b	;volatile
 19807                           
 19808                           ; BSR set to: 15
 19809  006CE8  0012               	return		;funcret
 19810  006CEA                     __end_of_Rtcc_LockRtc:
 19811                           	opt stack 0
 19812                           tosu	equ	0xFFF
 19813                           tosh	equ	0xFFE
 19814                           tosl	equ	0xFFD
 19815                           pclath	equ	0xFFA
 19816                           tblptru	equ	0xFF8
 19817                           tblptrh	equ	0xFF7
 19818                           tblptrl	equ	0xFF6
 19819                           tablat	equ	0xFF5
 19820                           prodh	equ	0xFF4
 19821                           prodl	equ	0xFF3
 19822                           intcon	equ	0xFF2
 19823                           intcon2	equ	0xFF1
 19824                           intcon3	equ	0xFF0
 19825                           indf0	equ	0xFEF
 19826                           postinc0	equ	0xFEE
 19827                           plusw0	equ	0xFEB
 19828                           fsr0h	equ	0xFEA
 19829                           fsr0l	equ	0xFE9
 19830                           wreg	equ	0xFE8
 19831                           indf1	equ	0xFE7
 19832                           postinc1	equ	0xFE6
 19833                           postdec1	equ	0xFE5
 19834                           fsr1h	equ	0xFE2
 19835                           fsr1l	equ	0xFE1
 19836                           indf2	equ	0xFDF
 19837                           postinc2	equ	0xFDE
 19838                           postdec2	equ	0xFDD
 19839                           plusw2	equ	0xFDB
 19840                           fsr2h	equ	0xFDA
 19841                           fsr2l	equ	0xFD9
 19842                           status	equ	0xFD8
 19843                           
 19844 ;; *************** function _Rtcm_GetRtccDate *****************
 19845 ;; Defined at:
 19846 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19847 ;; Parameters:    Size  Location     Type
 19848 ;;		None
 19849 ;; Auto vars:     Size  Location     Type
 19850 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19851 ;; Return value:  Size  Location     Type
 19852 ;;                  8   33[BANK0 ] struct _RtccDateType
 19853 ;; Registers used:
 19854 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19855 ;; Tracked objects:
 19856 ;;		On entry : 0/0
 19857 ;;		On exit  : 0/0
 19858 ;;		Unchanged: 0/0
 19859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19860 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19861 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19862 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19863 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19864 ;;Total ram usage:       17 bytes
 19865 ;; Hardware stack levels used:    1
 19866 ;; Hardware stack levels required when called:   12
 19867 ;; This function calls:
 19868 ;;		_Rtcc_GetRtccValue
 19869 ;; This function is called by:
 19870 ;;		_Rtcm_MainTask
 19871 ;; This function uses a non-reentrant model
 19872 ;;
 19873                           
 19874                           	psect	text84
 19875  0058C4                     __ptext84:
 19876                           	opt stack 0
 19877  0058C4                     _Rtcm_GetRtccDate:
 19878                           	opt stack 15
 19879                           
 19880                           ;rtcm.c: 204: RtccDateType LocalDate;
 19881                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19882                           
 19883                           ; BSR set to: 15
 19884                           ;incstack = 0
 19885  0058C4  0E00               	movlw	0
 19886  0058C6  ECF6  F027         	call	_Rtcc_GetRtccValue
 19887  0058CA  0100               	movlb	0	; () banked
 19888  0058CC  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19889  0058CE  0ED0               	movlw	208
 19890  0058D0  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19891  0058D2  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19892  0058D4  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19893  0058D6  0E07               	movlw	7
 19894  0058D8  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19895                           
 19896                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19897  0058DA  0E01               	movlw	1
 19898  0058DC  ECF6  F027         	call	_Rtcc_GetRtccValue
 19899  0058E0  0100               	movlb	0	; () banked
 19900  0058E2  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19901                           
 19902                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19903  0058E4  0E02               	movlw	2
 19904  0058E6  ECF6  F027         	call	_Rtcc_GetRtccValue
 19905  0058EA  0100               	movlb	0	; () banked
 19906  0058EC  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19907                           
 19908                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19909  0058EE  0E03               	movlw	3
 19910  0058F0  ECF6  F027         	call	_Rtcc_GetRtccValue
 19911  0058F4  0100               	movlb	0	; () banked
 19912  0058F6  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19913                           
 19914                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19915  0058F8  0E04               	movlw	4
 19916  0058FA  ECF6  F027         	call	_Rtcc_GetRtccValue
 19917  0058FE  0100               	movlb	0	; () banked
 19918  005900  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19919                           
 19920                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19921  005902  0E05               	movlw	5
 19922  005904  ECF6  F027         	call	_Rtcc_GetRtccValue
 19923  005908  0100               	movlb	0	; () banked
 19924  00590A  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19925                           
 19926                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19927  00590C  0E06               	movlw	6
 19928  00590E  ECF6  F027         	call	_Rtcc_GetRtccValue
 19929  005912  0100               	movlb	0	; () banked
 19930  005914  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19931                           
 19932                           ; BSR set to: 0
 19933                           ;rtcm.c: 216: return LocalDate;
 19934  005916  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19935  00591A  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19936  00591E  0E07               	movlw	7
 19937  005920                     u16081:
 19938  005920  CFDB FFEB          	movff	plusw2,plusw0
 19939  005924  06E8               	decf	wreg,f,c
 19940  005926  E2FC               	bc	u16081
 19941  005928  0012               	return	
 19942  00592A                     __end_of_Rtcm_GetRtccDate:
 19943                           	opt stack 0
 19944                           tosu	equ	0xFFF
 19945                           tosh	equ	0xFFE
 19946                           tosl	equ	0xFFD
 19947                           pclath	equ	0xFFA
 19948                           tblptru	equ	0xFF8
 19949                           tblptrh	equ	0xFF7
 19950                           tblptrl	equ	0xFF6
 19951                           tablat	equ	0xFF5
 19952                           prodh	equ	0xFF4
 19953                           prodl	equ	0xFF3
 19954                           intcon	equ	0xFF2
 19955                           intcon2	equ	0xFF1
 19956                           intcon3	equ	0xFF0
 19957                           indf0	equ	0xFEF
 19958                           postinc0	equ	0xFEE
 19959                           plusw0	equ	0xFEB
 19960                           fsr0h	equ	0xFEA
 19961                           fsr0l	equ	0xFE9
 19962                           wreg	equ	0xFE8
 19963                           indf1	equ	0xFE7
 19964                           postinc1	equ	0xFE6
 19965                           postdec1	equ	0xFE5
 19966                           fsr1h	equ	0xFE2
 19967                           fsr1l	equ	0xFE1
 19968                           indf2	equ	0xFDF
 19969                           postinc2	equ	0xFDE
 19970                           postdec2	equ	0xFDD
 19971                           plusw2	equ	0xFDB
 19972                           fsr2h	equ	0xFDA
 19973                           fsr2l	equ	0xFD9
 19974                           status	equ	0xFD8
 19975                           
 19976 ;; *************** function _Rtcc_GetRtccValue *****************
 19977 ;; Defined at:
 19978 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19979 ;; Parameters:    Size  Location     Type
 19980 ;;  RtccPtrVal      1    wreg     enum E7757
 19981 ;; Auto vars:     Size  Location     Type
 19982 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19983 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19984 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19985 ;; Return value:  Size  Location     Type
 19986 ;;                  1    wreg      unsigned char 
 19987 ;; Registers used:
 19988 ;;		wreg, status,2, status,0, prodl, prodh
 19989 ;; Tracked objects:
 19990 ;;		On entry : 0/0
 19991 ;;		On exit  : 0/0
 19992 ;;		Unchanged: 0/0
 19993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19995 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19997 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19998 ;;Total ram usage:        4 bytes
 19999 ;; Hardware stack levels used:    1
 20000 ;; Hardware stack levels required when called:   11
 20001 ;; This function calls:
 20002 ;;		Nothing
 20003 ;; This function is called by:
 20004 ;;		_Rtcm_GetRtccDate
 20005 ;; This function uses a non-reentrant model
 20006 ;;
 20007                           
 20008                           	psect	text85
 20009  004FEC                     __ptext85:
 20010                           	opt stack 0
 20011  004FEC                     _Rtcc_GetRtccValue:
 20012                           	opt stack 15
 20013                           
 20014                           ; BSR set to: 0
 20015                           ;incstack = 0
 20016                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20017  004FEC  0100               	movlb	0	; () banked
 20018  004FEE  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20019                           
 20020                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20021                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20022                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20023  004FF0  D02D               	goto	l416
 20024  004FF2                     l417:
 20025                           
 20026                           ; BSR set to: 0
 20027                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20028  004FF2  010F               	movlb	15	; () banked
 20029  004FF4  833F               	bsf	63,1,b	;volatile
 20030  004FF6                     
 20031                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20032  004FF6  813F               	bsf	63,0,b	;volatile
 20033  004FF8  D01C               	goto	L18
 20034  004FFA                     l419:
 20035                           
 20036                           ; BSR set to: 0
 20037                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20038  004FFA  010F               	movlb	15	; () banked
 20039  004FFC  833F               	bsf	63,1,b	;volatile
 20040  004FFE  D01E               	goto	L19
 20041  005000                     l420:
 20042                           
 20043                           ; BSR set to: 0
 20044                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20045  005000  010F               	movlb	15	; () banked
 20046  005002  833F               	bsf	63,1,b	;volatile
 20047  005004  D021               	goto	L22
 20048  005006                     l14720:
 20049                           
 20050                           ; BSR set to: 15
 20051                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20052  005006  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20053  00500A  0E0F               	movlw	15
 20054  00500C  0100               	movlb	0	; () banked
 20055  00500E  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20056  005010  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20057  005012  0B0F               	andlw	15
 20058  005014  0B0F               	andlw	15
 20059  005016  0D0A               	mullw	10
 20060  005018  50F3               	movf	prodl,w,c
 20061  00501A  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20062  00501C  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20063                           
 20064                           ;rtcc_drv.c: 241: break;
 20065  00501E  D02D               	goto	l418
 20066  005020                     l421:
 20067                           
 20068                           ; BSR set to: 0
 20069                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20070  005020  010F               	movlb	15	; () banked
 20071  005022  933F               	bcf	63,1,b	;volatile
 20072                           
 20073                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20074  005024  813F               	bsf	63,0,b	;volatile
 20075                           
 20076                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20077  005026  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20078                           
 20079                           ;rtcc_drv.c: 249: break;
 20080  00502A  D027               	goto	l418
 20081  00502C                     l422:
 20082                           
 20083                           ; BSR set to: 0
 20084                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20085  00502C  010F               	movlb	15	; () banked
 20086  00502E  933F               	bcf	63,1,b	;volatile
 20087  005030  D7E2               	goto	L20
 20088  005032                     L18:
 20089                           
 20090                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20091  005032  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20092  005036  D7E7               	goto	l14720
 20093  005038                     l423:
 20094                           
 20095                           ; BSR set to: 0
 20096                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20097  005038  010F               	movlb	15	; () banked
 20098  00503A  933F               	bcf	63,1,b	;volatile
 20099  00503C                     L19:
 20100                           
 20101                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20102  00503C  913F               	bcf	63,0,b	;volatile
 20103                           
 20104                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20105  00503E  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20106  005042  D7E1               	goto	l14720
 20107  005044                     l424:
 20108                           
 20109                           ; BSR set to: 0
 20110                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20111  005044  010F               	movlb	15	; () banked
 20112  005046  933F               	bcf	63,1,b	;volatile
 20113  005048                     L22:
 20114                           
 20115                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20116  005048  913F               	bcf	63,0,b	;volatile
 20117  00504A  D7F3               	goto	L18
 20118  00504C                     l416:
 20119                           
 20120                           ; BSR set to: 0
 20121  00504C  0100               	movlb	0	; () banked
 20122  00504E  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20123                           
 20124                           ; Switch size 1, requested type "space"
 20125                           ; Number of cases is 7, Range of values is 0 to 6
 20126                           ; switch strategies available:
 20127                           ; Name         Instructions Cycles
 20128                           ; simple_byte           22    12 (average)
 20129                           ;	Chosen strategy is simple_byte
 20130  005050  0A00               	xorlw	0	; case 0
 20131  005052  B4D8               	btfsc	status,2,c
 20132  005054  D7CE               	goto	l417
 20133  005056  0A01               	xorlw	1	; case 1
 20134  005058  B4D8               	btfsc	status,2,c
 20135  00505A  D7CF               	goto	l419
 20136  00505C  0A03               	xorlw	3	; case 2
 20137  00505E  B4D8               	btfsc	status,2,c
 20138  005060  D7CF               	goto	l420
 20139  005062  0A01               	xorlw	1	; case 3
 20140  005064  B4D8               	btfsc	status,2,c
 20141  005066  D7DC               	goto	l421
 20142  005068  0A07               	xorlw	7	; case 4
 20143  00506A  B4D8               	btfsc	status,2,c
 20144  00506C  D7DF               	goto	l422
 20145  00506E  0A01               	xorlw	1	; case 5
 20146  005070  B4D8               	btfsc	status,2,c
 20147  005072  D7E2               	goto	l423
 20148  005074  0A03               	xorlw	3	; case 6
 20149  005076  B4D8               	btfsc	status,2,c
 20150  005078  D7E5               	goto	l424
 20151  00507A                     l418:
 20152                           
 20153                           ;rtcc_drv.c: 286: return RetValue;
 20154                           
 20155                           ; BSR set to: 0
 20156  00507A  0100               	movlb	0	; () banked
 20157  00507C  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20158  00507E  0012               	return	
 20159  005080                     __end_of_Rtcc_GetRtccValue:
 20160                           	opt stack 0
 20161                           tosu	equ	0xFFF
 20162                           tosh	equ	0xFFE
 20163                           tosl	equ	0xFFD
 20164                           pclath	equ	0xFFA
 20165                           tblptru	equ	0xFF8
 20166                           tblptrh	equ	0xFF7
 20167                           tblptrl	equ	0xFF6
 20168                           tablat	equ	0xFF5
 20169                           prodh	equ	0xFF4
 20170                           prodl	equ	0xFF3
 20171                           intcon	equ	0xFF2
 20172                           intcon2	equ	0xFF1
 20173                           intcon3	equ	0xFF0
 20174                           indf0	equ	0xFEF
 20175                           postinc0	equ	0xFEE
 20176                           plusw0	equ	0xFEB
 20177                           fsr0h	equ	0xFEA
 20178                           fsr0l	equ	0xFE9
 20179                           wreg	equ	0xFE8
 20180                           indf1	equ	0xFE7
 20181                           postinc1	equ	0xFE6
 20182                           postdec1	equ	0xFE5
 20183                           fsr1h	equ	0xFE2
 20184                           fsr1l	equ	0xFE1
 20185                           indf2	equ	0xFDF
 20186                           postinc2	equ	0xFDE
 20187                           postdec2	equ	0xFDD
 20188                           plusw2	equ	0xFDB
 20189                           fsr2h	equ	0xFDA
 20190                           fsr2l	equ	0xFD9
 20191                           status	equ	0xFD8
 20192                           
 20193 ;; *************** function _Rtcc_SetRtcStatus *****************
 20194 ;; Defined at:
 20195 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20196 ;; Parameters:    Size  Location     Type
 20197 ;;  Status          1    wreg     unsigned char 
 20198 ;; Auto vars:     Size  Location     Type
 20199 ;;  Status          1   29[BANK0 ] unsigned char 
 20200 ;; Return value:  Size  Location     Type
 20201 ;;                  1    wreg      void 
 20202 ;; Registers used:
 20203 ;;		wreg
 20204 ;; Tracked objects:
 20205 ;;		On entry : 0/0
 20206 ;;		On exit  : 0/0
 20207 ;;		Unchanged: 0/0
 20208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20210 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20212 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20213 ;;Total ram usage:        1 bytes
 20214 ;; Hardware stack levels used:    1
 20215 ;; Hardware stack levels required when called:   11
 20216 ;; This function calls:
 20217 ;;		Nothing
 20218 ;; This function is called by:
 20219 ;;		_Rtcm_MainTask
 20220 ;; This function uses a non-reentrant model
 20221 ;;
 20222                           
 20223                           	psect	text86
 20224  006C28                     __ptext86:
 20225                           	opt stack 0
 20226  006C28                     _Rtcc_SetRtcStatus:
 20227                           	opt stack 16
 20228                           
 20229                           ; BSR set to: 0
 20230                           ;incstack = 0
 20231                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20232  006C28  0100               	movlb	0	; () banked
 20233  006C2A  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20234                           
 20235                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20236  006C2C  0100               	movlb	0	; () banked
 20237  006C2E  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20238  006C30  D003               	bra	u15025
 20239  006C32  010F               	movlb	15	; () banked
 20240  006C34  9F3F               	bcf	63,7,b	;volatile
 20241  006C36  D002               	bra	u15026
 20242  006C38                     u15025:
 20243  006C38  010F               	movlb	15	; () banked
 20244  006C3A  8F3F               	bsf	63,7,b	;volatile
 20245  006C3C                     u15026:
 20246                           
 20247                           ; BSR set to: 15
 20248  006C3C  0012               	return		;funcret
 20249  006C3E                     __end_of_Rtcc_SetRtcStatus:
 20250                           	opt stack 0
 20251                           tosu	equ	0xFFF
 20252                           tosh	equ	0xFFE
 20253                           tosl	equ	0xFFD
 20254                           pclath	equ	0xFFA
 20255                           tblptru	equ	0xFF8
 20256                           tblptrh	equ	0xFF7
 20257                           tblptrl	equ	0xFF6
 20258                           tablat	equ	0xFF5
 20259                           prodh	equ	0xFF4
 20260                           prodl	equ	0xFF3
 20261                           intcon	equ	0xFF2
 20262                           intcon2	equ	0xFF1
 20263                           intcon3	equ	0xFF0
 20264                           indf0	equ	0xFEF
 20265                           postinc0	equ	0xFEE
 20266                           plusw0	equ	0xFEB
 20267                           fsr0h	equ	0xFEA
 20268                           fsr0l	equ	0xFE9
 20269                           wreg	equ	0xFE8
 20270                           indf1	equ	0xFE7
 20271                           postinc1	equ	0xFE6
 20272                           postdec1	equ	0xFE5
 20273                           fsr1h	equ	0xFE2
 20274                           fsr1l	equ	0xFE1
 20275                           indf2	equ	0xFDF
 20276                           postinc2	equ	0xFDE
 20277                           postdec2	equ	0xFDD
 20278                           plusw2	equ	0xFDB
 20279                           fsr2h	equ	0xFDA
 20280                           fsr2l	equ	0xFD9
 20281                           status	equ	0xFD8
 20282                           
 20283 ;; *************** function _Rtcc_RtcConfig *****************
 20284 ;; Defined at:
 20285 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20286 ;; Parameters:    Size  Location     Type
 20287 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20288 ;;		 -> RtcConfig(4), 
 20289 ;; Auto vars:     Size  Location     Type
 20290 ;;		None
 20291 ;; Return value:  Size  Location     Type
 20292 ;;                  1    wreg      void 
 20293 ;; Registers used:
 20294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20295 ;; Tracked objects:
 20296 ;;		On entry : 0/0
 20297 ;;		On exit  : 0/0
 20298 ;;		Unchanged: 0/0
 20299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20300 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20302 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20303 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20304 ;;Total ram usage:        3 bytes
 20305 ;; Hardware stack levels used:    1
 20306 ;; Hardware stack levels required when called:   12
 20307 ;; This function calls:
 20308 ;;		_RtccIrqInit
 20309 ;; This function is called by:
 20310 ;;		_Rtcm_MainTask
 20311 ;; This function uses a non-reentrant model
 20312 ;;
 20313                           
 20314                           	psect	text87
 20315  004B24                     __ptext87:
 20316                           	opt stack 0
 20317  004B24                     _Rtcc_RtcConfig:
 20318                           	opt stack 15
 20319                           
 20320                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20321                           
 20322                           ; BSR set to: 15
 20323                           ;incstack = 0
 20324  004B24  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20325  004B28  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20326  004B2C  50DF               	movf	indf2,w,c
 20327  004B2E  0100               	movlb	0	; () banked
 20328  004B30  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20329  004B32  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20330  004B34  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20331  004B36  010F               	movlb	15	; () banked
 20332  004B38  513F               	movf	63,w,b	;volatile
 20333  004B3A  0100               	movlb	0	; () banked
 20334  004B3C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20335  004B3E  0BFB               	andlw	-5
 20336  004B40  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20337  004B42  010F               	movlb	15	; () banked
 20338  004B44  6F3F               	movwf	63,b	;volatile
 20339                           
 20340                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20341  004B46  0100               	movlb	0	; () banked
 20342  004B48  EE20 F001          	lfsr	2,1
 20343  004B4C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20344  004B4E  26D9               	addwf	fsr2l,f,c
 20345  004B50  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20346  004B52  22DA               	addwfc	fsr2h,f,c
 20347  004B54  50DF               	movf	indf2,w,c
 20348  004B56  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20349  004B58  0E01               	movlw	1
 20350  004B5A  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20351  004B5C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20352  004B5E  010F               	movlb	15	; () banked
 20353  004B60  513C               	movf	60,w,b	;volatile
 20354  004B62  0100               	movlb	0	; () banked
 20355  004B64  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20356  004B66  0BFD               	andlw	-3
 20357  004B68  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20358  004B6A  010F               	movlb	15	; () banked
 20359  004B6C  6F3C               	movwf	60,b	;volatile
 20360                           
 20361                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20362  004B6E  0100               	movlb	0	; () banked
 20363  004B70  EE20 F001          	lfsr	2,1
 20364  004B74  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20365  004B76  26D9               	addwf	fsr2l,f,c
 20366  004B78  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20367  004B7A  22DA               	addwfc	fsr2h,f,c
 20368  004B7C  50DF               	movf	indf2,w,c
 20369  004B7E  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20370  004B80  90D8               	bcf	status,0,c
 20371  004B82  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20372  004B84  0E01               	movlw	1
 20373  004B86  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20374  004B88  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20375  004B8A  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20376  004B8C  010F               	movlb	15	; () banked
 20377  004B8E  513C               	movf	60,w,b	;volatile
 20378  004B90  0100               	movlb	0	; () banked
 20379  004B92  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20380  004B94  0BFB               	andlw	-5
 20381  004B96  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20382  004B98  010F               	movlb	15	; () banked
 20383  004B9A  6F3C               	movwf	60,b	;volatile
 20384                           
 20385                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20386  004B9C  0100               	movlb	0	; () banked
 20387  004B9E  EE20 F002          	lfsr	2,2
 20388  004BA2  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20389  004BA4  26D9               	addwf	fsr2l,f,c
 20390  004BA6  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20391  004BA8  22DA               	addwfc	fsr2h,f,c
 20392  004BAA  04DE               	decf	postinc2,w,c
 20393  004BAC  A4D8               	btfss	status,2,c
 20394  004BAE  0012               	return	
 20395                           
 20396                           ; BSR set to: 0
 20397                           ;rtcc_drv.c: 115: {
 20398                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20399  004BB0  EE20 F003          	lfsr	2,3
 20400  004BB4  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20401  004BB6  26D9               	addwf	fsr2l,f,c
 20402  004BB8  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20403  004BBA  22DA               	addwfc	fsr2h,f,c
 20404  004BBC  50DF               	movf	indf2,w,c
 20405  004BBE  EC1F  F036         	call	_RtccIrqInit
 20406  004BC2  0012               	return	
 20407  004BC4                     __end_of_Rtcc_RtcConfig:
 20408                           	opt stack 0
 20409                           tosu	equ	0xFFF
 20410                           tosh	equ	0xFFE
 20411                           tosl	equ	0xFFD
 20412                           pclath	equ	0xFFA
 20413                           tblptru	equ	0xFF8
 20414                           tblptrh	equ	0xFF7
 20415                           tblptrl	equ	0xFF6
 20416                           tablat	equ	0xFF5
 20417                           prodh	equ	0xFF4
 20418                           prodl	equ	0xFF3
 20419                           intcon	equ	0xFF2
 20420                           intcon2	equ	0xFF1
 20421                           intcon3	equ	0xFF0
 20422                           indf0	equ	0xFEF
 20423                           postinc0	equ	0xFEE
 20424                           plusw0	equ	0xFEB
 20425                           fsr0h	equ	0xFEA
 20426                           fsr0l	equ	0xFE9
 20427                           wreg	equ	0xFE8
 20428                           indf1	equ	0xFE7
 20429                           postinc1	equ	0xFE6
 20430                           postdec1	equ	0xFE5
 20431                           fsr1h	equ	0xFE2
 20432                           fsr1l	equ	0xFE1
 20433                           indf2	equ	0xFDF
 20434                           postinc2	equ	0xFDE
 20435                           postdec2	equ	0xFDD
 20436                           plusw2	equ	0xFDB
 20437                           fsr2h	equ	0xFDA
 20438                           fsr2l	equ	0xFD9
 20439                           status	equ	0xFD8
 20440                           
 20441 ;; *************** function _RtccIrqInit *****************
 20442 ;; Defined at:
 20443 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20444 ;; Parameters:    Size  Location     Type
 20445 ;;  Priority        1    wreg     enum E7716
 20446 ;; Auto vars:     Size  Location     Type
 20447 ;;  Priority        1   29[BANK0 ] enum E7716
 20448 ;; Return value:  Size  Location     Type
 20449 ;;                  1    wreg      void 
 20450 ;; Registers used:
 20451 ;;		wreg
 20452 ;; Tracked objects:
 20453 ;;		On entry : 0/0
 20454 ;;		On exit  : 0/0
 20455 ;;		Unchanged: 0/0
 20456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20458 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20460 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20461 ;;Total ram usage:        1 bytes
 20462 ;; Hardware stack levels used:    1
 20463 ;; Hardware stack levels required when called:   11
 20464 ;; This function calls:
 20465 ;;		Nothing
 20466 ;; This function is called by:
 20467 ;;		_Rtcc_RtcConfig
 20468 ;; This function uses a non-reentrant model
 20469 ;;
 20470                           
 20471                           	psect	text88
 20472  006C3E                     __ptext88:
 20473                           	opt stack 0
 20474  006C3E                     _RtccIrqInit:
 20475                           	opt stack 15
 20476                           
 20477                           ;incstack = 0
 20478                           ;RtccIrqInit@Priority stored from wreg
 20479  006C3E  0100               	movlb	0	; () banked
 20480  006C40  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20481                           
 20482                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20483  006C42  90A4               	bcf	4004,0,c	;volatile
 20484                           
 20485                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20486  006C44  0100               	movlb	0	; () banked
 20487  006C46  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20488  006C48  D002               	bra	u13805
 20489  006C4A  90A5               	bcf	4005,0,c	;volatile
 20490  006C4C  D001               	bra	u13806
 20491  006C4E                     u13805:
 20492  006C4E  80A5               	bsf	4005,0,c	;volatile
 20493  006C50                     u13806:
 20494                           
 20495                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20496  006C50  80A3               	bsf	4003,0,c	;volatile
 20497  006C52  0012               	return		;funcret
 20498  006C54                     __end_of_RtccIrqInit:
 20499                           	opt stack 0
 20500                           tosu	equ	0xFFF
 20501                           tosh	equ	0xFFE
 20502                           tosl	equ	0xFFD
 20503                           pclath	equ	0xFFA
 20504                           tblptru	equ	0xFF8
 20505                           tblptrh	equ	0xFF7
 20506                           tblptrl	equ	0xFF6
 20507                           tablat	equ	0xFF5
 20508                           prodh	equ	0xFF4
 20509                           prodl	equ	0xFF3
 20510                           intcon	equ	0xFF2
 20511                           intcon2	equ	0xFF1
 20512                           intcon3	equ	0xFF0
 20513                           indf0	equ	0xFEF
 20514                           postinc0	equ	0xFEE
 20515                           plusw0	equ	0xFEB
 20516                           fsr0h	equ	0xFEA
 20517                           fsr0l	equ	0xFE9
 20518                           wreg	equ	0xFE8
 20519                           indf1	equ	0xFE7
 20520                           postinc1	equ	0xFE6
 20521                           postdec1	equ	0xFE5
 20522                           fsr1h	equ	0xFE2
 20523                           fsr1l	equ	0xFE1
 20524                           indf2	equ	0xFDF
 20525                           postinc2	equ	0xFDE
 20526                           postdec2	equ	0xFDD
 20527                           plusw2	equ	0xFDB
 20528                           fsr2h	equ	0xFDA
 20529                           fsr2l	equ	0xFD9
 20530                           status	equ	0xFD8
 20531                           
 20532 ;; *************** function _Rtcc_AlarmConfig *****************
 20533 ;; Defined at:
 20534 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20535 ;; Parameters:    Size  Location     Type
 20536 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20537 ;;		 -> AlCfg(4), 
 20538 ;; Auto vars:     Size  Location     Type
 20539 ;;		None
 20540 ;; Return value:  Size  Location     Type
 20541 ;;                  1    wreg      void 
 20542 ;; Registers used:
 20543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20544 ;; Tracked objects:
 20545 ;;		On entry : 0/0
 20546 ;;		On exit  : 0/0
 20547 ;;		Unchanged: 0/0
 20548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20549 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20551 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20552 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20553 ;;Total ram usage:        3 bytes
 20554 ;; Hardware stack levels used:    1
 20555 ;; Hardware stack levels required when called:   11
 20556 ;; This function calls:
 20557 ;;		Nothing
 20558 ;; This function is called by:
 20559 ;;		_Rtcm_MainTask
 20560 ;; This function uses a non-reentrant model
 20561 ;;
 20562                           
 20563                           	psect	text89
 20564  00578A                     __ptext89:
 20565                           	opt stack 0
 20566  00578A                     _Rtcc_AlarmConfig:
 20567                           	opt stack 16
 20568                           
 20569                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20570                           
 20571                           ;incstack = 0
 20572  00578A  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20573  00578E  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20574  005792  50DF               	movf	indf2,w,c
 20575  005794  0100               	movlb	0	; () banked
 20576  005796  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20577  005798  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20578  00579A  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20579  00579C  5091               	movf	3985,w,c	;volatile
 20580  00579E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20581  0057A0  0B7F               	andlw	-129
 20582  0057A2  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20583  0057A4  6E91               	movwf	3985,c	;volatile
 20584                           
 20585                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20586  0057A6  EE20 F001          	lfsr	2,1
 20587  0057AA  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20588  0057AC  26D9               	addwf	fsr2l,f,c
 20589  0057AE  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20590  0057B0  22DA               	addwfc	fsr2h,f,c
 20591  0057B2  50DF               	movf	indf2,w,c
 20592  0057B4  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20593  0057B6  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20594  0057B8  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20595  0057BA  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20596  0057BC  5091               	movf	3985,w,c	;volatile
 20597  0057BE  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20598  0057C0  0BBF               	andlw	-65
 20599  0057C2  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20600  0057C4  6E91               	movwf	3985,c	;volatile
 20601                           
 20602                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20603  0057C6  EE20 F002          	lfsr	2,2
 20604  0057CA  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20605  0057CC  26D9               	addwf	fsr2l,f,c
 20606  0057CE  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20607  0057D0  22DA               	addwfc	fsr2h,f,c
 20608  0057D2  50DF               	movf	indf2,w,c
 20609  0057D4  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20610  0057D6  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20611  0057D8  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20612  0057DA  5091               	movf	3985,w,c	;volatile
 20613  0057DC  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20614  0057DE  0BC3               	andlw	-61
 20615  0057E0  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20616  0057E2  6E91               	movwf	3985,c	;volatile
 20617                           
 20618                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20619  0057E4  EE20 F003          	lfsr	2,3
 20620  0057E8  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20621  0057EA  26D9               	addwf	fsr2l,f,c
 20622  0057EC  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20623  0057EE  22DA               	addwfc	fsr2h,f,c
 20624  0057F0  50DF               	movf	indf2,w,c
 20625  0057F2  6E90               	movwf	3984,c	;volatile
 20626                           
 20627                           ; BSR set to: 0
 20628  0057F4  0012               	return		;funcret
 20629  0057F6                     __end_of_Rtcc_AlarmConfig:
 20630                           	opt stack 0
 20631                           tosu	equ	0xFFF
 20632                           tosh	equ	0xFFE
 20633                           tosl	equ	0xFFD
 20634                           pclath	equ	0xFFA
 20635                           tblptru	equ	0xFF8
 20636                           tblptrh	equ	0xFF7
 20637                           tblptrl	equ	0xFF6
 20638                           tablat	equ	0xFF5
 20639                           prodh	equ	0xFF4
 20640                           prodl	equ	0xFF3
 20641                           intcon	equ	0xFF2
 20642                           intcon2	equ	0xFF1
 20643                           intcon3	equ	0xFF0
 20644                           indf0	equ	0xFEF
 20645                           postinc0	equ	0xFEE
 20646                           plusw0	equ	0xFEB
 20647                           fsr0h	equ	0xFEA
 20648                           fsr0l	equ	0xFE9
 20649                           wreg	equ	0xFE8
 20650                           indf1	equ	0xFE7
 20651                           postinc1	equ	0xFE6
 20652                           postdec1	equ	0xFE5
 20653                           fsr1h	equ	0xFE2
 20654                           fsr1l	equ	0xFE1
 20655                           indf2	equ	0xFDF
 20656                           postinc2	equ	0xFDE
 20657                           postdec2	equ	0xFDD
 20658                           plusw2	equ	0xFDB
 20659                           fsr2h	equ	0xFDA
 20660                           fsr2l	equ	0xFD9
 20661                           status	equ	0xFD8
 20662                           
 20663 ;; *************** function _triggerVisualEffect *****************
 20664 ;; Defined at:
 20665 ;;		line 107 in file "../Source/c/04_App/utils.c"
 20666 ;; Parameters:    Size  Location     Type
 20667 ;;		None
 20668 ;; Auto vars:     Size  Location     Type
 20669 ;;		None
 20670 ;; Return value:  Size  Location     Type
 20671 ;;                  1    wreg      void 
 20672 ;; Registers used:
 20673 ;;		wreg, status,2
 20674 ;; Tracked objects:
 20675 ;;		On entry : 0/0
 20676 ;;		On exit  : 0/0
 20677 ;;		Unchanged: 0/0
 20678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20683 ;;Total ram usage:        0 bytes
 20684 ;; Hardware stack levels used:    1
 20685 ;; Hardware stack levels required when called:   11
 20686 ;; This function calls:
 20687 ;;		Nothing
 20688 ;; This function is called by:
 20689 ;;		_MyApp_Task
 20690 ;; This function uses a non-reentrant model
 20691 ;;
 20692                           
 20693                           	psect	text90
 20694  006D44                     __ptext90:
 20695                           	opt stack 0
 20696  006D44                     _triggerVisualEffect:
 20697                           	opt stack 16
 20698                           
 20699                           ;utils.c: 109: blinkInSeconds = 0;
 20700                           
 20701                           ; BSR set to: 0
 20702                           ;incstack = 0
 20703  006D44  0E00               	movlw	0
 20704  006D46  0103               	movlb	3	; () banked
 20705  006D48  6FFE               	movwf	(_blinkInSeconds+1)& (0+255),b
 20706  006D4A  0E00               	movlw	0
 20707  006D4C  6FFD               	movwf	_blinkInSeconds& (0+255),b
 20708                           
 20709                           ; BSR set to: 3
 20710  006D4E  0012               	return		;funcret
 20711  006D50                     __end_of_triggerVisualEffect:
 20712                           	opt stack 0
 20713                           tosu	equ	0xFFF
 20714                           tosh	equ	0xFFE
 20715                           tosl	equ	0xFFD
 20716                           pclath	equ	0xFFA
 20717                           tblptru	equ	0xFF8
 20718                           tblptrh	equ	0xFF7
 20719                           tblptrl	equ	0xFF6
 20720                           tablat	equ	0xFF5
 20721                           prodh	equ	0xFF4
 20722                           prodl	equ	0xFF3
 20723                           intcon	equ	0xFF2
 20724                           intcon2	equ	0xFF1
 20725                           intcon3	equ	0xFF0
 20726                           indf0	equ	0xFEF
 20727                           postinc0	equ	0xFEE
 20728                           plusw0	equ	0xFEB
 20729                           fsr0h	equ	0xFEA
 20730                           fsr0l	equ	0xFE9
 20731                           wreg	equ	0xFE8
 20732                           indf1	equ	0xFE7
 20733                           postinc1	equ	0xFE6
 20734                           postdec1	equ	0xFE5
 20735                           fsr1h	equ	0xFE2
 20736                           fsr1l	equ	0xFE1
 20737                           indf2	equ	0xFDF
 20738                           postinc2	equ	0xFDE
 20739                           postdec2	equ	0xFDD
 20740                           plusw2	equ	0xFDB
 20741                           fsr2h	equ	0xFDA
 20742                           fsr2l	equ	0xFD9
 20743                           status	equ	0xFD8
 20744                           
 20745 ;; *************** function _triggerCmdFsm *****************
 20746 ;; Defined at:
 20747 ;;		line 108 in file "../Source/c/04_App/cmd_trigger.c"
 20748 ;; Parameters:    Size  Location     Type
 20749 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 20750 ;;		 -> receivedNumber(13), 
 20751 ;; Auto vars:     Size  Location     Type
 20752 ;;  searchNumber    1   10[BANK1 ] unsigned char 
 20753 ;;  masterOpResu    1    9[BANK1 ] unsigned char 
 20754 ;;  numberInMemo    1    8[BANK1 ] unsigned char 
 20755 ;;  isComplete      1    7[BANK1 ] unsigned char 
 20756 ;; Return value:  Size  Location     Type
 20757 ;;                  1    wreg      unsigned char 
 20758 ;; Registers used:
 20759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20760 ;; Tracked objects:
 20761 ;;		On entry : 0/0
 20762 ;;		On exit  : 0/0
 20763 ;;		Unchanged: 0/0
 20764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20765 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20766 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20768 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20769 ;;Total ram usage:        6 bytes
 20770 ;; Hardware stack levels used:    1
 20771 ;; Hardware stack levels required when called:   18
 20772 ;; This function calls:
 20773 ;;		_isMasterNumber
 20774 ;;		_isNumberInMemory
 20775 ;;		_secondsAppTimer
 20776 ;;		_triggerRelay
 20777 ;; This function is called by:
 20778 ;;		_MyApp_Task
 20779 ;; This function uses a non-reentrant model
 20780 ;;
 20781                           
 20782                           	psect	text91
 20783  0039DE                     __ptext91:
 20784                           	opt stack 0
 20785  0039DE                     _triggerCmdFsm:
 20786                           	opt stack 9
 20787                           
 20788                           ;cmd_trigger.c: 110: static triggerFsmStates currentState = TRIGGER_FSM_CHECK_MASTER;
 20789                           ;cmd_trigger.c: 111: bool isComplete = 0;
 20790                           
 20791                           ; BSR set to: 3
 20792                           ;incstack = 0
 20793  0039DE  0E00               	movlw	0
 20794  0039E0  0101               	movlb	1	; () banked
 20795  0039E2  6F07               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20796                           
 20797                           ;cmd_trigger.c: 112: uint8_t numberInMemory = 0;
 20798  0039E4  0E00               	movlw	0
 20799  0039E6  6F08               	movwf	triggerCmdFsm@numberInMemory& (0+255),b
 20800                           
 20801                           ;cmd_trigger.c: 113: uint8_t masterOpResult = OP_FAILED;
 20802  0039E8  0E01               	movlw	1
 20803  0039EA  6F09               	movwf	triggerCmdFsm@masterOpResult& (0+255),b
 20804                           
 20805                           ;cmd_trigger.c: 114: uint8_t searchNumber = OP_FAILED;
 20806  0039EC  0E01               	movlw	1
 20807  0039EE  6F0A               	movwf	triggerCmdFsm@searchNumber& (0+255),b
 20808                           
 20809                           ;cmd_trigger.c: 116: switch (currentState)
 20810  0039F0  D04F               	goto	l2857
 20811  0039F2                     
 20812                           ; BSR set to: 1
 20813                           ;cmd_trigger.c: 119: masterOpResult = isMasterNumber(receivedNumber);
 20814                           
 20815                           ; BSR set to: 1
 20816  0039F2  C105  F100         	movff	triggerCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 20817  0039F6  C106  F101         	movff	triggerCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 20818  0039FA  EC58  F02B         	call	_isMasterNumber	;wreg free
 20819  0039FE  0101               	movlb	1	; () banked
 20820  003A00  6F09               	movwf	triggerCmdFsm@masterOpResult& (0+255),b
 20821                           
 20822                           ; BSR set to: 1
 20823                           ;cmd_trigger.c: 120: if (masterOpResult == OP_SUCCESS)
 20824  003A02  5109               	movf	triggerCmdFsm@masterOpResult& (0+255),w,b
 20825  003A04  A4D8               	btfss	status,2,c
 20826  003A06  D002               	goto	l2859
 20827  003A08                     u16410:
 20828                           
 20829                           ; BSR set to: 1
 20830                           ;cmd_trigger.c: 121: {
 20831                           ;cmd_trigger.c: 122: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20832  003A08  0E02               	movlw	2
 20833  003A0A  D029               	goto	L26
 20834  003A0C                     l2859:
 20835                           
 20836                           ; BSR set to: 1
 20837                           ;cmd_trigger.c: 124: else if (masterOpResult == OP_FAILED)
 20838                           
 20839                           ; BSR set to: 1
 20840  003A0C  0509               	decf	triggerCmdFsm@masterOpResult& (0+255),w,b
 20841  003A0E  A4D8               	btfss	status,2,c
 20842  003A10  D04F               	goto	l2862
 20843                           
 20844                           ; BSR set to: 1
 20845                           ;cmd_trigger.c: 125: {
 20846                           ;cmd_trigger.c: 126: currentState = TRIGGER_FSM_CHECK_NUMBER;
 20847  003A12  0E01               	movlw	1
 20848  003A14  D024               	goto	L26
 20849  003A16                     
 20850                           ; BSR set to: 1
 20851                           ;cmd_trigger.c: 131: searchNumber = isNumberInMemory(receivedNumber, &numberInMemory);
 20852                           
 20853                           ; BSR set to: 1
 20854  003A16  C105  F100         	movff	triggerCmdFsm@receivedNumber,isNumberInMemory@phoneNumber
 20855  003A1A  C106  F101         	movff	triggerCmdFsm@receivedNumber+1,isNumberInMemory@phoneNumber+1
 20856  003A1E  0E08               	movlw	low triggerCmdFsm@numberInMemory
 20857  003A20  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 20858  003A22  0E01               	movlw	high triggerCmdFsm@numberInMemory
 20859  003A24  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 20860  003A26  ECE0  F022         	call	_isNumberInMemory	;wreg free
 20861  003A2A  0101               	movlb	1	; () banked
 20862  003A2C  6F0A               	movwf	triggerCmdFsm@searchNumber& (0+255),b
 20863                           
 20864                           ; BSR set to: 1
 20865                           ;cmd_trigger.c: 132: if (searchNumber == SEARCH_FSM_FOUND)
 20866  003A2E  0E03               	movlw	3
 20867  003A30  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20868  003A32  B4D8               	btfsc	status,2,c
 20869  003A34  D7E9               	goto	u16410
 20870                           
 20871                           ; BSR set to: 1
 20872                           ;cmd_trigger.c: 136: else if (searchNumber == SEARCH_FSM_NOT_FOUND || searchNumber == SE
      +                          ARCH_FSM_ERROR)
 20873                           
 20874                           ; BSR set to: 1
 20875                           
 20876                           ;cmd_trigger.c: 135: }
 20877                           
 20878                           ; BSR set to: 1
 20879                           ;cmd_trigger.c: 133: {
 20880                           ;cmd_trigger.c: 134: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20881  003A36  0E04               	movlw	4
 20882  003A38  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20883  003A3A  B4D8               	btfsc	status,2,c
 20884  003A3C  D004               	goto	u16450
 20885                           
 20886                           ; BSR set to: 1
 20887  003A3E  0E02               	movlw	2
 20888  003A40  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20889  003A42  A4D8               	btfss	status,2,c
 20890  003A44  D035               	goto	l2862
 20891  003A46                     u16450:
 20892                           
 20893                           ; BSR set to: 1
 20894                           ;cmd_trigger.c: 137: {
 20895                           ;cmd_trigger.c: 138: currentState = TRIGGER_FSM_COMPLETE;
 20896                           
 20897                           ; BSR set to: 1
 20898  003A46  0E04               	movlw	4
 20899  003A48  D00A               	goto	L26
 20900  003A4A                     
 20901                           ; BSR set to: 1
 20902                           ;cmd_trigger.c: 143: triggerRelay(1);
 20903                           
 20904                           ; BSR set to: 1
 20905  003A4A  0E01               	movlw	1
 20906  003A4C  EC03  F033         	call	_triggerRelay
 20907                           
 20908                           ;cmd_trigger.c: 144: secondCounter = 0;
 20909  003A50  0E00               	movlw	0
 20910  003A52  0103               	movlb	3	; () banked
 20911  003A54  6F19               	movwf	(_secondCounter+1)& (0+255),b
 20912  003A56  0E00               	movlw	0
 20913  003A58  6F18               	movwf	_secondCounter& (0+255),b
 20914                           
 20915                           ; BSR set to: 3
 20916                           ;cmd_trigger.c: 145: currentState = TRIGGER_FSM_DEACTIVATE_RELAY;
 20917  003A5A  0E03               	movlw	3
 20918  003A5C  D013               	goto	L27
 20919  003A5E                     L26:
 20920  003A5E  6FD3               	movwf	triggerCmdFsm@currentState& (0+255),b
 20921                           
 20922                           ;cmd_trigger.c: 146: break;
 20923  003A60  D027               	goto	l2862
 20924  003A62                     
 20925                           ; BSR set to: 1
 20926                           ;cmd_trigger.c: 149: if (secondsAppTimer(1, secondCounter, 0))
 20927                           
 20928                           ; BSR set to: 1
 20929  003A62  C318  F08A         	movff	_secondCounter,secondsAppTimer@counter
 20930  003A66  C319  F08B         	movff	_secondCounter+1,secondsAppTimer@counter+1
 20931  003A6A  0E00               	movlw	0
 20932  003A6C  0100               	movlb	0	; () banked
 20933  003A6E  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20934  003A70  0E01               	movlw	1
 20935  003A72  EC41  F025         	call	_secondsAppTimer
 20936  003A76  0900               	iorlw	0
 20937  003A78  B4D8               	btfsc	status,2,c
 20938  003A7A  D01A               	goto	l2862
 20939                           
 20940                           ;cmd_trigger.c: 150: {
 20941                           ;cmd_trigger.c: 151: triggerRelay(0);
 20942  003A7C  0E00               	movlw	0
 20943  003A7E  EC03  F033         	call	_triggerRelay
 20944                           
 20945                           ;cmd_trigger.c: 152: currentState = TRIGGER_FSM_COMPLETE;
 20946  003A82  0E04               	movlw	4
 20947  003A84                     L27:
 20948  003A84  0101               	movlb	1	; () banked
 20949  003A86  D7EB               	goto	L26
 20950  003A88                     
 20951                           ; BSR set to: 1
 20952                           ;cmd_trigger.c: 157: isComplete = 1;
 20953                           
 20954                           ; BSR set to: 1
 20955  003A88  0E01               	movlw	1
 20956  003A8A  6F07               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20957                           
 20958                           ;cmd_trigger.c: 158: currentState = TRIGGER_FSM_CHECK_MASTER;
 20959  003A8C  0E00               	movlw	0
 20960  003A8E  D7E7               	goto	L26
 20961  003A90                     l2857:
 20962                           
 20963                           ; BSR set to: 1
 20964                           
 20965                           ; BSR set to: 1
 20966  003A90  51D3               	movf	triggerCmdFsm@currentState& (0+255),w,b
 20967                           
 20968                           ; Switch size 1, requested type "space"
 20969                           ; Number of cases is 5, Range of values is 0 to 4
 20970                           ; switch strategies available:
 20971                           ; Name         Instructions Cycles
 20972                           ; simple_byte           16     9 (average)
 20973                           ;	Chosen strategy is simple_byte
 20974  003A92  0A00               	xorlw	0	; case 0
 20975  003A94  B4D8               	btfsc	status,2,c
 20976  003A96  D7AD               	goto	l2858
 20977  003A98  0A01               	xorlw	1	; case 1
 20978  003A9A  B4D8               	btfsc	status,2,c
 20979  003A9C  D7BC               	goto	l2863
 20980  003A9E  0A03               	xorlw	3	; case 2
 20981  003AA0  B4D8               	btfsc	status,2,c
 20982  003AA2  D7D3               	goto	l2869
 20983  003AA4  0A01               	xorlw	1	; case 3
 20984  003AA6  B4D8               	btfsc	status,2,c
 20985  003AA8  D7DC               	goto	l2870
 20986  003AAA  0A07               	xorlw	7	; case 4
 20987  003AAC  B4D8               	btfsc	status,2,c
 20988  003AAE  D7EC               	goto	l2872
 20989  003AB0                     l2862:
 20990                           
 20991                           ;cmd_trigger.c: 164: return isComplete;
 20992                           
 20993                           ; BSR set to: 1
 20994  003AB0  0101               	movlb	1	; () banked
 20995  003AB2  5107               	movf	triggerCmdFsm@isComplete& (0+255),w,b
 20996  003AB4  0012               	return	
 20997  003AB6                     __end_of_triggerCmdFsm:
 20998                           	opt stack 0
 20999                           tosu	equ	0xFFF
 21000                           tosh	equ	0xFFE
 21001                           tosl	equ	0xFFD
 21002                           pclath	equ	0xFFA
 21003                           tblptru	equ	0xFF8
 21004                           tblptrh	equ	0xFF7
 21005                           tblptrl	equ	0xFF6
 21006                           tablat	equ	0xFF5
 21007                           prodh	equ	0xFF4
 21008                           prodl	equ	0xFF3
 21009                           intcon	equ	0xFF2
 21010                           intcon2	equ	0xFF1
 21011                           intcon3	equ	0xFF0
 21012                           indf0	equ	0xFEF
 21013                           postinc0	equ	0xFEE
 21014                           plusw0	equ	0xFEB
 21015                           fsr0h	equ	0xFEA
 21016                           fsr0l	equ	0xFE9
 21017                           wreg	equ	0xFE8
 21018                           indf1	equ	0xFE7
 21019                           postinc1	equ	0xFE6
 21020                           postdec1	equ	0xFE5
 21021                           fsr1h	equ	0xFE2
 21022                           fsr1l	equ	0xFE1
 21023                           indf2	equ	0xFDF
 21024                           postinc2	equ	0xFDE
 21025                           postdec2	equ	0xFDD
 21026                           plusw2	equ	0xFDB
 21027                           fsr2h	equ	0xFDA
 21028                           fsr2l	equ	0xFD9
 21029                           status	equ	0xFD8
 21030                           
 21031 ;; *************** function _triggerRelay *****************
 21032 ;; Defined at:
 21033 ;;		line 83 in file "../Source/c/04_App/cmd_trigger.c"
 21034 ;; Parameters:    Size  Location     Type
 21035 ;;  isRelayOn       1    wreg     unsigned char 
 21036 ;; Auto vars:     Size  Location     Type
 21037 ;;  isRelayOn       1   38[BANK0 ] unsigned char 
 21038 ;;  res             1   37[BANK0 ] unsigned char 
 21039 ;; Return value:  Size  Location     Type
 21040 ;;                  1    wreg      unsigned char 
 21041 ;; Registers used:
 21042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21043 ;; Tracked objects:
 21044 ;;		On entry : 0/0
 21045 ;;		On exit  : 0/0
 21046 ;;		Unchanged: 0/0
 21047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21049 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21051 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21052 ;;Total ram usage:        2 bytes
 21053 ;; Hardware stack levels used:    1
 21054 ;; Hardware stack levels required when called:   13
 21055 ;; This function calls:
 21056 ;;		_I2cSlv_SendI2cMsg
 21057 ;; This function is called by:
 21058 ;;		_triggerCmdFsm
 21059 ;; This function uses a non-reentrant model
 21060 ;;
 21061                           
 21062                           	psect	text92
 21063  006606                     __ptext92:
 21064                           	opt stack 0
 21065  006606                     _triggerRelay:
 21066                           	opt stack 13
 21067                           
 21068                           ; BSR set to: 1
 21069                           ;incstack = 0
 21070                           ;triggerRelay@isRelayOn stored from wreg
 21071  006606  0100               	movlb	0	; () banked
 21072  006608  6F86               	movwf	triggerRelay@isRelayOn& (0+255),b
 21073                           
 21074                           ;cmd_trigger.c: 85: uint8_t res = 0u;
 21075  00660A  0E00               	movlw	0
 21076  00660C  0100               	movlb	0	; () banked
 21077  00660E  6F85               	movwf	triggerRelay@res& (0+255),b
 21078                           
 21079                           ; BSR set to: 0
 21080                           ;cmd_trigger.c: 86: if (isRelayOn)
 21081  006610  5186               	movf	triggerRelay@isRelayOn& (0+255),w,b
 21082  006612  B4D8               	btfsc	status,2,c
 21083  006614  D002               	goto	l2850
 21084                           
 21085                           ; BSR set to: 0
 21086                           ;cmd_trigger.c: 87: {
 21087                           ;cmd_trigger.c: 88: relayBuffer[1] = 0x01;
 21088  006616  0E01               	movlw	1
 21089  006618  D001               	goto	L28
 21090  00661A                     l2850:
 21091                           
 21092                           ;cmd_trigger.c: 90: else
 21093                           ;cmd_trigger.c: 91: {
 21094                           ;cmd_trigger.c: 92: relayBuffer[1] = 0x00;
 21095                           
 21096                           ; BSR set to: 2
 21097  00661A  0E00               	movlw	0
 21098  00661C                     L28:
 21099  00661C  0102               	movlb	2	; () banked
 21100  00661E  6FFF               	movwf	(_relayBuffer+1)& (0+255),b
 21101                           
 21102                           ; BSR set to: 2
 21103                           ;cmd_trigger.c: 93: }
 21104                           ;cmd_trigger.c: 94: res = I2cSlv_SendI2cMsg(relayBuffer, 1, 2);
 21105                           
 21106                           ; BSR set to: 2
 21107  006620  0EFE               	movlw	low _relayBuffer
 21108  006622  0100               	movlb	0	; () banked
 21109  006624  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 21110  006626  0E02               	movlw	high _relayBuffer
 21111  006628  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 21112  00662A  0E01               	movlw	1
 21113  00662C  6F82               	movwf	I2cSlv_SendI2cMsg@SlaveAddr& (0+255),b
 21114  00662E  0E02               	movlw	2
 21115  006630  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 21116  006632  EC31  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 21117  006636  0100               	movlb	0	; () banked
 21118  006638  6F85               	movwf	triggerRelay@res& (0+255),b
 21119  00663A  0012               	return	
 21120  00663C                     __end_of_triggerRelay:
 21121                           	opt stack 0
 21122                           tosu	equ	0xFFF
 21123                           tosh	equ	0xFFE
 21124                           tosl	equ	0xFFD
 21125                           pclath	equ	0xFFA
 21126                           tblptru	equ	0xFF8
 21127                           tblptrh	equ	0xFF7
 21128                           tblptrl	equ	0xFF6
 21129                           tablat	equ	0xFF5
 21130                           prodh	equ	0xFF4
 21131                           prodl	equ	0xFF3
 21132                           intcon	equ	0xFF2
 21133                           intcon2	equ	0xFF1
 21134                           intcon3	equ	0xFF0
 21135                           indf0	equ	0xFEF
 21136                           postinc0	equ	0xFEE
 21137                           plusw0	equ	0xFEB
 21138                           fsr0h	equ	0xFEA
 21139                           fsr0l	equ	0xFE9
 21140                           wreg	equ	0xFE8
 21141                           indf1	equ	0xFE7
 21142                           postinc1	equ	0xFE6
 21143                           postdec1	equ	0xFE5
 21144                           fsr1h	equ	0xFE2
 21145                           fsr1l	equ	0xFE1
 21146                           indf2	equ	0xFDF
 21147                           postinc2	equ	0xFDE
 21148                           postdec2	equ	0xFDD
 21149                           plusw2	equ	0xFDB
 21150                           fsr2h	equ	0xFDA
 21151                           fsr2l	equ	0xFD9
 21152                           status	equ	0xFD8
 21153                           
 21154 ;; *************** function _resCmdFsm *****************
 21155 ;; Defined at:
 21156 ;;		line 77 in file "../Source/c/04_App/cmd_res.c"
 21157 ;; Parameters:    Size  Location     Type
 21158 ;;  receivedNumb    2    3[BANK1 ] PTR unsigned char 
 21159 ;;		 -> receivedNumber(13), 
 21160 ;;  isCmdSuccess    2    5[BANK1 ] PTR unsigned char 
 21161 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 21162 ;; Auto vars:     Size  Location     Type
 21163 ;;  masterOpResu    1    8[BANK1 ] unsigned char 
 21164 ;;  isComplete      1    7[BANK1 ] unsigned char 
 21165 ;; Return value:  Size  Location     Type
 21166 ;;                  1    wreg      unsigned char 
 21167 ;; Registers used:
 21168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21169 ;; Tracked objects:
 21170 ;;		On entry : 0/0
 21171 ;;		On exit  : 0/0
 21172 ;;		Unchanged: 0/0
 21173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21174 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21175 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21177 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21178 ;;Total ram usage:        6 bytes
 21179 ;; Hardware stack levels used:    1
 21180 ;; Hardware stack levels required when called:   18
 21181 ;; This function calls:
 21182 ;;		_Eeprom_Reset
 21183 ;;		_isMasterNumber
 21184 ;; This function is called by:
 21185 ;;		_MyApp_Task
 21186 ;; This function uses a non-reentrant model
 21187 ;;
 21188                           
 21189                           	psect	text93
 21190  0054DA                     __ptext93:
 21191                           	opt stack 0
 21192  0054DA                     _resCmdFsm:
 21193                           	opt stack 9
 21194                           
 21195                           ;cmd_res.c: 79: static resFsmStates currentState = RES_FSM_CHECK_MASTER;
 21196                           ;cmd_res.c: 80: bool isComplete = 0;
 21197                           
 21198                           ; BSR set to: 0
 21199                           ;incstack = 0
 21200  0054DA  0E00               	movlw	0
 21201  0054DC  0101               	movlb	1	; () banked
 21202  0054DE  6F07               	movwf	resCmdFsm@isComplete& (0+255),b
 21203                           
 21204                           ;cmd_res.c: 81: uint8_t masterOpResult = OP_FAILED;
 21205  0054E0  0E01               	movlw	1
 21206  0054E2  6F08               	movwf	resCmdFsm@masterOpResult& (0+255),b
 21207                           
 21208                           ;cmd_res.c: 83: switch (currentState)
 21209  0054E4  D02C               	goto	l2819
 21210  0054E6                     
 21211                           ; BSR set to: 1
 21212                           ;cmd_res.c: 86: *isCmdSuccessfull = 0;
 21213                           
 21214                           ; BSR set to: 1
 21215  0054E6  C105  FFD9         	movff	resCmdFsm@isCmdSuccessfull,fsr2l
 21216  0054EA  C106  FFDA         	movff	resCmdFsm@isCmdSuccessfull+1,fsr2h
 21217  0054EE  0E00               	movlw	0
 21218  0054F0  6EDF               	movwf	indf2,c
 21219                           
 21220                           ; BSR set to: 1
 21221                           ;cmd_res.c: 87: masterOpResult = isMasterNumber(receivedNumber);
 21222  0054F2  C103  F100         	movff	resCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 21223  0054F6  C104  F101         	movff	resCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 21224  0054FA  EC58  F02B         	call	_isMasterNumber	;wreg free
 21225  0054FE  0101               	movlb	1	; () banked
 21226  005500  6F08               	movwf	resCmdFsm@masterOpResult& (0+255),b
 21227                           
 21228                           ; BSR set to: 1
 21229                           ;cmd_res.c: 88: if (masterOpResult == OP_SUCCESS)
 21230  005502  5108               	movf	resCmdFsm@masterOpResult& (0+255),w,b
 21231  005504  A4D8               	btfss	status,2,c
 21232  005506  D002               	goto	l2821
 21233                           
 21234                           ; BSR set to: 1
 21235                           ;cmd_res.c: 89: {
 21236                           ;cmd_res.c: 90: currentState = RES_FSM_RESET;
 21237  005508  0E01               	movlw	1
 21238  00550A  D017               	goto	L30
 21239  00550C                     l2821:
 21240                           
 21241                           ; BSR set to: 1
 21242                           ;cmd_res.c: 92: else if (masterOpResult == OP_FAILED)
 21243                           
 21244                           ; BSR set to: 1
 21245  00550C  0508               	decf	resCmdFsm@masterOpResult& (0+255),w,b
 21246  00550E  A4D8               	btfss	status,2,c
 21247  005510  D020               	goto	l2824
 21248                           
 21249                           ; BSR set to: 1
 21250                           ;cmd_res.c: 93: {
 21251                           ;cmd_res.c: 94: currentState = RES_FSM_COMPLETE;
 21252  005512  0E02               	movlw	2
 21253  005514  D012               	goto	L30
 21254  005516                     
 21255                           ; BSR set to: 1
 21256                           ;cmd_res.c: 99: if (Eeprom_Reset() == 0)
 21257                           
 21258                           ; BSR set to: 1
 21259  005516  EC35  F02E         	call	_Eeprom_Reset	;wreg free
 21260  00551A  0900               	iorlw	0
 21261  00551C  A4D8               	btfss	status,2,c
 21262  00551E  D019               	goto	l2824
 21263                           
 21264                           ;cmd_res.c: 100: {
 21265                           ;cmd_res.c: 101: currentState = RES_FSM_COMPLETE;
 21266  005520  0E02               	movlw	2
 21267  005522  0101               	movlb	1	; () banked
 21268  005524  6FD4               	movwf	resCmdFsm@currentState& (0+255),b
 21269                           
 21270                           ; BSR set to: 1
 21271                           ;cmd_res.c: 102: *isCmdSuccessfull = 1;
 21272  005526  C105  FFD9         	movff	resCmdFsm@isCmdSuccessfull,fsr2l
 21273  00552A  C106  FFDA         	movff	resCmdFsm@isCmdSuccessfull+1,fsr2h
 21274  00552E  0E01               	movlw	1
 21275  005530  6EDF               	movwf	indf2,c
 21276                           
 21277                           ; BSR set to: 1
 21278                           ;cmd_res.c: 103: }
 21279                           ;cmd_res.c: 104: break;
 21280  005532  D00F               	goto	l2824
 21281  005534                     
 21282                           ; BSR set to: 1
 21283                           ;cmd_res.c: 107: isComplete = 1;
 21284                           
 21285                           ; BSR set to: 1
 21286  005534  0E01               	movlw	1
 21287  005536  6F07               	movwf	resCmdFsm@isComplete& (0+255),b
 21288                           
 21289                           ;cmd_res.c: 108: currentState = RES_FSM_CHECK_MASTER;
 21290  005538  0E00               	movlw	0
 21291  00553A                     L30:
 21292  00553A  6FD4               	movwf	resCmdFsm@currentState& (0+255),b
 21293                           
 21294                           ; BSR set to: 1
 21295                           ;cmd_res.c: 113: }
 21296                           
 21297                           ; BSR set to: 1
 21298                           ;cmd_res.c: 112: break;
 21299                           
 21300                           ;cmd_res.c: 111: default:
 21301                           
 21302                           ;cmd_res.c: 109: break;
 21303  00553C  D00A               	goto	l2824
 21304  00553E                     l2819:
 21305                           
 21306                           ; BSR set to: 1
 21307                           
 21308                           ; BSR set to: 1
 21309  00553E  51D4               	movf	resCmdFsm@currentState& (0+255),w,b
 21310                           
 21311                           ; Switch size 1, requested type "space"
 21312                           ; Number of cases is 3, Range of values is 0 to 2
 21313                           ; switch strategies available:
 21314                           ; Name         Instructions Cycles
 21315                           ; simple_byte           10     6 (average)
 21316                           ;	Chosen strategy is simple_byte
 21317  005540  0A00               	xorlw	0	; case 0
 21318  005542  B4D8               	btfsc	status,2,c
 21319  005544  D7D0               	goto	l2820
 21320  005546  0A01               	xorlw	1	; case 1
 21321  005548  B4D8               	btfsc	status,2,c
 21322  00554A  D7E5               	goto	l2825
 21323  00554C  0A03               	xorlw	3	; case 2
 21324  00554E  B4D8               	btfsc	status,2,c
 21325  005550  D7F1               	goto	l2827
 21326  005552                     l2824:
 21327                           
 21328                           ;cmd_res.c: 114: return isComplete;
 21329                           
 21330                           ; BSR set to: 1
 21331  005552  0101               	movlb	1	; () banked
 21332  005554  5107               	movf	resCmdFsm@isComplete& (0+255),w,b
 21333  005556  0012               	return	
 21334  005558                     __end_of_resCmdFsm:
 21335                           	opt stack 0
 21336                           tosu	equ	0xFFF
 21337                           tosh	equ	0xFFE
 21338                           tosl	equ	0xFFD
 21339                           pclath	equ	0xFFA
 21340                           tblptru	equ	0xFF8
 21341                           tblptrh	equ	0xFF7
 21342                           tblptrl	equ	0xFF6
 21343                           tablat	equ	0xFF5
 21344                           prodh	equ	0xFF4
 21345                           prodl	equ	0xFF3
 21346                           intcon	equ	0xFF2
 21347                           intcon2	equ	0xFF1
 21348                           intcon3	equ	0xFF0
 21349                           indf0	equ	0xFEF
 21350                           postinc0	equ	0xFEE
 21351                           plusw0	equ	0xFEB
 21352                           fsr0h	equ	0xFEA
 21353                           fsr0l	equ	0xFE9
 21354                           wreg	equ	0xFE8
 21355                           indf1	equ	0xFE7
 21356                           postinc1	equ	0xFE6
 21357                           postdec1	equ	0xFE5
 21358                           fsr1h	equ	0xFE2
 21359                           fsr1l	equ	0xFE1
 21360                           indf2	equ	0xFDF
 21361                           postinc2	equ	0xFDE
 21362                           postdec2	equ	0xFDD
 21363                           plusw2	equ	0xFDB
 21364                           fsr2h	equ	0xFDA
 21365                           fsr2l	equ	0xFD9
 21366                           status	equ	0xFD8
 21367                           
 21368 ;; *************** function _Eeprom_Reset *****************
 21369 ;; Defined at:
 21370 ;;		line 131 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 21371 ;; Parameters:    Size  Location     Type
 21372 ;;		None
 21373 ;; Auto vars:     Size  Location     Type
 21374 ;;  SlaveAddress    1   37[BANK0 ] const unsigned char 
 21375 ;; Return value:  Size  Location     Type
 21376 ;;                  1    wreg      unsigned char 
 21377 ;; Registers used:
 21378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21379 ;; Tracked objects:
 21380 ;;		On entry : 0/0
 21381 ;;		On exit  : 0/0
 21382 ;;		Unchanged: 0/0
 21383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21385 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21387 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21388 ;;Total ram usage:        1 bytes
 21389 ;; Hardware stack levels used:    1
 21390 ;; Hardware stack levels required when called:   13
 21391 ;; This function calls:
 21392 ;;		_ClearBuffer
 21393 ;;		_I2cSlv_SendI2cMsg
 21394 ;; This function is called by:
 21395 ;;		_resCmdFsm
 21396 ;; This function uses a non-reentrant model
 21397 ;;
 21398                           
 21399                           	psect	text94
 21400  005C6A                     __ptext94:
 21401                           	opt stack 0
 21402  005C6A                     _Eeprom_Reset:
 21403                           	opt stack 13
 21404                           
 21405                           ;eeprom_if.c: 133: const UINT8 SlaveAddress = 0x50;
 21406                           
 21407                           ; BSR set to: 1
 21408                           ;incstack = 0
 21409  005C6A  0E50               	movlw	80
 21410  005C6C  0100               	movlb	0	; () banked
 21411  005C6E  6F85               	movwf	Eeprom_Reset@SlaveAddress& (0+255),b
 21412                           
 21413                           ;eeprom_if.c: 134: static UINT8 memoryAddress = 0;
 21414                           ;eeprom_if.c: 136: if (memoryAddress == 0)
 21415  005C70  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 21416  005C72  A4D8               	btfss	status,2,c
 21417  005C74  D00A               	goto	l2045
 21418                           
 21419                           ; BSR set to: 0
 21420                           ;eeprom_if.c: 137: {
 21421                           ;eeprom_if.c: 138: ClearBuffer(EepromBuffer, 15);
 21422  005C76  0EBB               	movlw	low _EepromBuffer
 21423  005C78  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 21424  005C7A  0E04               	movlw	high _EepromBuffer
 21425  005C7C  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 21426  005C7E  0E00               	movlw	0
 21427  005C80  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 21428  005C82  0E0F               	movlw	15
 21429  005C84  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 21430  005C86  EC39  F033         	call	_ClearBuffer	;wreg free
 21431  005C8A                     l2045:
 21432                           
 21433                           ;eeprom_if.c: 139: }
 21434                           ;eeprom_if.c: 141: EepromBuffer[0] = memoryAddress;
 21435  005C8A  C0C6  F4BB         	movff	Eeprom_Reset@memoryAddress,_EepromBuffer
 21436                           
 21437                           ;eeprom_if.c: 142: I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, 15);
 21438  005C8E  0EBB               	movlw	low _EepromBuffer
 21439  005C90  0100               	movlb	0	; () banked
 21440  005C92  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 21441  005C94  0E04               	movlw	high _EepromBuffer
 21442  005C96  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 21443  005C98  C085  F082         	movff	Eeprom_Reset@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 21444  005C9C  0E0F               	movlw	15
 21445  005C9E  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 21446  005CA0  EC31  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 21447                           
 21448                           ;eeprom_if.c: 144: memoryAddress += 16;
 21449  005CA4  0E10               	movlw	16
 21450  005CA6  0100               	movlb	0	; () banked
 21451  005CA8  27C6               	addwf	Eeprom_Reset@memoryAddress& (0+255),f,b
 21452                           
 21453                           ; BSR set to: 0
 21454                           ;eeprom_if.c: 145: if (memoryAddress >= 224)
 21455  005CAA  0EDF               	movlw	223
 21456  005CAC  65C6               	cpfsgt	Eeprom_Reset@memoryAddress& (0+255),b
 21457  005CAE  D006               	goto	l2046
 21458                           
 21459                           ; BSR set to: 0
 21460                           ;eeprom_if.c: 146: {
 21461                           ;eeprom_if.c: 147: EepromBuffer[0] = 0;
 21462  005CB0  0E00               	movlw	0
 21463  005CB2  0104               	movlb	4	; () banked
 21464  005CB4  6FBB               	movwf	_EepromBuffer& (0+255),b
 21465                           
 21466                           ;eeprom_if.c: 148: memoryAddress = 0;
 21467  005CB6  0E00               	movlw	0
 21468  005CB8  0100               	movlb	0	; () banked
 21469  005CBA  6FC6               	movwf	Eeprom_Reset@memoryAddress& (0+255),b
 21470  005CBC                     l2046:
 21471                           
 21472                           ; BSR set to: 0
 21473                           ;eeprom_if.c: 149: }
 21474                           ;eeprom_if.c: 150: return memoryAddress;
 21475  005CBC  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 21476  005CBE  0012               	return	
 21477  005CC0                     __end_of_Eeprom_Reset:
 21478                           	opt stack 0
 21479                           tosu	equ	0xFFF
 21480                           tosh	equ	0xFFE
 21481                           tosl	equ	0xFFD
 21482                           pclath	equ	0xFFA
 21483                           tblptru	equ	0xFF8
 21484                           tblptrh	equ	0xFF7
 21485                           tblptrl	equ	0xFF6
 21486                           tablat	equ	0xFF5
 21487                           prodh	equ	0xFF4
 21488                           prodl	equ	0xFF3
 21489                           intcon	equ	0xFF2
 21490                           intcon2	equ	0xFF1
 21491                           intcon3	equ	0xFF0
 21492                           indf0	equ	0xFEF
 21493                           postinc0	equ	0xFEE
 21494                           plusw0	equ	0xFEB
 21495                           fsr0h	equ	0xFEA
 21496                           fsr0l	equ	0xFE9
 21497                           wreg	equ	0xFE8
 21498                           indf1	equ	0xFE7
 21499                           postinc1	equ	0xFE6
 21500                           postdec1	equ	0xFE5
 21501                           fsr1h	equ	0xFE2
 21502                           fsr1l	equ	0xFE1
 21503                           indf2	equ	0xFDF
 21504                           postinc2	equ	0xFDE
 21505                           postdec2	equ	0xFDD
 21506                           plusw2	equ	0xFDB
 21507                           fsr2h	equ	0xFDA
 21508                           fsr2l	equ	0xFD9
 21509                           status	equ	0xFD8
 21510                           
 21511 ;; *************** function _initFsm *****************
 21512 ;; Defined at:
 21513 ;;		line 274 in file "../Source/c/04_App/cmd_init.c"
 21514 ;; Parameters:    Size  Location     Type
 21515 ;;  isCmdSuccess    2    3[BANK1 ] PTR unsigned char 
 21516 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 21517 ;; Auto vars:     Size  Location     Type
 21518 ;;  isInitialize    1    5[BANK1 ] unsigned char 
 21519 ;; Return value:  Size  Location     Type
 21520 ;;                  1    wreg      unsigned char 
 21521 ;; Registers used:
 21522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21523 ;; Tracked objects:
 21524 ;;		On entry : 0/0
 21525 ;;		On exit  : 0/0
 21526 ;;		Unchanged: 0/0
 21527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21528 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21529 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21531 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21532 ;;Total ram usage:        3 bytes
 21533 ;; Hardware stack levels used:    1
 21534 ;; Hardware stack levels required when called:   18
 21535 ;; This function calls:
 21536 ;;		_GetCallerNumber
 21537 ;;		_Led_SetLedStatus
 21538 ;;		_detectUsbNumber
 21539 ;;		_initEeprom
 21540 ;;		_initGprsModem
 21541 ;;		_saveNumberInMemory
 21542 ;;		_savePreamble
 21543 ;;		_waitSetupCall
 21544 ;; This function is called by:
 21545 ;;		_MyApp_Task
 21546 ;; This function uses a non-reentrant model
 21547 ;;
 21548                           
 21549                           	psect	text95
 21550  004442                     __ptext95:
 21551                           	opt stack 0
 21552  004442                     _initFsm:
 21553                           	opt stack 9
 21554                           
 21555                           ;cmd_init.c: 276: static initFsmStates currentState = INIT_FSM_MODEM;
 21556                           ;cmd_init.c: 277: bool isInitialized = 0;
 21557                           
 21558                           ; BSR set to: 0
 21559                           ;incstack = 0
 21560  004442  0E00               	movlw	0
 21561  004444  0101               	movlb	1	; () banked
 21562  004446  6F05               	movwf	initFsm@isInitialized& (0+255),b
 21563                           
 21564                           ;cmd_init.c: 279: switch (currentState)
 21565  004448  D049               	goto	l2786
 21566  00444A                     
 21567                           ; BSR set to: 1
 21568                           ;cmd_init.c: 282: if (initGprsModem())
 21569                           
 21570                           ; BSR set to: 1
 21571  00444A  EC40  F028         	call	_initGprsModem	;wreg free
 21572  00444E  0900               	iorlw	0
 21573  004450  B4D8               	btfsc	status,2,c
 21574  004452  D054               	goto	l2789
 21575                           
 21576                           ;cmd_init.c: 283: {
 21577                           ;cmd_init.c: 284: currentState = INIT_FSM_EEPROM;
 21578  004454  0E01               	movlw	1
 21579  004456  D033               	goto	L34
 21580  004458                     
 21581                           ; BSR set to: 1
 21582                           ;cmd_init.c: 289: if (initEeprom())
 21583                           
 21584                           ; BSR set to: 1
 21585  004458  EC8A  F028         	call	_initEeprom	;wreg free
 21586  00445C  0900               	iorlw	0
 21587  00445E  B4D8               	btfsc	status,2,c
 21588  004460  D04D               	goto	l2789
 21589                           
 21590                           ;cmd_init.c: 290: {
 21591                           ;cmd_init.c: 291: currentState = INIT_FSM_WAIT_CMD;
 21592  004462  0E02               	movlw	2
 21593  004464  0101               	movlb	1	; () banked
 21594  004466  6FD5               	movwf	initFsm@currentState& (0+255),b
 21595                           
 21596                           ;cmd_init.c: 292: setupCallTicks = 0;
 21597  004468  0E00               	movlw	0
 21598  00446A  0103               	movlb	3	; () banked
 21599  00446C  6FC2               	movwf	(_setupCallTicks+1)& (0+255),b
 21600  00446E  0E00               	movlw	0
 21601  004470  6FC1               	movwf	_setupCallTicks& (0+255),b
 21602                           
 21603                           ; BSR set to: 3
 21604                           ;cmd_init.c: 293: }
 21605                           ;cmd_init.c: 294: break;
 21606  004472  D044               	goto	l2789
 21607  004474                     
 21608                           ;cmd_init.c: 297: if (isMemoryEmpty)
 21609                           
 21610                           ; BSR set to: 3
 21611  004474  0101               	movlb	1	; () banked
 21612  004476  51FE               	movf	_isMemoryEmpty& (0+255),w,b
 21613  004478  B4D8               	btfsc	status,2,c
 21614  00447A  D01C               	goto	l2793
 21615                           
 21616                           ; BSR set to: 1
 21617                           ;cmd_init.c: 298: {
 21618                           ;cmd_init.c: 299: if (waitSetupCall())
 21619  00447C  ECFC  F02F         	call	_waitSetupCall	;wreg free
 21620  004480  0900               	iorlw	0
 21621  004482  B4D8               	btfsc	status,2,c
 21622  004484  D00C               	goto	l2794
 21623                           
 21624                           ;cmd_init.c: 300: {
 21625                           ;cmd_init.c: 301: saveNumberInMemory(16, GetCallerNumber());
 21626  004486  EC1E  F033         	call	_GetCallerNumber	;wreg free
 21627  00448A  C083  F096         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
 21628  00448E  C084  F097         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
 21629  004492  0E10               	movlw	16
 21630  004494  ECE3  F035         	call	_saveNumberInMemory
 21631                           
 21632                           ;cmd_init.c: 302: currentState = INIT_FSM_PREAMBLE;
 21633  004498  0E03               	movlw	3
 21634  00449A  0101               	movlb	1	; () banked
 21635  00449C  6FD5               	movwf	initFsm@currentState& (0+255),b
 21636  00449E                     l2794:
 21637                           
 21638                           ;cmd_init.c: 303: }
 21639                           ;cmd_init.c: 304: if (detectUsbNumber(isCmdSuccessfull))
 21640                           
 21641                           ; BSR set to: 1
 21642  00449E  C103  F099         	movff	initFsm@isCmdSuccessfull,detectUsbNumber@isCmdSuccessfull
 21643  0044A2  C104  F09A         	movff	initFsm@isCmdSuccessfull+1,detectUsbNumber@isCmdSuccessfull+1
 21644  0044A6  ECAB  F032         	call	_detectUsbNumber	;wreg free
 21645  0044AA  0900               	iorlw	0
 21646  0044AC  B4D8               	btfsc	status,2,c
 21647  0044AE  D026               	goto	l2789
 21648                           
 21649                           ;cmd_init.c: 305: {
 21650                           ;cmd_init.c: 306: currentState = INIT_FSM_PREAMBLE;
 21651  0044B0  0E03               	movlw	3
 21652  0044B2  D005               	goto	L34
 21653  0044B4                     l2793:
 21654                           
 21655                           ; BSR set to: 1
 21656                           ;cmd_init.c: 309: else
 21657                           ;cmd_init.c: 310: {
 21658                           ;cmd_init.c: 311: currentState = INIT_FSM_COMPLETE;
 21659                           
 21660                           ; BSR set to: 1
 21661  0044B4  0E04               	movlw	4
 21662  0044B6  D004               	goto	L33
 21663  0044B8                     
 21664                           ; BSR set to: 1
 21665                           ;cmd_init.c: 316: savePreamble();
 21666                           
 21667                           ; BSR set to: 1
 21668  0044B8  ECD6  F035         	call	_savePreamble	;wreg free
 21669                           
 21670                           ;cmd_init.c: 317: currentState = INIT_FSM_COMPLETE;
 21671  0044BC  0E04               	movlw	4
 21672  0044BE                     L34:
 21673  0044BE  0101               	movlb	1	; () banked
 21674  0044C0                     L33:
 21675  0044C0  6FD5               	movwf	initFsm@currentState& (0+255),b
 21676                           
 21677                           ;cmd_init.c: 318: break;
 21678  0044C2  D01C               	goto	l2789
 21679  0044C4                     
 21680                           ; BSR set to: 1
 21681                           ;cmd_init.c: 321: Led_SetLedStatus(1u, LED_STS_ON);
 21682                           
 21683                           ; BSR set to: 1
 21684  0044C4  0E01               	movlw	1
 21685  0044C6  0100               	movlb	0	; () banked
 21686  0044C8  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21687  0044CA  0E01               	movlw	1
 21688  0044CC  ECE8  F033         	call	_Led_SetLedStatus
 21689                           
 21690                           ;cmd_init.c: 322: currentState = INIT_FSM_MODEM;
 21691  0044D0  0E00               	movlw	0
 21692  0044D2  0101               	movlb	1	; () banked
 21693  0044D4  6FD5               	movwf	initFsm@currentState& (0+255),b
 21694                           
 21695                           ; BSR set to: 1
 21696                           ;cmd_init.c: 323: isInitialized = 1;
 21697  0044D6  0E01               	movlw	1
 21698  0044D8  6F05               	movwf	initFsm@isInitialized& (0+255),b
 21699                           
 21700                           ; BSR set to: 1
 21701                           ;cmd_init.c: 328: }
 21702                           
 21703                           ; BSR set to: 1
 21704                           ;cmd_init.c: 327: break;
 21705                           
 21706                           ;cmd_init.c: 326: default:
 21707                           
 21708                           ;cmd_init.c: 324: break;
 21709  0044DA  D010               	goto	l2789
 21710  0044DC                     l2786:
 21711                           
 21712                           ; BSR set to: 1
 21713                           
 21714                           ; BSR set to: 1
 21715  0044DC  51D5               	movf	initFsm@currentState& (0+255),w,b
 21716                           
 21717                           ; Switch size 1, requested type "space"
 21718                           ; Number of cases is 5, Range of values is 0 to 4
 21719                           ; switch strategies available:
 21720                           ; Name         Instructions Cycles
 21721                           ; simple_byte           16     9 (average)
 21722                           ;	Chosen strategy is simple_byte
 21723  0044DE  0A00               	xorlw	0	; case 0
 21724  0044E0  B4D8               	btfsc	status,2,c
 21725  0044E2  D7B3               	goto	l2787
 21726  0044E4  0A01               	xorlw	1	; case 1
 21727  0044E6  B4D8               	btfsc	status,2,c
 21728  0044E8  D7B7               	goto	l2790
 21729  0044EA  0A03               	xorlw	3	; case 2
 21730  0044EC  B4D8               	btfsc	status,2,c
 21731  0044EE  D7C2               	goto	l2792
 21732  0044F0  0A01               	xorlw	1	; case 3
 21733  0044F2  B4D8               	btfsc	status,2,c
 21734  0044F4  D7E1               	goto	l2797
 21735  0044F6  0A07               	xorlw	7	; case 4
 21736  0044F8  B4D8               	btfsc	status,2,c
 21737  0044FA  D7E4               	goto	l2798
 21738  0044FC                     l2789:
 21739                           
 21740                           ;cmd_init.c: 329: return isInitialized;
 21741                           
 21742                           ; BSR set to: 1
 21743  0044FC  0101               	movlb	1	; () banked
 21744  0044FE  5105               	movf	initFsm@isInitialized& (0+255),w,b
 21745  004500  0012               	return	
 21746  004502                     __end_of_initFsm:
 21747                           	opt stack 0
 21748                           tosu	equ	0xFFF
 21749                           tosh	equ	0xFFE
 21750                           tosl	equ	0xFFD
 21751                           pclath	equ	0xFFA
 21752                           tblptru	equ	0xFF8
 21753                           tblptrh	equ	0xFF7
 21754                           tblptrl	equ	0xFF6
 21755                           tablat	equ	0xFF5
 21756                           prodh	equ	0xFF4
 21757                           prodl	equ	0xFF3
 21758                           intcon	equ	0xFF2
 21759                           intcon2	equ	0xFF1
 21760                           intcon3	equ	0xFF0
 21761                           indf0	equ	0xFEF
 21762                           postinc0	equ	0xFEE
 21763                           plusw0	equ	0xFEB
 21764                           fsr0h	equ	0xFEA
 21765                           fsr0l	equ	0xFE9
 21766                           wreg	equ	0xFE8
 21767                           indf1	equ	0xFE7
 21768                           postinc1	equ	0xFE6
 21769                           postdec1	equ	0xFE5
 21770                           fsr1h	equ	0xFE2
 21771                           fsr1l	equ	0xFE1
 21772                           indf2	equ	0xFDF
 21773                           postinc2	equ	0xFDE
 21774                           postdec2	equ	0xFDD
 21775                           plusw2	equ	0xFDB
 21776                           fsr2h	equ	0xFDA
 21777                           fsr2l	equ	0xFD9
 21778                           status	equ	0xFD8
 21779                           
 21780 ;; *************** function _waitSetupCall *****************
 21781 ;; Defined at:
 21782 ;;		line 239 in file "../Source/c/04_App/cmd_init.c"
 21783 ;; Parameters:    Size  Location     Type
 21784 ;;		None
 21785 ;; Auto vars:     Size  Location     Type
 21786 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 21787 ;; Return value:  Size  Location     Type
 21788 ;;                  1    wreg      unsigned char 
 21789 ;; Registers used:
 21790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21791 ;; Tracked objects:
 21792 ;;		On entry : 0/0
 21793 ;;		On exit  : 0/0
 21794 ;;		Unchanged: 0/0
 21795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21799 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21800 ;;Total ram usage:        1 bytes
 21801 ;; Hardware stack levels used:    1
 21802 ;; Hardware stack levels required when called:   15
 21803 ;; This function calls:
 21804 ;;		_Led_SetLedStatus
 21805 ;;		_getSetupCall
 21806 ;;		_secondsAppTimer
 21807 ;; This function is called by:
 21808 ;;		_initFsm
 21809 ;; This function uses a non-reentrant model
 21810 ;;
 21811                           
 21812                           	psect	text96
 21813  005FF8                     __ptext96:
 21814                           	opt stack 0
 21815  005FF8                     _waitSetupCall:
 21816                           	opt stack 11
 21817                           
 21818                           ;cmd_init.c: 241: bool isCallArrived = 0;
 21819                           
 21820                           ; BSR set to: 1
 21821                           ;incstack = 0
 21822  005FF8  0E00               	movlw	0
 21823  005FFA  0100               	movlb	0	; () banked
 21824  005FFC  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21825                           
 21826                           ; BSR set to: 0
 21827                           ;cmd_init.c: 242: if (!secondsAppTimer(30, &setupCallTicks, 0))
 21828  005FFE  0EC1               	movlw	low _setupCallTicks
 21829  006000  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21830  006002  0E03               	movlw	high _setupCallTicks
 21831  006004  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21832  006006  0E00               	movlw	0
 21833  006008  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21834  00600A  0E1E               	movlw	30
 21835  00600C  EC41  F025         	call	_secondsAppTimer
 21836  006010  0900               	iorlw	0
 21837  006012  A4D8               	btfss	status,2,c
 21838  006014  D00F               	goto	l2775
 21839                           
 21840                           ;cmd_init.c: 243: {
 21841                           ;cmd_init.c: 244: Led_SetLedStatus(1u, LED_STS_BLINK);
 21842  006016  0E03               	movlw	3
 21843  006018  0100               	movlb	0	; () banked
 21844  00601A  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21845  00601C  0E01               	movlw	1
 21846  00601E  ECE8  F033         	call	_Led_SetLedStatus
 21847                           
 21848                           ;cmd_init.c: 245: if (getSetupCall())
 21849  006022  EC53  F035         	call	_getSetupCall	;wreg free
 21850  006026  0900               	iorlw	0
 21851  006028  B4D8               	btfsc	status,2,c
 21852  00602A  D00A               	goto	l2777
 21853                           
 21854                           ;cmd_init.c: 246: {
 21855                           ;cmd_init.c: 247: isCallArrived = 1;
 21856  00602C  0E01               	movlw	1
 21857  00602E  0100               	movlb	0	; () banked
 21858  006030  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21859                           
 21860                           ; BSR set to: 0
 21861                           ;cmd_init.c: 248: }
 21862                           ;cmd_init.c: 249: }
 21863  006032  D006               	goto	l2777
 21864  006034                     l2775:
 21865                           
 21866                           ;cmd_init.c: 250: else
 21867                           ;cmd_init.c: 251: {
 21868                           ;cmd_init.c: 252: Led_SetLedStatus(1u, LED_STS_ON);
 21869                           
 21870                           ; BSR set to: 0
 21871  006034  0E01               	movlw	1
 21872  006036  0100               	movlb	0	; () banked
 21873  006038  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21874  00603A  0E01               	movlw	1
 21875  00603C  ECE8  F033         	call	_Led_SetLedStatus
 21876  006040                     l2777:
 21877                           
 21878                           ;cmd_init.c: 253: }
 21879                           ;cmd_init.c: 254: return isCallArrived;
 21880  006040  0100               	movlb	0	; () banked
 21881  006042  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 21882  006044  0012               	return	
 21883  006046                     __end_of_waitSetupCall:
 21884                           	opt stack 0
 21885                           tosu	equ	0xFFF
 21886                           tosh	equ	0xFFE
 21887                           tosl	equ	0xFFD
 21888                           pclath	equ	0xFFA
 21889                           tblptru	equ	0xFF8
 21890                           tblptrh	equ	0xFF7
 21891                           tblptrl	equ	0xFF6
 21892                           tablat	equ	0xFF5
 21893                           prodh	equ	0xFF4
 21894                           prodl	equ	0xFF3
 21895                           intcon	equ	0xFF2
 21896                           intcon2	equ	0xFF1
 21897                           intcon3	equ	0xFF0
 21898                           indf0	equ	0xFEF
 21899                           postinc0	equ	0xFEE
 21900                           plusw0	equ	0xFEB
 21901                           fsr0h	equ	0xFEA
 21902                           fsr0l	equ	0xFE9
 21903                           wreg	equ	0xFE8
 21904                           indf1	equ	0xFE7
 21905                           postinc1	equ	0xFE6
 21906                           postdec1	equ	0xFE5
 21907                           fsr1h	equ	0xFE2
 21908                           fsr1l	equ	0xFE1
 21909                           indf2	equ	0xFDF
 21910                           postinc2	equ	0xFDE
 21911                           postdec2	equ	0xFDD
 21912                           plusw2	equ	0xFDB
 21913                           fsr2h	equ	0xFDA
 21914                           fsr2l	equ	0xFD9
 21915                           status	equ	0xFD8
 21916                           
 21917 ;; *************** function _getSetupCall *****************
 21918 ;; Defined at:
 21919 ;;		line 221 in file "../Source/c/04_App/cmd_init.c"
 21920 ;; Parameters:    Size  Location     Type
 21921 ;;		None
 21922 ;; Auto vars:     Size  Location     Type
 21923 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 21924 ;; Return value:  Size  Location     Type
 21925 ;;                  1    wreg      unsigned char 
 21926 ;; Registers used:
 21927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21928 ;; Tracked objects:
 21929 ;;		On entry : 0/0
 21930 ;;		On exit  : 0/0
 21931 ;;		Unchanged: 0/0
 21932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21934 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21936 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21937 ;;Total ram usage:        1 bytes
 21938 ;; Hardware stack levels used:    1
 21939 ;; Hardware stack levels required when called:   14
 21940 ;; This function calls:
 21941 ;;		_Mdm_HangPhoneCall
 21942 ;;		_Mdm_IsRinging
 21943 ;; This function is called by:
 21944 ;;		_waitSetupCall
 21945 ;; This function uses a non-reentrant model
 21946 ;;
 21947                           
 21948                           	psect	text97
 21949  006AA6                     __ptext97:
 21950                           	opt stack 0
 21951  006AA6                     _getSetupCall:
 21952                           	opt stack 11
 21953                           
 21954                           ;cmd_init.c: 223: bool isCalledReceived = 0;
 21955                           
 21956                           ; BSR set to: 0
 21957                           ;incstack = 0
 21958  006AA6  0E00               	movlw	0
 21959  006AA8  0100               	movlb	0	; () banked
 21960  006AAA  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21961                           
 21962                           ; BSR set to: 0
 21963                           ;cmd_init.c: 225: if (Mdm_IsRinging())
 21964  006AAC  ECB9  F034         	call	_Mdm_IsRinging	;wreg free
 21965  006AB0  0900               	iorlw	0
 21966  006AB2  B4D8               	btfsc	status,2,c
 21967  006AB4  D005               	goto	l2771
 21968                           
 21969                           ;cmd_init.c: 226: {
 21970                           ;cmd_init.c: 227: Mdm_HangPhoneCall();
 21971  006AB6  EC53  F036         	call	_Mdm_HangPhoneCall	;wreg free
 21972                           
 21973                           ;cmd_init.c: 228: isCalledReceived = 1;
 21974  006ABA  0E01               	movlw	1
 21975  006ABC  0100               	movlb	0	; () banked
 21976  006ABE  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21977  006AC0                     l2771:
 21978                           
 21979                           ;cmd_init.c: 229: }
 21980                           ;cmd_init.c: 230: return isCalledReceived;
 21981                           
 21982                           ; BSR set to: 0
 21983  006AC0  0100               	movlb	0	; () banked
 21984  006AC2  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21985  006AC4  0012               	return	
 21986  006AC6                     __end_of_getSetupCall:
 21987                           	opt stack 0
 21988                           tosu	equ	0xFFF
 21989                           tosh	equ	0xFFE
 21990                           tosl	equ	0xFFD
 21991                           pclath	equ	0xFFA
 21992                           tblptru	equ	0xFF8
 21993                           tblptrh	equ	0xFF7
 21994                           tblptrl	equ	0xFF6
 21995                           tablat	equ	0xFF5
 21996                           prodh	equ	0xFF4
 21997                           prodl	equ	0xFF3
 21998                           intcon	equ	0xFF2
 21999                           intcon2	equ	0xFF1
 22000                           intcon3	equ	0xFF0
 22001                           indf0	equ	0xFEF
 22002                           postinc0	equ	0xFEE
 22003                           plusw0	equ	0xFEB
 22004                           fsr0h	equ	0xFEA
 22005                           fsr0l	equ	0xFE9
 22006                           wreg	equ	0xFE8
 22007                           indf1	equ	0xFE7
 22008                           postinc1	equ	0xFE6
 22009                           postdec1	equ	0xFE5
 22010                           fsr1h	equ	0xFE2
 22011                           fsr1l	equ	0xFE1
 22012                           indf2	equ	0xFDF
 22013                           postinc2	equ	0xFDE
 22014                           postdec2	equ	0xFDD
 22015                           plusw2	equ	0xFDB
 22016                           fsr2h	equ	0xFDA
 22017                           fsr2l	equ	0xFD9
 22018                           status	equ	0xFD8
 22019                           
 22020 ;; *************** function _savePreamble *****************
 22021 ;; Defined at:
 22022 ;;		line 260 in file "../Source/c/04_App/cmd_init.c"
 22023 ;; Parameters:    Size  Location     Type
 22024 ;;		None
 22025 ;; Auto vars:     Size  Location     Type
 22026 ;;		None
 22027 ;; Return value:  Size  Location     Type
 22028 ;;                  1    wreg      void 
 22029 ;; Registers used:
 22030 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22031 ;; Tracked objects:
 22032 ;;		On entry : 0/0
 22033 ;;		On exit  : 0/0
 22034 ;;		Unchanged: 0/0
 22035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22040 ;;Total ram usage:        0 bytes
 22041 ;; Hardware stack levels used:    1
 22042 ;; Hardware stack levels required when called:   14
 22043 ;; This function calls:
 22044 ;;		_Eeprom_Write
 22045 ;;		_initPreamble
 22046 ;; This function is called by:
 22047 ;;		_initFsm
 22048 ;; This function uses a non-reentrant model
 22049 ;;
 22050                           
 22051                           	psect	text98
 22052  006BAC                     __ptext98:
 22053                           	opt stack 0
 22054  006BAC                     _savePreamble:
 22055                           	opt stack 12
 22056                           
 22057                           ;cmd_init.c: 262: Eeprom_Write(0, initPreamble(), 4);
 22058                           
 22059                           ; BSR set to: 0
 22060                           ;incstack = 0
 22061  006BAC  EC91  F035         	call	_initPreamble	;wreg free
 22062  006BB0  C07D  F08F         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 22063  006BB4  C07E  F090         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 22064  006BB8  0E04               	movlw	4
 22065  006BBA  0100               	movlb	0	; () banked
 22066  006BBC  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 22067  006BBE  0E00               	movlw	0
 22068  006BC0  EC32  F02F         	call	_Eeprom_Write
 22069  006BC4  0012               	return		;funcret
 22070  006BC6                     __end_of_savePreamble:
 22071                           	opt stack 0
 22072                           tosu	equ	0xFFF
 22073                           tosh	equ	0xFFE
 22074                           tosl	equ	0xFFD
 22075                           pclath	equ	0xFFA
 22076                           tblptru	equ	0xFF8
 22077                           tblptrh	equ	0xFF7
 22078                           tblptrl	equ	0xFF6
 22079                           tablat	equ	0xFF5
 22080                           prodh	equ	0xFF4
 22081                           prodl	equ	0xFF3
 22082                           intcon	equ	0xFF2
 22083                           intcon2	equ	0xFF1
 22084                           intcon3	equ	0xFF0
 22085                           indf0	equ	0xFEF
 22086                           postinc0	equ	0xFEE
 22087                           plusw0	equ	0xFEB
 22088                           fsr0h	equ	0xFEA
 22089                           fsr0l	equ	0xFE9
 22090                           wreg	equ	0xFE8
 22091                           indf1	equ	0xFE7
 22092                           postinc1	equ	0xFE6
 22093                           postdec1	equ	0xFE5
 22094                           fsr1h	equ	0xFE2
 22095                           fsr1l	equ	0xFE1
 22096                           indf2	equ	0xFDF
 22097                           postinc2	equ	0xFDE
 22098                           postdec2	equ	0xFDD
 22099                           plusw2	equ	0xFDB
 22100                           fsr2h	equ	0xFDA
 22101                           fsr2l	equ	0xFD9
 22102                           status	equ	0xFD8
 22103                           
 22104 ;; *************** function _initPreamble *****************
 22105 ;; Defined at:
 22106 ;;		line 109 in file "../Source/c/04_App/cmd_init.c"
 22107 ;; Parameters:    Size  Location     Type
 22108 ;;		None
 22109 ;; Auto vars:     Size  Location     Type
 22110 ;;		None
 22111 ;; Return value:  Size  Location     Type
 22112 ;;                  2   29[BANK0 ] PTR unsigned char 
 22113 ;; Registers used:
 22114 ;;		wreg, status,2, status,0
 22115 ;; Tracked objects:
 22116 ;;		On entry : 0/0
 22117 ;;		On exit  : 0/0
 22118 ;;		Unchanged: 0/0
 22119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22123 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22124 ;;Total ram usage:        2 bytes
 22125 ;; Hardware stack levels used:    1
 22126 ;; Hardware stack levels required when called:   11
 22127 ;; This function calls:
 22128 ;;		Nothing
 22129 ;; This function is called by:
 22130 ;;		_savePreamble
 22131 ;; This function uses a non-reentrant model
 22132 ;;
 22133                           
 22134                           	psect	text99
 22135  006B22                     __ptext99:
 22136                           	opt stack 0
 22137  006B22                     _initPreamble:
 22138                           	opt stack 14
 22139                           
 22140                           ;cmd_init.c: 111: memoryPreamble[0] = 'U';
 22141                           
 22142                           ;incstack = 0
 22143  006B22  0E55               	movlw	85
 22144  006B24  0103               	movlb	3	; () banked
 22145  006B26  6FAB               	movwf	_memoryPreamble& (0+255),b
 22146                           
 22147                           ;cmd_init.c: 112: memoryPreamble[1] = 'S';
 22148  006B28  0E53               	movlw	83
 22149  006B2A  6FAC               	movwf	(_memoryPreamble+1)& (0+255),b
 22150                           
 22151                           ;cmd_init.c: 113: memoryPreamble[2] = 'I';
 22152  006B2C  0E49               	movlw	73
 22153  006B2E  6FAD               	movwf	(_memoryPreamble+2)& (0+255),b
 22154                           
 22155                           ;cmd_init.c: 114: memoryPreamble[3] = 'M';
 22156  006B30  0E4D               	movlw	77
 22157  006B32  6FAE               	movwf	(_memoryPreamble+3)& (0+255),b
 22158                           
 22159                           ; BSR set to: 3
 22160                           ;cmd_init.c: 115: return memoryPreamble;
 22161  006B34  0EAB               	movlw	low _memoryPreamble
 22162  006B36  0100               	movlb	0	; () banked
 22163  006B38  6F7D               	movwf	?_initPreamble& (0+255),b
 22164  006B3A  0E03               	movlw	high _memoryPreamble
 22165  006B3C  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 22166  006B3E  0012               	return	
 22167  006B40                     __end_of_initPreamble:
 22168                           	opt stack 0
 22169                           tosu	equ	0xFFF
 22170                           tosh	equ	0xFFE
 22171                           tosl	equ	0xFFD
 22172                           pclath	equ	0xFFA
 22173                           tblptru	equ	0xFF8
 22174                           tblptrh	equ	0xFF7
 22175                           tblptrl	equ	0xFF6
 22176                           tablat	equ	0xFF5
 22177                           prodh	equ	0xFF4
 22178                           prodl	equ	0xFF3
 22179                           intcon	equ	0xFF2
 22180                           intcon2	equ	0xFF1
 22181                           intcon3	equ	0xFF0
 22182                           indf0	equ	0xFEF
 22183                           postinc0	equ	0xFEE
 22184                           plusw0	equ	0xFEB
 22185                           fsr0h	equ	0xFEA
 22186                           fsr0l	equ	0xFE9
 22187                           wreg	equ	0xFE8
 22188                           indf1	equ	0xFE7
 22189                           postinc1	equ	0xFE6
 22190                           postdec1	equ	0xFE5
 22191                           fsr1h	equ	0xFE2
 22192                           fsr1l	equ	0xFE1
 22193                           indf2	equ	0xFDF
 22194                           postinc2	equ	0xFDE
 22195                           postdec2	equ	0xFDD
 22196                           plusw2	equ	0xFDB
 22197                           fsr2h	equ	0xFDA
 22198                           fsr2l	equ	0xFD9
 22199                           status	equ	0xFD8
 22200                           
 22201 ;; *************** function _initGprsModem *****************
 22202 ;; Defined at:
 22203 ;;		line 124 in file "../Source/c/04_App/cmd_init.c"
 22204 ;; Parameters:    Size  Location     Type
 22205 ;;		None
 22206 ;; Auto vars:     Size  Location     Type
 22207 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 22208 ;; Return value:  Size  Location     Type
 22209 ;;                  1    wreg      unsigned char 
 22210 ;; Registers used:
 22211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22212 ;; Tracked objects:
 22213 ;;		On entry : 0/0
 22214 ;;		On exit  : 0/0
 22215 ;;		Unchanged: 0/0
 22216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22220 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22221 ;;Total ram usage:        1 bytes
 22222 ;; Hardware stack levels used:    1
 22223 ;; Hardware stack levels required when called:   14
 22224 ;; This function calls:
 22225 ;;		_Mdm_SetSmsFormat
 22226 ;;		_Uart_WriteConstString
 22227 ;;		_secondsAppTimer
 22228 ;; This function is called by:
 22229 ;;		_initFsm
 22230 ;; This function uses a non-reentrant model
 22231 ;;
 22232                           
 22233                           	psect	text100
 22234  005080                     __ptext100:
 22235                           	opt stack 0
 22236  005080                     _initGprsModem:
 22237                           	opt stack 12
 22238                           
 22239                           ;cmd_init.c: 126: static uint16_t modemCounter = 0;
 22240                           ;cmd_init.c: 127: static modemStates currentState = MODEM_INIT;
 22241                           ;cmd_init.c: 128: bool isInitialized = 0;
 22242                           
 22243                           ; BSR set to: 0
 22244                           ;incstack = 0
 22245  005080  0E00               	movlw	0
 22246  005082  0100               	movlb	0	; () banked
 22247  005084  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22248                           
 22249                           ;cmd_init.c: 130: switch(currentState)
 22250  005086  D035               	goto	l2743
 22251  005088                     
 22252                           ;cmd_init.c: 133: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 22253                           
 22254                           ; BSR set to: 0
 22255  005088  0E03               	movlw	3
 22256  00508A  0100               	movlb	0	; () banked
 22257  00508C  19D1               	xorwf	_MdmStatus& (0+255),w,b
 22258  00508E  B4D8               	btfsc	status,2,c
 22259  005090  D003               	goto	u14850
 22260                           
 22261                           ; BSR set to: 0
 22262  005092  05D1               	decf	_MdmStatus& (0+255),w,b
 22263  005094  A4D8               	btfss	status,2,c
 22264  005096  D03B               	goto	l2749
 22265  005098                     u14850:
 22266                           
 22267                           ; BSR set to: 0
 22268                           ;cmd_init.c: 134: {
 22269                           ;cmd_init.c: 135: if (secondsAppTimer(5, &modemCounter, 0))
 22270                           
 22271                           ; BSR set to: 0
 22272  005098  0EBF               	movlw	low initGprsModem@modemCounter
 22273  00509A  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 22274  00509C  0E03               	movlw	high initGprsModem@modemCounter
 22275  00509E  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 22276  0050A0  0E00               	movlw	0
 22277  0050A2  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 22278  0050A4  0E05               	movlw	5
 22279  0050A6  EC41  F025         	call	_secondsAppTimer
 22280  0050AA  0900               	iorlw	0
 22281  0050AC  B4D8               	btfsc	status,2,c
 22282  0050AE  D02F               	goto	l2749
 22283                           
 22284                           ;cmd_init.c: 136: {
 22285                           ;cmd_init.c: 137: Mdm_SetSmsFormat(1);
 22286  0050B0  0E01               	movlw	1
 22287  0050B2  ECD4  F02F         	call	_Mdm_SetSmsFormat
 22288                           
 22289                           ;cmd_init.c: 138: currentState = MODEM_DELETE_SMS;
 22290  0050B6  0E01               	movlw	1
 22291  0050B8  D013               	goto	L36
 22292  0050BA                     
 22293                           ; BSR set to: 1
 22294                           ;cmd_init.c: 144: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 22295                           
 22296                           ; BSR set to: 1
 22297  0050BA  0EFA               	movlw	low STR_30
 22298  0050BC  0100               	movlb	0	; () banked
 22299  0050BE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22300  0050C0  0EFE               	movlw	high STR_30
 22301  0050C2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22302  0050C4  0E01               	movlw	1
 22303  0050C6  ECB0  F031         	call	_Uart_WriteConstString
 22304                           
 22305                           ;cmd_init.c: 145: currentState = MODEM_SET_CALLER_ID;
 22306  0050CA  0E02               	movlw	2
 22307  0050CC  D009               	goto	L36
 22308  0050CE                     
 22309                           ; BSR set to: 1
 22310                           ;cmd_init.c: 149: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 22311                           
 22312                           ; BSR set to: 1
 22313  0050CE  0EAA               	movlw	low STR_31
 22314  0050D0  0100               	movlb	0	; () banked
 22315  0050D2  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22316  0050D4  0EFF               	movlw	high STR_31
 22317  0050D6  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22318  0050D8  0E01               	movlw	1
 22319  0050DA  ECB0  F031         	call	_Uart_WriteConstString
 22320                           
 22321                           ;cmd_init.c: 150: currentState = MODEM_INIT_COMPLETE;
 22322  0050DE  0E03               	movlw	3
 22323  0050E0                     L36:
 22324  0050E0  0101               	movlb	1	; () banked
 22325  0050E2  6FD7               	movwf	initGprsModem@currentState& (0+255),b
 22326                           
 22327                           ;cmd_init.c: 151: break;
 22328  0050E4  D014               	goto	l2749
 22329  0050E6                     
 22330                           ; BSR set to: 1
 22331                           ;cmd_init.c: 154: currentState = MODEM_INIT;
 22332                           
 22333                           ; BSR set to: 1
 22334  0050E6  0E00               	movlw	0
 22335  0050E8  6FD7               	movwf	initGprsModem@currentState& (0+255),b
 22336                           
 22337                           ;cmd_init.c: 155: isInitialized = 1;
 22338  0050EA  0E01               	movlw	1
 22339  0050EC  0100               	movlb	0	; () banked
 22340  0050EE  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22341                           
 22342                           ; BSR set to: 0
 22343                           ;cmd_init.c: 160: }
 22344                           
 22345                           ; BSR set to: 0
 22346                           ;cmd_init.c: 159: break;
 22347                           
 22348                           ;cmd_init.c: 158: default:
 22349                           
 22350                           ;cmd_init.c: 156: break;
 22351  0050F0  D00E               	goto	l2749
 22352  0050F2                     l2743:
 22353                           
 22354                           ; BSR set to: 0
 22355                           
 22356                           ; BSR set to: 0
 22357  0050F2  0101               	movlb	1	; () banked
 22358  0050F4  51D7               	movf	initGprsModem@currentState& (0+255),w,b
 22359                           
 22360                           ; Switch size 1, requested type "space"
 22361                           ; Number of cases is 4, Range of values is 0 to 3
 22362                           ; switch strategies available:
 22363                           ; Name         Instructions Cycles
 22364                           ; simple_byte           13     7 (average)
 22365                           ;	Chosen strategy is simple_byte
 22366  0050F6  0A00               	xorlw	0	; case 0
 22367  0050F8  B4D8               	btfsc	status,2,c
 22368  0050FA  D7C6               	goto	l2744
 22369  0050FC  0A01               	xorlw	1	; case 1
 22370  0050FE  B4D8               	btfsc	status,2,c
 22371  005100  D7DC               	goto	l2750
 22372  005102  0A03               	xorlw	3	; case 2
 22373  005104  B4D8               	btfsc	status,2,c
 22374  005106  D7E3               	goto	l2751
 22375  005108  0A01               	xorlw	1	; case 3
 22376  00510A  B4D8               	btfsc	status,2,c
 22377  00510C  D7EC               	goto	l2752
 22378  00510E                     l2749:
 22379                           
 22380                           ;cmd_init.c: 161: return isInitialized;
 22381                           
 22382                           ; BSR set to: 1
 22383  00510E  0100               	movlb	0	; () banked
 22384  005110  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 22385  005112  0012               	return	
 22386  005114                     __end_of_initGprsModem:
 22387                           	opt stack 0
 22388                           tosu	equ	0xFFF
 22389                           tosh	equ	0xFFE
 22390                           tosl	equ	0xFFD
 22391                           pclath	equ	0xFFA
 22392                           tblptru	equ	0xFF8
 22393                           tblptrh	equ	0xFF7
 22394                           tblptrl	equ	0xFF6
 22395                           tablat	equ	0xFF5
 22396                           prodh	equ	0xFF4
 22397                           prodl	equ	0xFF3
 22398                           intcon	equ	0xFF2
 22399                           intcon2	equ	0xFF1
 22400                           intcon3	equ	0xFF0
 22401                           indf0	equ	0xFEF
 22402                           postinc0	equ	0xFEE
 22403                           plusw0	equ	0xFEB
 22404                           fsr0h	equ	0xFEA
 22405                           fsr0l	equ	0xFE9
 22406                           wreg	equ	0xFE8
 22407                           indf1	equ	0xFE7
 22408                           postinc1	equ	0xFE6
 22409                           postdec1	equ	0xFE5
 22410                           fsr1h	equ	0xFE2
 22411                           fsr1l	equ	0xFE1
 22412                           indf2	equ	0xFDF
 22413                           postinc2	equ	0xFDE
 22414                           postdec2	equ	0xFDD
 22415                           plusw2	equ	0xFDB
 22416                           fsr2h	equ	0xFDA
 22417                           fsr2l	equ	0xFD9
 22418                           status	equ	0xFD8
 22419                           
 22420 ;; *************** function _Mdm_SetSmsFormat *****************
 22421 ;; Defined at:
 22422 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22423 ;; Parameters:    Size  Location     Type
 22424 ;;  TextFormat      1    wreg     unsigned char 
 22425 ;; Auto vars:     Size  Location     Type
 22426 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 22427 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 22428 ;;  Index           1   35[BANK0 ] unsigned char 
 22429 ;; Return value:  Size  Location     Type
 22430 ;;                  1    wreg      void 
 22431 ;; Registers used:
 22432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22433 ;; Tracked objects:
 22434 ;;		On entry : 0/0
 22435 ;;		On exit  : 0/0
 22436 ;;		Unchanged: 0/0
 22437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22439 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22441 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22442 ;;Total ram usage:       22 bytes
 22443 ;; Hardware stack levels used:    1
 22444 ;; Hardware stack levels required when called:   13
 22445 ;; This function calls:
 22446 ;;		_Uart_WriteString
 22447 ;; This function is called by:
 22448 ;;		_initGprsModem
 22449 ;; This function uses a non-reentrant model
 22450 ;;
 22451                           
 22452                           	psect	text101
 22453  005FA8                     __ptext101:
 22454                           	opt stack 0
 22455  005FA8                     _Mdm_SetSmsFormat:
 22456                           	opt stack 12
 22457                           
 22458                           ; BSR set to: 0
 22459                           ;incstack = 0
 22460                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 22461  005FA8  0100               	movlb	0	; () banked
 22462  005FAA  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 22463                           
 22464                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 22465                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 22466  005FAC  0E00               	movlw	0
 22467  005FAE  0100               	movlb	0	; () banked
 22468  005FB0  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 22469                           
 22470                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 22471  005FB2  0E41               	movlw	65
 22472  005FB4  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 22473                           
 22474                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 22475  005FB6  0E54               	movlw	84
 22476  005FB8  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 22477                           
 22478                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 22479  005FBA  0E2B               	movlw	43
 22480  005FBC  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 22481                           
 22482                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 22483  005FBE  0E43               	movlw	67
 22484  005FC0  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 22485                           
 22486                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 22487  005FC2  0E4D               	movlw	77
 22488  005FC4  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 22489                           
 22490                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 22491  005FC6  0E47               	movlw	71
 22492  005FC8  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 22493                           
 22494                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 22495  005FCA  0E46               	movlw	70
 22496  005FCC  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 22497                           
 22498                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 22499  005FCE  0E3D               	movlw	61
 22500  005FD0  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 22501                           
 22502                           ; BSR set to: 0
 22503                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 22504  005FD2  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 22505  005FD4  A4D8               	btfss	status,2,c
 22506  005FD6  D002               	goto	l1121
 22507                           
 22508                           ; BSR set to: 0
 22509                           ;mdm_gsm_gprs.c: 854: {
 22510                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 22511  005FD8  0E31               	movlw	49
 22512  005FDA  D001               	goto	L37
 22513  005FDC                     l1121:
 22514                           
 22515                           ; BSR set to: 0
 22516                           ;mdm_gsm_gprs.c: 857: else
 22517                           ;mdm_gsm_gprs.c: 858: {
 22518                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22519                           
 22520                           ; BSR set to: 0
 22521  005FDC  0E30               	movlw	48
 22522  005FDE                     L37:
 22523  005FDE  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22524                           
 22525                           ; BSR set to: 0
 22526                           ;mdm_gsm_gprs.c: 860: }
 22527                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22528  005FE0  0E0D               	movlw	13
 22529  005FE2  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22530                           
 22531                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22532  005FE4  0E00               	movlw	0
 22533  005FE6  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22534                           
 22535                           ; BSR set to: 0
 22536                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22537  005FE8  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22538  005FEA  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22539  005FEC  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22540  005FEE  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22541  005FF0  0E01               	movlw	1
 22542  005FF2  EC50  F032         	call	_Uart_WriteString
 22543  005FF6  0012               	return		;funcret
 22544  005FF8                     __end_of_Mdm_SetSmsFormat:
 22545                           	opt stack 0
 22546                           tosu	equ	0xFFF
 22547                           tosh	equ	0xFFE
 22548                           tosl	equ	0xFFD
 22549                           pclath	equ	0xFFA
 22550                           tblptru	equ	0xFF8
 22551                           tblptrh	equ	0xFF7
 22552                           tblptrl	equ	0xFF6
 22553                           tablat	equ	0xFF5
 22554                           prodh	equ	0xFF4
 22555                           prodl	equ	0xFF3
 22556                           intcon	equ	0xFF2
 22557                           intcon2	equ	0xFF1
 22558                           intcon3	equ	0xFF0
 22559                           indf0	equ	0xFEF
 22560                           postinc0	equ	0xFEE
 22561                           plusw0	equ	0xFEB
 22562                           fsr0h	equ	0xFEA
 22563                           fsr0l	equ	0xFE9
 22564                           wreg	equ	0xFE8
 22565                           indf1	equ	0xFE7
 22566                           postinc1	equ	0xFE6
 22567                           postdec1	equ	0xFE5
 22568                           fsr1h	equ	0xFE2
 22569                           fsr1l	equ	0xFE1
 22570                           indf2	equ	0xFDF
 22571                           postinc2	equ	0xFDE
 22572                           postdec2	equ	0xFDD
 22573                           plusw2	equ	0xFDB
 22574                           fsr2h	equ	0xFDA
 22575                           fsr2l	equ	0xFD9
 22576                           status	equ	0xFD8
 22577                           
 22578 ;; *************** function _initEeprom *****************
 22579 ;; Defined at:
 22580 ;;		line 170 in file "../Source/c/04_App/cmd_init.c"
 22581 ;; Parameters:    Size  Location     Type
 22582 ;;		None
 22583 ;; Auto vars:     Size  Location     Type
 22584 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22585 ;;  memoryOpResu    1    1[BANK1 ] enum E8246
 22586 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22587 ;; Return value:  Size  Location     Type
 22588 ;;                  1    wreg      unsigned char 
 22589 ;; Registers used:
 22590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22591 ;; Tracked objects:
 22592 ;;		On entry : 0/0
 22593 ;;		On exit  : 0/0
 22594 ;;		Unchanged: 0/0
 22595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22597 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22599 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22600 ;;Total ram usage:        3 bytes
 22601 ;; Hardware stack levels used:    1
 22602 ;; Hardware stack levels required when called:   17
 22603 ;; This function calls:
 22604 ;;		_Eeprom_Read
 22605 ;; This function is called by:
 22606 ;;		_initFsm
 22607 ;; This function uses a non-reentrant model
 22608 ;;
 22609                           
 22610                           	psect	text102
 22611  005114                     __ptext102:
 22612                           	opt stack 0
 22613  005114                     _initEeprom:
 22614                           	opt stack 9
 22615                           
 22616                           ;cmd_init.c: 172: const uint8_t addressToRead = 0;
 22617                           
 22618                           ;incstack = 0
 22619  005114  0E00               	movlw	0
 22620  005116  0101               	movlb	1	; () banked
 22621  005118  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22622                           
 22623                           ;cmd_init.c: 173: static eepromStates currentState = EEPROM_INIT;
 22624                           ;cmd_init.c: 174: EepromStsType memoryOpResult = OP_PENDING;
 22625  00511A  0E02               	movlw	2
 22626  00511C  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22627                           
 22628                           ;cmd_init.c: 175: bool isInitialized = 0;
 22629  00511E  0E00               	movlw	0
 22630  005120  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22631                           
 22632                           ;cmd_init.c: 177: switch (currentState)
 22633  005122  D034               	goto	l2759
 22634  005124                     
 22635                           ; BSR set to: 1
 22636                           ;cmd_init.c: 180: memoryOpResult = Eeprom_Read(0, memoryPreamble, 4);
 22637                           
 22638                           ; BSR set to: 1
 22639  005124  0EAB               	movlw	low _memoryPreamble
 22640  005126  0100               	movlb	0	; () banked
 22641  005128  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22642  00512A  0E03               	movlw	high _memoryPreamble
 22643  00512C  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22644  00512E  0E04               	movlw	4
 22645  005130  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22646  005132  0E00               	movlw	0
 22647  005134  ECB4  F02E         	call	_Eeprom_Read
 22648  005138  0101               	movlb	1	; () banked
 22649  00513A  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22650                           
 22651                           ; BSR set to: 1
 22652                           ;cmd_init.c: 181: if (memoryOpResult != OP_PENDING)
 22653  00513C  0E02               	movlw	2
 22654  00513E  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 22655  005140  B4D8               	btfsc	status,2,c
 22656  005142  D02E               	goto	l2764
 22657                           
 22658                           ; BSR set to: 1
 22659                           ;cmd_init.c: 182: {
 22660                           ;cmd_init.c: 183: if (memoryPreamble[0] == 'U' &&
 22661                           ;cmd_init.c: 184: memoryPreamble[1] == 'S' &&
 22662                           ;cmd_init.c: 185: memoryPreamble[2] == 'I' &&
 22663                           ;cmd_init.c: 186: memoryPreamble[3] == 'M')
 22664  005144  0E55               	movlw	85
 22665  005146  0103               	movlb	3	; () banked
 22666  005148  19AB               	xorwf	_memoryPreamble& (0+255),w,b
 22667  00514A  A4D8               	btfss	status,2,c
 22668  00514C  D00E               	goto	l2762
 22669                           
 22670                           ; BSR set to: 3
 22671  00514E  0E53               	movlw	83
 22672  005150  19AC               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 22673  005152  A4D8               	btfss	status,2,c
 22674  005154  D00A               	goto	l2762
 22675                           
 22676                           ; BSR set to: 3
 22677  005156  0E49               	movlw	73
 22678  005158  19AD               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 22679  00515A  A4D8               	btfss	status,2,c
 22680  00515C  D006               	goto	l2762
 22681                           
 22682                           ; BSR set to: 3
 22683  00515E  0E4D               	movlw	77
 22684  005160  19AE               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 22685  005162  A4D8               	btfss	status,2,c
 22686  005164  D002               	goto	l2762
 22687                           
 22688                           ; BSR set to: 3
 22689                           ;cmd_init.c: 187: {
 22690                           ;cmd_init.c: 188: currentState = EEPROM_NOT_EMPTY;
 22691  005166  0E02               	movlw	2
 22692  005168  D001               	goto	L38
 22693  00516A                     l2762:
 22694                           
 22695                           ;cmd_init.c: 190: else
 22696                           ;cmd_init.c: 191: {
 22697                           ;cmd_init.c: 192: currentState = EEPROM_EMPTY;
 22698                           
 22699                           ; BSR set to: 1
 22700  00516A  0E01               	movlw	1
 22701  00516C                     L38:
 22702  00516C  0101               	movlb	1	; () banked
 22703  00516E  6FD6               	movwf	initEeprom@currentState& (0+255),b
 22704                           
 22705                           ; BSR set to: 1
 22706                           ;cmd_init.c: 193: }
 22707                           ;cmd_init.c: 194: }
 22708                           ;cmd_init.c: 195: break;
 22709                           
 22710                           ; BSR set to: 1
 22711  005170  D017               	goto	l2764
 22712  005172                     
 22713                           ; BSR set to: 1
 22714                           ;cmd_init.c: 198: currentState = EEPROM_INIT;
 22715                           
 22716                           ; BSR set to: 1
 22717  005172  0E00               	movlw	0
 22718  005174  6FD6               	movwf	initEeprom@currentState& (0+255),b
 22719                           
 22720                           ;cmd_init.c: 199: isInitialized = 1;
 22721  005176  0E01               	movlw	1
 22722  005178  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22723                           
 22724                           ;cmd_init.c: 200: isMemoryEmpty = 1;
 22725  00517A  0E01               	movlw	1
 22726  00517C  D005               	goto	L39
 22727  00517E                     
 22728                           ; BSR set to: 1
 22729                           ;cmd_init.c: 204: currentState = EEPROM_INIT;
 22730                           
 22731                           ; BSR set to: 1
 22732  00517E  0E00               	movlw	0
 22733  005180  6FD6               	movwf	initEeprom@currentState& (0+255),b
 22734                           
 22735                           ;cmd_init.c: 205: isInitialized = 1;
 22736  005182  0E01               	movlw	1
 22737  005184  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22738                           
 22739                           ;cmd_init.c: 206: isMemoryEmpty = 0;
 22740  005186  0E00               	movlw	0
 22741  005188                     L39:
 22742  005188  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 22743                           
 22744                           ; BSR set to: 1
 22745                           ;cmd_init.c: 211: }
 22746                           
 22747                           ; BSR set to: 1
 22748                           ;cmd_init.c: 210: break;
 22749                           
 22750                           ;cmd_init.c: 209: default:
 22751                           
 22752                           ;cmd_init.c: 207: break;
 22753  00518A  D00A               	goto	l2764
 22754  00518C                     l2759:
 22755                           
 22756                           ; BSR set to: 1
 22757                           
 22758                           ; BSR set to: 1
 22759  00518C  51D6               	movf	initEeprom@currentState& (0+255),w,b
 22760                           
 22761                           ; Switch size 1, requested type "space"
 22762                           ; Number of cases is 3, Range of values is 0 to 2
 22763                           ; switch strategies available:
 22764                           ; Name         Instructions Cycles
 22765                           ; simple_byte           10     6 (average)
 22766                           ;	Chosen strategy is simple_byte
 22767  00518E  0A00               	xorlw	0	; case 0
 22768  005190  B4D8               	btfsc	status,2,c
 22769  005192  D7C8               	goto	l2760
 22770  005194  0A01               	xorlw	1	; case 1
 22771  005196  B4D8               	btfsc	status,2,c
 22772  005198  D7EC               	goto	l2765
 22773  00519A  0A03               	xorlw	3	; case 2
 22774  00519C  B4D8               	btfsc	status,2,c
 22775  00519E  D7EF               	goto	l2766
 22776  0051A0                     l2764:
 22777                           
 22778                           ; BSR set to: 1
 22779                           ;cmd_init.c: 212: return isInitialized;
 22780                           
 22781                           ; BSR set to: 1
 22782  0051A0  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 22783  0051A2  0012               	return	
 22784  0051A4                     __end_of_initEeprom:
 22785                           	opt stack 0
 22786                           tosu	equ	0xFFF
 22787                           tosh	equ	0xFFE
 22788                           tosl	equ	0xFFD
 22789                           pclath	equ	0xFFA
 22790                           tblptru	equ	0xFF8
 22791                           tblptrh	equ	0xFF7
 22792                           tblptrl	equ	0xFF6
 22793                           tablat	equ	0xFF5
 22794                           prodh	equ	0xFF4
 22795                           prodl	equ	0xFF3
 22796                           intcon	equ	0xFF2
 22797                           intcon2	equ	0xFF1
 22798                           intcon3	equ	0xFF0
 22799                           indf0	equ	0xFEF
 22800                           postinc0	equ	0xFEE
 22801                           plusw0	equ	0xFEB
 22802                           fsr0h	equ	0xFEA
 22803                           fsr0l	equ	0xFE9
 22804                           wreg	equ	0xFE8
 22805                           indf1	equ	0xFE7
 22806                           postinc1	equ	0xFE6
 22807                           postdec1	equ	0xFE5
 22808                           fsr1h	equ	0xFE2
 22809                           fsr1l	equ	0xFE1
 22810                           indf2	equ	0xFDF
 22811                           postinc2	equ	0xFDE
 22812                           postdec2	equ	0xFDD
 22813                           plusw2	equ	0xFDB
 22814                           fsr2h	equ	0xFDA
 22815                           fsr2l	equ	0xFD9
 22816                           status	equ	0xFD8
 22817                           
 22818 ;; *************** function _detectUsbNumber *****************
 22819 ;; Defined at:
 22820 ;;		line 339 in file "../Source/c/04_App/cmd_init.c"
 22821 ;; Parameters:    Size  Location     Type
 22822 ;;  isCmdSuccess    2   57[BANK0 ] PTR unsigned char 
 22823 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 22824 ;; Auto vars:     Size  Location     Type
 22825 ;;  isActionPerf    1   59[BANK0 ] unsigned char 
 22826 ;; Return value:  Size  Location     Type
 22827 ;;                  1    wreg      unsigned char 
 22828 ;; Registers used:
 22829 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22830 ;; Tracked objects:
 22831 ;;		On entry : 0/0
 22832 ;;		On exit  : 0/0
 22833 ;;		Unchanged: 0/0
 22834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22835 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22838 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22839 ;;Total ram usage:        3 bytes
 22840 ;; Hardware stack levels used:    1
 22841 ;; Hardware stack levels required when called:   15
 22842 ;; This function calls:
 22843 ;;		_saveNumberInMemory
 22844 ;; This function is called by:
 22845 ;;		_MyApp_Task
 22846 ;;		_initFsm
 22847 ;; This function uses a non-reentrant model
 22848 ;;
 22849                           
 22850                           	psect	text103
 22851  006556                     __ptext103:
 22852                           	opt stack 0
 22853  006556                     _detectUsbNumber:
 22854                           	opt stack 11
 22855                           
 22856                           ;cmd_init.c: 341: bool isActionPerformed = 0;
 22857                           
 22858                           ; BSR set to: 1
 22859                           ;incstack = 0
 22860  006556  0E00               	movlw	0
 22861  006558  0100               	movlb	0	; () banked
 22862  00655A  6F9B               	movwf	detectUsbNumber@isActionPerformed& (0+255),b
 22863                           
 22864                           ; BSR set to: 0
 22865                           ;cmd_init.c: 343: if (IsUsbNumberReceived == 1)
 22866  00655C  0102               	movlb	2	; () banked
 22867  00655E  05ED               	decf	_IsUsbNumberReceived& (0+255),w,b
 22868  006560  A4D8               	btfss	status,2,c
 22869  006562  D014               	goto	l2803
 22870                           
 22871                           ; BSR set to: 2
 22872                           ;cmd_init.c: 344: {
 22873                           ;cmd_init.c: 345: saveNumberInMemory(16, UsbMasterPhoneNumber);
 22874  006564  0EAC               	movlw	low _UsbMasterPhoneNumber
 22875  006566  0100               	movlb	0	; () banked
 22876  006568  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 22877  00656A  0E04               	movlw	high _UsbMasterPhoneNumber
 22878  00656C  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 22879  00656E  0E10               	movlw	16
 22880  006570  ECE3  F035         	call	_saveNumberInMemory
 22881                           
 22882                           ;cmd_init.c: 346: *isCmdSuccessfull = 1;
 22883  006574  C099  FFD9         	movff	detectUsbNumber@isCmdSuccessfull,fsr2l
 22884  006578  C09A  FFDA         	movff	detectUsbNumber@isCmdSuccessfull+1,fsr2h
 22885  00657C  0E01               	movlw	1
 22886  00657E  6EDF               	movwf	indf2,c
 22887                           
 22888                           ;cmd_init.c: 347: isActionPerformed = 1;
 22889  006580  0E01               	movlw	1
 22890  006582  0100               	movlb	0	; () banked
 22891  006584  6F9B               	movwf	detectUsbNumber@isActionPerformed& (0+255),b
 22892                           
 22893                           ; BSR set to: 0
 22894                           ;cmd_init.c: 348: IsUsbNumberReceived = 0;
 22895  006586  0E00               	movlw	0
 22896  006588  0102               	movlb	2	; () banked
 22897  00658A  6FED               	movwf	_IsUsbNumberReceived& (0+255),b
 22898  00658C                     l2803:
 22899                           
 22900                           ; BSR set to: 2
 22901                           ;cmd_init.c: 349: }
 22902                           ;cmd_init.c: 350: return isActionPerformed;
 22903                           
 22904                           ; BSR set to: 2
 22905  00658C  0100               	movlb	0	; () banked
 22906  00658E  519B               	movf	detectUsbNumber@isActionPerformed& (0+255),w,b
 22907  006590  0012               	return	
 22908  006592                     __end_of_detectUsbNumber:
 22909                           	opt stack 0
 22910                           tosu	equ	0xFFF
 22911                           tosh	equ	0xFFE
 22912                           tosl	equ	0xFFD
 22913                           pclath	equ	0xFFA
 22914                           tblptru	equ	0xFF8
 22915                           tblptrh	equ	0xFF7
 22916                           tblptrl	equ	0xFF6
 22917                           tablat	equ	0xFF5
 22918                           prodh	equ	0xFF4
 22919                           prodl	equ	0xFF3
 22920                           intcon	equ	0xFF2
 22921                           intcon2	equ	0xFF1
 22922                           intcon3	equ	0xFF0
 22923                           indf0	equ	0xFEF
 22924                           postinc0	equ	0xFEE
 22925                           plusw0	equ	0xFEB
 22926                           fsr0h	equ	0xFEA
 22927                           fsr0l	equ	0xFE9
 22928                           wreg	equ	0xFE8
 22929                           indf1	equ	0xFE7
 22930                           postinc1	equ	0xFE6
 22931                           postdec1	equ	0xFE5
 22932                           fsr1h	equ	0xFE2
 22933                           fsr1l	equ	0xFE1
 22934                           indf2	equ	0xFDF
 22935                           postinc2	equ	0xFDE
 22936                           postdec2	equ	0xFDD
 22937                           plusw2	equ	0xFDB
 22938                           fsr2h	equ	0xFDA
 22939                           fsr2l	equ	0xFD9
 22940                           status	equ	0xFD8
 22941                           
 22942 ;; *************** function _detectCmd *****************
 22943 ;; Defined at:
 22944 ;;		line 131 in file "../Source/c/04_App/app_main.c"
 22945 ;; Parameters:    Size  Location     Type
 22946 ;;		None
 22947 ;; Auto vars:     Size  Location     Type
 22948 ;;  currentState    1   53[BANK0 ] enum E9017
 22949 ;; Return value:  Size  Location     Type
 22950 ;;                  1    wreg      enum E9017
 22951 ;; Registers used:
 22952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22953 ;; Tracked objects:
 22954 ;;		On entry : 0/0
 22955 ;;		On exit  : 0/0
 22956 ;;		Unchanged: 0/0
 22957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22959 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22961 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22962 ;;Total ram usage:        1 bytes
 22963 ;; Hardware stack levels used:    1
 22964 ;; Hardware stack levels required when called:   14
 22965 ;; This function calls:
 22966 ;;		_GetCallerNumber
 22967 ;;		_GetLastInteractionNumber
 22968 ;;		_Mdm_GetSmsData
 22969 ;;		_Mdm_HangPhoneCall
 22970 ;;		_Mdm_IsRinging
 22971 ;;		_Mdm_IsSmsReceived
 22972 ;;		_Mdm_RequestSmsData
 22973 ;;		_StringCopy
 22974 ;;		_Uart_WriteConstString
 22975 ;;		_parseCommand
 22976 ;; This function is called by:
 22977 ;;		_MyApp_Task
 22978 ;; This function uses a non-reentrant model
 22979 ;;
 22980                           
 22981                           	psect	text104
 22982  004C62                     __ptext104:
 22983                           	opt stack 0
 22984  004C62                     _detectCmd:
 22985                           	opt stack 13
 22986                           
 22987                           ;app_main.c: 133: appMainFsmStates currentState = APP_MAIN_WAIT_EVENT;
 22988                           
 22989                           ; BSR set to: 0
 22990                           ;incstack = 0
 22991  004C62  0E01               	movlw	1
 22992  004C64  0100               	movlb	0	; () banked
 22993  004C66  6F95               	movwf	detectCmd@currentState& (0+255),b
 22994                           
 22995                           ; BSR set to: 0
 22996                           ;app_main.c: 134: if (Mdm_IsSmsReceived())
 22997  004C68  ECA7  F034         	call	_Mdm_IsSmsReceived	;wreg free
 22998  004C6C  0900               	iorlw	0
 22999  004C6E  A4D8               	btfss	status,2,c
 23000                           
 23001                           ;app_main.c: 135: {
 23002                           ;app_main.c: 136: Mdm_RequestSmsData();
 23003  004C70  EC75  F036         	call	_Mdm_RequestSmsData	;wreg free
 23004                           
 23005                           ;app_main.c: 137: }
 23006                           ;app_main.c: 138: if (Mdm_GetSmsData(smsText) == SmsDataReady)
 23007  004C74  0E84               	movlw	low _smsText
 23008  004C76  0100               	movlb	0	; () banked
 23009  004C78  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
 23010  004C7A  0E04               	movlw	high _smsText
 23011  004C7C  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
 23012  004C7E  ECFB  F02B         	call	_Mdm_GetSmsData	;wreg free
 23013  004C82  06E8               	decf	wreg,f,c
 23014  004C84  A4D8               	btfss	status,2,c
 23015  004C86  D01D               	goto	l2592
 23016                           
 23017                           ;app_main.c: 139: {
 23018                           ;app_main.c: 140: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
 23019  004C88  0E2F               	movlw	low STR_29
 23020  004C8A  0100               	movlb	0	; () banked
 23021  004C8C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23022  004C8E  0EFF               	movlw	high STR_29
 23023  004C90  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23024  004C92  0E01               	movlw	1
 23025  004C94  ECB0  F031         	call	_Uart_WriteConstString
 23026                           
 23027                           ;app_main.c: 141: currentState = parseCommand();
 23028  004C98  EC56  F018         	call	_parseCommand	;wreg free
 23029  004C9C  0100               	movlb	0	; () banked
 23030  004C9E  6F95               	movwf	detectCmd@currentState& (0+255),b
 23031                           
 23032                           ; BSR set to: 0
 23033                           ;app_main.c: 142: StringCopy(GetLastInteractionNumber(), receivedNumber, ((UINT8)(13)));
 23034  004CA0  ECA8  F036         	call	_GetLastInteractionNumber	;wreg free
 23035  004CA4  C07D  F085         	movff	?_GetLastInteractionNumber,StringCopy@SourceStr
 23036  004CA8  C07E  F086         	movff	?_GetLastInteractionNumber+1,StringCopy@SourceStr+1
 23037  004CAC  0E46               	movlw	low _receivedNumber
 23038  004CAE  0100               	movlb	0	; () banked
 23039  004CB0  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23040  004CB2  0E03               	movlw	high _receivedNumber
 23041  004CB4  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23042  004CB6  0E00               	movlw	0
 23043  004CB8  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23044  004CBA  0E0D               	movlw	13
 23045  004CBC  6F89               	movwf	StringCopy@Len& (0+255),b
 23046  004CBE  ECC8  F02C         	call	_StringCopy	;wreg free
 23047  004CC2                     l2592:
 23048                           
 23049                           ;app_main.c: 143: }
 23050                           ;app_main.c: 144: if (Mdm_IsRinging())
 23051  004CC2  ECB9  F034         	call	_Mdm_IsRinging	;wreg free
 23052  004CC6  0900               	iorlw	0
 23053  004CC8  B4D8               	btfsc	status,2,c
 23054  004CCA  D016               	goto	l2593
 23055                           
 23056                           ;app_main.c: 145: {
 23057                           ;app_main.c: 146: Mdm_HangPhoneCall();
 23058  004CCC  EC53  F036         	call	_Mdm_HangPhoneCall	;wreg free
 23059                           
 23060                           ;app_main.c: 147: currentState = APP_MAIN_TRIGGER_CMD;
 23061  004CD0  0E04               	movlw	4
 23062  004CD2  0100               	movlb	0	; () banked
 23063  004CD4  6F95               	movwf	detectCmd@currentState& (0+255),b
 23064                           
 23065                           ; BSR set to: 0
 23066                           ;app_main.c: 148: StringCopy(GetCallerNumber(), receivedNumber, ((UINT8)(13)));
 23067  004CD6  EC1E  F033         	call	_GetCallerNumber	;wreg free
 23068  004CDA  C083  F085         	movff	?_GetCallerNumber,StringCopy@SourceStr
 23069  004CDE  C084  F086         	movff	?_GetCallerNumber+1,StringCopy@SourceStr+1
 23070  004CE2  0E46               	movlw	low _receivedNumber
 23071  004CE4  0100               	movlb	0	; () banked
 23072  004CE6  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23073  004CE8  0E03               	movlw	high _receivedNumber
 23074  004CEA  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23075  004CEC  0E00               	movlw	0
 23076  004CEE  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23077  004CF0  0E0D               	movlw	13
 23078  004CF2  6F89               	movwf	StringCopy@Len& (0+255),b
 23079  004CF4  ECC8  F02C         	call	_StringCopy	;wreg free
 23080  004CF8                     l2593:
 23081                           
 23082                           ;app_main.c: 149: }
 23083                           ;app_main.c: 150: return currentState;
 23084  004CF8  0100               	movlb	0	; () banked
 23085  004CFA  5195               	movf	detectCmd@currentState& (0+255),w,b
 23086  004CFC  0012               	return	
 23087  004CFE                     __end_of_detectCmd:
 23088                           	opt stack 0
 23089                           tosu	equ	0xFFF
 23090                           tosh	equ	0xFFE
 23091                           tosl	equ	0xFFD
 23092                           pclath	equ	0xFFA
 23093                           tblptru	equ	0xFF8
 23094                           tblptrh	equ	0xFF7
 23095                           tblptrl	equ	0xFF6
 23096                           tablat	equ	0xFF5
 23097                           prodh	equ	0xFF4
 23098                           prodl	equ	0xFF3
 23099                           intcon	equ	0xFF2
 23100                           intcon2	equ	0xFF1
 23101                           intcon3	equ	0xFF0
 23102                           indf0	equ	0xFEF
 23103                           postinc0	equ	0xFEE
 23104                           plusw0	equ	0xFEB
 23105                           fsr0h	equ	0xFEA
 23106                           fsr0l	equ	0xFE9
 23107                           wreg	equ	0xFE8
 23108                           indf1	equ	0xFE7
 23109                           postinc1	equ	0xFE6
 23110                           postdec1	equ	0xFE5
 23111                           fsr1h	equ	0xFE2
 23112                           fsr1l	equ	0xFE1
 23113                           indf2	equ	0xFDF
 23114                           postinc2	equ	0xFDE
 23115                           postdec2	equ	0xFDD
 23116                           plusw2	equ	0xFDB
 23117                           fsr2h	equ	0xFDA
 23118                           fsr2l	equ	0xFD9
 23119                           status	equ	0xFD8
 23120                           
 23121 ;; *************** function _parseCommand *****************
 23122 ;; Defined at:
 23123 ;;		line 86 in file "../Source/c/04_App/app_main.c"
 23124 ;; Parameters:    Size  Location     Type
 23125 ;;		None
 23126 ;; Auto vars:     Size  Location     Type
 23127 ;;  resetCmd        4   48[BANK0 ] const unsigned char [4]
 23128 ;;  deleteNumber    4   44[BANK0 ] const unsigned char [4]
 23129 ;;  addNumberCmd    4   40[BANK0 ] const unsigned char [4]
 23130 ;;  state           1   52[BANK0 ] enum E9017
 23131 ;; Return value:  Size  Location     Type
 23132 ;;                  1    wreg      enum E9017
 23133 ;; Registers used:
 23134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23135 ;; Tracked objects:
 23136 ;;		On entry : 0/0
 23137 ;;		On exit  : 0/0
 23138 ;;		Unchanged: 0/0
 23139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23141 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23143 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23144 ;;Total ram usage:       13 bytes
 23145 ;; Hardware stack levels used:    1
 23146 ;; Hardware stack levels required when called:   12
 23147 ;; This function calls:
 23148 ;;		_StringCompare
 23149 ;;		_isNumberValid
 23150 ;; This function is called by:
 23151 ;;		_detectCmd
 23152 ;; This function uses a non-reentrant model
 23153 ;;
 23154                           
 23155                           	psect	text105
 23156  0030AC                     __ptext105:
 23157                           	opt stack 0
 23158  0030AC                     _parseCommand:
 23159                           	opt stack 14
 23160                           
 23161                           ;app_main.c: 88: const uint8_t addNumberCmd[] = {'A', 'D', 'D', ';'};
 23162                           
 23163                           ; BSR set to: 0
 23164                           ;incstack = 0
 23165  0030AC  0E2A               	movlw	low parseCommand@F9031
 23166  0030AE  6EF6               	movwf	tblptrl,c
 23167  0030B0                     	if	1	;There is more than 1 active tblptr byte
 23168  0030B0  0EFC               	movlw	high parseCommand@F9031
 23169  0030B2  6EF7               	movwf	tblptrh,c
 23170  0030B4                     	endif
 23171  0030B4                     	if	0	;There are less than 3 active tblptr bytes
 23172  0030B4                     	endif
 23173  0030B4  0009               	tblrd		*+
 23174  0030B6  CFF5 F088          	movff	tablat,parseCommand@addNumberCmd
 23175  0030BA  0009               	tblrd		*+
 23176  0030BC  CFF5 F089          	movff	tablat,parseCommand@addNumberCmd+1
 23177  0030C0  0009               	tblrd		*+
 23178  0030C2  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd+2
 23179  0030C6  000A               	tblrd		*-
 23180  0030C8  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+3
 23181                           
 23182                           ;app_main.c: 89: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L', ';'};
 23183  0030CC  0E26               	movlw	low parseCommand@F9033
 23184  0030CE  6EF6               	movwf	tblptrl,c
 23185  0030D0                     	if	1	;There is more than 1 active tblptr byte
 23186  0030D0  0EFC               	movlw	high parseCommand@F9033
 23187  0030D2  6EF7               	movwf	tblptrh,c
 23188  0030D4                     	endif
 23189  0030D4                     	if	0	;There are less than 3 active tblptr bytes
 23190  0030D4                     	endif
 23191  0030D4  0009               	tblrd		*+
 23192  0030D6  CFF5 F08C          	movff	tablat,parseCommand@deleteNumberCmd
 23193  0030DA  0009               	tblrd		*+
 23194  0030DC  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd+1
 23195  0030E0  0009               	tblrd		*+
 23196  0030E2  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+2
 23197  0030E6  000A               	tblrd		*-
 23198  0030E8  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+3
 23199                           
 23200                           ;app_main.c: 90: const uint8_t resetCmd[] = {'R', 'E', 'S', ';'};
 23201  0030EC  0E22               	movlw	low parseCommand@F9035
 23202  0030EE  6EF6               	movwf	tblptrl,c
 23203  0030F0                     	if	1	;There is more than 1 active tblptr byte
 23204  0030F0  0EFC               	movlw	high parseCommand@F9035
 23205  0030F2  6EF7               	movwf	tblptrh,c
 23206  0030F4                     	endif
 23207  0030F4                     	if	0	;There are less than 3 active tblptr bytes
 23208  0030F4                     	endif
 23209  0030F4  0009               	tblrd		*+
 23210  0030F6  CFF5 F090          	movff	tablat,parseCommand@resetCmd
 23211  0030FA  0009               	tblrd		*+
 23212  0030FC  CFF5 F091          	movff	tablat,parseCommand@resetCmd+1
 23213  003100  0009               	tblrd		*+
 23214  003102  CFF5 F092          	movff	tablat,parseCommand@resetCmd+2
 23215  003106  000A               	tblrd		*-
 23216  003108  CFF5 F093          	movff	tablat,parseCommand@resetCmd+3
 23217                           
 23218                           ;app_main.c: 91: appMainFsmStates state = APP_MAIN_WAIT_EVENT;
 23219  00310C  0E01               	movlw	1
 23220  00310E  0100               	movlb	0	; () banked
 23221  003110  6F94               	movwf	parseCommand@state& (0+255),b
 23222                           
 23223                           ; BSR set to: 0
 23224                           ;app_main.c: 93: if (StringCompare(smsText, addNumberCmd, sizeof(addNumberCmd)))
 23225  003112  0E84               	movlw	low _smsText
 23226  003114  6F7D               	movwf	StringCompare@String1& (0+255),b
 23227  003116  0E04               	movlw	high _smsText
 23228  003118  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 23229  00311A  0E88               	movlw	low parseCommand@addNumberCmd
 23230  00311C  6F7F               	movwf	StringCompare@String2& (0+255),b
 23231  00311E  0E00               	movlw	high parseCommand@addNumberCmd
 23232  003120  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 23233  003122  0E00               	movlw	0
 23234  003124  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 23235  003126  0E04               	movlw	4
 23236  003128  6F81               	movwf	StringCompare@Len& (0+255),b
 23237  00312A  EC5B  F02F         	call	_StringCompare	;wreg free
 23238  00312E  0900               	iorlw	0
 23239  003130  B4D8               	btfsc	status,2,c
 23240  003132  D00E               	goto	l2578
 23241                           
 23242                           ;app_main.c: 94: {
 23243                           ;app_main.c: 95: if (!isNumberValid(smsText + 4))
 23244  003134  0E88               	movlw	low (_smsText+4)
 23245  003136  0100               	movlb	0	; () banked
 23246  003138  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 23247  00313A  0E04               	movlw	high (_smsText+4)
 23248  00313C  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 23249  00313E  EC95  F02C         	call	_isNumberValid	;wreg free
 23250  003142  0900               	iorlw	0
 23251  003144  A4D8               	btfss	status,2,c
 23252  003146  D002               	goto	l2579
 23253  003148                     u14650:
 23254                           
 23255                           ;app_main.c: 96: {
 23256                           ;app_main.c: 97: state = APP_MAIN_WAIT_EVENT;
 23257  003148  0E01               	movlw	1
 23258  00314A  D033               	goto	L43
 23259  00314C                     l2579:
 23260                           
 23261                           ;app_main.c: 99: else
 23262                           ;app_main.c: 100: {
 23263                           ;app_main.c: 101: state = APP_MAIN_ADD_CMD;
 23264                           
 23265                           ; BSR set to: 0
 23266  00314C  0E02               	movlw	2
 23267  00314E  D031               	goto	L43
 23268  003150                     l2578:
 23269                           
 23270                           ;app_main.c: 104: else if (StringCompare(smsText, deleteNumberCmd, sizeof(deleteNumberCm
      +                          d)))
 23271                           
 23272                           ; BSR set to: 0
 23273  003150  0E84               	movlw	low _smsText
 23274  003152  0100               	movlb	0	; () banked
 23275  003154  6F7D               	movwf	StringCompare@String1& (0+255),b
 23276  003156  0E04               	movlw	high _smsText
 23277  003158  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 23278  00315A  0E8C               	movlw	low parseCommand@deleteNumberCmd
 23279  00315C  6F7F               	movwf	StringCompare@String2& (0+255),b
 23280  00315E  0E00               	movlw	high parseCommand@deleteNumberCmd
 23281  003160  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 23282  003162  0E00               	movlw	0
 23283  003164  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 23284  003166  0E04               	movlw	4
 23285  003168  6F81               	movwf	StringCompare@Len& (0+255),b
 23286  00316A  EC5B  F02F         	call	_StringCompare	;wreg free
 23287  00316E  0900               	iorlw	0
 23288  003170  B4D8               	btfsc	status,2,c
 23289  003172  D00C               	goto	l2582
 23290                           
 23291                           ;app_main.c: 105: {
 23292                           ;app_main.c: 106: if (!isNumberValid(smsText + 4))
 23293  003174  0E88               	movlw	low (_smsText+4)
 23294  003176  0100               	movlb	0	; () banked
 23295  003178  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 23296  00317A  0E04               	movlw	high (_smsText+4)
 23297  00317C  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 23298  00317E  EC95  F02C         	call	_isNumberValid	;wreg free
 23299  003182  0900               	iorlw	0
 23300  003184  B4D8               	btfsc	status,2,c
 23301  003186  D7E0               	goto	u14650
 23302                           
 23303                           ;app_main.c: 110: else
 23304                           ;app_main.c: 111: {
 23305                           ;app_main.c: 112: state = APP_MAIN_DEL_CMD;
 23306                           
 23307                           ; BSR set to: 0
 23308                           
 23309                           ;app_main.c: 109: }
 23310                           
 23311                           ;app_main.c: 107: {
 23312                           ;app_main.c: 108: state = APP_MAIN_WAIT_EVENT;
 23313  003188  0E03               	movlw	3
 23314  00318A  D013               	goto	L43
 23315  00318C                     l2582:
 23316                           
 23317                           ;app_main.c: 115: else if (StringCompare(smsText, resetCmd, sizeof(resetCmd)))
 23318                           
 23319                           ; BSR set to: 0
 23320  00318C  0E84               	movlw	low _smsText
 23321  00318E  0100               	movlb	0	; () banked
 23322  003190  6F7D               	movwf	StringCompare@String1& (0+255),b
 23323  003192  0E04               	movlw	high _smsText
 23324  003194  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 23325  003196  0E90               	movlw	low parseCommand@resetCmd
 23326  003198  6F7F               	movwf	StringCompare@String2& (0+255),b
 23327  00319A  0E00               	movlw	high parseCommand@resetCmd
 23328  00319C  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 23329  00319E  0E00               	movlw	0
 23330  0031A0  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 23331  0031A2  0E04               	movlw	4
 23332  0031A4  6F81               	movwf	StringCompare@Len& (0+255),b
 23333  0031A6  EC5B  F02F         	call	_StringCompare	;wreg free
 23334  0031AA  0900               	iorlw	0
 23335  0031AC  B4D8               	btfsc	status,2,c
 23336  0031AE  D003               	goto	l2586
 23337                           
 23338                           ;app_main.c: 116: {
 23339                           ;app_main.c: 117: state = APP_MAIN_RESET;
 23340  0031B0  0E05               	movlw	5
 23341  0031B2                     L43:
 23342  0031B2  0100               	movlb	0	; () banked
 23343  0031B4  6F94               	movwf	parseCommand@state& (0+255),b
 23344  0031B6                     l2586:
 23345                           
 23346                           ;app_main.c: 122: }
 23347                           ;app_main.c: 123: return state;
 23348                           
 23349                           ; BSR set to: 0
 23350                           
 23351                           ; BSR set to: 0
 23352                           
 23353                           ; BSR set to: 0
 23354                           
 23355                           ;app_main.c: 119: else
 23356                           ;app_main.c: 120: {
 23357                           
 23358                           ; BSR set to: 0
 23359  0031B6  0100               	movlb	0	; () banked
 23360  0031B8  5194               	movf	parseCommand@state& (0+255),w,b
 23361  0031BA  0012               	return	
 23362  0031BC                     __end_of_parseCommand:
 23363                           	opt stack 0
 23364                           tosu	equ	0xFFF
 23365                           tosh	equ	0xFFE
 23366                           tosl	equ	0xFFD
 23367                           pclath	equ	0xFFA
 23368                           tblptru	equ	0xFF8
 23369                           tblptrh	equ	0xFF7
 23370                           tblptrl	equ	0xFF6
 23371                           tablat	equ	0xFF5
 23372                           prodh	equ	0xFF4
 23373                           prodl	equ	0xFF3
 23374                           intcon	equ	0xFF2
 23375                           intcon2	equ	0xFF1
 23376                           intcon3	equ	0xFF0
 23377                           indf0	equ	0xFEF
 23378                           postinc0	equ	0xFEE
 23379                           plusw0	equ	0xFEB
 23380                           fsr0h	equ	0xFEA
 23381                           fsr0l	equ	0xFE9
 23382                           wreg	equ	0xFE8
 23383                           indf1	equ	0xFE7
 23384                           postinc1	equ	0xFE6
 23385                           postdec1	equ	0xFE5
 23386                           fsr1h	equ	0xFE2
 23387                           fsr1l	equ	0xFE1
 23388                           indf2	equ	0xFDF
 23389                           postinc2	equ	0xFDE
 23390                           postdec2	equ	0xFDD
 23391                           plusw2	equ	0xFDB
 23392                           fsr2h	equ	0xFDA
 23393                           fsr2l	equ	0xFD9
 23394                           status	equ	0xFD8
 23395                           
 23396 ;; *************** function _Mdm_RequestSmsData *****************
 23397 ;; Defined at:
 23398 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23399 ;; Parameters:    Size  Location     Type
 23400 ;;		None
 23401 ;; Auto vars:     Size  Location     Type
 23402 ;;		None
 23403 ;; Return value:  Size  Location     Type
 23404 ;;                  1    wreg      void 
 23405 ;; Registers used:
 23406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23407 ;; Tracked objects:
 23408 ;;		On entry : 0/0
 23409 ;;		On exit  : 0/0
 23410 ;;		Unchanged: 0/0
 23411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23416 ;;Total ram usage:        0 bytes
 23417 ;; Hardware stack levels used:    1
 23418 ;; Hardware stack levels required when called:   12
 23419 ;; This function calls:
 23420 ;;		_GenerateEvt
 23421 ;; This function is called by:
 23422 ;;		_detectCmd
 23423 ;; This function uses a non-reentrant model
 23424 ;;
 23425                           
 23426                           	psect	text106
 23427  006CEA                     __ptext106:
 23428                           	opt stack 0
 23429  006CEA                     _Mdm_RequestSmsData:
 23430                           	opt stack 14
 23431                           
 23432                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 23433                           
 23434                           ; BSR set to: 0
 23435                           ;incstack = 0
 23436  006CEA  0EDA               	movlw	low _GetSmsText
 23437  006CEC  0100               	movlb	0	; () banked
 23438  006CEE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23439  006CF0  0E00               	movlw	high _GetSmsText
 23440  006CF2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23441  006CF4  EC08  F036         	call	_GenerateEvt	;wreg free
 23442  006CF8  0012               	return		;funcret
 23443  006CFA                     __end_of_Mdm_RequestSmsData:
 23444                           	opt stack 0
 23445                           tosu	equ	0xFFF
 23446                           tosh	equ	0xFFE
 23447                           tosl	equ	0xFFD
 23448                           pclath	equ	0xFFA
 23449                           tblptru	equ	0xFF8
 23450                           tblptrh	equ	0xFF7
 23451                           tblptrl	equ	0xFF6
 23452                           tablat	equ	0xFF5
 23453                           prodh	equ	0xFF4
 23454                           prodl	equ	0xFF3
 23455                           intcon	equ	0xFF2
 23456                           intcon2	equ	0xFF1
 23457                           intcon3	equ	0xFF0
 23458                           indf0	equ	0xFEF
 23459                           postinc0	equ	0xFEE
 23460                           plusw0	equ	0xFEB
 23461                           fsr0h	equ	0xFEA
 23462                           fsr0l	equ	0xFE9
 23463                           wreg	equ	0xFE8
 23464                           indf1	equ	0xFE7
 23465                           postinc1	equ	0xFE6
 23466                           postdec1	equ	0xFE5
 23467                           fsr1h	equ	0xFE2
 23468                           fsr1l	equ	0xFE1
 23469                           indf2	equ	0xFDF
 23470                           postinc2	equ	0xFDE
 23471                           postdec2	equ	0xFDD
 23472                           plusw2	equ	0xFDB
 23473                           fsr2h	equ	0xFDA
 23474                           fsr2l	equ	0xFD9
 23475                           status	equ	0xFD8
 23476                           
 23477 ;; *************** function _Mdm_IsSmsReceived *****************
 23478 ;; Defined at:
 23479 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23480 ;; Parameters:    Size  Location     Type
 23481 ;;		None
 23482 ;; Auto vars:     Size  Location     Type
 23483 ;;  Ret             1   33[BANK0 ] enum E8931
 23484 ;; Return value:  Size  Location     Type
 23485 ;;                  1    wreg      enum E8931
 23486 ;; Registers used:
 23487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23488 ;; Tracked objects:
 23489 ;;		On entry : 0/0
 23490 ;;		On exit  : 0/0
 23491 ;;		Unchanged: 0/0
 23492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23494 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23496 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23497 ;;Total ram usage:        1 bytes
 23498 ;; Hardware stack levels used:    1
 23499 ;; Hardware stack levels required when called:   12
 23500 ;; This function calls:
 23501 ;;		_ReceiveEvt
 23502 ;; This function is called by:
 23503 ;;		_detectCmd
 23504 ;; This function uses a non-reentrant model
 23505 ;;
 23506                           
 23507                           	psect	text107
 23508  00694E                     __ptext107:
 23509                           	opt stack 0
 23510  00694E                     _Mdm_IsSmsReceived:
 23511                           	opt stack 14
 23512                           
 23513                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 23514                           
 23515                           ;incstack = 0
 23516  00694E  0E00               	movlw	0
 23517  006950  0100               	movlb	0	; () banked
 23518  006952  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 23519                           
 23520                           ; BSR set to: 0
 23521                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 23522  006954  0EDB               	movlw	low _SmsEvent
 23523  006956  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23524  006958  0E00               	movlw	high _SmsEvent
 23525  00695A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23526  00695C  EC17  F034         	call	_ReceiveEvt	;wreg free
 23527  006960  0900               	iorlw	0
 23528  006962  B4D8               	btfsc	status,2,c
 23529  006964  D003               	goto	l1136
 23530                           
 23531                           ;mdm_gsm_gprs.c: 947: {
 23532                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 23533  006966  0E01               	movlw	1
 23534  006968  0100               	movlb	0	; () banked
 23535  00696A  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 23536  00696C                     l1136:
 23537                           
 23538                           ;mdm_gsm_gprs.c: 949: }
 23539                           ;mdm_gsm_gprs.c: 951: return Ret;
 23540  00696C  0100               	movlb	0	; () banked
 23541  00696E  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 23542  006970  0012               	return	
 23543  006972                     __end_of_Mdm_IsSmsReceived:
 23544                           	opt stack 0
 23545                           tosu	equ	0xFFF
 23546                           tosh	equ	0xFFE
 23547                           tosl	equ	0xFFD
 23548                           pclath	equ	0xFFA
 23549                           tblptru	equ	0xFF8
 23550                           tblptrh	equ	0xFF7
 23551                           tblptrl	equ	0xFF6
 23552                           tablat	equ	0xFF5
 23553                           prodh	equ	0xFF4
 23554                           prodl	equ	0xFF3
 23555                           intcon	equ	0xFF2
 23556                           intcon2	equ	0xFF1
 23557                           intcon3	equ	0xFF0
 23558                           indf0	equ	0xFEF
 23559                           postinc0	equ	0xFEE
 23560                           plusw0	equ	0xFEB
 23561                           fsr0h	equ	0xFEA
 23562                           fsr0l	equ	0xFE9
 23563                           wreg	equ	0xFE8
 23564                           indf1	equ	0xFE7
 23565                           postinc1	equ	0xFE6
 23566                           postdec1	equ	0xFE5
 23567                           fsr1h	equ	0xFE2
 23568                           fsr1l	equ	0xFE1
 23569                           indf2	equ	0xFDF
 23570                           postinc2	equ	0xFDE
 23571                           postdec2	equ	0xFDD
 23572                           plusw2	equ	0xFDB
 23573                           fsr2h	equ	0xFDA
 23574                           fsr2l	equ	0xFD9
 23575                           status	equ	0xFD8
 23576                           
 23577 ;; *************** function _Mdm_IsRinging *****************
 23578 ;; Defined at:
 23579 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23580 ;; Parameters:    Size  Location     Type
 23581 ;;		None
 23582 ;; Auto vars:     Size  Location     Type
 23583 ;;  Ret             1   33[BANK0 ] enum E8927
 23584 ;; Return value:  Size  Location     Type
 23585 ;;                  1    wreg      enum E8927
 23586 ;; Registers used:
 23587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23588 ;; Tracked objects:
 23589 ;;		On entry : 0/0
 23590 ;;		On exit  : 0/0
 23591 ;;		Unchanged: 0/0
 23592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23596 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23597 ;;Total ram usage:        1 bytes
 23598 ;; Hardware stack levels used:    1
 23599 ;; Hardware stack levels required when called:   12
 23600 ;; This function calls:
 23601 ;;		_ReceiveEvt
 23602 ;; This function is called by:
 23603 ;;		_detectCmd
 23604 ;;		_getSetupCall
 23605 ;; This function uses a non-reentrant model
 23606 ;;
 23607                           
 23608                           	psect	text108
 23609  006972                     __ptext108:
 23610                           	opt stack 0
 23611  006972                     _Mdm_IsRinging:
 23612                           	opt stack 12
 23613                           
 23614                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 23615                           
 23616                           ; BSR set to: 0
 23617                           ;incstack = 0
 23618  006972  0E00               	movlw	0
 23619  006974  0100               	movlb	0	; () banked
 23620  006976  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 23621                           
 23622                           ; BSR set to: 0
 23623                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 23624  006978  0EDD               	movlw	low _RingEvent
 23625  00697A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23626  00697C  0E00               	movlw	high _RingEvent
 23627  00697E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23628  006980  EC17  F034         	call	_ReceiveEvt	;wreg free
 23629  006984  0900               	iorlw	0
 23630  006986  B4D8               	btfsc	status,2,c
 23631  006988  D003               	goto	l1152
 23632                           
 23633                           ;mdm_gsm_gprs.c: 1030: {
 23634                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 23635  00698A  0E01               	movlw	1
 23636  00698C  0100               	movlb	0	; () banked
 23637  00698E  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 23638  006990                     l1152:
 23639                           
 23640                           ;mdm_gsm_gprs.c: 1032: }
 23641                           ;mdm_gsm_gprs.c: 1034: return Ret;
 23642  006990  0100               	movlb	0	; () banked
 23643  006992  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 23644  006994  0012               	return	
 23645  006996                     __end_of_Mdm_IsRinging:
 23646                           	opt stack 0
 23647                           tosu	equ	0xFFF
 23648                           tosh	equ	0xFFE
 23649                           tosl	equ	0xFFD
 23650                           pclath	equ	0xFFA
 23651                           tblptru	equ	0xFF8
 23652                           tblptrh	equ	0xFF7
 23653                           tblptrl	equ	0xFF6
 23654                           tablat	equ	0xFF5
 23655                           prodh	equ	0xFF4
 23656                           prodl	equ	0xFF3
 23657                           intcon	equ	0xFF2
 23658                           intcon2	equ	0xFF1
 23659                           intcon3	equ	0xFF0
 23660                           indf0	equ	0xFEF
 23661                           postinc0	equ	0xFEE
 23662                           plusw0	equ	0xFEB
 23663                           fsr0h	equ	0xFEA
 23664                           fsr0l	equ	0xFE9
 23665                           wreg	equ	0xFE8
 23666                           indf1	equ	0xFE7
 23667                           postinc1	equ	0xFE6
 23668                           postdec1	equ	0xFE5
 23669                           fsr1h	equ	0xFE2
 23670                           fsr1l	equ	0xFE1
 23671                           indf2	equ	0xFDF
 23672                           postinc2	equ	0xFDE
 23673                           postdec2	equ	0xFDD
 23674                           plusw2	equ	0xFDB
 23675                           fsr2h	equ	0xFDA
 23676                           fsr2l	equ	0xFD9
 23677                           status	equ	0xFD8
 23678                           
 23679 ;; *************** function _Mdm_HangPhoneCall *****************
 23680 ;; Defined at:
 23681 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23682 ;; Parameters:    Size  Location     Type
 23683 ;;		None
 23684 ;; Auto vars:     Size  Location     Type
 23685 ;;		None
 23686 ;; Return value:  Size  Location     Type
 23687 ;;                  1    wreg      void 
 23688 ;; Registers used:
 23689 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23690 ;; Tracked objects:
 23691 ;;		On entry : 0/0
 23692 ;;		On exit  : 0/0
 23693 ;;		Unchanged: 0/0
 23694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23699 ;;Total ram usage:        0 bytes
 23700 ;; Hardware stack levels used:    1
 23701 ;; Hardware stack levels required when called:   13
 23702 ;; This function calls:
 23703 ;;		_Uart_WriteConstString
 23704 ;; This function is called by:
 23705 ;;		_detectCmd
 23706 ;;		_getSetupCall
 23707 ;; This function uses a non-reentrant model
 23708 ;;
 23709                           
 23710                           	psect	text109
 23711  006CA6                     __ptext109:
 23712                           	opt stack 0
 23713  006CA6                     _Mdm_HangPhoneCall:
 23714                           	opt stack 11
 23715                           
 23716                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 23717                           
 23718                           ; BSR set to: 0
 23719                           ;incstack = 0
 23720  006CA6  0EF0               	movlw	low STR_6
 23721  006CA8  0100               	movlb	0	; () banked
 23722  006CAA  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23723  006CAC  0EFF               	movlw	high STR_6
 23724  006CAE  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23725  006CB0  0E01               	movlw	1
 23726  006CB2  ECB0  F031         	call	_Uart_WriteConstString
 23727  006CB6  0012               	return		;funcret
 23728  006CB8                     __end_of_Mdm_HangPhoneCall:
 23729                           	opt stack 0
 23730                           tosu	equ	0xFFF
 23731                           tosh	equ	0xFFE
 23732                           tosl	equ	0xFFD
 23733                           pclath	equ	0xFFA
 23734                           tblptru	equ	0xFF8
 23735                           tblptrh	equ	0xFF7
 23736                           tblptrl	equ	0xFF6
 23737                           tablat	equ	0xFF5
 23738                           prodh	equ	0xFF4
 23739                           prodl	equ	0xFF3
 23740                           intcon	equ	0xFF2
 23741                           intcon2	equ	0xFF1
 23742                           intcon3	equ	0xFF0
 23743                           indf0	equ	0xFEF
 23744                           postinc0	equ	0xFEE
 23745                           plusw0	equ	0xFEB
 23746                           fsr0h	equ	0xFEA
 23747                           fsr0l	equ	0xFE9
 23748                           wreg	equ	0xFE8
 23749                           indf1	equ	0xFE7
 23750                           postinc1	equ	0xFE6
 23751                           postdec1	equ	0xFE5
 23752                           fsr1h	equ	0xFE2
 23753                           fsr1l	equ	0xFE1
 23754                           indf2	equ	0xFDF
 23755                           postinc2	equ	0xFDE
 23756                           postdec2	equ	0xFDD
 23757                           plusw2	equ	0xFDB
 23758                           fsr2h	equ	0xFDA
 23759                           fsr2l	equ	0xFD9
 23760                           status	equ	0xFD8
 23761                           
 23762 ;; *************** function _Mdm_GetSmsData *****************
 23763 ;; Defined at:
 23764 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23765 ;; Parameters:    Size  Location     Type
 23766 ;;  MessageText     2   47[BANK0 ] PTR unsigned char 
 23767 ;;		 -> smsText(20), 
 23768 ;; Auto vars:     Size  Location     Type
 23769 ;;  GetSmsStatus    1   49[BANK0 ] enum E8923
 23770 ;; Return value:  Size  Location     Type
 23771 ;;                  1    wreg      enum E8923
 23772 ;; Registers used:
 23773 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23774 ;; Tracked objects:
 23775 ;;		On entry : 0/0
 23776 ;;		On exit  : 0/0
 23777 ;;		Unchanged: 0/0
 23778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23779 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23780 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23782 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23783 ;;Total ram usage:        3 bytes
 23784 ;; Hardware stack levels used:    1
 23785 ;; Hardware stack levels required when called:   12
 23786 ;; This function calls:
 23787 ;;		_ReceiveEvt
 23788 ;;		_StringCopy
 23789 ;; This function is called by:
 23790 ;;		_detectCmd
 23791 ;; This function uses a non-reentrant model
 23792 ;;
 23793                           
 23794                           	psect	text110
 23795  0057F6                     __ptext110:
 23796                           	opt stack 0
 23797  0057F6                     _Mdm_GetSmsData:
 23798                           	opt stack 14
 23799                           
 23800                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 23801                           
 23802                           ;incstack = 0
 23803  0057F6  0E00               	movlw	0
 23804  0057F8  0100               	movlb	0	; () banked
 23805  0057FA  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23806                           
 23807                           ; BSR set to: 0
 23808                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 23809  0057FC  0ED9               	movlw	low _SmsTxtReady
 23810  0057FE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23811  005800  0E00               	movlw	high _SmsTxtReady
 23812  005802  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23813  005804  EC17  F034         	call	_ReceiveEvt	;wreg free
 23814  005808  0900               	iorlw	0
 23815  00580A  B4D8               	btfsc	status,2,c
 23816  00580C  D025               	goto	l1129
 23817                           
 23818                           ;mdm_gsm_gprs.c: 898: {
 23819                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 23820  00580E  0E50               	movlw	low (_Mdm_SmsRx+80)
 23821  005810  0100               	movlb	0	; () banked
 23822  005812  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23823  005814  0E07               	movlw	high (_Mdm_SmsRx+80)
 23824  005816  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23825  005818  C08F  F087         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 23826  00581C  C090  F088         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 23827  005820  0E01               	movlw	1
 23828  005822  0107               	movlb	7	; () banked
 23829  005824  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 23830  005826  0100               	movlb	0	; () banked
 23831  005828  6F89               	movwf	StringCopy@Len& (0+255),b
 23832  00582A  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 23833  00582C  0E00               	movlw	0
 23834  00582E  238A               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 23835  005830  ECC8  F02C         	call	_StringCopy	;wreg free
 23836                           
 23837                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ));
 23838  005834  0E15               	movlw	low (_Mdm_SmsRx+21)
 23839  005836  0100               	movlb	0	; () banked
 23840  005838  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23841  00583A  0E07               	movlw	high (_Mdm_SmsRx+21)
 23842  00583C  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23843  00583E  0ECA               	movlw	low _callerNumber
 23844  005840  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23845  005842  0E04               	movlw	high _callerNumber
 23846  005844  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23847  005846  0E00               	movlw	0
 23848  005848  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23849  00584A  0E0D               	movlw	13
 23850  00584C  6F89               	movwf	StringCopy@Len& (0+255),b
 23851  00584E  ECC8  F02C         	call	_StringCopy	;wreg free
 23852                           
 23853                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 23854  005852  0E01               	movlw	1
 23855  005854  0100               	movlb	0	; () banked
 23856  005856  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23857  005858                     l1129:
 23858                           
 23859                           ;mdm_gsm_gprs.c: 904: }
 23860                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 23861                           
 23862                           ; BSR set to: 0
 23863  005858  0100               	movlb	0	; () banked
 23864  00585A  5191               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 23865  00585C  0012               	return	
 23866  00585E                     __end_of_Mdm_GetSmsData:
 23867                           	opt stack 0
 23868                           tosu	equ	0xFFF
 23869                           tosh	equ	0xFFE
 23870                           tosl	equ	0xFFD
 23871                           pclath	equ	0xFFA
 23872                           tblptru	equ	0xFF8
 23873                           tblptrh	equ	0xFF7
 23874                           tblptrl	equ	0xFF6
 23875                           tablat	equ	0xFF5
 23876                           prodh	equ	0xFF4
 23877                           prodl	equ	0xFF3
 23878                           intcon	equ	0xFF2
 23879                           intcon2	equ	0xFF1
 23880                           intcon3	equ	0xFF0
 23881                           indf0	equ	0xFEF
 23882                           postinc0	equ	0xFEE
 23883                           plusw0	equ	0xFEB
 23884                           fsr0h	equ	0xFEA
 23885                           fsr0l	equ	0xFE9
 23886                           wreg	equ	0xFE8
 23887                           indf1	equ	0xFE7
 23888                           postinc1	equ	0xFE6
 23889                           postdec1	equ	0xFE5
 23890                           fsr1h	equ	0xFE2
 23891                           fsr1l	equ	0xFE1
 23892                           indf2	equ	0xFDF
 23893                           postinc2	equ	0xFDE
 23894                           postdec2	equ	0xFDD
 23895                           plusw2	equ	0xFDB
 23896                           fsr2h	equ	0xFDA
 23897                           fsr2l	equ	0xFD9
 23898                           status	equ	0xFD8
 23899                           
 23900 ;; *************** function _GetLastInteractionNumber *****************
 23901 ;; Defined at:
 23902 ;;		line 1046 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23903 ;; Parameters:    Size  Location     Type
 23904 ;;		None
 23905 ;; Auto vars:     Size  Location     Type
 23906 ;;		None
 23907 ;; Return value:  Size  Location     Type
 23908 ;;                  2   29[BANK0 ] PTR unsigned char 
 23909 ;; Registers used:
 23910 ;;		wreg, status,2, status,0
 23911 ;; Tracked objects:
 23912 ;;		On entry : 0/0
 23913 ;;		On exit  : 0/0
 23914 ;;		Unchanged: 0/0
 23915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23916 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23919 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23920 ;;Total ram usage:        2 bytes
 23921 ;; Hardware stack levels used:    1
 23922 ;; Hardware stack levels required when called:   11
 23923 ;; This function calls:
 23924 ;;		Nothing
 23925 ;; This function is called by:
 23926 ;;		_detectCmd
 23927 ;; This function uses a non-reentrant model
 23928 ;;
 23929                           
 23930                           	psect	text111
 23931  006D50                     __ptext111:
 23932                           	opt stack 0
 23933  006D50                     _GetLastInteractionNumber:
 23934                           	opt stack 15
 23935                           
 23936                           ;mdm_gsm_gprs.c: 1048: return callerNumber;
 23937                           
 23938                           ; BSR set to: 0
 23939                           ;incstack = 0
 23940  006D50  0ECA               	movlw	low _callerNumber
 23941  006D52  0100               	movlb	0	; () banked
 23942  006D54  6F7D               	movwf	?_GetLastInteractionNumber& (0+255),b
 23943  006D56  0E04               	movlw	high _callerNumber
 23944  006D58  6F7E               	movwf	(?_GetLastInteractionNumber+1)& (0+255),b
 23945  006D5A  0012               	return	
 23946  006D5C                     __end_of_GetLastInteractionNumber:
 23947                           	opt stack 0
 23948                           tosu	equ	0xFFF
 23949                           tosh	equ	0xFFE
 23950                           tosl	equ	0xFFD
 23951                           pclath	equ	0xFFA
 23952                           tblptru	equ	0xFF8
 23953                           tblptrh	equ	0xFF7
 23954                           tblptrl	equ	0xFF6
 23955                           tablat	equ	0xFF5
 23956                           prodh	equ	0xFF4
 23957                           prodl	equ	0xFF3
 23958                           intcon	equ	0xFF2
 23959                           intcon2	equ	0xFF1
 23960                           intcon3	equ	0xFF0
 23961                           indf0	equ	0xFEF
 23962                           postinc0	equ	0xFEE
 23963                           plusw0	equ	0xFEB
 23964                           fsr0h	equ	0xFEA
 23965                           fsr0l	equ	0xFE9
 23966                           wreg	equ	0xFE8
 23967                           indf1	equ	0xFE7
 23968                           postinc1	equ	0xFE6
 23969                           postdec1	equ	0xFE5
 23970                           fsr1h	equ	0xFE2
 23971                           fsr1l	equ	0xFE1
 23972                           indf2	equ	0xFDF
 23973                           postinc2	equ	0xFDE
 23974                           postdec2	equ	0xFDD
 23975                           plusw2	equ	0xFDB
 23976                           fsr2h	equ	0xFDA
 23977                           fsr2l	equ	0xFD9
 23978                           status	equ	0xFD8
 23979                           
 23980 ;; *************** function _GetCallerNumber *****************
 23981 ;; Defined at:
 23982 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23983 ;; Parameters:    Size  Location     Type
 23984 ;;		None
 23985 ;; Auto vars:     Size  Location     Type
 23986 ;;		None
 23987 ;; Return value:  Size  Location     Type
 23988 ;;                  2   35[BANK0 ] PTR unsigned char 
 23989 ;; Registers used:
 23990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23991 ;; Tracked objects:
 23992 ;;		On entry : 0/0
 23993 ;;		On exit  : 0/0
 23994 ;;		Unchanged: 0/0
 23995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24000 ;;Total ram usage:        2 bytes
 24001 ;; Hardware stack levels used:    1
 24002 ;; Hardware stack levels required when called:   12
 24003 ;; This function calls:
 24004 ;;		_ClearBuffer
 24005 ;;		_ReceiveEvt
 24006 ;; This function is called by:
 24007 ;;		_detectCmd
 24008 ;;		_initFsm
 24009 ;; This function uses a non-reentrant model
 24010 ;;
 24011                           
 24012                           	psect	text112
 24013  00663C                     __ptext112:
 24014                           	opt stack 0
 24015  00663C                     _GetCallerNumber:
 24016                           	opt stack 14
 24017                           
 24018                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 24019                           
 24020                           ; BSR set to: 0
 24021                           ;incstack = 0
 24022  00663C  0EDC               	movlw	low _ClipEvent
 24023  00663E  0100               	movlb	0	; () banked
 24024  006640  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24025  006642  0E00               	movlw	high _ClipEvent
 24026  006644  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24027  006646  EC17  F034         	call	_ReceiveEvt	;wreg free
 24028  00664A  0900               	iorlw	0
 24029  00664C  A4D8               	btfss	status,2,c
 24030  00664E  D00B               	goto	l1156
 24031                           
 24032                           ;mdm_gsm_gprs.c: 1040: {
 24033                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 24034  006650  0ECA               	movlw	low _callerNumber
 24035  006652  0100               	movlb	0	; () banked
 24036  006654  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24037  006656  0E04               	movlw	high _callerNumber
 24038  006658  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24039  00665A  0E00               	movlw	0
 24040  00665C  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24041  00665E  0E0D               	movlw	13
 24042  006660  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24043  006662  EC39  F033         	call	_ClearBuffer	;wreg free
 24044  006666                     l1156:
 24045                           
 24046                           ;mdm_gsm_gprs.c: 1042: }
 24047                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 24048  006666  0ECA               	movlw	low _callerNumber
 24049  006668  0100               	movlb	0	; () banked
 24050  00666A  6F83               	movwf	?_GetCallerNumber& (0+255),b
 24051  00666C  0E04               	movlw	high _callerNumber
 24052  00666E  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 24053  006670  0012               	return	
 24054  006672                     __end_of_GetCallerNumber:
 24055                           	opt stack 0
 24056                           tosu	equ	0xFFF
 24057                           tosh	equ	0xFFE
 24058                           tosl	equ	0xFFD
 24059                           pclath	equ	0xFFA
 24060                           tblptru	equ	0xFF8
 24061                           tblptrh	equ	0xFF7
 24062                           tblptrl	equ	0xFF6
 24063                           tablat	equ	0xFF5
 24064                           prodh	equ	0xFF4
 24065                           prodl	equ	0xFF3
 24066                           intcon	equ	0xFF2
 24067                           intcon2	equ	0xFF1
 24068                           intcon3	equ	0xFF0
 24069                           indf0	equ	0xFEF
 24070                           postinc0	equ	0xFEE
 24071                           plusw0	equ	0xFEB
 24072                           fsr0h	equ	0xFEA
 24073                           fsr0l	equ	0xFE9
 24074                           wreg	equ	0xFE8
 24075                           indf1	equ	0xFE7
 24076                           postinc1	equ	0xFE6
 24077                           postdec1	equ	0xFE5
 24078                           fsr1h	equ	0xFE2
 24079                           fsr1l	equ	0xFE1
 24080                           indf2	equ	0xFDF
 24081                           postinc2	equ	0xFDE
 24082                           postdec2	equ	0xFDD
 24083                           plusw2	equ	0xFDB
 24084                           fsr2h	equ	0xFDA
 24085                           fsr2l	equ	0xFD9
 24086                           status	equ	0xFD8
 24087                           
 24088 ;; *************** function _delCmdFsm *****************
 24089 ;; Defined at:
 24090 ;;		line 78 in file "../Source/c/04_App/cmd_del.c"
 24091 ;; Parameters:    Size  Location     Type
 24092 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 24093 ;;		 -> receivedNumber(13), 
 24094 ;;  smsText         2    7[BANK1 ] PTR unsigned char 
 24095 ;;		 -> smsText(20), 
 24096 ;;  isCmdSuccess    2    9[BANK1 ] PTR unsigned char 
 24097 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 24098 ;; Auto vars:     Size  Location     Type
 24099 ;;  emptyNumber    13   11[BANK1 ] const unsigned char [13]
 24100 ;;  searchNumber    1   27[BANK1 ] unsigned char 
 24101 ;;  numberInMemo    1   26[BANK1 ] unsigned char 
 24102 ;;  masterOpResu    1   25[BANK1 ] unsigned char 
 24103 ;;  isComplete      1   24[BANK1 ] unsigned char 
 24104 ;; Return value:  Size  Location     Type
 24105 ;;                  1    wreg      unsigned char 
 24106 ;; Registers used:
 24107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24108 ;; Tracked objects:
 24109 ;;		On entry : 0/0
 24110 ;;		On exit  : 0/0
 24111 ;;		Unchanged: 0/0
 24112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24113 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24114 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24116 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24117 ;;Total ram usage:       23 bytes
 24118 ;; Hardware stack levels used:    1
 24119 ;; Hardware stack levels required when called:   18
 24120 ;; This function calls:
 24121 ;;		_isMasterNumber
 24122 ;;		_isNumberInMemory
 24123 ;;		_saveNumberInMemory
 24124 ;; This function is called by:
 24125 ;;		_MyApp_Task
 24126 ;; This function uses a non-reentrant model
 24127 ;;
 24128                           
 24129                           	psect	text113
 24130  003AB6                     __ptext113:
 24131                           	opt stack 0
 24132  003AB6                     _delCmdFsm:
 24133                           	opt stack 9
 24134                           
 24135                           ;cmd_del.c: 80: const uint8_t emptyNumber[((UINT8)(13))] = {0};
 24136                           
 24137                           ; BSR set to: 0
 24138                           ;incstack = 0
 24139  003AB6  0E0F               	movlw	low delCmdFsm@F9014
 24140  003AB8  6EF6               	movwf	tblptrl,c
 24141  003ABA                     	if	1	;There is more than 1 active tblptr byte
 24142  003ABA  0EFC               	movlw	high delCmdFsm@F9014
 24143  003ABC  6EF7               	movwf	tblptrh,c
 24144  003ABE                     	endif
 24145  003ABE                     	if	0	;There are less than 3 active tblptr bytes
 24146  003ABE                     	endif
 24147  003ABE  EE21  F00B         	lfsr	2,delCmdFsm@emptyNumber
 24148  003AC2  0E0C               	movlw	12
 24149  003AC4                     u16350:
 24150  003AC4  0009               	tblrd		*+
 24151  003AC6  CFF5 FFDE          	movff	tablat,postinc2
 24152  003ACA  06E8               	decf	wreg,f,c
 24153  003ACC  E2FB               	bc	u16350
 24154                           
 24155                           ;cmd_del.c: 81: static delFsmStates currentState = DEL_FSM_CHECK_MASTER;
 24156                           ;cmd_del.c: 82: bool isComplete = 0;
 24157  003ACE  0E00               	movlw	0
 24158  003AD0  0101               	movlb	1	; () banked
 24159  003AD2  6F18               	movwf	delCmdFsm@isComplete& (0+255),b
 24160                           
 24161                           ; BSR set to: 1
 24162                           ;cmd_del.c: 83: uint8_t numberInMemory = 0;
 24163  003AD4  0E00               	movlw	0
 24164  003AD6  6F1A               	movwf	delCmdFsm@numberInMemory& (0+255),b
 24165                           
 24166                           ; BSR set to: 1
 24167                           ;cmd_del.c: 84: uint8_t masterOpResult = OP_FAILED;
 24168  003AD8  0E01               	movlw	1
 24169  003ADA  6F19               	movwf	delCmdFsm@masterOpResult& (0+255),b
 24170                           
 24171                           ; BSR set to: 1
 24172                           ;cmd_del.c: 85: uint8_t searchNumber = OP_FAILED;
 24173  003ADC  0E01               	movlw	1
 24174  003ADE  6F1B               	movwf	delCmdFsm@searchNumber& (0+255),b
 24175                           
 24176                           ;cmd_del.c: 87: switch (currentState)
 24177  003AE0  D04A               	goto	l2679
 24178  003AE2                     
 24179                           ; BSR set to: 1
 24180                           ;cmd_del.c: 90: *isCmdSuccessfull = 0;
 24181                           
 24182                           ; BSR set to: 1
 24183  003AE2  C109  FFD9         	movff	delCmdFsm@isCmdSuccessfull,fsr2l
 24184  003AE6  C10A  FFDA         	movff	delCmdFsm@isCmdSuccessfull+1,fsr2h
 24185  003AEA  0E00               	movlw	0
 24186  003AEC  6EDF               	movwf	indf2,c
 24187                           
 24188                           ; BSR set to: 1
 24189                           ;cmd_del.c: 91: masterOpResult = isMasterNumber(receivedNumber);
 24190  003AEE  C105  F100         	movff	delCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 24191  003AF2  C106  F101         	movff	delCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 24192  003AF6  EC58  F02B         	call	_isMasterNumber	;wreg free
 24193  003AFA  0101               	movlb	1	; () banked
 24194  003AFC  6F19               	movwf	delCmdFsm@masterOpResult& (0+255),b
 24195                           
 24196                           ; BSR set to: 1
 24197                           ;cmd_del.c: 92: if (masterOpResult == OP_SUCCESS)
 24198  003AFE  5119               	movf	delCmdFsm@masterOpResult& (0+255),w,b
 24199  003B00  A4D8               	btfss	status,2,c
 24200  003B02  D002               	goto	l2681
 24201                           
 24202                           ; BSR set to: 1
 24203                           ;cmd_del.c: 93: {
 24204                           ;cmd_del.c: 94: currentState = DEL_FSM_REMOVE_NUMBER;
 24205  003B04  0E01               	movlw	1
 24206  003B06  D002               	goto	L44
 24207  003B08                     l2681:
 24208                           
 24209                           ; BSR set to: 1
 24210                           ;cmd_del.c: 96: else if (masterOpResult == OP_FAILED)
 24211                           
 24212                           ; BSR set to: 1
 24213  003B08  0519               	decf	delCmdFsm@masterOpResult& (0+255),w,b
 24214  003B0A  D02D               	goto	L101
 24215  003B0C                     L44:
 24216  003B0C  6FD8               	movwf	delCmdFsm@currentState& (0+255),b
 24217                           
 24218                           ; BSR set to: 1
 24219                           ;cmd_del.c: 99: }
 24220                           ;cmd_del.c: 100: break;
 24221                           
 24222                           ; BSR set to: 1
 24223  003B0E  D03D               	goto	l2684
 24224  003B10                     
 24225                           ; BSR set to: 1
 24226                           ;cmd_del.c: 103: searchNumber = isNumberInMemory(smsText + 4, &numberInMemory);
 24227                           
 24228                           ; BSR set to: 1
 24229  003B10  0E04               	movlw	4
 24230  003B12  2507               	addwf	delCmdFsm@smsText& (0+255),w,b
 24231  003B14  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 24232  003B16  0E00               	movlw	0
 24233  003B18  2108               	addwfc	(delCmdFsm@smsText+1)& (0+255),w,b
 24234  003B1A  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 24235  003B1C  0E1A               	movlw	low delCmdFsm@numberInMemory
 24236  003B1E  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 24237  003B20  0E01               	movlw	high delCmdFsm@numberInMemory
 24238  003B22  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 24239  003B24  ECE0  F022         	call	_isNumberInMemory	;wreg free
 24240  003B28  0101               	movlb	1	; () banked
 24241  003B2A  6F1B               	movwf	delCmdFsm@searchNumber& (0+255),b
 24242                           
 24243                           ; BSR set to: 1
 24244                           ;cmd_del.c: 104: if (searchNumber == SEARCH_FSM_FOUND)
 24245  003B2C  0E03               	movlw	3
 24246  003B2E  191B               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 24247  003B30  A4D8               	btfss	status,2,c
 24248  003B32  D013               	goto	l2686
 24249                           
 24250                           ; BSR set to: 1
 24251                           ;cmd_del.c: 105: {
 24252                           ;cmd_del.c: 106: saveNumberInMemory(numberInMemory, emptyNumber);
 24253  003B34  0E0B               	movlw	low delCmdFsm@emptyNumber
 24254  003B36  0100               	movlb	0	; () banked
 24255  003B38  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 24256  003B3A  0E01               	movlw	high delCmdFsm@emptyNumber
 24257  003B3C  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 24258  003B3E  0101               	movlb	1	; () banked
 24259  003B40  511A               	movf	delCmdFsm@numberInMemory& (0+255),w,b
 24260  003B42  ECE3  F035         	call	_saveNumberInMemory
 24261                           
 24262                           ;cmd_del.c: 107: currentState = DEL_FSM_COMPLETE;
 24263  003B46  0E02               	movlw	2
 24264  003B48  0101               	movlb	1	; () banked
 24265  003B4A  6FD8               	movwf	delCmdFsm@currentState& (0+255),b
 24266                           
 24267                           ; BSR set to: 1
 24268                           ;cmd_del.c: 108: *isCmdSuccessfull = 1;
 24269  003B4C  C109  FFD9         	movff	delCmdFsm@isCmdSuccessfull,fsr2l
 24270  003B50  C10A  FFDA         	movff	delCmdFsm@isCmdSuccessfull+1,fsr2h
 24271  003B54  0E01               	movlw	1
 24272  003B56  6EDF               	movwf	indf2,c
 24273                           
 24274                           ;cmd_del.c: 109: }
 24275  003B58  D018               	goto	l2684
 24276  003B5A                     l2686:
 24277                           
 24278                           ; BSR set to: 1
 24279                           ;cmd_del.c: 110: else if (searchNumber == SEARCH_FSM_NOT_FOUND || searchNumber == SEARCH
      +                          _FSM_ERROR)
 24280                           
 24281                           ; BSR set to: 1
 24282  003B5A  0E04               	movlw	4
 24283  003B5C  191B               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 24284  003B5E  B4D8               	btfsc	status,2,c
 24285  003B60  D004               	goto	u16400
 24286                           
 24287                           ; BSR set to: 1
 24288  003B62  0E02               	movlw	2
 24289  003B64  191B               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 24290  003B66                     L101:
 24291  003B66  A4D8               	btfss	status,2,c
 24292  003B68  D010               	goto	l2684
 24293  003B6A                     u16400:
 24294                           
 24295                           ; BSR set to: 1
 24296                           ;cmd_del.c: 111: {
 24297                           ;cmd_del.c: 112: currentState = DEL_FSM_COMPLETE;
 24298                           
 24299                           ; BSR set to: 1
 24300  003B6A  0E02               	movlw	2
 24301  003B6C  D7CF               	goto	L44
 24302  003B6E                     
 24303                           ; BSR set to: 1
 24304                           ;cmd_del.c: 117: isComplete = 1;
 24305                           
 24306                           ; BSR set to: 1
 24307  003B6E  0E01               	movlw	1
 24308  003B70  6F18               	movwf	delCmdFsm@isComplete& (0+255),b
 24309                           
 24310                           ;cmd_del.c: 118: currentState = DEL_FSM_CHECK_MASTER;
 24311  003B72  0E00               	movlw	0
 24312  003B74  D7CB               	goto	L44
 24313  003B76                     l2679:
 24314                           
 24315                           ; BSR set to: 1
 24316                           
 24317                           ; BSR set to: 1
 24318  003B76  51D8               	movf	delCmdFsm@currentState& (0+255),w,b
 24319                           
 24320                           ; Switch size 1, requested type "space"
 24321                           ; Number of cases is 3, Range of values is 0 to 2
 24322                           ; switch strategies available:
 24323                           ; Name         Instructions Cycles
 24324                           ; simple_byte           10     6 (average)
 24325                           ;	Chosen strategy is simple_byte
 24326  003B78  0A00               	xorlw	0	; case 0
 24327  003B7A  B4D8               	btfsc	status,2,c
 24328  003B7C  D7B2               	goto	l2680
 24329  003B7E  0A01               	xorlw	1	; case 1
 24330  003B80  B4D8               	btfsc	status,2,c
 24331  003B82  D7C6               	goto	l2685
 24332  003B84  0A03               	xorlw	3	; case 2
 24333  003B86  B4D8               	btfsc	status,2,c
 24334  003B88  D7F2               	goto	l2691
 24335  003B8A                     l2684:
 24336                           
 24337                           ; BSR set to: 1
 24338                           ;cmd_del.c: 124: return isComplete;
 24339                           
 24340                           ; BSR set to: 1
 24341  003B8A  5118               	movf	delCmdFsm@isComplete& (0+255),w,b
 24342  003B8C  0012               	return	
 24343  003B8E                     __end_of_delCmdFsm:
 24344                           	opt stack 0
 24345                           tosu	equ	0xFFF
 24346                           tosh	equ	0xFFE
 24347                           tosl	equ	0xFFD
 24348                           pclath	equ	0xFFA
 24349                           tblptru	equ	0xFF8
 24350                           tblptrh	equ	0xFF7
 24351                           tblptrl	equ	0xFF6
 24352                           tablat	equ	0xFF5
 24353                           prodh	equ	0xFF4
 24354                           prodl	equ	0xFF3
 24355                           intcon	equ	0xFF2
 24356                           intcon2	equ	0xFF1
 24357                           intcon3	equ	0xFF0
 24358                           indf0	equ	0xFEF
 24359                           postinc0	equ	0xFEE
 24360                           plusw0	equ	0xFEB
 24361                           fsr0h	equ	0xFEA
 24362                           fsr0l	equ	0xFE9
 24363                           wreg	equ	0xFE8
 24364                           indf1	equ	0xFE7
 24365                           postinc1	equ	0xFE6
 24366                           postdec1	equ	0xFE5
 24367                           fsr1h	equ	0xFE2
 24368                           fsr1l	equ	0xFE1
 24369                           indf2	equ	0xFDF
 24370                           postinc2	equ	0xFDE
 24371                           postdec2	equ	0xFDD
 24372                           plusw2	equ	0xFDB
 24373                           fsr2h	equ	0xFDA
 24374                           fsr2l	equ	0xFD9
 24375                           status	equ	0xFD8
 24376                           
 24377 ;; *************** function _cmdVisualEffet *****************
 24378 ;; Defined at:
 24379 ;;		line 117 in file "../Source/c/04_App/utils.c"
 24380 ;; Parameters:    Size  Location     Type
 24381 ;;  isCmdSuccess    1    wreg     unsigned char 
 24382 ;; Auto vars:     Size  Location     Type
 24383 ;;  isCmdSuccess    1   51[BANK0 ] unsigned char 
 24384 ;;  seconds         1   52[BANK0 ] unsigned char 
 24385 ;; Return value:  Size  Location     Type
 24386 ;;                  1    wreg      void 
 24387 ;; Registers used:
 24388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24389 ;; Tracked objects:
 24390 ;;		On entry : 0/0
 24391 ;;		On exit  : 0/0
 24392 ;;		Unchanged: 0/0
 24393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24395 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24397 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24398 ;;Total ram usage:        2 bytes
 24399 ;; Hardware stack levels used:    1
 24400 ;; Hardware stack levels required when called:   13
 24401 ;; This function calls:
 24402 ;;		_Led_SetLedStatus
 24403 ;;		_secondsAppTimer
 24404 ;; This function is called by:
 24405 ;;		_MyApp_Task
 24406 ;; This function uses a non-reentrant model
 24407 ;;
 24408                           
 24409                           	psect	text114
 24410  0061C2                     __ptext114:
 24411                           	opt stack 0
 24412  0061C2                     _cmdVisualEffet:
 24413                           	opt stack 14
 24414                           
 24415                           ; BSR set to: 1
 24416                           ;incstack = 0
 24417                           ;cmdVisualEffet@isCmdSuccessfull stored from wreg
 24418  0061C2  0100               	movlb	0	; () banked
 24419  0061C4  6F93               	movwf	cmdVisualEffet@isCmdSuccessfull& (0+255),b
 24420                           
 24421                           ;utils.c: 119: uint8_t seconds = 7;
 24422  0061C6  0E07               	movlw	7
 24423  0061C8  0100               	movlb	0	; () banked
 24424  0061CA  6F94               	movwf	cmdVisualEffet@seconds& (0+255),b
 24425                           
 24426                           ; BSR set to: 0
 24427                           ;utils.c: 120: if (isCmdSuccessfull)
 24428  0061CC  5193               	movf	cmdVisualEffet@isCmdSuccessfull& (0+255),w,b
 24429  0061CE  B4D8               	btfsc	status,2,c
 24430  0061D0  D002               	goto	l2905
 24431                           
 24432                           ; BSR set to: 0
 24433                           ;utils.c: 121: {
 24434                           ;utils.c: 122: seconds = 3;
 24435  0061D2  0E03               	movlw	3
 24436  0061D4  6F94               	movwf	cmdVisualEffet@seconds& (0+255),b
 24437  0061D6                     l2905:
 24438                           
 24439                           ; BSR set to: 0
 24440                           ;utils.c: 123: }
 24441                           ;utils.c: 124: if (secondsAppTimer(seconds, &blinkInSeconds, 0))
 24442                           
 24443                           ; BSR set to: 0
 24444  0061D6  0EFD               	movlw	low _blinkInSeconds
 24445  0061D8  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 24446  0061DA  0E03               	movlw	high _blinkInSeconds
 24447  0061DC  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 24448  0061DE  0E00               	movlw	0
 24449  0061E0  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 24450  0061E2  5194               	movf	cmdVisualEffet@seconds& (0+255),w,b
 24451  0061E4  EC41  F025         	call	_secondsAppTimer
 24452  0061E8  0900               	iorlw	0
 24453  0061EA  B4D8               	btfsc	status,2,c
 24454  0061EC  D007               	goto	l2906
 24455                           
 24456                           ;utils.c: 125: {
 24457                           ;utils.c: 126: Led_SetLedStatus(2u, LED_STS_OFF);
 24458  0061EE  0E00               	movlw	0
 24459  0061F0  0100               	movlb	0	; () banked
 24460  0061F2  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 24461  0061F4  0E02               	movlw	2
 24462  0061F6  ECE8  F033         	call	_Led_SetLedStatus
 24463                           
 24464                           ;utils.c: 127: }
 24465  0061FA  0012               	return	
 24466  0061FC                     l2906:
 24467                           
 24468                           ;utils.c: 128: else
 24469                           ;utils.c: 129: {
 24470                           ;utils.c: 130: Led_SetLedStatus(2u, LED_STS_BLINK);
 24471  0061FC  0E03               	movlw	3
 24472  0061FE  0100               	movlb	0	; () banked
 24473  006200  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 24474  006202  0E02               	movlw	2
 24475  006204  ECE8  F033         	call	_Led_SetLedStatus
 24476  006208  0012               	return	
 24477  00620A                     __end_of_cmdVisualEffet:
 24478                           	opt stack 0
 24479                           tosu	equ	0xFFF
 24480                           tosh	equ	0xFFE
 24481                           tosl	equ	0xFFD
 24482                           pclath	equ	0xFFA
 24483                           tblptru	equ	0xFF8
 24484                           tblptrh	equ	0xFF7
 24485                           tblptrl	equ	0xFF6
 24486                           tablat	equ	0xFF5
 24487                           prodh	equ	0xFF4
 24488                           prodl	equ	0xFF3
 24489                           intcon	equ	0xFF2
 24490                           intcon2	equ	0xFF1
 24491                           intcon3	equ	0xFF0
 24492                           indf0	equ	0xFEF
 24493                           postinc0	equ	0xFEE
 24494                           plusw0	equ	0xFEB
 24495                           fsr0h	equ	0xFEA
 24496                           fsr0l	equ	0xFE9
 24497                           wreg	equ	0xFE8
 24498                           indf1	equ	0xFE7
 24499                           postinc1	equ	0xFE6
 24500                           postdec1	equ	0xFE5
 24501                           fsr1h	equ	0xFE2
 24502                           fsr1l	equ	0xFE1
 24503                           indf2	equ	0xFDF
 24504                           postinc2	equ	0xFDE
 24505                           postdec2	equ	0xFDD
 24506                           plusw2	equ	0xFDB
 24507                           fsr2h	equ	0xFDA
 24508                           fsr2l	equ	0xFD9
 24509                           status	equ	0xFD8
 24510                           
 24511 ;; *************** function _secondsAppTimer *****************
 24512 ;; Defined at:
 24513 ;;		line 80 in file "../Source/c/04_App/utils.c"
 24514 ;; Parameters:    Size  Location     Type
 24515 ;;  seconds         1    wreg     unsigned char 
 24516 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 24517 ;;		 -> blinkInSeconds(2), setupCallTicks(2), initGprsModem@modemCounter(2), RAM(3775), 
 24518 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 24519 ;; Auto vars:     Size  Location     Type
 24520 ;;  seconds         1   47[BANK0 ] unsigned char 
 24521 ;;  destinationT    2   49[BANK0 ] unsigned int 
 24522 ;;  isExpired       1   48[BANK0 ] unsigned char 
 24523 ;; Return value:  Size  Location     Type
 24524 ;;                  1    wreg      unsigned char 
 24525 ;; Registers used:
 24526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24527 ;; Tracked objects:
 24528 ;;		On entry : 0/0
 24529 ;;		On exit  : 0/0
 24530 ;;		Unchanged: 0/0
 24531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24532 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24533 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24534 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24535 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24536 ;;Total ram usage:        9 bytes
 24537 ;; Hardware stack levels used:    1
 24538 ;; Hardware stack levels required when called:   12
 24539 ;; This function calls:
 24540 ;;		___lwdiv
 24541 ;;		___wmul
 24542 ;; This function is called by:
 24543 ;;		_initGprsModem
 24544 ;;		_waitSetupCall
 24545 ;;		_triggerCmdFsm
 24546 ;;		_cmdVisualEffet
 24547 ;; This function uses a non-reentrant model
 24548 ;;
 24549                           
 24550                           	psect	text115
 24551  004A82                     __ptext115:
 24552                           	opt stack 0
 24553  004A82                     _secondsAppTimer:
 24554                           	opt stack 14
 24555                           
 24556                           ;incstack = 0
 24557                           ;secondsAppTimer@seconds stored from wreg
 24558  004A82  0100               	movlb	0	; () banked
 24559  004A84  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 24560                           
 24561                           ;utils.c: 82: bool isExpired = 1;
 24562  004A86  0E01               	movlw	1
 24563  004A88  0100               	movlb	0	; () banked
 24564  004A8A  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 24565                           
 24566                           ; BSR set to: 0
 24567                           ;utils.c: 83: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(100));
 24568  004A8C  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 24569  004A90  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 24570  004A92  0E03               	movlw	3
 24571  004A94  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24572  004A96  0EE8               	movlw	232
 24573  004A98  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 24574  004A9A  EC6E  F034         	call	___wmul	;wreg free
 24575  004A9E  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 24576  004AA2  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 24577  004AA6  0E00               	movlw	0
 24578  004AA8  0100               	movlb	0	; () banked
 24579  004AAA  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24580  004AAC  0E64               	movlw	100
 24581  004AAE  6F85               	movwf	___lwdiv@divisor& (0+255),b
 24582  004AB0  EC08  F02F         	call	___lwdiv	;wreg free
 24583  004AB4  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 24584  004AB8  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 24585                           
 24586                           ;utils.c: 85: if (*counter < destinationTicks)
 24587  004ABC  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24588  004AC0  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24589  004AC4  0100               	movlb	0	; () banked
 24590  004AC6  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 24591  004AC8  5CDE               	subwf	postinc2,w,c
 24592  004ACA  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 24593  004ACC  58DE               	subwfb	postinc2,w,c
 24594  004ACE  B0D8               	btfsc	status,0,c
 24595  004AD0  D009               	goto	l2895
 24596                           
 24597                           ; BSR set to: 0
 24598                           ;utils.c: 86: {
 24599                           ;utils.c: 87: *counter += 1;
 24600  004AD2  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24601  004AD6  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24602  004ADA  2ADE               	incf	postinc2,f,c
 24603  004ADC  0E00               	movlw	0
 24604  004ADE  22DD               	addwfc	postdec2,f,c
 24605                           
 24606                           ; BSR set to: 0
 24607                           ;utils.c: 88: isExpired = 0;
 24608  004AE0  0E00               	movlw	0
 24609  004AE2  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 24610  004AE4                     l2895:
 24611                           
 24612                           ; BSR set to: 0
 24613                           ;utils.c: 89: }
 24614                           ;utils.c: 90: if (*counter == destinationTicks)
 24615                           
 24616                           ; BSR set to: 0
 24617  004AE4  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24618  004AE8  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24619  004AEC  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 24620  004AEE  18DE               	xorwf	postinc2,w,c
 24621  004AF0  E117               	bnz	l14470
 24622  004AF2  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 24623  004AF4  18DE               	xorwf	postinc2,w,c
 24624  004AF6  A4D8               	btfss	status,2,c
 24625  004AF8  D013               	goto	l2898
 24626                           
 24627                           ; BSR set to: 0
 24628                           ;utils.c: 91: {
 24629                           ;utils.c: 92: if (isCyclic)
 24630  004AFA  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 24631  004AFC  B4D8               	btfsc	status,2,c
 24632  004AFE  D008               	goto	l2897
 24633                           
 24634                           ; BSR set to: 0
 24635                           ;utils.c: 93: {
 24636                           ;utils.c: 94: *counter = 0;
 24637  004B00  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24638  004B04  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24639  004B08  0E00               	movlw	0
 24640  004B0A  6EDE               	movwf	postinc2,c
 24641  004B0C  0E00               	movlw	0
 24642  004B0E  D007               	goto	L45
 24643  004B10                     l2897:
 24644                           
 24645                           ; BSR set to: 0
 24646                           ;utils.c: 96: else
 24647                           ;utils.c: 97: {
 24648                           ;utils.c: 98: *counter = 0xFFFF;
 24649                           
 24650                           ; BSR set to: 0
 24651  004B10  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24652  004B14  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24653  004B18  0EFF               	movlw	255
 24654  004B1A  6EDE               	movwf	postinc2,c
 24655  004B1C  0EFF               	movlw	255
 24656  004B1E                     L45:
 24657  004B1E  6EDD               	movwf	postdec2,c
 24658  004B20                     l2898:
 24659  004B20                     l14470:
 24660                           
 24661                           ; BSR set to: 0
 24662                           ;utils.c: 99: }
 24663                           ;utils.c: 100: }
 24664                           ;utils.c: 101: return isExpired;
 24665  004B20  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 24666  004B22  0012               	return	
 24667  004B24                     __end_of_secondsAppTimer:
 24668                           	opt stack 0
 24669                           tosu	equ	0xFFF
 24670                           tosh	equ	0xFFE
 24671                           tosl	equ	0xFFD
 24672                           pclath	equ	0xFFA
 24673                           tblptru	equ	0xFF8
 24674                           tblptrh	equ	0xFF7
 24675                           tblptrl	equ	0xFF6
 24676                           tablat	equ	0xFF5
 24677                           prodh	equ	0xFF4
 24678                           prodl	equ	0xFF3
 24679                           intcon	equ	0xFF2
 24680                           intcon2	equ	0xFF1
 24681                           intcon3	equ	0xFF0
 24682                           indf0	equ	0xFEF
 24683                           postinc0	equ	0xFEE
 24684                           plusw0	equ	0xFEB
 24685                           fsr0h	equ	0xFEA
 24686                           fsr0l	equ	0xFE9
 24687                           wreg	equ	0xFE8
 24688                           indf1	equ	0xFE7
 24689                           postinc1	equ	0xFE6
 24690                           postdec1	equ	0xFE5
 24691                           fsr1h	equ	0xFE2
 24692                           fsr1l	equ	0xFE1
 24693                           indf2	equ	0xFDF
 24694                           postinc2	equ	0xFDE
 24695                           postdec2	equ	0xFDD
 24696                           plusw2	equ	0xFDB
 24697                           fsr2h	equ	0xFDA
 24698                           fsr2l	equ	0xFD9
 24699                           status	equ	0xFD8
 24700                           
 24701 ;; *************** function _addCmdFsm *****************
 24702 ;; Defined at:
 24703 ;;		line 79 in file "../Source/c/04_App/cmd_add.c"
 24704 ;; Parameters:    Size  Location     Type
 24705 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 24706 ;;		 -> receivedNumber(13), 
 24707 ;;  smsText         2    7[BANK1 ] PTR unsigned char 
 24708 ;;		 -> smsText(20), 
 24709 ;;  isCmdSuccess    2    9[BANK1 ] PTR unsigned char 
 24710 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 24711 ;; Auto vars:     Size  Location     Type
 24712 ;;  searchNumber    1   14[BANK1 ] unsigned char 
 24713 ;;  numberInMemo    1   13[BANK1 ] unsigned char 
 24714 ;;  masterOpResu    1   12[BANK1 ] unsigned char 
 24715 ;;  isComplete      1   11[BANK1 ] unsigned char 
 24716 ;; Return value:  Size  Location     Type
 24717 ;;                  1    wreg      unsigned char 
 24718 ;; Registers used:
 24719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24720 ;; Tracked objects:
 24721 ;;		On entry : 0/0
 24722 ;;		On exit  : 0/0
 24723 ;;		Unchanged: 0/0
 24724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24725 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24726 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24728 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24729 ;;Total ram usage:       10 bytes
 24730 ;; Hardware stack levels used:    1
 24731 ;; Hardware stack levels required when called:   18
 24732 ;; This function calls:
 24733 ;;		_findEmptySpot
 24734 ;;		_isMasterNumber
 24735 ;;		_isNumberInMemory
 24736 ;;		_saveNumberInMemory
 24737 ;; This function is called by:
 24738 ;;		_MyApp_Task
 24739 ;; This function uses a non-reentrant model
 24740 ;;
 24741                           
 24742                           	psect	text116
 24743  0033A8                     __ptext116:
 24744                           	opt stack 0
 24745  0033A8                     _addCmdFsm:
 24746                           	opt stack 9
 24747                           
 24748                           ;cmd_add.c: 81: static addFsmStates currentState = ADD_FSM_CHECK_MASTER;
 24749                           ;cmd_add.c: 82: bool isComplete = 0;
 24750                           
 24751                           ; BSR set to: 0
 24752                           ;incstack = 0
 24753  0033A8  0E00               	movlw	0
 24754  0033AA  0101               	movlb	1	; () banked
 24755  0033AC  6F0B               	movwf	addCmdFsm@isComplete& (0+255),b
 24756                           
 24757                           ;cmd_add.c: 83: uint8_t numberInMemory = 0;
 24758  0033AE  0E00               	movlw	0
 24759  0033B0  6F0D               	movwf	addCmdFsm@numberInMemory& (0+255),b
 24760                           
 24761                           ;cmd_add.c: 84: uint8_t masterOpResult = OP_FAILED;
 24762  0033B2  0E01               	movlw	1
 24763  0033B4  6F0C               	movwf	addCmdFsm@masterOpResult& (0+255),b
 24764                           
 24765                           ;cmd_add.c: 85: uint8_t searchNumber = OP_FAILED;
 24766  0033B6  0E01               	movlw	1
 24767  0033B8  6F0E               	movwf	addCmdFsm@searchNumber& (0+255),b
 24768                           
 24769                           ;cmd_add.c: 87: switch (currentState)
 24770  0033BA  D05E               	goto	l2640
 24771  0033BC                     
 24772                           ; BSR set to: 1
 24773                           ;cmd_add.c: 90: *isCmdSuccessfull = 0;
 24774                           
 24775                           ; BSR set to: 1
 24776  0033BC  C109  FFD9         	movff	addCmdFsm@isCmdSuccessfull,fsr2l
 24777  0033C0  C10A  FFDA         	movff	addCmdFsm@isCmdSuccessfull+1,fsr2h
 24778  0033C4  0E00               	movlw	0
 24779  0033C6  6EDF               	movwf	indf2,c
 24780                           
 24781                           ; BSR set to: 1
 24782                           ;cmd_add.c: 91: masterOpResult = isMasterNumber(receivedNumber);
 24783  0033C8  C105  F100         	movff	addCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 24784  0033CC  C106  F101         	movff	addCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 24785  0033D0  EC58  F02B         	call	_isMasterNumber	;wreg free
 24786  0033D4  0101               	movlb	1	; () banked
 24787  0033D6  6F0C               	movwf	addCmdFsm@masterOpResult& (0+255),b
 24788                           
 24789                           ; BSR set to: 1
 24790                           ;cmd_add.c: 92: if (masterOpResult == OP_SUCCESS)
 24791  0033D8  510C               	movf	addCmdFsm@masterOpResult& (0+255),w,b
 24792  0033DA  A4D8               	btfss	status,2,c
 24793  0033DC  D002               	goto	l2642
 24794                           
 24795                           ; BSR set to: 1
 24796                           ;cmd_add.c: 93: {
 24797                           ;cmd_add.c: 94: currentState = ADD_FSM_CHECK_DUPLICATED;
 24798  0033DE  0E01               	movlw	1
 24799  0033E0  D01F               	goto	L48
 24800  0033E2                     l2642:
 24801                           
 24802                           ; BSR set to: 1
 24803                           ;cmd_add.c: 96: else if (masterOpResult == OP_FAILED)
 24804                           
 24805                           ; BSR set to: 1
 24806  0033E2  050C               	decf	addCmdFsm@masterOpResult& (0+255),w,b
 24807  0033E4                     L49:
 24808  0033E4  A4D8               	btfss	status,2,c
 24809  0033E6  D055               	goto	l2645
 24810  0033E8  D040               	goto	u16340
 24811  0033EA                     
 24812                           ; BSR set to: 1
 24813                           ;cmd_add.c: 103: searchNumber = isNumberInMemory(smsText + 4, &numberInMemory);
 24814                           
 24815                           ; BSR set to: 1
 24816  0033EA  0E04               	movlw	4
 24817  0033EC  2507               	addwf	addCmdFsm@smsText& (0+255),w,b
 24818  0033EE  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 24819  0033F0  0E00               	movlw	0
 24820  0033F2  2108               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 24821  0033F4  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 24822  0033F6  0E0D               	movlw	low addCmdFsm@numberInMemory
 24823  0033F8  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 24824  0033FA  0E01               	movlw	high addCmdFsm@numberInMemory
 24825  0033FC  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 24826  0033FE  ECE0  F022         	call	_isNumberInMemory	;wreg free
 24827  003402  0101               	movlb	1	; () banked
 24828  003404  6F0E               	movwf	addCmdFsm@searchNumber& (0+255),b
 24829                           
 24830                           ; BSR set to: 1
 24831                           ;cmd_add.c: 104: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 24832  003406  0E04               	movlw	4
 24833  003408  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24834  00340A  A4D8               	btfss	status,2,c
 24835  00340C  D002               	goto	l2647
 24836                           
 24837                           ; BSR set to: 1
 24838                           ;cmd_add.c: 105: {
 24839                           ;cmd_add.c: 106: currentState = ADD_FSM_SAVE_NEW;
 24840  00340E  0E02               	movlw	2
 24841  003410  D007               	goto	L48
 24842  003412                     l2647:
 24843                           
 24844                           ; BSR set to: 1
 24845                           ;cmd_add.c: 108: else if (searchNumber == SEARCH_FSM_FOUND || searchNumber == SEARCH_FSM
      +                          _ERROR)
 24846                           
 24847                           ; BSR set to: 1
 24848  003412  0E03               	movlw	3
 24849  003414  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24850  003416  B4D8               	btfsc	status,2,c
 24851  003418  D028               	goto	u16340
 24852                           
 24853                           ; BSR set to: 1
 24854  00341A  0E02               	movlw	2
 24855  00341C  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24856  00341E  D7E2               	goto	L49
 24857  003420                     L48:
 24858  003420  6FD9               	movwf	addCmdFsm@currentState& (0+255),b
 24859                           
 24860                           ; BSR set to: 1
 24861                           ;cmd_add.c: 111: }
 24862                           ;cmd_add.c: 112: break;
 24863                           
 24864                           ; BSR set to: 1
 24865  003422  D037               	goto	l2645
 24866  003424                     
 24867                           ; BSR set to: 1
 24868                           ;cmd_add.c: 115: searchNumber = findEmptySpot(&numberInMemory);
 24869                           
 24870                           ; BSR set to: 1
 24871  003424  0E0D               	movlw	low addCmdFsm@numberInMemory
 24872  003426  6F00               	movwf	findEmptySpot@positionInMemory& (0+255),b
 24873  003428  0E01               	movlw	high addCmdFsm@numberInMemory
 24874  00342A  6F01               	movwf	(findEmptySpot@positionInMemory+1)& (0+255),b
 24875  00342C  EC61  F027         	call	_findEmptySpot	;wreg free
 24876  003430  0101               	movlb	1	; () banked
 24877  003432  6F0E               	movwf	addCmdFsm@searchNumber& (0+255),b
 24878                           
 24879                           ; BSR set to: 1
 24880                           ;cmd_add.c: 116: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 24881  003434  0E04               	movlw	4
 24882  003436  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24883  003438  A4D8               	btfss	status,2,c
 24884  00343A  D7EB               	goto	l2647
 24885                           
 24886                           ; BSR set to: 1
 24887                           ;cmd_add.c: 117: {
 24888                           ;cmd_add.c: 118: saveNumberInMemory(numberInMemory, smsText + 4);
 24889  00343C  0E04               	movlw	4
 24890  00343E  2507               	addwf	addCmdFsm@smsText& (0+255),w,b
 24891  003440  0100               	movlb	0	; () banked
 24892  003442  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 24893  003444  0E00               	movlw	0
 24894  003446  0101               	movlb	1	; () banked
 24895  003448  2108               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 24896  00344A  0100               	movlb	0	; () banked
 24897  00344C  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 24898  00344E  0101               	movlb	1	; () banked
 24899  003450  510D               	movf	addCmdFsm@numberInMemory& (0+255),w,b
 24900  003452  ECE3  F035         	call	_saveNumberInMemory
 24901                           
 24902                           ;cmd_add.c: 119: currentState = ADD_FSM_COMPLETE;
 24903  003456  0E03               	movlw	3
 24904  003458  0101               	movlb	1	; () banked
 24905  00345A  6FD9               	movwf	addCmdFsm@currentState& (0+255),b
 24906                           
 24907                           ; BSR set to: 1
 24908                           ;cmd_add.c: 120: *isCmdSuccessfull = 1;
 24909  00345C  C109  FFD9         	movff	addCmdFsm@isCmdSuccessfull,fsr2l
 24910  003460  C10A  FFDA         	movff	addCmdFsm@isCmdSuccessfull+1,fsr2h
 24911  003464  0E01               	movlw	1
 24912  003466  6EDF               	movwf	indf2,c
 24913                           
 24914                           ;cmd_add.c: 121: }
 24915  003468  D014               	goto	l2645
 24916  00346A                     u16340:
 24917                           
 24918                           ; BSR set to: 1
 24919                           ;cmd_add.c: 123: {
 24920                           ;cmd_add.c: 124: currentState = ADD_FSM_COMPLETE;
 24921                           
 24922                           ; BSR set to: 1
 24923  00346A  0E03               	movlw	3
 24924  00346C  D7D9               	goto	L48
 24925  00346E                     
 24926                           ; BSR set to: 1
 24927                           ;cmd_add.c: 129: currentState = ADD_FSM_CHECK_MASTER;
 24928                           
 24929                           ; BSR set to: 1
 24930  00346E  0E00               	movlw	0
 24931  003470  6FD9               	movwf	addCmdFsm@currentState& (0+255),b
 24932                           
 24933                           ;cmd_add.c: 130: isComplete = 1;
 24934  003472  0E01               	movlw	1
 24935  003474  6F0B               	movwf	addCmdFsm@isComplete& (0+255),b
 24936                           
 24937                           ; BSR set to: 1
 24938                           ;cmd_add.c: 135: }
 24939                           
 24940                           ; BSR set to: 1
 24941                           ;cmd_add.c: 134: break;
 24942                           
 24943                           ;cmd_add.c: 133: default:
 24944                           
 24945                           ;cmd_add.c: 131: break;
 24946  003476  D00D               	goto	l2645
 24947  003478                     l2640:
 24948                           
 24949                           ; BSR set to: 1
 24950                           
 24951                           ; BSR set to: 1
 24952  003478  51D9               	movf	addCmdFsm@currentState& (0+255),w,b
 24953                           
 24954                           ; Switch size 1, requested type "space"
 24955                           ; Number of cases is 4, Range of values is 0 to 3
 24956                           ; switch strategies available:
 24957                           ; Name         Instructions Cycles
 24958                           ; simple_byte           13     7 (average)
 24959                           ;	Chosen strategy is simple_byte
 24960  00347A  0A00               	xorlw	0	; case 0
 24961  00347C  B4D8               	btfsc	status,2,c
 24962  00347E  D79E               	goto	l2641
 24963  003480  0A01               	xorlw	1	; case 1
 24964  003482  B4D8               	btfsc	status,2,c
 24965  003484  D7B2               	goto	l2646
 24966  003486  0A03               	xorlw	3	; case 2
 24967  003488  B4D8               	btfsc	status,2,c
 24968  00348A  D7CC               	goto	l2652
 24969  00348C  0A01               	xorlw	1	; case 3
 24970  00348E  B4D8               	btfsc	status,2,c
 24971  003490  D7EE               	goto	l2658
 24972  003492                     l2645:
 24973                           
 24974                           ; BSR set to: 1
 24975                           ;cmd_add.c: 136: return isComplete;
 24976                           
 24977                           ; BSR set to: 1
 24978  003492  510B               	movf	addCmdFsm@isComplete& (0+255),w,b
 24979  003494  0012               	return	
 24980  003496                     __end_of_addCmdFsm:
 24981                           	opt stack 0
 24982                           tosu	equ	0xFFF
 24983                           tosh	equ	0xFFE
 24984                           tosl	equ	0xFFD
 24985                           pclath	equ	0xFFA
 24986                           tblptru	equ	0xFF8
 24987                           tblptrh	equ	0xFF7
 24988                           tblptrl	equ	0xFF6
 24989                           tablat	equ	0xFF5
 24990                           prodh	equ	0xFF4
 24991                           prodl	equ	0xFF3
 24992                           intcon	equ	0xFF2
 24993                           intcon2	equ	0xFF1
 24994                           intcon3	equ	0xFF0
 24995                           indf0	equ	0xFEF
 24996                           postinc0	equ	0xFEE
 24997                           plusw0	equ	0xFEB
 24998                           fsr0h	equ	0xFEA
 24999                           fsr0l	equ	0xFE9
 25000                           wreg	equ	0xFE8
 25001                           indf1	equ	0xFE7
 25002                           postinc1	equ	0xFE6
 25003                           postdec1	equ	0xFE5
 25004                           fsr1h	equ	0xFE2
 25005                           fsr1l	equ	0xFE1
 25006                           indf2	equ	0xFDF
 25007                           postinc2	equ	0xFDE
 25008                           postdec2	equ	0xFDD
 25009                           plusw2	equ	0xFDB
 25010                           fsr2h	equ	0xFDA
 25011                           fsr2l	equ	0xFD9
 25012                           status	equ	0xFD8
 25013                           
 25014 ;; *************** function _saveNumberInMemory *****************
 25015 ;; Defined at:
 25016 ;;		line 140 in file "../Source/c/04_App/utils.c"
 25017 ;; Parameters:    Size  Location     Type
 25018 ;;  address         1    wreg     unsigned char 
 25019 ;;  phoneNumber     2   54[BANK0 ] PTR unsigned char 
 25020 ;;		 -> delCmdFsm@emptyNumber(13), smsText(20), UsbMasterPhoneNumber(15), callerNumber(13), 
 25021 ;; Auto vars:     Size  Location     Type
 25022 ;;  address         1   56[BANK0 ] unsigned char 
 25023 ;; Return value:  Size  Location     Type
 25024 ;;                  1    wreg      void 
 25025 ;; Registers used:
 25026 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25027 ;; Tracked objects:
 25028 ;;		On entry : 0/0
 25029 ;;		On exit  : 0/0
 25030 ;;		Unchanged: 0/0
 25031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25032 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25033 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25035 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25036 ;;Total ram usage:        3 bytes
 25037 ;; Hardware stack levels used:    1
 25038 ;; Hardware stack levels required when called:   14
 25039 ;; This function calls:
 25040 ;;		_Eeprom_Write
 25041 ;; This function is called by:
 25042 ;;		_addCmdFsm
 25043 ;;		_delCmdFsm
 25044 ;;		_initFsm
 25045 ;;		_detectUsbNumber
 25046 ;; This function uses a non-reentrant model
 25047 ;;
 25048                           
 25049                           	psect	text117
 25050  006BC6                     __ptext117:
 25051                           	opt stack 0
 25052  006BC6                     _saveNumberInMemory:
 25053                           	opt stack 12
 25054                           
 25055                           ; BSR set to: 1
 25056                           ;incstack = 0
 25057                           ;saveNumberInMemory@address stored from wreg
 25058  006BC6  0100               	movlb	0	; () banked
 25059  006BC8  6F98               	movwf	saveNumberInMemory@address& (0+255),b
 25060                           
 25061                           ;utils.c: 142: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 25062  006BCA  C096  F08F         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 25063  006BCE  C097  F090         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 25064  006BD2  0E0D               	movlw	13
 25065  006BD4  0100               	movlb	0	; () banked
 25066  006BD6  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 25067  006BD8  5198               	movf	saveNumberInMemory@address& (0+255),w,b
 25068  006BDA  EC32  F02F         	call	_Eeprom_Write
 25069  006BDE  0012               	return		;funcret
 25070  006BE0                     __end_of_saveNumberInMemory:
 25071                           	opt stack 0
 25072                           tosu	equ	0xFFF
 25073                           tosh	equ	0xFFE
 25074                           tosl	equ	0xFFD
 25075                           pclath	equ	0xFFA
 25076                           tblptru	equ	0xFF8
 25077                           tblptrh	equ	0xFF7
 25078                           tblptrl	equ	0xFF6
 25079                           tablat	equ	0xFF5
 25080                           prodh	equ	0xFF4
 25081                           prodl	equ	0xFF3
 25082                           intcon	equ	0xFF2
 25083                           intcon2	equ	0xFF1
 25084                           intcon3	equ	0xFF0
 25085                           indf0	equ	0xFEF
 25086                           postinc0	equ	0xFEE
 25087                           plusw0	equ	0xFEB
 25088                           fsr0h	equ	0xFEA
 25089                           fsr0l	equ	0xFE9
 25090                           wreg	equ	0xFE8
 25091                           indf1	equ	0xFE7
 25092                           postinc1	equ	0xFE6
 25093                           postdec1	equ	0xFE5
 25094                           fsr1h	equ	0xFE2
 25095                           fsr1l	equ	0xFE1
 25096                           indf2	equ	0xFDF
 25097                           postinc2	equ	0xFDE
 25098                           postdec2	equ	0xFDD
 25099                           plusw2	equ	0xFDB
 25100                           fsr2h	equ	0xFDA
 25101                           fsr2l	equ	0xFD9
 25102                           status	equ	0xFD8
 25103                           
 25104 ;; *************** function _Eeprom_Write *****************
 25105 ;; Defined at:
 25106 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 25107 ;; Parameters:    Size  Location     Type
 25108 ;;  MemoryAddres    1    wreg     unsigned char 
 25109 ;;  WriteBuffer     2   47[BANK0 ] PTR unsigned char 
 25110 ;;		 -> memoryPreamble(4), delCmdFsm@emptyNumber(13), smsText(20), UsbMasterPhoneNumber(15), 
 25111 ;;		 -> callerNumber(13), 
 25112 ;;  DataLength      1   49[BANK0 ] unsigned char 
 25113 ;; Auto vars:     Size  Location     Type
 25114 ;;  MemoryAddres    1   51[BANK0 ] unsigned char 
 25115 ;;  CommandLengt    1   53[BANK0 ] const unsigned char 
 25116 ;;  SlaveAddress    1   52[BANK0 ] const unsigned char 
 25117 ;;  WriteSts        1   50[BANK0 ] unsigned char 
 25118 ;; Return value:  Size  Location     Type
 25119 ;;                  1    wreg      unsigned char 
 25120 ;; Registers used:
 25121 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25122 ;; Tracked objects:
 25123 ;;		On entry : 0/0
 25124 ;;		On exit  : 0/0
 25125 ;;		Unchanged: 0/0
 25126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25127 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25128 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25130 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25131 ;;Total ram usage:        7 bytes
 25132 ;; Hardware stack levels used:    1
 25133 ;; Hardware stack levels required when called:   13
 25134 ;; This function calls:
 25135 ;;		_I2cSlv_SendI2cMsg
 25136 ;;		_StringCopy
 25137 ;; This function is called by:
 25138 ;;		_savePreamble
 25139 ;;		_saveNumberInMemory
 25140 ;; This function uses a non-reentrant model
 25141 ;;
 25142                           
 25143                           	psect	text118
 25144  005E64                     __ptext118:
 25145                           	opt stack 0
 25146  005E64                     _Eeprom_Write:
 25147                           	opt stack 12
 25148                           
 25149                           ;incstack = 0
 25150                           ;Eeprom_Write@MemoryAddress stored from wreg
 25151  005E64  0100               	movlb	0	; () banked
 25152  005E66  6F93               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 25153                           
 25154                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 25155  005E68  0E50               	movlw	80
 25156  005E6A  0100               	movlb	0	; () banked
 25157  005E6C  6F94               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 25158                           
 25159                           ; BSR set to: 0
 25160                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 25161  005E6E  2991               	incf	Eeprom_Write@DataLength& (0+255),w,b
 25162  005E70  6F95               	movwf	Eeprom_Write@CommandLength& (0+255),b
 25163                           
 25164                           ; BSR set to: 0
 25165                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 25166  005E72  0E00               	movlw	0
 25167  005E74  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 25168                           
 25169                           ; BSR set to: 0
 25170                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 25171  005E76  0E10               	movlw	16
 25172  005E78  6195               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 25173  005E7A  0012               	return	
 25174                           
 25175                           ; BSR set to: 0
 25176                           ;eeprom_if.c: 85: {
 25177                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 25178  005E7C  C093  F4BB         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 25179                           
 25180                           ; BSR set to: 0
 25181                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 25182  005E80  C08F  F085         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 25183  005E84  C090  F086         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 25184  005E88  0EBC               	movlw	low (_EepromBuffer+1)
 25185  005E8A  6F87               	movwf	StringCopy@DestStr& (0+255),b
 25186  005E8C  0E04               	movlw	high (_EepromBuffer+1)
 25187  005E8E  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25188  005E90  C091  F089         	movff	Eeprom_Write@DataLength,StringCopy@Len
 25189  005E94  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 25190  005E96  ECC8  F02C         	call	_StringCopy	;wreg free
 25191                           
 25192                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 25193  005E9A  0EBB               	movlw	low _EepromBuffer
 25194  005E9C  0100               	movlb	0	; () banked
 25195  005E9E  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 25196  005EA0  0E04               	movlw	high _EepromBuffer
 25197  005EA2  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 25198  005EA4  C094  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 25199  005EA8  C095  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 25200  005EAC  EC31  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 25201  005EB0  0100               	movlb	0	; () banked
 25202  005EB2  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 25203                           
 25204                           ; BSR set to: 0
 25205  005EB4  0012               	return	
 25206  005EB6                     __end_of_Eeprom_Write:
 25207                           	opt stack 0
 25208                           tosu	equ	0xFFF
 25209                           tosh	equ	0xFFE
 25210                           tosl	equ	0xFFD
 25211                           pclath	equ	0xFFA
 25212                           tblptru	equ	0xFF8
 25213                           tblptrh	equ	0xFF7
 25214                           tblptrl	equ	0xFF6
 25215                           tablat	equ	0xFF5
 25216                           prodh	equ	0xFF4
 25217                           prodl	equ	0xFF3
 25218                           intcon	equ	0xFF2
 25219                           intcon2	equ	0xFF1
 25220                           intcon3	equ	0xFF0
 25221                           indf0	equ	0xFEF
 25222                           postinc0	equ	0xFEE
 25223                           plusw0	equ	0xFEB
 25224                           fsr0h	equ	0xFEA
 25225                           fsr0l	equ	0xFE9
 25226                           wreg	equ	0xFE8
 25227                           indf1	equ	0xFE7
 25228                           postinc1	equ	0xFE6
 25229                           postdec1	equ	0xFE5
 25230                           fsr1h	equ	0xFE2
 25231                           fsr1l	equ	0xFE1
 25232                           indf2	equ	0xFDF
 25233                           postinc2	equ	0xFDE
 25234                           postdec2	equ	0xFDD
 25235                           plusw2	equ	0xFDB
 25236                           fsr2h	equ	0xFDA
 25237                           fsr2l	equ	0xFD9
 25238                           status	equ	0xFD8
 25239                           
 25240 ;; *************** function _isNumberInMemory *****************
 25241 ;; Defined at:
 25242 ;;		line 181 in file "../Source/c/04_App/utils.c"
 25243 ;; Parameters:    Size  Location     Type
 25244 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 25245 ;;		 -> receivedNumber(13), smsText(20), 
 25246 ;;  positionInMe    2    2[BANK1 ] PTR unsigned char 
 25247 ;;		 -> triggerCmdFsm@numberInMemory(1), delCmdFsm@numberInMemory(1), addCmdFsm@numberInMemory(1), 
 25248 ;; Auto vars:     Size  Location     Type
 25249 ;;  memoryOpResu    1    4[BANK1 ] enum E8246
 25250 ;; Return value:  Size  Location     Type
 25251 ;;                  1    wreg      enum E8974
 25252 ;; Registers used:
 25253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25254 ;; Tracked objects:
 25255 ;;		On entry : 0/0
 25256 ;;		On exit  : 0/0
 25257 ;;		Unchanged: 0/0
 25258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25259 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25260 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25262 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25263 ;;Total ram usage:        5 bytes
 25264 ;; Hardware stack levels used:    1
 25265 ;; Hardware stack levels required when called:   17
 25266 ;; This function calls:
 25267 ;;		_Eeprom_Read
 25268 ;;		_StringCompare
 25269 ;;		_isNumberValid
 25270 ;; This function is called by:
 25271 ;;		_addCmdFsm
 25272 ;;		_delCmdFsm
 25273 ;;		_triggerCmdFsm
 25274 ;; This function uses a non-reentrant model
 25275 ;;
 25276                           
 25277                           	psect	text119
 25278  0045C0                     __ptext119:
 25279                           	opt stack 0
 25280  0045C0                     _isNumberInMemory:
 25281                           	opt stack 9
 25282                           
 25283                           ;utils.c: 183: static searchFsmStates currentState = SEARCH_FSM_START;
 25284                           ;utils.c: 184: static uint8_t currentPosition = 32;
 25285                           ;utils.c: 185: EepromStsType memoryOpResult = OP_PENDING;
 25286                           
 25287                           ; BSR set to: 0
 25288                           ;incstack = 0
 25289  0045C0  0E02               	movlw	2
 25290  0045C2  0101               	movlb	1	; () banked
 25291  0045C4  6F04               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 25292                           
 25293                           ; BSR set to: 1
 25294                           ;utils.c: 187: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 25295  0045C6  0E01               	movlw	1
 25296  0045C8  0100               	movlb	0	; () banked
 25297  0045CA  65C5               	cpfsgt	isNumberInMemory@currentState& (0+255),b
 25298  0045CC  D004               	goto	l2926
 25299                           
 25300                           ; BSR set to: 0
 25301                           ;utils.c: 188: {
 25302                           ;utils.c: 189: currentState = SEARCH_FSM_START;
 25303  0045CE  0E00               	movlw	0
 25304  0045D0  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25305                           
 25306                           ;utils.c: 190: currentPosition = 32;
 25307  0045D2  0E20               	movlw	32
 25308  0045D4  6FE1               	movwf	isNumberInMemory@currentPosition& (0+255),b
 25309  0045D6                     l2926:
 25310                           
 25311                           ; BSR set to: 0
 25312                           ;utils.c: 191: }
 25313                           ;utils.c: 192: if (currentPosition >= (32 + (16 * 10)))
 25314                           
 25315                           ; BSR set to: 0
 25316  0045D6  0EBF               	movlw	191
 25317  0045D8  65E1               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 25318  0045DA  D045               	goto	l2928
 25319                           
 25320                           ; BSR set to: 0
 25321                           ;utils.c: 193: {
 25322                           ;utils.c: 194: currentState = SEARCH_FSM_NOT_FOUND;
 25323  0045DC  0E04               	movlw	4
 25324  0045DE  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25325                           
 25326                           ; BSR set to: 0
 25327                           ;utils.c: 195: }
 25328                           ;utils.c: 197: switch (currentState)
 25329  0045E0  D042               	goto	l2928
 25330  0045E2                     
 25331                           ; BSR set to: 0
 25332                           ;utils.c: 200: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13)));
 25333                           
 25334                           ; BSR set to: 0
 25335  0045E2  0E39               	movlw	low _readBuffer
 25336  0045E4  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 25337  0045E6  0E03               	movlw	high _readBuffer
 25338  0045E8  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 25339  0045EA  0E0D               	movlw	13
 25340  0045EC  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 25341  0045EE  51E1               	movf	isNumberInMemory@currentPosition& (0+255),w,b
 25342  0045F0  ECB4  F02E         	call	_Eeprom_Read
 25343  0045F4  0101               	movlb	1	; () banked
 25344  0045F6  6F04               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 25345                           
 25346                           ; BSR set to: 1
 25347                           ;utils.c: 201: if (memoryOpResult == OP_FAILED)
 25348  0045F8  0504               	decf	isNumberInMemory@memoryOpResult& (0+255),w,b
 25349  0045FA  A4D8               	btfss	status,2,c
 25350  0045FC  D002               	goto	l2930
 25351                           
 25352                           ; BSR set to: 1
 25353                           ;utils.c: 202: {
 25354                           ;utils.c: 203: currentState = SEARCH_FSM_ERROR;
 25355  0045FE  0E02               	movlw	2
 25356  004600  D005               	goto	L50
 25357  004602                     l2930:
 25358                           
 25359                           ;utils.c: 205: else if (memoryOpResult == OP_SUCCESS)
 25360                           
 25361                           ; BSR set to: 0
 25362  004602  0101               	movlb	1	; () banked
 25363  004604  5104               	movf	isNumberInMemory@memoryOpResult& (0+255),w,b
 25364  004606  A4D8               	btfss	status,2,c
 25365  004608  D035               	goto	l2933
 25366                           
 25367                           ; BSR set to: 1
 25368                           ;utils.c: 206: {
 25369                           ;utils.c: 207: currentState = SEARCH_FSM_CHECK_NUMBER;
 25370  00460A  0E01               	movlw	1
 25371  00460C                     L50:
 25372  00460C  0100               	movlb	0	; () banked
 25373  00460E  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25374                           
 25375                           ; BSR set to: 0
 25376                           ;utils.c: 208: }
 25377                           ;utils.c: 209: break;
 25378                           
 25379                           ; BSR set to: 0
 25380  004610  D031               	goto	l2933
 25381  004612                     
 25382                           ; BSR set to: 0
 25383                           ;utils.c: 212: currentState = SEARCH_FSM_START;
 25384                           
 25385                           ; BSR set to: 0
 25386  004612  0E00               	movlw	0
 25387  004614  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25388                           
 25389                           ; BSR set to: 0
 25390                           ;utils.c: 213: if (isNumberValid(readBuffer))
 25391  004616  0E39               	movlw	low _readBuffer
 25392  004618  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 25393  00461A  0E03               	movlw	high _readBuffer
 25394  00461C  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 25395  00461E  EC95  F02C         	call	_isNumberValid	;wreg free
 25396  004622  0900               	iorlw	0
 25397  004624  B4D8               	btfsc	status,2,c
 25398  004626  D01B               	goto	l2936
 25399                           
 25400                           ;utils.c: 214: {
 25401                           ;utils.c: 215: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 25402  004628  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 25403  00462C  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 25404  004630  0E39               	movlw	low _readBuffer
 25405  004632  0100               	movlb	0	; () banked
 25406  004634  6F7F               	movwf	StringCompare@String2& (0+255),b
 25407  004636  0E03               	movlw	high _readBuffer
 25408  004638  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25409  00463A  0E00               	movlw	0
 25410  00463C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25411  00463E  0E0D               	movlw	13
 25412  004640  6F81               	movwf	StringCompare@Len& (0+255),b
 25413  004642  EC5B  F02F         	call	_StringCompare	;wreg free
 25414  004646  0900               	iorlw	0
 25415  004648  B4D8               	btfsc	status,2,c
 25416  00464A  D009               	goto	l2936
 25417                           
 25418                           ;utils.c: 216: {
 25419                           ;utils.c: 217: *positionInMemory = currentPosition;
 25420  00464C  C102  FFD9         	movff	isNumberInMemory@positionInMemory,fsr2l
 25421  004650  C103  FFDA         	movff	isNumberInMemory@positionInMemory+1,fsr2h
 25422  004654  C0E1  FFDF         	movff	isNumberInMemory@currentPosition,indf2
 25423                           
 25424                           ;utils.c: 218: currentState = SEARCH_FSM_FOUND;
 25425  004658  0E03               	movlw	3
 25426  00465A  0100               	movlb	0	; () banked
 25427  00465C  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25428  00465E                     l2936:
 25429                           
 25430                           ;utils.c: 223: }
 25431                           ;utils.c: 224: }
 25432                           ;utils.c: 225: currentPosition += 16;
 25433                           
 25434                           ; BSR set to: 0
 25435                           
 25436                           ; BSR set to: 0
 25437                           
 25438                           ;utils.c: 220: else
 25439                           ;utils.c: 221: {
 25440                           
 25441                           ; BSR set to: 0
 25442  00465E  0E10               	movlw	16
 25443  004660  0100               	movlb	0	; () banked
 25444  004662  27E1               	addwf	isNumberInMemory@currentPosition& (0+255),f,b
 25445                           
 25446                           ; BSR set to: 0
 25447                           ;utils.c: 230: }
 25448                           
 25449                           ; BSR set to: 0
 25450                           ;utils.c: 229: break;
 25451                           
 25452                           ;utils.c: 228: default:
 25453                           
 25454                           ;utils.c: 226: break;
 25455  004664  D007               	goto	l2933
 25456  004666                     l2928:
 25457                           
 25458                           ; BSR set to: 0
 25459                           
 25460                           ; BSR set to: 0
 25461  004666  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 25462                           
 25463                           ; Switch size 1, requested type "space"
 25464                           ; Number of cases is 2, Range of values is 0 to 1
 25465                           ; switch strategies available:
 25466                           ; Name         Instructions Cycles
 25467                           ; simple_byte            7     4 (average)
 25468                           ;	Chosen strategy is simple_byte
 25469  004668  0A00               	xorlw	0	; case 0
 25470  00466A  B4D8               	btfsc	status,2,c
 25471  00466C  D7BA               	goto	l2929
 25472  00466E  0A01               	xorlw	1	; case 1
 25473  004670  B4D8               	btfsc	status,2,c
 25474  004672  D7CF               	goto	l2934
 25475  004674                     l2933:
 25476                           
 25477                           ;utils.c: 231: return currentState;
 25478                           
 25479                           ; BSR set to: 0
 25480  004674  0100               	movlb	0	; () banked
 25481  004676  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 25482  004678  0012               	return	
 25483  00467A                     __end_of_isNumberInMemory:
 25484                           	opt stack 0
 25485                           tosu	equ	0xFFF
 25486                           tosh	equ	0xFFE
 25487                           tosl	equ	0xFFD
 25488                           pclath	equ	0xFFA
 25489                           tblptru	equ	0xFF8
 25490                           tblptrh	equ	0xFF7
 25491                           tblptrl	equ	0xFF6
 25492                           tablat	equ	0xFF5
 25493                           prodh	equ	0xFF4
 25494                           prodl	equ	0xFF3
 25495                           intcon	equ	0xFF2
 25496                           intcon2	equ	0xFF1
 25497                           intcon3	equ	0xFF0
 25498                           indf0	equ	0xFEF
 25499                           postinc0	equ	0xFEE
 25500                           plusw0	equ	0xFEB
 25501                           fsr0h	equ	0xFEA
 25502                           fsr0l	equ	0xFE9
 25503                           wreg	equ	0xFE8
 25504                           indf1	equ	0xFE7
 25505                           postinc1	equ	0xFE6
 25506                           postdec1	equ	0xFE5
 25507                           fsr1h	equ	0xFE2
 25508                           fsr1l	equ	0xFE1
 25509                           indf2	equ	0xFDF
 25510                           postinc2	equ	0xFDE
 25511                           postdec2	equ	0xFDD
 25512                           plusw2	equ	0xFDB
 25513                           fsr2h	equ	0xFDA
 25514                           fsr2l	equ	0xFD9
 25515                           status	equ	0xFD8
 25516                           
 25517 ;; *************** function _isMasterNumber *****************
 25518 ;; Defined at:
 25519 ;;		line 240 in file "../Source/c/04_App/utils.c"
 25520 ;; Parameters:    Size  Location     Type
 25521 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 25522 ;;		 -> receivedNumber(13), 
 25523 ;; Auto vars:     Size  Location     Type
 25524 ;;  memoryOpResu    1    2[BANK1 ] enum E8246
 25525 ;; Return value:  Size  Location     Type
 25526 ;;                  1    wreg      unsigned char 
 25527 ;; Registers used:
 25528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25529 ;; Tracked objects:
 25530 ;;		On entry : 0/0
 25531 ;;		On exit  : 0/0
 25532 ;;		Unchanged: 0/0
 25533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25534 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25535 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25537 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25538 ;;Total ram usage:        3 bytes
 25539 ;; Hardware stack levels used:    1
 25540 ;; Hardware stack levels required when called:   17
 25541 ;; This function calls:
 25542 ;;		_Eeprom_Read
 25543 ;;		_StringCompare
 25544 ;;		_isNumberValid
 25545 ;; This function is called by:
 25546 ;;		_addCmdFsm
 25547 ;;		_delCmdFsm
 25548 ;;		_resCmdFsm
 25549 ;;		_triggerCmdFsm
 25550 ;; This function uses a non-reentrant model
 25551 ;;
 25552                           
 25553                           	psect	text120
 25554  0056B0                     __ptext120:
 25555                           	opt stack 0
 25556  0056B0                     _isMasterNumber:
 25557                           	opt stack 9
 25558                           
 25559                           ;utils.c: 242: EepromStsType memoryOpResult = OP_PENDING;
 25560                           
 25561                           ; BSR set to: 0
 25562                           ;incstack = 0
 25563  0056B0  0E02               	movlw	2
 25564  0056B2  0101               	movlb	1	; () banked
 25565  0056B4  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 25566                           
 25567                           ; BSR set to: 1
 25568                           ;utils.c: 244: memoryOpResult = Eeprom_Read(16, readBuffer, ((UINT8)(13)));
 25569  0056B6  0E39               	movlw	low _readBuffer
 25570  0056B8  0100               	movlb	0	; () banked
 25571  0056BA  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 25572  0056BC  0E03               	movlw	high _readBuffer
 25573  0056BE  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 25574  0056C0  0E0D               	movlw	13
 25575  0056C2  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 25576  0056C4  0E10               	movlw	16
 25577  0056C6  ECB4  F02E         	call	_Eeprom_Read
 25578  0056CA  0101               	movlb	1	; () banked
 25579  0056CC  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 25580                           
 25581                           ; BSR set to: 1
 25582                           ;utils.c: 245: if (memoryOpResult != OP_PENDING)
 25583  0056CE  0E02               	movlw	2
 25584  0056D0  1902               	xorwf	isMasterNumber@memoryOpResult& (0+255),w,b
 25585  0056D2  B4D8               	btfsc	status,2,c
 25586  0056D4  D021               	goto	l2944
 25587                           
 25588                           ; BSR set to: 1
 25589                           ;utils.c: 246: {
 25590                           ;utils.c: 247: memoryOpResult = OP_FAILED;
 25591  0056D6  0E01               	movlw	1
 25592  0056D8  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 25593                           
 25594                           ; BSR set to: 1
 25595                           ;utils.c: 248: if (isNumberValid(readBuffer))
 25596  0056DA  0E39               	movlw	low _readBuffer
 25597  0056DC  0100               	movlb	0	; () banked
 25598  0056DE  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 25599  0056E0  0E03               	movlw	high _readBuffer
 25600  0056E2  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 25601  0056E4  EC95  F02C         	call	_isNumberValid	;wreg free
 25602  0056E8  0900               	iorlw	0
 25603  0056EA  B4D8               	btfsc	status,2,c
 25604  0056EC  D015               	goto	l2944
 25605                           
 25606                           ;utils.c: 249: {
 25607                           ;utils.c: 250: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 25608  0056EE  C100  F07D         	movff	isMasterNumber@phoneNumber,StringCompare@String1
 25609  0056F2  C101  F07E         	movff	isMasterNumber@phoneNumber+1,StringCompare@String1+1
 25610  0056F6  0E39               	movlw	low _readBuffer
 25611  0056F8  0100               	movlb	0	; () banked
 25612  0056FA  6F7F               	movwf	StringCompare@String2& (0+255),b
 25613  0056FC  0E03               	movlw	high _readBuffer
 25614  0056FE  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25615  005700  0E00               	movlw	0
 25616  005702  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25617  005704  0E0D               	movlw	13
 25618  005706  6F81               	movwf	StringCompare@Len& (0+255),b
 25619  005708  EC5B  F02F         	call	_StringCompare	;wreg free
 25620  00570C  0900               	iorlw	0
 25621  00570E  B4D8               	btfsc	status,2,c
 25622  005710  D003               	goto	l2944
 25623                           
 25624                           ;utils.c: 251: {
 25625                           ;utils.c: 252: memoryOpResult = OP_SUCCESS;
 25626  005712  0E00               	movlw	0
 25627  005714  0101               	movlb	1	; () banked
 25628  005716  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 25629  005718                     l2944:
 25630                           
 25631                           ;utils.c: 253: }
 25632                           ;utils.c: 254: }
 25633                           ;utils.c: 255: }
 25634                           ;utils.c: 256: return memoryOpResult;
 25635                           
 25636                           ; BSR set to: 1
 25637                           
 25638                           ; BSR set to: 1
 25639  005718  0101               	movlb	1	; () banked
 25640  00571A  5102               	movf	isMasterNumber@memoryOpResult& (0+255),w,b
 25641  00571C  0012               	return	
 25642  00571E                     __end_of_isMasterNumber:
 25643                           	opt stack 0
 25644                           tosu	equ	0xFFF
 25645                           tosh	equ	0xFFE
 25646                           tosl	equ	0xFFD
 25647                           pclath	equ	0xFFA
 25648                           tblptru	equ	0xFF8
 25649                           tblptrh	equ	0xFF7
 25650                           tblptrl	equ	0xFF6
 25651                           tablat	equ	0xFF5
 25652                           prodh	equ	0xFF4
 25653                           prodl	equ	0xFF3
 25654                           intcon	equ	0xFF2
 25655                           intcon2	equ	0xFF1
 25656                           intcon3	equ	0xFF0
 25657                           indf0	equ	0xFEF
 25658                           postinc0	equ	0xFEE
 25659                           plusw0	equ	0xFEB
 25660                           fsr0h	equ	0xFEA
 25661                           fsr0l	equ	0xFE9
 25662                           wreg	equ	0xFE8
 25663                           indf1	equ	0xFE7
 25664                           postinc1	equ	0xFE6
 25665                           postdec1	equ	0xFE5
 25666                           fsr1h	equ	0xFE2
 25667                           fsr1l	equ	0xFE1
 25668                           indf2	equ	0xFDF
 25669                           postinc2	equ	0xFDE
 25670                           postdec2	equ	0xFDD
 25671                           plusw2	equ	0xFDB
 25672                           fsr2h	equ	0xFDA
 25673                           fsr2l	equ	0xFD9
 25674                           status	equ	0xFD8
 25675                           
 25676 ;; *************** function _findEmptySpot *****************
 25677 ;; Defined at:
 25678 ;;		line 265 in file "../Source/c/04_App/utils.c"
 25679 ;; Parameters:    Size  Location     Type
 25680 ;;  positionInMe    2    0[BANK1 ] PTR unsigned char 
 25681 ;;		 -> addCmdFsm@numberInMemory(1), 
 25682 ;; Auto vars:     Size  Location     Type
 25683 ;;  memoryOpResu    1    2[BANK1 ] enum E8246
 25684 ;; Return value:  Size  Location     Type
 25685 ;;                  1    wreg      enum E8974
 25686 ;; Registers used:
 25687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25688 ;; Tracked objects:
 25689 ;;		On entry : 0/0
 25690 ;;		On exit  : 0/0
 25691 ;;		Unchanged: 0/0
 25692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25693 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25694 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25696 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25697 ;;Total ram usage:        3 bytes
 25698 ;; Hardware stack levels used:    1
 25699 ;; Hardware stack levels required when called:   17
 25700 ;; This function calls:
 25701 ;;		_Eeprom_Read
 25702 ;;		_isNumberValid
 25703 ;; This function is called by:
 25704 ;;		_addCmdFsm
 25705 ;; This function uses a non-reentrant model
 25706 ;;
 25707                           
 25708                           	psect	text121
 25709  004EC2                     __ptext121:
 25710                           	opt stack 0
 25711  004EC2                     _findEmptySpot:
 25712                           	opt stack 9
 25713                           
 25714                           ;utils.c: 267: static searchFsmStates currentState = SEARCH_FSM_START;
 25715                           ;utils.c: 268: static uint8_t currentPosition = 32;
 25716                           ;utils.c: 269: EepromStsType memoryOpResult = OP_PENDING;
 25717                           
 25718                           ; BSR set to: 1
 25719                           ;incstack = 0
 25720  004EC2  0E02               	movlw	2
 25721  004EC4  0101               	movlb	1	; () banked
 25722  004EC6  6F02               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 25723                           
 25724                           ; BSR set to: 1
 25725                           ;utils.c: 271: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 25726  004EC8  0E01               	movlw	1
 25727  004ECA  0100               	movlb	0	; () banked
 25728  004ECC  65C4               	cpfsgt	findEmptySpot@currentState& (0+255),b
 25729  004ECE  D004               	goto	l2952
 25730                           
 25731                           ; BSR set to: 0
 25732                           ;utils.c: 272: {
 25733                           ;utils.c: 273: currentState = SEARCH_FSM_START;
 25734  004ED0  0E00               	movlw	0
 25735  004ED2  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25736                           
 25737                           ;utils.c: 274: currentPosition = 32;
 25738  004ED4  0E20               	movlw	32
 25739  004ED6  6FE0               	movwf	findEmptySpot@currentPosition& (0+255),b
 25740  004ED8                     l2952:
 25741                           
 25742                           ; BSR set to: 0
 25743                           ;utils.c: 275: }
 25744                           ;utils.c: 276: if (currentPosition >= (32 + (16 * 10)))
 25745                           
 25746                           ; BSR set to: 0
 25747  004ED8  0EBF               	movlw	191
 25748  004EDA  65E0               	cpfsgt	findEmptySpot@currentPosition& (0+255),b
 25749  004EDC  D033               	goto	l2954
 25750                           
 25751                           ; BSR set to: 0
 25752                           ;utils.c: 277: {
 25753                           ;utils.c: 278: currentState = SEARCH_FSM_NOT_FOUND;
 25754  004EDE  0E04               	movlw	4
 25755  004EE0  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25756                           
 25757                           ; BSR set to: 0
 25758                           ;utils.c: 279: }
 25759                           ;utils.c: 281: switch (currentState)
 25760  004EE2  D030               	goto	l2954
 25761  004EE4                     
 25762                           ; BSR set to: 0
 25763                           ;utils.c: 284: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13)));
 25764                           
 25765                           ; BSR set to: 0
 25766  004EE4  0E39               	movlw	low _readBuffer
 25767  004EE6  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 25768  004EE8  0E03               	movlw	high _readBuffer
 25769  004EEA  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 25770  004EEC  0E0D               	movlw	13
 25771  004EEE  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 25772  004EF0  51E0               	movf	findEmptySpot@currentPosition& (0+255),w,b
 25773  004EF2  ECB4  F02E         	call	_Eeprom_Read
 25774  004EF6  0101               	movlb	1	; () banked
 25775  004EF8  6F02               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 25776                           
 25777                           ; BSR set to: 1
 25778                           ;utils.c: 285: if (memoryOpResult == OP_FAILED)
 25779  004EFA  0502               	decf	findEmptySpot@memoryOpResult& (0+255),w,b
 25780  004EFC  A4D8               	btfss	status,2,c
 25781  004EFE  D002               	goto	l2956
 25782                           
 25783                           ; BSR set to: 1
 25784                           ;utils.c: 286: {
 25785                           ;utils.c: 287: currentState = SEARCH_FSM_ERROR;
 25786  004F00  0E02               	movlw	2
 25787  004F02  D005               	goto	L51
 25788  004F04                     l2956:
 25789                           
 25790                           ;utils.c: 289: else if (memoryOpResult == OP_SUCCESS)
 25791                           
 25792                           ; BSR set to: 0
 25793  004F04  0101               	movlb	1	; () banked
 25794  004F06  5102               	movf	findEmptySpot@memoryOpResult& (0+255),w,b
 25795  004F08  A4D8               	btfss	status,2,c
 25796  004F0A  D023               	goto	l2959
 25797                           
 25798                           ; BSR set to: 1
 25799                           ;utils.c: 290: {
 25800                           ;utils.c: 291: currentState = SEARCH_FSM_CHECK_NUMBER;
 25801  004F0C  0E01               	movlw	1
 25802  004F0E                     L51:
 25803  004F0E  0100               	movlb	0	; () banked
 25804  004F10  D00D               	goto	L52
 25805  004F12                     
 25806                           ; BSR set to: 0
 25807                           ;utils.c: 296: if (isNumberValid(readBuffer))
 25808                           
 25809                           ; BSR set to: 0
 25810  004F12  0E39               	movlw	low _readBuffer
 25811  004F14  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 25812  004F16  0E03               	movlw	high _readBuffer
 25813  004F18  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 25814  004F1A  EC95  F02C         	call	_isNumberValid	;wreg free
 25815  004F1E  0900               	iorlw	0
 25816  004F20  B4D8               	btfsc	status,2,c
 25817  004F22  D006               	goto	l2961
 25818                           
 25819                           ;utils.c: 297: {
 25820                           ;utils.c: 298: currentPosition += 16;
 25821  004F24  0E10               	movlw	16
 25822  004F26  0100               	movlb	0	; () banked
 25823  004F28  27E0               	addwf	findEmptySpot@currentPosition& (0+255),f,b
 25824                           
 25825                           ; BSR set to: 0
 25826                           ;utils.c: 299: currentState = SEARCH_FSM_START;
 25827  004F2A  0E00               	movlw	0
 25828  004F2C                     L52:
 25829  004F2C  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25830                           
 25831                           ;utils.c: 300: }
 25832  004F2E  D011               	goto	l2959
 25833  004F30                     l2961:
 25834                           
 25835                           ;utils.c: 301: else
 25836                           ;utils.c: 302: {
 25837                           ;utils.c: 303: currentState = SEARCH_FSM_NOT_FOUND;
 25838                           
 25839                           ; BSR set to: 0
 25840  004F30  0E04               	movlw	4
 25841  004F32  0100               	movlb	0	; () banked
 25842  004F34  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25843                           
 25844                           ; BSR set to: 0
 25845                           ;utils.c: 304: *positionInMemory = currentPosition;
 25846  004F36  C100  FFD9         	movff	findEmptySpot@positionInMemory,fsr2l
 25847  004F3A  C101  FFDA         	movff	findEmptySpot@positionInMemory+1,fsr2h
 25848  004F3E  C0E0  FFDF         	movff	findEmptySpot@currentPosition,indf2
 25849                           
 25850                           ; BSR set to: 0
 25851                           ;utils.c: 310: }
 25852                           
 25853                           ; BSR set to: 0
 25854                           ;utils.c: 309: break;
 25855                           
 25856                           ;utils.c: 308: default:
 25857                           
 25858                           ; BSR set to: 0
 25859                           ;utils.c: 305: }
 25860                           ;utils.c: 306: break;
 25861  004F42  D007               	goto	l2959
 25862  004F44                     l2954:
 25863                           
 25864                           ; BSR set to: 0
 25865                           
 25866                           ; BSR set to: 0
 25867  004F44  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 25868                           
 25869                           ; Switch size 1, requested type "space"
 25870                           ; Number of cases is 2, Range of values is 0 to 1
 25871                           ; switch strategies available:
 25872                           ; Name         Instructions Cycles
 25873                           ; simple_byte            7     4 (average)
 25874                           ;	Chosen strategy is simple_byte
 25875  004F46  0A00               	xorlw	0	; case 0
 25876  004F48  B4D8               	btfsc	status,2,c
 25877  004F4A  D7CC               	goto	l2955
 25878  004F4C  0A01               	xorlw	1	; case 1
 25879  004F4E  B4D8               	btfsc	status,2,c
 25880  004F50  D7E0               	goto	l2960
 25881  004F52                     l2959:
 25882                           
 25883                           ;utils.c: 311: return currentState;
 25884                           
 25885                           ; BSR set to: 0
 25886  004F52  0100               	movlb	0	; () banked
 25887  004F54  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 25888  004F56  0012               	return	
 25889  004F58                     __end_of_findEmptySpot:
 25890                           	opt stack 0
 25891                           tosu	equ	0xFFF
 25892                           tosh	equ	0xFFE
 25893                           tosl	equ	0xFFD
 25894                           pclath	equ	0xFFA
 25895                           tblptru	equ	0xFF8
 25896                           tblptrh	equ	0xFF7
 25897                           tblptrl	equ	0xFF6
 25898                           tablat	equ	0xFF5
 25899                           prodh	equ	0xFF4
 25900                           prodl	equ	0xFF3
 25901                           intcon	equ	0xFF2
 25902                           intcon2	equ	0xFF1
 25903                           intcon3	equ	0xFF0
 25904                           indf0	equ	0xFEF
 25905                           postinc0	equ	0xFEE
 25906                           plusw0	equ	0xFEB
 25907                           fsr0h	equ	0xFEA
 25908                           fsr0l	equ	0xFE9
 25909                           wreg	equ	0xFE8
 25910                           indf1	equ	0xFE7
 25911                           postinc1	equ	0xFE6
 25912                           postdec1	equ	0xFE5
 25913                           fsr1h	equ	0xFE2
 25914                           fsr1l	equ	0xFE1
 25915                           indf2	equ	0xFDF
 25916                           postinc2	equ	0xFDE
 25917                           postdec2	equ	0xFDD
 25918                           plusw2	equ	0xFDB
 25919                           fsr2h	equ	0xFDA
 25920                           fsr2l	equ	0xFD9
 25921                           status	equ	0xFD8
 25922                           
 25923 ;; *************** function _isNumberValid *****************
 25924 ;; Defined at:
 25925 ;;		line 152 in file "../Source/c/04_App/utils.c"
 25926 ;; Parameters:    Size  Location     Type
 25927 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 25928 ;;		 -> readBuffer(13), smsText(20), 
 25929 ;; Auto vars:     Size  Location     Type
 25930 ;;  i               1   33[BANK0 ] unsigned char 
 25931 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 25932 ;; Return value:  Size  Location     Type
 25933 ;;                  1    wreg      unsigned char 
 25934 ;; Registers used:
 25935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25936 ;; Tracked objects:
 25937 ;;		On entry : 0/0
 25938 ;;		On exit  : 0/0
 25939 ;;		Unchanged: 0/0
 25940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25941 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25942 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25943 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25944 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25945 ;;Total ram usage:        5 bytes
 25946 ;; Hardware stack levels used:    1
 25947 ;; Hardware stack levels required when called:   11
 25948 ;; This function calls:
 25949 ;;		Nothing
 25950 ;; This function is called by:
 25951 ;;		_parseCommand
 25952 ;;		_isNumberInMemory
 25953 ;;		_isMasterNumber
 25954 ;;		_findEmptySpot
 25955 ;; This function uses a non-reentrant model
 25956 ;;
 25957                           
 25958                           	psect	text122
 25959  00592A                     __ptext122:
 25960                           	opt stack 0
 25961  00592A                     _isNumberValid:
 25962                           	opt stack 14
 25963                           
 25964                           ;utils.c: 154: bool isNumberOk = 0;
 25965                           
 25966                           ; BSR set to: 0
 25967                           ;incstack = 0
 25968  00592A  0E00               	movlw	0
 25969  00592C  0100               	movlb	0	; () banked
 25970  00592E  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 25971                           
 25972                           ;utils.c: 155: uint8_t i = 0;
 25973  005930  0E00               	movlw	0
 25974  005932  6F81               	movwf	isNumberValid@i& (0+255),b
 25975                           
 25976                           ; BSR set to: 0
 25977                           ;utils.c: 156: if (phoneNumber[0] == '+')
 25978  005934  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 25979  005938  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 25980  00593C  0E2B               	movlw	43
 25981  00593E  18DE               	xorwf	postinc2,w,c
 25982  005940  A4D8               	btfss	status,2,c
 25983  005942  D024               	goto	u13510
 25984                           
 25985                           ; BSR set to: 0
 25986                           ;utils.c: 157: {
 25987                           ;utils.c: 158: for (i = 1; i < ((UINT8)(13)); i++)
 25988  005944  0E01               	movlw	1
 25989  005946  6F81               	movwf	isNumberValid@i& (0+255),b
 25990  005948                     l14424:
 25991                           
 25992                           ; BSR set to: 0
 25993  005948  0E0C               	movlw	12
 25994  00594A  6581               	cpfsgt	isNumberValid@i& (0+255),b
 25995  00594C  D001               	goto	l2915
 25996  00594E  D01E               	goto	u13510
 25997  005950                     l2915:
 25998                           
 25999                           ; BSR set to: 0
 26000                           ;utils.c: 159: {
 26001                           ;utils.c: 160: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 26002                           
 26003                           ; BSR set to: 0
 26004  005950  5181               	movf	isNumberValid@i& (0+255),w,b
 26005  005952  0D01               	mullw	1
 26006  005954  50F3               	movf	prodl,w,c
 26007  005956  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 26008  005958  6ED9               	movwf	fsr2l,c
 26009  00595A  50F4               	movf	prodh,w,c
 26010  00595C  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 26011  00595E  6EDA               	movwf	fsr2h,c
 26012  005960  0E2F               	movlw	47
 26013  005962  64DF               	cpfsgt	indf2,c
 26014  005964  D00E               	goto	l2917
 26015                           
 26016                           ; BSR set to: 0
 26017  005966  5181               	movf	isNumberValid@i& (0+255),w,b
 26018  005968  0D01               	mullw	1
 26019  00596A  50F3               	movf	prodl,w,c
 26020  00596C  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 26021  00596E  6ED9               	movwf	fsr2l,c
 26022  005970  50F4               	movf	prodh,w,c
 26023  005972  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 26024  005974  6EDA               	movwf	fsr2h,c
 26025  005976  0E3A               	movlw	58
 26026  005978  60DF               	cpfslt	indf2,c
 26027  00597A  D003               	goto	l2917
 26028                           
 26029                           ; BSR set to: 0
 26030                           ;utils.c: 161: {
 26031                           ;utils.c: 162: isNumberOk = 1;
 26032  00597C  0E01               	movlw	1
 26033  00597E  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 26034                           
 26035                           ;utils.c: 163: }
 26036  005980  D003               	goto	l2918
 26037  005982                     l2917:
 26038                           
 26039                           ; BSR set to: 0
 26040                           ;utils.c: 164: else
 26041                           ;utils.c: 165: {
 26042                           ;utils.c: 166: isNumberOk = 0;
 26043                           
 26044                           ; BSR set to: 0
 26045  005982  0E00               	movlw	0
 26046  005984  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 26047                           
 26048                           ;utils.c: 167: break;
 26049  005986  D002               	goto	u13510
 26050  005988                     l2918:
 26051                           
 26052                           ; BSR set to: 0
 26053                           
 26054                           ; BSR set to: 0
 26055  005988  2B81               	incf	isNumberValid@i& (0+255),f,b
 26056  00598A  D7DE               	goto	l14424
 26057  00598C                     u13510:
 26058                           
 26059                           ; BSR set to: 0
 26060                           ;utils.c: 168: }
 26061                           ;utils.c: 169: }
 26062                           ;utils.c: 170: }
 26063                           ;utils.c: 171: return isNumberOk;
 26064                           
 26065                           ; BSR set to: 0
 26066                           
 26067                           ; BSR set to: 0
 26068  00598C  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 26069  00598E  0012               	return	
 26070  005990                     __end_of_isNumberValid:
 26071                           	opt stack 0
 26072                           tosu	equ	0xFFF
 26073                           tosh	equ	0xFFE
 26074                           tosl	equ	0xFFD
 26075                           pclath	equ	0xFFA
 26076                           tblptru	equ	0xFF8
 26077                           tblptrh	equ	0xFF7
 26078                           tblptrl	equ	0xFF6
 26079                           tablat	equ	0xFF5
 26080                           prodh	equ	0xFF4
 26081                           prodl	equ	0xFF3
 26082                           intcon	equ	0xFF2
 26083                           intcon2	equ	0xFF1
 26084                           intcon3	equ	0xFF0
 26085                           indf0	equ	0xFEF
 26086                           postinc0	equ	0xFEE
 26087                           plusw0	equ	0xFEB
 26088                           fsr0h	equ	0xFEA
 26089                           fsr0l	equ	0xFE9
 26090                           wreg	equ	0xFE8
 26091                           indf1	equ	0xFE7
 26092                           postinc1	equ	0xFE6
 26093                           postdec1	equ	0xFE5
 26094                           fsr1h	equ	0xFE2
 26095                           fsr1l	equ	0xFE1
 26096                           indf2	equ	0xFDF
 26097                           postinc2	equ	0xFDE
 26098                           postdec2	equ	0xFDD
 26099                           plusw2	equ	0xFDB
 26100                           fsr2h	equ	0xFDA
 26101                           fsr2l	equ	0xFD9
 26102                           status	equ	0xFD8
 26103                           
 26104 ;; *************** function _Eeprom_Read *****************
 26105 ;; Defined at:
 26106 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 26107 ;; Parameters:    Size  Location     Type
 26108 ;;  MemoryAddres    1    wreg     unsigned char 
 26109 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 26110 ;;		 -> readBuffer(13), memoryPreamble(4), 
 26111 ;;  DataLength      1   75[BANK0 ] unsigned char 
 26112 ;; Auto vars:     Size  Location     Type
 26113 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 26114 ;;  QuerySts        1   79[BANK0 ] enum E8933
 26115 ;;  ReadSts         1   78[BANK0 ] enum E8959
 26116 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 26117 ;; Return value:  Size  Location     Type
 26118 ;;                  1    wreg      enum E8959
 26119 ;; Registers used:
 26120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26121 ;; Tracked objects:
 26122 ;;		On entry : 0/0
 26123 ;;		On exit  : 0/0
 26124 ;;		Unchanged: 0/0
 26125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26126 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26127 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26129 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26130 ;;Total ram usage:        7 bytes
 26131 ;; Hardware stack levels used:    1
 26132 ;; Hardware stack levels required when called:   16
 26133 ;; This function calls:
 26134 ;;		_I2cSlv_QueryI2cData
 26135 ;; This function is called by:
 26136 ;;		_initEeprom
 26137 ;;		_isNumberInMemory
 26138 ;;		_isMasterNumber
 26139 ;;		_findEmptySpot
 26140 ;; This function uses a non-reentrant model
 26141 ;;
 26142                           
 26143                           	psect	text123
 26144  005D68                     __ptext123:
 26145                           	opt stack 0
 26146  005D68                     _Eeprom_Read:
 26147                           	opt stack 9
 26148                           
 26149                           ; BSR set to: 0
 26150                           ;incstack = 0
 26151                           ;Eeprom_Read@MemoryAddress stored from wreg
 26152  005D68  0100               	movlb	0	; () banked
 26153  005D6A  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 26154                           
 26155                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 26156  005D6C  0E50               	movlw	80
 26157  005D6E  0100               	movlb	0	; () banked
 26158  005D70  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 26159                           
 26160                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 26161  005D72  0E00               	movlw	0
 26162  005D74  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 26163                           
 26164                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 26165  005D76  0E02               	movlw	2
 26166  005D78  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 26167                           
 26168                           ; BSR set to: 0
 26169                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 26170  005D7A  C0AC  F1FA         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 26171                           
 26172                           ; BSR set to: 0
 26173                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 26174  005D7E  0EFA               	movlw	low _ReadAddress
 26175  005D80  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 26176  005D82  0E01               	movlw	high _ReadAddress
 26177  005D84  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 26178  005D86  0E01               	movlw	1
 26179  005D88  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 26180  005D8A  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 26181  005D8E  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 26182  005D92  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 26183  005D96  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 26184  005D9A  EC31  F01E         	call	_I2cSlv_QueryI2cData	;wreg free
 26185  005D9E  0100               	movlb	0	; () banked
 26186  005DA0  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 26187                           
 26188                           ; BSR set to: 0
 26189                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 26190  005DA2  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 26191  005DA4  A4D8               	btfss	status,2,c
 26192  005DA6  D002               	goto	l2037
 26193                           
 26194                           ; BSR set to: 0
 26195                           ;eeprom_if.c: 114: {
 26196                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 26197  005DA8  0E00               	movlw	0
 26198  005DAA  D005               	goto	L53
 26199  005DAC                     l2037:
 26200                           
 26201                           ; BSR set to: 0
 26202                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 26203                           
 26204                           ; BSR set to: 0
 26205  005DAC  0E02               	movlw	2
 26206  005DAE  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 26207  005DB0  A4D8               	btfss	status,2,c
 26208  005DB2  D002               	goto	l2039
 26209                           
 26210                           ; BSR set to: 0
 26211                           ;eeprom_if.c: 118: {
 26212                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 26213  005DB4  0E01               	movlw	1
 26214  005DB6                     L53:
 26215  005DB6  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 26216  005DB8                     l2039:
 26217                           
 26218                           ; BSR set to: 0
 26219                           ;eeprom_if.c: 120: }
 26220                           ;eeprom_if.c: 121: return ReadSts;
 26221                           
 26222                           ; BSR set to: 0
 26223  005DB8  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 26224  005DBA  0012               	return	
 26225  005DBC                     __end_of_Eeprom_Read:
 26226                           	opt stack 0
 26227                           tosu	equ	0xFFF
 26228                           tosh	equ	0xFFE
 26229                           tosl	equ	0xFFD
 26230                           pclath	equ	0xFFA
 26231                           tblptru	equ	0xFF8
 26232                           tblptrh	equ	0xFF7
 26233                           tblptrl	equ	0xFF6
 26234                           tablat	equ	0xFF5
 26235                           prodh	equ	0xFF4
 26236                           prodl	equ	0xFF3
 26237                           intcon	equ	0xFF2
 26238                           intcon2	equ	0xFF1
 26239                           intcon3	equ	0xFF0
 26240                           indf0	equ	0xFEF
 26241                           postinc0	equ	0xFEE
 26242                           plusw0	equ	0xFEB
 26243                           fsr0h	equ	0xFEA
 26244                           fsr0l	equ	0xFE9
 26245                           wreg	equ	0xFE8
 26246                           indf1	equ	0xFE7
 26247                           postinc1	equ	0xFE6
 26248                           postdec1	equ	0xFE5
 26249                           fsr1h	equ	0xFE2
 26250                           fsr1l	equ	0xFE1
 26251                           indf2	equ	0xFDF
 26252                           postinc2	equ	0xFDE
 26253                           postdec2	equ	0xFDD
 26254                           plusw2	equ	0xFDB
 26255                           fsr2h	equ	0xFDA
 26256                           fsr2l	equ	0xFD9
 26257                           status	equ	0xFD8
 26258                           
 26259 ;; *************** function _I2cSlv_QueryI2cData *****************
 26260 ;; Defined at:
 26261 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26262 ;; Parameters:    Size  Location     Type
 26263 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 26264 ;;		 -> ReadAddress(1), 
 26265 ;;  TxLen           1   68[BANK0 ] unsigned char 
 26266 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 26267 ;;		 -> readBuffer(13), memoryPreamble(4), 
 26268 ;;  RxLen           1   71[BANK0 ] unsigned char 
 26269 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 26270 ;; Auto vars:     Size  Location     Type
 26271 ;;		None
 26272 ;; Return value:  Size  Location     Type
 26273 ;;                  1    wreg      enum E8948
 26274 ;; Registers used:
 26275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26276 ;; Tracked objects:
 26277 ;;		On entry : 0/0
 26278 ;;		On exit  : 0/0
 26279 ;;		Unchanged: 0/0
 26280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26281 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26284 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26285 ;;Total ram usage:        7 bytes
 26286 ;; Hardware stack levels used:    1
 26287 ;; Hardware stack levels required when called:   15
 26288 ;; This function calls:
 26289 ;;		_I2cSlv_I2cReadMsgSts
 26290 ;;		_I2cSlv_ReceiveI2cMsg
 26291 ;;		_I2cSlv_SendI2cMsg
 26292 ;;		_OsTmr_GetTimerStatus
 26293 ;;		_OsTmr_StartTimer
 26294 ;;		_OsTmr_Wait
 26295 ;; This function is called by:
 26296 ;;		_Eeprom_Read
 26297 ;; This function uses a non-reentrant model
 26298 ;;
 26299                           
 26300                           	psect	text124
 26301  003C62                     __ptext124:
 26302                           	opt stack 0
 26303  003C62                     _I2cSlv_QueryI2cData:
 26304                           	opt stack 9
 26305                           
 26306                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 26307                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 26308                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 26309                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 26310                           ;i2c_slv.c: 388: switch(I2cOpState)
 26311                           
 26312                           ; BSR set to: 0
 26313                           ;incstack = 0
 26314  003C62  D05B               	goto	l1440
 26315  003C64                     
 26316                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 26317  003C64  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 26318  003C68  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 26319  003C6C  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 26320  003C70  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 26321  003C74  EC31  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 26322                           
 26323                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 26324  003C78  0E01               	movlw	1
 26325  003C7A  0101               	movlb	1	; () banked
 26326  003C7C  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 26327                           
 26328                           ; BSR set to: 1
 26329                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 26330  003C7E  0E00               	movlw	0
 26331  003C80  D04A               	goto	L57
 26332  003C82                     
 26333                           ; BSR set to: 1
 26334                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 26335                           
 26336                           ; BSR set to: 1
 26337  003C82  0EE2               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 26338  003C84  0100               	movlb	0	; () banked
 26339  003C86  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 26340  003C88  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 26341  003C8A  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 26342  003C8C  0EF4               	movlw	244
 26343  003C8E  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 26344  003C90  0E01               	movlw	1
 26345  003C92  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 26346  003C94  0E00               	movlw	0
 26347  003C96  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 26348  003C98  0E00               	movlw	0
 26349  003C9A  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 26350  003C9C  EC2C  F02A         	call	_OsTmr_Wait	;wreg free
 26351  003CA0  06E8               	decf	wreg,f,c
 26352  003CA2  A4D8               	btfss	status,2,c
 26353  003CA4  D036               	goto	l1448
 26354                           
 26355                           ;i2c_slv.c: 402: {
 26356                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 26357  003CA6  0E53               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 26358  003CA8  0100               	movlb	0	; () banked
 26359  003CAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26360  003CAC  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 26361  003CAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26362  003CB0  0EC4               	movlw	196
 26363  003CB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26364  003CB4  0E09               	movlw	9
 26365  003CB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26366  003CB8  0E00               	movlw	0
 26367  003CBA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26368  003CBC  0E00               	movlw	0
 26369  003CBE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26370  003CC0  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 26371                           
 26372                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 26373  003CC4  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 26374  003CC8  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 26375  003CCC  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 26376  003CD0  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 26377  003CD4  ECD2  F031         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 26378                           
 26379                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 26380  003CD8  0E02               	movlw	2
 26381  003CDA  0101               	movlb	1	; () banked
 26382  003CDC  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 26383  003CDE  D019               	goto	l1448
 26384  003CE0                     
 26385                           ; BSR set to: 1
 26386                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 26387                           
 26388                           ; BSR set to: 1
 26389  003CE0  EC32  F035         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 26390  003CE4  06E8               	decf	wreg,f,c
 26391  003CE6  A4D8               	btfss	status,2,c
 26392  003CE8  D005               	goto	l1446
 26393                           
 26394                           ;i2c_slv.c: 414: {
 26395                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 26396  003CEA  0E00               	movlw	0
 26397  003CEC  0101               	movlb	1	; () banked
 26398  003CEE  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 26399                           
 26400                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 26401  003CF0  0E01               	movlw	1
 26402  003CF2  D011               	goto	L57
 26403  003CF4                     l1446:
 26404                           
 26405                           ;i2c_slv.c: 420: else
 26406                           ;i2c_slv.c: 421: {
 26407                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 26408                           
 26409                           ; BSR set to: 1
 26410  003CF4  0E53               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 26411  003CF6  0100               	movlb	0	; () banked
 26412  003CF8  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26413  003CFA  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 26414  003CFC  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26415  003CFE  ECD2  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 26416  003D02  06E8               	decf	wreg,f,c
 26417  003D04  A4D8               	btfss	status,2,c
 26418  003D06  D005               	goto	l1448
 26419                           
 26420                           ;i2c_slv.c: 423: {
 26421                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 26422  003D08  0E00               	movlw	0
 26423  003D0A  0101               	movlb	1	; () banked
 26424  003D0C  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 26425                           
 26426                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 26427  003D0E  0E02               	movlw	2
 26428  003D10  D002               	goto	L57
 26429  003D12                     l1448:
 26430                           
 26431                           ;i2c_slv.c: 429: else
 26432                           ;i2c_slv.c: 430: {
 26433                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 26434                           
 26435                           ; BSR set to: 1
 26436  003D12  0E00               	movlw	0
 26437  003D14  0101               	movlb	1	; () banked
 26438  003D16                     L57:
 26439  003D16  6FE1               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 26440                           
 26441                           ; BSR set to: 1
 26442                           ;i2c_slv.c: 439: }
 26443                           
 26444                           ; BSR set to: 1
 26445                           ;i2c_slv.c: 438: break;
 26446                           
 26447                           ;i2c_slv.c: 437: default:
 26448                           
 26449                           ; BSR set to: 1
 26450                           ;i2c_slv.c: 433: }
 26451                           ;i2c_slv.c: 434: }
 26452                           ;i2c_slv.c: 435: break;
 26453                           
 26454                           ; BSR set to: 1
 26455  003D18  D00B               	goto	l1442
 26456  003D1A                     l1440:
 26457                           
 26458                           ; BSR set to: 1
 26459  003D1A  0101               	movlb	1	; () banked
 26460  003D1C  51E2               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 26461                           
 26462                           ; Switch size 1, requested type "space"
 26463                           ; Number of cases is 3, Range of values is 0 to 2
 26464                           ; switch strategies available:
 26465                           ; Name         Instructions Cycles
 26466                           ; simple_byte           10     6 (average)
 26467                           ;	Chosen strategy is simple_byte
 26468  003D1E  0A00               	xorlw	0	; case 0
 26469  003D20  B4D8               	btfsc	status,2,c
 26470  003D22  D7A0               	goto	l1441
 26471  003D24  0A01               	xorlw	1	; case 1
 26472  003D26  B4D8               	btfsc	status,2,c
 26473  003D28  D7AC               	goto	l1443
 26474  003D2A  0A03               	xorlw	3	; case 2
 26475  003D2C  B4D8               	btfsc	status,2,c
 26476  003D2E  D7D8               	goto	l1445
 26477  003D30                     l1442:
 26478                           
 26479                           ; BSR set to: 1
 26480                           ;i2c_slv.c: 441: return Ret;
 26481                           
 26482                           ; BSR set to: 1
 26483  003D30  51E1               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 26484  003D32  0012               	return	
 26485  003D34                     __end_of_I2cSlv_QueryI2cData:
 26486                           	opt stack 0
 26487                           tosu	equ	0xFFF
 26488                           tosh	equ	0xFFE
 26489                           tosl	equ	0xFFD
 26490                           pclath	equ	0xFFA
 26491                           tblptru	equ	0xFF8
 26492                           tblptrh	equ	0xFF7
 26493                           tblptrl	equ	0xFF6
 26494                           tablat	equ	0xFF5
 26495                           prodh	equ	0xFF4
 26496                           prodl	equ	0xFF3
 26497                           intcon	equ	0xFF2
 26498                           intcon2	equ	0xFF1
 26499                           intcon3	equ	0xFF0
 26500                           indf0	equ	0xFEF
 26501                           postinc0	equ	0xFEE
 26502                           plusw0	equ	0xFEB
 26503                           fsr0h	equ	0xFEA
 26504                           fsr0l	equ	0xFE9
 26505                           wreg	equ	0xFE8
 26506                           indf1	equ	0xFE7
 26507                           postinc1	equ	0xFE6
 26508                           postdec1	equ	0xFE5
 26509                           fsr1h	equ	0xFE2
 26510                           fsr1l	equ	0xFE1
 26511                           indf2	equ	0xFDF
 26512                           postinc2	equ	0xFDE
 26513                           postdec2	equ	0xFDD
 26514                           plusw2	equ	0xFDB
 26515                           fsr2h	equ	0xFDA
 26516                           fsr2l	equ	0xFD9
 26517                           status	equ	0xFD8
 26518                           
 26519 ;; *************** function _OsTmr_Wait *****************
 26520 ;; Defined at:
 26521 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 26522 ;; Parameters:    Size  Location     Type
 26523 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 26524 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 26525 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 26526 ;; Auto vars:     Size  Location     Type
 26527 ;;  Ret             1   65[BANK0 ] enum E7749
 26528 ;; Return value:  Size  Location     Type
 26529 ;;                  1    wreg      enum E7749
 26530 ;; Registers used:
 26531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26532 ;; Tracked objects:
 26533 ;;		On entry : 0/0
 26534 ;;		On exit  : 0/0
 26535 ;;		Unchanged: 0/0
 26536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26537 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26540 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26541 ;;Total ram usage:        7 bytes
 26542 ;; Hardware stack levels used:    1
 26543 ;; Hardware stack levels required when called:   14
 26544 ;; This function calls:
 26545 ;;		_OsTmr_GetTimerStatus
 26546 ;;		_OsTmr_StartTimer
 26547 ;; This function is called by:
 26548 ;;		_I2cSlv_QueryI2cData
 26549 ;;		_Terminal
 26550 ;; This function uses a non-reentrant model
 26551 ;;
 26552                           
 26553                           	psect	text125
 26554  005458                     __ptext125:
 26555                           	opt stack 0
 26556  005458                     _OsTmr_Wait:
 26557                           	opt stack 11
 26558                           
 26559                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 26560                           
 26561                           ; BSR set to: 1
 26562                           ;incstack = 0
 26563  005458  0E00               	movlw	0
 26564  00545A  0100               	movlb	0	; () banked
 26565  00545C  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 26566                           
 26567                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 26568  00545E  D02D               	goto	l855
 26569  005460                     
 26570                           ; BSR set to: 0
 26571                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 26572                           
 26573                           ; BSR set to: 0
 26574  005460  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 26575  005464  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 26576  005468  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 26577  00546C  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 26578  005470  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 26579  005474  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 26580  005478  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 26581                           
 26582                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 26583  00547C  0100               	movlb	0	; () banked
 26584  00547E  EE20 F00A          	lfsr	2,10
 26585  005482  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 26586  005484  26D9               	addwf	fsr2l,f,c
 26587  005486  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 26588  005488  22DA               	addwfc	fsr2h,f,c
 26589  00548A  0E01               	movlw	1
 26590  00548C  6EDF               	movwf	indf2,c
 26591                           
 26592                           ;os_timers.c: 165: break;
 26593  00548E  D022               	goto	l857
 26594  005490                     
 26595                           ; BSR set to: 0
 26596                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 26597                           
 26598                           ; BSR set to: 0
 26599  005490  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 26600  005494  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 26601  005498  ECD2  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 26602  00549C  06E8               	decf	wreg,f,c
 26603  00549E  A4D8               	btfss	status,2,c
 26604  0054A0  D019               	goto	l857
 26605                           
 26606                           ;os_timers.c: 170: {
 26607                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 26608  0054A2  0100               	movlb	0	; () banked
 26609  0054A4  EE20 F00A          	lfsr	2,10
 26610  0054A8  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 26611  0054AA  26D9               	addwf	fsr2l,f,c
 26612  0054AC  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 26613  0054AE  22DA               	addwfc	fsr2h,f,c
 26614  0054B0  0E00               	movlw	0
 26615  0054B2  6EDF               	movwf	indf2,c
 26616                           
 26617                           ; BSR set to: 0
 26618                           ;os_timers.c: 174: Ret = DelayExpired;
 26619  0054B4  0E01               	movlw	1
 26620  0054B6  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 26621                           
 26622                           ; BSR set to: 0
 26623                           ;os_timers.c: 180: }
 26624                           
 26625                           ; BSR set to: 0
 26626                           ;os_timers.c: 179: break;
 26627                           
 26628                           ;os_timers.c: 178: default:
 26629                           
 26630                           ; BSR set to: 0
 26631                           ;os_timers.c: 175: }
 26632                           ;os_timers.c: 176: break;
 26633  0054B8  D00D               	goto	l857
 26634  0054BA                     l855:
 26635                           
 26636                           ; BSR set to: 0
 26637                           
 26638                           ; BSR set to: 0
 26639  0054BA  EE20 F00A          	lfsr	2,10
 26640  0054BE  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 26641  0054C0  26D9               	addwf	fsr2l,f,c
 26642  0054C2  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 26643  0054C4  22DA               	addwfc	fsr2h,f,c
 26644  0054C6  50DF               	movf	indf2,w,c
 26645                           
 26646                           ; Switch size 1, requested type "space"
 26647                           ; Number of cases is 2, Range of values is 0 to 1
 26648                           ; switch strategies available:
 26649                           ; Name         Instructions Cycles
 26650                           ; simple_byte            7     4 (average)
 26651                           ;	Chosen strategy is simple_byte
 26652  0054C8  0A00               	xorlw	0	; case 0
 26653  0054CA  B4D8               	btfsc	status,2,c
 26654  0054CC  D7C9               	goto	l856
 26655  0054CE  0A01               	xorlw	1	; case 1
 26656  0054D0  B4D8               	btfsc	status,2,c
 26657  0054D2  D7DE               	goto	l858
 26658  0054D4                     l857:
 26659                           
 26660                           ;os_timers.c: 182: return Ret;
 26661                           
 26662                           ; BSR set to: 0
 26663  0054D4  0100               	movlb	0	; () banked
 26664  0054D6  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 26665  0054D8  0012               	return	
 26666  0054DA                     __end_of_OsTmr_Wait:
 26667                           	opt stack 0
 26668                           tosu	equ	0xFFF
 26669                           tosh	equ	0xFFE
 26670                           tosl	equ	0xFFD
 26671                           pclath	equ	0xFFA
 26672                           tblptru	equ	0xFF8
 26673                           tblptrh	equ	0xFF7
 26674                           tblptrl	equ	0xFF6
 26675                           tablat	equ	0xFF5
 26676                           prodh	equ	0xFF4
 26677                           prodl	equ	0xFF3
 26678                           intcon	equ	0xFF2
 26679                           intcon2	equ	0xFF1
 26680                           intcon3	equ	0xFF0
 26681                           indf0	equ	0xFEF
 26682                           postinc0	equ	0xFEE
 26683                           plusw0	equ	0xFEB
 26684                           fsr0h	equ	0xFEA
 26685                           fsr0l	equ	0xFE9
 26686                           wreg	equ	0xFE8
 26687                           indf1	equ	0xFE7
 26688                           postinc1	equ	0xFE6
 26689                           postdec1	equ	0xFE5
 26690                           fsr1h	equ	0xFE2
 26691                           fsr1l	equ	0xFE1
 26692                           indf2	equ	0xFDF
 26693                           postinc2	equ	0xFDE
 26694                           postdec2	equ	0xFDD
 26695                           plusw2	equ	0xFDB
 26696                           fsr2h	equ	0xFDA
 26697                           fsr2l	equ	0xFD9
 26698                           status	equ	0xFD8
 26699                           
 26700 ;; *************** function _I2cSlv_SendI2cMsg *****************
 26701 ;; Defined at:
 26702 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26703 ;; Parameters:    Size  Location     Type
 26704 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 26705 ;;		 -> relayBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 26706 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 26707 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 26708 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 26709 ;; Auto vars:     Size  Location     Type
 26710 ;;  TxSts           1   36[BANK0 ] unsigned char 
 26711 ;; Return value:  Size  Location     Type
 26712 ;;                  1    wreg      unsigned char 
 26713 ;; Registers used:
 26714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26715 ;; Tracked objects:
 26716 ;;		On entry : 0/0
 26717 ;;		On exit  : 0/0
 26718 ;;		Unchanged: 0/0
 26719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26720 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26723 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26724 ;;Total ram usage:        5 bytes
 26725 ;; Hardware stack levels used:    1
 26726 ;; Hardware stack levels required when called:   12
 26727 ;; This function calls:
 26728 ;;		_GenerateEvt
 26729 ;; This function is called by:
 26730 ;;		_I2cSlv_QueryI2cData
 26731 ;;		_Eeprom_Write
 26732 ;;		_Eeprom_Reset
 26733 ;;		_Terminal
 26734 ;;		_triggerRelay
 26735 ;; This function uses a non-reentrant model
 26736 ;;
 26737                           
 26738                           	psect	text126
 26739  006462                     __ptext126:
 26740                           	opt stack 0
 26741  006462                     _I2cSlv_SendI2cMsg:
 26742                           	opt stack 13
 26743                           
 26744                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 26745                           
 26746                           ; BSR set to: 0
 26747                           ;incstack = 0
 26748  006462  0E00               	movlw	0
 26749  006464  0100               	movlb	0	; () banked
 26750  006466  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26751                           
 26752                           ; BSR set to: 0
 26753                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 26754  006468  05CF               	decf	_I2cComSts& (0+255),w,b
 26755  00646A  B4D8               	btfsc	status,2,c
 26756  00646C  D015               	goto	l1412
 26757                           
 26758                           ; BSR set to: 0
 26759                           ;i2c_slv.c: 257: {
 26760                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 26761  00646E  C082  F3A1         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 26762                           
 26763                           ; BSR set to: 0
 26764                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 26765  006472  0E00               	movlw	0
 26766  006474  0103               	movlb	3	; () banked
 26767  006476  6FA2               	movwf	(_I2cTxPacket+1)& (0+255),b
 26768                           
 26769                           ; BSR set to: 3
 26770                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 26771  006478  C083  F3A5         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 26772                           
 26773                           ; BSR set to: 3
 26774                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 26775  00647C  C080  F3A3         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 26776  006480  C081  F3A4         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 26777                           
 26778                           ; BSR set to: 3
 26779                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 26780  006484  0ED7               	movlw	low _I2cWriteDataEvt
 26781  006486  0100               	movlb	0	; () banked
 26782  006488  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26783  00648A  0E00               	movlw	high _I2cWriteDataEvt
 26784  00648C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26785  00648E  EC08  F036         	call	_GenerateEvt	;wreg free
 26786                           
 26787                           ;i2c_slv.c: 267: TxSts = 1u;
 26788  006492  0E01               	movlw	1
 26789  006494  0100               	movlb	0	; () banked
 26790  006496  D001               	goto	L58
 26791  006498                     l1412:
 26792                           
 26793                           ; BSR set to: 0
 26794                           ;i2c_slv.c: 269: else
 26795                           ;i2c_slv.c: 270: {
 26796                           ;i2c_slv.c: 272: TxSts = 0u;
 26797                           
 26798                           ; BSR set to: 0
 26799  006498  0E00               	movlw	0
 26800  00649A                     L58:
 26801  00649A  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26802                           
 26803                           ; BSR set to: 0
 26804                           ;i2c_slv.c: 273: }
 26805                           ;i2c_slv.c: 275: return TxSts;
 26806  00649C  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 26807  00649E  0012               	return	
 26808  0064A0                     __end_of_I2cSlv_SendI2cMsg:
 26809                           	opt stack 0
 26810                           tosu	equ	0xFFF
 26811                           tosh	equ	0xFFE
 26812                           tosl	equ	0xFFD
 26813                           pclath	equ	0xFFA
 26814                           tblptru	equ	0xFF8
 26815                           tblptrh	equ	0xFF7
 26816                           tblptrl	equ	0xFF6
 26817                           tablat	equ	0xFF5
 26818                           prodh	equ	0xFF4
 26819                           prodl	equ	0xFF3
 26820                           intcon	equ	0xFF2
 26821                           intcon2	equ	0xFF1
 26822                           intcon3	equ	0xFF0
 26823                           indf0	equ	0xFEF
 26824                           postinc0	equ	0xFEE
 26825                           plusw0	equ	0xFEB
 26826                           fsr0h	equ	0xFEA
 26827                           fsr0l	equ	0xFE9
 26828                           wreg	equ	0xFE8
 26829                           indf1	equ	0xFE7
 26830                           postinc1	equ	0xFE6
 26831                           postdec1	equ	0xFE5
 26832                           fsr1h	equ	0xFE2
 26833                           fsr1l	equ	0xFE1
 26834                           indf2	equ	0xFDF
 26835                           postinc2	equ	0xFDE
 26836                           postdec2	equ	0xFDD
 26837                           plusw2	equ	0xFDB
 26838                           fsr2h	equ	0xFDA
 26839                           fsr2l	equ	0xFD9
 26840                           status	equ	0xFD8
 26841                           
 26842 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 26843 ;; Defined at:
 26844 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26845 ;; Parameters:    Size  Location     Type
 26846 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 26847 ;;		 -> readBuffer(13), memoryPreamble(4), Terminal@TermRxBuffer(50), 
 26848 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 26849 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 26850 ;; Auto vars:     Size  Location     Type
 26851 ;;  RxSts           1   36[BANK0 ] unsigned char 
 26852 ;; Return value:  Size  Location     Type
 26853 ;;                  1    wreg      unsigned char 
 26854 ;; Registers used:
 26855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26856 ;; Tracked objects:
 26857 ;;		On entry : 0/0
 26858 ;;		On exit  : 0/0
 26859 ;;		Unchanged: 0/0
 26860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26861 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26864 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26865 ;;Total ram usage:        5 bytes
 26866 ;; Hardware stack levels used:    1
 26867 ;; Hardware stack levels required when called:   12
 26868 ;; This function calls:
 26869 ;;		_GenerateEvt
 26870 ;; This function is called by:
 26871 ;;		_I2cSlv_QueryI2cData
 26872 ;;		_Terminal
 26873 ;; This function uses a non-reentrant model
 26874 ;;
 26875                           
 26876                           	psect	text127
 26877  0063A4                     __ptext127:
 26878                           	opt stack 0
 26879  0063A4                     _I2cSlv_ReceiveI2cMsg:
 26880                           	opt stack 13
 26881                           
 26882                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 26883                           
 26884                           ; BSR set to: 0
 26885                           ;incstack = 0
 26886  0063A4  0E00               	movlw	0
 26887  0063A6  0100               	movlb	0	; () banked
 26888  0063A8  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 26889                           
 26890                           ; BSR set to: 0
 26891                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 26892  0063AA  0E02               	movlw	2
 26893  0063AC  19CF               	xorwf	_I2cComSts& (0+255),w,b
 26894  0063AE  B4D8               	btfsc	status,2,c
 26895  0063B0  D016               	goto	l1417
 26896                           
 26897                           ; BSR set to: 0
 26898                           ;i2c_slv.c: 294: {
 26899                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 26900  0063B2  C082  F39B         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 26901                           
 26902                           ; BSR set to: 0
 26903                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 26904  0063B6  0E01               	movlw	1
 26905  0063B8  0103               	movlb	3	; () banked
 26906  0063BA  6F9C               	movwf	(_I2cRxPacket+1)& (0+255),b
 26907                           
 26908                           ; BSR set to: 3
 26909                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 26910  0063BC  C083  F39F         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 26911                           
 26912                           ; BSR set to: 3
 26913                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 26914  0063C0  C080  F39D         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 26915  0063C4  C081  F39E         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 26916                           
 26917                           ; BSR set to: 3
 26918                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 26919  0063C8  0E39               	movlw	low _I2cReadDataEvt
 26920  0063CA  0100               	movlb	0	; () banked
 26921  0063CC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26922  0063CE  0E00               	movlw	high _I2cReadDataEvt
 26923  0063D0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26924  0063D2  EC08  F036         	call	_GenerateEvt	;wreg free
 26925                           
 26926                           ;i2c_slv.c: 304: RxSts = 1u;
 26927  0063D6  0E01               	movlw	1
 26928  0063D8  0100               	movlb	0	; () banked
 26929  0063DA  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 26930                           
 26931                           ;i2c_slv.c: 305: }
 26932  0063DC  0012               	return	
 26933  0063DE                     l1417:
 26934                           
 26935                           ; BSR set to: 0
 26936                           ;i2c_slv.c: 306: else
 26937                           ;i2c_slv.c: 307: {
 26938                           ;i2c_slv.c: 309: RxSts = 0u;
 26939                           
 26940                           ; BSR set to: 0
 26941  0063DE  0E00               	movlw	0
 26942  0063E0  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 26943                           
 26944                           ; BSR set to: 0
 26945  0063E2  0012               	return	
 26946  0063E4                     __end_of_I2cSlv_ReceiveI2cMsg:
 26947                           	opt stack 0
 26948                           tosu	equ	0xFFF
 26949                           tosh	equ	0xFFE
 26950                           tosl	equ	0xFFD
 26951                           pclath	equ	0xFFA
 26952                           tblptru	equ	0xFF8
 26953                           tblptrh	equ	0xFF7
 26954                           tblptrl	equ	0xFF6
 26955                           tablat	equ	0xFF5
 26956                           prodh	equ	0xFF4
 26957                           prodl	equ	0xFF3
 26958                           intcon	equ	0xFF2
 26959                           intcon2	equ	0xFF1
 26960                           intcon3	equ	0xFF0
 26961                           indf0	equ	0xFEF
 26962                           postinc0	equ	0xFEE
 26963                           plusw0	equ	0xFEB
 26964                           fsr0h	equ	0xFEA
 26965                           fsr0l	equ	0xFE9
 26966                           wreg	equ	0xFE8
 26967                           indf1	equ	0xFE7
 26968                           postinc1	equ	0xFE6
 26969                           postdec1	equ	0xFE5
 26970                           fsr1h	equ	0xFE2
 26971                           fsr1l	equ	0xFE1
 26972                           indf2	equ	0xFDF
 26973                           postinc2	equ	0xFDE
 26974                           postdec2	equ	0xFDD
 26975                           plusw2	equ	0xFDB
 26976                           fsr2h	equ	0xFDA
 26977                           fsr2l	equ	0xFD9
 26978                           status	equ	0xFD8
 26979                           
 26980 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 26981 ;; Defined at:
 26982 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26983 ;; Parameters:    Size  Location     Type
 26984 ;;		None
 26985 ;; Auto vars:     Size  Location     Type
 26986 ;;  Result          1   33[BANK0 ] enum E8936
 26987 ;; Return value:  Size  Location     Type
 26988 ;;                  1    wreg      enum E8936
 26989 ;; Registers used:
 26990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26991 ;; Tracked objects:
 26992 ;;		On entry : 0/0
 26993 ;;		On exit  : 0/0
 26994 ;;		Unchanged: 0/0
 26995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26997 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26999 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27000 ;;Total ram usage:        1 bytes
 27001 ;; Hardware stack levels used:    1
 27002 ;; Hardware stack levels required when called:   12
 27003 ;; This function calls:
 27004 ;;		_ReceiveEvt
 27005 ;; This function is called by:
 27006 ;;		_I2cSlv_QueryI2cData
 27007 ;;		_Terminal
 27008 ;; This function uses a non-reentrant model
 27009 ;;
 27010                           
 27011                           	psect	text128
 27012  006A64                     __ptext128:
 27013                           	opt stack 0
 27014  006A64                     _I2cSlv_I2cReadMsgSts:
 27015                           	opt stack 13
 27016                           
 27017                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 27018                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 27019                           
 27020                           ; BSR set to: 0
 27021                           ;incstack = 0
 27022  006A64  0EA0               	movlw	low (_I2cRxPacket+5)
 27023  006A66  0100               	movlb	0	; () banked
 27024  006A68  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27025  006A6A  0E03               	movlw	high (_I2cRxPacket+5)
 27026  006A6C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27027  006A6E  EC17  F034         	call	_ReceiveEvt	;wreg free
 27028  006A72  0900               	iorlw	0
 27029  006A74  B4D8               	btfsc	status,2,c
 27030  006A76  D002               	goto	l1422
 27031                           
 27032                           ;i2c_slv.c: 331: {
 27033                           ;i2c_slv.c: 332: Result = MessageReceived;
 27034  006A78  0E01               	movlw	1
 27035  006A7A  D001               	goto	L59
 27036  006A7C                     l1422:
 27037                           
 27038                           ;i2c_slv.c: 334: else
 27039                           ;i2c_slv.c: 335: {
 27040                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 27041                           
 27042                           ; BSR set to: 0
 27043  006A7C  0E00               	movlw	0
 27044  006A7E                     L59:
 27045  006A7E  0100               	movlb	0	; () banked
 27046  006A80  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 27047                           
 27048                           ; BSR set to: 0
 27049                           ;i2c_slv.c: 337: }
 27050                           ;i2c_slv.c: 339: return Result;
 27051  006A82  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 27052  006A84  0012               	return	
 27053  006A86                     __end_of_I2cSlv_I2cReadMsgSts:
 27054                           	opt stack 0
 27055                           tosu	equ	0xFFF
 27056                           tosh	equ	0xFFE
 27057                           tosl	equ	0xFFD
 27058                           pclath	equ	0xFFA
 27059                           tblptru	equ	0xFF8
 27060                           tblptrh	equ	0xFF7
 27061                           tblptrl	equ	0xFF6
 27062                           tablat	equ	0xFF5
 27063                           prodh	equ	0xFF4
 27064                           prodl	equ	0xFF3
 27065                           intcon	equ	0xFF2
 27066                           intcon2	equ	0xFF1
 27067                           intcon3	equ	0xFF0
 27068                           indf0	equ	0xFEF
 27069                           postinc0	equ	0xFEE
 27070                           plusw0	equ	0xFEB
 27071                           fsr0h	equ	0xFEA
 27072                           fsr0l	equ	0xFE9
 27073                           wreg	equ	0xFE8
 27074                           indf1	equ	0xFE7
 27075                           postinc1	equ	0xFE6
 27076                           postdec1	equ	0xFE5
 27077                           fsr1h	equ	0xFE2
 27078                           fsr1l	equ	0xFE1
 27079                           indf2	equ	0xFDF
 27080                           postinc2	equ	0xFDE
 27081                           postdec2	equ	0xFDD
 27082                           plusw2	equ	0xFDB
 27083                           fsr2h	equ	0xFDA
 27084                           fsr2l	equ	0xFD9
 27085                           status	equ	0xFD8
 27086                           
 27087 ;; *************** function _Led_SetLedBlinkTime *****************
 27088 ;; Defined at:
 27089 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 27090 ;; Parameters:    Size  Location     Type
 27091 ;;  Led             1    wreg     unsigned char 
 27092 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 27093 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 27094 ;; Auto vars:     Size  Location     Type
 27095 ;;  Led             1   33[BANK0 ] unsigned char 
 27096 ;; Return value:  Size  Location     Type
 27097 ;;                  1    wreg      void 
 27098 ;; Registers used:
 27099 ;;		wreg, status,2, status,0
 27100 ;; Tracked objects:
 27101 ;;		On entry : 0/0
 27102 ;;		On exit  : 0/0
 27103 ;;		Unchanged: 0/0
 27104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27105 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27108 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27109 ;;Total ram usage:        5 bytes
 27110 ;; Hardware stack levels used:    1
 27111 ;; Hardware stack levels required when called:   11
 27112 ;; This function calls:
 27113 ;;		Nothing
 27114 ;; This function is called by:
 27115 ;;		_MyApp_Task
 27116 ;; This function uses a non-reentrant model
 27117 ;;
 27118                           
 27119                           	psect	text129
 27120  005DBC                     __ptext129:
 27121                           	opt stack 0
 27122  005DBC                     _Led_SetLedBlinkTime:
 27123                           	opt stack 16
 27124                           
 27125                           ; BSR set to: 0
 27126                           ;incstack = 0
 27127                           ;Led_SetLedBlinkTime@Led stored from wreg
 27128  005DBC  0100               	movlb	0	; () banked
 27129  005DBE  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 27130                           
 27131                           ;led.c: 374: switch (Led)
 27132  005DC0  D01B               	goto	l2151
 27133  005DC2                     l2152:
 27134                           
 27135                           ; BSR set to: 0
 27136                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 27137  005DC2  C07D  F375         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 27138  005DC6  C07E  F376         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 27139                           
 27140                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 27141  005DCA  C07F  F377         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 27142  005DCE  C080  F378         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 27143                           
 27144                           ;led.c: 379: break;
 27145  005DD2  0012               	return	
 27146  005DD4                     l2154:
 27147                           
 27148                           ; BSR set to: 0
 27149                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 27150  005DD4  C07D  F36C         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 27151  005DD8  C07E  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 27152                           
 27153                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 27154  005DDC  C07F  F36E         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 27155  005DE0  C080  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 27156                           
 27157                           ;led.c: 384: break;
 27158  005DE4  0012               	return	
 27159  005DE6                     l2155:
 27160                           
 27161                           ; BSR set to: 0
 27162                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 27163  005DE6  C07D  F36C         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 27164  005DEA  C07E  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 27165                           
 27166                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 27167  005DEE  C07F  F36E         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 27168  005DF2  C080  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 27169                           
 27170                           ; BSR set to: 0
 27171                           ;led.c: 393: }
 27172                           
 27173                           ; BSR set to: 0
 27174                           ;led.c: 392: break;
 27175                           
 27176                           ;led.c: 391: default:
 27177                           
 27178                           ;led.c: 389: break;
 27179  005DF6  0012               	return	
 27180  005DF8                     l2151:
 27181                           
 27182                           ; BSR set to: 0
 27183  005DF8  0100               	movlb	0	; () banked
 27184  005DFA  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 27185                           
 27186                           ; Switch size 1, requested type "space"
 27187                           ; Number of cases is 3, Range of values is 1 to 3
 27188                           ; switch strategies available:
 27189                           ; Name         Instructions Cycles
 27190                           ; simple_byte           10     6 (average)
 27191                           ;	Chosen strategy is simple_byte
 27192  005DFC  0A01               	xorlw	1	; case 1
 27193  005DFE  B4D8               	btfsc	status,2,c
 27194  005E00  D7E0               	goto	l2152
 27195  005E02  0A03               	xorlw	3	; case 2
 27196  005E04  B4D8               	btfsc	status,2,c
 27197  005E06  D7E6               	goto	l2154
 27198  005E08  0A01               	xorlw	1	; case 3
 27199  005E0A  A4D8               	btfss	status,2,c
 27200  005E0C  0012               	return	
 27201  005E0E  D7EB               	goto	l2155
 27202  005E10                     __end_of_Led_SetLedBlinkTime:
 27203                           	opt stack 0
 27204                           tosu	equ	0xFFF
 27205                           tosh	equ	0xFFE
 27206                           tosl	equ	0xFFD
 27207                           pclath	equ	0xFFA
 27208                           tblptru	equ	0xFF8
 27209                           tblptrh	equ	0xFF7
 27210                           tblptrl	equ	0xFF6
 27211                           tablat	equ	0xFF5
 27212                           prodh	equ	0xFF4
 27213                           prodl	equ	0xFF3
 27214                           intcon	equ	0xFF2
 27215                           intcon2	equ	0xFF1
 27216                           intcon3	equ	0xFF0
 27217                           indf0	equ	0xFEF
 27218                           postinc0	equ	0xFEE
 27219                           plusw0	equ	0xFEB
 27220                           fsr0h	equ	0xFEA
 27221                           fsr0l	equ	0xFE9
 27222                           wreg	equ	0xFE8
 27223                           indf1	equ	0xFE7
 27224                           postinc1	equ	0xFE6
 27225                           postdec1	equ	0xFE5
 27226                           fsr1h	equ	0xFE2
 27227                           fsr1l	equ	0xFE1
 27228                           indf2	equ	0xFDF
 27229                           postinc2	equ	0xFDE
 27230                           postdec2	equ	0xFDD
 27231                           plusw2	equ	0xFDB
 27232                           fsr2h	equ	0xFDA
 27233                           fsr2l	equ	0xFD9
 27234                           status	equ	0xFD8
 27235                           
 27236 ;; *************** function _UartSetConfig *****************
 27237 ;; Defined at:
 27238 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27239 ;; Parameters:    Size  Location     Type
 27240 ;;		None
 27241 ;; Auto vars:     Size  Location     Type
 27242 ;;		None
 27243 ;; Return value:  Size  Location     Type
 27244 ;;                  1    wreg      void 
 27245 ;; Registers used:
 27246 ;;		wreg, status,2
 27247 ;; Tracked objects:
 27248 ;;		On entry : 0/0
 27249 ;;		On exit  : 0/0
 27250 ;;		Unchanged: 0/0
 27251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27256 ;;Total ram usage:        0 bytes
 27257 ;; Hardware stack levels used:    1
 27258 ;; Hardware stack levels required when called:   11
 27259 ;; This function calls:
 27260 ;;		Nothing
 27261 ;; This function is called by:
 27262 ;;		_Mdm_MainTask
 27263 ;; This function uses a non-reentrant model
 27264 ;;
 27265                           
 27266                           	psect	text130
 27267  005B0A                     __ptext130:
 27268                           	opt stack 0
 27269  005B0A                     _UartSetConfig:
 27270                           	opt stack 16
 27271                           
 27272                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 27273                           
 27274                           ; BSR set to: 0
 27275                           ;incstack = 0
 27276  005B0A  0E01               	movlw	1
 27277  005B0C  0103               	movlb	3	; () banked
 27278  005B0E  6F24               	movwf	_UartConfig& (0+255),b
 27279                           
 27280                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 27281  005B10  0E00               	movlw	0
 27282  005B12  6F25               	movwf	(_UartConfig+1)& (0+255),b
 27283                           
 27284                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 27285  005B14  0E00               	movlw	0
 27286  005B16  6F26               	movwf	(_UartConfig+2)& (0+255),b
 27287                           
 27288                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 27289  005B18  0E00               	movlw	0
 27290  005B1A  6F27               	movwf	(_UartConfig+3)& (0+255),b
 27291                           
 27292                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 27293  005B1C  0E00               	movlw	0
 27294  005B1E  6F28               	movwf	(_UartConfig+4)& (0+255),b
 27295                           
 27296                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 27297  005B20  0E00               	movlw	0
 27298  005B22  6F29               	movwf	(_UartConfig+5)& (0+255),b
 27299                           
 27300                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 27301  005B24  0E01               	movlw	1
 27302  005B26  6F2A               	movwf	(_UartConfig+6)& (0+255),b
 27303                           
 27304                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 27305  005B28  0E01               	movlw	1
 27306  005B2A  6F2B               	movwf	(_UartConfig+7)& (0+255),b
 27307                           
 27308                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 27309  005B2C  0E00               	movlw	0
 27310  005B2E  6F2C               	movwf	(_UartConfig+8)& (0+255),b
 27311                           
 27312                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 27313  005B30  0E00               	movlw	0
 27314  005B32  6F2D               	movwf	(_UartConfig+9)& (0+255),b
 27315                           
 27316                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 27317  005B34  0E00               	movlw	0
 27318  005B36  6F2E               	movwf	(_UartConfig+10)& (0+255),b
 27319                           
 27320                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 27321  005B38  0E00               	movlw	0
 27322  005B3A  6F2F               	movwf	(_UartConfig+11)& (0+255),b
 27323                           
 27324                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 27325  005B3C  0E01               	movlw	1
 27326  005B3E  6F30               	movwf	(_UartConfig+12)& (0+255),b
 27327                           
 27328                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 27329  005B40  0E00               	movlw	0
 27330  005B42  6F31               	movwf	(_UartConfig+13)& (0+255),b
 27331  005B44  0E6C               	movlw	108
 27332  005B46  6F32               	movwf	(_UartConfig+14)& (0+255),b
 27333  005B48  0EDC               	movlw	220
 27334  005B4A  6F33               	movwf	(_UartConfig+15)& (0+255),b
 27335  005B4C  0E02               	movlw	2
 27336  005B4E  6F34               	movwf	(_UartConfig+16)& (0+255),b
 27337                           
 27338                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 27339  005B50  0E80               	movlw	128
 27340  005B52  6F35               	movwf	(_UartConfig+17)& (0+255),b
 27341  005B54  0E25               	movlw	37
 27342  005B56  6F36               	movwf	(_UartConfig+18)& (0+255),b
 27343  005B58  0E00               	movlw	0
 27344  005B5A  6F37               	movwf	(_UartConfig+19)& (0+255),b
 27345  005B5C  0E00               	movlw	0
 27346  005B5E  6F38               	movwf	(_UartConfig+20)& (0+255),b
 27347                           
 27348                           ; BSR set to: 3
 27349  005B60  0012               	return		;funcret
 27350  005B62                     __end_of_UartSetConfig:
 27351                           	opt stack 0
 27352                           tosu	equ	0xFFF
 27353                           tosh	equ	0xFFE
 27354                           tosl	equ	0xFFD
 27355                           pclath	equ	0xFFA
 27356                           tblptru	equ	0xFF8
 27357                           tblptrh	equ	0xFF7
 27358                           tblptrl	equ	0xFF6
 27359                           tablat	equ	0xFF5
 27360                           prodh	equ	0xFF4
 27361                           prodl	equ	0xFF3
 27362                           intcon	equ	0xFF2
 27363                           intcon2	equ	0xFF1
 27364                           intcon3	equ	0xFF0
 27365                           indf0	equ	0xFEF
 27366                           postinc0	equ	0xFEE
 27367                           plusw0	equ	0xFEB
 27368                           fsr0h	equ	0xFEA
 27369                           fsr0l	equ	0xFE9
 27370                           wreg	equ	0xFE8
 27371                           indf1	equ	0xFE7
 27372                           postinc1	equ	0xFE6
 27373                           postdec1	equ	0xFE5
 27374                           fsr1h	equ	0xFE2
 27375                           fsr1l	equ	0xFE1
 27376                           indf2	equ	0xFDF
 27377                           postinc2	equ	0xFDE
 27378                           postdec2	equ	0xFDD
 27379                           plusw2	equ	0xFDB
 27380                           fsr2h	equ	0xFDA
 27381                           fsr2l	equ	0xFD9
 27382                           status	equ	0xFD8
 27383                           
 27384 ;; *************** function _TurnOnModem *****************
 27385 ;; Defined at:
 27386 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27387 ;; Parameters:    Size  Location     Type
 27388 ;;		None
 27389 ;; Auto vars:     Size  Location     Type
 27390 ;;		None
 27391 ;; Return value:  Size  Location     Type
 27392 ;;                  1    wreg      void 
 27393 ;; Registers used:
 27394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27395 ;; Tracked objects:
 27396 ;;		On entry : 0/0
 27397 ;;		On exit  : 0/0
 27398 ;;		Unchanged: 0/0
 27399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27404 ;;Total ram usage:        0 bytes
 27405 ;; Hardware stack levels used:    1
 27406 ;; Hardware stack levels required when called:   12
 27407 ;; This function calls:
 27408 ;;		_GenerateEvt
 27409 ;; This function is called by:
 27410 ;;		_Mdm_MainTask
 27411 ;; This function uses a non-reentrant model
 27412 ;;
 27413                           
 27414                           	psect	text131
 27415  00612E                     __ptext131:
 27416                           	opt stack 0
 27417  00612E                     _TurnOnModem:
 27418                           	opt stack 15
 27419                           
 27420                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 27421                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 27422                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 27423                           
 27424                           ; BSR set to: 3
 27425                           ;incstack = 0
 27426  00612E  D01B               	goto	l1009
 27427  006130                     
 27428                           ;mdm_gsm_gprs.c: 385: Counter++;
 27429  006130  0103               	movlb	3	; () banked
 27430  006132  4B22               	infsnz	TurnOnModem@Counter& (0+255),f,b
 27431  006134  2B23               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 27432                           
 27433                           ; BSR set to: 3
 27434                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 27435  006136  0EB8               	movlw	184
 27436  006138  5D22               	subwf	TurnOnModem@Counter& (0+255),w,b
 27437  00613A  0E0B               	movlw	11
 27438  00613C  5923               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 27439  00613E  A0D8               	btfss	status,0,c
 27440  006140  0012               	return	
 27441                           
 27442                           ; BSR set to: 3
 27443                           ;mdm_gsm_gprs.c: 388: {
 27444                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 27445  006142  0E01               	movlw	1
 27446  006144  0101               	movlb	1	; () banked
 27447  006146  6FF1               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 27448                           
 27449                           ; BSR set to: 1
 27450                           ;mdm_gsm_gprs.c: 391: }
 27451                           ;mdm_gsm_gprs.c: 392: break;
 27452  006148  0012               	return	
 27453  00614A                     
 27454                           ; BSR set to: 1
 27455                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 27456                           
 27457                           ; BSR set to: 1
 27458  00614A  0EDF               	movlw	low _MdmOnOffPulseRequest
 27459  00614C  0100               	movlb	0	; () banked
 27460  00614E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27461  006150  0E00               	movlw	high _MdmOnOffPulseRequest
 27462  006152  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27463  006154  EC08  F036         	call	_GenerateEvt	;wreg free
 27464                           
 27465                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 27466  006158  0E01               	movlw	1
 27467  00615A  0100               	movlb	0	; () banked
 27468  00615C  6FD1               	movwf	_MdmStatus& (0+255),b
 27469                           
 27470                           ; BSR set to: 0
 27471                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 27472  00615E  0E02               	movlw	2
 27473  006160  0101               	movlb	1	; () banked
 27474  006162  6FF1               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 27475                           
 27476                           ; BSR set to: 1
 27477                           ;mdm_gsm_gprs.c: 408: }
 27478                           
 27479                           ; BSR set to: 1
 27480                           ;mdm_gsm_gprs.c: 407: break;
 27481                           
 27482                           ;mdm_gsm_gprs.c: 406: default:
 27483                           
 27484                           ; BSR set to: 1
 27485                           ;mdm_gsm_gprs.c: 404: break;
 27486                           
 27487                           ;mdm_gsm_gprs.c: 403: case Stop:
 27488                           
 27489                           ;mdm_gsm_gprs.c: 401: break;
 27490  006164  0012               	return	
 27491  006166                     l1009:
 27492                           
 27493                           ; BSR set to: 1
 27494  006166  0101               	movlb	1	; () banked
 27495  006168  51F1               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 27496                           
 27497                           ; Switch size 1, requested type "space"
 27498                           ; Number of cases is 3, Range of values is 0 to 2
 27499                           ; switch strategies available:
 27500                           ; Name         Instructions Cycles
 27501                           ; simple_byte           10     6 (average)
 27502                           ;	Chosen strategy is simple_byte
 27503  00616A  0A00               	xorlw	0	; case 0
 27504  00616C  B4D8               	btfsc	status,2,c
 27505  00616E  D7E0               	goto	l1010
 27506  006170  0A01               	xorlw	1	; case 1
 27507  006172  B4D8               	btfsc	status,2,c
 27508  006174  D7EA               	goto	l1013
 27509  006176  0A03               	xorlw	3	; case 2
 27510  006178  0012               	return	
 27511  00617A                     __end_of_TurnOnModem:
 27512                           	opt stack 0
 27513                           tosu	equ	0xFFF
 27514                           tosh	equ	0xFFE
 27515                           tosl	equ	0xFFD
 27516                           pclath	equ	0xFFA
 27517                           tblptru	equ	0xFF8
 27518                           tblptrh	equ	0xFF7
 27519                           tblptrl	equ	0xFF6
 27520                           tablat	equ	0xFF5
 27521                           prodh	equ	0xFF4
 27522                           prodl	equ	0xFF3
 27523                           intcon	equ	0xFF2
 27524                           intcon2	equ	0xFF1
 27525                           intcon3	equ	0xFF0
 27526                           indf0	equ	0xFEF
 27527                           postinc0	equ	0xFEE
 27528                           plusw0	equ	0xFEB
 27529                           fsr0h	equ	0xFEA
 27530                           fsr0l	equ	0xFE9
 27531                           wreg	equ	0xFE8
 27532                           indf1	equ	0xFE7
 27533                           postinc1	equ	0xFE6
 27534                           postdec1	equ	0xFE5
 27535                           fsr1h	equ	0xFE2
 27536                           fsr1l	equ	0xFE1
 27537                           indf2	equ	0xFDF
 27538                           postinc2	equ	0xFDE
 27539                           postdec2	equ	0xFDD
 27540                           plusw2	equ	0xFDB
 27541                           fsr2h	equ	0xFDA
 27542                           fsr2l	equ	0xFD9
 27543                           status	equ	0xFD8
 27544                           
 27545 ;; *************** function _SendSmsSm *****************
 27546 ;; Defined at:
 27547 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27548 ;; Parameters:    Size  Location     Type
 27549 ;;		None
 27550 ;; Auto vars:     Size  Location     Type
 27551 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 27552 ;; Return value:  Size  Location     Type
 27553 ;;                  1    wreg      void 
 27554 ;; Registers used:
 27555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27556 ;; Tracked objects:
 27557 ;;		On entry : 0/0
 27558 ;;		On exit  : 0/0
 27559 ;;		Unchanged: 0/0
 27560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27562 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27563 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27564 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27565 ;;Total ram usage:       52 bytes
 27566 ;; Hardware stack levels used:    1
 27567 ;; Hardware stack levels required when called:   14
 27568 ;; This function calls:
 27569 ;;		_OsTmr_GetTimerStatus
 27570 ;;		_OsTmr_StartTimer
 27571 ;;		_ReceiveEvt
 27572 ;;		_StringCopy
 27573 ;;		_Uart_WriteStringLen
 27574 ;; This function is called by:
 27575 ;;		_Mdm_MainTask
 27576 ;; This function uses a non-reentrant model
 27577 ;;
 27578                           
 27579                           	psect	text132
 27580  0019F8                     __ptext132:
 27581                           	opt stack 0
 27582  0019F8                     _SendSmsSm:
 27583                           	opt stack 13
 27584                           
 27585                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 27586                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 27587                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 27588                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 27589                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 27590                           
 27591                           ;incstack = 0
 27592  0019F8  0E03               	movlw	3
 27593  0019FA  0100               	movlb	0	; () banked
 27594  0019FC  19D1               	xorwf	_MdmStatus& (0+255),w,b
 27595  0019FE  A4D8               	btfss	status,2,c
 27596  001A00  0012               	return	
 27597  001A02  D0C1               	goto	l1091
 27598  001A04                     
 27599                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 27600                           
 27601                           ; BSR set to: 0
 27602  001A04  0EDE               	movlw	low _SendSmsEvent
 27603  001A06  0100               	movlb	0	; () banked
 27604  001A08  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27605  001A0A  0E00               	movlw	high _SendSmsEvent
 27606  001A0C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27607  001A0E  EC17  F034         	call	_ReceiveEvt	;wreg free
 27608  001A12  0900               	iorlw	0
 27609  001A14  B4D8               	btfsc	status,2,c
 27610  001A16  0012               	return	
 27611                           
 27612                           ;mdm_gsm_gprs.c: 671: {
 27613                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 27614  001A18  0E01               	movlw	1
 27615  001A1A  0101               	movlb	1	; () banked
 27616  001A1C  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27617                           
 27618                           ; BSR set to: 1
 27619                           ;mdm_gsm_gprs.c: 674: }
 27620                           ;mdm_gsm_gprs.c: 675: break;
 27621  001A1E  0012               	return	
 27622  001A20                     
 27623                           ; BSR set to: 1
 27624                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 27625                           
 27626                           ; BSR set to: 1
 27627  001A20  0ECE               	movlw	low STR_5
 27628  001A22  0100               	movlb	0	; () banked
 27629  001A24  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27630  001A26  0EFF               	movlw	high STR_5
 27631  001A28  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27632  001A2A  0E00               	movlw	low SendSmsSm@UartMessage
 27633  001A2C  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27634  001A2E  0E01               	movlw	high SendSmsSm@UartMessage
 27635  001A30  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27636  001A32  0E00               	movlw	0
 27637  001A34  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 27638  001A36  0E09               	movlw	9
 27639  001A38  6F89               	movwf	StringCopy@Len& (0+255),b
 27640  001A3A  ECC8  F02C         	call	_StringCopy	;wreg free
 27641                           
 27642                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 27643  001A3E  0E98               	movlw	low _PhoneNumber
 27644  001A40  0100               	movlb	0	; () banked
 27645  001A42  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27646  001A44  0E04               	movlw	high _PhoneNumber
 27647  001A46  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27648  001A48  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 27649  001A4A  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27650  001A4C  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 27651  001A4E  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27652  001A50  C0D2  F089         	movff	_PhoneNumbLen,StringCopy@Len
 27653  001A54  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 27654  001A56  ECC8  F02C         	call	_StringCopy	;wreg free
 27655                           
 27656                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 27657  001A5A  0100               	movlb	0	; () banked
 27658  001A5C  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 27659  001A5E  6F9B               	movwf	??_SendSmsSm& (0+255),b
 27660  001A60  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 27661  001A62  0E09               	movlw	9
 27662  001A64  279B               	addwf	??_SendSmsSm& (0+255),f,b
 27663  001A66  0E00               	movlw	0
 27664  001A68  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 27665  001A6A  0E00               	movlw	low SendSmsSm@UartMessage
 27666  001A6C  259B               	addwf	??_SendSmsSm& (0+255),w,b
 27667  001A6E  6ED9               	movwf	fsr2l,c
 27668  001A70  0E01               	movlw	high SendSmsSm@UartMessage
 27669  001A72  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 27670  001A74  6EDA               	movwf	fsr2h,c
 27671  001A76  0E22               	movlw	34
 27672  001A78  6EDF               	movwf	indf2,c
 27673                           
 27674                           ; BSR set to: 0
 27675                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 27676  001A7A  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 27677  001A7C  6F9B               	movwf	??_SendSmsSm& (0+255),b
 27678  001A7E  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 27679  001A80  0E0A               	movlw	10
 27680  001A82  279B               	addwf	??_SendSmsSm& (0+255),f,b
 27681  001A84  0E00               	movlw	0
 27682  001A86  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 27683  001A88  0E00               	movlw	low SendSmsSm@UartMessage
 27684  001A8A  259B               	addwf	??_SendSmsSm& (0+255),w,b
 27685  001A8C  6ED9               	movwf	fsr2l,c
 27686  001A8E  0E01               	movlw	high SendSmsSm@UartMessage
 27687  001A90  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 27688  001A92  6EDA               	movwf	fsr2h,c
 27689  001A94  0E0D               	movlw	13
 27690  001A96  6EDF               	movwf	indf2,c
 27691                           
 27692                           ; BSR set to: 0
 27693                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 27694  001A98  0E00               	movlw	low SendSmsSm@UartMessage
 27695  001A9A  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 27696  001A9C  0E01               	movlw	high SendSmsSm@UartMessage
 27697  001A9E  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 27698  001AA0  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 27699  001AA2  0F0B               	addlw	11
 27700  001AA4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 27701  001AA6  0E01               	movlw	1
 27702  001AA8  ECF2  F031         	call	_Uart_WriteStringLen
 27703                           
 27704                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 27705  001AAC  0EE7               	movlw	low SendSmsSm@SwTimer
 27706  001AAE  0100               	movlb	0	; () banked
 27707  001AB0  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27708  001AB2  0E03               	movlw	high SendSmsSm@SwTimer
 27709  001AB4  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27710  001AB6  0EC4               	movlw	196
 27711  001AB8  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27712  001ABA  0E09               	movlw	9
 27713  001ABC  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27714  001ABE  0E00               	movlw	0
 27715  001AC0  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27716  001AC2  0E00               	movlw	0
 27717  001AC4  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27718  001AC6  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 27719                           
 27720                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 27721  001ACA  0E05               	movlw	5
 27722  001ACC  0101               	movlb	1	; () banked
 27723  001ACE  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27724                           
 27725                           ; BSR set to: 1
 27726                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 27727  001AD0  0E02               	movlw	2
 27728  001AD2  6FEC               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 27729                           
 27730                           ;mdm_gsm_gprs.c: 691: break;
 27731  001AD4  0012               	return	
 27732  001AD6                     
 27733                           ; BSR set to: 1
 27734                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 27735                           
 27736                           ; BSR set to: 1
 27737  001AD6  0E0A               	movlw	10
 27738  001AD8  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 27739                           
 27740                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 27741  001ADA  0E0D               	movlw	13
 27742  001ADC  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 27743                           
 27744                           ; BSR set to: 1
 27745                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 27746  001ADE  0E00               	movlw	low SendSmsSm@UartMessage
 27747  001AE0  0100               	movlb	0	; () banked
 27748  001AE2  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 27749  001AE4  0E01               	movlw	high SendSmsSm@UartMessage
 27750  001AE6  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 27751  001AE8  0E02               	movlw	2
 27752  001AEA  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 27753  001AEC  0E01               	movlw	1
 27754  001AEE  ECF2  F031         	call	_Uart_WriteStringLen
 27755                           
 27756                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 27757  001AF2  0E03               	movlw	3
 27758  001AF4  0101               	movlb	1	; () banked
 27759  001AF6  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27760                           
 27761                           ;mdm_gsm_gprs.c: 701: break;
 27762  001AF8  0012               	return	
 27763  001AFA                     
 27764                           ; BSR set to: 1
 27765                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 27766                           
 27767                           ; BSR set to: 1
 27768  001AFA  0E3C               	movlw	low _NewStringReceived
 27769  001AFC  0100               	movlb	0	; () banked
 27770  001AFE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27771  001B00  0E00               	movlw	high _NewStringReceived
 27772  001B02  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27773  001B04  EC17  F034         	call	_ReceiveEvt	;wreg free
 27774  001B08  0900               	iorlw	0
 27775  001B0A  B4D8               	btfsc	status,2,c
 27776  001B0C  0012               	return	
 27777                           
 27778                           ;mdm_gsm_gprs.c: 706: {
 27779                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 27780  001B0E  CC58  FFE8         	movff	_RxBuffer,wreg
 27781  001B12  0A3E               	xorlw	62
 27782  001B14  A4D8               	btfss	status,2,c
 27783  001B16  0012               	return	
 27784                           
 27785                           ;mdm_gsm_gprs.c: 709: {
 27786                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 27787  001B18  0E04               	movlw	4
 27788  001B1A  0101               	movlb	1	; () banked
 27789  001B1C  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27790                           
 27791                           ; BSR set to: 1
 27792                           ;mdm_gsm_gprs.c: 712: }
 27793                           ;mdm_gsm_gprs.c: 713: }
 27794                           ;mdm_gsm_gprs.c: 714: break;
 27795                           
 27796                           ; BSR set to: 1
 27797  001B1E  0012               	return	
 27798  001B20                     
 27799                           ; BSR set to: 1
 27800                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 27801                           
 27802                           ; BSR set to: 1
 27803  001B20  0E72               	movlw	low _MessageText
 27804  001B22  0100               	movlb	0	; () banked
 27805  001B24  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27806  001B26  0E05               	movlw	high _MessageText
 27807  001B28  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27808  001B2A  0E00               	movlw	low SendSmsSm@UartMessage
 27809  001B2C  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27810  001B2E  0E01               	movlw	high SendSmsSm@UartMessage
 27811  001B30  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27812  001B32  C0D3  F089         	movff	_SmsLen,StringCopy@Len
 27813  001B36  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 27814  001B38  ECC8  F02C         	call	_StringCopy	;wreg free
 27815                           
 27816                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 27817  001B3C  0100               	movlb	0	; () banked
 27818  001B3E  51D3               	movf	_SmsLen& (0+255),w,b
 27819  001B40  0D01               	mullw	1
 27820  001B42  0E00               	movlw	low SendSmsSm@UartMessage
 27821  001B44  24F3               	addwf	prodl,w,c
 27822  001B46  6ED9               	movwf	fsr2l,c
 27823  001B48  0E01               	movlw	high SendSmsSm@UartMessage
 27824  001B4A  20F4               	addwfc	prodh,w,c
 27825  001B4C  6EDA               	movwf	fsr2h,c
 27826  001B4E  0E1A               	movlw	26
 27827  001B50  6EDF               	movwf	indf2,c
 27828                           
 27829                           ; BSR set to: 0
 27830                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 27831  001B52  0E00               	movlw	low SendSmsSm@UartMessage
 27832  001B54  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 27833  001B56  0E01               	movlw	high SendSmsSm@UartMessage
 27834  001B58  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 27835  001B5A  29D3               	incf	_SmsLen& (0+255),w,b
 27836  001B5C  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 27837  001B5E  0E01               	movlw	1
 27838  001B60  ECF2  F031         	call	_Uart_WriteStringLen
 27839                           
 27840                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 27841  001B64  0E00               	movlw	0
 27842  001B66  0101               	movlb	1	; () banked
 27843  001B68  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27844                           
 27845                           ;mdm_gsm_gprs.c: 725: break;
 27846  001B6A  0012               	return	
 27847  001B6C                     
 27848                           ; BSR set to: 1
 27849                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 27850                           
 27851                           ; BSR set to: 1
 27852  001B6C  0EE7               	movlw	low SendSmsSm@SwTimer
 27853  001B6E  0100               	movlb	0	; () banked
 27854  001B70  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27855  001B72  0E03               	movlw	high SendSmsSm@SwTimer
 27856  001B74  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27857  001B76  ECD2  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 27858  001B7A  06E8               	decf	wreg,f,c
 27859  001B7C  A4D8               	btfss	status,2,c
 27860  001B7E  0012               	return	
 27861                           
 27862                           ;mdm_gsm_gprs.c: 730: {
 27863                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 27864  001B80  C1EC  F1ED         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 27865                           
 27866                           ;mdm_gsm_gprs.c: 738: }
 27867                           
 27868                           ;mdm_gsm_gprs.c: 737: break;
 27869                           
 27870                           ;mdm_gsm_gprs.c: 736: default:
 27871                           
 27872                           ;mdm_gsm_gprs.c: 733: }
 27873                           ;mdm_gsm_gprs.c: 734: break;
 27874  001B84  0012               	return	
 27875  001B86                     l1091:
 27876  001B86  0101               	movlb	1	; () banked
 27877  001B88  51ED               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 27878                           
 27879                           ; Switch size 1, requested type "space"
 27880                           ; Number of cases is 6, Range of values is 0 to 5
 27881                           ; switch strategies available:
 27882                           ; Name         Instructions Cycles
 27883                           ; simple_byte           19    10 (average)
 27884                           ;	Chosen strategy is simple_byte
 27885  001B8A  0A00               	xorlw	0	; case 0
 27886  001B8C  B4D8               	btfsc	status,2,c
 27887  001B8E  D73A               	goto	l1092
 27888  001B90  0A01               	xorlw	1	; case 1
 27889  001B92  B4D8               	btfsc	status,2,c
 27890  001B94  D745               	goto	l1095
 27891  001B96  0A03               	xorlw	3	; case 2
 27892  001B98  B4D8               	btfsc	status,2,c
 27893  001B9A  D79D               	goto	l1096
 27894  001B9C  0A01               	xorlw	1	; case 3
 27895  001B9E  B4D8               	btfsc	status,2,c
 27896  001BA0  D7AC               	goto	l1097
 27897  001BA2  0A07               	xorlw	7	; case 4
 27898  001BA4  B4D8               	btfsc	status,2,c
 27899  001BA6  D7BC               	goto	l1100
 27900  001BA8  0A01               	xorlw	1	; case 5
 27901  001BAA  A4D8               	btfss	status,2,c
 27902                           
 27903                           ; BSR set to: 1
 27904  001BAC  0012               	return	
 27905  001BAE  D7DE               	goto	l1101
 27906  001BB0                     __end_of_SendSmsSm:
 27907                           	opt stack 0
 27908                           tosu	equ	0xFFF
 27909                           tosh	equ	0xFFE
 27910                           tosl	equ	0xFFD
 27911                           pclath	equ	0xFFA
 27912                           tblptru	equ	0xFF8
 27913                           tblptrh	equ	0xFF7
 27914                           tblptrl	equ	0xFF6
 27915                           tablat	equ	0xFF5
 27916                           prodh	equ	0xFF4
 27917                           prodl	equ	0xFF3
 27918                           intcon	equ	0xFF2
 27919                           intcon2	equ	0xFF1
 27920                           intcon3	equ	0xFF0
 27921                           indf0	equ	0xFEF
 27922                           postinc0	equ	0xFEE
 27923                           plusw0	equ	0xFEB
 27924                           fsr0h	equ	0xFEA
 27925                           fsr0l	equ	0xFE9
 27926                           wreg	equ	0xFE8
 27927                           indf1	equ	0xFE7
 27928                           postinc1	equ	0xFE6
 27929                           postdec1	equ	0xFE5
 27930                           fsr1h	equ	0xFE2
 27931                           fsr1l	equ	0xFE1
 27932                           indf2	equ	0xFDF
 27933                           postinc2	equ	0xFDE
 27934                           postdec2	equ	0xFDD
 27935                           plusw2	equ	0xFDB
 27936                           fsr2h	equ	0xFDA
 27937                           fsr2l	equ	0xFD9
 27938                           status	equ	0xFD8
 27939                           
 27940 ;; *************** function _Uart_WriteStringLen *****************
 27941 ;; Defined at:
 27942 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27943 ;; Parameters:    Size  Location     Type
 27944 ;;  Module          1    wreg     unsigned char 
 27945 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 27946 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 27947 ;;  Len             1   34[BANK0 ] unsigned char 
 27948 ;; Auto vars:     Size  Location     Type
 27949 ;;  Module          1   36[BANK0 ] unsigned char 
 27950 ;;  Index           1   35[BANK0 ] unsigned char 
 27951 ;; Return value:  Size  Location     Type
 27952 ;;                  1    wreg      void 
 27953 ;; Registers used:
 27954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27955 ;; Tracked objects:
 27956 ;;		On entry : 0/0
 27957 ;;		On exit  : 0/0
 27958 ;;		Unchanged: 0/0
 27959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27960 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27963 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27964 ;;Total ram usage:        5 bytes
 27965 ;; Hardware stack levels used:    1
 27966 ;; Hardware stack levels required when called:   12
 27967 ;; This function calls:
 27968 ;;		_UartTxBufferStatus
 27969 ;;		_UartWriteByte
 27970 ;; This function is called by:
 27971 ;;		_SendSmsSm
 27972 ;;		_GsmGprsTerminal
 27973 ;; This function uses a non-reentrant model
 27974 ;;
 27975                           
 27976                           	psect	text133
 27977  0063E4                     __ptext133:
 27978                           	opt stack 0
 27979  0063E4                     _Uart_WriteStringLen:
 27980                           	opt stack 14
 27981                           
 27982                           ;incstack = 0
 27983                           ;Uart_WriteStringLen@Module stored from wreg
 27984  0063E4  0100               	movlb	0	; () banked
 27985  0063E6  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 27986                           
 27987                           ;uart_drv.c: 544: UINT8 Index;
 27988                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 27989  0063E8  0E00               	movlw	0
 27990  0063EA  0100               	movlb	0	; () banked
 27991  0063EC  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 27992  0063EE  D015               	goto	l715
 27993  0063F0                     
 27994                           ; BSR set to: 0
 27995                           ;uart_drv.c: 547: {
 27996                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 27997                           
 27998                           ; BSR set to: 0
 27999  0063F0  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 28000  0063F4  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 28001  0063F8  50DF               	movf	indf2,w,c
 28002  0063FA  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 28003  0063FC  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 28004  0063FE  EC63  F035         	call	_UartWriteByte
 28005                           
 28006                           ;uart_drv.c: 551: StringToWrite++;
 28007  006402  0100               	movlb	0	; () banked
 28008  006404  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 28009  006406  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 28010  006408                     
 28011                           ; BSR set to: 0
 28012                           
 28013                           ; BSR set to: 0
 28014  006408  0100               	movlb	0	; () banked
 28015  00640A  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 28016  00640C  EC23  F030         	call	_UartTxBufferStatus
 28017  006410  06E8               	decf	wreg,f,c
 28018  006412  B4D8               	btfsc	status,2,c
 28019  006414  D7F9               	goto	l718
 28020  006416  0100               	movlb	0	; () banked
 28021  006418  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 28022  00641A                     l715:
 28023                           
 28024                           ; BSR set to: 0
 28025                           
 28026                           ; BSR set to: 0
 28027  00641A  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 28028  00641C  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 28029  00641E  B0D8               	btfsc	status,0,c
 28030  006420  0012               	return	
 28031  006422  D7E6               	goto	l716
 28032  006424                     __end_of_Uart_WriteStringLen:
 28033                           	opt stack 0
 28034                           tosu	equ	0xFFF
 28035                           tosh	equ	0xFFE
 28036                           tosl	equ	0xFFD
 28037                           pclath	equ	0xFFA
 28038                           tblptru	equ	0xFF8
 28039                           tblptrh	equ	0xFF7
 28040                           tblptrl	equ	0xFF6
 28041                           tablat	equ	0xFF5
 28042                           prodh	equ	0xFF4
 28043                           prodl	equ	0xFF3
 28044                           intcon	equ	0xFF2
 28045                           intcon2	equ	0xFF1
 28046                           intcon3	equ	0xFF0
 28047                           indf0	equ	0xFEF
 28048                           postinc0	equ	0xFEE
 28049                           plusw0	equ	0xFEB
 28050                           fsr0h	equ	0xFEA
 28051                           fsr0l	equ	0xFE9
 28052                           wreg	equ	0xFE8
 28053                           indf1	equ	0xFE7
 28054                           postinc1	equ	0xFE6
 28055                           postdec1	equ	0xFE5
 28056                           fsr1h	equ	0xFE2
 28057                           fsr1l	equ	0xFE1
 28058                           indf2	equ	0xFDF
 28059                           postinc2	equ	0xFDE
 28060                           postdec2	equ	0xFDD
 28061                           plusw2	equ	0xFDB
 28062                           fsr2h	equ	0xFDA
 28063                           fsr2l	equ	0xFD9
 28064                           status	equ	0xFD8
 28065                           
 28066 ;; *************** function _ModemEvtParser *****************
 28067 ;; Defined at:
 28068 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28069 ;; Parameters:    Size  Location     Type
 28070 ;;		None
 28071 ;; Auto vars:     Size  Location     Type
 28072 ;;  CallReadyStr   10   47[BANK0 ] unsigned char [10]
 28073 ;;  SmsString       5   62[BANK0 ] unsigned char [5]
 28074 ;;  ClipString      5   57[BANK0 ] unsigned char [5]
 28075 ;;  RingString      4   67[BANK0 ] unsigned char [4]
 28076 ;;  CompareIdx      1   72[BANK0 ] unsigned char 
 28077 ;;  Match           1   71[BANK0 ] unsigned char 
 28078 ;; Return value:  Size  Location     Type
 28079 ;;                  1    wreg      void 
 28080 ;; Registers used:
 28081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28082 ;; Tracked objects:
 28083 ;;		On entry : 0/0
 28084 ;;		On exit  : 0/0
 28085 ;;		Unchanged: 0/0
 28086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28088 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28090 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28091 ;;Total ram usage:       26 bytes
 28092 ;; Hardware stack levels used:    1
 28093 ;; Hardware stack levels required when called:   12
 28094 ;; This function calls:
 28095 ;;		_GenerateEvt
 28096 ;;		_ReceiveEvt
 28097 ;;		_StringCompare
 28098 ;;		_StringCopy
 28099 ;;		_Uart_ClearRxBuffer
 28100 ;; This function is called by:
 28101 ;;		_Mdm_MainTask
 28102 ;; This function uses a non-reentrant model
 28103 ;;
 28104                           
 28105                           	psect	text134
 28106  001D36                     __ptext134:
 28107                           	opt stack 0
 28108  001D36                     _ModemEvtParser:
 28109                           	opt stack 15
 28110                           
 28111                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 28112                           
 28113                           ; BSR set to: 0
 28114                           ;incstack = 0
 28115  001D36  C3CD  F0A3         	movff	ModemEvtParser@F9111,ModemEvtParser@RingString
 28116  001D3A  C3CE  F0A4         	movff	ModemEvtParser@F9111+1,ModemEvtParser@RingString+1
 28117  001D3E  C3CF  F0A5         	movff	ModemEvtParser@F9111+2,ModemEvtParser@RingString+2
 28118  001D42  C3D0  F0A6         	movff	ModemEvtParser@F9111+3,ModemEvtParser@RingString+3
 28119                           
 28120                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 28121  001D46  EE23  F0C8         	lfsr	2,ModemEvtParser@F9113
 28122  001D4A  EE10  F099         	lfsr	1,ModemEvtParser@ClipString
 28123  001D4E  0E04               	movlw	4
 28124  001D50                     u15151:
 28125  001D50  CFDB FFE3          	movff	plusw2,plusw1
 28126  001D54  06E8               	decf	wreg,f,c
 28127  001D56  E2FC               	bc	u15151
 28128                           
 28129                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 28130  001D58  EE23  F0C3         	lfsr	2,ModemEvtParser@F9115
 28131  001D5C  EE10  F09E         	lfsr	1,ModemEvtParser@SmsString
 28132  001D60  0E04               	movlw	4
 28133  001D62                     u15161:
 28134  001D62  CFDB FFE3          	movff	plusw2,plusw1
 28135  001D66  06E8               	decf	wreg,f,c
 28136  001D68  E2FC               	bc	u15161
 28137                           
 28138                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 28139  001D6A  EE24  F0F6         	lfsr	2,ModemEvtParser@F9117
 28140  001D6E  EE10  F08F         	lfsr	1,ModemEvtParser@CallReadyString
 28141  001D72  0E09               	movlw	9
 28142  001D74                     u15171:
 28143  001D74  CFDB FFE3          	movff	plusw2,plusw1
 28144  001D78  06E8               	decf	wreg,f,c
 28145  001D7A  E2FC               	bc	u15171
 28146                           
 28147                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 28148  001D7C  0E00               	movlw	0
 28149  001D7E  0100               	movlb	0	; () banked
 28150  001D80  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 28151                           
 28152                           ; BSR set to: 0
 28153                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 28154  001D82  0E00               	movlw	0
 28155  001D84  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 28156                           
 28157                           ; BSR set to: 0
 28158                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 28159  001D86  0E3B               	movlw	low _NewMdmEvtParserRequest
 28160  001D88  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28161  001D8A  0E00               	movlw	high _NewMdmEvtParserRequest
 28162  001D8C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28163  001D8E  EC17  F034         	call	_ReceiveEvt	;wreg free
 28164  001D92  0900               	iorlw	0
 28165  001D94  B4D8               	btfsc	status,2,c
 28166  001D96  0012               	return	
 28167                           
 28168                           ;mdm_gsm_gprs.c: 510: {
 28169                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 28170  001D98  0E00               	movlw	0
 28171  001D9A  0100               	movlb	0	; () banked
 28172  001D9C  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 28173  001D9E                     l15770:
 28174                           
 28175                           ; BSR set to: 0
 28176  001D9E  0E03               	movlw	3
 28177  001DA0  65A8               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 28178  001DA2  D074               	goto	l1052
 28179  001DA4  D083               	goto	u15240
 28180  001DA6                     
 28181                           ; BSR set to: 0
 28182                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 28183                           
 28184                           ; BSR set to: 0
 28185  001DA6  0EA3               	movlw	low ModemEvtParser@RingString
 28186  001DA8  6F7D               	movwf	StringCompare@String1& (0+255),b
 28187  001DAA  0E00               	movlw	high ModemEvtParser@RingString
 28188  001DAC  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 28189  001DAE  0E58               	movlw	low _RxBuffer
 28190  001DB0  6F7F               	movwf	StringCompare@String2& (0+255),b
 28191  001DB2  0E0C               	movlw	high _RxBuffer
 28192  001DB4  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 28193  001DB6  0E00               	movlw	0
 28194  001DB8  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 28195  001DBA  0E04               	movlw	4
 28196  001DBC  6F81               	movwf	StringCompare@Len& (0+255),b
 28197  001DBE  EC5B  F02F         	call	_StringCompare	;wreg free
 28198  001DC2  0900               	iorlw	0
 28199  001DC4  B4D8               	btfsc	status,2,c
 28200  001DC6  D06F               	goto	l1055
 28201                           
 28202                           ;mdm_gsm_gprs.c: 518: {
 28203                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 28204  001DC8  0EDD               	movlw	low _RingEvent
 28205  001DCA  0100               	movlb	0	; () banked
 28206  001DCC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28207  001DCE  0E00               	movlw	high _RingEvent
 28208  001DD0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28209  001DD2  EC08  F036         	call	_GenerateEvt	;wreg free
 28210  001DD6  D040               	goto	l15792
 28211  001DD8                     
 28212                           ; BSR set to: 0
 28213                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 28214                           
 28215                           ; BSR set to: 0
 28216  001DD8  0E99               	movlw	low ModemEvtParser@ClipString
 28217  001DDA  6F7D               	movwf	StringCompare@String1& (0+255),b
 28218  001DDC  0E00               	movlw	high ModemEvtParser@ClipString
 28219  001DDE  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 28220  001DE0  0E58               	movlw	low _RxBuffer
 28221  001DE2  6F7F               	movwf	StringCompare@String2& (0+255),b
 28222  001DE4  0E0C               	movlw	high _RxBuffer
 28223  001DE6  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 28224  001DE8  0E00               	movlw	0
 28225  001DEA  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 28226  001DEC  0E05               	movlw	5
 28227  001DEE  6F81               	movwf	StringCompare@Len& (0+255),b
 28228  001DF0  EC5B  F02F         	call	_StringCompare	;wreg free
 28229  001DF4  0900               	iorlw	0
 28230  001DF6  B4D8               	btfsc	status,2,c
 28231  001DF8  D056               	goto	l1055
 28232                           
 28233                           ;mdm_gsm_gprs.c: 529: {
 28234                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 28235  001DFA  0E60               	movlw	low (_RxBuffer+8)
 28236  001DFC  0100               	movlb	0	; () banked
 28237  001DFE  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 28238  001E00  0E0C               	movlw	high (_RxBuffer+8)
 28239  001E02  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28240  001E04  0ECA               	movlw	low _callerNumber
 28241  001E06  6F87               	movwf	StringCopy@DestStr& (0+255),b
 28242  001E08  0E04               	movlw	high _callerNumber
 28243  001E0A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28244  001E0C  0E00               	movlw	0
 28245  001E0E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 28246  001E10  0E0D               	movlw	13
 28247  001E12  6F89               	movwf	StringCopy@Len& (0+255),b
 28248  001E14  ECC8  F02C         	call	_StringCopy	;wreg free
 28249                           
 28250                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 28251  001E18  0EDC               	movlw	low _ClipEvent
 28252  001E1A  0100               	movlb	0	; () banked
 28253  001E1C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28254  001E1E  0E00               	movlw	high _ClipEvent
 28255  001E20  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28256  001E22  EC08  F036         	call	_GenerateEvt	;wreg free
 28257  001E26  D018               	goto	l15792
 28258  001E28                     
 28259                           ; BSR set to: 0
 28260                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 28261                           
 28262                           ; BSR set to: 0
 28263  001E28  0E9E               	movlw	low ModemEvtParser@SmsString
 28264  001E2A  6F7D               	movwf	StringCompare@String1& (0+255),b
 28265  001E2C  0E00               	movlw	high ModemEvtParser@SmsString
 28266  001E2E  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 28267  001E30  0E58               	movlw	low _RxBuffer
 28268  001E32  6F7F               	movwf	StringCompare@String2& (0+255),b
 28269  001E34  0E0C               	movlw	high _RxBuffer
 28270  001E36  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 28271  001E38  0E00               	movlw	0
 28272  001E3A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 28273  001E3C  0E05               	movlw	5
 28274  001E3E  6F81               	movwf	StringCompare@Len& (0+255),b
 28275  001E40  EC5B  F02F         	call	_StringCompare	;wreg free
 28276  001E44  0900               	iorlw	0
 28277  001E46  B4D8               	btfsc	status,2,c
 28278  001E48  D02E               	goto	l1055
 28279                           
 28280                           ;mdm_gsm_gprs.c: 541: {
 28281                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 28282  001E4A  0EDB               	movlw	low _SmsEvent
 28283  001E4C  0100               	movlb	0	; () banked
 28284  001E4E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28285  001E50  0E00               	movlw	high _SmsEvent
 28286  001E52  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28287  001E54  EC08  F036         	call	_GenerateEvt	;wreg free
 28288  001E58                     l15792:
 28289                           
 28290                           ;mdm_gsm_gprs.c: 545: Match = 1;
 28291  001E58  0E01               	movlw	1
 28292  001E5A  0100               	movlb	0	; () banked
 28293  001E5C  D015               	goto	L60
 28294  001E5E                     
 28295                           ; BSR set to: 0
 28296                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 28297                           
 28298                           ; BSR set to: 0
 28299  001E5E  0E8F               	movlw	low ModemEvtParser@CallReadyString
 28300  001E60  6F7D               	movwf	StringCompare@String1& (0+255),b
 28301  001E62  0E00               	movlw	high ModemEvtParser@CallReadyString
 28302  001E64  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 28303  001E66  0E58               	movlw	low _RxBuffer
 28304  001E68  6F7F               	movwf	StringCompare@String2& (0+255),b
 28305  001E6A  0E0C               	movlw	high _RxBuffer
 28306  001E6C  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 28307  001E6E  0E00               	movlw	0
 28308  001E70  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 28309  001E72  0E0A               	movlw	10
 28310  001E74  6F81               	movwf	StringCompare@Len& (0+255),b
 28311  001E76  EC5B  F02F         	call	_StringCompare	;wreg free
 28312  001E7A  0900               	iorlw	0
 28313  001E7C  B4D8               	btfsc	status,2,c
 28314  001E7E  D013               	goto	l1055
 28315                           
 28316                           ;mdm_gsm_gprs.c: 552: {
 28317                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 28318  001E80  0E02               	movlw	2
 28319  001E82  0100               	movlb	0	; () banked
 28320  001E84  6FD1               	movwf	_MdmStatus& (0+255),b
 28321                           
 28322                           ;mdm_gsm_gprs.c: 556: Match = 1;
 28323  001E86  0E01               	movlw	1
 28324  001E88                     L60:
 28325  001E88  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 28326                           
 28327                           ; BSR set to: 0
 28328                           ;mdm_gsm_gprs.c: 562: }
 28329                           
 28330                           ; BSR set to: 0
 28331                           ;mdm_gsm_gprs.c: 561: break;
 28332                           
 28333                           ;mdm_gsm_gprs.c: 560: default:
 28334                           
 28335                           ; BSR set to: 0
 28336                           ;mdm_gsm_gprs.c: 557: }
 28337                           ;mdm_gsm_gprs.c: 558: break;
 28338  001E8A  D00D               	goto	l1055
 28339  001E8C                     l1052:
 28340                           
 28341                           ; BSR set to: 0
 28342                           
 28343                           ; BSR set to: 0
 28344  001E8C  51A8               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 28345                           
 28346                           ; Switch size 1, requested type "space"
 28347                           ; Number of cases is 4, Range of values is 0 to 3
 28348                           ; switch strategies available:
 28349                           ; Name         Instructions Cycles
 28350                           ; simple_byte           13     7 (average)
 28351                           ;	Chosen strategy is simple_byte
 28352  001E8E  0A00               	xorlw	0	; case 0
 28353  001E90  B4D8               	btfsc	status,2,c
 28354  001E92  D789               	goto	l1053
 28355  001E94  0A01               	xorlw	1	; case 1
 28356  001E96  B4D8               	btfsc	status,2,c
 28357  001E98  D7C7               	goto	l1058
 28358  001E9A  0A03               	xorlw	3	; case 2
 28359  001E9C  B4D8               	btfsc	status,2,c
 28360  001E9E  D7DF               	goto	l1060
 28361  001EA0  0A01               	xorlw	1	; case 3
 28362  001EA2  B4D8               	btfsc	status,2,c
 28363  001EA4  D799               	goto	l1056
 28364  001EA6                     l1055:
 28365                           
 28366                           ; BSR set to: 0
 28367  001EA6  0100               	movlb	0	; () banked
 28368  001EA8  2BA8               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 28369  001EAA  D779               	goto	l15770
 28370  001EAC                     u15240:
 28371                           
 28372                           ; BSR set to: 0
 28373                           ;mdm_gsm_gprs.c: 563: }
 28374                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 28375                           
 28376                           ; BSR set to: 0
 28377  001EAC  05A7               	decf	ModemEvtParser@Match& (0+255),w,b
 28378  001EAE  A4D8               	btfss	status,2,c
 28379  001EB0  0012               	return	
 28380                           
 28381                           ; BSR set to: 0
 28382                           ;mdm_gsm_gprs.c: 567: {
 28383                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 28384  001EB2  EC54  F033         	call	_Uart_ClearRxBuffer	;wreg free
 28385  001EB6  0012               	return	
 28386  001EB8                     __end_of_ModemEvtParser:
 28387                           	opt stack 0
 28388                           tosu	equ	0xFFF
 28389                           tosh	equ	0xFFE
 28390                           tosl	equ	0xFFD
 28391                           pclath	equ	0xFFA
 28392                           tblptru	equ	0xFF8
 28393                           tblptrh	equ	0xFF7
 28394                           tblptrl	equ	0xFF6
 28395                           tablat	equ	0xFF5
 28396                           prodh	equ	0xFF4
 28397                           prodl	equ	0xFF3
 28398                           intcon	equ	0xFF2
 28399                           intcon2	equ	0xFF1
 28400                           intcon3	equ	0xFF0
 28401                           indf0	equ	0xFEF
 28402                           postinc0	equ	0xFEE
 28403                           plusw0	equ	0xFEB
 28404                           fsr0h	equ	0xFEA
 28405                           fsr0l	equ	0xFE9
 28406                           wreg	equ	0xFE8
 28407                           indf1	equ	0xFE7
 28408                           postinc1	equ	0xFE6
 28409                           postdec1	equ	0xFE5
 28410                           plusw1	equ	0xFE3
 28411                           fsr1h	equ	0xFE2
 28412                           fsr1l	equ	0xFE1
 28413                           indf2	equ	0xFDF
 28414                           postinc2	equ	0xFDE
 28415                           postdec2	equ	0xFDD
 28416                           plusw2	equ	0xFDB
 28417                           fsr2h	equ	0xFDA
 28418                           fsr2l	equ	0xFD9
 28419                           status	equ	0xFD8
 28420                           
 28421 ;; *************** function _Uart_ClearRxBuffer *****************
 28422 ;; Defined at:
 28423 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28424 ;; Parameters:    Size  Location     Type
 28425 ;;		None
 28426 ;; Auto vars:     Size  Location     Type
 28427 ;;  Index           2   29[BANK0 ] unsigned short 
 28428 ;; Return value:  Size  Location     Type
 28429 ;;                  1    wreg      void 
 28430 ;; Registers used:
 28431 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28432 ;; Tracked objects:
 28433 ;;		On entry : 0/0
 28434 ;;		On exit  : 0/0
 28435 ;;		Unchanged: 0/0
 28436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28438 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28440 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28441 ;;Total ram usage:        2 bytes
 28442 ;; Hardware stack levels used:    1
 28443 ;; Hardware stack levels required when called:   11
 28444 ;; This function calls:
 28445 ;;		Nothing
 28446 ;; This function is called by:
 28447 ;;		_ModemEvtParser
 28448 ;; This function uses a non-reentrant model
 28449 ;;
 28450                           
 28451                           	psect	text135
 28452  0066A8                     __ptext135:
 28453                           	opt stack 0
 28454  0066A8                     _Uart_ClearRxBuffer:
 28455                           	opt stack 15
 28456                           
 28457                           ;uart_drv.c: 567: UINT16 Index = 0;
 28458                           
 28459                           ;incstack = 0
 28460  0066A8  0E00               	movlw	0
 28461  0066AA  0100               	movlb	0	; () banked
 28462  0066AC  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 28463  0066AE  0E00               	movlw	0
 28464  0066B0  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 28465                           
 28466                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 28467  0066B2  0E00               	movlw	0
 28468  0066B4  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 28469  0066B6  0E00               	movlw	0
 28470  0066B8  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 28471  0066BA                     l14846:
 28472                           
 28473                           ; BSR set to: 0
 28474  0066BA  0E90               	movlw	144
 28475  0066BC  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 28476  0066BE  0E01               	movlw	1
 28477  0066C0  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 28478  0066C2  B0D8               	btfsc	status,0,c
 28479  0066C4  0012               	return	
 28480                           
 28481                           ; BSR set to: 0
 28482                           ;uart_drv.c: 571: {
 28483                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 28484                           
 28485                           ; BSR set to: 0
 28486                           
 28487                           ; BSR set to: 0
 28488  0066C6  0E58               	movlw	low _RxBuffer
 28489  0066C8  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 28490  0066CA  6ED9               	movwf	fsr2l,c
 28491  0066CC  0E0C               	movlw	high _RxBuffer
 28492  0066CE  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 28493  0066D0  6EDA               	movwf	fsr2h,c
 28494  0066D2  0E00               	movlw	0
 28495  0066D4  6EDF               	movwf	indf2,c
 28496                           
 28497                           ; BSR set to: 0
 28498  0066D6  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 28499  0066D8  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 28500  0066DA  D7EF               	goto	l14846
 28501  0066DC                     __end_of_Uart_ClearRxBuffer:
 28502                           	opt stack 0
 28503                           tosu	equ	0xFFF
 28504                           tosh	equ	0xFFE
 28505                           tosl	equ	0xFFD
 28506                           pclath	equ	0xFFA
 28507                           tblptru	equ	0xFF8
 28508                           tblptrh	equ	0xFF7
 28509                           tblptrl	equ	0xFF6
 28510                           tablat	equ	0xFF5
 28511                           prodh	equ	0xFF4
 28512                           prodl	equ	0xFF3
 28513                           intcon	equ	0xFF2
 28514                           intcon2	equ	0xFF1
 28515                           intcon3	equ	0xFF0
 28516                           indf0	equ	0xFEF
 28517                           postinc0	equ	0xFEE
 28518                           plusw0	equ	0xFEB
 28519                           fsr0h	equ	0xFEA
 28520                           fsr0l	equ	0xFE9
 28521                           wreg	equ	0xFE8
 28522                           indf1	equ	0xFE7
 28523                           postinc1	equ	0xFE6
 28524                           postdec1	equ	0xFE5
 28525                           plusw1	equ	0xFE3
 28526                           fsr1h	equ	0xFE2
 28527                           fsr1l	equ	0xFE1
 28528                           indf2	equ	0xFDF
 28529                           postinc2	equ	0xFDE
 28530                           postdec2	equ	0xFDD
 28531                           plusw2	equ	0xFDB
 28532                           fsr2h	equ	0xFDA
 28533                           fsr2l	equ	0xFD9
 28534                           status	equ	0xFD8
 28535                           
 28536 ;; *************** function _StringCompare *****************
 28537 ;; Defined at:
 28538 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28539 ;; Parameters:    Size  Location     Type
 28540 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 28541 ;;		 -> receivedNumber(13), smsText(20), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 28542 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 28543 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 28544 ;;		 -> readBuffer(13), parseCommand@resetCmd(4), parseCommand@deleteNumberCmd(4), parseCommand@addNumberCmd(4), 
 28545 ;;		 -> RxBuffer(400), 
 28546 ;;  Len             2   33[BANK0 ] unsigned short 
 28547 ;; Auto vars:     Size  Location     Type
 28548 ;;  Index           2   38[BANK0 ] unsigned short 
 28549 ;;  Result          1   37[BANK0 ] unsigned char 
 28550 ;; Return value:  Size  Location     Type
 28551 ;;                  1    wreg      unsigned char 
 28552 ;; Registers used:
 28553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 28554 ;; Tracked objects:
 28555 ;;		On entry : 0/0
 28556 ;;		On exit  : 0/0
 28557 ;;		Unchanged: 0/0
 28558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28559 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28560 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28561 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28562 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28563 ;;Total ram usage:       11 bytes
 28564 ;; Hardware stack levels used:    1
 28565 ;; Hardware stack levels required when called:   11
 28566 ;; This function calls:
 28567 ;;		Nothing
 28568 ;; This function is called by:
 28569 ;;		_ModemEvtParser
 28570 ;;		_parseCommand
 28571 ;;		_isNumberInMemory
 28572 ;;		_isMasterNumber
 28573 ;; This function uses a non-reentrant model
 28574 ;;
 28575                           
 28576                           	psect	text136
 28577  005EB6                     __ptext136:
 28578                           	opt stack 0
 28579  005EB6                     _StringCompare:
 28580                           	opt stack 14
 28581                           
 28582                           ;sf.c: 77: UINT16 Index = 0;
 28583                           
 28584                           ; BSR set to: 0
 28585                           ;incstack = 0
 28586  005EB6  0E00               	movlw	0
 28587  005EB8  0100               	movlb	0	; () banked
 28588  005EBA  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 28589  005EBC  0E00               	movlw	0
 28590  005EBE  6F86               	movwf	StringCompare@Index& (0+255),b
 28591                           
 28592                           ;sf.c: 78: UINT8 Result = 1;
 28593  005EC0  0E01               	movlw	1
 28594  005EC2  6F85               	movwf	StringCompare@Result& (0+255),b
 28595                           
 28596                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 28597  005EC4  0E00               	movlw	0
 28598  005EC6  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 28599  005EC8  0E00               	movlw	0
 28600  005ECA  6F86               	movwf	StringCompare@Index& (0+255),b
 28601  005ECC  D015               	goto	l2249
 28602  005ECE                     
 28603                           ; BSR set to: 0
 28604                           ;sf.c: 82: {
 28605                           ;sf.c: 83: if (String1[Index] != String2[Index])
 28606                           
 28607                           ; BSR set to: 0
 28608  005ECE  5186               	movf	StringCompare@Index& (0+255),w,b
 28609  005ED0  257F               	addwf	StringCompare@String2& (0+255),w,b
 28610  005ED2  6ED9               	movwf	fsr2l,c
 28611  005ED4  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 28612  005ED6  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 28613  005ED8  6EDA               	movwf	fsr2h,c
 28614  005EDA  5186               	movf	StringCompare@Index& (0+255),w,b
 28615  005EDC  257D               	addwf	StringCompare@String1& (0+255),w,b
 28616  005EDE  6EE1               	movwf	fsr1l,c
 28617  005EE0  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 28618  005EE2  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 28619  005EE4  6EE2               	movwf	fsr1h,c
 28620  005EE6  50DE               	movf	postinc2,w,c
 28621  005EE8  18E6               	xorwf	postinc1,w,c
 28622  005EEA  B4D8               	btfsc	status,2,c
 28623  005EEC  D003               	goto	l2251
 28624                           
 28625                           ; BSR set to: 0
 28626                           ;sf.c: 84: {
 28627                           ;sf.c: 85: Result = 0;
 28628  005EEE  0E00               	movlw	0
 28629  005EF0  6F85               	movwf	StringCompare@Result& (0+255),b
 28630                           
 28631                           ;sf.c: 86: break;
 28632  005EF2  D008               	goto	u12980
 28633  005EF4                     l2251:
 28634                           
 28635                           ; BSR set to: 0
 28636                           
 28637                           ; BSR set to: 0
 28638  005EF4  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 28639  005EF6  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 28640  005EF8                     l2249:
 28641                           
 28642                           ; BSR set to: 0
 28643                           
 28644                           ; BSR set to: 0
 28645  005EF8  5181               	movf	StringCompare@Len& (0+255),w,b
 28646  005EFA  5D86               	subwf	StringCompare@Index& (0+255),w,b
 28647  005EFC  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 28648  005EFE  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 28649  005F00  A0D8               	btfss	status,0,c
 28650  005F02  D7E5               	goto	l2250
 28651  005F04                     u12980:
 28652                           
 28653                           ; BSR set to: 0
 28654                           ;sf.c: 87: }
 28655                           ;sf.c: 88: }
 28656                           ;sf.c: 91: return Result;
 28657                           
 28658                           ; BSR set to: 0
 28659  005F04  5185               	movf	StringCompare@Result& (0+255),w,b
 28660  005F06  0012               	return	
 28661  005F08                     __end_of_StringCompare:
 28662                           	opt stack 0
 28663                           tosu	equ	0xFFF
 28664                           tosh	equ	0xFFE
 28665                           tosl	equ	0xFFD
 28666                           pclath	equ	0xFFA
 28667                           tblptru	equ	0xFF8
 28668                           tblptrh	equ	0xFF7
 28669                           tblptrl	equ	0xFF6
 28670                           tablat	equ	0xFF5
 28671                           prodh	equ	0xFF4
 28672                           prodl	equ	0xFF3
 28673                           intcon	equ	0xFF2
 28674                           intcon2	equ	0xFF1
 28675                           intcon3	equ	0xFF0
 28676                           indf0	equ	0xFEF
 28677                           postinc0	equ	0xFEE
 28678                           plusw0	equ	0xFEB
 28679                           fsr0h	equ	0xFEA
 28680                           fsr0l	equ	0xFE9
 28681                           wreg	equ	0xFE8
 28682                           indf1	equ	0xFE7
 28683                           postinc1	equ	0xFE6
 28684                           postdec1	equ	0xFE5
 28685                           plusw1	equ	0xFE3
 28686                           fsr1h	equ	0xFE2
 28687                           fsr1l	equ	0xFE1
 28688                           indf2	equ	0xFDF
 28689                           postinc2	equ	0xFDE
 28690                           postdec2	equ	0xFDD
 28691                           plusw2	equ	0xFDB
 28692                           fsr2h	equ	0xFDA
 28693                           fsr2l	equ	0xFD9
 28694                           status	equ	0xFD8
 28695                           
 28696 ;; *************** function _GetSmsSm *****************
 28697 ;; Defined at:
 28698 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28699 ;; Parameters:    Size  Location     Type
 28700 ;;		None
 28701 ;; Auto vars:     Size  Location     Type
 28702 ;;		None
 28703 ;; Return value:  Size  Location     Type
 28704 ;;                  1    wreg      void 
 28705 ;; Registers used:
 28706 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28707 ;; Tracked objects:
 28708 ;;		On entry : 0/0
 28709 ;;		On exit  : 0/0
 28710 ;;		Unchanged: 0/0
 28711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28716 ;;Total ram usage:        0 bytes
 28717 ;; Hardware stack levels used:    1
 28718 ;; Hardware stack levels required when called:   13
 28719 ;; This function calls:
 28720 ;;		_ClearBuffer
 28721 ;;		_GenerateEvt
 28722 ;;		_ReceiveEvt
 28723 ;;		_StringCopy
 28724 ;;		_Uart_WriteConstString
 28725 ;; This function is called by:
 28726 ;;		_Mdm_MainTask
 28727 ;; This function uses a non-reentrant model
 28728 ;;
 28729                           
 28730                           	psect	text137
 28731  002C02                     __ptext137:
 28732                           	opt stack 0
 28733  002C02                     _GetSmsSm:
 28734                           	opt stack 14
 28735                           
 28736                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 28737                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 28738                           
 28739                           ; BSR set to: 0
 28740                           ;incstack = 0
 28741  002C02  0E03               	movlw	3
 28742  002C04  0100               	movlb	0	; () banked
 28743  002C06  19D1               	xorwf	_MdmStatus& (0+255),w,b
 28744  002C08  A4D8               	btfss	status,2,c
 28745  002C0A  0012               	return	
 28746  002C0C  D084               	goto	l1070
 28747  002C0E                     
 28748                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 28749                           
 28750                           ; BSR set to: 0
 28751  002C0E  0EDA               	movlw	low _GetSmsText
 28752  002C10  0100               	movlb	0	; () banked
 28753  002C12  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28754  002C14  0E00               	movlw	high _GetSmsText
 28755  002C16  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28756  002C18  EC17  F034         	call	_ReceiveEvt	;wreg free
 28757  002C1C  0900               	iorlw	0
 28758  002C1E  B4D8               	btfsc	status,2,c
 28759  002C20  0012               	return	
 28760                           
 28761                           ;mdm_gsm_gprs.c: 596: {
 28762                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 28763  002C22  0E01               	movlw	1
 28764  002C24  0101               	movlb	1	; () banked
 28765  002C26  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28766                           
 28767                           ; BSR set to: 1
 28768                           ;mdm_gsm_gprs.c: 599: }
 28769                           ;mdm_gsm_gprs.c: 600: break;
 28770  002C28  0012               	return	
 28771  002C2A                     
 28772                           ; BSR set to: 1
 28773                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 28774                           
 28775                           ; BSR set to: 1
 28776  002C2A  0EC2               	movlw	low STR_4
 28777  002C2C  0100               	movlb	0	; () banked
 28778  002C2E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28779  002C30  0EFF               	movlw	high STR_4
 28780  002C32  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28781  002C34  0E01               	movlw	1
 28782  002C36  ECB0  F031         	call	_Uart_WriteConstString
 28783                           
 28784                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 28785  002C3A  0E02               	movlw	2
 28786  002C3C  0101               	movlb	1	; () banked
 28787  002C3E  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28788                           
 28789                           ;mdm_gsm_gprs.c: 607: break;
 28790  002C40  0012               	return	
 28791  002C42                     
 28792                           ; BSR set to: 1
 28793                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 28794                           
 28795                           ; BSR set to: 1
 28796  002C42  0E3C               	movlw	low _NewStringReceived
 28797  002C44  0100               	movlb	0	; () banked
 28798  002C46  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28799  002C48  0E00               	movlw	high _NewStringReceived
 28800  002C4A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28801  002C4C  EC17  F034         	call	_ReceiveEvt	;wreg free
 28802  002C50  0900               	iorlw	0
 28803  002C52  B4D8               	btfsc	status,2,c
 28804  002C54  0012               	return	
 28805                           
 28806                           ;mdm_gsm_gprs.c: 612: {
 28807                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 28808  002C56  CC58  FFE8         	movff	_RxBuffer,wreg
 28809  002C5A  0A2B               	xorlw	43
 28810  002C5C  A4D8               	btfss	status,2,c
 28811  002C5E  0012               	return	
 28812  002C60  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28813  002C64  0A43               	xorlw	67
 28814  002C66  A4D8               	btfss	status,2,c
 28815  002C68  0012               	return	
 28816  002C6A  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 28817  002C6E  0A4D               	xorlw	77
 28818  002C70  A4D8               	btfss	status,2,c
 28819  002C72  0012               	return	
 28820                           
 28821                           ;mdm_gsm_gprs.c: 614: {
 28822                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 28823  002C74  0E00               	movlw	low _Mdm_SmsRx
 28824  002C76  0100               	movlb	0	; () banked
 28825  002C78  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28826  002C7A  0E07               	movlw	high _Mdm_SmsRx
 28827  002C7C  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28828  002C7E  0E00               	movlw	0
 28829  002C80  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28830  002C82  0E50               	movlw	80
 28831  002C84  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28832  002C86  EC39  F033         	call	_ClearBuffer	;wreg free
 28833                           
 28834                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 28835  002C8A  0E58               	movlw	low _RxBuffer
 28836  002C8C  0100               	movlb	0	; () banked
 28837  002C8E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 28838  002C90  0E0C               	movlw	high _RxBuffer
 28839  002C92  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28840  002C94  0E00               	movlw	low _Mdm_SmsRx
 28841  002C96  6F87               	movwf	StringCopy@DestStr& (0+255),b
 28842  002C98  0E07               	movlw	high _Mdm_SmsRx
 28843  002C9A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28844  002C9C  C0C2  F089         	movff	_RxLen,StringCopy@Len
 28845  002CA0  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 28846  002CA4  ECC8  F02C         	call	_StringCopy	;wreg free
 28847                           
 28848                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 28849  002CA8  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 28850                           
 28851                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 28852  002CAC  0E03               	movlw	3
 28853  002CAE  0101               	movlb	1	; () banked
 28854  002CB0  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28855                           
 28856                           ; BSR set to: 1
 28857                           ;mdm_gsm_gprs.c: 622: }
 28858                           ;mdm_gsm_gprs.c: 623: }
 28859                           ;mdm_gsm_gprs.c: 624: break;
 28860                           
 28861                           ; BSR set to: 1
 28862  002CB2  0012               	return	
 28863  002CB4                     
 28864                           ; BSR set to: 1
 28865                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 28866                           
 28867                           ; BSR set to: 1
 28868  002CB4  0E3C               	movlw	low _NewStringReceived
 28869  002CB6  0100               	movlb	0	; () banked
 28870  002CB8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28871  002CBA  0E00               	movlw	high _NewStringReceived
 28872  002CBC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28873  002CBE  EC17  F034         	call	_ReceiveEvt	;wreg free
 28874  002CC2  0900               	iorlw	0
 28875  002CC4  B4D8               	btfsc	status,2,c
 28876  002CC6  0012               	return	
 28877                           
 28878                           ;mdm_gsm_gprs.c: 629: {
 28879                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 28880  002CC8  0E50               	movlw	low (_Mdm_SmsRx+80)
 28881  002CCA  0100               	movlb	0	; () banked
 28882  002CCC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28883  002CCE  0E07               	movlw	high (_Mdm_SmsRx+80)
 28884  002CD0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28885  002CD2  0E00               	movlw	0
 28886  002CD4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28887  002CD6  0E14               	movlw	20
 28888  002CD8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28889  002CDA  EC39  F033         	call	_ClearBuffer	;wreg free
 28890                           
 28891                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 28892  002CDE  0E58               	movlw	low _RxBuffer
 28893  002CE0  0100               	movlb	0	; () banked
 28894  002CE2  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 28895  002CE4  0E0C               	movlw	high _RxBuffer
 28896  002CE6  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28897  002CE8  0E50               	movlw	low (_Mdm_SmsRx+80)
 28898  002CEA  6F87               	movwf	StringCopy@DestStr& (0+255),b
 28899  002CEC  0E07               	movlw	high (_Mdm_SmsRx+80)
 28900  002CEE  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28901  002CF0  C0C2  F089         	movff	_RxLen,StringCopy@Len
 28902  002CF4  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 28903  002CF8  ECC8  F02C         	call	_StringCopy	;wreg free
 28904                           
 28905                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 28906  002CFC  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 28907                           
 28908                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 28909  002D00  0E00               	movlw	0
 28910  002D02  0101               	movlb	1	; () banked
 28911  002D04  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28912                           
 28913                           ; BSR set to: 1
 28914                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 28915  002D06  0ED9               	movlw	low _SmsTxtReady
 28916  002D08  0100               	movlb	0	; () banked
 28917  002D0A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28918  002D0C  0E00               	movlw	high _SmsTxtReady
 28919  002D0E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28920  002D10  EC08  F036         	call	_GenerateEvt	;wreg free
 28921                           
 28922                           ;mdm_gsm_gprs.c: 644: }
 28923                           
 28924                           ;mdm_gsm_gprs.c: 643: break;
 28925                           
 28926                           ;mdm_gsm_gprs.c: 642: default:
 28927                           
 28928                           ;mdm_gsm_gprs.c: 639: }
 28929                           ;mdm_gsm_gprs.c: 640: break;
 28930  002D14  0012               	return	
 28931  002D16                     l1070:
 28932  002D16  0101               	movlb	1	; () banked
 28933  002D18  51EE               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 28934                           
 28935                           ; Switch size 1, requested type "space"
 28936                           ; Number of cases is 4, Range of values is 0 to 3
 28937                           ; switch strategies available:
 28938                           ; Name         Instructions Cycles
 28939                           ; simple_byte           13     7 (average)
 28940                           ;	Chosen strategy is simple_byte
 28941  002D1A  0A00               	xorlw	0	; case 0
 28942  002D1C  B4D8               	btfsc	status,2,c
 28943  002D1E  D777               	goto	l1071
 28944  002D20  0A01               	xorlw	1	; case 1
 28945  002D22  B4D8               	btfsc	status,2,c
 28946  002D24  D782               	goto	l1074
 28947  002D26  0A03               	xorlw	3	; case 2
 28948  002D28  B4D8               	btfsc	status,2,c
 28949  002D2A  D78B               	goto	l1075
 28950  002D2C  0A01               	xorlw	1	; case 3
 28951  002D2E  A4D8               	btfss	status,2,c
 28952                           
 28953                           ; BSR set to: 1
 28954  002D30  0012               	return	
 28955  002D32  D7C0               	goto	l1078
 28956  002D34                     __end_of_GetSmsSm:
 28957                           	opt stack 0
 28958                           tosu	equ	0xFFF
 28959                           tosh	equ	0xFFE
 28960                           tosl	equ	0xFFD
 28961                           pclath	equ	0xFFA
 28962                           tblptru	equ	0xFF8
 28963                           tblptrh	equ	0xFF7
 28964                           tblptrl	equ	0xFF6
 28965                           tablat	equ	0xFF5
 28966                           prodh	equ	0xFF4
 28967                           prodl	equ	0xFF3
 28968                           intcon	equ	0xFF2
 28969                           intcon2	equ	0xFF1
 28970                           intcon3	equ	0xFF0
 28971                           indf0	equ	0xFEF
 28972                           postinc0	equ	0xFEE
 28973                           plusw0	equ	0xFEB
 28974                           fsr0h	equ	0xFEA
 28975                           fsr0l	equ	0xFE9
 28976                           wreg	equ	0xFE8
 28977                           indf1	equ	0xFE7
 28978                           postinc1	equ	0xFE6
 28979                           postdec1	equ	0xFE5
 28980                           plusw1	equ	0xFE3
 28981                           fsr1h	equ	0xFE2
 28982                           fsr1l	equ	0xFE1
 28983                           indf2	equ	0xFDF
 28984                           postinc2	equ	0xFDE
 28985                           postdec2	equ	0xFDD
 28986                           plusw2	equ	0xFDB
 28987                           fsr2h	equ	0xFDA
 28988                           fsr2l	equ	0xFD9
 28989                           status	equ	0xFD8
 28990                           
 28991 ;; *************** function _ConfigureModem *****************
 28992 ;; Defined at:
 28993 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28994 ;; Parameters:    Size  Location     Type
 28995 ;;		None
 28996 ;; Auto vars:     Size  Location     Type
 28997 ;;		None
 28998 ;; Return value:  Size  Location     Type
 28999 ;;                  1    wreg      void 
 29000 ;; Registers used:
 29001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29002 ;; Tracked objects:
 29003 ;;		On entry : 0/0
 29004 ;;		On exit  : 0/0
 29005 ;;		Unchanged: 0/0
 29006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29011 ;;Total ram usage:        0 bytes
 29012 ;; Hardware stack levels used:    1
 29013 ;; Hardware stack levels required when called:   14
 29014 ;; This function calls:
 29015 ;;		_GenerateEvt
 29016 ;;		_UartSetConfigLow
 29017 ;;		_Uart_InitUartModule
 29018 ;;		_Uart_WriteConstString
 29019 ;; This function is called by:
 29020 ;;		_Mdm_MainTask
 29021 ;; This function uses a non-reentrant model
 29022 ;;
 29023                           
 29024                           	psect	text138
 29025  003B8E                     __ptext138:
 29026                           	opt stack 0
 29027  003B8E                     _ConfigureModem:
 29028                           	opt stack 13
 29029                           
 29030                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 29031                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 29032                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 29033                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 29034                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 29035                           
 29036                           ;incstack = 0
 29037  003B8E  D056               	goto	l1027
 29038  003B90                     
 29039                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 29040  003B90  0E02               	movlw	2
 29041  003B92  0100               	movlb	0	; () banked
 29042  003B94  19D1               	xorwf	_MdmStatus& (0+255),w,b
 29043  003B96  A4D8               	btfss	status,2,c
 29044  003B98  0012               	return	
 29045                           
 29046                           ; BSR set to: 0
 29047                           ;mdm_gsm_gprs.c: 431: {
 29048                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 29049  003B9A  0E01               	movlw	1
 29050  003B9C  0101               	movlb	1	; () banked
 29051  003B9E  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 29052                           
 29053                           ; BSR set to: 1
 29054                           ;mdm_gsm_gprs.c: 434: }
 29055                           ;mdm_gsm_gprs.c: 435: break;
 29056  003BA0  0012               	return	
 29057  003BA2                     
 29058                           ; BSR set to: 1
 29059                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 29060                           
 29061                           ; BSR set to: 1
 29062  003BA2  0E75               	movlw	low STR_2
 29063  003BA4  0100               	movlb	0	; () banked
 29064  003BA6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29065  003BA8  0EFF               	movlw	high STR_2
 29066  003BAA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29067  003BAC  0E01               	movlw	1
 29068  003BAE  ECB0  F031         	call	_Uart_WriteConstString
 29069                           
 29070                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 29071  003BB2  ECDD  F02D         	call	_UartSetConfigLow	;wreg free
 29072                           
 29073                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 29074  003BB6  0E24               	movlw	low _UartConfig
 29075  003BB8  0100               	movlb	0	; () banked
 29076  003BBA  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 29077  003BBC  0E03               	movlw	high _UartConfig
 29078  003BBE  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 29079  003BC0  0E01               	movlw	1
 29080  003BC2  EC61  F005         	call	_Uart_InitUartModule
 29081                           
 29082                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 29083  003BC6  0E03               	movlw	3
 29084  003BC8  0103               	movlb	3	; () banked
 29085  003BCA  6F21               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 29086  003BCC  0EE8               	movlw	232
 29087  003BCE  6F20               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 29088                           
 29089                           ; BSR set to: 3
 29090                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 29091  003BD0  0E02               	movlw	2
 29092  003BD2  0101               	movlb	1	; () banked
 29093  003BD4  6FEF               	movwf	ConfigureModem@NextState& (0+255),b
 29094                           
 29095                           ; BSR set to: 1
 29096                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 29097  003BD6  0E04               	movlw	4
 29098  003BD8  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 29099                           
 29100                           ;mdm_gsm_gprs.c: 449: break;
 29101  003BDA  0012               	return	
 29102  003BDC                     
 29103                           ; BSR set to: 1
 29104                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 29105                           
 29106                           ; BSR set to: 1
 29107  003BDC  0EDF               	movlw	low STR_3
 29108  003BDE  0100               	movlb	0	; () banked
 29109  003BE0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29110  003BE2  0EFF               	movlw	high STR_3
 29111  003BE4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29112  003BE6  0E01               	movlw	1
 29113  003BE8  ECB0  F031         	call	_Uart_WriteConstString
 29114                           
 29115                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 29116  003BEC  0E03               	movlw	3
 29117  003BEE  0103               	movlb	3	; () banked
 29118  003BF0  6F21               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 29119  003BF2  0EE8               	movlw	232
 29120  003BF4  6F20               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 29121                           
 29122                           ; BSR set to: 3
 29123                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 29124  003BF6  0E05               	movlw	5
 29125  003BF8  0101               	movlb	1	; () banked
 29126  003BFA  6FEF               	movwf	ConfigureModem@NextState& (0+255),b
 29127                           
 29128                           ; BSR set to: 1
 29129                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 29130  003BFC  0E04               	movlw	4
 29131  003BFE  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 29132                           
 29133                           ;mdm_gsm_gprs.c: 459: break;
 29134  003C00  0012               	return	
 29135  003C02                     
 29136                           ; BSR set to: 1
 29137                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 29138                           
 29139                           ; BSR set to: 1
 29140  003C02  0103               	movlb	3	; () banked
 29141  003C04  4B1E               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 29142  003C06  2B1F               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 29143                           
 29144                           ; BSR set to: 3
 29145                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 29146  003C08  5120               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 29147  003C0A  5D1E               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 29148  003C0C  5121               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 29149  003C0E  591F               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 29150  003C10  A0D8               	btfss	status,0,c
 29151  003C12  0012               	return	
 29152                           
 29153                           ; BSR set to: 3
 29154                           ;mdm_gsm_gprs.c: 466: {
 29155                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 29156  003C14  0E00               	movlw	0
 29157  003C16  6F1F               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 29158  003C18  0E00               	movlw	0
 29159  003C1A  6F1E               	movwf	ConfigureModem@DelayCounter& (0+255),b
 29160                           
 29161                           ; BSR set to: 3
 29162                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 29163  003C1C  C1EF  F1F0         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 29164                           
 29165                           ; BSR set to: 3
 29166                           ;mdm_gsm_gprs.c: 471: }
 29167                           ;mdm_gsm_gprs.c: 472: break;
 29168  003C20  0012               	return	
 29169  003C22                     
 29170                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 29171                           
 29172                           ; BSR set to: 3
 29173  003C22  0E03               	movlw	3
 29174  003C24  0100               	movlb	0	; () banked
 29175  003C26  6FD1               	movwf	_MdmStatus& (0+255),b
 29176                           
 29177                           ; BSR set to: 0
 29178                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 29179  003C28  0EFD               	movlw	low _MdmStsReady
 29180  003C2A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 29181  003C2C  0E01               	movlw	high _MdmStsReady
 29182  003C2E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 29183  003C30  EC08  F036         	call	_GenerateEvt	;wreg free
 29184                           
 29185                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 29186  003C34  0E06               	movlw	6
 29187  003C36  0101               	movlb	1	; () banked
 29188  003C38  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 29189                           
 29190                           ; BSR set to: 1
 29191                           ;mdm_gsm_gprs.c: 488: }
 29192                           
 29193                           ; BSR set to: 1
 29194                           ;mdm_gsm_gprs.c: 487: break;
 29195                           
 29196                           ;mdm_gsm_gprs.c: 486: default:
 29197                           
 29198                           ; BSR set to: 1
 29199                           ;mdm_gsm_gprs.c: 484: break;
 29200                           
 29201                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 29202                           
 29203                           ;mdm_gsm_gprs.c: 481: break;
 29204  003C3A  0012               	return	
 29205  003C3C                     l1027:
 29206                           
 29207                           ; BSR set to: 1
 29208  003C3C  0101               	movlb	1	; () banked
 29209  003C3E  51F0               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 29210                           
 29211                           ; Switch size 1, requested type "space"
 29212                           ; Number of cases is 6, Range of values is 0 to 6
 29213                           ; switch strategies available:
 29214                           ; Name         Instructions Cycles
 29215                           ; simple_byte           19    10 (average)
 29216                           ;	Chosen strategy is simple_byte
 29217  003C40  0A00               	xorlw	0	; case 0
 29218  003C42  B4D8               	btfsc	status,2,c
 29219  003C44  D7A5               	goto	l1028
 29220  003C46  0A01               	xorlw	1	; case 1
 29221  003C48  B4D8               	btfsc	status,2,c
 29222  003C4A  D7AB               	goto	l1031
 29223  003C4C  0A03               	xorlw	3	; case 2
 29224  003C4E  B4D8               	btfsc	status,2,c
 29225  003C50  D7C5               	goto	l1032
 29226  003C52  0A06               	xorlw	6	; case 4
 29227  003C54  B4D8               	btfsc	status,2,c
 29228  003C56  D7D5               	goto	l1033
 29229  003C58  0A01               	xorlw	1	; case 5
 29230  003C5A  B4D8               	btfsc	status,2,c
 29231  003C5C  D7E2               	goto	l1035
 29232  003C5E  0A03               	xorlw	3	; case 6
 29233  003C60  0012               	return	
 29234  003C62                     __end_of_ConfigureModem:
 29235                           	opt stack 0
 29236                           tosu	equ	0xFFF
 29237                           tosh	equ	0xFFE
 29238                           tosl	equ	0xFFD
 29239                           pclath	equ	0xFFA
 29240                           tblptru	equ	0xFF8
 29241                           tblptrh	equ	0xFF7
 29242                           tblptrl	equ	0xFF6
 29243                           tablat	equ	0xFF5
 29244                           prodh	equ	0xFF4
 29245                           prodl	equ	0xFF3
 29246                           intcon	equ	0xFF2
 29247                           intcon2	equ	0xFF1
 29248                           intcon3	equ	0xFF0
 29249                           indf0	equ	0xFEF
 29250                           postinc0	equ	0xFEE
 29251                           plusw0	equ	0xFEB
 29252                           fsr0h	equ	0xFEA
 29253                           fsr0l	equ	0xFE9
 29254                           wreg	equ	0xFE8
 29255                           indf1	equ	0xFE7
 29256                           postinc1	equ	0xFE6
 29257                           postdec1	equ	0xFE5
 29258                           plusw1	equ	0xFE3
 29259                           fsr1h	equ	0xFE2
 29260                           fsr1l	equ	0xFE1
 29261                           indf2	equ	0xFDF
 29262                           postinc2	equ	0xFDE
 29263                           postdec2	equ	0xFDD
 29264                           plusw2	equ	0xFDB
 29265                           fsr2h	equ	0xFDA
 29266                           fsr2l	equ	0xFD9
 29267                           status	equ	0xFD8
 29268                           
 29269 ;; *************** function _Uart_InitUartModule *****************
 29270 ;; Defined at:
 29271 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 29272 ;; Parameters:    Size  Location     Type
 29273 ;;  Module          1    wreg     unsigned char 
 29274 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 29275 ;;		 -> UartConfig(21), 
 29276 ;; Auto vars:     Size  Location     Type
 29277 ;;  Module          1   65[BANK0 ] unsigned char 
 29278 ;; Return value:  Size  Location     Type
 29279 ;;                  1    wreg      void 
 29280 ;; Registers used:
 29281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29282 ;; Tracked objects:
 29283 ;;		On entry : 0/0
 29284 ;;		On exit  : 0/0
 29285 ;;		Unchanged: 0/0
 29286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29287 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29289 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29290 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29291 ;;Total ram usage:        5 bytes
 29292 ;; Hardware stack levels used:    1
 29293 ;; Hardware stack levels required when called:   13
 29294 ;; This function calls:
 29295 ;;		_SetUartBaudRate
 29296 ;; This function is called by:
 29297 ;;		_ConfigureModem
 29298 ;;		_Mdm_MainTask
 29299 ;; This function uses a non-reentrant model
 29300 ;;
 29301                           
 29302                           	psect	text139
 29303  000AC2                     __ptext139:
 29304                           	opt stack 0
 29305  000AC2                     _Uart_InitUartModule:
 29306                           	opt stack 14
 29307                           
 29308                           ;incstack = 0
 29309                           ;Uart_InitUartModule@Module stored from wreg
 29310  000AC2  0100               	movlb	0	; () banked
 29311  000AC4  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 29312                           
 29313                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 29314  000AC6  0100               	movlb	0	; () banked
 29315  000AC8  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 29316  000ACA  A4D8               	btfss	status,2,c
 29317  000ACC  D0BE               	goto	l668
 29318                           
 29319                           ; BSR set to: 0
 29320                           ;uart_drv.c: 291: {
 29321                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 29322  000ACE  9C94               	bcf	3988,6,c	;volatile
 29323                           
 29324                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 29325  000AD0  8E94               	bsf	3988,7,c	;volatile
 29326                           
 29327                           ; BSR set to: 0
 29328                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 29329  000AD2  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 29330  000AD6  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 29331  000ADA  0E01               	movlw	1
 29332  000ADC  EC65  F015         	call	_SetUartBaudRate
 29333                           
 29334                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 29335  000AE0  0E00               	movlw	0
 29336  000AE2  6EAD               	movwf	4013,c	;volatile
 29337                           
 29338                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 29339  000AE4  0100               	movlb	0	; () banked
 29340  000AE6  EE20 F004          	lfsr	2,4
 29341  000AEA  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29342  000AEC  26D9               	addwf	fsr2l,f,c
 29343  000AEE  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29344  000AF0  22DA               	addwfc	fsr2h,f,c
 29345  000AF2  50DF               	movf	indf2,w,c
 29346  000AF4  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29347  000AF6  0E06               	movlw	6
 29348  000AF8  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29349  000AFA                     u13825:
 29350  000AFA  90D8               	bcf	status,0,c
 29351  000AFC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29352  000AFE  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29353  000B00  D7FC               	goto	u13825
 29354  000B02  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29355  000B04  12AD               	iorwf	4013,f,c	;volatile
 29356                           
 29357                           ; BSR set to: 0
 29358                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 29359  000B06  EE20 F006          	lfsr	2,6
 29360  000B0A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29361  000B0C  26D9               	addwf	fsr2l,f,c
 29362  000B0E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29363  000B10  22DA               	addwfc	fsr2h,f,c
 29364  000B12  50DF               	movf	indf2,w,c
 29365  000B14  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29366  000B16  0E05               	movlw	5
 29367  000B18  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29368  000B1A                     u13835:
 29369  000B1A  90D8               	bcf	status,0,c
 29370  000B1C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29371  000B1E  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29372  000B20  D7FC               	goto	u13835
 29373  000B22  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29374  000B24  12AD               	iorwf	4013,f,c	;volatile
 29375                           
 29376                           ; BSR set to: 0
 29377                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 29378  000B26  EE20 F001          	lfsr	2,1
 29379  000B2A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29380  000B2C  26D9               	addwf	fsr2l,f,c
 29381  000B2E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29382  000B30  22DA               	addwfc	fsr2h,f,c
 29383  000B32  50DF               	movf	indf2,w,c
 29384  000B34  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29385  000B36  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29386  000B38  0BF0               	andlw	240
 29387  000B3A  12AD               	iorwf	4013,f,c	;volatile
 29388                           
 29389                           ; BSR set to: 0
 29390                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 29391  000B3C  EE20 F008          	lfsr	2,8
 29392  000B40  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29393  000B42  26D9               	addwf	fsr2l,f,c
 29394  000B44  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29395  000B46  22DA               	addwfc	fsr2h,f,c
 29396  000B48  50DF               	movf	indf2,w,c
 29397  000B4A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29398  000B4C  90D8               	bcf	status,0,c
 29399  000B4E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29400  000B50  90D8               	bcf	status,0,c
 29401  000B52  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29402  000B54  90D8               	bcf	status,0,c
 29403  000B56  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29404  000B58  12AD               	iorwf	4013,f,c	;volatile
 29405                           
 29406                           ; BSR set to: 0
 29407                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 29408  000B5A  EE20 F003          	lfsr	2,3
 29409  000B5E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29410  000B60  26D9               	addwf	fsr2l,f,c
 29411  000B62  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29412  000B64  22DA               	addwfc	fsr2h,f,c
 29413  000B66  50DF               	movf	indf2,w,c
 29414  000B68  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29415  000B6A  90D8               	bcf	status,0,c
 29416  000B6C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29417  000B6E  90D8               	bcf	status,0,c
 29418  000B70  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29419  000B72  12AD               	iorwf	4013,f,c	;volatile
 29420                           
 29421                           ; BSR set to: 0
 29422                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 29423  000B74  0E00               	movlw	0
 29424  000B76  6EAC               	movwf	4012,c	;volatile
 29425                           
 29426                           ; BSR set to: 0
 29427                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 29428  000B78  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 29429  000B7C  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 29430  000B80  50DF               	movf	indf2,w,c
 29431  000B82  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29432  000B84  0E00               	movlw	0
 29433  000B86  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 29434  000B88  0E80               	movlw	128
 29435  000B8A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29436  000B8C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29437  000B8E  12AC               	iorwf	4012,f,c	;volatile
 29438                           
 29439                           ; BSR set to: 0
 29440                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 29441  000B90  EE20 F005          	lfsr	2,5
 29442  000B94  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29443  000B96  26D9               	addwf	fsr2l,f,c
 29444  000B98  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29445  000B9A  22DA               	addwfc	fsr2h,f,c
 29446  000B9C  50DF               	movf	indf2,w,c
 29447  000B9E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29448  000BA0  0E06               	movlw	6
 29449  000BA2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29450  000BA4                     u13845:
 29451  000BA4  90D8               	bcf	status,0,c
 29452  000BA6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29453  000BA8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29454  000BAA  D7FC               	goto	u13845
 29455  000BAC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29456  000BAE  12AC               	iorwf	4012,f,c	;volatile
 29457                           
 29458                           ; BSR set to: 0
 29459                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 29460  000BB0  EE20 F007          	lfsr	2,7
 29461  000BB4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29462  000BB6  26D9               	addwf	fsr2l,f,c
 29463  000BB8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29464  000BBA  22DA               	addwfc	fsr2h,f,c
 29465  000BBC  50DF               	movf	indf2,w,c
 29466  000BBE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29467  000BC0  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29468  000BC2  0BF0               	andlw	240
 29469  000BC4  12AC               	iorwf	4012,f,c	;volatile
 29470                           
 29471                           ; BSR set to: 0
 29472                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 29473  000BC6  0E00               	movlw	0
 29474  000BC8  6E7E               	movwf	3966,c	;volatile
 29475                           
 29476                           ; BSR set to: 0
 29477                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 29478  000BCA  EE20 F002          	lfsr	2,2
 29479  000BCE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29480  000BD0  26D9               	addwf	fsr2l,f,c
 29481  000BD2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29482  000BD4  22DA               	addwfc	fsr2h,f,c
 29483  000BD6  50DF               	movf	indf2,w,c
 29484  000BD8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29485  000BDA  90D8               	bcf	status,0,c
 29486  000BDC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29487  000BDE  90D8               	bcf	status,0,c
 29488  000BE0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29489  000BE2  90D8               	bcf	status,0,c
 29490  000BE4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29491  000BE6  127E               	iorwf	3966,f,c	;volatile
 29492                           
 29493                           ; BSR set to: 0
 29494                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 29495  000BE8  EE20 F00A          	lfsr	2,10
 29496  000BEC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29497  000BEE  26D9               	addwf	fsr2l,f,c
 29498  000BF0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29499  000BF2  22DA               	addwfc	fsr2h,f,c
 29500  000BF4  50DF               	movf	indf2,w,c
 29501  000BF6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29502  000BF8  90D8               	bcf	status,0,c
 29503  000BFA  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29504  000BFC  127E               	iorwf	3966,f,c	;volatile
 29505                           
 29506                           ; BSR set to: 0
 29507                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 29508  000BFE  EE20 F009          	lfsr	2,9
 29509  000C02  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29510  000C04  26D9               	addwf	fsr2l,f,c
 29511  000C06  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29512  000C08  22DA               	addwfc	fsr2h,f,c
 29513  000C0A  50DF               	movf	indf2,w,c
 29514  000C0C  127E               	iorwf	3966,f,c	;volatile
 29515                           
 29516                           ; BSR set to: 0
 29517                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 29518  000C0E  EE20 F00B          	lfsr	2,11
 29519  000C12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29520  000C14  26D9               	addwf	fsr2l,f,c
 29521  000C16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29522  000C18  22DA               	addwfc	fsr2h,f,c
 29523  000C1A  50DF               	movf	indf2,w,c
 29524  000C1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29525  000C1E  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29526  000C20  509D               	movf	3997,w,c	;volatile
 29527  000C22  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29528  000C24  0BEF               	andlw	-17
 29529  000C26  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29530  000C28  6E9D               	movwf	3997,c	;volatile
 29531                           
 29532                           ; BSR set to: 0
 29533                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 29534  000C2A  EE20 F00C          	lfsr	2,12
 29535  000C2E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29536  000C30  26D9               	addwf	fsr2l,f,c
 29537  000C32  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29538  000C34  22DA               	addwfc	fsr2h,f,c
 29539  000C36  50DF               	movf	indf2,w,c
 29540  000C38  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29541  000C3A  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29542  000C3C  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 29543  000C3E  509D               	movf	3997,w,c	;volatile
 29544  000C40  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29545  000C42  0BDF               	andlw	-33
 29546  000C44  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29547  000C46  6E9D               	movwf	3997,c	;volatile
 29548                           
 29549                           ;uart_drv.c: 326: }
 29550  000C48  0012               	return	
 29551  000C4A                     l668:
 29552                           
 29553                           ; BSR set to: 0
 29554                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 29555                           
 29556                           ; BSR set to: 0
 29557  000C4A  0E02               	movlw	2
 29558  000C4C  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 29559  000C4E  A4D8               	btfss	status,2,c
 29560  000C50  0012               	return	
 29561                           
 29562                           ; BSR set to: 0
 29563                           ;uart_drv.c: 328: {
 29564                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 29565  000C52  9094               	bcf	3988,0,c	;volatile
 29566                           
 29567                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 29568  000C54  8294               	bsf	3988,1,c	;volatile
 29569                           
 29570                           ; BSR set to: 0
 29571                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 29572  000C56  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 29573  000C5A  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 29574  000C5E  0E02               	movlw	2
 29575  000C60  EC65  F015         	call	_SetUartBaudRate
 29576                           
 29577                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 29578  000C64  0E00               	movlw	0
 29579  000C66  6EA8               	movwf	4008,c	;volatile
 29580                           
 29581                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 29582  000C68  0100               	movlb	0	; () banked
 29583  000C6A  EE20 F004          	lfsr	2,4
 29584  000C6E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29585  000C70  26D9               	addwf	fsr2l,f,c
 29586  000C72  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29587  000C74  22DA               	addwfc	fsr2h,f,c
 29588  000C76  50DF               	movf	indf2,w,c
 29589  000C78  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29590  000C7A  0E06               	movlw	6
 29591  000C7C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29592  000C7E                     u13865:
 29593  000C7E  90D8               	bcf	status,0,c
 29594  000C80  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29595  000C82  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29596  000C84  D7FC               	goto	u13865
 29597  000C86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29598  000C88  12A8               	iorwf	4008,f,c	;volatile
 29599                           
 29600                           ; BSR set to: 0
 29601                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 29602  000C8A  EE20 F006          	lfsr	2,6
 29603  000C8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29604  000C90  26D9               	addwf	fsr2l,f,c
 29605  000C92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29606  000C94  22DA               	addwfc	fsr2h,f,c
 29607  000C96  50DF               	movf	indf2,w,c
 29608  000C98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29609  000C9A  0E05               	movlw	5
 29610  000C9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29611  000C9E                     u13875:
 29612  000C9E  90D8               	bcf	status,0,c
 29613  000CA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29614  000CA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29615  000CA4  D7FC               	goto	u13875
 29616  000CA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29617  000CA8  12A8               	iorwf	4008,f,c	;volatile
 29618                           
 29619                           ; BSR set to: 0
 29620                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 29621  000CAA  EE20 F001          	lfsr	2,1
 29622  000CAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29623  000CB0  26D9               	addwf	fsr2l,f,c
 29624  000CB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29625  000CB4  22DA               	addwfc	fsr2h,f,c
 29626  000CB6  50DF               	movf	indf2,w,c
 29627  000CB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29628  000CBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29629  000CBC  0BF0               	andlw	240
 29630  000CBE  12A8               	iorwf	4008,f,c	;volatile
 29631                           
 29632                           ; BSR set to: 0
 29633                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 29634  000CC0  EE20 F008          	lfsr	2,8
 29635  000CC4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29636  000CC6  26D9               	addwf	fsr2l,f,c
 29637  000CC8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29638  000CCA  22DA               	addwfc	fsr2h,f,c
 29639  000CCC  50DF               	movf	indf2,w,c
 29640  000CCE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29641  000CD0  90D8               	bcf	status,0,c
 29642  000CD2  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29643  000CD4  90D8               	bcf	status,0,c
 29644  000CD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29645  000CD8  90D8               	bcf	status,0,c
 29646  000CDA  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29647  000CDC  12A8               	iorwf	4008,f,c	;volatile
 29648                           
 29649                           ; BSR set to: 0
 29650                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 29651  000CDE  EE20 F003          	lfsr	2,3
 29652  000CE2  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29653  000CE4  26D9               	addwf	fsr2l,f,c
 29654  000CE6  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29655  000CE8  22DA               	addwfc	fsr2h,f,c
 29656  000CEA  50DF               	movf	indf2,w,c
 29657  000CEC  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29658  000CEE  90D8               	bcf	status,0,c
 29659  000CF0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29660  000CF2  90D8               	bcf	status,0,c
 29661  000CF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29662  000CF6  12A8               	iorwf	4008,f,c	;volatile
 29663                           
 29664                           ; BSR set to: 0
 29665                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 29666  000CF8  0E00               	movlw	0
 29667  000CFA  6E9C               	movwf	3996,c	;volatile
 29668                           
 29669                           ; BSR set to: 0
 29670                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 29671  000CFC  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 29672  000D00  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 29673  000D04  50DF               	movf	indf2,w,c
 29674  000D06  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29675  000D08  0E00               	movlw	0
 29676  000D0A  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 29677  000D0C  0E80               	movlw	128
 29678  000D0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29679  000D10  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29680  000D12  129C               	iorwf	3996,f,c	;volatile
 29681                           
 29682                           ; BSR set to: 0
 29683                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 29684  000D14  EE20 F005          	lfsr	2,5
 29685  000D18  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29686  000D1A  26D9               	addwf	fsr2l,f,c
 29687  000D1C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29688  000D1E  22DA               	addwfc	fsr2h,f,c
 29689  000D20  50DF               	movf	indf2,w,c
 29690  000D22  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29691  000D24  0E06               	movlw	6
 29692  000D26  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29693  000D28                     u13885:
 29694  000D28  90D8               	bcf	status,0,c
 29695  000D2A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29696  000D2C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29697  000D2E  D7FC               	goto	u13885
 29698  000D30  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29699  000D32  129C               	iorwf	3996,f,c	;volatile
 29700                           
 29701                           ; BSR set to: 0
 29702                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 29703  000D34  EE20 F007          	lfsr	2,7
 29704  000D38  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29705  000D3A  26D9               	addwf	fsr2l,f,c
 29706  000D3C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29707  000D3E  22DA               	addwfc	fsr2h,f,c
 29708  000D40  50DF               	movf	indf2,w,c
 29709  000D42  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29710  000D44  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29711  000D46  0BF0               	andlw	240
 29712  000D48  129C               	iorwf	3996,f,c	;volatile
 29713                           
 29714                           ; BSR set to: 0
 29715                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 29716  000D4A  0E00               	movlw	0
 29717  000D4C  6E7C               	movwf	3964,c	;volatile
 29718                           
 29719                           ; BSR set to: 0
 29720                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 29721  000D4E  EE20 F002          	lfsr	2,2
 29722  000D52  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29723  000D54  26D9               	addwf	fsr2l,f,c
 29724  000D56  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29725  000D58  22DA               	addwfc	fsr2h,f,c
 29726  000D5A  50DF               	movf	indf2,w,c
 29727  000D5C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29728  000D5E  90D8               	bcf	status,0,c
 29729  000D60  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29730  000D62  90D8               	bcf	status,0,c
 29731  000D64  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29732  000D66  90D8               	bcf	status,0,c
 29733  000D68  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29734  000D6A  127C               	iorwf	3964,f,c	;volatile
 29735                           
 29736                           ; BSR set to: 0
 29737                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 29738  000D6C  EE20 F00A          	lfsr	2,10
 29739  000D70  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29740  000D72  26D9               	addwf	fsr2l,f,c
 29741  000D74  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29742  000D76  22DA               	addwfc	fsr2h,f,c
 29743  000D78  50DF               	movf	indf2,w,c
 29744  000D7A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29745  000D7C  90D8               	bcf	status,0,c
 29746  000D7E  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29747  000D80  127C               	iorwf	3964,f,c	;volatile
 29748                           
 29749                           ; BSR set to: 0
 29750                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 29751  000D82  EE20 F009          	lfsr	2,9
 29752  000D86  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29753  000D88  26D9               	addwf	fsr2l,f,c
 29754  000D8A  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29755  000D8C  22DA               	addwfc	fsr2h,f,c
 29756  000D8E  50DF               	movf	indf2,w,c
 29757  000D90  127C               	iorwf	3964,f,c	;volatile
 29758                           
 29759                           ; BSR set to: 0
 29760                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 29761  000D92  EE20 F00B          	lfsr	2,11
 29762  000D96  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29763  000D98  26D9               	addwf	fsr2l,f,c
 29764  000D9A  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29765  000D9C  22DA               	addwfc	fsr2h,f,c
 29766  000D9E  50DF               	movf	indf2,w,c
 29767  000DA0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29768  000DA2  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29769  000DA4  50A3               	movf	4003,w,c	;volatile
 29770  000DA6  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29771  000DA8  0BEF               	andlw	-17
 29772  000DAA  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29773  000DAC  6EA3               	movwf	4003,c	;volatile
 29774                           
 29775                           ; BSR set to: 0
 29776                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 29777  000DAE  EE20 F00C          	lfsr	2,12
 29778  000DB2  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29779  000DB4  26D9               	addwf	fsr2l,f,c
 29780  000DB6  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29781  000DB8  22DA               	addwfc	fsr2h,f,c
 29782  000DBA  50DF               	movf	indf2,w,c
 29783  000DBC  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29784  000DBE  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29785  000DC0  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 29786  000DC2  50A3               	movf	4003,w,c	;volatile
 29787  000DC4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29788  000DC6  0BDF               	andlw	-33
 29789  000DC8  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29790  000DCA  6EA3               	movwf	4003,c	;volatile
 29791                           
 29792                           ; BSR set to: 0
 29793  000DCC  0012               	return	
 29794  000DCE                     __end_of_Uart_InitUartModule:
 29795                           	opt stack 0
 29796                           tosu	equ	0xFFF
 29797                           tosh	equ	0xFFE
 29798                           tosl	equ	0xFFD
 29799                           pclath	equ	0xFFA
 29800                           tblptru	equ	0xFF8
 29801                           tblptrh	equ	0xFF7
 29802                           tblptrl	equ	0xFF6
 29803                           tablat	equ	0xFF5
 29804                           prodh	equ	0xFF4
 29805                           prodl	equ	0xFF3
 29806                           intcon	equ	0xFF2
 29807                           intcon2	equ	0xFF1
 29808                           intcon3	equ	0xFF0
 29809                           indf0	equ	0xFEF
 29810                           postinc0	equ	0xFEE
 29811                           plusw0	equ	0xFEB
 29812                           fsr0h	equ	0xFEA
 29813                           fsr0l	equ	0xFE9
 29814                           wreg	equ	0xFE8
 29815                           indf1	equ	0xFE7
 29816                           postinc1	equ	0xFE6
 29817                           postdec1	equ	0xFE5
 29818                           plusw1	equ	0xFE3
 29819                           fsr1h	equ	0xFE2
 29820                           fsr1l	equ	0xFE1
 29821                           indf2	equ	0xFDF
 29822                           postinc2	equ	0xFDE
 29823                           postdec2	equ	0xFDD
 29824                           plusw2	equ	0xFDB
 29825                           fsr2h	equ	0xFDA
 29826                           fsr2l	equ	0xFD9
 29827                           status	equ	0xFD8
 29828                           
 29829 ;; *************** function _SetUartBaudRate *****************
 29830 ;; Defined at:
 29831 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 29832 ;; Parameters:    Size  Location     Type
 29833 ;;  Module          1    wreg     unsigned char 
 29834 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 29835 ;;		 -> UartConfig(21), 
 29836 ;; Auto vars:     Size  Location     Type
 29837 ;;  Module          1   57[BANK0 ] unsigned char 
 29838 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 29839 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 29840 ;; Return value:  Size  Location     Type
 29841 ;;                  1    wreg      void 
 29842 ;; Registers used:
 29843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29844 ;; Tracked objects:
 29845 ;;		On entry : 0/0
 29846 ;;		On exit  : 0/0
 29847 ;;		Unchanged: 0/0
 29848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29849 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29850 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29851 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29852 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29853 ;;Total ram usage:        7 bytes
 29854 ;; Hardware stack levels used:    1
 29855 ;; Hardware stack levels required when called:   12
 29856 ;; This function calls:
 29857 ;;		___lldiv
 29858 ;;		___lmul
 29859 ;; This function is called by:
 29860 ;;		_Uart_InitUartModule
 29861 ;; This function uses a non-reentrant model
 29862 ;;
 29863                           
 29864                           	psect	text140
 29865  002ACA                     __ptext140:
 29866                           	opt stack 0
 29867  002ACA                     _SetUartBaudRate:
 29868                           	opt stack 14
 29869                           
 29870                           ; BSR set to: 0
 29871                           ;incstack = 0
 29872                           ;SetUartBaudRate@Module stored from wreg
 29873  002ACA  0100               	movlb	0	; () banked
 29874  002ACC  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 29875                           
 29876                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 29877  002ACE  0E00               	movlw	0
 29878  002AD0  0100               	movlb	0	; () banked
 29879  002AD2  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 29880  002AD4  0E00               	movlw	0
 29881  002AD6  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 29882                           
 29883                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 29884  002AD8  0E00               	movlw	0
 29885  002ADA  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 29886                           
 29887                           ; BSR set to: 0
 29888                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 29889  002ADC  EE20 F002          	lfsr	2,2
 29890  002AE0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29891  002AE2  26D9               	addwf	fsr2l,f,c
 29892  002AE4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29893  002AE6  22DA               	addwfc	fsr2h,f,c
 29894  002AE8  50DF               	movf	indf2,w,c
 29895  002AEA  A4D8               	btfss	status,2,c
 29896  002AEC  D00B               	goto	l625
 29897                           
 29898                           ; BSR set to: 0
 29899  002AEE  EE20 F002          	lfsr	2,2
 29900  002AF2  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29901  002AF4  26D9               	addwf	fsr2l,f,c
 29902  002AF6  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29903  002AF8  22DA               	addwfc	fsr2h,f,c
 29904  002AFA  50DF               	movf	indf2,w,c
 29905  002AFC  A4D8               	btfss	status,2,c
 29906  002AFE  D002               	goto	l625
 29907                           
 29908                           ; BSR set to: 0
 29909                           ;uart_drv.c: 128: {
 29910                           ;uart_drv.c: 129: DivisionFactor = 64;
 29911  002B00  0E40               	movlw	64
 29912  002B02  D039               	goto	L62
 29913  002B04                     l625:
 29914                           
 29915                           ; BSR set to: 0
 29916                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 29917                           
 29918                           ; BSR set to: 0
 29919  002B04  EE20 F002          	lfsr	2,2
 29920  002B08  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29921  002B0A  26D9               	addwf	fsr2l,f,c
 29922  002B0C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29923  002B0E  22DA               	addwfc	fsr2h,f,c
 29924  002B10  04DE               	decf	postinc2,w,c
 29925  002B12  A4D8               	btfss	status,2,c
 29926  002B14  D009               	goto	l627
 29927                           
 29928                           ; BSR set to: 0
 29929  002B16  EE20 F002          	lfsr	2,2
 29930  002B1A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29931  002B1C  26D9               	addwf	fsr2l,f,c
 29932  002B1E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29933  002B20  22DA               	addwfc	fsr2h,f,c
 29934  002B22  50DF               	movf	indf2,w,c
 29935  002B24  B4D8               	btfsc	status,2,c
 29936  002B26  D012               	goto	u12920
 29937  002B28                     l627:
 29938                           
 29939                           ; BSR set to: 0
 29940                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 29941                           
 29942                           ; BSR set to: 0
 29943  002B28  EE20 F002          	lfsr	2,2
 29944  002B2C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29945  002B2E  26D9               	addwf	fsr2l,f,c
 29946  002B30  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29947  002B32  22DA               	addwfc	fsr2h,f,c
 29948  002B34  50DF               	movf	indf2,w,c
 29949  002B36  A4D8               	btfss	status,2,c
 29950  002B38  D00B               	goto	l629
 29951                           
 29952                           ; BSR set to: 0
 29953  002B3A  EE20 F002          	lfsr	2,2
 29954  002B3E  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29955  002B40  26D9               	addwf	fsr2l,f,c
 29956  002B42  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29957  002B44  22DA               	addwfc	fsr2h,f,c
 29958  002B46  04DE               	decf	postinc2,w,c
 29959  002B48  A4D8               	btfss	status,2,c
 29960  002B4A  D002               	goto	l629
 29961  002B4C                     u12920:
 29962                           
 29963                           ; BSR set to: 0
 29964                           ;uart_drv.c: 136: {
 29965                           ;uart_drv.c: 137: DivisionFactor = 16;
 29966  002B4C  0E10               	movlw	16
 29967  002B4E  D013               	goto	L62
 29968  002B50                     l629:
 29969                           
 29970                           ; BSR set to: 0
 29971                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 29972                           
 29973                           ; BSR set to: 0
 29974  002B50  EE20 F002          	lfsr	2,2
 29975  002B54  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29976  002B56  26D9               	addwf	fsr2l,f,c
 29977  002B58  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29978  002B5A  22DA               	addwfc	fsr2h,f,c
 29979  002B5C  04DE               	decf	postinc2,w,c
 29980  002B5E  A4D8               	btfss	status,2,c
 29981  002B60  D00B               	goto	l631
 29982                           
 29983                           ; BSR set to: 0
 29984  002B62  EE20 F002          	lfsr	2,2
 29985  002B66  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29986  002B68  26D9               	addwf	fsr2l,f,c
 29987  002B6A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29988  002B6C  22DA               	addwfc	fsr2h,f,c
 29989  002B6E  04DE               	decf	postinc2,w,c
 29990  002B70  A4D8               	btfss	status,2,c
 29991  002B72  D002               	goto	l631
 29992                           
 29993                           ; BSR set to: 0
 29994                           ;uart_drv.c: 140: {
 29995                           ;uart_drv.c: 141: DivisionFactor = 4;
 29996  002B74  0E04               	movlw	4
 29997  002B76                     L62:
 29998  002B76  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 29999  002B78                     l631:
 30000                           
 30001                           ; BSR set to: 0
 30002                           ;uart_drv.c: 146: }
 30003                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 30004                           
 30005                           ; BSR set to: 0
 30006                           
 30007                           ; BSR set to: 0
 30008                           
 30009                           ; BSR set to: 0
 30010                           
 30011                           ; BSR set to: 0
 30012                           
 30013                           ;uart_drv.c: 143: else
 30014                           ;uart_drv.c: 144: {
 30015                           
 30016                           ; BSR set to: 0
 30017  002B78  EE20 F00D          	lfsr	2,13
 30018  002B7C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 30019  002B7E  26D9               	addwf	fsr2l,f,c
 30020  002B80  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 30021  002B82  22DA               	addwfc	fsr2h,f,c
 30022  002B84  CFDE F089          	movff	postinc2,___lldiv@dividend
 30023  002B88  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 30024  002B8C  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 30025  002B90  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 30026  002B94  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 30027  002B96  6F7D               	movwf	___lmul@multiplier& (0+255),b
 30028  002B98  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 30029  002B9A  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 30030  002B9C  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 30031  002B9E  EE20 F011          	lfsr	2,17
 30032  002BA2  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 30033  002BA4  26D9               	addwf	fsr2l,f,c
 30034  002BA6  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 30035  002BA8  22DA               	addwfc	fsr2h,f,c
 30036  002BAA  CFDE F081          	movff	postinc2,___lmul@multiplicand
 30037  002BAE  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 30038  002BB2  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 30039  002BB6  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 30040  002BBA  ECB1  F02D         	call	___lmul	;wreg free
 30041  002BBE  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 30042  002BC2  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 30043  002BC6  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 30044  002BCA  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 30045  002BCE  ECEA  F029         	call	___lldiv	;wreg free
 30046  002BD2  0EFF               	movlw	255
 30047  002BD4  0100               	movlb	0	; () banked
 30048  002BD6  2589               	addwf	?___lldiv& (0+255),w,b
 30049  002BD8  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 30050  002BDA  0EFF               	movlw	255
 30051  002BDC  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 30052  002BDE  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 30053                           
 30054                           ; BSR set to: 0
 30055                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 30056  002BE0  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 30057  002BE2  A4D8               	btfss	status,2,c
 30058  002BE4  D005               	goto	l633
 30059                           
 30060                           ; BSR set to: 0
 30061                           ;uart_drv.c: 152: {
 30062                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 30063  002BE6  0E00               	movlw	0
 30064  002BE8  6E7F               	movwf	3967,c	;volatile
 30065                           
 30066                           ; BSR set to: 0
 30067                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 30068  002BEA  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 30069                           
 30070                           ;uart_drv.c: 156: }
 30071  002BEE  0012               	return	
 30072  002BF0                     l633:
 30073                           
 30074                           ; BSR set to: 0
 30075                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 30076                           
 30077                           ; BSR set to: 0
 30078  002BF0  0E02               	movlw	2
 30079  002BF2  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 30080  002BF4  A4D8               	btfss	status,2,c
 30081  002BF6  0012               	return	
 30082                           
 30083                           ; BSR set to: 0
 30084                           ;uart_drv.c: 158: {
 30085                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 30086  002BF8  0E00               	movlw	0
 30087  002BFA  6E7D               	movwf	3965,c	;volatile
 30088                           
 30089                           ; BSR set to: 0
 30090                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 30091  002BFC  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 30092                           
 30093                           ; BSR set to: 0
 30094  002C00  0012               	return	
 30095  002C02                     __end_of_SetUartBaudRate:
 30096                           	opt stack 0
 30097                           tosu	equ	0xFFF
 30098                           tosh	equ	0xFFE
 30099                           tosl	equ	0xFFD
 30100                           pclath	equ	0xFFA
 30101                           tblptru	equ	0xFF8
 30102                           tblptrh	equ	0xFF7
 30103                           tblptrl	equ	0xFF6
 30104                           tablat	equ	0xFF5
 30105                           prodh	equ	0xFF4
 30106                           prodl	equ	0xFF3
 30107                           intcon	equ	0xFF2
 30108                           intcon2	equ	0xFF1
 30109                           intcon3	equ	0xFF0
 30110                           indf0	equ	0xFEF
 30111                           postinc0	equ	0xFEE
 30112                           plusw0	equ	0xFEB
 30113                           fsr0h	equ	0xFEA
 30114                           fsr0l	equ	0xFE9
 30115                           wreg	equ	0xFE8
 30116                           indf1	equ	0xFE7
 30117                           postinc1	equ	0xFE6
 30118                           postdec1	equ	0xFE5
 30119                           plusw1	equ	0xFE3
 30120                           fsr1h	equ	0xFE2
 30121                           fsr1l	equ	0xFE1
 30122                           indf2	equ	0xFDF
 30123                           postinc2	equ	0xFDE
 30124                           postdec2	equ	0xFDD
 30125                           plusw2	equ	0xFDB
 30126                           fsr2h	equ	0xFDA
 30127                           fsr2l	equ	0xFD9
 30128                           status	equ	0xFD8
 30129                           
 30130 ;; *************** function ___lmul *****************
 30131 ;; Defined at:
 30132 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 30133 ;; Parameters:    Size  Location     Type
 30134 ;;  multiplier      4   29[BANK0 ] unsigned long 
 30135 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 30136 ;; Auto vars:     Size  Location     Type
 30137 ;;  product         4   37[BANK0 ] unsigned long 
 30138 ;; Return value:  Size  Location     Type
 30139 ;;                  4   29[BANK0 ] unsigned long 
 30140 ;; Registers used:
 30141 ;;		wreg, status,2, status,0
 30142 ;; Tracked objects:
 30143 ;;		On entry : 0/0
 30144 ;;		On exit  : 0/0
 30145 ;;		Unchanged: 0/0
 30146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30147 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30148 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30150 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30151 ;;Total ram usage:       12 bytes
 30152 ;; Hardware stack levels used:    1
 30153 ;; Hardware stack levels required when called:   11
 30154 ;; This function calls:
 30155 ;;		Nothing
 30156 ;; This function is called by:
 30157 ;;		_Tmr_TmrBPrSet
 30158 ;;		_SetUartBaudRate
 30159 ;;		_strtol
 30160 ;; This function uses a non-reentrant model
 30161 ;;
 30162                           
 30163                           	psect	text141
 30164  005B62                     __ptext141:
 30165                           	opt stack 0
 30166  005B62                     ___lmul:
 30167                           	opt stack 15
 30168                           
 30169                           ; BSR set to: 0
 30170                           ;incstack = 0
 30171  005B62  0E00               	movlw	0
 30172  005B64  0100               	movlb	0	; () banked
 30173  005B66  6F85               	movwf	___lmul@product& (0+255),b
 30174  005B68  0E00               	movlw	0
 30175  005B6A  6F86               	movwf	(___lmul@product+1)& (0+255),b
 30176  005B6C  0E00               	movlw	0
 30177  005B6E  6F87               	movwf	(___lmul@product+2)& (0+255),b
 30178  005B70  0E00               	movlw	0
 30179  005B72  6F88               	movwf	(___lmul@product+3)& (0+255),b
 30180  005B74                     
 30181                           ; BSR set to: 0
 30182                           
 30183                           ; BSR set to: 0
 30184  005B74  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 30185  005B76  D008               	goto	l2998
 30186                           
 30187                           ; BSR set to: 0
 30188  005B78  5181               	movf	___lmul@multiplicand& (0+255),w,b
 30189  005B7A  2785               	addwf	___lmul@product& (0+255),f,b
 30190  005B7C  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 30191  005B7E  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 30192  005B80  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 30193  005B82  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 30194  005B84  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 30195  005B86  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 30196  005B88                     l2998:
 30197                           
 30198                           ; BSR set to: 0
 30199                           
 30200                           ; BSR set to: 0
 30201  005B88  90D8               	bcf	status,0,c
 30202  005B8A  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 30203  005B8C  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 30204  005B8E  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 30205  005B90  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 30206                           
 30207                           ; BSR set to: 0
 30208  005B92  90D8               	bcf	status,0,c
 30209  005B94  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 30210  005B96  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 30211  005B98  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 30212  005B9A  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 30213  005B9C  517D               	movf	___lmul@multiplier& (0+255),w,b
 30214  005B9E  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 30215  005BA0  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 30216  005BA2  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 30217  005BA4  A4D8               	btfss	status,2,c
 30218  005BA6  D7E6               	goto	l2997
 30219                           
 30220                           ; BSR set to: 0
 30221  005BA8  C085  F07D         	movff	___lmul@product,?___lmul
 30222  005BAC  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 30223  005BB0  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 30224  005BB4  C088  F080         	movff	___lmul@product+3,?___lmul+3
 30225                           
 30226                           ; BSR set to: 0
 30227  005BB8  0012               	return		;funcret
 30228  005BBA                     __end_of___lmul:
 30229                           	opt stack 0
 30230                           tosu	equ	0xFFF
 30231                           tosh	equ	0xFFE
 30232                           tosl	equ	0xFFD
 30233                           pclath	equ	0xFFA
 30234                           tblptru	equ	0xFF8
 30235                           tblptrh	equ	0xFF7
 30236                           tblptrl	equ	0xFF6
 30237                           tablat	equ	0xFF5
 30238                           prodh	equ	0xFF4
 30239                           prodl	equ	0xFF3
 30240                           intcon	equ	0xFF2
 30241                           intcon2	equ	0xFF1
 30242                           intcon3	equ	0xFF0
 30243                           indf0	equ	0xFEF
 30244                           postinc0	equ	0xFEE
 30245                           plusw0	equ	0xFEB
 30246                           fsr0h	equ	0xFEA
 30247                           fsr0l	equ	0xFE9
 30248                           wreg	equ	0xFE8
 30249                           indf1	equ	0xFE7
 30250                           postinc1	equ	0xFE6
 30251                           postdec1	equ	0xFE5
 30252                           plusw1	equ	0xFE3
 30253                           fsr1h	equ	0xFE2
 30254                           fsr1l	equ	0xFE1
 30255                           indf2	equ	0xFDF
 30256                           postinc2	equ	0xFDE
 30257                           postdec2	equ	0xFDD
 30258                           plusw2	equ	0xFDB
 30259                           fsr2h	equ	0xFDA
 30260                           fsr2l	equ	0xFD9
 30261                           status	equ	0xFD8
 30262                           
 30263 ;; *************** function _UartSetConfigLow *****************
 30264 ;; Defined at:
 30265 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 30266 ;; Parameters:    Size  Location     Type
 30267 ;;		None
 30268 ;; Auto vars:     Size  Location     Type
 30269 ;;		None
 30270 ;; Return value:  Size  Location     Type
 30271 ;;                  1    wreg      void 
 30272 ;; Registers used:
 30273 ;;		wreg, status,2
 30274 ;; Tracked objects:
 30275 ;;		On entry : 0/0
 30276 ;;		On exit  : 0/0
 30277 ;;		Unchanged: 0/0
 30278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30283 ;;Total ram usage:        0 bytes
 30284 ;; Hardware stack levels used:    1
 30285 ;; Hardware stack levels required when called:   11
 30286 ;; This function calls:
 30287 ;;		Nothing
 30288 ;; This function is called by:
 30289 ;;		_ConfigureModem
 30290 ;; This function uses a non-reentrant model
 30291 ;;
 30292                           
 30293                           	psect	text142
 30294  005BBA                     __ptext142:
 30295                           	opt stack 0
 30296  005BBA                     _UartSetConfigLow:
 30297                           	opt stack 15
 30298                           
 30299                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 30300                           
 30301                           ; BSR set to: 0
 30302                           ;incstack = 0
 30303  005BBA  0E01               	movlw	1
 30304  005BBC  0103               	movlb	3	; () banked
 30305  005BBE  6F24               	movwf	_UartConfig& (0+255),b
 30306                           
 30307                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 30308  005BC0  0E00               	movlw	0
 30309  005BC2  6F25               	movwf	(_UartConfig+1)& (0+255),b
 30310                           
 30311                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 30312  005BC4  0E00               	movlw	0
 30313  005BC6  6F26               	movwf	(_UartConfig+2)& (0+255),b
 30314                           
 30315                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 30316  005BC8  0E00               	movlw	0
 30317  005BCA  6F27               	movwf	(_UartConfig+3)& (0+255),b
 30318                           
 30319                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 30320  005BCC  0E00               	movlw	0
 30321  005BCE  6F28               	movwf	(_UartConfig+4)& (0+255),b
 30322                           
 30323                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 30324  005BD0  0E00               	movlw	0
 30325  005BD2  6F29               	movwf	(_UartConfig+5)& (0+255),b
 30326                           
 30327                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 30328  005BD4  0E01               	movlw	1
 30329  005BD6  6F2A               	movwf	(_UartConfig+6)& (0+255),b
 30330                           
 30331                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 30332  005BD8  0E01               	movlw	1
 30333  005BDA  6F2B               	movwf	(_UartConfig+7)& (0+255),b
 30334                           
 30335                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 30336  005BDC  0E00               	movlw	0
 30337  005BDE  6F2C               	movwf	(_UartConfig+8)& (0+255),b
 30338                           
 30339                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 30340  005BE0  0E00               	movlw	0
 30341  005BE2  6F2D               	movwf	(_UartConfig+9)& (0+255),b
 30342                           
 30343                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 30344  005BE4  0E00               	movlw	0
 30345  005BE6  6F2E               	movwf	(_UartConfig+10)& (0+255),b
 30346                           
 30347                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 30348  005BE8  0E00               	movlw	0
 30349  005BEA  6F2F               	movwf	(_UartConfig+11)& (0+255),b
 30350                           
 30351                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 30352  005BEC  0E01               	movlw	1
 30353  005BEE  6F30               	movwf	(_UartConfig+12)& (0+255),b
 30354                           
 30355                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 30356  005BF0  0E00               	movlw	0
 30357  005BF2  6F31               	movwf	(_UartConfig+13)& (0+255),b
 30358  005BF4  0E6C               	movlw	108
 30359  005BF6  6F32               	movwf	(_UartConfig+14)& (0+255),b
 30360  005BF8  0EDC               	movlw	220
 30361  005BFA  6F33               	movwf	(_UartConfig+15)& (0+255),b
 30362  005BFC  0E02               	movlw	2
 30363  005BFE  6F34               	movwf	(_UartConfig+16)& (0+255),b
 30364                           
 30365                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 30366  005C00  0E80               	movlw	128
 30367  005C02  6F35               	movwf	(_UartConfig+17)& (0+255),b
 30368  005C04  0E25               	movlw	37
 30369  005C06  6F36               	movwf	(_UartConfig+18)& (0+255),b
 30370  005C08  0E00               	movlw	0
 30371  005C0A  6F37               	movwf	(_UartConfig+19)& (0+255),b
 30372  005C0C  0E00               	movlw	0
 30373  005C0E  6F38               	movwf	(_UartConfig+20)& (0+255),b
 30374                           
 30375                           ; BSR set to: 3
 30376  005C10  0012               	return		;funcret
 30377  005C12                     __end_of_UartSetConfigLow:
 30378                           	opt stack 0
 30379                           tosu	equ	0xFFF
 30380                           tosh	equ	0xFFE
 30381                           tosl	equ	0xFFD
 30382                           pclath	equ	0xFFA
 30383                           tblptru	equ	0xFF8
 30384                           tblptrh	equ	0xFF7
 30385                           tblptrl	equ	0xFF6
 30386                           tablat	equ	0xFF5
 30387                           prodh	equ	0xFF4
 30388                           prodl	equ	0xFF3
 30389                           intcon	equ	0xFF2
 30390                           intcon2	equ	0xFF1
 30391                           intcon3	equ	0xFF0
 30392                           indf0	equ	0xFEF
 30393                           postinc0	equ	0xFEE
 30394                           plusw0	equ	0xFEB
 30395                           fsr0h	equ	0xFEA
 30396                           fsr0l	equ	0xFE9
 30397                           wreg	equ	0xFE8
 30398                           indf1	equ	0xFE7
 30399                           postinc1	equ	0xFE6
 30400                           postdec1	equ	0xFE5
 30401                           plusw1	equ	0xFE3
 30402                           fsr1h	equ	0xFE2
 30403                           fsr1l	equ	0xFE1
 30404                           indf2	equ	0xFDF
 30405                           postinc2	equ	0xFDE
 30406                           postdec2	equ	0xFDD
 30407                           plusw2	equ	0xFDB
 30408                           fsr2h	equ	0xFDA
 30409                           fsr2l	equ	0xFD9
 30410                           status	equ	0xFD8
 30411                           
 30412 ;; *************** function _CheckModem *****************
 30413 ;; Defined at:
 30414 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 30415 ;; Parameters:    Size  Location     Type
 30416 ;;		None
 30417 ;; Auto vars:     Size  Location     Type
 30418 ;;		None
 30419 ;; Return value:  Size  Location     Type
 30420 ;;                  1    wreg      void 
 30421 ;; Registers used:
 30422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30423 ;; Tracked objects:
 30424 ;;		On entry : 0/0
 30425 ;;		On exit  : 0/0
 30426 ;;		Unchanged: 0/0
 30427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30432 ;;Total ram usage:        0 bytes
 30433 ;; Hardware stack levels used:    1
 30434 ;; Hardware stack levels required when called:   14
 30435 ;; This function calls:
 30436 ;;		_GenerateEvt
 30437 ;;		_OsTmr_GetTimerStatus
 30438 ;;		_OsTmr_StartTimer
 30439 ;;		_ReceiveEvt
 30440 ;;		_Uart_WriteConstString
 30441 ;; This function is called by:
 30442 ;;		_Mdm_MainTask
 30443 ;; This function uses a non-reentrant model
 30444 ;;
 30445                           
 30446                           	psect	text143
 30447  002026                     __ptext143:
 30448                           	opt stack 0
 30449  002026                     _CheckModem:
 30450                           	opt stack 13
 30451                           
 30452                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 30453                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 30454                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 30455                           
 30456                           ; BSR set to: 3
 30457                           ;incstack = 0
 30458  002026  D09C               	goto	l982
 30459  002028                     
 30460                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 30461  002028  0EF2               	movlw	low CheckModem@Timeout
 30462  00202A  0100               	movlb	0	; () banked
 30463  00202C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30464  00202E  0E03               	movlw	high CheckModem@Timeout
 30465  002030  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30466  002032  0ED0               	movlw	208
 30467  002034  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30468  002036  0E07               	movlw	7
 30469  002038  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30470  00203A  0E00               	movlw	0
 30471  00203C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30472  00203E  0E00               	movlw	0
 30473  002040  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30474  002042  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 30475                           
 30476                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 30477  002046  0E01               	movlw	1
 30478  002048  0101               	movlb	1	; () banked
 30479  00204A  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30480                           
 30481                           ;mdm_gsm_gprs.c: 295: break;
 30482  00204C  0012               	return	
 30483  00204E                     
 30484                           ; BSR set to: 1
 30485                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 30486                           
 30487                           ; BSR set to: 1
 30488  00204E  0EF2               	movlw	low CheckModem@Timeout
 30489  002050  0100               	movlb	0	; () banked
 30490  002052  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30491  002054  0E03               	movlw	high CheckModem@Timeout
 30492  002056  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30493  002058  ECD2  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 30494  00205C  06E8               	decf	wreg,f,c
 30495  00205E  A4D8               	btfss	status,2,c
 30496  002060  0012               	return	
 30497                           
 30498                           ;mdm_gsm_gprs.c: 300: {
 30499                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 30500  002062  0E02               	movlw	2
 30501  002064  0101               	movlb	1	; () banked
 30502  002066  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30503                           
 30504                           ; BSR set to: 1
 30505                           ;mdm_gsm_gprs.c: 303: }
 30506                           ;mdm_gsm_gprs.c: 304: break;
 30507  002068  0012               	return	
 30508  00206A                     
 30509                           ; BSR set to: 1
 30510                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 30511                           
 30512                           ; BSR set to: 1
 30513  00206A  0EE6               	movlw	low STR_1
 30514  00206C  0100               	movlb	0	; () banked
 30515  00206E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30516  002070  0EFF               	movlw	high STR_1
 30517  002072  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30518  002074  0E01               	movlw	1
 30519  002076  ECB0  F031         	call	_Uart_WriteConstString
 30520                           
 30521                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 30522  00207A  0EF2               	movlw	low CheckModem@Timeout
 30523  00207C  0100               	movlb	0	; () banked
 30524  00207E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30525  002080  0E03               	movlw	high CheckModem@Timeout
 30526  002082  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30527  002084  0ED0               	movlw	208
 30528  002086  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30529  002088  0E07               	movlw	7
 30530  00208A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30531  00208C  0E00               	movlw	0
 30532  00208E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30533  002090  0E00               	movlw	0
 30534  002092  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30535  002094  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 30536                           
 30537                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 30538  002098  0E03               	movlw	3
 30539  00209A  0101               	movlb	1	; () banked
 30540  00209C  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30541                           
 30542                           ;mdm_gsm_gprs.c: 313: break;
 30543  00209E  0012               	return	
 30544  0020A0                     
 30545                           ; BSR set to: 1
 30546                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 30547                           
 30548                           ; BSR set to: 1
 30549  0020A0  0E3C               	movlw	low _NewStringReceived
 30550  0020A2  0100               	movlb	0	; () banked
 30551  0020A4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30552  0020A6  0E00               	movlw	high _NewStringReceived
 30553  0020A8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30554  0020AA  EC17  F034         	call	_ReceiveEvt	;wreg free
 30555  0020AE  0900               	iorlw	0
 30556  0020B0  B4D8               	btfsc	status,2,c
 30557  0020B2  D030               	goto	l989
 30558                           
 30559                           ;mdm_gsm_gprs.c: 318: {
 30560                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 30561  0020B4  CC58  FFE8         	movff	_RxBuffer,wreg
 30562  0020B8  0A4F               	xorlw	79
 30563  0020BA  A4D8               	btfss	status,2,c
 30564  0020BC  D005               	goto	u15070
 30565  0020BE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30566  0020C2  0A4B               	xorlw	75
 30567  0020C4  B4D8               	btfsc	status,2,c
 30568  0020C6  D00A               	goto	u15090
 30569  0020C8                     u15070:
 30570  0020C8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30571  0020CC  0A4F               	xorlw	79
 30572  0020CE  A4D8               	btfss	status,2,c
 30573  0020D0  0012               	return	
 30574  0020D2  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 30575  0020D6  0A4B               	xorlw	75
 30576  0020D8  A4D8               	btfss	status,2,c
 30577  0020DA  0012               	return	
 30578  0020DC                     u15090:
 30579                           
 30580                           ;mdm_gsm_gprs.c: 321: {
 30581                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 30582  0020DC  0E02               	movlw	2
 30583  0020DE  0100               	movlb	0	; () banked
 30584  0020E0  6FD1               	movwf	_MdmStatus& (0+255),b
 30585                           
 30586                           ; BSR set to: 0
 30587                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 30588  0020E2  0EDF               	movlw	low _MdmOnOffPulseRequest
 30589  0020E4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 30590  0020E6  0E00               	movlw	high _MdmOnOffPulseRequest
 30591  0020E8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 30592  0020EA  EC08  F036         	call	_GenerateEvt	;wreg free
 30593                           
 30594                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 30595  0020EE  0EF2               	movlw	low CheckModem@Timeout
 30596  0020F0  0100               	movlb	0	; () banked
 30597  0020F2  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30598  0020F4  0E03               	movlw	high CheckModem@Timeout
 30599  0020F6  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30600  0020F8  0EE8               	movlw	232
 30601  0020FA  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30602  0020FC  0E03               	movlw	3
 30603  0020FE  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30604  002100  0E00               	movlw	0
 30605  002102  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30606  002104  0E00               	movlw	0
 30607  002106  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30608  002108  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 30609                           
 30610                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 30611  00210C  0E04               	movlw	4
 30612  00210E  0101               	movlb	1	; () banked
 30613  002110  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30614                           
 30615                           ; BSR set to: 1
 30616                           ;mdm_gsm_gprs.c: 329: }
 30617                           ;mdm_gsm_gprs.c: 330: }
 30618  002112  0012               	return	
 30619  002114                     l989:
 30620                           
 30621                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 30622                           
 30623                           ; BSR set to: 1
 30624  002114  0EF2               	movlw	low CheckModem@Timeout
 30625  002116  0100               	movlb	0	; () banked
 30626  002118  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30627  00211A  0E03               	movlw	high CheckModem@Timeout
 30628  00211C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30629  00211E  ECD2  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 30630  002122  06E8               	decf	wreg,f,c
 30631  002124  A4D8               	btfss	status,2,c
 30632  002126  0012               	return	
 30633                           
 30634                           ;mdm_gsm_gprs.c: 332: {
 30635                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 30636  002128  0E00               	movlw	0
 30637  00212A  0100               	movlb	0	; () banked
 30638  00212C  6FD1               	movwf	_MdmStatus& (0+255),b
 30639                           
 30640                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 30641  00212E  0E01               	movlw	1
 30642  002130  6E2B               	movwf	_ComChecCompleted,c
 30643                           
 30644                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 30645  002132  0E05               	movlw	5
 30646  002134  0101               	movlb	1	; () banked
 30647  002136  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30648                           
 30649                           ; BSR set to: 1
 30650                           ;mdm_gsm_gprs.c: 343: }
 30651                           ;mdm_gsm_gprs.c: 344: break;
 30652                           
 30653                           ; BSR set to: 1
 30654                           
 30655                           ;mdm_gsm_gprs.c: 340: else
 30656                           ;mdm_gsm_gprs.c: 341: {
 30657                           
 30658                           ; BSR set to: 1
 30659                           
 30660                           ;mdm_gsm_gprs.c: 339: }
 30661  002138  0012               	return	
 30662  00213A                     
 30663                           ; BSR set to: 1
 30664                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 30665                           
 30666                           ; BSR set to: 1
 30667  00213A  0EF2               	movlw	low CheckModem@Timeout
 30668  00213C  0100               	movlb	0	; () banked
 30669  00213E  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30670  002140  0E03               	movlw	high CheckModem@Timeout
 30671  002142  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30672  002144  ECD2  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 30673  002148  06E8               	decf	wreg,f,c
 30674  00214A  A4D8               	btfss	status,2,c
 30675  00214C  0012               	return	
 30676                           
 30677                           ;mdm_gsm_gprs.c: 349: {
 30678                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 30679  00214E  0E00               	movlw	0
 30680  002150  0100               	movlb	0	; () banked
 30681  002152  6FD1               	movwf	_MdmStatus& (0+255),b
 30682                           
 30683                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 30684  002154  0E01               	movlw	1
 30685  002156  6E2B               	movwf	_ComChecCompleted,c
 30686                           
 30687                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 30688  002158  0E05               	movlw	5
 30689  00215A  0101               	movlb	1	; () banked
 30690  00215C  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30691                           
 30692                           ; BSR set to: 1
 30693                           ;mdm_gsm_gprs.c: 365: }
 30694                           
 30695                           ; BSR set to: 1
 30696                           ;mdm_gsm_gprs.c: 364: break;
 30697                           
 30698                           ;mdm_gsm_gprs.c: 363: default:
 30699                           
 30700                           ; BSR set to: 1
 30701                           ;mdm_gsm_gprs.c: 361: break;
 30702                           
 30703                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 30704                           
 30705                           ; BSR set to: 1
 30706                           ;mdm_gsm_gprs.c: 356: }
 30707                           ;mdm_gsm_gprs.c: 357: break;
 30708  00215E  0012               	return	
 30709  002160                     l982:
 30710                           
 30711                           ; BSR set to: 1
 30712  002160  0101               	movlb	1	; () banked
 30713  002162  51F2               	movf	CheckModem@CheckMdmSts& (0+255),w,b
 30714                           
 30715                           ; Switch size 1, requested type "space"
 30716                           ; Number of cases is 6, Range of values is 0 to 5
 30717                           ; switch strategies available:
 30718                           ; Name         Instructions Cycles
 30719                           ; simple_byte           19    10 (average)
 30720                           ;	Chosen strategy is simple_byte
 30721  002164  0A00               	xorlw	0	; case 0
 30722  002166  B4D8               	btfsc	status,2,c
 30723  002168  D75F               	goto	l983
 30724  00216A  0A01               	xorlw	1	; case 1
 30725  00216C  B4D8               	btfsc	status,2,c
 30726  00216E  D76F               	goto	l985
 30727  002170  0A03               	xorlw	3	; case 2
 30728  002172  B4D8               	btfsc	status,2,c
 30729  002174  D77A               	goto	l987
 30730  002176  0A01               	xorlw	1	; case 3
 30731  002178  B4D8               	btfsc	status,2,c
 30732  00217A  D792               	goto	l988
 30733  00217C  0A07               	xorlw	7	; case 4
 30734  00217E  B4D8               	btfsc	status,2,c
 30735  002180  D7DC               	goto	l998
 30736  002182  0A01               	xorlw	1	; case 5
 30737  002184  0012               	return	
 30738  002186                     __end_of_CheckModem:
 30739                           	opt stack 0
 30740                           tosu	equ	0xFFF
 30741                           tosh	equ	0xFFE
 30742                           tosl	equ	0xFFD
 30743                           pclath	equ	0xFFA
 30744                           tblptru	equ	0xFF8
 30745                           tblptrh	equ	0xFF7
 30746                           tblptrl	equ	0xFF6
 30747                           tablat	equ	0xFF5
 30748                           prodh	equ	0xFF4
 30749                           prodl	equ	0xFF3
 30750                           intcon	equ	0xFF2
 30751                           intcon2	equ	0xFF1
 30752                           intcon3	equ	0xFF0
 30753                           indf0	equ	0xFEF
 30754                           postinc0	equ	0xFEE
 30755                           plusw0	equ	0xFEB
 30756                           fsr0h	equ	0xFEA
 30757                           fsr0l	equ	0xFE9
 30758                           wreg	equ	0xFE8
 30759                           indf1	equ	0xFE7
 30760                           postinc1	equ	0xFE6
 30761                           postdec1	equ	0xFE5
 30762                           plusw1	equ	0xFE3
 30763                           fsr1h	equ	0xFE2
 30764                           fsr1l	equ	0xFE1
 30765                           indf2	equ	0xFDF
 30766                           postinc2	equ	0xFDE
 30767                           postdec2	equ	0xFDD
 30768                           plusw2	equ	0xFDB
 30769                           fsr2h	equ	0xFDA
 30770                           fsr2l	equ	0xFD9
 30771                           status	equ	0xFD8
 30772                           
 30773 ;; *************** function _MdmCntSm *****************
 30774 ;; Defined at:
 30775 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 30776 ;; Parameters:    Size  Location     Type
 30777 ;;		None
 30778 ;; Auto vars:     Size  Location     Type
 30779 ;;		None
 30780 ;; Return value:  Size  Location     Type
 30781 ;;                  1    wreg      void 
 30782 ;; Registers used:
 30783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30784 ;; Tracked objects:
 30785 ;;		On entry : 0/0
 30786 ;;		On exit  : 0/0
 30787 ;;		Unchanged: 0/0
 30788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30793 ;;Total ram usage:        0 bytes
 30794 ;; Hardware stack levels used:    1
 30795 ;; Hardware stack levels required when called:   12
 30796 ;; This function calls:
 30797 ;;		_InitModemInterface
 30798 ;;		_ReceiveEvt
 30799 ;; This function is called by:
 30800 ;;		_Mdm_DrvMainFn
 30801 ;; This function uses a non-reentrant model
 30802 ;;
 30803                           
 30804                           	psect	text144
 30805  004932                     __ptext144:
 30806                           	opt stack 0
 30807  004932                     _MdmCntSm:
 30808                           	opt stack 15
 30809                           
 30810                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 30811                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 30812                           ;mdm_drv.c: 204: switch (MdmCntState)
 30813                           
 30814                           ;incstack = 0
 30815  004932  D045               	goto	l315
 30816  004934                     
 30817                           ;mdm_drv.c: 208: InitModemInterface();
 30818  004934  ECCC  F036         	call	_InitModemInterface	;wreg free
 30819                           
 30820                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 30821  004938  0E01               	movlw	1
 30822  00493A  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30823                           
 30824                           ;mdm_drv.c: 211: break;
 30825  00493C  0012               	return	
 30826  00493E                     
 30827                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 30828  00493E  0EDF               	movlw	low _MdmOnOffPulseRequest
 30829  004940  0100               	movlb	0	; () banked
 30830  004942  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30831  004944  0E00               	movlw	high _MdmOnOffPulseRequest
 30832  004946  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30833  004948  EC17  F034         	call	_ReceiveEvt	;wreg free
 30834  00494C  0900               	iorlw	0
 30835  00494E  B4D8               	btfsc	status,2,c
 30836  004950  D009               	goto	l319
 30837                           
 30838                           ;mdm_drv.c: 216: {
 30839                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 30840  004952  0E02               	movlw	2
 30841  004954  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30842                           
 30843                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 30844  004956  8284               	bsf	3972,1,c	;volatile
 30845                           
 30846                           ;mdm_drv.c: 222: Counter = 0;
 30847  004958  0E00               	movlw	0
 30848  00495A  0102               	movlb	2	; () banked
 30849  00495C  6FDA               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 30850  00495E  0E00               	movlw	0
 30851  004960  6FD9               	movwf	MdmCntSm@Counter& (0+255),b
 30852                           
 30853                           ;mdm_drv.c: 223: }
 30854  004962  0012               	return	
 30855  004964                     l319:
 30856                           
 30857                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 30858                           
 30859                           ; BSR set to: 2
 30860  004964  0E3D               	movlw	low _MdmResetRequest
 30861  004966  0100               	movlb	0	; () banked
 30862  004968  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30863  00496A  0E00               	movlw	high _MdmResetRequest
 30864  00496C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30865  00496E  EC17  F034         	call	_ReceiveEvt	;wreg free
 30866  004972  0900               	iorlw	0
 30867  004974  B4D8               	btfsc	status,2,c
 30868  004976  0012               	return	
 30869                           
 30870                           ;mdm_drv.c: 225: {
 30871                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 30872  004978  0E03               	movlw	3
 30873  00497A  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30874                           
 30875                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 30876  00497C  8084               	bsf	3972,0,c	;volatile
 30877                           
 30878                           ;mdm_drv.c: 231: Counter = 0;
 30879  00497E  0E00               	movlw	0
 30880  004980  0102               	movlb	2	; () banked
 30881  004982  6FDA               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 30882  004984  0E00               	movlw	0
 30883  004986  6FD9               	movwf	MdmCntSm@Counter& (0+255),b
 30884                           
 30885                           ; BSR set to: 2
 30886                           ;mdm_drv.c: 236: }
 30887                           ;mdm_drv.c: 237: break;
 30888                           
 30889                           ; BSR set to: 2
 30890                           
 30891                           ;mdm_drv.c: 233: else
 30892                           ;mdm_drv.c: 234: {
 30893                           
 30894                           ; BSR set to: 2
 30895                           
 30896                           ;mdm_drv.c: 232: }
 30897  004988  0012               	return	
 30898  00498A                     
 30899                           ;mdm_drv.c: 241: Counter++;
 30900                           
 30901                           ; BSR set to: 2
 30902  00498A  0102               	movlb	2	; () banked
 30903  00498C  4BD9               	infsnz	MdmCntSm@Counter& (0+255),f,b
 30904  00498E  2BDA               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 30905                           
 30906                           ; BSR set to: 2
 30907                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 30908  004990  51DA               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 30909  004992  E104               	bnz	u14990
 30910  004994  0E96               	movlw	150
 30911  004996  5DD9               	subwf	MdmCntSm@Counter& (0+255),w,b
 30912  004998  A0D8               	btfss	status,0,c
 30913  00499A  0012               	return	
 30914  00499C                     u14990:
 30915                           
 30916                           ; BSR set to: 2
 30917                           ;mdm_drv.c: 244: {
 30918                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 30919  00499C  9284               	bcf	3972,1,c	;volatile
 30920                           
 30921                           ; BSR set to: 2
 30922                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 30923  00499E  0E01               	movlw	1
 30924  0049A0  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30925                           
 30926                           ; BSR set to: 2
 30927                           ;mdm_drv.c: 249: }
 30928                           ;mdm_drv.c: 250: break;
 30929  0049A2  0012               	return	
 30930  0049A4                     
 30931                           ;mdm_drv.c: 254: Counter++;
 30932                           
 30933                           ; BSR set to: 2
 30934  0049A4  0102               	movlb	2	; () banked
 30935  0049A6  4BD9               	infsnz	MdmCntSm@Counter& (0+255),f,b
 30936  0049A8  2BDA               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 30937                           
 30938                           ; BSR set to: 2
 30939                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 30940  0049AA  51DA               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 30941  0049AC  E104               	bnz	u15000
 30942  0049AE  0E0A               	movlw	10
 30943  0049B0  5DD9               	subwf	MdmCntSm@Counter& (0+255),w,b
 30944  0049B2  A0D8               	btfss	status,0,c
 30945  0049B4  0012               	return	
 30946  0049B6                     u15000:
 30947                           
 30948                           ; BSR set to: 2
 30949                           ;mdm_drv.c: 257: {
 30950                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 30951  0049B6  9084               	bcf	3972,0,c	;volatile
 30952                           
 30953                           ; BSR set to: 2
 30954                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 30955  0049B8  0E01               	movlw	1
 30956  0049BA  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30957                           
 30958                           ; BSR set to: 2
 30959                           ;mdm_drv.c: 267: }
 30960                           
 30961                           ; BSR set to: 2
 30962                           ;mdm_drv.c: 266: break;
 30963                           
 30964                           ;mdm_drv.c: 265: default:
 30965                           
 30966                           ; BSR set to: 2
 30967                           ;mdm_drv.c: 262: }
 30968                           ;mdm_drv.c: 263: break;
 30969  0049BC  0012               	return	
 30970  0049BE                     l315:
 30971                           
 30972                           ; BSR set to: 2
 30973  0049BE  502E               	movf	MdmCntSm@MdmCntState,w,c
 30974                           
 30975                           ; Switch size 1, requested type "space"
 30976                           ; Number of cases is 4, Range of values is 0 to 3
 30977                           ; switch strategies available:
 30978                           ; Name         Instructions Cycles
 30979                           ; simple_byte           13     7 (average)
 30980                           ;	Chosen strategy is simple_byte
 30981  0049C0  0A00               	xorlw	0	; case 0
 30982  0049C2  B4D8               	btfsc	status,2,c
 30983  0049C4  D7B7               	goto	l316
 30984  0049C6  0A01               	xorlw	1	; case 1
 30985  0049C8  B4D8               	btfsc	status,2,c
 30986  0049CA  D7B9               	goto	l318
 30987  0049CC  0A03               	xorlw	3	; case 2
 30988  0049CE  B4D8               	btfsc	status,2,c
 30989  0049D0  D7DC               	goto	l323
 30990  0049D2  0A01               	xorlw	1	; case 3
 30991  0049D4  A4D8               	btfss	status,2,c
 30992  0049D6  0012               	return	
 30993  0049D8  D7E5               	goto	l325
 30994  0049DA                     __end_of_MdmCntSm:
 30995                           	opt stack 0
 30996                           tosu	equ	0xFFF
 30997                           tosh	equ	0xFFE
 30998                           tosl	equ	0xFFD
 30999                           pclath	equ	0xFFA
 31000                           tblptru	equ	0xFF8
 31001                           tblptrh	equ	0xFF7
 31002                           tblptrl	equ	0xFF6
 31003                           tablat	equ	0xFF5
 31004                           prodh	equ	0xFF4
 31005                           prodl	equ	0xFF3
 31006                           intcon	equ	0xFF2
 31007                           intcon2	equ	0xFF1
 31008                           intcon3	equ	0xFF0
 31009                           indf0	equ	0xFEF
 31010                           postinc0	equ	0xFEE
 31011                           plusw0	equ	0xFEB
 31012                           fsr0h	equ	0xFEA
 31013                           fsr0l	equ	0xFE9
 31014                           wreg	equ	0xFE8
 31015                           indf1	equ	0xFE7
 31016                           postinc1	equ	0xFE6
 31017                           postdec1	equ	0xFE5
 31018                           plusw1	equ	0xFE3
 31019                           fsr1h	equ	0xFE2
 31020                           fsr1l	equ	0xFE1
 31021                           indf2	equ	0xFDF
 31022                           postinc2	equ	0xFDE
 31023                           postdec2	equ	0xFDD
 31024                           plusw2	equ	0xFDB
 31025                           fsr2h	equ	0xFDA
 31026                           fsr2l	equ	0xFD9
 31027                           status	equ	0xFD8
 31028                           
 31029 ;; *************** function _InitModemInterface *****************
 31030 ;; Defined at:
 31031 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 31032 ;; Parameters:    Size  Location     Type
 31033 ;;		None
 31034 ;; Auto vars:     Size  Location     Type
 31035 ;;		None
 31036 ;; Return value:  Size  Location     Type
 31037 ;;                  1    wreg      void 
 31038 ;; Registers used:
 31039 ;;		None
 31040 ;; Tracked objects:
 31041 ;;		On entry : 0/0
 31042 ;;		On exit  : 0/0
 31043 ;;		Unchanged: 0/0
 31044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31049 ;;Total ram usage:        0 bytes
 31050 ;; Hardware stack levels used:    1
 31051 ;; Hardware stack levels required when called:   11
 31052 ;; This function calls:
 31053 ;;		Nothing
 31054 ;; This function is called by:
 31055 ;;		_MdmCntSm
 31056 ;; This function uses a non-reentrant model
 31057 ;;
 31058                           
 31059                           	psect	text145
 31060  006D98                     __ptext145:
 31061                           	opt stack 0
 31062  006D98                     _InitModemInterface:
 31063                           	opt stack 15
 31064                           
 31065                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 31066                           
 31067                           ;incstack = 0
 31068  006D98  9096               	bcf	3990,0,c	;volatile
 31069                           
 31070                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 31071  006D9A  9296               	bcf	3990,1,c	;volatile
 31072                           
 31073                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 31074  006D9C  8496               	bsf	3990,2,c	;volatile
 31075  006D9E  0012               	return		;funcret
 31076  006DA0                     __end_of_InitModemInterface:
 31077                           	opt stack 0
 31078                           tosu	equ	0xFFF
 31079                           tosh	equ	0xFFE
 31080                           tosl	equ	0xFFD
 31081                           pclath	equ	0xFFA
 31082                           tblptru	equ	0xFF8
 31083                           tblptrh	equ	0xFF7
 31084                           tblptrl	equ	0xFF6
 31085                           tablat	equ	0xFF5
 31086                           prodh	equ	0xFF4
 31087                           prodl	equ	0xFF3
 31088                           intcon	equ	0xFF2
 31089                           intcon2	equ	0xFF1
 31090                           intcon3	equ	0xFF0
 31091                           indf0	equ	0xFEF
 31092                           postinc0	equ	0xFEE
 31093                           plusw0	equ	0xFEB
 31094                           fsr0h	equ	0xFEA
 31095                           fsr0l	equ	0xFE9
 31096                           wreg	equ	0xFE8
 31097                           indf1	equ	0xFE7
 31098                           postinc1	equ	0xFE6
 31099                           postdec1	equ	0xFE5
 31100                           plusw1	equ	0xFE3
 31101                           fsr1h	equ	0xFE2
 31102                           fsr1l	equ	0xFE1
 31103                           indf2	equ	0xFDF
 31104                           postinc2	equ	0xFDE
 31105                           postdec2	equ	0xFDD
 31106                           plusw2	equ	0xFDB
 31107                           fsr2h	equ	0xFDA
 31108                           fsr2l	equ	0xFD9
 31109                           status	equ	0xFD8
 31110                           
 31111 ;; *************** function _InitGprsNetwork *****************
 31112 ;; Defined at:
 31113 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 31114 ;; Parameters:    Size  Location     Type
 31115 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 31116 ;;		 -> NULL(0), 
 31117 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 31118 ;; Auto vars:     Size  Location     Type
 31119 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 31120 ;;  Index           1   50[BANK1 ] unsigned char 
 31121 ;; Return value:  Size  Location     Type
 31122 ;;                  1    wreg      enum E8926
 31123 ;; Registers used:
 31124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31125 ;; Tracked objects:
 31126 ;;		On entry : 0/0
 31127 ;;		On exit  : 0/0
 31128 ;;		Unchanged: 0/0
 31129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31130 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31131 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31132 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31133 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31134 ;;Total ram usage:       56 bytes
 31135 ;; Hardware stack levels used:    1
 31136 ;; Hardware stack levels required when called:   14
 31137 ;; This function calls:
 31138 ;;		_ClearBuffer
 31139 ;;		_OsTmr_GetTimerStatus
 31140 ;;		_OsTmr_StartTimer
 31141 ;;		_ReceiveEvt
 31142 ;;		_StringCopy
 31143 ;;		_Uart_WriteConstString
 31144 ;;		_Uart_WriteString
 31145 ;; This function is called by:
 31146 ;;		_MdmHttp_MainTask
 31147 ;; This function uses a non-reentrant model
 31148 ;;
 31149                           
 31150                           	psect	text146
 31151  000DCE                     __ptext146:
 31152                           	opt stack 0
 31153  000DCE                     _InitGprsNetwork:
 31154                           	opt stack 13
 31155                           
 31156                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 31157                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 31158                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 31159                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 31160                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 31161                           
 31162                           ;incstack = 0
 31163  000DCE  0E00               	movlw	0
 31164  000DD0  0101               	movlb	1	; () banked
 31165  000DD2  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 31166                           
 31167                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 31168  000DD4  D154               	goto	l1219
 31169  000DD6                     
 31170                           ; BSR set to: 1
 31171                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 31172                           
 31173                           ; BSR set to: 1
 31174  000DD6  0ED8               	movlw	low _InitNetwork
 31175  000DD8  0100               	movlb	0	; () banked
 31176  000DDA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31177  000DDC  0E00               	movlw	high _InitNetwork
 31178  000DDE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31179  000DE0  EC17  F034         	call	_ReceiveEvt	;wreg free
 31180  000DE4  0900               	iorlw	0
 31181  000DE6  B4D8               	btfsc	status,2,c
 31182  000DE8  D166               	goto	l1222
 31183                           
 31184                           ;mdm_gsm_gprs_http.c: 137: {
 31185                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 31186  000DEA  0E01               	movlw	1
 31187  000DEC  D141               	goto	L103
 31188  000DEE                     
 31189                           ; BSR set to: 1
 31190                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 31191                           
 31192                           ; BSR set to: 1
 31193  000DEE  0E89               	movlw	low STR_8
 31194  000DF0  0100               	movlb	0	; () banked
 31195  000DF2  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31196  000DF4  0EFE               	movlw	high STR_8
 31197  000DF6  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31198  000DF8  0E01               	movlw	1
 31199  000DFA  ECB0  F031         	call	_Uart_WriteConstString
 31200                           
 31201                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 31202  000DFE  0E07               	movlw	7
 31203  000E00  0101               	movlb	1	; () banked
 31204  000E02  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31205                           
 31206                           ; BSR set to: 1
 31207                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 31208  000E04  0E02               	movlw	2
 31209  000E06  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 31210                           
 31211                           ; BSR set to: 1
 31212                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 31213  000E08  0EF3               	movlw	low _ConnTimeout
 31214  000E0A  0100               	movlb	0	; () banked
 31215  000E0C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31216  000E0E  0E02               	movlw	high _ConnTimeout
 31217  000E10  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31218  000E12  0E20               	movlw	32
 31219  000E14  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31220  000E16  0E4E               	movlw	78
 31221  000E18  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31222  000E1A  0E00               	movlw	0
 31223  000E1C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31224  000E1E  0E00               	movlw	0
 31225  000E20  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31226  000E22  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 31227  000E26  D0C7               	goto	l15962
 31228  000E28                     
 31229                           ; BSR set to: 1
 31230                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 31231                           
 31232                           ; BSR set to: 1
 31233  000E28  0E00               	movlw	low InitGprsNetwork@UartMessage
 31234  000E2A  0100               	movlb	0	; () banked
 31235  000E2C  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31236  000E2E  0E01               	movlw	high InitGprsNetwork@UartMessage
 31237  000E30  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31238  000E32  0E00               	movlw	0
 31239  000E34  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31240  000E36  0E32               	movlw	50
 31241  000E38  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31242  000E3A  EC39  F033         	call	_ClearBuffer	;wreg free
 31243                           
 31244                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 31245  000E3E  0EBD               	movlw	low STR_9
 31246  000E40  0100               	movlb	0	; () banked
 31247  000E42  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31248  000E44  0EFE               	movlw	high STR_9
 31249  000E46  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31250  000E48  0E00               	movlw	low InitGprsNetwork@UartMessage
 31251  000E4A  6F87               	movwf	StringCopy@DestStr& (0+255),b
 31252  000E4C  0E01               	movlw	high InitGprsNetwork@UartMessage
 31253  000E4E  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 31254  000E50  0E00               	movlw	0
 31255  000E52  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31256  000E54  0E14               	movlw	20
 31257  000E56  6F89               	movwf	StringCopy@Len& (0+255),b
 31258  000E58  ECC8  F02C         	call	_StringCopy	;wreg free
 31259                           
 31260                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 31261  000E5C  0E00               	movlw	0
 31262  000E5E  0101               	movlb	1	; () banked
 31263  000E60  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 31264  000E62  D01C               	goto	l1225
 31265  000E64                     
 31266                           ; BSR set to: 1
 31267                           ;mdm_gsm_gprs_http.c: 161: {
 31268                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 31269                           
 31270                           ; BSR set to: 1
 31271  000E64  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31272  000E66  0D01               	mullw	1
 31273  000E68  50F3               	movf	prodl,w,c
 31274  000E6A  0100               	movlb	0	; () banked
 31275  000E6C  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 31276  000E6E  6ED9               	movwf	fsr2l,c
 31277  000E70  50F4               	movf	prodh,w,c
 31278  000E72  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 31279  000E74  6EDA               	movwf	fsr2h,c
 31280  000E76  0101               	movlb	1	; () banked
 31281  000E78  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31282  000E7A  0100               	movlb	0	; () banked
 31283  000E7C  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 31284  000E7E  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 31285  000E80  0E14               	movlw	20
 31286  000E82  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 31287  000E84  0E00               	movlw	0
 31288  000E86  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 31289  000E88  0E00               	movlw	low InitGprsNetwork@UartMessage
 31290  000E8A  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 31291  000E8C  6EE1               	movwf	fsr1l,c
 31292  000E8E  0E01               	movlw	high InitGprsNetwork@UartMessage
 31293  000E90  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 31294  000E92  6EE2               	movwf	fsr1h,c
 31295  000E94  CFDF FFE7          	movff	indf2,indf1
 31296                           
 31297                           ; BSR set to: 0
 31298  000E98  0101               	movlb	1	; () banked
 31299  000E9A  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 31300  000E9C                     l1225:
 31301                           
 31302                           ; BSR set to: 1
 31303                           
 31304                           ; BSR set to: 1
 31305  000E9C  0100               	movlb	0	; () banked
 31306  000E9E  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 31307  000EA0  0101               	movlb	1	; () banked
 31308  000EA2  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 31309  000EA4  A0D8               	btfss	status,0,c
 31310  000EA6  D7DE               	goto	l1226
 31311                           
 31312                           ; BSR set to: 1
 31313                           ;mdm_gsm_gprs_http.c: 163: }
 31314                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 31315                           
 31316                           ; BSR set to: 1
 31317  000EA8  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31318  000EAA  0100               	movlb	0	; () banked
 31319  000EAC  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 31320  000EAE  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 31321  000EB0  0E14               	movlw	20
 31322  000EB2  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 31323  000EB4  0E00               	movlw	0
 31324  000EB6  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 31325  000EB8  0E00               	movlw	low InitGprsNetwork@UartMessage
 31326  000EBA  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 31327  000EBC  6ED9               	movwf	fsr2l,c
 31328  000EBE  0E01               	movlw	high InitGprsNetwork@UartMessage
 31329  000EC0  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 31330  000EC2  6EDA               	movwf	fsr2h,c
 31331  000EC4  0E22               	movlw	34
 31332  000EC6  6EDF               	movwf	indf2,c
 31333                           
 31334                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 31335  000EC8  0101               	movlb	1	; () banked
 31336  000ECA  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31337  000ECC  0100               	movlb	0	; () banked
 31338  000ECE  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 31339  000ED0  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 31340  000ED2  0E15               	movlw	21
 31341  000ED4  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 31342  000ED6  0E00               	movlw	0
 31343  000ED8  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 31344  000EDA  0E00               	movlw	low InitGprsNetwork@UartMessage
 31345  000EDC  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 31346  000EDE  6ED9               	movwf	fsr2l,c
 31347  000EE0  0E01               	movlw	high InitGprsNetwork@UartMessage
 31348  000EE2  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 31349  000EE4  6EDA               	movwf	fsr2h,c
 31350  000EE6  0E0D               	movlw	13
 31351  000EE8  6EDF               	movwf	indf2,c
 31352                           
 31353                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 31354  000EEA  0101               	movlb	1	; () banked
 31355  000EEC  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31356  000EEE  0100               	movlb	0	; () banked
 31357  000EF0  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 31358  000EF2  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 31359  000EF4  0E16               	movlw	22
 31360  000EF6  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 31361  000EF8  0E00               	movlw	0
 31362  000EFA  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 31363  000EFC  0E00               	movlw	low InitGprsNetwork@UartMessage
 31364  000EFE  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 31365  000F00  6ED9               	movwf	fsr2l,c
 31366  000F02  0E01               	movlw	high InitGprsNetwork@UartMessage
 31367  000F04  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 31368  000F06  6EDA               	movwf	fsr2h,c
 31369  000F08  0E00               	movlw	0
 31370  000F0A  6EDF               	movwf	indf2,c
 31371                           
 31372                           ; BSR set to: 0
 31373                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 31374  000F0C  0E00               	movlw	low InitGprsNetwork@UartMessage
 31375  000F0E  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 31376  000F10  0E01               	movlw	high InitGprsNetwork@UartMessage
 31377  000F12  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 31378  000F14  0E01               	movlw	1
 31379  000F16  EC50  F032         	call	_Uart_WriteString
 31380                           
 31381                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 31382  000F1A  0E07               	movlw	7
 31383  000F1C  0101               	movlb	1	; () banked
 31384  000F1E  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31385                           
 31386                           ; BSR set to: 1
 31387                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 31388  000F20  0E03               	movlw	3
 31389  000F22  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 31390                           
 31391                           ; BSR set to: 1
 31392                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 31393  000F24  0EF3               	movlw	low _ConnTimeout
 31394  000F26  0100               	movlb	0	; () banked
 31395  000F28  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31396  000F2A  0E02               	movlw	high _ConnTimeout
 31397  000F2C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31398  000F2E  0E20               	movlw	32
 31399  000F30  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31400  000F32  0E4E               	movlw	78
 31401  000F34  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31402  000F36  0E00               	movlw	0
 31403  000F38  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31404  000F3A  0E00               	movlw	0
 31405  000F3C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31406  000F3E  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 31407  000F42  D039               	goto	l15962
 31408  000F44                     
 31409                           ; BSR set to: 1
 31410                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 31411                           
 31412                           ; BSR set to: 1
 31413  000F44  0E4B               	movlw	low STR_10
 31414  000F46  0100               	movlb	0	; () banked
 31415  000F48  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31416  000F4A  0EFF               	movlw	high STR_10
 31417  000F4C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31418  000F4E  0E01               	movlw	1
 31419  000F50  ECB0  F031         	call	_Uart_WriteConstString
 31420                           
 31421                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 31422  000F54  0E07               	movlw	7
 31423  000F56  0101               	movlb	1	; () banked
 31424  000F58  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31425                           
 31426                           ; BSR set to: 1
 31427                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 31428  000F5A  0E05               	movlw	5
 31429  000F5C  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 31430                           
 31431                           ; BSR set to: 1
 31432                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 31433  000F5E  0EF3               	movlw	low _ConnTimeout
 31434  000F60  0100               	movlb	0	; () banked
 31435  000F62  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31436  000F64  0E02               	movlw	high _ConnTimeout
 31437  000F66  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31438  000F68  0E20               	movlw	32
 31439  000F6A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31440  000F6C  0E4E               	movlw	78
 31441  000F6E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31442  000F70  0E00               	movlw	0
 31443  000F72  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31444  000F74  0E00               	movlw	0
 31445  000F76  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31446  000F78  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 31447  000F7C  D01C               	goto	l15962
 31448  000F7E                     
 31449                           ; BSR set to: 1
 31450                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 31451                           
 31452                           ; BSR set to: 1
 31453  000F7E  0E59               	movlw	low STR_11
 31454  000F80  0100               	movlb	0	; () banked
 31455  000F82  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31456  000F84  0EFF               	movlw	high STR_11
 31457  000F86  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31458  000F88  0E01               	movlw	1
 31459  000F8A  ECB0  F031         	call	_Uart_WriteConstString
 31460                           
 31461                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 31462  000F8E  0E08               	movlw	8
 31463  000F90  0101               	movlb	1	; () banked
 31464  000F92  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31465                           
 31466                           ; BSR set to: 1
 31467                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 31468  000F94  0E05               	movlw	5
 31469  000F96  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 31470                           
 31471                           ; BSR set to: 1
 31472                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 31473  000F98  0EF3               	movlw	low _ConnTimeout
 31474  000F9A  0100               	movlb	0	; () banked
 31475  000F9C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31476  000F9E  0E02               	movlw	high _ConnTimeout
 31477  000FA0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31478  000FA2  0E20               	movlw	32
 31479  000FA4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31480  000FA6  0E4E               	movlw	78
 31481  000FA8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31482  000FAA  0E00               	movlw	0
 31483  000FAC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31484  000FAE  0E00               	movlw	0
 31485  000FB0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31486  000FB2  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 31487  000FB6                     l15962:
 31488                           
 31489                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 31490  000FB6  0E01               	movlw	1
 31491  000FB8  0101               	movlb	1	; () banked
 31492  000FBA  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 31493                           
 31494                           ;mdm_gsm_gprs_http.c: 201: break;
 31495  000FBC  D07C               	goto	l1222
 31496  000FBE                     
 31497                           ; BSR set to: 1
 31498                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 31499                           
 31500                           ; BSR set to: 1
 31501  000FBE  0E02               	movlw	2
 31502  000FC0  D05A               	goto	L102
 31503  000FC2                     
 31504                           ; BSR set to: 1
 31505                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 31506                           
 31507                           ; BSR set to: 1
 31508  000FC2  0E3C               	movlw	low _NewStringReceived
 31509  000FC4  0100               	movlb	0	; () banked
 31510  000FC6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31511  000FC8  0E00               	movlw	high _NewStringReceived
 31512  000FCA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31513  000FCC  EC17  F034         	call	_ReceiveEvt	;wreg free
 31514  000FD0  0900               	iorlw	0
 31515  000FD2  B4D8               	btfsc	status,2,c
 31516  000FD4  D018               	goto	l1232
 31517                           
 31518                           ;mdm_gsm_gprs_http.c: 212: {
 31519                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 31520  000FD6  CC58  FFE8         	movff	_RxBuffer,wreg
 31521  000FDA  0A4F               	xorlw	79
 31522  000FDC  A4D8               	btfss	status,2,c
 31523  000FDE  D06B               	goto	l1222
 31524  000FE0  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31525  000FE4  0A4B               	xorlw	75
 31526  000FE6  A4D8               	btfss	status,2,c
 31527  000FE8  D066               	goto	l1222
 31528                           
 31529                           ;mdm_gsm_gprs_http.c: 215: {
 31530                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 31531  000FEA  C02A  F1E7         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 31532                           
 31533                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 31534  000FEE  0E58               	movlw	low _RxBuffer
 31535  000FF0  0100               	movlb	0	; () banked
 31536  000FF2  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31537  000FF4  0E0C               	movlw	high _RxBuffer
 31538  000FF6  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31539  000FF8  0E01               	movlw	1
 31540  000FFA  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31541  000FFC  0E90               	movlw	144
 31542  000FFE  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31543  001000  EC39  F033         	call	_ClearBuffer	;wreg free
 31544                           
 31545                           ;mdm_gsm_gprs_http.c: 220: }
 31546                           ;mdm_gsm_gprs_http.c: 221: }
 31547  001004  D058               	goto	l1222
 31548  001006                     l1232:
 31549                           
 31550                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31551  001006  0EF3               	movlw	low _ConnTimeout
 31552  001008  0100               	movlb	0	; () banked
 31553  00100A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31554  00100C  0E02               	movlw	high _ConnTimeout
 31555  00100E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31556  001010  ECD2  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31557  001014  D029               	goto	L66
 31558  001016                     
 31559                           ; BSR set to: 1
 31560                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 31561                           
 31562                           ; BSR set to: 1
 31563  001016  0E3C               	movlw	low _NewStringReceived
 31564  001018  0100               	movlb	0	; () banked
 31565  00101A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31566  00101C  0E00               	movlw	high _NewStringReceived
 31567  00101E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31568  001020  EC17  F034         	call	_ReceiveEvt	;wreg free
 31569  001024  0900               	iorlw	0
 31570  001026  B4D8               	btfsc	status,2,c
 31571  001028  D018               	goto	l1237
 31572                           
 31573                           ;mdm_gsm_gprs_http.c: 232: {
 31574                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 31575  00102A  CC58  FFE8         	movff	_RxBuffer,wreg
 31576  00102E  0A2B               	xorlw	43
 31577  001030  A4D8               	btfss	status,2,c
 31578  001032  D041               	goto	l1222
 31579  001034  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31580  001038  0A53               	xorlw	83
 31581  00103A  A4D8               	btfss	status,2,c
 31582  00103C  D03C               	goto	l1222
 31583                           
 31584                           ;mdm_gsm_gprs_http.c: 235: {
 31585                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 31586  00103E  C02A  F1E7         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 31587                           
 31588                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 31589  001042  0E58               	movlw	low _RxBuffer
 31590  001044  0100               	movlb	0	; () banked
 31591  001046  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31592  001048  0E0C               	movlw	high _RxBuffer
 31593  00104A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31594  00104C  0E01               	movlw	1
 31595  00104E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31596  001050  0E90               	movlw	144
 31597  001052  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31598  001054  EC39  F033         	call	_ClearBuffer	;wreg free
 31599                           
 31600                           ;mdm_gsm_gprs_http.c: 240: }
 31601                           ;mdm_gsm_gprs_http.c: 241: }
 31602  001058  D02E               	goto	l1222
 31603  00105A                     l1237:
 31604                           
 31605                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31606  00105A  0EF3               	movlw	low _ConnTimeout
 31607  00105C  0100               	movlb	0	; () banked
 31608  00105E  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31609  001060  0E02               	movlw	high _ConnTimeout
 31610  001062  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31611  001064  ECD2  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31612  001068                     L66:
 31613  001068  06E8               	decf	wreg,f,c
 31614  00106A  A4D8               	btfss	status,2,c
 31615  00106C  D024               	goto	l1222
 31616                           
 31617                           ;mdm_gsm_gprs_http.c: 243: {
 31618                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 31619  00106E  0E06               	movlw	6
 31620  001070                     L103:
 31621  001070  0101               	movlb	1	; () banked
 31622  001072  D003               	goto	L65
 31623  001074                     
 31624                           ; BSR set to: 1
 31625                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 31626                           
 31627                           ; BSR set to: 1
 31628  001074  0E03               	movlw	3
 31629  001076                     L102:
 31630  001076  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 31631                           
 31632                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 31633  001078  0E00               	movlw	0
 31634  00107A                     L65:
 31635  00107A  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31636                           
 31637                           ; BSR set to: 1
 31638                           ;mdm_gsm_gprs_http.c: 257: }
 31639                           
 31640                           ; BSR set to: 1
 31641                           ;mdm_gsm_gprs_http.c: 256: break;
 31642                           
 31643                           ;mdm_gsm_gprs_http.c: 255: default:
 31644                           
 31645                           ;mdm_gsm_gprs_http.c: 253: break;
 31646  00107C  D01C               	goto	l1222
 31647  00107E                     l1219:
 31648                           
 31649                           ; BSR set to: 1
 31650                           
 31651                           ; BSR set to: 1
 31652  00107E  51E7               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 31653                           
 31654                           ; Switch size 1, requested type "space"
 31655                           ; Number of cases is 9, Range of values is 0 to 8
 31656                           ; switch strategies available:
 31657                           ; Name         Instructions Cycles
 31658                           ; simple_byte           28    15 (average)
 31659                           ;	Chosen strategy is simple_byte
 31660  001080  0A00               	xorlw	0	; case 0
 31661  001082  B4D8               	btfsc	status,2,c
 31662  001084  D6A8               	goto	l1220
 31663  001086  0A01               	xorlw	1	; case 1
 31664  001088  B4D8               	btfsc	status,2,c
 31665  00108A  D6B1               	goto	l1223
 31666  00108C  0A03               	xorlw	3	; case 2
 31667  00108E  B4D8               	btfsc	status,2,c
 31668  001090  D6CB               	goto	l1224
 31669  001092  0A01               	xorlw	1	; case 3
 31670  001094  B4D8               	btfsc	status,2,c
 31671  001096  D756               	goto	l1228
 31672  001098  0A07               	xorlw	7	; case 4
 31673  00109A  B4D8               	btfsc	status,2,c
 31674  00109C  D770               	goto	l1229
 31675  00109E  0A01               	xorlw	1	; case 5
 31676  0010A0  B4D8               	btfsc	status,2,c
 31677  0010A2  D78D               	goto	l1230
 31678  0010A4  0A03               	xorlw	3	; case 6
 31679  0010A6  B4D8               	btfsc	status,2,c
 31680  0010A8  D7E5               	goto	l1241
 31681  0010AA  0A01               	xorlw	1	; case 7
 31682  0010AC  B4D8               	btfsc	status,2,c
 31683  0010AE  D789               	goto	l1231
 31684  0010B0  0A0F               	xorlw	15	; case 8
 31685  0010B2  B4D8               	btfsc	status,2,c
 31686  0010B4  D7B0               	goto	l1236
 31687  0010B6                     l1222:
 31688                           
 31689                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 31690                           
 31691                           ; BSR set to: 1
 31692  0010B6  0101               	movlb	1	; () banked
 31693  0010B8  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 31694  0010BA  0012               	return	
 31695  0010BC                     __end_of_InitGprsNetwork:
 31696                           	opt stack 0
 31697                           tosu	equ	0xFFF
 31698                           tosh	equ	0xFFE
 31699                           tosl	equ	0xFFD
 31700                           pclath	equ	0xFFA
 31701                           tblptru	equ	0xFF8
 31702                           tblptrh	equ	0xFF7
 31703                           tblptrl	equ	0xFF6
 31704                           tablat	equ	0xFF5
 31705                           prodh	equ	0xFF4
 31706                           prodl	equ	0xFF3
 31707                           intcon	equ	0xFF2
 31708                           intcon2	equ	0xFF1
 31709                           intcon3	equ	0xFF0
 31710                           indf0	equ	0xFEF
 31711                           postinc0	equ	0xFEE
 31712                           plusw0	equ	0xFEB
 31713                           fsr0h	equ	0xFEA
 31714                           fsr0l	equ	0xFE9
 31715                           wreg	equ	0xFE8
 31716                           indf1	equ	0xFE7
 31717                           postinc1	equ	0xFE6
 31718                           postdec1	equ	0xFE5
 31719                           plusw1	equ	0xFE3
 31720                           fsr1h	equ	0xFE2
 31721                           fsr1l	equ	0xFE1
 31722                           indf2	equ	0xFDF
 31723                           postinc2	equ	0xFDE
 31724                           postdec2	equ	0xFDD
 31725                           plusw2	equ	0xFDB
 31726                           fsr2h	equ	0xFDA
 31727                           fsr2l	equ	0xFD9
 31728                           status	equ	0xFD8
 31729                           
 31730 ;; *************** function _HttpGetMethod *****************
 31731 ;; Defined at:
 31732 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 31733 ;; Parameters:    Size  Location     Type
 31734 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 31735 ;;		 -> HttpGetDataLocal(5), 
 31736 ;; Auto vars:     Size  Location     Type
 31737 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 31738 ;;  Index           1  200[BANK1 ] unsigned char 
 31739 ;; Return value:  Size  Location     Type
 31740 ;;                  1    wreg      enum E8926
 31741 ;; Registers used:
 31742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31743 ;; Tracked objects:
 31744 ;;		On entry : 0/0
 31745 ;;		On exit  : 0/0
 31746 ;;		Unchanged: 0/0
 31747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31748 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31749 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31750 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31751 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31752 ;;Total ram usage:      207 bytes
 31753 ;; Hardware stack levels used:    1
 31754 ;; Hardware stack levels required when called:   14
 31755 ;; This function calls:
 31756 ;;		_ClearBuffer
 31757 ;;		_OsTmr_GetTimerStatus
 31758 ;;		_OsTmr_StartTimer
 31759 ;;		_ReceiveEvt
 31760 ;;		_StringCopy
 31761 ;;		_Uart_WriteConstString
 31762 ;;		_Uart_WriteString
 31763 ;; This function is called by:
 31764 ;;		_MdmHttp_MainTask
 31765 ;; This function uses a non-reentrant model
 31766 ;;
 31767                           
 31768                           	psect	text147
 31769  0005F2                     __ptext147:
 31770                           	opt stack 0
 31771  0005F2                     _HttpGetMethod:
 31772                           	opt stack 13
 31773                           
 31774                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 31775                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 31776                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 31777                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 31778                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 31779                           
 31780                           ; BSR set to: 1
 31781                           ;incstack = 0
 31782  0005F2  0E00               	movlw	0
 31783  0005F4  0101               	movlb	1	; () banked
 31784  0005F6  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 31785                           
 31786                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 31787  0005F8  D230               	goto	l1252
 31788  0005FA                     
 31789                           ; BSR set to: 1
 31790                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 31791                           
 31792                           ; BSR set to: 1
 31793  0005FA  0EFC               	movlw	low _GetMethod
 31794  0005FC  0100               	movlb	0	; () banked
 31795  0005FE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31796  000600  0E01               	movlw	high _GetMethod
 31797  000602  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31798  000604  EC17  F034         	call	_ReceiveEvt	;wreg free
 31799  000608  0900               	iorlw	0
 31800  00060A  B4D8               	btfsc	status,2,c
 31801  00060C  D257               	goto	l1255
 31802                           
 31803                           ;mdm_gsm_gprs_http.c: 284: {
 31804                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 31805  00060E  0E01               	movlw	1
 31806  000610  D18C               	goto	L68
 31807  000612                     
 31808                           ; BSR set to: 1
 31809                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 31810                           
 31811                           ; BSR set to: 1
 31812  000612  0E9D               	movlw	low STR_12
 31813  000614  0100               	movlb	0	; () banked
 31814  000616  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31815  000618  0EFF               	movlw	high STR_12
 31816  00061A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31817  00061C  0E01               	movlw	1
 31818  00061E  ECB0  F031         	call	_Uart_WriteConstString
 31819                           
 31820                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 31821  000622  0E0A               	movlw	10
 31822  000624  0101               	movlb	1	; () banked
 31823  000626  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31824                           
 31825                           ; BSR set to: 1
 31826                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 31827  000628  0E02               	movlw	2
 31828  00062A  0100               	movlb	0	; () banked
 31829  00062C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31830                           
 31831                           ; BSR set to: 0
 31832                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 31833  00062E  0EF3               	movlw	low _ConnTimeout
 31834  000630  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31835  000632  0E02               	movlw	high _ConnTimeout
 31836  000634  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31837  000636  0E20               	movlw	32
 31838  000638  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31839  00063A  0E4E               	movlw	78
 31840  00063C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31841  00063E  0E00               	movlw	0
 31842  000640  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31843  000642  0E00               	movlw	0
 31844  000644  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31845  000646  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 31846  00064A  D1AF               	goto	l16128
 31847  00064C                     
 31848                           ; BSR set to: 1
 31849                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 31850                           
 31851                           ; BSR set to: 1
 31852  00064C  0E67               	movlw	low STR_13
 31853  00064E  0100               	movlb	0	; () banked
 31854  000650  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31855  000652  0EFF               	movlw	high STR_13
 31856  000654  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31857  000656  0E01               	movlw	1
 31858  000658  ECB0  F031         	call	_Uart_WriteConstString
 31859                           
 31860                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 31861  00065C  0E0A               	movlw	10
 31862  00065E  0101               	movlb	1	; () banked
 31863  000660  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31864                           
 31865                           ; BSR set to: 1
 31866                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 31867  000662  0E03               	movlw	3
 31868  000664  0100               	movlb	0	; () banked
 31869  000666  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31870                           
 31871                           ; BSR set to: 0
 31872                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 31873  000668  0EF3               	movlw	low _ConnTimeout
 31874  00066A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31875  00066C  0E02               	movlw	high _ConnTimeout
 31876  00066E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31877  000670  0E20               	movlw	32
 31878  000672  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31879  000674  0E4E               	movlw	78
 31880  000676  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31881  000678  0E00               	movlw	0
 31882  00067A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31883  00067C  0E00               	movlw	0
 31884  00067E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31885  000680  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 31886  000684  D192               	goto	l16128
 31887  000686                     
 31888                           ; BSR set to: 1
 31889                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 31890                           
 31891                           ; BSR set to: 1
 31892  000686  0EA8               	movlw	low STR_14
 31893  000688  0100               	movlb	0	; () banked
 31894  00068A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31895  00068C  0EFE               	movlw	high STR_14
 31896  00068E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31897  000690  0E01               	movlw	1
 31898  000692  ECB0  F031         	call	_Uart_WriteConstString
 31899                           
 31900                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 31901  000696  0E0A               	movlw	10
 31902  000698  0101               	movlb	1	; () banked
 31903  00069A  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31904                           
 31905                           ; BSR set to: 1
 31906                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 31907  00069C  0E04               	movlw	4
 31908  00069E  0100               	movlb	0	; () banked
 31909  0006A0  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31910                           
 31911                           ; BSR set to: 0
 31912                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 31913  0006A2  0EF3               	movlw	low _ConnTimeout
 31914  0006A4  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31915  0006A6  0E02               	movlw	high _ConnTimeout
 31916  0006A8  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31917  0006AA  0E20               	movlw	32
 31918  0006AC  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31919  0006AE  0E4E               	movlw	78
 31920  0006B0  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31921  0006B2  0E00               	movlw	0
 31922  0006B4  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31923  0006B6  0E00               	movlw	0
 31924  0006B8  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31925  0006BA  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 31926  0006BE  D175               	goto	l16128
 31927  0006C0                     
 31928                           ; BSR set to: 1
 31929                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 31930                           
 31931                           ; BSR set to: 1
 31932  0006C0  0E00               	movlw	low HttpGetMethod@UartMessage
 31933  0006C2  0100               	movlb	0	; () banked
 31934  0006C4  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31935  0006C6  0E01               	movlw	high HttpGetMethod@UartMessage
 31936  0006C8  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31937  0006CA  0E00               	movlw	0
 31938  0006CC  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31939  0006CE  0EC8               	movlw	200
 31940  0006D0  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31941  0006D2  EC39  F033         	call	_ClearBuffer	;wreg free
 31942                           
 31943                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 31944  0006D6  0EE6               	movlw	low STR_15
 31945  0006D8  0100               	movlb	0	; () banked
 31946  0006DA  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31947  0006DC  0EFE               	movlw	high STR_15
 31948  0006DE  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31949  0006E0  0E00               	movlw	low HttpGetMethod@UartMessage
 31950  0006E2  6F87               	movwf	StringCopy@DestStr& (0+255),b
 31951  0006E4  0E01               	movlw	high HttpGetMethod@UartMessage
 31952  0006E6  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 31953  0006E8  0E00               	movlw	0
 31954  0006EA  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31955  0006EC  0E13               	movlw	19
 31956  0006EE  6F89               	movwf	StringCopy@Len& (0+255),b
 31957  0006F0  ECC8  F02C         	call	_StringCopy	;wreg free
 31958                           
 31959                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 31960  0006F4  0E00               	movlw	0
 31961  0006F6  0101               	movlb	1	; () banked
 31962  0006F8  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 31963  0006FA  D024               	goto	l1260
 31964  0006FC                     
 31965                           ; BSR set to: 1
 31966                           ;mdm_gsm_gprs_http.c: 332: {
 31967                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 31968                           
 31969                           ; BSR set to: 1
 31970  0006FC  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31971  0006FE  0D01               	mullw	1
 31972  000700  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 31973  000704  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 31974  000708  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 31975  00070C  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 31976  000710  50F3               	movf	prodl,w,c
 31977  000712  0100               	movlb	0	; () banked
 31978  000714  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31979  000716  6ED9               	movwf	fsr2l,c
 31980  000718  50F4               	movf	prodh,w,c
 31981  00071A  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31982  00071C  6EDA               	movwf	fsr2h,c
 31983  00071E  0101               	movlb	1	; () banked
 31984  000720  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31985  000722  0100               	movlb	0	; () banked
 31986  000724  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 31987  000726  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 31988  000728  0E13               	movlw	19
 31989  00072A  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 31990  00072C  0E00               	movlw	0
 31991  00072E  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 31992  000730  0E00               	movlw	low HttpGetMethod@UartMessage
 31993  000732  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 31994  000734  6EE1               	movwf	fsr1l,c
 31995  000736  0E01               	movlw	high HttpGetMethod@UartMessage
 31996  000738  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 31997  00073A  6EE2               	movwf	fsr1h,c
 31998  00073C  CFDF FFE7          	movff	indf2,indf1
 31999                           
 32000                           ; BSR set to: 0
 32001  000740  0101               	movlb	1	; () banked
 32002  000742  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 32003  000744                     l1260:
 32004                           
 32005                           ; BSR set to: 1
 32006                           
 32007                           ; BSR set to: 1
 32008  000744  0100               	movlb	0	; () banked
 32009  000746  EE20 F002          	lfsr	2,2
 32010  00074A  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 32011  00074C  26D9               	addwf	fsr2l,f,c
 32012  00074E  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 32013  000750  22DA               	addwfc	fsr2h,f,c
 32014  000752  50DE               	movf	postinc2,w,c
 32015  000754  0101               	movlb	1	; () banked
 32016  000756  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 32017  000758  A0D8               	btfss	status,0,c
 32018  00075A  D7D0               	goto	l1261
 32019                           
 32020                           ; BSR set to: 1
 32021                           ;mdm_gsm_gprs_http.c: 334: }
 32022                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 32023                           
 32024                           ; BSR set to: 1
 32025  00075C  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 32026  00075E  0100               	movlb	0	; () banked
 32027  000760  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 32028  000762  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 32029  000764  0E13               	movlw	19
 32030  000766  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 32031  000768  0E00               	movlw	0
 32032  00076A  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 32033  00076C  0E00               	movlw	low HttpGetMethod@UartMessage
 32034  00076E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 32035  000770  6ED9               	movwf	fsr2l,c
 32036  000772  0E01               	movlw	high HttpGetMethod@UartMessage
 32037  000774  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 32038  000776  6EDA               	movwf	fsr2h,c
 32039  000778  0E22               	movlw	34
 32040  00077A  6EDF               	movwf	indf2,c
 32041                           
 32042                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 32043  00077C  0101               	movlb	1	; () banked
 32044  00077E  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 32045  000780  0100               	movlb	0	; () banked
 32046  000782  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 32047  000784  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 32048  000786  0E14               	movlw	20
 32049  000788  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 32050  00078A  0E00               	movlw	0
 32051  00078C  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 32052  00078E  0E00               	movlw	low HttpGetMethod@UartMessage
 32053  000790  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 32054  000792  6ED9               	movwf	fsr2l,c
 32055  000794  0E01               	movlw	high HttpGetMethod@UartMessage
 32056  000796  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 32057  000798  6EDA               	movwf	fsr2h,c
 32058  00079A  0E0D               	movlw	13
 32059  00079C  6EDF               	movwf	indf2,c
 32060                           
 32061                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 32062  00079E  0101               	movlb	1	; () banked
 32063  0007A0  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 32064  0007A2  0100               	movlb	0	; () banked
 32065  0007A4  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 32066  0007A6  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 32067  0007A8  0E15               	movlw	21
 32068  0007AA  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 32069  0007AC  0E00               	movlw	0
 32070  0007AE  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 32071  0007B0  0E00               	movlw	low HttpGetMethod@UartMessage
 32072  0007B2  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 32073  0007B4  6ED9               	movwf	fsr2l,c
 32074  0007B6  0E01               	movlw	high HttpGetMethod@UartMessage
 32075  0007B8  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 32076  0007BA  6EDA               	movwf	fsr2h,c
 32077  0007BC  0E00               	movlw	0
 32078  0007BE  6EDF               	movwf	indf2,c
 32079                           
 32080                           ; BSR set to: 0
 32081                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 32082  0007C0  0E00               	movlw	low HttpGetMethod@UartMessage
 32083  0007C2  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 32084  0007C4  0E01               	movlw	high HttpGetMethod@UartMessage
 32085  0007C6  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 32086  0007C8  0E01               	movlw	1
 32087  0007CA  EC50  F032         	call	_Uart_WriteString
 32088                           
 32089                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 32090  0007CE  0E0A               	movlw	10
 32091  0007D0  0101               	movlb	1	; () banked
 32092  0007D2  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32093                           
 32094                           ; BSR set to: 1
 32095                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 32096  0007D4  0E05               	movlw	5
 32097  0007D6  0100               	movlb	0	; () banked
 32098  0007D8  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32099                           
 32100                           ; BSR set to: 0
 32101                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 32102  0007DA  0EF3               	movlw	low _ConnTimeout
 32103  0007DC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32104  0007DE  0E02               	movlw	high _ConnTimeout
 32105  0007E0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32106  0007E2  0E20               	movlw	32
 32107  0007E4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32108  0007E6  0E4E               	movlw	78
 32109  0007E8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32110  0007EA  0E00               	movlw	0
 32111  0007EC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32112  0007EE  0E00               	movlw	0
 32113  0007F0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32114  0007F2  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 32115  0007F6  D0D9               	goto	l16128
 32116  0007F8                     
 32117                           ; BSR set to: 1
 32118                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 32119                           
 32120                           ; BSR set to: 1
 32121  0007F8  0E1E               	movlw	low STR_16
 32122  0007FA  0100               	movlb	0	; () banked
 32123  0007FC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 32124  0007FE  0EFF               	movlw	high STR_16
 32125  000800  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 32126  000802  0E01               	movlw	1
 32127  000804  ECB0  F031         	call	_Uart_WriteConstString
 32128                           
 32129                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 32130  000808  0E0A               	movlw	10
 32131  00080A  0101               	movlb	1	; () banked
 32132  00080C  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32133                           
 32134                           ; BSR set to: 1
 32135                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 32136  00080E  0E06               	movlw	6
 32137  000810  0100               	movlb	0	; () banked
 32138  000812  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32139                           
 32140                           ; BSR set to: 0
 32141                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 32142  000814  0EF3               	movlw	low _ConnTimeout
 32143  000816  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32144  000818  0E02               	movlw	high _ConnTimeout
 32145  00081A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32146  00081C  0E20               	movlw	32
 32147  00081E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32148  000820  0E4E               	movlw	78
 32149  000822  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32150  000824  0E00               	movlw	0
 32151  000826  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32152  000828  0E00               	movlw	0
 32153  00082A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32154  00082C  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 32155                           
 32156                           ;mdm_gsm_gprs_http.c: 358: break;
 32157  000830  D145               	goto	l1255
 32158  000832                     
 32159                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 32160  000832  0E07               	movlw	7
 32161  000834  0101               	movlb	1	; () banked
 32162  000836  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32163                           
 32164                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 32165  000838  0E09               	movlw	9
 32166  00083A  0100               	movlb	0	; () banked
 32167  00083C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32168                           
 32169                           ; BSR set to: 0
 32170                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 32171  00083E  0EF3               	movlw	low _ConnTimeout
 32172  000840  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32173  000842  0E02               	movlw	high _ConnTimeout
 32174  000844  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32175  000846  0E20               	movlw	32
 32176  000848  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32177  00084A  0E4E               	movlw	78
 32178  00084C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32179  00084E  0E00               	movlw	0
 32180  000850  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32181  000852  0E00               	movlw	0
 32182  000854  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32183  000856  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 32184                           
 32185                           ;mdm_gsm_gprs_http.c: 371: break;
 32186  00085A  D130               	goto	l1255
 32187  00085C                     
 32188                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 32189  00085C  0E83               	movlw	low STR_17
 32190  00085E  0100               	movlb	0	; () banked
 32191  000860  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 32192  000862  0EFF               	movlw	high STR_17
 32193  000864  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 32194  000866  0E01               	movlw	1
 32195  000868  ECB0  F031         	call	_Uart_WriteConstString
 32196                           
 32197                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 32198  00086C  0E0D               	movlw	13
 32199  00086E  0101               	movlb	1	; () banked
 32200  000870  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32201                           
 32202                           ; BSR set to: 1
 32203                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 32204  000872  0E09               	movlw	9
 32205  000874  0100               	movlb	0	; () banked
 32206  000876  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32207                           
 32208                           ; BSR set to: 0
 32209                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 32210  000878  0EF3               	movlw	low _ConnTimeout
 32211  00087A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32212  00087C  0E02               	movlw	high _ConnTimeout
 32213  00087E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32214  000880  0E20               	movlw	32
 32215  000882  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32216  000884  0E4E               	movlw	78
 32217  000886  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32218  000888  0E00               	movlw	0
 32219  00088A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32220  00088C  0E00               	movlw	0
 32221  00088E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32222  000890  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 32223  000894  D08A               	goto	l16128
 32224  000896                     
 32225                           ; BSR set to: 1
 32226                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 32227                           
 32228                           ; BSR set to: 1
 32229  000896  0E90               	movlw	low STR_18
 32230  000898  0100               	movlb	0	; () banked
 32231  00089A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 32232  00089C  0EFF               	movlw	high STR_18
 32233  00089E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 32234  0008A0  0E01               	movlw	1
 32235  0008A2  ECB0  F031         	call	_Uart_WriteConstString
 32236                           
 32237                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 32238  0008A6  0E0A               	movlw	10
 32239  0008A8  0101               	movlb	1	; () banked
 32240  0008AA  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32241                           
 32242                           ; BSR set to: 1
 32243                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 32244  0008AC  0E0E               	movlw	14
 32245  0008AE  0100               	movlb	0	; () banked
 32246  0008B0  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32247                           
 32248                           ; BSR set to: 0
 32249                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 32250  0008B2  0EF3               	movlw	low _ConnTimeout
 32251  0008B4  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32252  0008B6  0E02               	movlw	high _ConnTimeout
 32253  0008B8  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32254  0008BA  0E20               	movlw	32
 32255  0008BC  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32256  0008BE  0E4E               	movlw	78
 32257  0008C0  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32258  0008C2  0E00               	movlw	0
 32259  0008C4  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32260  0008C6  0E00               	movlw	0
 32261  0008C8  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32262  0008CA  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 32263  0008CE  D06D               	goto	l16128
 32264  0008D0                     
 32265                           ; BSR set to: 1
 32266                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 32267                           
 32268                           ; BSR set to: 1
 32269  0008D0  0E3C               	movlw	low _NewStringReceived
 32270  0008D2  0100               	movlb	0	; () banked
 32271  0008D4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 32272  0008D6  0E00               	movlw	high _NewStringReceived
 32273  0008D8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 32274  0008DA  EC17  F034         	call	_ReceiveEvt	;wreg free
 32275  0008DE  0900               	iorlw	0
 32276  0008E0  B4D8               	btfsc	status,2,c
 32277  0008E2  D018               	goto	l1268
 32278                           
 32279                           ;mdm_gsm_gprs_http.c: 400: {
 32280                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 32281  0008E4  CC58  FFE8         	movff	_RxBuffer,wreg
 32282  0008E8  0A4F               	xorlw	79
 32283  0008EA  A4D8               	btfss	status,2,c
 32284  0008EC  D0E7               	goto	l1255
 32285  0008EE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 32286  0008F2  0A4B               	xorlw	75
 32287  0008F4  A4D8               	btfss	status,2,c
 32288  0008F6  D0E2               	goto	l1255
 32289                           
 32290                           ;mdm_gsm_gprs_http.c: 403: {
 32291                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 32292  0008F8  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 32293                           
 32294                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 32295  0008FC  0E58               	movlw	low _RxBuffer
 32296  0008FE  0100               	movlb	0	; () banked
 32297  000900  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 32298  000902  0E0C               	movlw	high _RxBuffer
 32299  000904  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 32300  000906  0E01               	movlw	1
 32301  000908  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 32302  00090A  0E90               	movlw	144
 32303  00090C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 32304  00090E  EC39  F033         	call	_ClearBuffer	;wreg free
 32305                           
 32306                           ;mdm_gsm_gprs_http.c: 408: }
 32307                           ;mdm_gsm_gprs_http.c: 409: }
 32308  000912  D0D4               	goto	l1255
 32309  000914                     l1268:
 32310                           
 32311                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 32312  000914  0EF3               	movlw	low _ConnTimeout
 32313  000916  0100               	movlb	0	; () banked
 32314  000918  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 32315  00091A  0E02               	movlw	high _ConnTimeout
 32316  00091C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 32317  00091E  ECD2  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 32318  000922                     L69:
 32319  000922  06E8               	decf	wreg,f,c
 32320  000924  A4D8               	btfss	status,2,c
 32321  000926  D0CA               	goto	l1255
 32322                           
 32323                           ;mdm_gsm_gprs_http.c: 411: {
 32324                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 32325  000928  0E0F               	movlw	15
 32326  00092A                     L68:
 32327  00092A  0101               	movlb	1	; () banked
 32328  00092C  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32329                           
 32330                           ; BSR set to: 1
 32331                           ;mdm_gsm_gprs_http.c: 414: }
 32332                           ;mdm_gsm_gprs_http.c: 415: break;
 32333                           
 32334                           ; BSR set to: 1
 32335  00092E  D0C6               	goto	l1255
 32336  000930                     
 32337                           ; BSR set to: 1
 32338                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 32339                           
 32340                           ; BSR set to: 1
 32341  000930  0E3C               	movlw	low _NewStringReceived
 32342  000932  0100               	movlb	0	; () banked
 32343  000934  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 32344  000936  0E00               	movlw	high _NewStringReceived
 32345  000938  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 32346  00093A  EC17  F034         	call	_ReceiveEvt	;wreg free
 32347  00093E  0900               	iorlw	0
 32348  000940  B4D8               	btfsc	status,2,c
 32349  000942  D018               	goto	l1273
 32350                           
 32351                           ;mdm_gsm_gprs_http.c: 420: {
 32352                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 32353  000944  CC58  FFE8         	movff	_RxBuffer,wreg
 32354  000948  0A2B               	xorlw	43
 32355  00094A  A4D8               	btfss	status,2,c
 32356  00094C  D0B7               	goto	l1255
 32357  00094E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 32358  000952  0A48               	xorlw	72
 32359  000954  A4D8               	btfss	status,2,c
 32360  000956  D0B2               	goto	l1255
 32361                           
 32362                           ;mdm_gsm_gprs_http.c: 423: {
 32363                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 32364  000958  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 32365                           
 32366                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 32367  00095C  0E58               	movlw	low _RxBuffer
 32368  00095E  0100               	movlb	0	; () banked
 32369  000960  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 32370  000962  0E0C               	movlw	high _RxBuffer
 32371  000964  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 32372  000966  0E01               	movlw	1
 32373  000968  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 32374  00096A  0E90               	movlw	144
 32375  00096C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 32376  00096E  EC39  F033         	call	_ClearBuffer	;wreg free
 32377                           
 32378                           ;mdm_gsm_gprs_http.c: 428: }
 32379                           ;mdm_gsm_gprs_http.c: 429: }
 32380  000972  D0A4               	goto	l1255
 32381  000974                     l1273:
 32382                           
 32383                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 32384  000974  0EF3               	movlw	low _ConnTimeout
 32385  000976  0100               	movlb	0	; () banked
 32386  000978  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 32387  00097A  0E02               	movlw	high _ConnTimeout
 32388  00097C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 32389  00097E  ECD2  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 32390  000982  D7CF               	goto	L69
 32391  000984                     
 32392                           ; BSR set to: 1
 32393                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 32394                           
 32395                           ; BSR set to: 1
 32396  000984  0E0C               	movlw	12
 32397  000986  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32398                           
 32399                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 32400  000988  0E05               	movlw	5
 32401  00098A  0100               	movlb	0	; () banked
 32402  00098C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32403                           
 32404                           ; BSR set to: 0
 32405                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 32406  00098E  0EDC               	movlw	low _ConnWait
 32407  000990  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32408  000992  0E03               	movlw	high _ConnWait
 32409  000994  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32410  000996  0EE8               	movlw	232
 32411  000998  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32412  00099A  0E03               	movlw	3
 32413  00099C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32414  00099E  0E00               	movlw	0
 32415  0009A0  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32416  0009A2  0E00               	movlw	0
 32417  0009A4  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32418  0009A6  EC28  F02D         	call	_OsTmr_StartTimer	;wreg free
 32419  0009AA                     l16128:
 32420                           
 32421                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 32422  0009AA  0E01               	movlw	1
 32423  0009AC  0101               	movlb	1	; () banked
 32424  0009AE  D053               	goto	L71
 32425  0009B0                     
 32426                           ; BSR set to: 1
 32427                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 32428                           
 32429                           ; BSR set to: 1
 32430  0009B0  0EDC               	movlw	low _ConnWait
 32431  0009B2  0100               	movlb	0	; () banked
 32432  0009B4  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 32433  0009B6  0E03               	movlw	high _ConnWait
 32434  0009B8  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 32435  0009BA  ECD2  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 32436  0009BE  06E8               	decf	wreg,f,c
 32437  0009C0  A4D8               	btfss	status,2,c
 32438  0009C2  D07C               	goto	l1255
 32439                           
 32440                           ;mdm_gsm_gprs_http.c: 450: {
 32441                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 32442  0009C4  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 32443                           
 32444                           ;mdm_gsm_gprs_http.c: 453: }
 32445                           ;mdm_gsm_gprs_http.c: 454: break;
 32446  0009C8  D079               	goto	l1255
 32447  0009CA                     
 32448                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 32449  0009CA  0E3C               	movlw	low _NewStringReceived
 32450  0009CC  0100               	movlb	0	; () banked
 32451  0009CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 32452  0009D0  0E00               	movlw	high _NewStringReceived
 32453  0009D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 32454  0009D4  EC17  F034         	call	_ReceiveEvt	;wreg free
 32455  0009D8  0900               	iorlw	0
 32456  0009DA  B4D8               	btfsc	status,2,c
 32457  0009DC  D02D               	goto	l1281
 32458                           
 32459                           ;mdm_gsm_gprs_http.c: 459: {
 32460                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 32461  0009DE  CC58  FFE8         	movff	_RxBuffer,wreg
 32462  0009E2  0A2B               	xorlw	43
 32463  0009E4  A4D8               	btfss	status,2,c
 32464  0009E6  D06A               	goto	l1255
 32465  0009E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 32466  0009EC  0A48               	xorlw	72
 32467  0009EE  A4D8               	btfss	status,2,c
 32468  0009F0  D065               	goto	l1255
 32469                           
 32470                           ;mdm_gsm_gprs_http.c: 462: {
 32471                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 32472  0009F2  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 32473                           
 32474                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 32475  0009F6  0E58               	movlw	low _RxBuffer
 32476  0009F8  0100               	movlb	0	; () banked
 32477  0009FA  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 32478  0009FC  0E0C               	movlw	high _RxBuffer
 32479  0009FE  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 32480  000A00  EE20 F003          	lfsr	2,3
 32481  000A04  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 32482  000A06  26D9               	addwf	fsr2l,f,c
 32483  000A08  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 32484  000A0A  22DA               	addwfc	fsr2h,f,c
 32485  000A0C  CFDE F087          	movff	postinc2,StringCopy@DestStr
 32486  000A10  CFDD F088          	movff	postdec2,StringCopy@DestStr+1
 32487  000A14  0E01               	movlw	1
 32488  000A16  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 32489  000A18  0E90               	movlw	144
 32490  000A1A  6F89               	movwf	StringCopy@Len& (0+255),b
 32491  000A1C  ECC8  F02C         	call	_StringCopy	;wreg free
 32492                           
 32493                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 32494  000A20  0E58               	movlw	low _RxBuffer
 32495  000A22  0100               	movlb	0	; () banked
 32496  000A24  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 32497  000A26  0E0C               	movlw	high _RxBuffer
 32498  000A28  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 32499  000A2A  0E01               	movlw	1
 32500  000A2C  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 32501  000A2E  0E90               	movlw	144
 32502  000A30  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 32503  000A32  EC39  F033         	call	_ClearBuffer	;wreg free
 32504                           
 32505                           ;mdm_gsm_gprs_http.c: 469: }
 32506                           ;mdm_gsm_gprs_http.c: 470: }
 32507  000A36  D042               	goto	l1255
 32508  000A38                     l1281:
 32509                           
 32510                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 32511  000A38  0EF3               	movlw	low _ConnTimeout
 32512  000A3A  0100               	movlb	0	; () banked
 32513  000A3C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 32514  000A3E  0E02               	movlw	high _ConnTimeout
 32515  000A40  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 32516  000A42  ECD2  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 32517  000A46  D76D               	goto	L69
 32518  000A48                     
 32519                           ; BSR set to: 1
 32520                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 32521                           
 32522                           ; BSR set to: 1
 32523  000A48  0E00               	movlw	0
 32524  000A4A  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32525                           
 32526                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 32527  000A4C  0E02               	movlw	2
 32528  000A4E  D003               	goto	L71
 32529  000A50                     
 32530                           ; BSR set to: 1
 32531                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 32532                           
 32533                           ; BSR set to: 1
 32534  000A50  0E00               	movlw	0
 32535  000A52  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32536                           
 32537                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 32538  000A54  0E03               	movlw	3
 32539  000A56                     L71:
 32540  000A56  6FE5               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 32541                           
 32542                           ; BSR set to: 1
 32543                           ;mdm_gsm_gprs_http.c: 494: }
 32544                           
 32545                           ; BSR set to: 1
 32546                           ;mdm_gsm_gprs_http.c: 493: break;
 32547                           
 32548                           ;mdm_gsm_gprs_http.c: 492: default:
 32549                           
 32550                           ;mdm_gsm_gprs_http.c: 490: break;
 32551  000A58  D031               	goto	l1255
 32552  000A5A                     l1252:
 32553                           
 32554                           ; BSR set to: 1
 32555                           
 32556                           ; BSR set to: 1
 32557  000A5A  51E6               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 32558                           
 32559                           ; Switch size 1, requested type "space"
 32560                           ; Number of cases is 16, Range of values is 0 to 15
 32561                           ; switch strategies available:
 32562                           ; Name         Instructions Cycles
 32563                           ; simple_byte           49    25 (average)
 32564                           ;	Chosen strategy is simple_byte
 32565  000A5C  0A00               	xorlw	0	; case 0
 32566  000A5E  B4D8               	btfsc	status,2,c
 32567  000A60  D5CC               	goto	l1253
 32568  000A62  0A01               	xorlw	1	; case 1
 32569  000A64  B4D8               	btfsc	status,2,c
 32570  000A66  D5D5               	goto	l1256
 32571  000A68  0A03               	xorlw	3	; case 2
 32572  000A6A  B4D8               	btfsc	status,2,c
 32573  000A6C  D5EF               	goto	l1257
 32574  000A6E  0A01               	xorlw	1	; case 3
 32575  000A70  B4D8               	btfsc	status,2,c
 32576  000A72  D609               	goto	l1258
 32577  000A74  0A07               	xorlw	7	; case 4
 32578  000A76  B4D8               	btfsc	status,2,c
 32579  000A78  D623               	goto	l1259
 32580  000A7A  0A01               	xorlw	1	; case 5
 32581  000A7C  B4D8               	btfsc	status,2,c
 32582  000A7E  D6BC               	goto	l1263
 32583  000A80  0A03               	xorlw	3	; case 6
 32584  000A82  B4D8               	btfsc	status,2,c
 32585  000A84  D6D6               	goto	l1264
 32586  000A86  0A01               	xorlw	1	; case 7
 32587  000A88  B4D8               	btfsc	status,2,c
 32588  000A8A  D752               	goto	l1272
 32589  000A8C  0A0F               	xorlw	15	; case 8
 32590  000A8E  B4D8               	btfsc	status,2,c
 32591  000A90  D6E5               	goto	l1265
 32592  000A92  0A01               	xorlw	1	; case 9
 32593  000A94  B4D8               	btfsc	status,2,c
 32594  000A96  D6FF               	goto	l1266
 32595  000A98  0A03               	xorlw	3	; case 10
 32596  000A9A  B4D8               	btfsc	status,2,c
 32597  000A9C  D719               	goto	l1267
 32598  000A9E  0A01               	xorlw	1	; case 11
 32599  000AA0  B4D8               	btfsc	status,2,c
 32600  000AA2  D770               	goto	l1277
 32601  000AA4  0A07               	xorlw	7	; case 12
 32602  000AA6  B4D8               	btfsc	status,2,c
 32603  000AA8  D783               	goto	l1278
 32604  000AAA  0A01               	xorlw	1	; case 13
 32605  000AAC  B4D8               	btfsc	status,2,c
 32606  000AAE  D78D               	goto	l1280
 32607  000AB0  0A03               	xorlw	3	; case 14
 32608  000AB2  B4D8               	btfsc	status,2,c
 32609  000AB4  D7C9               	goto	l1285
 32610  000AB6  0A01               	xorlw	1	; case 15
 32611  000AB8  B4D8               	btfsc	status,2,c
 32612  000ABA  D7CA               	goto	l1286
 32613  000ABC                     l1255:
 32614                           
 32615                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 32616                           
 32617                           ; BSR set to: 1
 32618  000ABC  0101               	movlb	1	; () banked
 32619  000ABE  51E5               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 32620  000AC0  0012               	return	
 32621  000AC2                     __end_of_HttpGetMethod:
 32622                           	opt stack 0
 32623                           tosu	equ	0xFFF
 32624                           tosh	equ	0xFFE
 32625                           tosl	equ	0xFFD
 32626                           pclath	equ	0xFFA
 32627                           tblptru	equ	0xFF8
 32628                           tblptrh	equ	0xFF7
 32629                           tblptrl	equ	0xFF6
 32630                           tablat	equ	0xFF5
 32631                           prodh	equ	0xFF4
 32632                           prodl	equ	0xFF3
 32633                           intcon	equ	0xFF2
 32634                           intcon2	equ	0xFF1
 32635                           intcon3	equ	0xFF0
 32636                           indf0	equ	0xFEF
 32637                           postinc0	equ	0xFEE
 32638                           plusw0	equ	0xFEB
 32639                           fsr0h	equ	0xFEA
 32640                           fsr0l	equ	0xFE9
 32641                           wreg	equ	0xFE8
 32642                           indf1	equ	0xFE7
 32643                           postinc1	equ	0xFE6
 32644                           postdec1	equ	0xFE5
 32645                           plusw1	equ	0xFE3
 32646                           fsr1h	equ	0xFE2
 32647                           fsr1l	equ	0xFE1
 32648                           indf2	equ	0xFDF
 32649                           postinc2	equ	0xFDE
 32650                           postdec2	equ	0xFDD
 32651                           plusw2	equ	0xFDB
 32652                           fsr2h	equ	0xFDA
 32653                           fsr2l	equ	0xFD9
 32654                           status	equ	0xFD8
 32655                           
 32656 ;; *************** function _Uart_WriteString *****************
 32657 ;; Defined at:
 32658 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32659 ;; Parameters:    Size  Location     Type
 32660 ;;  Module          1    wreg     unsigned char 
 32661 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 32662 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 32663 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 32664 ;; Auto vars:     Size  Location     Type
 32665 ;;  Module          1   34[BANK0 ] unsigned char 
 32666 ;; Return value:  Size  Location     Type
 32667 ;;                  1    wreg      void 
 32668 ;; Registers used:
 32669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32670 ;; Tracked objects:
 32671 ;;		On entry : 0/0
 32672 ;;		On exit  : 0/0
 32673 ;;		Unchanged: 0/0
 32674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32675 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32676 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32678 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32679 ;;Total ram usage:        3 bytes
 32680 ;; Hardware stack levels used:    1
 32681 ;; Hardware stack levels required when called:   12
 32682 ;; This function calls:
 32683 ;;		_UartTxBufferStatus
 32684 ;;		_UartWriteByte
 32685 ;; This function is called by:
 32686 ;;		_Mdm_SetSmsFormat
 32687 ;;		_InitGprsNetwork
 32688 ;;		_HttpGetMethod
 32689 ;;		_Mdm_PinUnlock
 32690 ;;		_Mdm_MakePhoneCall
 32691 ;; This function uses a non-reentrant model
 32692 ;;
 32693                           
 32694                           	psect	text148
 32695  0064A0                     __ptext148:
 32696                           	opt stack 0
 32697  0064A0                     _Uart_WriteString:
 32698                           	opt stack 12
 32699                           
 32700                           ; BSR set to: 1
 32701                           ;incstack = 0
 32702                           ;Uart_WriteString@Module stored from wreg
 32703  0064A0  0100               	movlb	0	; () banked
 32704  0064A2  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 32705                           
 32706                           ;uart_drv.c: 521: while (*StringToWrite)
 32707  0064A4  D014               	goto	u12430
 32708  0064A6                     
 32709                           ;uart_drv.c: 522: {
 32710                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 32711  0064A6  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 32712  0064AA  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 32713  0064AE  50DF               	movf	indf2,w,c
 32714  0064B0  0100               	movlb	0	; () banked
 32715  0064B2  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 32716  0064B4  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 32717  0064B6  EC63  F035         	call	_UartWriteByte
 32718                           
 32719                           ;uart_drv.c: 526: StringToWrite++;
 32720  0064BA  0100               	movlb	0	; () banked
 32721  0064BC  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 32722  0064BE  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 32723  0064C0                     
 32724                           ; BSR set to: 0
 32725                           
 32726                           ; BSR set to: 0
 32727  0064C0  0100               	movlb	0	; () banked
 32728  0064C2  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 32729  0064C4  EC23  F030         	call	_UartTxBufferStatus
 32730  0064C8  06E8               	decf	wreg,f,c
 32731  0064CA  B4D8               	btfsc	status,2,c
 32732  0064CC  D7F9               	goto	l709
 32733  0064CE                     u12430:
 32734  0064CE  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 32735  0064D2  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 32736  0064D6  50DF               	movf	indf2,w,c
 32737  0064D8  B4D8               	btfsc	status,2,c
 32738  0064DA  0012               	return	
 32739  0064DC  D7E4               	goto	l707
 32740  0064DE                     __end_of_Uart_WriteString:
 32741                           	opt stack 0
 32742                           tosu	equ	0xFFF
 32743                           tosh	equ	0xFFE
 32744                           tosl	equ	0xFFD
 32745                           pclath	equ	0xFFA
 32746                           tblptru	equ	0xFF8
 32747                           tblptrh	equ	0xFF7
 32748                           tblptrl	equ	0xFF6
 32749                           tablat	equ	0xFF5
 32750                           prodh	equ	0xFF4
 32751                           prodl	equ	0xFF3
 32752                           intcon	equ	0xFF2
 32753                           intcon2	equ	0xFF1
 32754                           intcon3	equ	0xFF0
 32755                           indf0	equ	0xFEF
 32756                           postinc0	equ	0xFEE
 32757                           plusw0	equ	0xFEB
 32758                           fsr0h	equ	0xFEA
 32759                           fsr0l	equ	0xFE9
 32760                           wreg	equ	0xFE8
 32761                           indf1	equ	0xFE7
 32762                           postinc1	equ	0xFE6
 32763                           postdec1	equ	0xFE5
 32764                           plusw1	equ	0xFE3
 32765                           fsr1h	equ	0xFE2
 32766                           fsr1l	equ	0xFE1
 32767                           indf2	equ	0xFDF
 32768                           postinc2	equ	0xFDE
 32769                           postdec2	equ	0xFDD
 32770                           plusw2	equ	0xFDB
 32771                           fsr2h	equ	0xFDA
 32772                           fsr2l	equ	0xFD9
 32773                           status	equ	0xFD8
 32774                           
 32775 ;; *************** function _Uart_WriteConstString *****************
 32776 ;; Defined at:
 32777 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32778 ;; Parameters:    Size  Location     Type
 32779 ;;  Module          1    wreg     unsigned char 
 32780 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 32781 ;;		 -> STR_31(12), STR_30(19), STR_29(14), STR_20(14), 
 32782 ;;		 -> STR_19(14), STR_18(13), STR_17(13), STR_16(17), 
 32783 ;;		 -> STR_14(21), STR_13(14), STR_12(13), STR_11(14), 
 32784 ;;		 -> STR_10(14), STR_8(31), STR_7(5), STR_6(5), 
 32785 ;;		 -> STR_4(12), STR_3(7), STR_2(14), STR_1(5), 
 32786 ;; Auto vars:     Size  Location     Type
 32787 ;;  Module          1   34[BANK0 ] unsigned char 
 32788 ;; Return value:  Size  Location     Type
 32789 ;;                  1    wreg      void 
 32790 ;; Registers used:
 32791 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32792 ;; Tracked objects:
 32793 ;;		On entry : 0/0
 32794 ;;		On exit  : 0/0
 32795 ;;		Unchanged: 0/0
 32796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32797 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32800 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32801 ;;Total ram usage:        3 bytes
 32802 ;; Hardware stack levels used:    1
 32803 ;; Hardware stack levels required when called:   12
 32804 ;; This function calls:
 32805 ;;		_UartTxBufferStatus
 32806 ;;		_UartWriteByte
 32807 ;; This function is called by:
 32808 ;;		_CheckModem
 32809 ;;		_ConfigureModem
 32810 ;;		_GetSmsSm
 32811 ;;		_Mdm_HangPhoneCall
 32812 ;;		_InitGprsNetwork
 32813 ;;		_HttpGetMethod
 32814 ;;		_detectCmd
 32815 ;;		_initGprsModem
 32816 ;;		_Mdm_GetPhoneCall
 32817 ;;		_MdmHttp_SetSsl
 32818 ;; This function uses a non-reentrant model
 32819 ;;
 32820                           
 32821                           	psect	text149
 32822  006360                     __ptext149:
 32823                           	opt stack 0
 32824  006360                     _Uart_WriteConstString:
 32825                           	opt stack 11
 32826                           
 32827                           ;incstack = 0
 32828                           ;Uart_WriteConstString@Module stored from wreg
 32829  006360  0100               	movlb	0	; () banked
 32830  006362  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 32831                           
 32832                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 32833  006364  D015               	goto	u11870
 32834  006366                     
 32835                           ;uart_drv.c: 500: {
 32836                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 32837  006366  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 32838  00636A  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 32839  00636E                     	if	0	;tblptru may be non-zero
 32840  00636E                     	endif
 32841  00636E                     	if	0	;tblptru may be non-zero
 32842  00636E                     	endif
 32843  00636E  0008               	tblrd		*
 32844  006370  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 32845  006374  0100               	movlb	0	; () banked
 32846  006376  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 32847  006378  EC63  F035         	call	_UartWriteByte
 32848                           
 32849                           ;uart_drv.c: 504: ConstStringToWrite++;
 32850  00637C  0100               	movlb	0	; () banked
 32851  00637E  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 32852  006380  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 32853  006382                     
 32854                           ; BSR set to: 0
 32855                           
 32856                           ; BSR set to: 0
 32857  006382  0100               	movlb	0	; () banked
 32858  006384  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 32859  006386  EC23  F030         	call	_UartTxBufferStatus
 32860  00638A  06E8               	decf	wreg,f,c
 32861  00638C  B4D8               	btfsc	status,2,c
 32862  00638E  D7F9               	goto	l700
 32863  006390                     u11870:
 32864  006390  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 32865  006394  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 32866  006398                     	if	0	;tblptru may be non-zero
 32867  006398                     	endif
 32868  006398                     	if	0	;tblptru may be non-zero
 32869  006398                     	endif
 32870  006398  0008               	tblrd		*
 32871  00639A  50F5               	movf	tablat,w,c
 32872  00639C  0900               	iorlw	0
 32873  00639E  B4D8               	btfsc	status,2,c
 32874  0063A0  0012               	return	
 32875  0063A2  D7E1               	goto	l698
 32876  0063A4                     __end_of_Uart_WriteConstString:
 32877                           	opt stack 0
 32878                           tosu	equ	0xFFF
 32879                           tosh	equ	0xFFE
 32880                           tosl	equ	0xFFD
 32881                           pclath	equ	0xFFA
 32882                           tblptru	equ	0xFF8
 32883                           tblptrh	equ	0xFF7
 32884                           tblptrl	equ	0xFF6
 32885                           tablat	equ	0xFF5
 32886                           prodh	equ	0xFF4
 32887                           prodl	equ	0xFF3
 32888                           intcon	equ	0xFF2
 32889                           intcon2	equ	0xFF1
 32890                           intcon3	equ	0xFF0
 32891                           indf0	equ	0xFEF
 32892                           postinc0	equ	0xFEE
 32893                           plusw0	equ	0xFEB
 32894                           fsr0h	equ	0xFEA
 32895                           fsr0l	equ	0xFE9
 32896                           wreg	equ	0xFE8
 32897                           indf1	equ	0xFE7
 32898                           postinc1	equ	0xFE6
 32899                           postdec1	equ	0xFE5
 32900                           plusw1	equ	0xFE3
 32901                           fsr1h	equ	0xFE2
 32902                           fsr1l	equ	0xFE1
 32903                           indf2	equ	0xFDF
 32904                           postinc2	equ	0xFDE
 32905                           postdec2	equ	0xFDD
 32906                           plusw2	equ	0xFDB
 32907                           fsr2h	equ	0xFDA
 32908                           fsr2l	equ	0xFD9
 32909                           status	equ	0xFD8
 32910                           
 32911 ;; *************** function _UartWriteByte *****************
 32912 ;; Defined at:
 32913 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32914 ;; Parameters:    Size  Location     Type
 32915 ;;  Module          1    wreg     unsigned char 
 32916 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 32917 ;; Auto vars:     Size  Location     Type
 32918 ;;  Module          1   30[BANK0 ] unsigned char 
 32919 ;; Return value:  Size  Location     Type
 32920 ;;                  1    wreg      void 
 32921 ;; Registers used:
 32922 ;;		wreg, status,2, status,0
 32923 ;; Tracked objects:
 32924 ;;		On entry : 0/0
 32925 ;;		On exit  : 0/0
 32926 ;;		Unchanged: 0/0
 32927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32928 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32929 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32931 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32932 ;;Total ram usage:        2 bytes
 32933 ;; Hardware stack levels used:    1
 32934 ;; Hardware stack levels required when called:   11
 32935 ;; This function calls:
 32936 ;;		Nothing
 32937 ;; This function is called by:
 32938 ;;		_Uart_WriteConstString
 32939 ;;		_Uart_WriteString
 32940 ;;		_Uart_WriteStringLen
 32941 ;; This function uses a non-reentrant model
 32942 ;;
 32943                           
 32944                           	psect	text150
 32945  006AC6                     __ptext150:
 32946                           	opt stack 0
 32947  006AC6                     _UartWriteByte:
 32948                           	opt stack 11
 32949                           
 32950                           ;incstack = 0
 32951                           ;UartWriteByte@Module stored from wreg
 32952  006AC6  0100               	movlb	0	; () banked
 32953  006AC8  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 32954                           
 32955                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 32956  006ACA  0100               	movlb	0	; () banked
 32957  006ACC  057E               	decf	UartWriteByte@Module& (0+255),w,b
 32958  006ACE  A4D8               	btfss	status,2,c
 32959  006AD0  D003               	goto	l639
 32960                           
 32961                           ; BSR set to: 0
 32962                           ;uart_drv.c: 176: {
 32963                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 32964  006AD2  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 32965                           
 32966                           ;uart_drv.c: 179: }
 32967  006AD6  0012               	return	
 32968  006AD8                     l639:
 32969                           
 32970                           ; BSR set to: 0
 32971                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 32972                           
 32973                           ; BSR set to: 0
 32974  006AD8  0E02               	movlw	2
 32975  006ADA  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 32976  006ADC  A4D8               	btfss	status,2,c
 32977  006ADE  0012               	return	
 32978                           
 32979                           ; BSR set to: 0
 32980                           ;uart_drv.c: 181: {
 32981                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 32982  006AE0  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 32983                           
 32984                           ; BSR set to: 0
 32985  006AE4  0012               	return	
 32986  006AE6                     __end_of_UartWriteByte:
 32987                           	opt stack 0
 32988                           tosu	equ	0xFFF
 32989                           tosh	equ	0xFFE
 32990                           tosl	equ	0xFFD
 32991                           pclath	equ	0xFFA
 32992                           tblptru	equ	0xFF8
 32993                           tblptrh	equ	0xFF7
 32994                           tblptrl	equ	0xFF6
 32995                           tablat	equ	0xFF5
 32996                           prodh	equ	0xFF4
 32997                           prodl	equ	0xFF3
 32998                           intcon	equ	0xFF2
 32999                           intcon2	equ	0xFF1
 33000                           intcon3	equ	0xFF0
 33001                           indf0	equ	0xFEF
 33002                           postinc0	equ	0xFEE
 33003                           plusw0	equ	0xFEB
 33004                           fsr0h	equ	0xFEA
 33005                           fsr0l	equ	0xFE9
 33006                           wreg	equ	0xFE8
 33007                           indf1	equ	0xFE7
 33008                           postinc1	equ	0xFE6
 33009                           postdec1	equ	0xFE5
 33010                           plusw1	equ	0xFE3
 33011                           fsr1h	equ	0xFE2
 33012                           fsr1l	equ	0xFE1
 33013                           indf2	equ	0xFDF
 33014                           postinc2	equ	0xFDE
 33015                           postdec2	equ	0xFDD
 33016                           plusw2	equ	0xFDB
 33017                           fsr2h	equ	0xFDA
 33018                           fsr2l	equ	0xFD9
 33019                           status	equ	0xFD8
 33020                           
 33021 ;; *************** function _UartTxBufferStatus *****************
 33022 ;; Defined at:
 33023 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 33024 ;; Parameters:    Size  Location     Type
 33025 ;;  Module          1    wreg     unsigned char 
 33026 ;; Auto vars:     Size  Location     Type
 33027 ;;  Module          1   30[BANK0 ] unsigned char 
 33028 ;;  TxBufferStat    1   31[BANK0 ] enum E9038
 33029 ;; Return value:  Size  Location     Type
 33030 ;;                  1    wreg      enum E9038
 33031 ;; Registers used:
 33032 ;;		wreg, status,2, status,0
 33033 ;; Tracked objects:
 33034 ;;		On entry : 0/0
 33035 ;;		On exit  : 0/0
 33036 ;;		Unchanged: 0/0
 33037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33039 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33040 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33041 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33042 ;;Total ram usage:        3 bytes
 33043 ;; Hardware stack levels used:    1
 33044 ;; Hardware stack levels required when called:   11
 33045 ;; This function calls:
 33046 ;;		Nothing
 33047 ;; This function is called by:
 33048 ;;		_Uart_WriteConstString
 33049 ;;		_Uart_WriteString
 33050 ;;		_Uart_WriteStringLen
 33051 ;; This function uses a non-reentrant model
 33052 ;;
 33053                           
 33054                           	psect	text151
 33055  006046                     __ptext151:
 33056                           	opt stack 0
 33057  006046                     _UartTxBufferStatus:
 33058                           	opt stack 11
 33059                           
 33060                           ; BSR set to: 0
 33061                           ;incstack = 0
 33062                           ;UartTxBufferStatus@Module stored from wreg
 33063  006046  0100               	movlb	0	; () banked
 33064  006048  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 33065                           
 33066                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 33067  00604A  0E00               	movlw	0
 33068  00604C  0100               	movlb	0	; () banked
 33069  00604E  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 33070                           
 33071                           ; BSR set to: 0
 33072                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 33073  006050  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 33074  006052  A4D8               	btfss	status,2,c
 33075  006054  D00B               	goto	l651
 33076                           
 33077                           ; BSR set to: 0
 33078                           ;uart_drv.c: 228: {
 33079                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 33080  006056  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 33081  00605A  90D8               	bcf	status,0,c
 33082  00605C  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 33083  00605E  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 33084  006060  D002               	goto	l652
 33085  006062                     u11710:
 33086                           
 33087                           ; BSR set to: 0
 33088                           ;uart_drv.c: 231: {
 33089                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 33090  006062  0E01               	movlw	1
 33091  006064  D014               	goto	L74
 33092  006066                     l652:
 33093                           
 33094                           ; BSR set to: 0
 33095                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 33096                           
 33097                           ; BSR set to: 0
 33098  006066  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 33099  00606A  D00C               	goto	L104
 33100  00606C                     l651:
 33101                           
 33102                           ; BSR set to: 0
 33103                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 33104                           
 33105                           ; BSR set to: 0
 33106  00606C  0E02               	movlw	2
 33107  00606E  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 33108  006070  A4D8               	btfss	status,2,c
 33109  006072  D00E               	goto	l660
 33110                           
 33111                           ; BSR set to: 0
 33112                           ;uart_drv.c: 244: {
 33113                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 33114  006074  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 33115  006078  90D8               	bcf	status,0,c
 33116  00607A  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 33117  00607C  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 33118  00607E  D7F1               	goto	u11710
 33119                           
 33120                           ; BSR set to: 0
 33121                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 33122                           
 33123                           ; BSR set to: 0
 33124                           
 33125                           ;uart_drv.c: 249: }
 33126                           
 33127                           ; BSR set to: 0
 33128                           ;uart_drv.c: 247: {
 33129                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 33130  006080  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 33131  006084                     L104:
 33132  006084  90D8               	bcf	status,0,c
 33133  006086  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 33134  006088  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 33135  00608A  D002               	goto	l660
 33136                           
 33137                           ; BSR set to: 0
 33138                           ;uart_drv.c: 251: {
 33139                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 33140  00608C  0E02               	movlw	2
 33141  00608E                     L74:
 33142  00608E  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 33143  006090                     l660:
 33144                           
 33145                           ; BSR set to: 0
 33146                           ;uart_drv.c: 257: }
 33147                           ;uart_drv.c: 258: }
 33148                           ;uart_drv.c: 260: return TxBufferStatus;
 33149                           
 33150                           ; BSR set to: 0
 33151                           
 33152                           ; BSR set to: 0
 33153                           
 33154                           ; BSR set to: 0
 33155                           
 33156                           ; BSR set to: 0
 33157                           
 33158                           ;uart_drv.c: 254: else
 33159                           ;uart_drv.c: 255: {
 33160                           
 33161                           ; BSR set to: 0
 33162  006090  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 33163  006092  0012               	return	
 33164  006094                     __end_of_UartTxBufferStatus:
 33165                           	opt stack 0
 33166                           tosu	equ	0xFFF
 33167                           tosh	equ	0xFFE
 33168                           tosl	equ	0xFFD
 33169                           pclath	equ	0xFFA
 33170                           tblptru	equ	0xFF8
 33171                           tblptrh	equ	0xFF7
 33172                           tblptrl	equ	0xFF6
 33173                           tablat	equ	0xFF5
 33174                           prodh	equ	0xFF4
 33175                           prodl	equ	0xFF3
 33176                           intcon	equ	0xFF2
 33177                           intcon2	equ	0xFF1
 33178                           intcon3	equ	0xFF0
 33179                           indf0	equ	0xFEF
 33180                           postinc0	equ	0xFEE
 33181                           plusw0	equ	0xFEB
 33182                           fsr0h	equ	0xFEA
 33183                           fsr0l	equ	0xFE9
 33184                           wreg	equ	0xFE8
 33185                           indf1	equ	0xFE7
 33186                           postinc1	equ	0xFE6
 33187                           postdec1	equ	0xFE5
 33188                           plusw1	equ	0xFE3
 33189                           fsr1h	equ	0xFE2
 33190                           fsr1l	equ	0xFE1
 33191                           indf2	equ	0xFDF
 33192                           postinc2	equ	0xFDE
 33193                           postdec2	equ	0xFDD
 33194                           plusw2	equ	0xFDB
 33195                           fsr2h	equ	0xFDA
 33196                           fsr2l	equ	0xFD9
 33197                           status	equ	0xFD8
 33198                           
 33199 ;; *************** function _StringCopy *****************
 33200 ;; Defined at:
 33201 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 33202 ;; Parameters:    Size  Location     Type
 33203 ;;  SourceStr       2   37[BANK0 ] PTR unsigned char 
 33204 ;;		 -> memoryPreamble(4), delCmdFsm@emptyNumber(13), smsText(20), UsbMasterPhoneNumber(15), 
 33205 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 33206 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), 
 33207 ;;		 -> RxBuffer(400), 
 33208 ;;  DestStr         2   39[BANK0 ] PTR unsigned char 
 33209 ;;		 -> receivedNumber(13), smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), 
 33210 ;;		 -> InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), 
 33211 ;;		 -> Mdm_SmsRx(102), callerNumber(13), 
 33212 ;;  Len             2   41[BANK0 ] unsigned short 
 33213 ;; Auto vars:     Size  Location     Type
 33214 ;;  Index           2   45[BANK0 ] unsigned short 
 33215 ;; Return value:  Size  Location     Type
 33216 ;;                  1    wreg      void 
 33217 ;; Registers used:
 33218 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 33219 ;; Tracked objects:
 33220 ;;		On entry : 0/0
 33221 ;;		On exit  : 0/0
 33222 ;;		Unchanged: 0/0
 33223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33224 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33225 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33226 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33227 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33228 ;;Total ram usage:       10 bytes
 33229 ;; Hardware stack levels used:    1
 33230 ;; Hardware stack levels required when called:   11
 33231 ;; This function calls:
 33232 ;;		Nothing
 33233 ;; This function is called by:
 33234 ;;		_ModemEvtParser
 33235 ;;		_GetSmsSm
 33236 ;;		_SendSmsSm
 33237 ;;		_Mdm_GetSmsData
 33238 ;;		_InitGprsNetwork
 33239 ;;		_HttpGetMethod
 33240 ;;		_Eeprom_Write
 33241 ;;		_detectCmd
 33242 ;;		_Mdm_SendSmsData
 33243 ;; This function uses a non-reentrant model
 33244 ;;
 33245                           
 33246                           	psect	text152
 33247  005990                     __ptext152:
 33248                           	opt stack 0
 33249  005990                     _StringCopy:
 33250                           	opt stack 13
 33251                           
 33252                           ;sf.c: 106: UINT16 Index = 0;
 33253                           
 33254                           ; BSR set to: 0
 33255                           ;incstack = 0
 33256  005990  0E00               	movlw	0
 33257  005992  0100               	movlb	0	; () banked
 33258  005994  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 33259  005996  0E00               	movlw	0
 33260  005998  6F8D               	movwf	StringCopy@Index& (0+255),b
 33261                           
 33262                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 33263  00599A  0E00               	movlw	0
 33264  00599C  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 33265  00599E  0E00               	movlw	0
 33266  0059A0  6F8D               	movwf	StringCopy@Index& (0+255),b
 33267  0059A2  D020               	goto	l2256
 33268  0059A4                     
 33269                           ; BSR set to: 0
 33270                           ;sf.c: 110: {
 33271                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 33272                           
 33273                           ; BSR set to: 0
 33274  0059A4  518D               	movf	StringCopy@Index& (0+255),w,b
 33275  0059A6  2585               	addwf	StringCopy@SourceStr& (0+255),w,b
 33276  0059A8  6F8B               	movwf	??_StringCopy& (0+255),b
 33277  0059AA  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 33278  0059AC  2186               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 33279  0059AE  6F8C               	movwf	(??_StringCopy+1)& (0+255),b
 33280  0059B0  C08B  FFF6         	movff	??_StringCopy,tblptrl
 33281  0059B4  C08C  FFF7         	movff	??_StringCopy+1,tblptrh
 33282  0059B8  6AF8               	clrf	tblptru,c
 33283  0059BA  518D               	movf	StringCopy@Index& (0+255),w,b
 33284  0059BC  2587               	addwf	StringCopy@DestStr& (0+255),w,b
 33285  0059BE  6ED9               	movwf	fsr2l,c
 33286  0059C0  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 33287  0059C2  2188               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 33288  0059C4  6EDA               	movwf	fsr2h,c
 33289  0059C6  0E0E               	movlw	(high __ramtop+-1)
 33290  0059C8  64F7               	cpfsgt	tblptrh,c
 33291  0059CA  D003               	bra	u11907
 33292  0059CC  0008               	tblrd		*
 33293  0059CE  50F5               	movf	tablat,w,c
 33294  0059D0  D005               	bra	u11900
 33295  0059D2                     u11907:
 33296  0059D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 33297  0059D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 33298  0059DA  50EF               	movf	indf0,w,c
 33299  0059DC                     u11900:
 33300  0059DC  6EDF               	movwf	indf2,c
 33301  0059DE  0100               	movlb	0	; () banked
 33302  0059E0  4B8D               	infsnz	StringCopy@Index& (0+255),f,b
 33303  0059E2  2B8E               	incf	(StringCopy@Index+1)& (0+255),f,b
 33304  0059E4                     l2256:
 33305                           
 33306                           ; BSR set to: 0
 33307                           
 33308                           ; BSR set to: 0
 33309  0059E4  5189               	movf	StringCopy@Len& (0+255),w,b
 33310  0059E6  5D8D               	subwf	StringCopy@Index& (0+255),w,b
 33311  0059E8  518A               	movf	(StringCopy@Len+1)& (0+255),w,b
 33312  0059EA  598E               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 33313  0059EC  B0D8               	btfsc	status,0,c
 33314  0059EE  0012               	return	
 33315  0059F0  D7D9               	goto	l2257
 33316  0059F2                     __end_of_StringCopy:
 33317                           	opt stack 0
 33318                           tosu	equ	0xFFF
 33319                           tosh	equ	0xFFE
 33320                           tosl	equ	0xFFD
 33321                           pclath	equ	0xFFA
 33322                           tblptru	equ	0xFF8
 33323                           tblptrh	equ	0xFF7
 33324                           tblptrl	equ	0xFF6
 33325                           tablat	equ	0xFF5
 33326                           prodh	equ	0xFF4
 33327                           prodl	equ	0xFF3
 33328                           intcon	equ	0xFF2
 33329                           intcon2	equ	0xFF1
 33330                           intcon3	equ	0xFF0
 33331                           indf0	equ	0xFEF
 33332                           postinc0	equ	0xFEE
 33333                           plusw0	equ	0xFEB
 33334                           fsr0h	equ	0xFEA
 33335                           fsr0l	equ	0xFE9
 33336                           wreg	equ	0xFE8
 33337                           indf1	equ	0xFE7
 33338                           postinc1	equ	0xFE6
 33339                           postdec1	equ	0xFE5
 33340                           plusw1	equ	0xFE3
 33341                           fsr1h	equ	0xFE2
 33342                           fsr1l	equ	0xFE1
 33343                           indf2	equ	0xFDF
 33344                           postinc2	equ	0xFDE
 33345                           postdec2	equ	0xFDD
 33346                           plusw2	equ	0xFDB
 33347                           fsr2h	equ	0xFDA
 33348                           fsr2l	equ	0xFD9
 33349                           status	equ	0xFD8
 33350                           
 33351 ;; *************** function _OsTmr_StartTimer *****************
 33352 ;; Defined at:
 33353 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33354 ;; Parameters:    Size  Location     Type
 33355 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 33356 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 33357 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 33358 ;;  Timeout         4   35[BANK0 ] unsigned long 
 33359 ;; Auto vars:     Size  Location     Type
 33360 ;;		None
 33361 ;; Return value:  Size  Location     Type
 33362 ;;                  1    wreg      void 
 33363 ;; Registers used:
 33364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33365 ;; Tracked objects:
 33366 ;;		On entry : 0/0
 33367 ;;		On exit  : 0/0
 33368 ;;		Unchanged: 0/0
 33369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33370 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33373 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33374 ;;Total ram usage:        6 bytes
 33375 ;; Hardware stack levels used:    1
 33376 ;; Hardware stack levels required when called:   12
 33377 ;; This function calls:
 33378 ;;		_GetOsTickCounter
 33379 ;; This function is called by:
 33380 ;;		_OsTmr_Wait
 33381 ;;		_CheckModem
 33382 ;;		_SendSmsSm
 33383 ;;		_InitGprsNetwork
 33384 ;;		_HttpGetMethod
 33385 ;;		_I2cSlv_QueryI2cData
 33386 ;;		_Term_MainSm
 33387 ;; This function uses a non-reentrant model
 33388 ;;
 33389                           
 33390                           	psect	text153
 33391  005A50                     __ptext153:
 33392                           	opt stack 0
 33393  005A50                     _OsTmr_StartTimer:
 33394                           	opt stack 12
 33395                           
 33396                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 33397                           
 33398                           ; BSR set to: 0
 33399                           ;incstack = 0
 33400  005A50  0100               	movlb	0	; () banked
 33401  005A52  EE20 F001          	lfsr	2,1
 33402  005A56  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 33403  005A58  26D9               	addwf	fsr2l,f,c
 33404  005A5A  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 33405  005A5C  22DA               	addwfc	fsr2h,f,c
 33406  005A5E  0E00               	movlw	0
 33407  005A60  6EDF               	movwf	indf2,c
 33408                           
 33409                           ; BSR set to: 0
 33410                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 33411  005A62  EC5C  F036         	call	_GetOsTickCounter	;wreg free
 33412  005A66  0100               	movlb	0	; () banked
 33413  005A68  EE20 F002          	lfsr	2,2
 33414  005A6C  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 33415  005A6E  26D9               	addwf	fsr2l,f,c
 33416  005A70  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 33417  005A72  22DA               	addwfc	fsr2h,f,c
 33418  005A74  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 33419  005A78  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 33420  005A7C  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 33421  005A80  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 33422                           
 33423                           ; BSR set to: 0
 33424                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 33425  005A84  EE20 F006          	lfsr	2,6
 33426  005A88  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 33427  005A8A  26D9               	addwf	fsr2l,f,c
 33428  005A8C  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 33429  005A8E  22DA               	addwfc	fsr2h,f,c
 33430  005A90  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 33431  005A94  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 33432  005A98  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 33433  005A9C  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 33434                           
 33435                           ; BSR set to: 0
 33436                           ;os_timers.c: 127: Timer->Enabled = 1u;
 33437  005AA0  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 33438  005AA4  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 33439  005AA8  0E01               	movlw	1
 33440  005AAA  6EDF               	movwf	indf2,c
 33441                           
 33442                           ; BSR set to: 0
 33443  005AAC  0012               	return		;funcret
 33444  005AAE                     __end_of_OsTmr_StartTimer:
 33445                           	opt stack 0
 33446                           tosu	equ	0xFFF
 33447                           tosh	equ	0xFFE
 33448                           tosl	equ	0xFFD
 33449                           pclath	equ	0xFFA
 33450                           tblptru	equ	0xFF8
 33451                           tblptrh	equ	0xFF7
 33452                           tblptrl	equ	0xFF6
 33453                           tablat	equ	0xFF5
 33454                           prodh	equ	0xFF4
 33455                           prodl	equ	0xFF3
 33456                           intcon	equ	0xFF2
 33457                           intcon2	equ	0xFF1
 33458                           intcon3	equ	0xFF0
 33459                           indf0	equ	0xFEF
 33460                           postinc0	equ	0xFEE
 33461                           plusw0	equ	0xFEB
 33462                           fsr0h	equ	0xFEA
 33463                           fsr0l	equ	0xFE9
 33464                           wreg	equ	0xFE8
 33465                           indf1	equ	0xFE7
 33466                           postinc1	equ	0xFE6
 33467                           postdec1	equ	0xFE5
 33468                           plusw1	equ	0xFE3
 33469                           fsr1h	equ	0xFE2
 33470                           fsr1l	equ	0xFE1
 33471                           indf2	equ	0xFDF
 33472                           postinc2	equ	0xFDE
 33473                           postdec2	equ	0xFDD
 33474                           plusw2	equ	0xFDB
 33475                           fsr2h	equ	0xFDA
 33476                           fsr2l	equ	0xFD9
 33477                           status	equ	0xFD8
 33478                           
 33479 ;; *************** function _OsTmr_GetTimerStatus *****************
 33480 ;; Defined at:
 33481 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33482 ;; Parameters:    Size  Location     Type
 33483 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 33484 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 33485 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 33486 ;; Auto vars:     Size  Location     Type
 33487 ;;		None
 33488 ;; Return value:  Size  Location     Type
 33489 ;;                  1    wreg      enum E7740
 33490 ;; Registers used:
 33491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33492 ;; Tracked objects:
 33493 ;;		On entry : 0/0
 33494 ;;		On exit  : 0/0
 33495 ;;		Unchanged: 0/0
 33496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33497 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33499 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33500 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33501 ;;Total ram usage:        6 bytes
 33502 ;; Hardware stack levels used:    1
 33503 ;; Hardware stack levels required when called:   13
 33504 ;; This function calls:
 33505 ;;		_GetElapsedTime
 33506 ;; This function is called by:
 33507 ;;		_OsTmr_Wait
 33508 ;;		_CheckModem
 33509 ;;		_SendSmsSm
 33510 ;;		_InitGprsNetwork
 33511 ;;		_HttpGetMethod
 33512 ;;		_I2cSlv_QueryI2cData
 33513 ;;		_Term_MainSm
 33514 ;; This function uses a non-reentrant model
 33515 ;;
 33516                           
 33517                           	psect	text154
 33518  0051A4                     __ptext154:
 33519                           	opt stack 0
 33520  0051A4                     _OsTmr_GetTimerStatus:
 33521                           	opt stack 11
 33522                           
 33523                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 33524                           
 33525                           ; BSR set to: 0
 33526                           ;incstack = 0
 33527  0051A4  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 33528  0051A8  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 33529  0051AC  04DE               	decf	postinc2,w,c
 33530  0051AE  A4D8               	btfss	status,2,c
 33531  0051B0  D030               	goto	l864
 33532                           
 33533                           ;os_timers.c: 197: {
 33534                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 33535  0051B2  0100               	movlb	0	; () banked
 33536  0051B4  EE20 F006          	lfsr	2,6
 33537  0051B8  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33538  0051BA  26D9               	addwf	fsr2l,f,c
 33539  0051BC  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33540  0051BE  22DA               	addwfc	fsr2h,f,c
 33541  0051C0  EE10 F002          	lfsr	1,2
 33542  0051C4  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33543  0051C6  26E1               	addwf	fsr1l,f,c
 33544  0051C8  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33545  0051CA  22E2               	addwfc	fsr1h,f,c
 33546  0051CC  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 33547  0051D0  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 33548  0051D4  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 33549  0051D8  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 33550  0051DC  EC96  F020         	call	_GetElapsedTime	;wreg free
 33551  0051E0  50DE               	movf	postinc2,w,c
 33552  0051E2  0100               	movlb	0	; () banked
 33553  0051E4  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 33554  0051E6  50DE               	movf	postinc2,w,c
 33555  0051E8  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 33556  0051EA  50DE               	movf	postinc2,w,c
 33557  0051EC  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 33558  0051EE  50DE               	movf	postinc2,w,c
 33559  0051F0  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 33560  0051F2  A0D8               	btfss	status,0,c
 33561  0051F4  D017               	goto	l867
 33562                           
 33563                           ; BSR set to: 0
 33564                           ;os_timers.c: 200: {
 33565                           ;os_timers.c: 202: Timer->Enabled = 0u;
 33566  0051F6  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 33567  0051FA  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 33568  0051FE  0E00               	movlw	0
 33569  005200  6EDF               	movwf	indf2,c
 33570                           
 33571                           ; BSR set to: 0
 33572                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 33573  005202  EE20 F001          	lfsr	2,1
 33574  005206  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33575  005208  26D9               	addwf	fsr2l,f,c
 33576  00520A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33577  00520C  22DA               	addwfc	fsr2h,f,c
 33578  00520E  0E01               	movlw	1
 33579  005210  D008               	goto	L105
 33580  005212                     l864:
 33581                           
 33582                           ;os_timers.c: 211: else
 33583                           ;os_timers.c: 212: {
 33584                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 33585                           
 33586                           ; BSR set to: 0
 33587  005212  0100               	movlb	0	; () banked
 33588  005214  EE20 F001          	lfsr	2,1
 33589  005218  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33590  00521A  26D9               	addwf	fsr2l,f,c
 33591  00521C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33592  00521E  22DA               	addwfc	fsr2h,f,c
 33593  005220  0E02               	movlw	2
 33594  005222                     L105:
 33595  005222  6EDF               	movwf	indf2,c
 33596  005224                     l867:
 33597                           
 33598                           ; BSR set to: 0
 33599                           ;os_timers.c: 215: }
 33600                           ;os_timers.c: 218: return Timer->Status;
 33601  005224  EE20 F001          	lfsr	2,1
 33602  005228  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33603  00522A  26D9               	addwf	fsr2l,f,c
 33604  00522C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33605  00522E  22DA               	addwfc	fsr2h,f,c
 33606  005230  50DF               	movf	indf2,w,c
 33607  005232  0012               	return	
 33608  005234                     __end_of_OsTmr_GetTimerStatus:
 33609                           	opt stack 0
 33610                           tosu	equ	0xFFF
 33611                           tosh	equ	0xFFE
 33612                           tosl	equ	0xFFD
 33613                           pclath	equ	0xFFA
 33614                           tblptru	equ	0xFF8
 33615                           tblptrh	equ	0xFF7
 33616                           tblptrl	equ	0xFF6
 33617                           tablat	equ	0xFF5
 33618                           prodh	equ	0xFF4
 33619                           prodl	equ	0xFF3
 33620                           intcon	equ	0xFF2
 33621                           intcon2	equ	0xFF1
 33622                           intcon3	equ	0xFF0
 33623                           indf0	equ	0xFEF
 33624                           postinc0	equ	0xFEE
 33625                           plusw0	equ	0xFEB
 33626                           fsr0h	equ	0xFEA
 33627                           fsr0l	equ	0xFE9
 33628                           wreg	equ	0xFE8
 33629                           indf1	equ	0xFE7
 33630                           postinc1	equ	0xFE6
 33631                           postdec1	equ	0xFE5
 33632                           plusw1	equ	0xFE3
 33633                           fsr1h	equ	0xFE2
 33634                           fsr1l	equ	0xFE1
 33635                           indf2	equ	0xFDF
 33636                           postinc2	equ	0xFDE
 33637                           postdec2	equ	0xFDD
 33638                           plusw2	equ	0xFDB
 33639                           fsr2h	equ	0xFDA
 33640                           fsr2l	equ	0xFD9
 33641                           status	equ	0xFD8
 33642                           
 33643 ;; *************** function _GetElapsedTime *****************
 33644 ;; Defined at:
 33645 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33646 ;; Parameters:    Size  Location     Type
 33647 ;;  StartTime       4   33[BANK0 ] unsigned long 
 33648 ;; Auto vars:     Size  Location     Type
 33649 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 33650 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 33651 ;; Return value:  Size  Location     Type
 33652 ;;                  4   33[BANK0 ] unsigned long 
 33653 ;; Registers used:
 33654 ;;		wreg, status,2, status,0, cstack
 33655 ;; Tracked objects:
 33656 ;;		On entry : 0/0
 33657 ;;		On exit  : 0/0
 33658 ;;		Unchanged: 0/0
 33659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33660 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33661 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33662 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33663 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33664 ;;Total ram usage:       20 bytes
 33665 ;; Hardware stack levels used:    1
 33666 ;; Hardware stack levels required when called:   12
 33667 ;; This function calls:
 33668 ;;		_GetOsTickCounter
 33669 ;; This function is called by:
 33670 ;;		_OsTmr_GetTimerStatus
 33671 ;;		_OsTmr_GetRemainingTime
 33672 ;; This function uses a non-reentrant model
 33673 ;;
 33674                           
 33675                           	psect	text155
 33676  00412C                     __ptext155:
 33677                           	opt stack 0
 33678  00412C                     _GetElapsedTime:
 33679                           	opt stack 11
 33680                           
 33681                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 33682                           ;os_timers.c: 87: UINT32 TimeValue;
 33683                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 33684                           
 33685                           ; BSR set to: 0
 33686                           ;incstack = 0
 33687  00412C  EC5C  F036         	call	_GetOsTickCounter	;wreg free
 33688  004130  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 33689  004134  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 33690  004138  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 33691  00413C  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 33692                           
 33693                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 33694  004140  0100               	movlb	0	; () banked
 33695  004142  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 33696  004144  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 33697  004146  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 33698  004148  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 33699  00414A  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 33700  00414C  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 33701  00414E  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 33702  004150  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 33703  004152  A0D8               	btfss	status,0,c
 33704  004154  D01D               	goto	l844
 33705                           
 33706                           ; BSR set to: 0
 33707                           ;os_timers.c: 94: {
 33708                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 33709  004156  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 33710  00415A  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 33711  00415E  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 33712  004162  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 33713  004166  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 33714  004168  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 33715  00416A  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 33716  00416C  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 33717  00416E  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 33718  004170  0E00               	movlw	0
 33719  004172  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 33720  004174  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 33721  004176  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 33722  004178  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 33723  00417A  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 33724  00417C  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 33725  00417E  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 33726  004180  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 33727  004182  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 33728  004184  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 33729  004186  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 33730  004188  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 33731  00418A  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 33732  00418C  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 33733  00418E  D028               	goto	L75
 33734  004190                     l844:
 33735                           
 33736                           ; BSR set to: 0
 33737                           ;os_timers.c: 97: else
 33738                           ;os_timers.c: 98: {
 33739                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 33740                           
 33741                           ; BSR set to: 0
 33742  004190  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 33743  004194  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 33744  004198  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 33745  00419C  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 33746  0041A0  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 33747  0041A2  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 33748  0041A4  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 33749  0041A6  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 33750  0041A8  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 33751  0041AA  0E00               	movlw	0
 33752  0041AC  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 33753  0041AE  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 33754  0041B0  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 33755  0041B2  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 33756  0041B4  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 33757  0041B6  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 33758  0041B8  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 33759  0041BA  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 33760  0041BC  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 33761  0041BE  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 33762  0041C0  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 33763  0041C2  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 33764  0041C4  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 33765  0041C6  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 33766  0041C8  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 33767  0041CA  0EFF               	movlw	255
 33768  0041CC  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 33769  0041CE  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 33770  0041D0  0EFF               	movlw	255
 33771  0041D2  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 33772  0041D4  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 33773  0041D6  0EFF               	movlw	255
 33774  0041D8  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 33775  0041DA  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 33776  0041DC  0EFF               	movlw	255
 33777  0041DE  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 33778  0041E0                     L75:
 33779  0041E0  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 33780                           
 33781                           ; BSR set to: 0
 33782                           ;os_timers.c: 100: }
 33783                           ;os_timers.c: 102: return TimeValue;
 33784                           
 33785                           ; BSR set to: 0
 33786  0041E2  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 33787  0041E6  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 33788  0041EA  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 33789  0041EE  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 33790  0041F2  0012               	return	
 33791  0041F4                     __end_of_GetElapsedTime:
 33792                           	opt stack 0
 33793                           tosu	equ	0xFFF
 33794                           tosh	equ	0xFFE
 33795                           tosl	equ	0xFFD
 33796                           pclath	equ	0xFFA
 33797                           tblptru	equ	0xFF8
 33798                           tblptrh	equ	0xFF7
 33799                           tblptrl	equ	0xFF6
 33800                           tablat	equ	0xFF5
 33801                           prodh	equ	0xFF4
 33802                           prodl	equ	0xFF3
 33803                           intcon	equ	0xFF2
 33804                           intcon2	equ	0xFF1
 33805                           intcon3	equ	0xFF0
 33806                           indf0	equ	0xFEF
 33807                           postinc0	equ	0xFEE
 33808                           plusw0	equ	0xFEB
 33809                           fsr0h	equ	0xFEA
 33810                           fsr0l	equ	0xFE9
 33811                           wreg	equ	0xFE8
 33812                           indf1	equ	0xFE7
 33813                           postinc1	equ	0xFE6
 33814                           postdec1	equ	0xFE5
 33815                           plusw1	equ	0xFE3
 33816                           fsr1h	equ	0xFE2
 33817                           fsr1l	equ	0xFE1
 33818                           indf2	equ	0xFDF
 33819                           postinc2	equ	0xFDE
 33820                           postdec2	equ	0xFDD
 33821                           plusw2	equ	0xFDB
 33822                           fsr2h	equ	0xFDA
 33823                           fsr2l	equ	0xFD9
 33824                           status	equ	0xFD8
 33825                           
 33826 ;; *************** function _GetOsTickCounter *****************
 33827 ;; Defined at:
 33828 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33829 ;; Parameters:    Size  Location     Type
 33830 ;;		None
 33831 ;; Auto vars:     Size  Location     Type
 33832 ;;		None
 33833 ;; Return value:  Size  Location     Type
 33834 ;;                  4   29[BANK0 ] unsigned long 
 33835 ;; Registers used:
 33836 ;;		None
 33837 ;; Tracked objects:
 33838 ;;		On entry : 0/0
 33839 ;;		On exit  : 0/0
 33840 ;;		Unchanged: 0/0
 33841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33842 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33845 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33846 ;;Total ram usage:        4 bytes
 33847 ;; Hardware stack levels used:    1
 33848 ;; Hardware stack levels required when called:   11
 33849 ;; This function calls:
 33850 ;;		Nothing
 33851 ;; This function is called by:
 33852 ;;		_GetElapsedTime
 33853 ;;		_OsTmr_StartTimer
 33854 ;;		_OsTmr_GetElapsedTime
 33855 ;; This function uses a non-reentrant model
 33856 ;;
 33857                           
 33858                           	psect	text156
 33859  006CB8                     __ptext156:
 33860                           	opt stack 0
 33861  006CB8                     _GetOsTickCounter:
 33862                           	opt stack 12
 33863                           
 33864                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 33865                           
 33866                           ; BSR set to: 0
 33867                           ;incstack = 0
 33868  006CB8  C314  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 33869  006CBC  C315  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 33870  006CC0  C316  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 33871  006CC4  C317  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 33872  006CC8  0012               	return		;funcret
 33873  006CCA                     __end_of_GetOsTickCounter:
 33874                           	opt stack 0
 33875                           tosu	equ	0xFFF
 33876                           tosh	equ	0xFFE
 33877                           tosl	equ	0xFFD
 33878                           pclath	equ	0xFFA
 33879                           tblptru	equ	0xFF8
 33880                           tblptrh	equ	0xFF7
 33881                           tblptrl	equ	0xFF6
 33882                           tablat	equ	0xFF5
 33883                           prodh	equ	0xFF4
 33884                           prodl	equ	0xFF3
 33885                           intcon	equ	0xFF2
 33886                           intcon2	equ	0xFF1
 33887                           intcon3	equ	0xFF0
 33888                           indf0	equ	0xFEF
 33889                           postinc0	equ	0xFEE
 33890                           plusw0	equ	0xFEB
 33891                           fsr0h	equ	0xFEA
 33892                           fsr0l	equ	0xFE9
 33893                           wreg	equ	0xFE8
 33894                           indf1	equ	0xFE7
 33895                           postinc1	equ	0xFE6
 33896                           postdec1	equ	0xFE5
 33897                           plusw1	equ	0xFE3
 33898                           fsr1h	equ	0xFE2
 33899                           fsr1l	equ	0xFE1
 33900                           indf2	equ	0xFDF
 33901                           postinc2	equ	0xFDE
 33902                           postdec2	equ	0xFDD
 33903                           plusw2	equ	0xFDB
 33904                           fsr2h	equ	0xFDA
 33905                           fsr2l	equ	0xFD9
 33906                           status	equ	0xFD8
 33907                           
 33908 ;; *************** function _ClearBuffer *****************
 33909 ;; Defined at:
 33910 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 33911 ;; Parameters:    Size  Location     Type
 33912 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 33913 ;;		 -> GsmGprsTerminal@UartBuffer(200), EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(5
      +0), 
 33914 ;;		 -> Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 33915 ;;  Len             2   31[BANK0 ] unsigned short 
 33916 ;; Auto vars:     Size  Location     Type
 33917 ;;  Index           2   33[BANK0 ] unsigned short 
 33918 ;; Return value:  Size  Location     Type
 33919 ;;                  1    wreg      void 
 33920 ;; Registers used:
 33921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33922 ;; Tracked objects:
 33923 ;;		On entry : 0/0
 33924 ;;		On exit  : 0/0
 33925 ;;		Unchanged: 0/0
 33926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33928 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33930 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33931 ;;Total ram usage:        6 bytes
 33932 ;; Hardware stack levels used:    1
 33933 ;; Hardware stack levels required when called:   11
 33934 ;; This function calls:
 33935 ;;		Nothing
 33936 ;; This function is called by:
 33937 ;;		_GetSmsSm
 33938 ;;		_GetCallerNumber
 33939 ;;		_InitGprsNetwork
 33940 ;;		_HttpGetMethod
 33941 ;;		_Eeprom_Reset
 33942 ;;		_GsmGprsTerminal
 33943 ;; This function uses a non-reentrant model
 33944 ;;
 33945                           
 33946                           	psect	text157
 33947  006672                     __ptext157:
 33948                           	opt stack 0
 33949  006672                     _ClearBuffer:
 33950                           	opt stack 14
 33951                           
 33952                           ;sf.c: 126: UINT16 Index = 0;
 33953                           
 33954                           ;incstack = 0
 33955  006672  0E00               	movlw	0
 33956  006674  0100               	movlb	0	; () banked
 33957  006676  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 33958  006678  0E00               	movlw	0
 33959  00667A  6F81               	movwf	ClearBuffer@Index& (0+255),b
 33960                           
 33961                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 33962  00667C  0E00               	movlw	0
 33963  00667E  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 33964  006680  0E00               	movlw	0
 33965  006682  6F81               	movwf	ClearBuffer@Index& (0+255),b
 33966  006684  D00A               	goto	l2262
 33967  006686                     
 33968                           ; BSR set to: 0
 33969                           ;sf.c: 130: {
 33970                           ;sf.c: 131: *(Buffer + Index) = 0;
 33971                           
 33972                           ; BSR set to: 0
 33973  006686  5181               	movf	ClearBuffer@Index& (0+255),w,b
 33974  006688  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 33975  00668A  6ED9               	movwf	fsr2l,c
 33976  00668C  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 33977  00668E  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 33978  006690  6EDA               	movwf	fsr2h,c
 33979  006692  0E00               	movlw	0
 33980  006694  6EDF               	movwf	indf2,c
 33981                           
 33982                           ; BSR set to: 0
 33983  006696  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 33984  006698  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 33985  00669A                     l2262:
 33986                           
 33987                           ; BSR set to: 0
 33988                           
 33989                           ; BSR set to: 0
 33990  00669A  5181               	movf	ClearBuffer@Index& (0+255),w,b
 33991  00669C  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 33992  00669E  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 33993  0066A0  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 33994  0066A2  A0D8               	btfss	status,0,c
 33995  0066A4  0012               	return	
 33996  0066A6  D7EF               	goto	l2263
 33997  0066A8                     __end_of_ClearBuffer:
 33998                           	opt stack 0
 33999                           tosu	equ	0xFFF
 34000                           tosh	equ	0xFFE
 34001                           tosl	equ	0xFFD
 34002                           pclath	equ	0xFFA
 34003                           tblptru	equ	0xFF8
 34004                           tblptrh	equ	0xFF7
 34005                           tblptrl	equ	0xFF6
 34006                           tablat	equ	0xFF5
 34007                           prodh	equ	0xFF4
 34008                           prodl	equ	0xFF3
 34009                           intcon	equ	0xFF2
 34010                           intcon2	equ	0xFF1
 34011                           intcon3	equ	0xFF0
 34012                           indf0	equ	0xFEF
 34013                           postinc0	equ	0xFEE
 34014                           plusw0	equ	0xFEB
 34015                           fsr0h	equ	0xFEA
 34016                           fsr0l	equ	0xFE9
 34017                           wreg	equ	0xFE8
 34018                           indf1	equ	0xFE7
 34019                           postinc1	equ	0xFE6
 34020                           postdec1	equ	0xFE5
 34021                           plusw1	equ	0xFE3
 34022                           fsr1h	equ	0xFE2
 34023                           fsr1l	equ	0xFE1
 34024                           indf2	equ	0xFDF
 34025                           postinc2	equ	0xFDE
 34026                           postdec2	equ	0xFDD
 34027                           plusw2	equ	0xFDB
 34028                           fsr2h	equ	0xFDA
 34029                           fsr2l	equ	0xFD9
 34030                           status	equ	0xFD8
 34031                           
 34032 ;; *************** function _LedStateMachine *****************
 34033 ;; Defined at:
 34034 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 34035 ;; Parameters:    Size  Location     Type
 34036 ;;  Led             1    wreg     unsigned char 
 34037 ;;  LedSts          2   47[BANK0 ] PTR enum E8955
 34038 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 34039 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 34040 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 34041 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 34042 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 34043 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 34044 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 34045 ;; Auto vars:     Size  Location     Type
 34046 ;;  Led             1   57[BANK0 ] unsigned char 
 34047 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 34048 ;; Return value:  Size  Location     Type
 34049 ;;                  1    wreg      unsigned char 
 34050 ;; Registers used:
 34051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34052 ;; Tracked objects:
 34053 ;;		On entry : 0/0
 34054 ;;		On exit  : 0/0
 34055 ;;		Unchanged: 0/0
 34056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34057 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34058 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34059 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34060 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34061 ;;Total ram usage:       11 bytes
 34062 ;; Hardware stack levels used:    1
 34063 ;; Hardware stack levels required when called:   13
 34064 ;; This function calls:
 34065 ;;		_LedBlinkStateMachine
 34066 ;;		_LedPulseStateMachine
 34067 ;;		_Led_SetLedStatus
 34068 ;; This function is called by:
 34069 ;;		_Led_MainTask
 34070 ;; This function uses a non-reentrant model
 34071 ;;
 34072                           
 34073                           	psect	text158
 34074  0049DA                     __ptext158:
 34075                           	opt stack 0
 34076  0049DA                     _LedStateMachine:
 34077                           	opt stack 14
 34078                           
 34079                           ; BSR set to: 0
 34080                           ;incstack = 0
 34081                           ;LedStateMachine@Led stored from wreg
 34082  0049DA  0100               	movlb	0	; () banked
 34083  0049DC  6F99               	movwf	LedStateMachine@Led& (0+255),b
 34084                           
 34085                           ;led.c: 238: UINT8 LedOutSts = 0u;
 34086  0049DE  0E00               	movlw	0
 34087  0049E0  0100               	movlb	0	; () banked
 34088  0049E2  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 34089                           
 34090                           ;led.c: 241: switch (*LedSts)
 34091  0049E4  D037               	goto	l2121
 34092  0049E6                     
 34093                           ; BSR set to: 0
 34094                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 34095                           
 34096                           ; BSR set to: 0
 34097  0049E6  0E00               	movlw	0
 34098  0049E8  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 34099                           
 34100                           ; BSR set to: 0
 34101                           ;led.c: 246: *LedOut = ((UINT8)(0));
 34102  0049EA  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 34103  0049EE  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 34104  0049F2  0E00               	movlw	0
 34105  0049F4  D007               	goto	L76
 34106  0049F6                     
 34107                           ; BSR set to: 0
 34108                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 34109                           
 34110                           ; BSR set to: 0
 34111  0049F6  0E01               	movlw	1
 34112  0049F8  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 34113                           
 34114                           ; BSR set to: 0
 34115                           ;led.c: 252: *LedOut = ((UINT8)(1));
 34116  0049FA  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 34117  0049FE  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 34118  004A02  0E01               	movlw	1
 34119  004A04                     L76:
 34120  004A04  6EDF               	movwf	indf2,c
 34121                           
 34122                           ;led.c: 253: break;
 34123  004A06  D03A               	goto	l2123
 34124  004A08                     
 34125                           ; BSR set to: 0
 34126                           ;led.c: 257: if (*LedOut == 1)
 34127                           
 34128                           ; BSR set to: 0
 34129  004A08  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 34130  004A0C  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 34131  004A10  04DE               	decf	postinc2,w,c
 34132  004A12  A4D8               	btfss	status,2,c
 34133  004A14  D006               	goto	l2126
 34134                           
 34135                           ; BSR set to: 0
 34136                           ;led.c: 258: {
 34137                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 34138  004A16  0E00               	movlw	0
 34139  004A18  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 34140  004A1A  5199               	movf	LedStateMachine@Led& (0+255),w,b
 34141  004A1C  ECE8  F033         	call	_Led_SetLedStatus
 34142                           
 34143                           ;led.c: 261: }
 34144  004A20  D02D               	goto	l2123
 34145  004A22                     l2126:
 34146                           
 34147                           ;led.c: 262: else
 34148                           ;led.c: 263: {
 34149                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 34150  004A22  0E01               	movlw	1
 34151  004A24  0100               	movlb	0	; () banked
 34152  004A26  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 34153  004A28  5199               	movf	LedStateMachine@Led& (0+255),w,b
 34154  004A2A  ECE8  F033         	call	_Led_SetLedStatus
 34155                           
 34156                           ;led.c: 266: }
 34157                           ;led.c: 267: break;
 34158  004A2E  D026               	goto	l2123
 34159  004A30                     
 34160                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 34161  004A30  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 34162  004A34  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 34163  004A38  EC1E  F014         	call	_LedBlinkStateMachine	;wreg free
 34164  004A3C  D008               	goto	L77
 34165  004A3E                     
 34166                           ; BSR set to: 0
 34167                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 34168                           
 34169                           ; BSR set to: 0
 34170  004A3E  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 34171  004A42  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 34172  004A46  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 34173  004A4A  EC4B  F01A         	call	_LedPulseStateMachine	;wreg free
 34174  004A4E                     L77:
 34175  004A4E  0100               	movlb	0	; () banked
 34176  004A50  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 34177                           
 34178                           ; BSR set to: 0
 34179                           ;led.c: 281: }
 34180                           
 34181                           ; BSR set to: 0
 34182                           ;led.c: 280: break;
 34183                           
 34184                           ;led.c: 279: default:
 34185                           
 34186                           ;led.c: 277: break;
 34187  004A52  D014               	goto	l2123
 34188  004A54                     l2121:
 34189                           
 34190                           ; BSR set to: 0
 34191                           
 34192                           ; BSR set to: 0
 34193  004A54  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 34194  004A58  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 34195  004A5C  50DF               	movf	indf2,w,c
 34196                           
 34197                           ; Switch size 1, requested type "space"
 34198                           ; Number of cases is 5, Range of values is 0 to 4
 34199                           ; switch strategies available:
 34200                           ; Name         Instructions Cycles
 34201                           ; simple_byte           16     9 (average)
 34202                           ;	Chosen strategy is simple_byte
 34203  004A5E  0A00               	xorlw	0	; case 0
 34204  004A60  B4D8               	btfsc	status,2,c
 34205  004A62  D7C1               	goto	l2122
 34206  004A64  0A01               	xorlw	1	; case 1
 34207  004A66  B4D8               	btfsc	status,2,c
 34208  004A68  D7C6               	goto	l2124
 34209  004A6A  0A03               	xorlw	3	; case 2
 34210  004A6C  B4D8               	btfsc	status,2,c
 34211  004A6E  D7CC               	goto	l2125
 34212  004A70  0A01               	xorlw	1	; case 3
 34213  004A72  B4D8               	btfsc	status,2,c
 34214  004A74  D7DD               	goto	l2128
 34215  004A76  0A07               	xorlw	7	; case 4
 34216  004A78  B4D8               	btfsc	status,2,c
 34217  004A7A  D7E1               	goto	l2129
 34218  004A7C                     l2123:
 34219                           
 34220                           ;led.c: 283: return LedOutSts;
 34221                           
 34222                           ; BSR set to: 0
 34223  004A7C  0100               	movlb	0	; () banked
 34224  004A7E  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 34225  004A80  0012               	return	
 34226  004A82                     __end_of_LedStateMachine:
 34227                           	opt stack 0
 34228                           tosu	equ	0xFFF
 34229                           tosh	equ	0xFFE
 34230                           tosl	equ	0xFFD
 34231                           pclath	equ	0xFFA
 34232                           tblptru	equ	0xFF8
 34233                           tblptrh	equ	0xFF7
 34234                           tblptrl	equ	0xFF6
 34235                           tablat	equ	0xFF5
 34236                           prodh	equ	0xFF4
 34237                           prodl	equ	0xFF3
 34238                           intcon	equ	0xFF2
 34239                           intcon2	equ	0xFF1
 34240                           intcon3	equ	0xFF0
 34241                           indf0	equ	0xFEF
 34242                           postinc0	equ	0xFEE
 34243                           plusw0	equ	0xFEB
 34244                           fsr0h	equ	0xFEA
 34245                           fsr0l	equ	0xFE9
 34246                           wreg	equ	0xFE8
 34247                           indf1	equ	0xFE7
 34248                           postinc1	equ	0xFE6
 34249                           postdec1	equ	0xFE5
 34250                           plusw1	equ	0xFE3
 34251                           fsr1h	equ	0xFE2
 34252                           fsr1l	equ	0xFE1
 34253                           indf2	equ	0xFDF
 34254                           postinc2	equ	0xFDE
 34255                           postdec2	equ	0xFDD
 34256                           plusw2	equ	0xFDB
 34257                           fsr2h	equ	0xFDA
 34258                           fsr2l	equ	0xFD9
 34259                           status	equ	0xFD8
 34260                           
 34261 ;; *************** function _LedPulseStateMachine *****************
 34262 ;; Defined at:
 34263 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 34264 ;; Parameters:    Size  Location     Type
 34265 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 34266 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 34267 ;;  Led             1   44[BANK0 ] unsigned char 
 34268 ;; Auto vars:     Size  Location     Type
 34269 ;;		None
 34270 ;; Return value:  Size  Location     Type
 34271 ;;                  1    wreg      unsigned char 
 34272 ;; Registers used:
 34273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34274 ;; Tracked objects:
 34275 ;;		On entry : 0/0
 34276 ;;		On exit  : 0/0
 34277 ;;		Unchanged: 0/0
 34278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34279 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34281 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34282 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34283 ;;Total ram usage:        5 bytes
 34284 ;; Hardware stack levels used:    1
 34285 ;; Hardware stack levels required when called:   12
 34286 ;; This function calls:
 34287 ;;		_Led_SetLedStatus
 34288 ;;		___lwdiv
 34289 ;; This function is called by:
 34290 ;;		_LedStateMachine
 34291 ;; This function uses a non-reentrant model
 34292 ;;
 34293                           
 34294                           	psect	text159
 34295  003496                     __ptext159:
 34296                           	opt stack 0
 34297  003496                     _LedPulseStateMachine:
 34298                           	opt stack 14
 34299                           
 34300                           ;led.c: 185: switch (LedPulse->LedPulseState)
 34301                           
 34302                           ; BSR set to: 0
 34303                           ;incstack = 0
 34304  003496  D05C               	goto	l2111
 34305  003498                     
 34306                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 34307  003498  0100               	movlb	0	; () banked
 34308  00349A  EE20 F001          	lfsr	2,1
 34309  00349E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34310  0034A0  26D9               	addwf	fsr2l,f,c
 34311  0034A2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34312  0034A4  22DA               	addwfc	fsr2h,f,c
 34313  0034A6  0E01               	movlw	1
 34314  0034A8  6EDF               	movwf	indf2,c
 34315                           
 34316                           ; BSR set to: 0
 34317                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 34318  0034AA  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 34319  0034AE  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 34320  0034B2  0E01               	movlw	1
 34321  0034B4  D036               	goto	L78
 34322  0034B6                     
 34323                           ;led.c: 196: LedPulse->LedPulseCounter++;
 34324                           
 34325                           ; BSR set to: 0
 34326  0034B6  0100               	movlb	0	; () banked
 34327  0034B8  EE20 F002          	lfsr	2,2
 34328  0034BC  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34329  0034BE  26D9               	addwf	fsr2l,f,c
 34330  0034C0  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34331  0034C2  22DA               	addwfc	fsr2h,f,c
 34332  0034C4  2ADE               	incf	postinc2,f,c
 34333  0034C6  0E00               	movlw	0
 34334  0034C8  22DD               	addwfc	postdec2,f,c
 34335                           
 34336                           ; BSR set to: 0
 34337                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 34338  0034CA  EE20 F004          	lfsr	2,4
 34339  0034CE  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34340  0034D0  26D9               	addwf	fsr2l,f,c
 34341  0034D2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34342  0034D4  22DA               	addwfc	fsr2h,f,c
 34343  0034D6  CFDE F083          	movff	postinc2,___lwdiv@dividend
 34344  0034DA  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 34345  0034DE  0E00               	movlw	0
 34346  0034E0  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 34347  0034E2  0E32               	movlw	50
 34348  0034E4  6F85               	movwf	___lwdiv@divisor& (0+255),b
 34349  0034E6  EC08  F02F         	call	___lwdiv	;wreg free
 34350  0034EA  0100               	movlb	0	; () banked
 34351  0034EC  EE20 F002          	lfsr	2,2
 34352  0034F0  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34353  0034F2  26D9               	addwf	fsr2l,f,c
 34354  0034F4  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34355  0034F6  22DA               	addwfc	fsr2h,f,c
 34356  0034F8  5183               	movf	?___lwdiv& (0+255),w,b
 34357  0034FA  5CDE               	subwf	postinc2,w,c
 34358  0034FC  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 34359  0034FE  58DE               	subwfb	postinc2,w,c
 34360  003500  A0D8               	btfss	status,0,c
 34361  003502  D034               	goto	l2113
 34362                           
 34363                           ; BSR set to: 0
 34364                           ;led.c: 199: {
 34365                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 34366  003504  EE20 F002          	lfsr	2,2
 34367  003508  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34368  00350A  26D9               	addwf	fsr2l,f,c
 34369  00350C  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34370  00350E  22DA               	addwfc	fsr2h,f,c
 34371  003510  0E00               	movlw	0
 34372  003512  6EDE               	movwf	postinc2,c
 34373  003514  0E00               	movlw	0
 34374  003516  6EDD               	movwf	postdec2,c
 34375                           
 34376                           ; BSR set to: 0
 34377                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 34378  003518  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 34379  00351C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 34380  003520  0E02               	movlw	2
 34381  003522                     L78:
 34382  003522  6EDF               	movwf	indf2,c
 34383                           
 34384                           ; BSR set to: 0
 34385                           ;led.c: 204: }
 34386                           ;led.c: 205: break;
 34387  003524  D023               	goto	l2113
 34388  003526                     
 34389                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 34390                           
 34391                           ; BSR set to: 0
 34392  003526  0100               	movlb	0	; () banked
 34393  003528  EE20 F001          	lfsr	2,1
 34394  00352C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34395  00352E  26D9               	addwf	fsr2l,f,c
 34396  003530  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34397  003532  22DA               	addwfc	fsr2h,f,c
 34398  003534  0E00               	movlw	0
 34399  003536  6EDF               	movwf	indf2,c
 34400                           
 34401                           ; BSR set to: 0
 34402                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 34403  003538  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 34404  00353C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 34405  003540  0E00               	movlw	0
 34406  003542  6EDF               	movwf	indf2,c
 34407                           
 34408                           ; BSR set to: 0
 34409                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 34410  003544  0E00               	movlw	0
 34411  003546  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 34412  003548  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 34413  00354A  ECE8  F033         	call	_Led_SetLedStatus
 34414                           
 34415                           ;led.c: 218: }
 34416                           
 34417                           ;led.c: 217: break;
 34418                           
 34419                           ;led.c: 216: default:
 34420                           
 34421                           ;led.c: 214: break;
 34422  00354E  D00E               	goto	l2113
 34423  003550                     l2111:
 34424  003550  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 34425  003554  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 34426  003558  50DF               	movf	indf2,w,c
 34427                           
 34428                           ; Switch size 1, requested type "space"
 34429                           ; Number of cases is 3, Range of values is 0 to 2
 34430                           ; switch strategies available:
 34431                           ; Name         Instructions Cycles
 34432                           ; simple_byte           10     6 (average)
 34433                           ;	Chosen strategy is simple_byte
 34434  00355A  0A00               	xorlw	0	; case 0
 34435  00355C  B4D8               	btfsc	status,2,c
 34436  00355E  D79C               	goto	l2112
 34437  003560  0A01               	xorlw	1	; case 1
 34438  003562  B4D8               	btfsc	status,2,c
 34439  003564  D7A8               	goto	l2114
 34440  003566  0A03               	xorlw	3	; case 2
 34441  003568  B4D8               	btfsc	status,2,c
 34442  00356A  D7DD               	goto	l2116
 34443  00356C                     l2113:
 34444                           
 34445                           ;led.c: 221: return (LedPulse->LedOutState);
 34446  00356C  0100               	movlb	0	; () banked
 34447  00356E  EE20 F001          	lfsr	2,1
 34448  003572  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34449  003574  26D9               	addwf	fsr2l,f,c
 34450  003576  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34451  003578  22DA               	addwfc	fsr2h,f,c
 34452  00357A  50DF               	movf	indf2,w,c
 34453  00357C  0012               	return	
 34454  00357E                     __end_of_LedPulseStateMachine:
 34455                           	opt stack 0
 34456                           tosu	equ	0xFFF
 34457                           tosh	equ	0xFFE
 34458                           tosl	equ	0xFFD
 34459                           pclath	equ	0xFFA
 34460                           tblptru	equ	0xFF8
 34461                           tblptrh	equ	0xFF7
 34462                           tblptrl	equ	0xFF6
 34463                           tablat	equ	0xFF5
 34464                           prodh	equ	0xFF4
 34465                           prodl	equ	0xFF3
 34466                           intcon	equ	0xFF2
 34467                           intcon2	equ	0xFF1
 34468                           intcon3	equ	0xFF0
 34469                           indf0	equ	0xFEF
 34470                           postinc0	equ	0xFEE
 34471                           plusw0	equ	0xFEB
 34472                           fsr0h	equ	0xFEA
 34473                           fsr0l	equ	0xFE9
 34474                           wreg	equ	0xFE8
 34475                           indf1	equ	0xFE7
 34476                           postinc1	equ	0xFE6
 34477                           postdec1	equ	0xFE5
 34478                           plusw1	equ	0xFE3
 34479                           fsr1h	equ	0xFE2
 34480                           fsr1l	equ	0xFE1
 34481                           indf2	equ	0xFDF
 34482                           postinc2	equ	0xFDE
 34483                           postdec2	equ	0xFDD
 34484                           plusw2	equ	0xFDB
 34485                           fsr2h	equ	0xFDA
 34486                           fsr2l	equ	0xFD9
 34487                           status	equ	0xFD8
 34488                           
 34489 ;; *************** function _Led_SetLedStatus *****************
 34490 ;; Defined at:
 34491 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 34492 ;; Parameters:    Size  Location     Type
 34493 ;;  Led             1    wreg     unsigned char 
 34494 ;;  LedSts          1   29[BANK0 ] enum E8955
 34495 ;; Auto vars:     Size  Location     Type
 34496 ;;  Led             1   30[BANK0 ] unsigned char 
 34497 ;; Return value:  Size  Location     Type
 34498 ;;                  1    wreg      void 
 34499 ;; Registers used:
 34500 ;;		wreg, status,2, status,0
 34501 ;; Tracked objects:
 34502 ;;		On entry : 0/0
 34503 ;;		On exit  : 0/0
 34504 ;;		Unchanged: 0/0
 34505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34506 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34507 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34509 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34510 ;;Total ram usage:        2 bytes
 34511 ;; Hardware stack levels used:    1
 34512 ;; Hardware stack levels required when called:   11
 34513 ;; This function calls:
 34514 ;;		Nothing
 34515 ;; This function is called by:
 34516 ;;		_LedPulseStateMachine
 34517 ;;		_LedStateMachine
 34518 ;;		_waitSetupCall
 34519 ;;		_initFsm
 34520 ;;		_cmdVisualEffet
 34521 ;; This function uses a non-reentrant model
 34522 ;;
 34523                           
 34524                           	psect	text160
 34525  0067D0                     __ptext160:
 34526                           	opt stack 0
 34527  0067D0                     _Led_SetLedStatus:
 34528                           	opt stack 14
 34529                           
 34530                           ; BSR set to: 0
 34531                           ;incstack = 0
 34532                           ;Led_SetLedStatus@Led stored from wreg
 34533  0067D0  0100               	movlb	0	; () banked
 34534  0067D2  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 34535                           
 34536                           ;led.c: 341: switch (Led)
 34537  0067D4  D009               	goto	l2142
 34538  0067D6                     l2143:
 34539                           
 34540                           ; BSR set to: 0
 34541                           ;led.c: 344: Led1Sts = LedSts;
 34542  0067D6  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 34543                           
 34544                           ;led.c: 345: break;
 34545  0067DA  0012               	return	
 34546  0067DC                     l2145:
 34547                           
 34548                           ; BSR set to: 0
 34549                           ;led.c: 348: Led2Sts = LedSts;
 34550  0067DC  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 34551                           
 34552                           ;led.c: 349: break;
 34553  0067E0  0012               	return	
 34554  0067E2                     l2146:
 34555                           
 34556                           ; BSR set to: 0
 34557                           ;led.c: 352: Led3Sts = LedSts;
 34558  0067E2  C07D  F1F5         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 34559                           
 34560                           ; BSR set to: 0
 34561                           ;led.c: 357: }
 34562                           
 34563                           ; BSR set to: 0
 34564                           ;led.c: 356: break;
 34565                           
 34566                           ;led.c: 355: default:
 34567                           
 34568                           ;led.c: 353: break;
 34569  0067E6  0012               	return	
 34570  0067E8                     l2142:
 34571                           
 34572                           ; BSR set to: 0
 34573  0067E8  0100               	movlb	0	; () banked
 34574  0067EA  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 34575                           
 34576                           ; Switch size 1, requested type "space"
 34577                           ; Number of cases is 3, Range of values is 1 to 3
 34578                           ; switch strategies available:
 34579                           ; Name         Instructions Cycles
 34580                           ; simple_byte           10     6 (average)
 34581                           ;	Chosen strategy is simple_byte
 34582  0067EC  0A01               	xorlw	1	; case 1
 34583  0067EE  B4D8               	btfsc	status,2,c
 34584  0067F0  D7F2               	goto	l2143
 34585  0067F2  0A03               	xorlw	3	; case 2
 34586  0067F4  B4D8               	btfsc	status,2,c
 34587  0067F6  D7F2               	goto	l2145
 34588  0067F8  0A01               	xorlw	1	; case 3
 34589  0067FA  A4D8               	btfss	status,2,c
 34590  0067FC  0012               	return	
 34591  0067FE  D7F1               	goto	l2146
 34592  006800                     __end_of_Led_SetLedStatus:
 34593                           	opt stack 0
 34594                           tosu	equ	0xFFF
 34595                           tosh	equ	0xFFE
 34596                           tosl	equ	0xFFD
 34597                           pclath	equ	0xFFA
 34598                           tblptru	equ	0xFF8
 34599                           tblptrh	equ	0xFF7
 34600                           tblptrl	equ	0xFF6
 34601                           tablat	equ	0xFF5
 34602                           prodh	equ	0xFF4
 34603                           prodl	equ	0xFF3
 34604                           intcon	equ	0xFF2
 34605                           intcon2	equ	0xFF1
 34606                           intcon3	equ	0xFF0
 34607                           indf0	equ	0xFEF
 34608                           postinc0	equ	0xFEE
 34609                           plusw0	equ	0xFEB
 34610                           fsr0h	equ	0xFEA
 34611                           fsr0l	equ	0xFE9
 34612                           wreg	equ	0xFE8
 34613                           indf1	equ	0xFE7
 34614                           postinc1	equ	0xFE6
 34615                           postdec1	equ	0xFE5
 34616                           plusw1	equ	0xFE3
 34617                           fsr1h	equ	0xFE2
 34618                           fsr1l	equ	0xFE1
 34619                           indf2	equ	0xFDF
 34620                           postinc2	equ	0xFDE
 34621                           postdec2	equ	0xFDD
 34622                           plusw2	equ	0xFDB
 34623                           fsr2h	equ	0xFDA
 34624                           fsr2l	equ	0xFD9
 34625                           status	equ	0xFD8
 34626                           
 34627 ;; *************** function _LedBlinkStateMachine *****************
 34628 ;; Defined at:
 34629 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 34630 ;; Parameters:    Size  Location     Type
 34631 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 34632 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 34633 ;; Auto vars:     Size  Location     Type
 34634 ;;		None
 34635 ;; Return value:  Size  Location     Type
 34636 ;;                  1    wreg      unsigned char 
 34637 ;; Registers used:
 34638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34639 ;; Tracked objects:
 34640 ;;		On entry : 0/0
 34641 ;;		On exit  : 0/0
 34642 ;;		Unchanged: 0/0
 34643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34644 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34646 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34647 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34648 ;;Total ram usage:        4 bytes
 34649 ;; Hardware stack levels used:    1
 34650 ;; Hardware stack levels required when called:   12
 34651 ;; This function calls:
 34652 ;;		___lwdiv
 34653 ;; This function is called by:
 34654 ;;		_LedStateMachine
 34655 ;; This function uses a non-reentrant model
 34656 ;;
 34657                           
 34658                           	psect	text161
 34659  00283C                     __ptext161:
 34660                           	opt stack 0
 34661  00283C                     _LedBlinkStateMachine:
 34662                           	opt stack 14
 34663                           
 34664                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 34665                           
 34666                           ; BSR set to: 0
 34667                           ;incstack = 0
 34668  00283C  D08F               	goto	l2098
 34669  00283E                     
 34670                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 34671  00283E  0100               	movlb	0	; () banked
 34672  002840  EE20 F008          	lfsr	2,8
 34673  002844  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34674  002846  26D9               	addwf	fsr2l,f,c
 34675  002848  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34676  00284A  22DA               	addwfc	fsr2h,f,c
 34677  00284C  EE10 F001          	lfsr	1,1
 34678  002850  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34679  002852  26E1               	addwf	fsr1l,f,c
 34680  002854  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34681  002856  22E2               	addwfc	fsr1h,f,c
 34682  002858  CFDF FFE7          	movff	indf2,indf1
 34683                           
 34684                           ; BSR set to: 0
 34685                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 34686  00285C  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 34687  002860  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 34688  002864  D040               	goto	L79
 34689  002866                     
 34690                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 34691                           
 34692                           ; BSR set to: 0
 34693  002866  0100               	movlb	0	; () banked
 34694  002868  EE20 F002          	lfsr	2,2
 34695  00286C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34696  00286E  26D9               	addwf	fsr2l,f,c
 34697  002870  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34698  002872  22DA               	addwfc	fsr2h,f,c
 34699  002874  2ADE               	incf	postinc2,f,c
 34700  002876  0E00               	movlw	0
 34701  002878  22DD               	addwfc	postdec2,f,c
 34702                           
 34703                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 34704  00287A  EE20 F001          	lfsr	2,1
 34705  00287E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34706  002880  26D9               	addwf	fsr2l,f,c
 34707  002882  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34708  002884  22DA               	addwfc	fsr2h,f,c
 34709  002886  50DF               	movf	indf2,w,c
 34710  002888  A4D8               	btfss	status,2,c
 34711  00288A  D02F               	goto	l2102
 34712                           
 34713                           ; BSR set to: 0
 34714                           ;led.c: 142: {
 34715                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 34716  00288C  EE20 F006          	lfsr	2,6
 34717  002890  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34718  002892  26D9               	addwf	fsr2l,f,c
 34719  002894  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34720  002896  22DA               	addwfc	fsr2h,f,c
 34721  002898  CFDE F083          	movff	postinc2,___lwdiv@dividend
 34722  00289C  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 34723  0028A0  0E00               	movlw	0
 34724  0028A2  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 34725  0028A4  0E32               	movlw	50
 34726  0028A6  6F85               	movwf	___lwdiv@divisor& (0+255),b
 34727  0028A8  EC08  F02F         	call	___lwdiv	;wreg free
 34728  0028AC  0100               	movlb	0	; () banked
 34729  0028AE  EE20 F002          	lfsr	2,2
 34730  0028B2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34731  0028B4  26D9               	addwf	fsr2l,f,c
 34732  0028B6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34733  0028B8  22DA               	addwfc	fsr2h,f,c
 34734  0028BA  5183               	movf	?___lwdiv& (0+255),w,b
 34735  0028BC  5CDE               	subwf	postinc2,w,c
 34736  0028BE  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 34737  0028C0  58DE               	subwfb	postinc2,w,c
 34738  0028C2  A0D8               	btfss	status,0,c
 34739  0028C4  D056               	goto	l2100
 34740                           
 34741                           ; BSR set to: 0
 34742                           ;led.c: 145: {
 34743                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 34744  0028C6  EE20 F002          	lfsr	2,2
 34745  0028CA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34746  0028CC  26D9               	addwf	fsr2l,f,c
 34747  0028CE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34748  0028D0  22DA               	addwfc	fsr2h,f,c
 34749  0028D2  0E00               	movlw	0
 34750  0028D4  6EDE               	movwf	postinc2,c
 34751  0028D6  0E00               	movlw	0
 34752  0028D8  6EDD               	movwf	postdec2,c
 34753                           
 34754                           ;led.c: 149: LedBlink->LedOutState = OnState;
 34755  0028DA  EE20 F001          	lfsr	2,1
 34756  0028DE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34757  0028E0  26D9               	addwf	fsr2l,f,c
 34758  0028E2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34759  0028E4  22DA               	addwfc	fsr2h,f,c
 34760  0028E6                     L79:
 34761  0028E6  0E01               	movlw	1
 34762  0028E8  D037               	goto	L80
 34763  0028EA                     l2102:
 34764                           
 34765                           ; BSR set to: 0
 34766                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 34767                           
 34768                           ; BSR set to: 0
 34769  0028EA  EE20 F001          	lfsr	2,1
 34770  0028EE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34771  0028F0  26D9               	addwf	fsr2l,f,c
 34772  0028F2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34773  0028F4  22DA               	addwfc	fsr2h,f,c
 34774  0028F6  04DE               	decf	postinc2,w,c
 34775  0028F8  A4D8               	btfss	status,2,c
 34776  0028FA  D03B               	goto	l2100
 34777                           
 34778                           ; BSR set to: 0
 34779                           ;led.c: 153: {
 34780                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 34781  0028FC  EE20 F004          	lfsr	2,4
 34782  002900  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34783  002902  26D9               	addwf	fsr2l,f,c
 34784  002904  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34785  002906  22DA               	addwfc	fsr2h,f,c
 34786  002908  CFDE F083          	movff	postinc2,___lwdiv@dividend
 34787  00290C  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 34788  002910  0E00               	movlw	0
 34789  002912  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 34790  002914  0E32               	movlw	50
 34791  002916  6F85               	movwf	___lwdiv@divisor& (0+255),b
 34792  002918  EC08  F02F         	call	___lwdiv	;wreg free
 34793  00291C  0100               	movlb	0	; () banked
 34794  00291E  EE20 F002          	lfsr	2,2
 34795  002922  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34796  002924  26D9               	addwf	fsr2l,f,c
 34797  002926  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34798  002928  22DA               	addwfc	fsr2h,f,c
 34799  00292A  5183               	movf	?___lwdiv& (0+255),w,b
 34800  00292C  5CDE               	subwf	postinc2,w,c
 34801  00292E  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 34802  002930  58DE               	subwfb	postinc2,w,c
 34803  002932  A0D8               	btfss	status,0,c
 34804  002934  D01E               	goto	l2100
 34805                           
 34806                           ; BSR set to: 0
 34807                           ;led.c: 156: {
 34808                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 34809  002936  EE20 F002          	lfsr	2,2
 34810  00293A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34811  00293C  26D9               	addwf	fsr2l,f,c
 34812  00293E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34813  002940  22DA               	addwfc	fsr2h,f,c
 34814  002942  0E00               	movlw	0
 34815  002944  6EDE               	movwf	postinc2,c
 34816  002946  0E00               	movlw	0
 34817  002948  6EDD               	movwf	postdec2,c
 34818                           
 34819                           ;led.c: 160: LedBlink->LedOutState = OffState;
 34820  00294A  EE20 F001          	lfsr	2,1
 34821  00294E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34822  002950  26D9               	addwf	fsr2l,f,c
 34823  002952  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34824  002954  22DA               	addwfc	fsr2h,f,c
 34825  002956  0E00               	movlw	0
 34826  002958                     L80:
 34827  002958  6EDF               	movwf	indf2,c
 34828                           
 34829                           ; BSR set to: 0
 34830                           ;led.c: 167: }
 34831                           
 34832                           ; BSR set to: 0
 34833                           ;led.c: 166: break;
 34834                           
 34835                           ;led.c: 165: default:
 34836                           
 34837                           ; BSR set to: 0
 34838                           ;led.c: 161: }
 34839                           ;led.c: 162: }
 34840                           ;led.c: 163: break;
 34841                           
 34842                           ; BSR set to: 0
 34843                           
 34844                           ; BSR set to: 0
 34845  00295A  D00B               	goto	l2100
 34846  00295C                     l2098:
 34847                           
 34848                           ; BSR set to: 0
 34849  00295C  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 34850  002960  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 34851  002964  50DF               	movf	indf2,w,c
 34852                           
 34853                           ; Switch size 1, requested type "space"
 34854                           ; Number of cases is 2, Range of values is 0 to 1
 34855                           ; switch strategies available:
 34856                           ; Name         Instructions Cycles
 34857                           ; simple_byte            7     4 (average)
 34858                           ;	Chosen strategy is simple_byte
 34859  002966  0A00               	xorlw	0	; case 0
 34860  002968  B4D8               	btfsc	status,2,c
 34861  00296A  D769               	goto	l2099
 34862  00296C  0A01               	xorlw	1	; case 1
 34863  00296E  B4D8               	btfsc	status,2,c
 34864  002970  D77A               	goto	l2101
 34865  002972                     l2100:
 34866                           
 34867                           ;led.c: 170: return (LedBlink->LedOutState);
 34868  002972  0100               	movlb	0	; () banked
 34869  002974  EE20 F001          	lfsr	2,1
 34870  002978  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34871  00297A  26D9               	addwf	fsr2l,f,c
 34872  00297C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34873  00297E  22DA               	addwfc	fsr2h,f,c
 34874  002980  50DF               	movf	indf2,w,c
 34875  002982  0012               	return	
 34876  002984                     __end_of_LedBlinkStateMachine:
 34877                           	opt stack 0
 34878                           tosu	equ	0xFFF
 34879                           tosh	equ	0xFFE
 34880                           tosl	equ	0xFFD
 34881                           pclath	equ	0xFFA
 34882                           tblptru	equ	0xFF8
 34883                           tblptrh	equ	0xFF7
 34884                           tblptrl	equ	0xFF6
 34885                           tablat	equ	0xFF5
 34886                           prodh	equ	0xFF4
 34887                           prodl	equ	0xFF3
 34888                           intcon	equ	0xFF2
 34889                           intcon2	equ	0xFF1
 34890                           intcon3	equ	0xFF0
 34891                           indf0	equ	0xFEF
 34892                           postinc0	equ	0xFEE
 34893                           plusw0	equ	0xFEB
 34894                           fsr0h	equ	0xFEA
 34895                           fsr0l	equ	0xFE9
 34896                           wreg	equ	0xFE8
 34897                           indf1	equ	0xFE7
 34898                           postinc1	equ	0xFE6
 34899                           postdec1	equ	0xFE5
 34900                           plusw1	equ	0xFE3
 34901                           fsr1h	equ	0xFE2
 34902                           fsr1l	equ	0xFE1
 34903                           indf2	equ	0xFDF
 34904                           postinc2	equ	0xFDE
 34905                           postdec2	equ	0xFDD
 34906                           plusw2	equ	0xFDB
 34907                           fsr2h	equ	0xFDA
 34908                           fsr2l	equ	0xFD9
 34909                           status	equ	0xFD8
 34910                           
 34911 ;; *************** function ___lwdiv *****************
 34912 ;; Defined at:
 34913 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 34914 ;; Parameters:    Size  Location     Type
 34915 ;;  dividend        2   35[BANK0 ] unsigned int 
 34916 ;;  divisor         2   37[BANK0 ] unsigned int 
 34917 ;; Auto vars:     Size  Location     Type
 34918 ;;  quotient        2   40[BANK0 ] unsigned int 
 34919 ;;  counter         1   39[BANK0 ] unsigned char 
 34920 ;; Return value:  Size  Location     Type
 34921 ;;                  2   35[BANK0 ] unsigned int 
 34922 ;; Registers used:
 34923 ;;		wreg, status,2, status,0
 34924 ;; Tracked objects:
 34925 ;;		On entry : 0/0
 34926 ;;		On exit  : 0/0
 34927 ;;		Unchanged: 0/0
 34928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34929 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34930 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34932 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34933 ;;Total ram usage:        7 bytes
 34934 ;; Hardware stack levels used:    1
 34935 ;; Hardware stack levels required when called:   11
 34936 ;; This function calls:
 34937 ;;		Nothing
 34938 ;; This function is called by:
 34939 ;;		_LedBlinkStateMachine
 34940 ;;		_LedPulseStateMachine
 34941 ;;		_secondsAppTimer
 34942 ;;		_utoa
 34943 ;; This function uses a non-reentrant model
 34944 ;;
 34945                           
 34946                           	psect	text162
 34947  005E10                     __ptext162:
 34948                           	opt stack 0
 34949  005E10                     ___lwdiv:
 34950                           	opt stack 14
 34951                           
 34952                           ; BSR set to: 0
 34953                           ;incstack = 0
 34954  005E10  0E00               	movlw	0
 34955  005E12  0100               	movlb	0	; () banked
 34956  005E14  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 34957  005E16  0E00               	movlw	0
 34958  005E18  6F88               	movwf	___lwdiv@quotient& (0+255),b
 34959                           
 34960                           ; BSR set to: 0
 34961  005E1A  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34962  005E1C  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 34963  005E1E  B4D8               	btfsc	status,2,c
 34964  005E20  D01C               	goto	l3428
 34965                           
 34966                           ; BSR set to: 0
 34967  005E22  0E01               	movlw	1
 34968  005E24  6F87               	movwf	___lwdiv@counter& (0+255),b
 34969  005E26  D004               	goto	l3423
 34970  005E28                     
 34971                           ; BSR set to: 0
 34972                           
 34973                           ; BSR set to: 0
 34974  005E28  90D8               	bcf	status,0,c
 34975  005E2A  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 34976  005E2C  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 34977  005E2E  2B87               	incf	___lwdiv@counter& (0+255),f,b
 34978  005E30                     l3423:
 34979                           
 34980                           ; BSR set to: 0
 34981                           
 34982                           ; BSR set to: 0
 34983  005E30  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 34984  005E32  D7FA               	goto	l3424
 34985  005E34                     u12360:
 34986                           
 34987                           ; BSR set to: 0
 34988                           
 34989                           ; BSR set to: 0
 34990                           
 34991                           ; BSR set to: 0
 34992  005E34  90D8               	bcf	status,0,c
 34993  005E36  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 34994  005E38  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 34995                           
 34996                           ; BSR set to: 0
 34997  005E3A  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34998  005E3C  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 34999  005E3E  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 35000  005E40  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 35001  005E42  A0D8               	btfss	status,0,c
 35002  005E44  D005               	goto	l3427
 35003                           
 35004                           ; BSR set to: 0
 35005  005E46  5185               	movf	___lwdiv@divisor& (0+255),w,b
 35006  005E48  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 35007  005E4A  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 35008  005E4C  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 35009                           
 35010                           ; BSR set to: 0
 35011  005E4E  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 35012  005E50                     l3427:
 35013                           
 35014                           ; BSR set to: 0
 35015                           
 35016                           ; BSR set to: 0
 35017  005E50  90D8               	bcf	status,0,c
 35018  005E52  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 35019  005E54  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 35020                           
 35021                           ; BSR set to: 0
 35022  005E56  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 35023  005E58  D7ED               	goto	u12360
 35024  005E5A                     l3428:
 35025                           
 35026                           ; BSR set to: 0
 35027                           
 35028                           ; BSR set to: 0
 35029  005E5A  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 35030  005E5E  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 35031                           
 35032                           ; BSR set to: 0
 35033  005E62  0012               	return		;funcret
 35034  005E64                     __end_of___lwdiv:
 35035                           	opt stack 0
 35036                           tosu	equ	0xFFF
 35037                           tosh	equ	0xFFE
 35038                           tosl	equ	0xFFD
 35039                           pclath	equ	0xFFA
 35040                           tblptru	equ	0xFF8
 35041                           tblptrh	equ	0xFF7
 35042                           tblptrl	equ	0xFF6
 35043                           tablat	equ	0xFF5
 35044                           prodh	equ	0xFF4
 35045                           prodl	equ	0xFF3
 35046                           intcon	equ	0xFF2
 35047                           intcon2	equ	0xFF1
 35048                           intcon3	equ	0xFF0
 35049                           indf0	equ	0xFEF
 35050                           postinc0	equ	0xFEE
 35051                           plusw0	equ	0xFEB
 35052                           fsr0h	equ	0xFEA
 35053                           fsr0l	equ	0xFE9
 35054                           wreg	equ	0xFE8
 35055                           indf1	equ	0xFE7
 35056                           postinc1	equ	0xFE6
 35057                           postdec1	equ	0xFE5
 35058                           plusw1	equ	0xFE3
 35059                           fsr1h	equ	0xFE2
 35060                           fsr1l	equ	0xFE1
 35061                           indf2	equ	0xFDF
 35062                           postinc2	equ	0xFDE
 35063                           postdec2	equ	0xFDD
 35064                           plusw2	equ	0xFDB
 35065                           fsr2h	equ	0xFDA
 35066                           fsr2l	equ	0xFD9
 35067                           status	equ	0xFD8
 35068                           
 35069 ;; *************** function _OsAlrm_SetOsAlarm *****************
 35070 ;; Defined at:
 35071 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 35072 ;; Parameters:    Size  Location     Type
 35073 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 35074 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 35075 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 35076 ;;		 -> I2cDummyTx(1), 
 35077 ;; Auto vars:     Size  Location     Type
 35078 ;;		None
 35079 ;; Return value:  Size  Location     Type
 35080 ;;                  1    wreg      void 
 35081 ;; Registers used:
 35082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35083 ;; Tracked objects:
 35084 ;;		On entry : 0/0
 35085 ;;		On exit  : 0/0
 35086 ;;		Unchanged: 0/0
 35087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35088 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35091 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35092 ;;Total ram usage:        8 bytes
 35093 ;; Hardware stack levels used:    1
 35094 ;; Hardware stack levels required when called:   12
 35095 ;; This function calls:
 35096 ;;		___wmul
 35097 ;; This function is called by:
 35098 ;;		_I2cSlv_MainTask
 35099 ;; This function uses a non-reentrant model
 35100 ;;
 35101                           
 35102                           	psect	text163
 35103  0041F4                     __ptext163:
 35104                           	opt stack 0
 35105  0041F4                     _OsAlrm_SetOsAlarm:
 35106                           	opt stack 15
 35107                           
 35108                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 35109                           
 35110                           ; BSR set to: 0
 35111                           ;incstack = 0
 35112  0041F4  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 35113  0041F8  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 35114  0041FC  0E00               	movlw	0
 35115  0041FE  0100               	movlb	0	; () banked
 35116  004200  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35117  004202  0E0B               	movlw	11
 35118  004204  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 35119  004206  EC6E  F034         	call	___wmul	;wreg free
 35120  00420A  0E00               	movlw	low _OsAlarms
 35121  00420C  0100               	movlb	0	; () banked
 35122  00420E  257D               	addwf	?___wmul& (0+255),w,b
 35123  004210  6ED9               	movwf	fsr2l,c
 35124  004212  0E06               	movlw	high _OsAlarms
 35125  004214  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 35126  004216  6EDA               	movwf	fsr2h,c
 35127  004218  0E01               	movlw	1
 35128  00421A  6EDF               	movwf	indf2,c
 35129                           
 35130                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 35131  00421C  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 35132  004220  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 35133  004224  0E00               	movlw	0
 35134  004226  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35135  004228  0E0B               	movlw	11
 35136  00422A  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 35137  00422C  EC6E  F034         	call	___wmul	;wreg free
 35138  004230  0E01               	movlw	1
 35139  004232  0100               	movlb	0	; () banked
 35140  004234  277D               	addwf	?___wmul& (0+255),f,b
 35141  004236  0E00               	movlw	0
 35142  004238  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 35143  00423A  0E00               	movlw	low _OsAlarms
 35144  00423C  257D               	addwf	?___wmul& (0+255),w,b
 35145  00423E  6ED9               	movwf	fsr2l,c
 35146  004240  0E06               	movlw	high _OsAlarms
 35147  004242  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 35148  004244  6EDA               	movwf	fsr2h,c
 35149  004246  6ADE               	clrf	postinc2,c
 35150  004248  6ADE               	clrf	postinc2,c
 35151  00424A  6ADE               	clrf	postinc2,c
 35152  00424C  6ADD               	clrf	postdec2,c
 35153                           
 35154                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 35155  00424E  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 35156  004252  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 35157  004256  0E00               	movlw	0
 35158  004258  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35159  00425A  0E0B               	movlw	11
 35160  00425C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 35161  00425E  EC6E  F034         	call	___wmul	;wreg free
 35162  004262  0E05               	movlw	5
 35163  004264  0100               	movlb	0	; () banked
 35164  004266  277D               	addwf	?___wmul& (0+255),f,b
 35165  004268  0E00               	movlw	0
 35166  00426A  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 35167  00426C  0E00               	movlw	low _OsAlarms
 35168  00426E  257D               	addwf	?___wmul& (0+255),w,b
 35169  004270  6ED9               	movwf	fsr2l,c
 35170  004272  0E06               	movlw	high _OsAlarms
 35171  004274  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 35172  004276  6EDA               	movwf	fsr2h,c
 35173  004278  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 35174  00427C  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 35175  004280  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 35176  004284  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 35177                           
 35178                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 35179  004288  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 35180  00428C  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 35181  004290  0E00               	movlw	0
 35182  004292  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35183  004294  0E0B               	movlw	11
 35184  004296  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 35185  004298  EC6E  F034         	call	___wmul	;wreg free
 35186  00429C  0E09               	movlw	9
 35187  00429E  0100               	movlb	0	; () banked
 35188  0042A0  277D               	addwf	?___wmul& (0+255),f,b
 35189  0042A2  0E00               	movlw	0
 35190  0042A4  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 35191  0042A6  0E00               	movlw	low _OsAlarms
 35192  0042A8  257D               	addwf	?___wmul& (0+255),w,b
 35193  0042AA  6ED9               	movwf	fsr2l,c
 35194  0042AC  0E06               	movlw	high _OsAlarms
 35195  0042AE  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 35196  0042B0  6EDA               	movwf	fsr2h,c
 35197  0042B2  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 35198  0042B6  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 35199                           
 35200                           ; BSR set to: 0
 35201  0042BA  0012               	return		;funcret
 35202  0042BC                     __end_of_OsAlrm_SetOsAlarm:
 35203                           	opt stack 0
 35204                           tosu	equ	0xFFF
 35205                           tosh	equ	0xFFE
 35206                           tosl	equ	0xFFD
 35207                           pclath	equ	0xFFA
 35208                           tblptru	equ	0xFF8
 35209                           tblptrh	equ	0xFF7
 35210                           tblptrl	equ	0xFF6
 35211                           tablat	equ	0xFF5
 35212                           prodh	equ	0xFF4
 35213                           prodl	equ	0xFF3
 35214                           intcon	equ	0xFF2
 35215                           intcon2	equ	0xFF1
 35216                           intcon3	equ	0xFF0
 35217                           indf0	equ	0xFEF
 35218                           postinc0	equ	0xFEE
 35219                           plusw0	equ	0xFEB
 35220                           fsr0h	equ	0xFEA
 35221                           fsr0l	equ	0xFE9
 35222                           wreg	equ	0xFE8
 35223                           indf1	equ	0xFE7
 35224                           postinc1	equ	0xFE6
 35225                           postdec1	equ	0xFE5
 35226                           plusw1	equ	0xFE3
 35227                           fsr1h	equ	0xFE2
 35228                           fsr1l	equ	0xFE1
 35229                           indf2	equ	0xFDF
 35230                           postinc2	equ	0xFDE
 35231                           postdec2	equ	0xFDD
 35232                           plusw2	equ	0xFDB
 35233                           fsr2h	equ	0xFDA
 35234                           fsr2l	equ	0xFD9
 35235                           status	equ	0xFD8
 35236                           
 35237 ;; *************** function ___wmul *****************
 35238 ;; Defined at:
 35239 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 35240 ;; Parameters:    Size  Location     Type
 35241 ;;  multiplier      2   29[BANK0 ] unsigned int 
 35242 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 35243 ;; Auto vars:     Size  Location     Type
 35244 ;;  product         2   33[BANK0 ] unsigned int 
 35245 ;; Return value:  Size  Location     Type
 35246 ;;                  2   29[BANK0 ] unsigned int 
 35247 ;; Registers used:
 35248 ;;		wreg, status,2, status,0, prodl, prodh
 35249 ;; Tracked objects:
 35250 ;;		On entry : 0/0
 35251 ;;		On exit  : 0/0
 35252 ;;		Unchanged: 0/0
 35253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35254 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35255 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35257 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35258 ;;Total ram usage:        6 bytes
 35259 ;; Hardware stack levels used:    1
 35260 ;; Hardware stack levels required when called:   11
 35261 ;; This function calls:
 35262 ;;		Nothing
 35263 ;; This function is called by:
 35264 ;;		_OsAlrm_SetOsAlarm
 35265 ;;		_secondsAppTimer
 35266 ;;		_atoi
 35267 ;; This function uses a non-reentrant model
 35268 ;;
 35269                           
 35270                           	psect	text164
 35271  0068DC                     __ptext164:
 35272                           	opt stack 0
 35273  0068DC                     ___wmul:
 35274                           	opt stack 13
 35275                           
 35276                           ; BSR set to: 0
 35277                           ;incstack = 0
 35278  0068DC  0100               	movlb	0	; () banked
 35279  0068DE  517D               	movf	___wmul@multiplier& (0+255),w,b
 35280  0068E0  037F               	mulwf	___wmul@multiplicand& (0+255),b
 35281  0068E2  CFF3 F081          	movff	prodl,___wmul@product
 35282  0068E6  CFF4 F082          	movff	prodh,___wmul@product+1
 35283  0068EA  517D               	movf	___wmul@multiplier& (0+255),w,b
 35284  0068EC  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 35285  0068EE  50F3               	movf	prodl,w,c
 35286  0068F0  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 35287  0068F2  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 35288  0068F4  037F               	mulwf	___wmul@multiplicand& (0+255),b
 35289  0068F6  50F3               	movf	prodl,w,c
 35290  0068F8  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 35291                           
 35292                           ; BSR set to: 0
 35293  0068FA  C081  F07D         	movff	___wmul@product,?___wmul
 35294  0068FE  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 35295  006902  0012               	return	
 35296  006904                     __end_of___wmul:
 35297                           	opt stack 0
 35298                           tosu	equ	0xFFF
 35299                           tosh	equ	0xFFE
 35300                           tosl	equ	0xFFD
 35301                           pclath	equ	0xFFA
 35302                           tblptru	equ	0xFF8
 35303                           tblptrh	equ	0xFF7
 35304                           tblptrl	equ	0xFF6
 35305                           tablat	equ	0xFF5
 35306                           prodh	equ	0xFF4
 35307                           prodl	equ	0xFF3
 35308                           intcon	equ	0xFF2
 35309                           intcon2	equ	0xFF1
 35310                           intcon3	equ	0xFF0
 35311                           indf0	equ	0xFEF
 35312                           postinc0	equ	0xFEE
 35313                           plusw0	equ	0xFEB
 35314                           fsr0h	equ	0xFEA
 35315                           fsr0l	equ	0xFE9
 35316                           wreg	equ	0xFE8
 35317                           indf1	equ	0xFE7
 35318                           postinc1	equ	0xFE6
 35319                           postdec1	equ	0xFE5
 35320                           plusw1	equ	0xFE3
 35321                           fsr1h	equ	0xFE2
 35322                           fsr1l	equ	0xFE1
 35323                           indf2	equ	0xFDF
 35324                           postinc2	equ	0xFDE
 35325                           postdec2	equ	0xFDD
 35326                           plusw2	equ	0xFDB
 35327                           fsr2h	equ	0xFDA
 35328                           fsr2l	equ	0xFD9
 35329                           status	equ	0xFD8
 35330                           
 35331 ;; *************** function _I2c_InitI2cModule *****************
 35332 ;; Defined at:
 35333 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35334 ;; Parameters:    Size  Location     Type
 35335 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 35336 ;;		 -> I2cConfig(10), 
 35337 ;; Auto vars:     Size  Location     Type
 35338 ;;		None
 35339 ;; Return value:  Size  Location     Type
 35340 ;;                  1    wreg      void 
 35341 ;; Registers used:
 35342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35343 ;; Tracked objects:
 35344 ;;		On entry : 0/0
 35345 ;;		On exit  : 0/0
 35346 ;;		Unchanged: 0/0
 35347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35348 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35350 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35351 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35352 ;;Total ram usage:        4 bytes
 35353 ;; Hardware stack levels used:    1
 35354 ;; Hardware stack levels required when called:   13
 35355 ;; This function calls:
 35356 ;;		_SetBaudRate
 35357 ;; This function is called by:
 35358 ;;		_I2cSlv_MainTask
 35359 ;; This function uses a non-reentrant model
 35360 ;;
 35361                           
 35362                           	psect	text165
 35363  00563E                     __ptext165:
 35364                           	opt stack 0
 35365  00563E                     _I2c_InitI2cModule:
 35366                           	opt stack 14
 35367                           
 35368                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 35369                           
 35370                           ; BSR set to: 0
 35371                           ;incstack = 0
 35372  00563E  8295               	bsf	3989,1,c	;volatile
 35373                           
 35374                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 35375  005640  8095               	bsf	3989,0,c	;volatile
 35376                           
 35377                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 35378  005642  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 35379  005646  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 35380  00564A  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 35381  00564E  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 35382  005652  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 35383  005656  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 35384  00565A  0100               	movlb	0	; () banked
 35385  00565C  EE20 F004          	lfsr	2,4
 35386  005660  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 35387  005662  26D9               	addwf	fsr2l,f,c
 35388  005664  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 35389  005666  22DA               	addwfc	fsr2h,f,c
 35390  005668  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 35391  00566C  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 35392  005670  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 35393  005674  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 35394  005678  EC4A  F030         	call	_SetBaudRate	;wreg free
 35395                           
 35396                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 35397  00567C  0100               	movlb	0	; () banked
 35398  00567E  EE20 F008          	lfsr	2,8
 35399  005682  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 35400  005684  26D9               	addwf	fsr2l,f,c
 35401  005686  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 35402  005688  22DA               	addwfc	fsr2h,f,c
 35403  00568A  50DF               	movf	indf2,w,c
 35404  00568C  1272               	iorwf	3954,f,c	;volatile
 35405                           
 35406                           ; BSR set to: 0
 35407                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 35408  00568E  EE20 F009          	lfsr	2,9
 35409  005692  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 35410  005694  26D9               	addwf	fsr2l,f,c
 35411  005696  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 35412  005698  22DA               	addwfc	fsr2h,f,c
 35413  00569A  50DF               	movf	indf2,w,c
 35414  00569C  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 35415  00569E  0E05               	movlw	5
 35416  0056A0  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 35417  0056A2                     u14955:
 35418  0056A2  90D8               	bcf	status,0,c
 35419  0056A4  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 35420  0056A6  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 35421  0056A8  D7FC               	goto	u14955
 35422  0056AA  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 35423  0056AC  1272               	iorwf	3954,f,c	;volatile
 35424                           
 35425                           ; BSR set to: 0
 35426  0056AE  0012               	return		;funcret
 35427  0056B0                     __end_of_I2c_InitI2cModule:
 35428                           	opt stack 0
 35429                           tosu	equ	0xFFF
 35430                           tosh	equ	0xFFE
 35431                           tosl	equ	0xFFD
 35432                           pclath	equ	0xFFA
 35433                           tblptru	equ	0xFF8
 35434                           tblptrh	equ	0xFF7
 35435                           tblptrl	equ	0xFF6
 35436                           tablat	equ	0xFF5
 35437                           prodh	equ	0xFF4
 35438                           prodl	equ	0xFF3
 35439                           intcon	equ	0xFF2
 35440                           intcon2	equ	0xFF1
 35441                           intcon3	equ	0xFF0
 35442                           indf0	equ	0xFEF
 35443                           postinc0	equ	0xFEE
 35444                           plusw0	equ	0xFEB
 35445                           fsr0h	equ	0xFEA
 35446                           fsr0l	equ	0xFE9
 35447                           wreg	equ	0xFE8
 35448                           indf1	equ	0xFE7
 35449                           postinc1	equ	0xFE6
 35450                           postdec1	equ	0xFE5
 35451                           plusw1	equ	0xFE3
 35452                           fsr1h	equ	0xFE2
 35453                           fsr1l	equ	0xFE1
 35454                           indf2	equ	0xFDF
 35455                           postinc2	equ	0xFDE
 35456                           postdec2	equ	0xFDD
 35457                           plusw2	equ	0xFDB
 35458                           fsr2h	equ	0xFDA
 35459                           fsr2l	equ	0xFD9
 35460                           status	equ	0xFD8
 35461                           
 35462 ;; *************** function _SetBaudRate *****************
 35463 ;; Defined at:
 35464 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35465 ;; Parameters:    Size  Location     Type
 35466 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 35467 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 35468 ;; Auto vars:     Size  Location     Type
 35469 ;;		None
 35470 ;; Return value:  Size  Location     Type
 35471 ;;                  1    wreg      void 
 35472 ;; Registers used:
 35473 ;;		wreg, status,2, status,0, cstack
 35474 ;; Tracked objects:
 35475 ;;		On entry : 0/0
 35476 ;;		On exit  : 0/0
 35477 ;;		Unchanged: 0/0
 35478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35479 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35481 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35482 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35483 ;;Total ram usage:       12 bytes
 35484 ;; Hardware stack levels used:    1
 35485 ;; Hardware stack levels required when called:   12
 35486 ;; This function calls:
 35487 ;;		___lldiv
 35488 ;; This function is called by:
 35489 ;;		_I2c_InitI2cModule
 35490 ;; This function uses a non-reentrant model
 35491 ;;
 35492                           
 35493                           	psect	text166
 35494  006094                     __ptext166:
 35495                           	opt stack 0
 35496  006094                     _SetBaudRate:
 35497                           	opt stack 14
 35498                           
 35499                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 35500                           
 35501                           ; BSR set to: 0
 35502                           ;incstack = 0
 35503  006094  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 35504  006098  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 35505  00609C  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 35506  0060A0  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 35507  0060A4  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 35508  0060A8  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 35509  0060AC  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 35510  0060B0  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 35511  0060B4  0E02               	movlw	2
 35512  0060B6                     u13685:
 35513  0060B6  90D8               	bcf	status,0,c
 35514  0060B8  0100               	movlb	0	; () banked
 35515  0060BA  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 35516  0060BC  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 35517  0060BE  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 35518  0060C0  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 35519  0060C2  2EE8               	decfsz	wreg,f,c
 35520  0060C4  D7F8               	goto	u13685
 35521  0060C6  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 35522  0060CA  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 35523  0060CE  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 35524  0060D2  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 35525  0060D6  ECEA  F029         	call	___lldiv	;wreg free
 35526  0060DA  0100               	movlb	0	; () banked
 35527  0060DC  0589               	decf	?___lldiv& (0+255),w,b
 35528  0060DE  6E74               	movwf	3956,c	;volatile
 35529                           
 35530                           ; BSR set to: 0
 35531  0060E0  0012               	return		;funcret
 35532  0060E2                     __end_of_SetBaudRate:
 35533                           	opt stack 0
 35534                           tosu	equ	0xFFF
 35535                           tosh	equ	0xFFE
 35536                           tosl	equ	0xFFD
 35537                           pclath	equ	0xFFA
 35538                           tblptru	equ	0xFF8
 35539                           tblptrh	equ	0xFF7
 35540                           tblptrl	equ	0xFF6
 35541                           tablat	equ	0xFF5
 35542                           prodh	equ	0xFF4
 35543                           prodl	equ	0xFF3
 35544                           intcon	equ	0xFF2
 35545                           intcon2	equ	0xFF1
 35546                           intcon3	equ	0xFF0
 35547                           indf0	equ	0xFEF
 35548                           postinc0	equ	0xFEE
 35549                           plusw0	equ	0xFEB
 35550                           fsr0h	equ	0xFEA
 35551                           fsr0l	equ	0xFE9
 35552                           wreg	equ	0xFE8
 35553                           indf1	equ	0xFE7
 35554                           postinc1	equ	0xFE6
 35555                           postdec1	equ	0xFE5
 35556                           plusw1	equ	0xFE3
 35557                           fsr1h	equ	0xFE2
 35558                           fsr1l	equ	0xFE1
 35559                           indf2	equ	0xFDF
 35560                           postinc2	equ	0xFDE
 35561                           postdec2	equ	0xFDD
 35562                           plusw2	equ	0xFDB
 35563                           fsr2h	equ	0xFDA
 35564                           fsr2l	equ	0xFD9
 35565                           status	equ	0xFD8
 35566                           
 35567 ;; *************** function ___lldiv *****************
 35568 ;; Defined at:
 35569 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 35570 ;; Parameters:    Size  Location     Type
 35571 ;;  dividend        4   41[BANK0 ] unsigned long 
 35572 ;;  divisor         4   45[BANK0 ] unsigned long 
 35573 ;; Auto vars:     Size  Location     Type
 35574 ;;  quotient        4   49[BANK0 ] unsigned long 
 35575 ;;  counter         1   53[BANK0 ] unsigned char 
 35576 ;; Return value:  Size  Location     Type
 35577 ;;                  4   41[BANK0 ] unsigned long 
 35578 ;; Registers used:
 35579 ;;		wreg, status,2, status,0
 35580 ;; Tracked objects:
 35581 ;;		On entry : 0/0
 35582 ;;		On exit  : 0/0
 35583 ;;		Unchanged: 0/0
 35584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35585 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35586 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35588 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35589 ;;Total ram usage:       13 bytes
 35590 ;; Hardware stack levels used:    1
 35591 ;; Hardware stack levels required when called:   11
 35592 ;; This function calls:
 35593 ;;		Nothing
 35594 ;; This function is called by:
 35595 ;;		_SetBaudRate
 35596 ;;		_Tmr_TmrBPrSet
 35597 ;;		_SetUartBaudRate
 35598 ;; This function uses a non-reentrant model
 35599 ;;
 35600                           
 35601                           	psect	text167
 35602  0053D4                     __ptext167:
 35603                           	opt stack 0
 35604  0053D4                     ___lldiv:
 35605                           	opt stack 15
 35606                           
 35607                           ; BSR set to: 0
 35608                           ;incstack = 0
 35609  0053D4  0E00               	movlw	0
 35610  0053D6  0100               	movlb	0	; () banked
 35611  0053D8  6F91               	movwf	___lldiv@quotient& (0+255),b
 35612  0053DA  0E00               	movlw	0
 35613  0053DC  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 35614  0053DE  0E00               	movlw	0
 35615  0053E0  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 35616  0053E2  0E00               	movlw	0
 35617  0053E4  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 35618                           
 35619                           ; BSR set to: 0
 35620  0053E6  518D               	movf	___lldiv@divisor& (0+255),w,b
 35621  0053E8  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35622  0053EA  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35623  0053EC  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35624  0053EE  B4D8               	btfsc	status,2,c
 35625  0053F0  D02A               	goto	l3375
 35626                           
 35627                           ; BSR set to: 0
 35628  0053F2  0E01               	movlw	1
 35629  0053F4  6F95               	movwf	___lldiv@counter& (0+255),b
 35630  0053F6  D006               	goto	l3370
 35631  0053F8                     
 35632                           ; BSR set to: 0
 35633                           
 35634                           ; BSR set to: 0
 35635  0053F8  90D8               	bcf	status,0,c
 35636  0053FA  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 35637  0053FC  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35638  0053FE  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35639  005400  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35640  005402  2B95               	incf	___lldiv@counter& (0+255),f,b
 35641  005404                     l3370:
 35642                           
 35643                           ; BSR set to: 0
 35644                           
 35645                           ; BSR set to: 0
 35646  005404  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35647  005406  D7F8               	goto	l3371
 35648  005408                     u12690:
 35649                           
 35650                           ; BSR set to: 0
 35651                           
 35652                           ; BSR set to: 0
 35653                           
 35654                           ; BSR set to: 0
 35655  005408  90D8               	bcf	status,0,c
 35656  00540A  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 35657  00540C  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35658  00540E  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35659  005410  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35660                           
 35661                           ; BSR set to: 0
 35662  005412  518D               	movf	___lldiv@divisor& (0+255),w,b
 35663  005414  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 35664  005416  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35665  005418  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35666  00541A  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35667  00541C  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35668  00541E  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35669  005420  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35670  005422  A0D8               	btfss	status,0,c
 35671  005424  D009               	goto	l3374
 35672                           
 35673                           ; BSR set to: 0
 35674  005426  518D               	movf	___lldiv@divisor& (0+255),w,b
 35675  005428  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 35676  00542A  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35677  00542C  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35678  00542E  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35679  005430  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35680  005432  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35681  005434  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35682                           
 35683                           ; BSR set to: 0
 35684  005436  8191               	bsf	___lldiv@quotient& (0+255),0,b
 35685  005438                     l3374:
 35686                           
 35687                           ; BSR set to: 0
 35688                           
 35689                           ; BSR set to: 0
 35690  005438  90D8               	bcf	status,0,c
 35691  00543A  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35692  00543C  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35693  00543E  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35694  005440  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 35695                           
 35696                           ; BSR set to: 0
 35697  005442  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 35698  005444  D7E1               	goto	u12690
 35699  005446                     l3375:
 35700                           
 35701                           ; BSR set to: 0
 35702                           
 35703                           ; BSR set to: 0
 35704  005446  C091  F089         	movff	___lldiv@quotient,?___lldiv
 35705  00544A  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 35706  00544E  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 35707  005452  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 35708                           
 35709                           ; BSR set to: 0
 35710  005456  0012               	return		;funcret
 35711  005458                     __end_of___lldiv:
 35712                           	opt stack 0
 35713                           tosu	equ	0xFFF
 35714                           tosh	equ	0xFFE
 35715                           tosl	equ	0xFFD
 35716                           pclath	equ	0xFFA
 35717                           tblptru	equ	0xFF8
 35718                           tblptrh	equ	0xFF7
 35719                           tblptrl	equ	0xFF6
 35720                           tablat	equ	0xFF5
 35721                           prodh	equ	0xFF4
 35722                           prodl	equ	0xFF3
 35723                           intcon	equ	0xFF2
 35724                           intcon2	equ	0xFF1
 35725                           intcon3	equ	0xFF0
 35726                           indf0	equ	0xFEF
 35727                           postinc0	equ	0xFEE
 35728                           plusw0	equ	0xFEB
 35729                           fsr0h	equ	0xFEA
 35730                           fsr0l	equ	0xFE9
 35731                           wreg	equ	0xFE8
 35732                           indf1	equ	0xFE7
 35733                           postinc1	equ	0xFE6
 35734                           postdec1	equ	0xFE5
 35735                           plusw1	equ	0xFE3
 35736                           fsr1h	equ	0xFE2
 35737                           fsr1l	equ	0xFE1
 35738                           indf2	equ	0xFDF
 35739                           postinc2	equ	0xFDE
 35740                           postdec2	equ	0xFDD
 35741                           plusw2	equ	0xFDB
 35742                           fsr2h	equ	0xFDA
 35743                           fsr2l	equ	0xFD9
 35744                           status	equ	0xFD8
 35745                           
 35746 ;; *************** function _I2cSetConfig *****************
 35747 ;; Defined at:
 35748 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 35749 ;; Parameters:    Size  Location     Type
 35750 ;;		None
 35751 ;; Auto vars:     Size  Location     Type
 35752 ;;		None
 35753 ;; Return value:  Size  Location     Type
 35754 ;;                  1    wreg      void 
 35755 ;; Registers used:
 35756 ;;		wreg, status,2
 35757 ;; Tracked objects:
 35758 ;;		On entry : 0/0
 35759 ;;		On exit  : 0/0
 35760 ;;		Unchanged: 0/0
 35761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35766 ;;Total ram usage:        0 bytes
 35767 ;; Hardware stack levels used:    1
 35768 ;; Hardware stack levels required when called:   11
 35769 ;; This function calls:
 35770 ;;		Nothing
 35771 ;; This function is called by:
 35772 ;;		_I2cSlv_MainTask
 35773 ;; This function uses a non-reentrant model
 35774 ;;
 35775                           
 35776                           	psect	text168
 35777  00685C                     __ptext168:
 35778                           	opt stack 0
 35779  00685C                     _I2cSetConfig:
 35780                           	opt stack 16
 35781                           
 35782                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 35783                           
 35784                           ; BSR set to: 0
 35785                           ;incstack = 0
 35786  00685C  0E80               	movlw	128
 35787  00685E  0103               	movlb	3	; () banked
 35788  006860  6F5E               	movwf	_I2cConfig& (0+255),b
 35789  006862  0E1A               	movlw	26
 35790  006864  6F5F               	movwf	(_I2cConfig+1)& (0+255),b
 35791  006866  0E06               	movlw	6
 35792  006868  6F60               	movwf	(_I2cConfig+2)& (0+255),b
 35793  00686A  0E00               	movlw	0
 35794  00686C  6F61               	movwf	(_I2cConfig+3)& (0+255),b
 35795                           
 35796                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 35797  00686E  0E00               	movlw	0
 35798  006870  6F62               	movwf	(_I2cConfig+4)& (0+255),b
 35799  006872  0E6C               	movlw	108
 35800  006874  6F63               	movwf	(_I2cConfig+5)& (0+255),b
 35801  006876  0EDC               	movlw	220
 35802  006878  6F64               	movwf	(_I2cConfig+6)& (0+255),b
 35803  00687A  0E02               	movlw	2
 35804  00687C  6F65               	movwf	(_I2cConfig+7)& (0+255),b
 35805                           
 35806                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 35807  00687E  0E08               	movlw	8
 35808  006880  6F66               	movwf	(_I2cConfig+8)& (0+255),b
 35809                           
 35810                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 35811  006882  0E01               	movlw	1
 35812  006884  6F67               	movwf	(_I2cConfig+9)& (0+255),b
 35813                           
 35814                           ; BSR set to: 3
 35815  006886  0012               	return		;funcret
 35816  006888                     __end_of_I2cSetConfig:
 35817                           	opt stack 0
 35818                           tosu	equ	0xFFF
 35819                           tosh	equ	0xFFE
 35820                           tosl	equ	0xFFD
 35821                           pclath	equ	0xFFA
 35822                           tblptru	equ	0xFF8
 35823                           tblptrh	equ	0xFF7
 35824                           tblptrl	equ	0xFF6
 35825                           tablat	equ	0xFF5
 35826                           prodh	equ	0xFF4
 35827                           prodl	equ	0xFF3
 35828                           intcon	equ	0xFF2
 35829                           intcon2	equ	0xFF1
 35830                           intcon3	equ	0xFF0
 35831                           indf0	equ	0xFEF
 35832                           postinc0	equ	0xFEE
 35833                           plusw0	equ	0xFEB
 35834                           fsr0h	equ	0xFEA
 35835                           fsr0l	equ	0xFE9
 35836                           wreg	equ	0xFE8
 35837                           indf1	equ	0xFE7
 35838                           postinc1	equ	0xFE6
 35839                           postdec1	equ	0xFE5
 35840                           plusw1	equ	0xFE3
 35841                           fsr1h	equ	0xFE2
 35842                           fsr1l	equ	0xFE1
 35843                           indf2	equ	0xFDF
 35844                           postinc2	equ	0xFDE
 35845                           postdec2	equ	0xFDD
 35846                           plusw2	equ	0xFDB
 35847                           fsr2h	equ	0xFDA
 35848                           fsr2l	equ	0xFD9
 35849                           status	equ	0xFD8
 35850                           
 35851 ;; *************** function _I2cSendMsgSm *****************
 35852 ;; Defined at:
 35853 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 35854 ;; Parameters:    Size  Location     Type
 35855 ;;		None
 35856 ;; Auto vars:     Size  Location     Type
 35857 ;;		None
 35858 ;; Return value:  Size  Location     Type
 35859 ;;                  1    wreg      void 
 35860 ;; Registers used:
 35861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35862 ;; Tracked objects:
 35863 ;;		On entry : 0/0
 35864 ;;		On exit  : 0/0
 35865 ;;		Unchanged: 0/0
 35866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35871 ;;Total ram usage:        0 bytes
 35872 ;; Hardware stack levels used:    1
 35873 ;; Hardware stack levels required when called:   13
 35874 ;; This function calls:
 35875 ;;		_I2c_ReadData
 35876 ;;		_I2c_WriteData
 35877 ;;		_ReceiveEvt
 35878 ;; This function is called by:
 35879 ;;		_I2cSlv_MainTask
 35880 ;; This function uses a non-reentrant model
 35881 ;;
 35882                           
 35883                           	psect	text169
 35884  0042BC                     __ptext169:
 35885                           	opt stack 0
 35886  0042BC                     _I2cSendMsgSm:
 35887                           	opt stack 14
 35888                           
 35889                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 35890                           ;i2c_slv.c: 122: switch(I2cComState)
 35891                           
 35892                           ; BSR set to: 3
 35893                           ;incstack = 0
 35894  0042BC  D04F               	goto	l1382
 35895  0042BE                     
 35896                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 35897  0042BE  0ED7               	movlw	low _I2cWriteDataEvt
 35898  0042C0  0100               	movlb	0	; () banked
 35899  0042C2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 35900  0042C4  0E00               	movlw	high _I2cWriteDataEvt
 35901  0042C6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 35902  0042C8  EC17  F034         	call	_ReceiveEvt	;wreg free
 35903  0042CC  0900               	iorlw	0
 35904  0042CE  B4D8               	btfsc	status,2,c
 35905  0042D0  D007               	goto	l1384
 35906                           
 35907                           ;i2c_slv.c: 127: {
 35908                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 35909  0042D2  0E01               	movlw	1
 35910  0042D4  0101               	movlb	1	; () banked
 35911  0042D6  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35912                           
 35913                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 35914  0042D8  0E01               	movlw	1
 35915  0042DA  0100               	movlb	0	; () banked
 35916  0042DC  6FCF               	movwf	_I2cComSts& (0+255),b
 35917                           
 35918                           ;i2c_slv.c: 132: }
 35919  0042DE  0012               	return	
 35920  0042E0                     l1384:
 35921                           
 35922                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 35923                           
 35924                           ; BSR set to: 0
 35925  0042E0  0E39               	movlw	low _I2cReadDataEvt
 35926  0042E2  0100               	movlb	0	; () banked
 35927  0042E4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 35928  0042E6  0E00               	movlw	high _I2cReadDataEvt
 35929  0042E8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 35930  0042EA  EC17  F034         	call	_ReceiveEvt	;wreg free
 35931  0042EE  0900               	iorlw	0
 35932  0042F0  B4D8               	btfsc	status,2,c
 35933  0042F2  D007               	goto	l1386
 35934                           
 35935                           ;i2c_slv.c: 134: {
 35936                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 35937  0042F4  0E02               	movlw	2
 35938  0042F6  0101               	movlb	1	; () banked
 35939  0042F8  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35940                           
 35941                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 35942  0042FA  0E02               	movlw	2
 35943  0042FC  0100               	movlb	0	; () banked
 35944  0042FE  6FCF               	movwf	_I2cComSts& (0+255),b
 35945                           
 35946                           ;i2c_slv.c: 139: }
 35947  004300  0012               	return	
 35948  004302                     l1386:
 35949                           
 35950                           ;i2c_slv.c: 140: else
 35951                           ;i2c_slv.c: 141: {
 35952                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 35953                           
 35954                           ; BSR set to: 0
 35955  004302  0E00               	movlw	0
 35956  004304  0100               	movlb	0	; () banked
 35957  004306  6FCF               	movwf	_I2cComSts& (0+255),b
 35958                           
 35959                           ; BSR set to: 0
 35960                           ;i2c_slv.c: 144: }
 35961                           ;i2c_slv.c: 145: break;
 35962                           
 35963                           ; BSR set to: 0
 35964  004308  0012               	return	
 35965  00430A                     
 35966                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 35967                           
 35968                           ; BSR set to: 0
 35969  00430A  0EA1               	movlw	low _I2cTxPacket
 35970  00430C  0100               	movlb	0	; () banked
 35971  00430E  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 35972  004310  0E03               	movlw	high _I2cTxPacket
 35973  004312  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 35974  004314  EC5C  F00F         	call	_I2c_WriteData	;wreg free
 35975  004318  0900               	iorlw	0
 35976  00431A  B4D8               	btfsc	status,2,c
 35977  00431C  0012               	return	
 35978                           
 35979                           ;i2c_slv.c: 150: {
 35980                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 35981  00431E  0E03               	movlw	3
 35982  004320  0101               	movlb	1	; () banked
 35983  004322  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35984                           
 35985                           ; BSR set to: 1
 35986                           ;i2c_slv.c: 153: }
 35987                           ;i2c_slv.c: 154: break;
 35988  004324  0012               	return	
 35989  004326                     
 35990                           ; BSR set to: 1
 35991                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 35992                           
 35993                           ; BSR set to: 1
 35994  004326  0E9B               	movlw	low _I2cRxPacket
 35995  004328  0100               	movlb	0	; () banked
 35996  00432A  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 35997  00432C  0E03               	movlw	high _I2cRxPacket
 35998  00432E  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 35999  004330  ECC3  F010         	call	_I2c_ReadData	;wreg free
 36000  004334  0900               	iorlw	0
 36001  004336  B4D8               	btfsc	status,2,c
 36002  004338  0012               	return	
 36003                           
 36004                           ;i2c_slv.c: 159: {
 36005                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 36006  00433A  0E04               	movlw	4
 36007  00433C  0101               	movlb	1	; () banked
 36008  00433E  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 36009                           
 36010                           ; BSR set to: 1
 36011                           ;i2c_slv.c: 162: }
 36012                           ;i2c_slv.c: 164: break;
 36013  004340  0012               	return	
 36014  004342                     
 36015                           ; BSR set to: 1
 36016                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 36017                           
 36018                           ; BSR set to: 1
 36019  004342  0E00               	movlw	0
 36020  004344  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 36021                           
 36022                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 36023  004346  0E00               	movlw	0
 36024  004348  0100               	movlb	0	; () banked
 36025  00434A  6FCF               	movwf	_I2cComSts& (0+255),b
 36026                           
 36027                           ;i2c_slv.c: 171: break;
 36028  00434C  0012               	return	
 36029  00434E                     
 36030                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 36031                           
 36032                           ; BSR set to: 0
 36033  00434E  0E00               	movlw	0
 36034  004350  0101               	movlb	1	; () banked
 36035  004352  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 36036                           
 36037                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 36038  004354  0E00               	movlw	0
 36039  004356  0100               	movlb	0	; () banked
 36040  004358  6FCF               	movwf	_I2cComSts& (0+255),b
 36041                           
 36042                           ; BSR set to: 0
 36043                           ;i2c_slv.c: 182: }
 36044                           
 36045                           ; BSR set to: 0
 36046                           ;i2c_slv.c: 181: break;
 36047                           
 36048                           ;i2c_slv.c: 180: default:
 36049                           
 36050                           ;i2c_slv.c: 178: break;
 36051  00435A  0012               	return	
 36052  00435C                     l1382:
 36053                           
 36054                           ; BSR set to: 0
 36055  00435C  0101               	movlb	1	; () banked
 36056  00435E  51E3               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 36057                           
 36058                           ; Switch size 1, requested type "space"
 36059                           ; Number of cases is 5, Range of values is 0 to 4
 36060                           ; switch strategies available:
 36061                           ; Name         Instructions Cycles
 36062                           ; simple_byte           16     9 (average)
 36063                           ;	Chosen strategy is simple_byte
 36064  004360  0A00               	xorlw	0	; case 0
 36065  004362  B4D8               	btfsc	status,2,c
 36066  004364  D7AC               	goto	l1383
 36067  004366  0A01               	xorlw	1	; case 1
 36068  004368  B4D8               	btfsc	status,2,c
 36069  00436A  D7CF               	goto	l1389
 36070  00436C  0A03               	xorlw	3	; case 2
 36071  00436E  B4D8               	btfsc	status,2,c
 36072  004370  D7DA               	goto	l1391
 36073  004372  0A01               	xorlw	1	; case 3
 36074  004374  B4D8               	btfsc	status,2,c
 36075  004376  D7E5               	goto	l1393
 36076  004378  0A07               	xorlw	7	; case 4
 36077  00437A  A4D8               	btfss	status,2,c
 36078  00437C  0012               	return	
 36079  00437E  D7E7               	goto	l1394
 36080  004380                     __end_of_I2cSendMsgSm:
 36081                           	opt stack 0
 36082                           tosu	equ	0xFFF
 36083                           tosh	equ	0xFFE
 36084                           tosl	equ	0xFFD
 36085                           pclath	equ	0xFFA
 36086                           tblptru	equ	0xFF8
 36087                           tblptrh	equ	0xFF7
 36088                           tblptrl	equ	0xFF6
 36089                           tablat	equ	0xFF5
 36090                           prodh	equ	0xFF4
 36091                           prodl	equ	0xFF3
 36092                           intcon	equ	0xFF2
 36093                           intcon2	equ	0xFF1
 36094                           intcon3	equ	0xFF0
 36095                           indf0	equ	0xFEF
 36096                           postinc0	equ	0xFEE
 36097                           plusw0	equ	0xFEB
 36098                           fsr0h	equ	0xFEA
 36099                           fsr0l	equ	0xFE9
 36100                           wreg	equ	0xFE8
 36101                           indf1	equ	0xFE7
 36102                           postinc1	equ	0xFE6
 36103                           postdec1	equ	0xFE5
 36104                           plusw1	equ	0xFE3
 36105                           fsr1h	equ	0xFE2
 36106                           fsr1l	equ	0xFE1
 36107                           indf2	equ	0xFDF
 36108                           postinc2	equ	0xFDE
 36109                           postdec2	equ	0xFDD
 36110                           plusw2	equ	0xFDB
 36111                           fsr2h	equ	0xFDA
 36112                           fsr2l	equ	0xFD9
 36113                           status	equ	0xFD8
 36114                           
 36115 ;; *************** function _ReceiveEvt *****************
 36116 ;; Defined at:
 36117 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36118 ;; Parameters:    Size  Location     Type
 36119 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 36120 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 36121 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 36122 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 36123 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 36124 ;;		 -> ActivateRiDetection(1), 
 36125 ;; Auto vars:     Size  Location     Type
 36126 ;;  EventStatus     1   32[BANK0 ] enum E7727
 36127 ;; Return value:  Size  Location     Type
 36128 ;;                  1    wreg      enum E7699
 36129 ;; Registers used:
 36130 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36131 ;; Tracked objects:
 36132 ;;		On entry : 0/0
 36133 ;;		On exit  : 0/0
 36134 ;;		Unchanged: 0/0
 36135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36138 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36139 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36140 ;;Total ram usage:        4 bytes
 36141 ;; Hardware stack levels used:    1
 36142 ;; Hardware stack levels required when called:   11
 36143 ;; This function calls:
 36144 ;;		Nothing
 36145 ;; This function is called by:
 36146 ;;		_MdmCntSm
 36147 ;;		_CheckModem
 36148 ;;		_ModemEvtParser
 36149 ;;		_GetSmsSm
 36150 ;;		_SendSmsSm
 36151 ;;		_Mdm_GetSmsData
 36152 ;;		_Mdm_IsSmsReceived
 36153 ;;		_Mdm_IsRinging
 36154 ;;		_GetCallerNumber
 36155 ;;		_InitGprsNetwork
 36156 ;;		_HttpGetMethod
 36157 ;;		_I2cSendMsgSm
 36158 ;;		_I2cSlv_I2cReadMsgSts
 36159 ;;		_RiSm
 36160 ;;		_GsmGprsTerminal
 36161 ;; This function uses a non-reentrant model
 36162 ;;
 36163                           
 36164                           	psect	text170
 36165  00682E                     __ptext170:
 36166                           	opt stack 0
 36167  00682E                     _ReceiveEvt:
 36168                           	opt stack 13
 36169                           
 36170                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 36171                           
 36172                           ;incstack = 0
 36173  00682E  0E00               	movlw	0
 36174  006830  0100               	movlb	0	; () banked
 36175  006832  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 36176                           
 36177                           ; BSR set to: 0
 36178                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 36179  006834  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 36180  006838  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 36181  00683C  0E02               	movlw	2
 36182  00683E  18DE               	xorwf	postinc2,w,c
 36183  006840  A4D8               	btfss	status,2,c
 36184  006842  D008               	goto	l832
 36185                           
 36186                           ; BSR set to: 0
 36187                           ;os_ser.c: 106: {
 36188                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 36189  006844  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 36190  006848  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 36191  00684C  0E01               	movlw	1
 36192  00684E  6EDF               	movwf	indf2,c
 36193                           
 36194                           ; BSR set to: 0
 36195                           ;os_ser.c: 110: EventStatus = EventReceived;
 36196  006850  0E01               	movlw	1
 36197  006852  D001               	goto	L81
 36198  006854                     l832:
 36199                           
 36200                           ; BSR set to: 0
 36201                           ;os_ser.c: 112: else
 36202                           ;os_ser.c: 113: {
 36203                           ;os_ser.c: 115: EventStatus = EventIdle;
 36204                           
 36205                           ; BSR set to: 0
 36206  006854  0E00               	movlw	0
 36207  006856                     L81:
 36208  006856  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 36209                           
 36210                           ; BSR set to: 0
 36211                           ;os_ser.c: 116: }
 36212                           ;os_ser.c: 119: return(EventStatus);
 36213  006858  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 36214  00685A  0012               	return	
 36215  00685C                     __end_of_ReceiveEvt:
 36216                           	opt stack 0
 36217                           tosu	equ	0xFFF
 36218                           tosh	equ	0xFFE
 36219                           tosl	equ	0xFFD
 36220                           pclath	equ	0xFFA
 36221                           tblptru	equ	0xFF8
 36222                           tblptrh	equ	0xFF7
 36223                           tblptrl	equ	0xFF6
 36224                           tablat	equ	0xFF5
 36225                           prodh	equ	0xFF4
 36226                           prodl	equ	0xFF3
 36227                           intcon	equ	0xFF2
 36228                           intcon2	equ	0xFF1
 36229                           intcon3	equ	0xFF0
 36230                           indf0	equ	0xFEF
 36231                           postinc0	equ	0xFEE
 36232                           plusw0	equ	0xFEB
 36233                           fsr0h	equ	0xFEA
 36234                           fsr0l	equ	0xFE9
 36235                           wreg	equ	0xFE8
 36236                           indf1	equ	0xFE7
 36237                           postinc1	equ	0xFE6
 36238                           postdec1	equ	0xFE5
 36239                           plusw1	equ	0xFE3
 36240                           fsr1h	equ	0xFE2
 36241                           fsr1l	equ	0xFE1
 36242                           indf2	equ	0xFDF
 36243                           postinc2	equ	0xFDE
 36244                           postdec2	equ	0xFDD
 36245                           plusw2	equ	0xFDB
 36246                           fsr2h	equ	0xFDA
 36247                           fsr2l	equ	0xFD9
 36248                           status	equ	0xFD8
 36249                           
 36250 ;; *************** function _I2c_WriteData *****************
 36251 ;; Defined at:
 36252 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36253 ;; Parameters:    Size  Location     Type
 36254 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 36255 ;;		 -> I2cTxPacket(5), 
 36256 ;; Auto vars:     Size  Location     Type
 36257 ;;		None
 36258 ;; Return value:  Size  Location     Type
 36259 ;;                  1    wreg      enum E7740
 36260 ;; Registers used:
 36261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36262 ;; Tracked objects:
 36263 ;;		On entry : 0/0
 36264 ;;		On exit  : 0/0
 36265 ;;		Unchanged: 0/0
 36266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36267 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36269 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36270 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36271 ;;Total ram usage:        4 bytes
 36272 ;; Hardware stack levels used:    1
 36273 ;; Hardware stack levels required when called:   12
 36274 ;; This function calls:
 36275 ;;		_CheckAckStatus
 36276 ;;		_CheckTxStatus
 36277 ;;		_StartCondition
 36278 ;;		_StopCondition
 36279 ;;		_WriteByte
 36280 ;; This function is called by:
 36281 ;;		_I2cSendMsgSm
 36282 ;; This function uses a non-reentrant model
 36283 ;;
 36284                           
 36285                           	psect	text171
 36286  001EB8                     __ptext171:
 36287                           	opt stack 0
 36288  001EB8                     _I2c_WriteData:
 36289                           	opt stack 14
 36290                           
 36291                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 36292                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 36293                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 36294                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 36295                           ;i2c_drv.c: 260: switch (I2cWriteState)
 36296                           
 36297                           ; BSR set to: 0
 36298                           ;incstack = 0
 36299  001EB8  D095               	goto	l160
 36300  001EBA                     
 36301                           ;i2c_drv.c: 264: StartCondition();
 36302  001EBA  ECDA  F036         	call	_StartCondition	;wreg free
 36303                           
 36304                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 36305  001EBE  0E00               	movlw	0
 36306  001EC0  6E35               	movwf	I2c_WriteData@WriteStatus,c
 36307                           
 36308                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 36309  001EC2  0E01               	movlw	1
 36310  001EC4  D084               	goto	L88
 36311  001EC6                     
 36312                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 36313  001EC6  0100               	movlb	0	; () banked
 36314  001EC8  EE20 F001          	lfsr	2,1
 36315  001ECC  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36316  001ECE  26D9               	addwf	fsr2l,f,c
 36317  001ED0  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36318  001ED2  22DA               	addwfc	fsr2h,f,c
 36319  001ED4  50DF               	movf	indf2,w,c
 36320  001ED6  6F80               	movwf	??_I2c_WriteData& (0+255),b
 36321  001ED8  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 36322  001EDC  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 36323  001EE0  50DF               	movf	indf2,w,c
 36324  001EE2  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 36325  001EE4  90D8               	bcf	status,0,c
 36326  001EE6  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 36327  001EE8  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 36328  001EEA  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 36329  001EEE  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 36330  001EF2  6EDF               	movwf	indf2,c
 36331                           
 36332                           ; BSR set to: 0
 36333                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 36334  001EF4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 36335  001EF8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 36336  001EFC  50DF               	movf	indf2,w,c
 36337  001EFE  ECB8  F036         	call	_WriteByte
 36338                           
 36339                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 36340  001F02  0E02               	movlw	2
 36341  001F04  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36342  001F06                     
 36343                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 36344  001F06  ECC2  F036         	call	_CheckTxStatus	;wreg free
 36345  001F0A  0900               	iorlw	0
 36346  001F0C  A4D8               	btfss	status,2,c
 36347  001F0E  D089               	goto	l162
 36348                           
 36349                           ;i2c_drv.c: 282: {
 36350                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 36351  001F10  0E03               	movlw	3
 36352  001F12  D01A               	goto	L90
 36353  001F14                     
 36354                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 36355  001F14  0100               	movlb	0	; () banked
 36356  001F16  EE20 F002          	lfsr	2,2
 36357  001F1A  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36358  001F1C  26D9               	addwf	fsr2l,f,c
 36359  001F1E  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36360  001F20  22DA               	addwfc	fsr2h,f,c
 36361  001F22  CFDE F080          	movff	postinc2,??_I2c_WriteData
 36362  001F26  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 36363  001F2A  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 36364  001F2E  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 36365  001F32  50DF               	movf	indf2,w,c
 36366  001F34  ECB8  F036         	call	_WriteByte
 36367                           
 36368                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 36369  001F38  0E04               	movlw	4
 36370  001F3A  D049               	goto	L88
 36371  001F3C                     
 36372                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 36373  001F3C  ECC2  F036         	call	_CheckTxStatus	;wreg free
 36374  001F40  0900               	iorlw	0
 36375  001F42  A4D8               	btfss	status,2,c
 36376  001F44  D06E               	goto	l162
 36377                           
 36378                           ;i2c_drv.c: 300: {
 36379                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 36380  001F46  0E05               	movlw	5
 36381  001F48                     L90:
 36382  001F48  6E37               	movwf	I2c_WriteData@I2cNextState,c
 36383                           
 36384                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 36385  001F4A  0E08               	movlw	8
 36386  001F4C  D040               	goto	L88
 36387  001F4E                     
 36388                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 36389  001F4E  0100               	movlb	0	; () banked
 36390  001F50  EE20 F004          	lfsr	2,4
 36391  001F54  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36392  001F56  26D9               	addwf	fsr2l,f,c
 36393  001F58  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36394  001F5A  22DA               	addwfc	fsr2h,f,c
 36395  001F5C  50DF               	movf	indf2,w,c
 36396  001F5E  B4D8               	btfsc	status,2,c
 36397  001F60  D010               	goto	l170
 36398                           
 36399                           ; BSR set to: 0
 36400                           ;i2c_drv.c: 310: {
 36401                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 36402  001F62  EE20 F004          	lfsr	2,4
 36403  001F66  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36404  001F68  26D9               	addwf	fsr2l,f,c
 36405  001F6A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36406  001F6C  22DA               	addwfc	fsr2h,f,c
 36407  001F6E  06DF               	decf	indf2,f,c
 36408                           
 36409                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 36410  001F70  EE20 F002          	lfsr	2,2
 36411  001F74  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36412  001F76  26D9               	addwf	fsr2l,f,c
 36413  001F78  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36414  001F7A  22DA               	addwfc	fsr2h,f,c
 36415  001F7C  2ADE               	incf	postinc2,f,c
 36416  001F7E  0E00               	movlw	0
 36417  001F80  22DD               	addwfc	postdec2,f,c
 36418  001F82                     l170:
 36419                           
 36420                           ; BSR set to: 0
 36421                           ;i2c_drv.c: 315: }
 36422                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 36423  001F82  EE20 F004          	lfsr	2,4
 36424  001F86  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36425  001F88  26D9               	addwf	fsr2l,f,c
 36426  001F8A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36427  001F8C  22DA               	addwfc	fsr2h,f,c
 36428  001F8E  50DF               	movf	indf2,w,c
 36429  001F90  A4D8               	btfss	status,2,c
 36430  001F92  D002               	goto	l171
 36431                           
 36432                           ; BSR set to: 0
 36433                           ;i2c_drv.c: 319: {
 36434                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 36435  001F94  0E06               	movlw	6
 36436  001F96  D01B               	goto	L88
 36437  001F98                     l171:
 36438                           
 36439                           ; BSR set to: 0
 36440                           ;i2c_drv.c: 323: else
 36441                           ;i2c_drv.c: 324: {
 36442                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 36443                           
 36444                           ; BSR set to: 0
 36445  001F98  0E03               	movlw	3
 36446  001F9A  D019               	goto	L88
 36447  001F9C                     
 36448                           ;i2c_drv.c: 332: StopCondition();
 36449                           
 36450                           ; BSR set to: 0
 36451  001F9C  ECD8  F036         	call	_StopCondition	;wreg free
 36452                           
 36453                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 36454  001FA0  0E07               	movlw	7
 36455  001FA2  D015               	goto	L88
 36456  001FA4                     
 36457                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 36458  001FA4  0E00               	movlw	0
 36459  001FA6  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36460                           
 36461                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 36462  001FA8  0E00               	movlw	0
 36463  001FAA  6E37               	movwf	I2c_WriteData@I2cNextState,c
 36464                           
 36465                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 36466  001FAC  0E02               	movlw	2
 36467  001FAE  D018               	goto	L89
 36468  001FB0                     
 36469                           ;i2c_drv.c: 347: TentativeCounter++;
 36470  001FB0  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 36471                           
 36472                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 36473  001FB2  ECC7  F036         	call	_CheckAckStatus	;wreg free
 36474  001FB6  0900               	iorlw	0
 36475  001FB8  A4D8               	btfss	status,2,c
 36476  001FBA  D005               	goto	l176
 36477                           
 36478                           ;i2c_drv.c: 350: {
 36479                           ;i2c_drv.c: 352: TentativeCounter = 0;
 36480  001FBC  0E00               	movlw	0
 36481  001FBE  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 36482                           
 36483                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 36484  001FC0  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 36485                           
 36486                           ;i2c_drv.c: 355: }
 36487  001FC4  D02E               	goto	l162
 36488  001FC6                     l176:
 36489                           
 36490                           ;i2c_drv.c: 356: else
 36491                           ;i2c_drv.c: 357: {
 36492                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 36493  001FC6  0E02               	movlw	2
 36494  001FC8  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 36495  001FCA  D02B               	goto	l162
 36496                           
 36497                           ;i2c_drv.c: 360: {
 36498                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 36499  001FCC  0E09               	movlw	9
 36500  001FCE                     L88:
 36501  001FCE  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36502                           
 36503                           ;i2c_drv.c: 363: }
 36504                           ;i2c_drv.c: 364: }
 36505                           ;i2c_drv.c: 365: break;
 36506  001FD0  D028               	goto	l162
 36507  001FD2                     
 36508                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 36509  001FD2  0E00               	movlw	0
 36510  001FD4  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36511                           
 36512                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 36513  001FD6  0E00               	movlw	0
 36514  001FD8  6E37               	movwf	I2c_WriteData@I2cNextState,c
 36515                           
 36516                           ;i2c_drv.c: 372: TentativeCounter = 0;
 36517  001FDA  0E00               	movlw	0
 36518  001FDC  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 36519                           
 36520                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 36521  001FDE  0E01               	movlw	1
 36522  001FE0                     L89:
 36523  001FE0  6E35               	movwf	I2c_WriteData@WriteStatus,c
 36524                           
 36525                           ;i2c_drv.c: 379: }
 36526                           
 36527                           ;i2c_drv.c: 378: break;
 36528                           
 36529                           ;i2c_drv.c: 377: default:
 36530                           
 36531                           ;i2c_drv.c: 375: break;
 36532  001FE2  D01F               	goto	l162
 36533  001FE4                     l160:
 36534  001FE4  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 36535                           
 36536                           ; Switch size 1, requested type "space"
 36537                           ; Number of cases is 10, Range of values is 0 to 9
 36538                           ; switch strategies available:
 36539                           ; Name         Instructions Cycles
 36540                           ; simple_byte           31    16 (average)
 36541                           ;	Chosen strategy is simple_byte
 36542  001FE6  0A00               	xorlw	0	; case 0
 36543  001FE8  B4D8               	btfsc	status,2,c
 36544  001FEA  D767               	goto	l161
 36545  001FEC  0A01               	xorlw	1	; case 1
 36546  001FEE  B4D8               	btfsc	status,2,c
 36547  001FF0  D76A               	goto	l163
 36548  001FF2  0A03               	xorlw	3	; case 2
 36549  001FF4  B4D8               	btfsc	status,2,c
 36550  001FF6  D787               	goto	l164
 36551  001FF8  0A01               	xorlw	1	; case 3
 36552  001FFA  B4D8               	btfsc	status,2,c
 36553  001FFC  D78B               	goto	l166
 36554  001FFE  0A07               	xorlw	7	; case 4
 36555  002000  B4D8               	btfsc	status,2,c
 36556  002002  D79C               	goto	l167
 36557  002004  0A01               	xorlw	1	; case 5
 36558  002006  B4D8               	btfsc	status,2,c
 36559  002008  D7A2               	goto	l169
 36560  00200A  0A03               	xorlw	3	; case 6
 36561  00200C  B4D8               	btfsc	status,2,c
 36562  00200E  D7C6               	goto	l173
 36563  002010  0A01               	xorlw	1	; case 7
 36564  002012  B4D8               	btfsc	status,2,c
 36565  002014  D7C7               	goto	l174
 36566  002016  0A0F               	xorlw	15	; case 8
 36567  002018  B4D8               	btfsc	status,2,c
 36568  00201A  D7CA               	goto	l175
 36569  00201C  0A01               	xorlw	1	; case 9
 36570  00201E  B4D8               	btfsc	status,2,c
 36571  002020  D7D8               	goto	l179
 36572  002022                     l162:
 36573                           
 36574                           ;i2c_drv.c: 382: return WriteStatus;
 36575  002022  5035               	movf	I2c_WriteData@WriteStatus,w,c
 36576  002024  0012               	return	
 36577  002026                     __end_of_I2c_WriteData:
 36578                           	opt stack 0
 36579                           tosu	equ	0xFFF
 36580                           tosh	equ	0xFFE
 36581                           tosl	equ	0xFFD
 36582                           pclath	equ	0xFFA
 36583                           tblptru	equ	0xFF8
 36584                           tblptrh	equ	0xFF7
 36585                           tblptrl	equ	0xFF6
 36586                           tablat	equ	0xFF5
 36587                           prodh	equ	0xFF4
 36588                           prodl	equ	0xFF3
 36589                           intcon	equ	0xFF2
 36590                           intcon2	equ	0xFF1
 36591                           intcon3	equ	0xFF0
 36592                           indf0	equ	0xFEF
 36593                           postinc0	equ	0xFEE
 36594                           plusw0	equ	0xFEB
 36595                           fsr0h	equ	0xFEA
 36596                           fsr0l	equ	0xFE9
 36597                           wreg	equ	0xFE8
 36598                           indf1	equ	0xFE7
 36599                           postinc1	equ	0xFE6
 36600                           postdec1	equ	0xFE5
 36601                           plusw1	equ	0xFE3
 36602                           fsr1h	equ	0xFE2
 36603                           fsr1l	equ	0xFE1
 36604                           indf2	equ	0xFDF
 36605                           postinc2	equ	0xFDE
 36606                           postdec2	equ	0xFDD
 36607                           plusw2	equ	0xFDB
 36608                           fsr2h	equ	0xFDA
 36609                           fsr2l	equ	0xFD9
 36610                           status	equ	0xFD8
 36611                           
 36612 ;; *************** function _I2c_ReadData *****************
 36613 ;; Defined at:
 36614 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36615 ;; Parameters:    Size  Location     Type
 36616 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 36617 ;;		 -> I2cRxPacket(6), 
 36618 ;; Auto vars:     Size  Location     Type
 36619 ;;		None
 36620 ;; Return value:  Size  Location     Type
 36621 ;;                  1    wreg      enum E7787
 36622 ;; Registers used:
 36623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36624 ;; Tracked objects:
 36625 ;;		On entry : 0/0
 36626 ;;		On exit  : 0/0
 36627 ;;		Unchanged: 0/0
 36628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36629 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36631 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36632 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36633 ;;Total ram usage:        4 bytes
 36634 ;; Hardware stack levels used:    1
 36635 ;; Hardware stack levels required when called:   12
 36636 ;; This function calls:
 36637 ;;		_CheckAckStatus
 36638 ;;		_CheckTxStatus
 36639 ;;		_EnableReceiver
 36640 ;;		_GenerateEvt
 36641 ;;		_ReadByte
 36642 ;;		_SetAckStatus
 36643 ;;		_StartCondition
 36644 ;;		_StopCondition
 36645 ;;		_WriteByte
 36646 ;; This function is called by:
 36647 ;;		_I2cSendMsgSm
 36648 ;; This function uses a non-reentrant model
 36649 ;;
 36650                           
 36651                           	psect	text172
 36652  002186                     __ptext172:
 36653                           	opt stack 0
 36654  002186                     _I2c_ReadData:
 36655                           	opt stack 14
 36656                           
 36657                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 36658                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 36659                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 36660                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 36661                           ;i2c_drv.c: 402: switch (I2cReadState)
 36662                           
 36663                           ;incstack = 0
 36664  002186  D090               	goto	l192
 36665  002188                     
 36666                           ;i2c_drv.c: 406: StartCondition();
 36667  002188  ECDA  F036         	call	_StartCondition	;wreg free
 36668                           
 36669                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 36670  00218C  0E00               	movlw	0
 36671  00218E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36672                           
 36673                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 36674  002190  0E01               	movlw	1
 36675  002192  D083               	goto	L98
 36676  002194                     
 36677                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 36678  002194  0100               	movlb	0	; () banked
 36679  002196  EE20 F001          	lfsr	2,1
 36680  00219A  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36681  00219C  26D9               	addwf	fsr2l,f,c
 36682  00219E  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36683  0021A0  22DA               	addwfc	fsr2h,f,c
 36684  0021A2  50DF               	movf	indf2,w,c
 36685  0021A4  6F82               	movwf	??_I2c_ReadData& (0+255),b
 36686  0021A6  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 36687  0021AA  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 36688  0021AE  50DF               	movf	indf2,w,c
 36689  0021B0  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 36690  0021B2  90D8               	bcf	status,0,c
 36691  0021B4  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 36692  0021B6  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 36693  0021B8  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 36694  0021BC  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 36695  0021C0  6EDF               	movwf	indf2,c
 36696                           
 36697                           ; BSR set to: 0
 36698                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 36699  0021C2  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 36700  0021C6  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 36701  0021CA  50DF               	movf	indf2,w,c
 36702  0021CC  ECB8  F036         	call	_WriteByte
 36703                           
 36704                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 36705  0021D0  0E02               	movlw	2
 36706  0021D2  D063               	goto	L98
 36707  0021D4                     
 36708                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 36709  0021D4  ECC2  F036         	call	_CheckTxStatus	;wreg free
 36710  0021D8  0900               	iorlw	0
 36711  0021DA  A4D8               	btfss	status,2,c
 36712  0021DC  D081               	goto	l194
 36713                           
 36714                           ;i2c_drv.c: 425: {
 36715                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 36716  0021DE  0E03               	movlw	3
 36717  0021E0  D05C               	goto	L98
 36718  0021E2                     
 36719                           ;i2c_drv.c: 433: TentativeCounter++;
 36720  0021E2  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 36721                           
 36722                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 36723  0021E4  ECC7  F036         	call	_CheckAckStatus	;wreg free
 36724  0021E8  0900               	iorlw	0
 36725  0021EA  A4D8               	btfss	status,2,c
 36726  0021EC  D004               	goto	l199
 36727                           
 36728                           ;i2c_drv.c: 436: {
 36729                           ;i2c_drv.c: 438: TentativeCounter = 0;
 36730  0021EE  0E00               	movlw	0
 36731  0021F0  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 36732  0021F2                     
 36733                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 36734  0021F2  0E04               	movlw	4
 36735  0021F4  D052               	goto	L98
 36736  0021F6                     l199:
 36737                           
 36738                           ;i2c_drv.c: 442: else
 36739                           ;i2c_drv.c: 443: {
 36740                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 36741  0021F6  0E02               	movlw	2
 36742  0021F8  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 36743  0021FA  D072               	goto	l194
 36744                           
 36745                           ;i2c_drv.c: 446: {
 36746                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 36747  0021FC  0E08               	movlw	8
 36748  0021FE  D04D               	goto	L98
 36749  002200                     
 36750                           ;i2c_drv.c: 455: EnableReceiver();
 36751  002200  ECDC  F036         	call	_EnableReceiver	;wreg free
 36752                           
 36753                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 36754  002204  0E05               	movlw	5
 36755  002206  D049               	goto	L98
 36756  002208                     
 36757                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 36758  002208  ECC2  F036         	call	_CheckTxStatus	;wreg free
 36759  00220C  0900               	iorlw	0
 36760  00220E  A4D8               	btfss	status,2,c
 36761  002210  D067               	goto	l194
 36762                           
 36763                           ;i2c_drv.c: 463: {
 36764                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 36765  002212  0100               	movlb	0	; () banked
 36766  002214  EE20 F002          	lfsr	2,2
 36767  002218  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36768  00221A  26D9               	addwf	fsr2l,f,c
 36769  00221C  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36770  00221E  22DA               	addwfc	fsr2h,f,c
 36771  002220  CFDE F082          	movff	postinc2,??_I2c_ReadData
 36772  002224  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 36773  002228  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 36774  00222C  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 36775  002230  ECBD  F036         	call	_ReadByte	;wreg free
 36776  002234  6EDF               	movwf	indf2,c
 36777                           
 36778                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 36779  002236  0100               	movlb	0	; () banked
 36780  002238  EE20 F002          	lfsr	2,2
 36781  00223C  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36782  00223E  26D9               	addwf	fsr2l,f,c
 36783  002240  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36784  002242  22DA               	addwfc	fsr2h,f,c
 36785  002244  2ADE               	incf	postinc2,f,c
 36786  002246  0E00               	movlw	0
 36787  002248  22DD               	addwfc	postdec2,f,c
 36788                           
 36789                           ; BSR set to: 0
 36790                           ;i2c_drv.c: 469: DataCounter++;
 36791  00224A  2A33               	incf	I2c_ReadData@DataCounter,f,c
 36792                           
 36793                           ; BSR set to: 0
 36794                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 36795  00224C  0E06               	movlw	6
 36796  00224E  D025               	goto	L98
 36797  002250                     
 36798                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 36799                           
 36800                           ; BSR set to: 0
 36801  002250  0100               	movlb	0	; () banked
 36802  002252  EE20 F004          	lfsr	2,4
 36803  002256  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36804  002258  26D9               	addwf	fsr2l,f,c
 36805  00225A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36806  00225C  22DA               	addwfc	fsr2h,f,c
 36807  00225E  50DE               	movf	postinc2,w,c
 36808  002260  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 36809  002262  A0D8               	btfss	status,0,c
 36810  002264  D008               	goto	l206
 36811                           
 36812                           ; BSR set to: 0
 36813                           ;i2c_drv.c: 478: {
 36814                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 36815  002266  0E01               	movlw	1
 36816  002268  EC40  F036         	call	_SetAckStatus
 36817                           
 36818                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 36819  00226C  0E07               	movlw	7
 36820  00226E  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36821                           
 36822                           ;i2c_drv.c: 484: DataCounter = 0;
 36823  002270  0E00               	movlw	0
 36824  002272  6E33               	movwf	I2c_ReadData@DataCounter,c
 36825                           
 36826                           ;i2c_drv.c: 485: }
 36827  002274  D035               	goto	l194
 36828  002276                     l206:
 36829                           
 36830                           ;i2c_drv.c: 486: else
 36831                           ;i2c_drv.c: 487: {
 36832                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 36833  002276  0E00               	movlw	0
 36834  002278  EC40  F036         	call	_SetAckStatus
 36835  00227C  D7BA               	goto	L99
 36836  00227E                     
 36837                           ;i2c_drv.c: 497: StopCondition();
 36838  00227E  ECD8  F036         	call	_StopCondition	;wreg free
 36839                           
 36840                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 36841  002282  0E02               	movlw	2
 36842  002284  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36843                           
 36844                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 36845  002286  0E05               	movlw	5
 36846  002288  0100               	movlb	0	; () banked
 36847  00228A  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 36848  00228C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 36849  00228E  0E00               	movlw	0
 36850  002290  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36851  002292  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 36852  002294  EC08  F036         	call	_GenerateEvt	;wreg free
 36853                           
 36854                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 36855  002298  0E00               	movlw	0
 36856  00229A                     L98:
 36857  00229A  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36858                           
 36859                           ;i2c_drv.c: 504: break;
 36860  00229C  D021               	goto	l194
 36861  00229E                     
 36862                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 36863  00229E  0E00               	movlw	0
 36864  0022A0  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36865                           
 36866                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 36867  0022A2  0E01               	movlw	1
 36868  0022A4  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36869                           
 36870                           ;i2c_drv.c: 515: }
 36871                           
 36872                           ;i2c_drv.c: 514: break;
 36873                           
 36874                           ;i2c_drv.c: 513: default:
 36875                           
 36876                           ;i2c_drv.c: 511: break;
 36877  0022A6  D01C               	goto	l194
 36878  0022A8                     l192:
 36879  0022A8  5034               	movf	I2c_ReadData@I2cReadState,w,c
 36880                           
 36881                           ; Switch size 1, requested type "space"
 36882                           ; Number of cases is 9, Range of values is 0 to 8
 36883                           ; switch strategies available:
 36884                           ; Name         Instructions Cycles
 36885                           ; simple_byte           28    15 (average)
 36886                           ;	Chosen strategy is simple_byte
 36887  0022AA  0A00               	xorlw	0	; case 0
 36888  0022AC  B4D8               	btfsc	status,2,c
 36889  0022AE  D76C               	goto	l193
 36890  0022B0  0A01               	xorlw	1	; case 1
 36891  0022B2  B4D8               	btfsc	status,2,c
 36892  0022B4  D76F               	goto	l195
 36893  0022B6  0A03               	xorlw	3	; case 2
 36894  0022B8  B4D8               	btfsc	status,2,c
 36895  0022BA  D78C               	goto	l196
 36896  0022BC  0A01               	xorlw	1	; case 3
 36897  0022BE  B4D8               	btfsc	status,2,c
 36898  0022C0  D790               	goto	l198
 36899  0022C2  0A07               	xorlw	7	; case 4
 36900  0022C4  B4D8               	btfsc	status,2,c
 36901  0022C6  D79C               	goto	l202
 36902  0022C8  0A01               	xorlw	1	; case 5
 36903  0022CA  B4D8               	btfsc	status,2,c
 36904  0022CC  D79D               	goto	l203
 36905  0022CE  0A03               	xorlw	3	; case 6
 36906  0022D0  B4D8               	btfsc	status,2,c
 36907  0022D2  D7BE               	goto	l205
 36908  0022D4  0A01               	xorlw	1	; case 7
 36909  0022D6  B4D8               	btfsc	status,2,c
 36910  0022D8  D7D2               	goto	l208
 36911  0022DA  0A0F               	xorlw	15	; case 8
 36912  0022DC  B4D8               	btfsc	status,2,c
 36913  0022DE  D7DF               	goto	l209
 36914  0022E0                     l194:
 36915                           
 36916                           ;i2c_drv.c: 518: return ReadStatus;
 36917  0022E0  5031               	movf	I2c_ReadData@ReadStatus,w,c
 36918  0022E2  0012               	return	
 36919  0022E4                     __end_of_I2c_ReadData:
 36920                           	opt stack 0
 36921                           tosu	equ	0xFFF
 36922                           tosh	equ	0xFFE
 36923                           tosl	equ	0xFFD
 36924                           pclath	equ	0xFFA
 36925                           tblptru	equ	0xFF8
 36926                           tblptrh	equ	0xFF7
 36927                           tblptrl	equ	0xFF6
 36928                           tablat	equ	0xFF5
 36929                           prodh	equ	0xFF4
 36930                           prodl	equ	0xFF3
 36931                           intcon	equ	0xFF2
 36932                           intcon2	equ	0xFF1
 36933                           intcon3	equ	0xFF0
 36934                           indf0	equ	0xFEF
 36935                           postinc0	equ	0xFEE
 36936                           plusw0	equ	0xFEB
 36937                           fsr0h	equ	0xFEA
 36938                           fsr0l	equ	0xFE9
 36939                           wreg	equ	0xFE8
 36940                           indf1	equ	0xFE7
 36941                           postinc1	equ	0xFE6
 36942                           postdec1	equ	0xFE5
 36943                           plusw1	equ	0xFE3
 36944                           fsr1h	equ	0xFE2
 36945                           fsr1l	equ	0xFE1
 36946                           indf2	equ	0xFDF
 36947                           postinc2	equ	0xFDE
 36948                           postdec2	equ	0xFDD
 36949                           plusw2	equ	0xFDB
 36950                           fsr2h	equ	0xFDA
 36951                           fsr2l	equ	0xFD9
 36952                           status	equ	0xFD8
 36953                           
 36954 ;; *************** function _WriteByte *****************
 36955 ;; Defined at:
 36956 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36957 ;; Parameters:    Size  Location     Type
 36958 ;;  Byte            1    wreg     unsigned char 
 36959 ;; Auto vars:     Size  Location     Type
 36960 ;;  Byte            1   29[BANK0 ] unsigned char 
 36961 ;; Return value:  Size  Location     Type
 36962 ;;                  1    wreg      void 
 36963 ;; Registers used:
 36964 ;;		wreg
 36965 ;; Tracked objects:
 36966 ;;		On entry : 0/0
 36967 ;;		On exit  : 0/0
 36968 ;;		Unchanged: 0/0
 36969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36971 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36973 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36974 ;;Total ram usage:        1 bytes
 36975 ;; Hardware stack levels used:    1
 36976 ;; Hardware stack levels required when called:   11
 36977 ;; This function calls:
 36978 ;;		Nothing
 36979 ;; This function is called by:
 36980 ;;		_I2c_WriteData
 36981 ;;		_I2c_ReadData
 36982 ;; This function uses a non-reentrant model
 36983 ;;
 36984                           
 36985                           	psect	text173
 36986  006D70                     __ptext173:
 36987                           	opt stack 0
 36988  006D70                     _WriteByte:
 36989                           	opt stack 14
 36990                           
 36991                           ;incstack = 0
 36992                           ;WriteByte@Byte stored from wreg
 36993  006D70  0100               	movlb	0	; () banked
 36994  006D72  6F7D               	movwf	WriteByte@Byte& (0+255),b
 36995                           
 36996                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 36997  006D74  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 36998  006D78  0012               	return		;funcret
 36999  006D7A                     __end_of_WriteByte:
 37000                           	opt stack 0
 37001                           tosu	equ	0xFFF
 37002                           tosh	equ	0xFFE
 37003                           tosl	equ	0xFFD
 37004                           pclath	equ	0xFFA
 37005                           tblptru	equ	0xFF8
 37006                           tblptrh	equ	0xFF7
 37007                           tblptrl	equ	0xFF6
 37008                           tablat	equ	0xFF5
 37009                           prodh	equ	0xFF4
 37010                           prodl	equ	0xFF3
 37011                           intcon	equ	0xFF2
 37012                           intcon2	equ	0xFF1
 37013                           intcon3	equ	0xFF0
 37014                           indf0	equ	0xFEF
 37015                           postinc0	equ	0xFEE
 37016                           plusw0	equ	0xFEB
 37017                           fsr0h	equ	0xFEA
 37018                           fsr0l	equ	0xFE9
 37019                           wreg	equ	0xFE8
 37020                           indf1	equ	0xFE7
 37021                           postinc1	equ	0xFE6
 37022                           postdec1	equ	0xFE5
 37023                           plusw1	equ	0xFE3
 37024                           fsr1h	equ	0xFE2
 37025                           fsr1l	equ	0xFE1
 37026                           indf2	equ	0xFDF
 37027                           postinc2	equ	0xFDE
 37028                           postdec2	equ	0xFDD
 37029                           plusw2	equ	0xFDB
 37030                           fsr2h	equ	0xFDA
 37031                           fsr2l	equ	0xFD9
 37032                           status	equ	0xFD8
 37033                           
 37034 ;; *************** function _StopCondition *****************
 37035 ;; Defined at:
 37036 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37037 ;; Parameters:    Size  Location     Type
 37038 ;;		None
 37039 ;; Auto vars:     Size  Location     Type
 37040 ;;		None
 37041 ;; Return value:  Size  Location     Type
 37042 ;;                  1    wreg      void 
 37043 ;; Registers used:
 37044 ;;		status,2, status,0
 37045 ;; Tracked objects:
 37046 ;;		On entry : 0/0
 37047 ;;		On exit  : 0/0
 37048 ;;		Unchanged: 0/0
 37049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37054 ;;Total ram usage:        0 bytes
 37055 ;; Hardware stack levels used:    1
 37056 ;; Hardware stack levels required when called:   11
 37057 ;; This function calls:
 37058 ;;		Nothing
 37059 ;; This function is called by:
 37060 ;;		_I2c_WriteData
 37061 ;;		_I2c_ReadData
 37062 ;; This function uses a non-reentrant model
 37063 ;;
 37064                           
 37065                           	psect	text174
 37066  006DB0                     __ptext174:
 37067                           	opt stack 0
 37068  006DB0                     _StopCondition:
 37069                           	opt stack 14
 37070                           
 37071                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 37072                           
 37073                           ;incstack = 0
 37074  006DB0  8471               	bsf	3953,2,c	;volatile
 37075  006DB2  0012               	return		;funcret
 37076  006DB4                     __end_of_StopCondition:
 37077                           	opt stack 0
 37078                           tosu	equ	0xFFF
 37079                           tosh	equ	0xFFE
 37080                           tosl	equ	0xFFD
 37081                           pclath	equ	0xFFA
 37082                           tblptru	equ	0xFF8
 37083                           tblptrh	equ	0xFF7
 37084                           tblptrl	equ	0xFF6
 37085                           tablat	equ	0xFF5
 37086                           prodh	equ	0xFF4
 37087                           prodl	equ	0xFF3
 37088                           intcon	equ	0xFF2
 37089                           intcon2	equ	0xFF1
 37090                           intcon3	equ	0xFF0
 37091                           indf0	equ	0xFEF
 37092                           postinc0	equ	0xFEE
 37093                           plusw0	equ	0xFEB
 37094                           fsr0h	equ	0xFEA
 37095                           fsr0l	equ	0xFE9
 37096                           wreg	equ	0xFE8
 37097                           indf1	equ	0xFE7
 37098                           postinc1	equ	0xFE6
 37099                           postdec1	equ	0xFE5
 37100                           plusw1	equ	0xFE3
 37101                           fsr1h	equ	0xFE2
 37102                           fsr1l	equ	0xFE1
 37103                           indf2	equ	0xFDF
 37104                           postinc2	equ	0xFDE
 37105                           postdec2	equ	0xFDD
 37106                           plusw2	equ	0xFDB
 37107                           fsr2h	equ	0xFDA
 37108                           fsr2l	equ	0xFD9
 37109                           status	equ	0xFD8
 37110                           
 37111 ;; *************** function _StartCondition *****************
 37112 ;; Defined at:
 37113 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37114 ;; Parameters:    Size  Location     Type
 37115 ;;		None
 37116 ;; Auto vars:     Size  Location     Type
 37117 ;;		None
 37118 ;; Return value:  Size  Location     Type
 37119 ;;                  1    wreg      void 
 37120 ;; Registers used:
 37121 ;;		status,2, status,0
 37122 ;; Tracked objects:
 37123 ;;		On entry : 0/0
 37124 ;;		On exit  : 0/0
 37125 ;;		Unchanged: 0/0
 37126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37131 ;;Total ram usage:        0 bytes
 37132 ;; Hardware stack levels used:    1
 37133 ;; Hardware stack levels required when called:   11
 37134 ;; This function calls:
 37135 ;;		Nothing
 37136 ;; This function is called by:
 37137 ;;		_I2c_WriteData
 37138 ;;		_I2c_ReadData
 37139 ;; This function uses a non-reentrant model
 37140 ;;
 37141                           
 37142                           	psect	text175
 37143  006DB4                     __ptext175:
 37144                           	opt stack 0
 37145  006DB4                     _StartCondition:
 37146                           	opt stack 14
 37147                           
 37148                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 37149                           
 37150                           ;incstack = 0
 37151  006DB4  8071               	bsf	3953,0,c	;volatile
 37152  006DB6  0012               	return		;funcret
 37153  006DB8                     __end_of_StartCondition:
 37154                           	opt stack 0
 37155                           tosu	equ	0xFFF
 37156                           tosh	equ	0xFFE
 37157                           tosl	equ	0xFFD
 37158                           pclath	equ	0xFFA
 37159                           tblptru	equ	0xFF8
 37160                           tblptrh	equ	0xFF7
 37161                           tblptrl	equ	0xFF6
 37162                           tablat	equ	0xFF5
 37163                           prodh	equ	0xFF4
 37164                           prodl	equ	0xFF3
 37165                           intcon	equ	0xFF2
 37166                           intcon2	equ	0xFF1
 37167                           intcon3	equ	0xFF0
 37168                           indf0	equ	0xFEF
 37169                           postinc0	equ	0xFEE
 37170                           plusw0	equ	0xFEB
 37171                           fsr0h	equ	0xFEA
 37172                           fsr0l	equ	0xFE9
 37173                           wreg	equ	0xFE8
 37174                           indf1	equ	0xFE7
 37175                           postinc1	equ	0xFE6
 37176                           postdec1	equ	0xFE5
 37177                           plusw1	equ	0xFE3
 37178                           fsr1h	equ	0xFE2
 37179                           fsr1l	equ	0xFE1
 37180                           indf2	equ	0xFDF
 37181                           postinc2	equ	0xFDE
 37182                           postdec2	equ	0xFDD
 37183                           plusw2	equ	0xFDB
 37184                           fsr2h	equ	0xFDA
 37185                           fsr2l	equ	0xFD9
 37186                           status	equ	0xFD8
 37187                           
 37188 ;; *************** function _SetAckStatus *****************
 37189 ;; Defined at:
 37190 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37191 ;; Parameters:    Size  Location     Type
 37192 ;;  AckSts          1    wreg     unsigned char 
 37193 ;; Auto vars:     Size  Location     Type
 37194 ;;  AckSts          1   29[BANK0 ] unsigned char 
 37195 ;; Return value:  Size  Location     Type
 37196 ;;                  1    wreg      void 
 37197 ;; Registers used:
 37198 ;;		wreg
 37199 ;; Tracked objects:
 37200 ;;		On entry : 0/0
 37201 ;;		On exit  : 0/0
 37202 ;;		Unchanged: 0/0
 37203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37205 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37207 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37208 ;;Total ram usage:        1 bytes
 37209 ;; Hardware stack levels used:    1
 37210 ;; Hardware stack levels required when called:   11
 37211 ;; This function calls:
 37212 ;;		Nothing
 37213 ;; This function is called by:
 37214 ;;		_I2c_ReadData
 37215 ;; This function uses a non-reentrant model
 37216 ;;
 37217                           
 37218                           	psect	text176
 37219  006C80                     __ptext176:
 37220                           	opt stack 0
 37221  006C80                     _SetAckStatus:
 37222                           	opt stack 14
 37223                           
 37224                           ;incstack = 0
 37225                           ;SetAckStatus@AckSts stored from wreg
 37226  006C80  0100               	movlb	0	; () banked
 37227  006C82  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 37228                           
 37229                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 37230  006C84  0100               	movlb	0	; () banked
 37231  006C86  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 37232  006C88  D002               	bra	u12865
 37233  006C8A  9A71               	bcf	3953,5,c	;volatile
 37234  006C8C  D001               	bra	u12866
 37235  006C8E                     u12865:
 37236  006C8E  8A71               	bsf	3953,5,c	;volatile
 37237  006C90                     u12866:
 37238                           
 37239                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 37240  006C90  8871               	bsf	3953,4,c	;volatile
 37241  006C92  0012               	return		;funcret
 37242  006C94                     __end_of_SetAckStatus:
 37243                           	opt stack 0
 37244                           tosu	equ	0xFFF
 37245                           tosh	equ	0xFFE
 37246                           tosl	equ	0xFFD
 37247                           pclath	equ	0xFFA
 37248                           tblptru	equ	0xFF8
 37249                           tblptrh	equ	0xFF7
 37250                           tblptrl	equ	0xFF6
 37251                           tablat	equ	0xFF5
 37252                           prodh	equ	0xFF4
 37253                           prodl	equ	0xFF3
 37254                           intcon	equ	0xFF2
 37255                           intcon2	equ	0xFF1
 37256                           intcon3	equ	0xFF0
 37257                           indf0	equ	0xFEF
 37258                           postinc0	equ	0xFEE
 37259                           plusw0	equ	0xFEB
 37260                           fsr0h	equ	0xFEA
 37261                           fsr0l	equ	0xFE9
 37262                           wreg	equ	0xFE8
 37263                           indf1	equ	0xFE7
 37264                           postinc1	equ	0xFE6
 37265                           postdec1	equ	0xFE5
 37266                           plusw1	equ	0xFE3
 37267                           fsr1h	equ	0xFE2
 37268                           fsr1l	equ	0xFE1
 37269                           indf2	equ	0xFDF
 37270                           postinc2	equ	0xFDE
 37271                           postdec2	equ	0xFDD
 37272                           plusw2	equ	0xFDB
 37273                           fsr2h	equ	0xFDA
 37274                           fsr2l	equ	0xFD9
 37275                           status	equ	0xFD8
 37276                           
 37277 ;; *************** function _ReadByte *****************
 37278 ;; Defined at:
 37279 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37280 ;; Parameters:    Size  Location     Type
 37281 ;;		None
 37282 ;; Auto vars:     Size  Location     Type
 37283 ;;  Byte            1   29[BANK0 ] unsigned char 
 37284 ;; Return value:  Size  Location     Type
 37285 ;;                  1    wreg      unsigned char 
 37286 ;; Registers used:
 37287 ;;		wreg, status,2
 37288 ;; Tracked objects:
 37289 ;;		On entry : 0/0
 37290 ;;		On exit  : 0/0
 37291 ;;		Unchanged: 0/0
 37292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37297 ;;Total ram usage:        1 bytes
 37298 ;; Hardware stack levels used:    1
 37299 ;; Hardware stack levels required when called:   11
 37300 ;; This function calls:
 37301 ;;		Nothing
 37302 ;; This function is called by:
 37303 ;;		_I2c_ReadData
 37304 ;; This function uses a non-reentrant model
 37305 ;;
 37306                           
 37307                           	psect	text177
 37308  006D7A                     __ptext177:
 37309                           	opt stack 0
 37310  006D7A                     _ReadByte:
 37311                           	opt stack 14
 37312                           
 37313                           ;i2c_drv.c: 207: UINT8 Byte;
 37314                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 37315                           
 37316                           ;incstack = 0
 37317  006D7A  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 37318                           
 37319                           ;i2c_drv.c: 213: return Byte;
 37320  006D7E  0100               	movlb	0	; () banked
 37321  006D80  517D               	movf	ReadByte@Byte& (0+255),w,b
 37322  006D82  0012               	return	
 37323  006D84                     __end_of_ReadByte:
 37324                           	opt stack 0
 37325                           tosu	equ	0xFFF
 37326                           tosh	equ	0xFFE
 37327                           tosl	equ	0xFFD
 37328                           pclath	equ	0xFFA
 37329                           tblptru	equ	0xFF8
 37330                           tblptrh	equ	0xFF7
 37331                           tblptrl	equ	0xFF6
 37332                           tablat	equ	0xFF5
 37333                           prodh	equ	0xFF4
 37334                           prodl	equ	0xFF3
 37335                           intcon	equ	0xFF2
 37336                           intcon2	equ	0xFF1
 37337                           intcon3	equ	0xFF0
 37338                           indf0	equ	0xFEF
 37339                           postinc0	equ	0xFEE
 37340                           plusw0	equ	0xFEB
 37341                           fsr0h	equ	0xFEA
 37342                           fsr0l	equ	0xFE9
 37343                           wreg	equ	0xFE8
 37344                           indf1	equ	0xFE7
 37345                           postinc1	equ	0xFE6
 37346                           postdec1	equ	0xFE5
 37347                           plusw1	equ	0xFE3
 37348                           fsr1h	equ	0xFE2
 37349                           fsr1l	equ	0xFE1
 37350                           indf2	equ	0xFDF
 37351                           postinc2	equ	0xFDE
 37352                           postdec2	equ	0xFDD
 37353                           plusw2	equ	0xFDB
 37354                           fsr2h	equ	0xFDA
 37355                           fsr2l	equ	0xFD9
 37356                           status	equ	0xFD8
 37357                           
 37358 ;; *************** function _GenerateEvt *****************
 37359 ;; Defined at:
 37360 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 37361 ;; Parameters:    Size  Location     Type
 37362 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 37363 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 37364 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 37365 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 37366 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 37367 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 37368 ;; Auto vars:     Size  Location     Type
 37369 ;;  EventStatus     1   31[BANK0 ] enum E7727
 37370 ;; Return value:  Size  Location     Type
 37371 ;;                  1    wreg      enum E7699
 37372 ;; Registers used:
 37373 ;;		wreg, fsr2l, fsr2h, status,2
 37374 ;; Tracked objects:
 37375 ;;		On entry : 0/0
 37376 ;;		On exit  : 0/0
 37377 ;;		Unchanged: 0/0
 37378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37379 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37380 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37382 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37383 ;;Total ram usage:        3 bytes
 37384 ;; Hardware stack levels used:    1
 37385 ;; Hardware stack levels required when called:   11
 37386 ;; This function calls:
 37387 ;;		Nothing
 37388 ;; This function is called by:
 37389 ;;		_I2c_ReadData
 37390 ;;		_CheckModem
 37391 ;;		_TurnOnModem
 37392 ;;		_ConfigureModem
 37393 ;;		_ModemEvtParser
 37394 ;;		_GetSmsSm
 37395 ;;		_Mdm_RequestSmsData
 37396 ;;		_I2cSlv_SendI2cMsg
 37397 ;;		_I2cSlv_ReceiveI2cMsg
 37398 ;;		_RiSm
 37399 ;;		_Mdm_SendSmsData
 37400 ;;		_MdmHttp_InitGprsNetwork
 37401 ;;		_MdmHttp_GetMethod
 37402 ;;		_Alarm
 37403 ;; This function uses a non-reentrant model
 37404 ;;
 37405                           
 37406                           	psect	text178
 37407  006C10                     __ptext178:
 37408                           	opt stack 0
 37409  006C10                     _GenerateEvt:
 37410                           	opt stack 13
 37411                           
 37412                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 37413                           
 37414                           ; BSR set to: 0
 37415                           ;incstack = 0
 37416  006C10  0E00               	movlw	0
 37417  006C12  0100               	movlb	0	; () banked
 37418  006C14  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 37419                           
 37420                           ; BSR set to: 0
 37421                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 37422  006C16  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 37423  006C1A  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 37424  006C1E  0E02               	movlw	2
 37425  006C20  6EDF               	movwf	indf2,c
 37426                           
 37427                           ; BSR set to: 0
 37428                           ;os_ser.c: 83: EventStatus = EventSent;
 37429  006C22  0E02               	movlw	2
 37430  006C24  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 37431  006C26  0012               	return	
 37432  006C28                     __end_of_GenerateEvt:
 37433                           	opt stack 0
 37434                           tosu	equ	0xFFF
 37435                           tosh	equ	0xFFE
 37436                           tosl	equ	0xFFD
 37437                           pclath	equ	0xFFA
 37438                           tblptru	equ	0xFF8
 37439                           tblptrh	equ	0xFF7
 37440                           tblptrl	equ	0xFF6
 37441                           tablat	equ	0xFF5
 37442                           prodh	equ	0xFF4
 37443                           prodl	equ	0xFF3
 37444                           intcon	equ	0xFF2
 37445                           intcon2	equ	0xFF1
 37446                           intcon3	equ	0xFF0
 37447                           indf0	equ	0xFEF
 37448                           postinc0	equ	0xFEE
 37449                           plusw0	equ	0xFEB
 37450                           fsr0h	equ	0xFEA
 37451                           fsr0l	equ	0xFE9
 37452                           wreg	equ	0xFE8
 37453                           indf1	equ	0xFE7
 37454                           postinc1	equ	0xFE6
 37455                           postdec1	equ	0xFE5
 37456                           plusw1	equ	0xFE3
 37457                           fsr1h	equ	0xFE2
 37458                           fsr1l	equ	0xFE1
 37459                           indf2	equ	0xFDF
 37460                           postinc2	equ	0xFDE
 37461                           postdec2	equ	0xFDD
 37462                           plusw2	equ	0xFDB
 37463                           fsr2h	equ	0xFDA
 37464                           fsr2l	equ	0xFD9
 37465                           status	equ	0xFD8
 37466                           
 37467 ;; *************** function _EnableReceiver *****************
 37468 ;; Defined at:
 37469 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37470 ;; Parameters:    Size  Location     Type
 37471 ;;		None
 37472 ;; Auto vars:     Size  Location     Type
 37473 ;;		None
 37474 ;; Return value:  Size  Location     Type
 37475 ;;                  1    wreg      void 
 37476 ;; Registers used:
 37477 ;;		status,2, status,0
 37478 ;; Tracked objects:
 37479 ;;		On entry : 0/0
 37480 ;;		On exit  : 0/0
 37481 ;;		Unchanged: 0/0
 37482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37487 ;;Total ram usage:        0 bytes
 37488 ;; Hardware stack levels used:    1
 37489 ;; Hardware stack levels required when called:   11
 37490 ;; This function calls:
 37491 ;;		Nothing
 37492 ;; This function is called by:
 37493 ;;		_I2c_ReadData
 37494 ;; This function uses a non-reentrant model
 37495 ;;
 37496                           
 37497                           	psect	text179
 37498  006DB8                     __ptext179:
 37499                           	opt stack 0
 37500  006DB8                     _EnableReceiver:
 37501                           	opt stack 14
 37502                           
 37503                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 37504                           
 37505                           ; BSR set to: 0
 37506                           ;incstack = 0
 37507  006DB8  8671               	bsf	3953,3,c	;volatile
 37508  006DBA  0012               	return		;funcret
 37509  006DBC                     __end_of_EnableReceiver:
 37510                           	opt stack 0
 37511                           tosu	equ	0xFFF
 37512                           tosh	equ	0xFFE
 37513                           tosl	equ	0xFFD
 37514                           pclath	equ	0xFFA
 37515                           tblptru	equ	0xFF8
 37516                           tblptrh	equ	0xFF7
 37517                           tblptrl	equ	0xFF6
 37518                           tablat	equ	0xFF5
 37519                           prodh	equ	0xFF4
 37520                           prodl	equ	0xFF3
 37521                           intcon	equ	0xFF2
 37522                           intcon2	equ	0xFF1
 37523                           intcon3	equ	0xFF0
 37524                           indf0	equ	0xFEF
 37525                           postinc0	equ	0xFEE
 37526                           plusw0	equ	0xFEB
 37527                           fsr0h	equ	0xFEA
 37528                           fsr0l	equ	0xFE9
 37529                           wreg	equ	0xFE8
 37530                           indf1	equ	0xFE7
 37531                           postinc1	equ	0xFE6
 37532                           postdec1	equ	0xFE5
 37533                           plusw1	equ	0xFE3
 37534                           fsr1h	equ	0xFE2
 37535                           fsr1l	equ	0xFE1
 37536                           indf2	equ	0xFDF
 37537                           postinc2	equ	0xFDE
 37538                           postdec2	equ	0xFDD
 37539                           plusw2	equ	0xFDB
 37540                           fsr2h	equ	0xFDA
 37541                           fsr2l	equ	0xFD9
 37542                           status	equ	0xFD8
 37543                           
 37544 ;; *************** function _CheckTxStatus *****************
 37545 ;; Defined at:
 37546 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37547 ;; Parameters:    Size  Location     Type
 37548 ;;		None
 37549 ;; Auto vars:     Size  Location     Type
 37550 ;;		None
 37551 ;; Return value:  Size  Location     Type
 37552 ;;                  1    wreg      unsigned char 
 37553 ;; Registers used:
 37554 ;;		wreg, status,2, status,0
 37555 ;; Tracked objects:
 37556 ;;		On entry : 0/0
 37557 ;;		On exit  : 0/0
 37558 ;;		Unchanged: 0/0
 37559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37564 ;;Total ram usage:        0 bytes
 37565 ;; Hardware stack levels used:    1
 37566 ;; Hardware stack levels required when called:   11
 37567 ;; This function calls:
 37568 ;;		Nothing
 37569 ;; This function is called by:
 37570 ;;		_I2c_WriteData
 37571 ;;		_I2c_ReadData
 37572 ;; This function uses a non-reentrant model
 37573 ;;
 37574                           
 37575                           	psect	text180
 37576  006D84                     __ptext180:
 37577                           	opt stack 0
 37578  006D84                     _CheckTxStatus:
 37579                           	opt stack 14
 37580                           
 37581                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 37582                           
 37583                           ;incstack = 0
 37584  006D84  4073               	rrncf	3955,w,c	;volatile
 37585  006D86  42E8               	rrncf	wreg,f,c
 37586  006D88  0B3F               	andlw	63
 37587  006D8A  0B01               	andlw	1
 37588  006D8C  0012               	return	
 37589  006D8E                     __end_of_CheckTxStatus:
 37590                           	opt stack 0
 37591                           tosu	equ	0xFFF
 37592                           tosh	equ	0xFFE
 37593                           tosl	equ	0xFFD
 37594                           pclath	equ	0xFFA
 37595                           tblptru	equ	0xFF8
 37596                           tblptrh	equ	0xFF7
 37597                           tblptrl	equ	0xFF6
 37598                           tablat	equ	0xFF5
 37599                           prodh	equ	0xFF4
 37600                           prodl	equ	0xFF3
 37601                           intcon	equ	0xFF2
 37602                           intcon2	equ	0xFF1
 37603                           intcon3	equ	0xFF0
 37604                           indf0	equ	0xFEF
 37605                           postinc0	equ	0xFEE
 37606                           plusw0	equ	0xFEB
 37607                           fsr0h	equ	0xFEA
 37608                           fsr0l	equ	0xFE9
 37609                           wreg	equ	0xFE8
 37610                           indf1	equ	0xFE7
 37611                           postinc1	equ	0xFE6
 37612                           postdec1	equ	0xFE5
 37613                           plusw1	equ	0xFE3
 37614                           fsr1h	equ	0xFE2
 37615                           fsr1l	equ	0xFE1
 37616                           indf2	equ	0xFDF
 37617                           postinc2	equ	0xFDE
 37618                           postdec2	equ	0xFDD
 37619                           plusw2	equ	0xFDB
 37620                           fsr2h	equ	0xFDA
 37621                           fsr2l	equ	0xFD9
 37622                           status	equ	0xFD8
 37623                           
 37624 ;; *************** function _CheckAckStatus *****************
 37625 ;; Defined at:
 37626 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37627 ;; Parameters:    Size  Location     Type
 37628 ;;		None
 37629 ;; Auto vars:     Size  Location     Type
 37630 ;;		None
 37631 ;; Return value:  Size  Location     Type
 37632 ;;                  1    wreg      unsigned char 
 37633 ;; Registers used:
 37634 ;;		wreg, status,2, status,0
 37635 ;; Tracked objects:
 37636 ;;		On entry : 0/0
 37637 ;;		On exit  : 0/0
 37638 ;;		Unchanged: 0/0
 37639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37644 ;;Total ram usage:        0 bytes
 37645 ;; Hardware stack levels used:    1
 37646 ;; Hardware stack levels required when called:   11
 37647 ;; This function calls:
 37648 ;;		Nothing
 37649 ;; This function is called by:
 37650 ;;		_I2c_WriteData
 37651 ;;		_I2c_ReadData
 37652 ;; This function uses a non-reentrant model
 37653 ;;
 37654                           
 37655                           	psect	text181
 37656  006D8E                     __ptext181:
 37657                           	opt stack 0
 37658  006D8E                     _CheckAckStatus:
 37659                           	opt stack 14
 37660                           
 37661                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 37662                           
 37663                           ;incstack = 0
 37664  006D8E  4471               	rlncf	3953,w,c	;volatile
 37665  006D90  46E8               	rlncf	wreg,f,c
 37666  006D92  0B03               	andlw	3
 37667  006D94  0B01               	andlw	1
 37668  006D96  0012               	return	
 37669  006D98                     __end_of_CheckAckStatus:
 37670                           	opt stack 0
 37671                           tosu	equ	0xFFF
 37672                           tosh	equ	0xFFE
 37673                           tosl	equ	0xFFD
 37674                           pclath	equ	0xFFA
 37675                           tblptru	equ	0xFF8
 37676                           tblptrh	equ	0xFF7
 37677                           tblptrl	equ	0xFF6
 37678                           tablat	equ	0xFF5
 37679                           prodh	equ	0xFF4
 37680                           prodl	equ	0xFF3
 37681                           intcon	equ	0xFF2
 37682                           intcon2	equ	0xFF1
 37683                           intcon3	equ	0xFF0
 37684                           indf0	equ	0xFEF
 37685                           postinc0	equ	0xFEE
 37686                           plusw0	equ	0xFEB
 37687                           fsr0h	equ	0xFEA
 37688                           fsr0l	equ	0xFE9
 37689                           wreg	equ	0xFE8
 37690                           indf1	equ	0xFE7
 37691                           postinc1	equ	0xFE6
 37692                           postdec1	equ	0xFE5
 37693                           plusw1	equ	0xFE3
 37694                           fsr1h	equ	0xFE2
 37695                           fsr1l	equ	0xFE1
 37696                           indf2	equ	0xFDF
 37697                           postinc2	equ	0xFDE
 37698                           postdec2	equ	0xFDD
 37699                           plusw2	equ	0xFDB
 37700                           fsr2h	equ	0xFDA
 37701                           fsr2l	equ	0xFD9
 37702                           status	equ	0xFD8
 37703                           
 37704 ;; *************** function _LowPriorityIsr *****************
 37705 ;; Defined at:
 37706 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 37707 ;; Parameters:    Size  Location     Type
 37708 ;;		None
 37709 ;; Auto vars:     Size  Location     Type
 37710 ;;		None
 37711 ;; Return value:  Size  Location     Type
 37712 ;;                  1    wreg      void 
 37713 ;; Registers used:
 37714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37715 ;; Tracked objects:
 37716 ;;		On entry : 0/0
 37717 ;;		On exit  : 0/0
 37718 ;;		Unchanged: 0/0
 37719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37722 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37723 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37724 ;;Total ram usage:       21 bytes
 37725 ;; Hardware stack levels used:    1
 37726 ;; Hardware stack levels required when called:   10
 37727 ;; This function calls:
 37728 ;;		_Tmr_Tmr2Isr
 37729 ;; This function is called by:
 37730 ;;		Interrupt level 1
 37731 ;; This function uses a non-reentrant model
 37732 ;;
 37733                           
 37734                           	psect	intcodelo
 37735  000018                     __pintcodelo:
 37736                           	opt stack 0
 37737  000018                     _LowPriorityIsr:
 37738                           	opt stack 8
 37739                           
 37740                           ;incstack = 0
 37741  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 37742  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 37743  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 37744  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 37745  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 37746  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 37747  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 37748  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 37749  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 37750  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 37751  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 37752  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 37753  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 37754  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 37755  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 37756  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 37757  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 37758  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 37759  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 37760  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 37761  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 37762  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 37763                           
 37764                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 37765  00006E  B29E               	btfsc	3998,1,c	;volatile
 37766                           
 37767                           ;irq.c: 259: {
 37768                           ;irq.c: 261: Tmr_Tmr2Isr();
 37769  000070  ECCB  F034         	call	_Tmr_Tmr2Isr	;wreg free
 37770  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 37771  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 37772  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 37773  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 37774  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 37775  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 37776  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 37777  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 37778  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 37779  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 37780  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 37781  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 37782  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 37783  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 37784  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 37785  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 37786  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 37787  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 37788  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 37789  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 37790  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 37791  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 37792  0000CA  0010               	retfie	
 37793  0000CC                     __end_of_LowPriorityIsr:
 37794                           	opt stack 0
 37795                           tosu	equ	0xFFF
 37796                           tosh	equ	0xFFE
 37797                           tosl	equ	0xFFD
 37798                           pclatu	equ	0xFFB
 37799                           pclath	equ	0xFFA
 37800                           tblptru	equ	0xFF8
 37801                           tblptrh	equ	0xFF7
 37802                           tblptrl	equ	0xFF6
 37803                           tablat	equ	0xFF5
 37804                           prodh	equ	0xFF4
 37805                           prodl	equ	0xFF3
 37806                           intcon	equ	0xFF2
 37807                           intcon2	equ	0xFF1
 37808                           intcon3	equ	0xFF0
 37809                           indf0	equ	0xFEF
 37810                           postinc0	equ	0xFEE
 37811                           plusw0	equ	0xFEB
 37812                           fsr0h	equ	0xFEA
 37813                           fsr0l	equ	0xFE9
 37814                           wreg	equ	0xFE8
 37815                           indf1	equ	0xFE7
 37816                           postinc1	equ	0xFE6
 37817                           postdec1	equ	0xFE5
 37818                           plusw1	equ	0xFE3
 37819                           fsr1h	equ	0xFE2
 37820                           fsr1l	equ	0xFE1
 37821                           bsr	equ	0xFE0
 37822                           indf2	equ	0xFDF
 37823                           postinc2	equ	0xFDE
 37824                           postdec2	equ	0xFDD
 37825                           plusw2	equ	0xFDB
 37826                           fsr2h	equ	0xFDA
 37827                           fsr2l	equ	0xFD9
 37828                           status	equ	0xFD8
 37829                           
 37830 ;; *************** function _Tmr_Tmr2Isr *****************
 37831 ;; Defined at:
 37832 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 37833 ;; Parameters:    Size  Location     Type
 37834 ;;		None
 37835 ;; Auto vars:     Size  Location     Type
 37836 ;;		None
 37837 ;; Return value:  Size  Location     Type
 37838 ;;                  1    wreg      void 
 37839 ;; Registers used:
 37840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37841 ;; Tracked objects:
 37842 ;;		On entry : 0/0
 37843 ;;		On exit  : 0/0
 37844 ;;		Unchanged: 0/0
 37845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37850 ;;Total ram usage:        0 bytes
 37851 ;; Hardware stack levels used:    1
 37852 ;; Hardware stack levels required when called:    9
 37853 ;; This function calls:
 37854 ;;		Absolute function
 37855 ;;		_Sch_SchmIntService
 37856 ;; This function is called by:
 37857 ;;		_LowPriorityIsr
 37858 ;; This function uses a non-reentrant model
 37859 ;;
 37860                           
 37861                           	psect	text183
 37862  006996                     __ptext183:
 37863                           	opt stack 0
 37864  006996                     _Tmr_Tmr2Isr:
 37865                           	opt stack 8
 37866                           
 37867                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 37868                           
 37869                           ;incstack = 0
 37870  006996  929E               	bcf	3998,1,c	;volatile
 37871                           
 37872                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 37873  006998  0102               	movlb	2	; () banked
 37874  00699A  51E5               	movf	_Tmr2IsrCallback& (0+255),w,b
 37875  00699C  11E6               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 37876  00699E  B4D8               	btfsc	status,2,c
 37877  0069A0  0012               	return	
 37878                           
 37879                           ; BSR set to: 2
 37880                           ;tmr_drv.c: 315: {
 37881                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 37882  0069A2  D801               	call	i1u1678_28
 37883  0069A4  0012               	return	
 37884  0069A6                     i1u1678_28:
 37885  0069A6  0005               	push	
 37886  0069A8  6EFA               	movwf	pclath,c
 37887  0069AA  51E5               	movf	_Tmr2IsrCallback& (0+255),w,b
 37888  0069AC  6EFD               	movwf	tosl,c
 37889  0069AE  51E6               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 37890  0069B0  6EFE               	movwf	tosh,c
 37891  0069B2  50F8               	movf	tblptru,w,c
 37892  0069B4  6EFF               	movwf	tosu,c
 37893  0069B6  50FA               	movf	pclath,w,c
 37894  0069B8  0012               	return		;indir
 37895  0069BA                     __end_of_Tmr_Tmr2Isr:
 37896                           	opt stack 0
 37897                           tosu	equ	0xFFF
 37898                           tosh	equ	0xFFE
 37899                           tosl	equ	0xFFD
 37900                           pclatu	equ	0xFFB
 37901                           pclath	equ	0xFFA
 37902                           tblptru	equ	0xFF8
 37903                           tblptrh	equ	0xFF7
 37904                           tblptrl	equ	0xFF6
 37905                           tablat	equ	0xFF5
 37906                           prodh	equ	0xFF4
 37907                           prodl	equ	0xFF3
 37908                           intcon	equ	0xFF2
 37909                           intcon2	equ	0xFF1
 37910                           intcon3	equ	0xFF0
 37911                           indf0	equ	0xFEF
 37912                           postinc0	equ	0xFEE
 37913                           plusw0	equ	0xFEB
 37914                           fsr0h	equ	0xFEA
 37915                           fsr0l	equ	0xFE9
 37916                           wreg	equ	0xFE8
 37917                           indf1	equ	0xFE7
 37918                           postinc1	equ	0xFE6
 37919                           postdec1	equ	0xFE5
 37920                           plusw1	equ	0xFE3
 37921                           fsr1h	equ	0xFE2
 37922                           fsr1l	equ	0xFE1
 37923                           bsr	equ	0xFE0
 37924                           indf2	equ	0xFDF
 37925                           postinc2	equ	0xFDE
 37926                           postdec2	equ	0xFDD
 37927                           plusw2	equ	0xFDB
 37928                           fsr2h	equ	0xFDA
 37929                           fsr2l	equ	0xFD9
 37930                           status	equ	0xFD8
 37931                           
 37932 ;; *************** function _Sch_SchmIntService *****************
 37933 ;; Defined at:
 37934 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37935 ;; Parameters:    Size  Location     Type
 37936 ;;		None
 37937 ;; Auto vars:     Size  Location     Type
 37938 ;;		None
 37939 ;; Return value:  Size  Location     Type
 37940 ;;                  1    wreg      void 
 37941 ;; Registers used:
 37942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37943 ;; Tracked objects:
 37944 ;;		On entry : 0/0
 37945 ;;		On exit  : 0/0
 37946 ;;		Unchanged: 0/0
 37947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37952 ;;Total ram usage:        0 bytes
 37953 ;; Hardware stack levels used:    1
 37954 ;; Hardware stack levels required when called:    8
 37955 ;; This function calls:
 37956 ;;		_OsAlrm_ProcessOsAlarms
 37957 ;;		_UpdateOsCounters
 37958 ;;		_UpdateSchFlag
 37959 ;; This function is called by:
 37960 ;;		_SystemInit
 37961 ;;		_Tmr_Tmr2Isr
 37962 ;; This function uses a non-reentrant model
 37963 ;;
 37964                           
 37965                           	psect	text184
 37966  006D2A                     __ptext184:
 37967                           	opt stack 0
 37968  006D2A                     _Sch_SchmIntService:
 37969                           	opt stack 8
 37970                           
 37971                           ;os_sched.c: 217: UpdateSchFlag();
 37972                           
 37973                           ;incstack = 0
 37974  006D2A  ECA0  F035         	call	_UpdateSchFlag	;wreg free
 37975                           
 37976                           ;os_sched.c: 219: UpdateOsCounters();
 37977  006D2E  EC7D  F036         	call	_UpdateOsCounters	;wreg free
 37978                           
 37979                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 37980  006D32  EC20  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 37981  006D36  0012               	return		;funcret
 37982  006D38                     __end_of_Sch_SchmIntService:
 37983                           	opt stack 0
 37984                           tosu	equ	0xFFF
 37985                           tosh	equ	0xFFE
 37986                           tosl	equ	0xFFD
 37987                           pclatu	equ	0xFFB
 37988                           pclath	equ	0xFFA
 37989                           tblptru	equ	0xFF8
 37990                           tblptrh	equ	0xFF7
 37991                           tblptrl	equ	0xFF6
 37992                           tablat	equ	0xFF5
 37993                           prodh	equ	0xFF4
 37994                           prodl	equ	0xFF3
 37995                           intcon	equ	0xFF2
 37996                           intcon2	equ	0xFF1
 37997                           intcon3	equ	0xFF0
 37998                           indf0	equ	0xFEF
 37999                           postinc0	equ	0xFEE
 38000                           plusw0	equ	0xFEB
 38001                           fsr0h	equ	0xFEA
 38002                           fsr0l	equ	0xFE9
 38003                           wreg	equ	0xFE8
 38004                           indf1	equ	0xFE7
 38005                           postinc1	equ	0xFE6
 38006                           postdec1	equ	0xFE5
 38007                           plusw1	equ	0xFE3
 38008                           fsr1h	equ	0xFE2
 38009                           fsr1l	equ	0xFE1
 38010                           bsr	equ	0xFE0
 38011                           indf2	equ	0xFDF
 38012                           postinc2	equ	0xFDE
 38013                           postdec2	equ	0xFDD
 38014                           plusw2	equ	0xFDB
 38015                           fsr2h	equ	0xFDA
 38016                           fsr2l	equ	0xFD9
 38017                           status	equ	0xFD8
 38018                           
 38019 ;; *************** function _UpdateSchFlag *****************
 38020 ;; Defined at:
 38021 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 38022 ;; Parameters:    Size  Location     Type
 38023 ;;		None
 38024 ;; Auto vars:     Size  Location     Type
 38025 ;;		None
 38026 ;; Return value:  Size  Location     Type
 38027 ;;                  1    wreg      void 
 38028 ;; Registers used:
 38029 ;;		wreg, status,2, status,0
 38030 ;; Tracked objects:
 38031 ;;		On entry : 0/0
 38032 ;;		On exit  : 0/0
 38033 ;;		Unchanged: 0/0
 38034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38039 ;;Total ram usage:        0 bytes
 38040 ;; Hardware stack levels used:    1
 38041 ;; Hardware stack levels required when called:    4
 38042 ;; This function calls:
 38043 ;;		Nothing
 38044 ;; This function is called by:
 38045 ;;		_Sch_SchmIntService
 38046 ;; This function uses a non-reentrant model
 38047 ;;
 38048                           
 38049                           	psect	text185
 38050  006B40                     __ptext185:
 38051                           	opt stack 0
 38052  006B40                     _UpdateSchFlag:
 38053                           	opt stack 11
 38054                           
 38055                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 38056                           ;os_sched.c: 138: InterruptCounter++;
 38057                           
 38058                           ;incstack = 0
 38059  006B40  0102               	movlb	2	; () banked
 38060  006B42  4BD7               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 38061  006B44  2BD8               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 38062                           
 38063                           ; BSR set to: 2
 38064                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 38065  006B46  51D7               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 38066  006B48  11D8               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 38067  006B4A  B4D8               	btfsc	status,2,c
 38068  006B4C  0012               	return	
 38069                           
 38070                           ; BSR set to: 2
 38071                           ;os_sched.c: 141: {
 38072                           ;os_sched.c: 143: InterruptCounter = 0;
 38073  006B4E  0E00               	movlw	0
 38074  006B50  6FD8               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 38075  006B52  0E00               	movlw	0
 38076  006B54  6FD7               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 38077                           
 38078                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 38079  006B56  0E00               	movlw	0
 38080  006B58  6FF2               	movwf	_MainSystemTimebaseFlag& (0+255),b
 38081  006B5A  0012               	return	
 38082  006B5C                     __end_of_UpdateSchFlag:
 38083                           	opt stack 0
 38084                           tosu	equ	0xFFF
 38085                           tosh	equ	0xFFE
 38086                           tosl	equ	0xFFD
 38087                           pclatu	equ	0xFFB
 38088                           pclath	equ	0xFFA
 38089                           tblptru	equ	0xFF8
 38090                           tblptrh	equ	0xFF7
 38091                           tblptrl	equ	0xFF6
 38092                           tablat	equ	0xFF5
 38093                           prodh	equ	0xFF4
 38094                           prodl	equ	0xFF3
 38095                           intcon	equ	0xFF2
 38096                           intcon2	equ	0xFF1
 38097                           intcon3	equ	0xFF0
 38098                           indf0	equ	0xFEF
 38099                           postinc0	equ	0xFEE
 38100                           plusw0	equ	0xFEB
 38101                           fsr0h	equ	0xFEA
 38102                           fsr0l	equ	0xFE9
 38103                           wreg	equ	0xFE8
 38104                           indf1	equ	0xFE7
 38105                           postinc1	equ	0xFE6
 38106                           postdec1	equ	0xFE5
 38107                           plusw1	equ	0xFE3
 38108                           fsr1h	equ	0xFE2
 38109                           fsr1l	equ	0xFE1
 38110                           bsr	equ	0xFE0
 38111                           indf2	equ	0xFDF
 38112                           postinc2	equ	0xFDE
 38113                           postdec2	equ	0xFDD
 38114                           plusw2	equ	0xFDB
 38115                           fsr2h	equ	0xFDA
 38116                           fsr2l	equ	0xFD9
 38117                           status	equ	0xFD8
 38118                           
 38119 ;; *************** function _UpdateOsCounters *****************
 38120 ;; Defined at:
 38121 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 38122 ;; Parameters:    Size  Location     Type
 38123 ;;		None
 38124 ;; Auto vars:     Size  Location     Type
 38125 ;;		None
 38126 ;; Return value:  Size  Location     Type
 38127 ;;                  1    wreg      void 
 38128 ;; Registers used:
 38129 ;;		wreg, status,2, status,0
 38130 ;; Tracked objects:
 38131 ;;		On entry : 0/0
 38132 ;;		On exit  : 0/0
 38133 ;;		Unchanged: 0/0
 38134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38139 ;;Total ram usage:        0 bytes
 38140 ;; Hardware stack levels used:    1
 38141 ;; Hardware stack levels required when called:    4
 38142 ;; This function calls:
 38143 ;;		Nothing
 38144 ;; This function is called by:
 38145 ;;		_Sch_SchmIntService
 38146 ;; This function uses a non-reentrant model
 38147 ;;
 38148                           
 38149                           	psect	text186
 38150  006CFA                     __ptext186:
 38151                           	opt stack 0
 38152  006CFA                     _UpdateOsCounters:
 38153                           	opt stack 11
 38154                           
 38155                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 38156                           
 38157                           ; BSR set to: 2
 38158                           ;incstack = 0
 38159  006CFA  0E01               	movlw	1
 38160  006CFC  0103               	movlb	3	; () banked
 38161  006CFE  2714               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 38162  006D00  0E00               	movlw	0
 38163  006D02  2315               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 38164  006D04  2316               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 38165  006D06  2317               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 38166                           
 38167                           ; BSR set to: 3
 38168  006D08  0012               	return		;funcret
 38169  006D0A                     __end_of_UpdateOsCounters:
 38170                           	opt stack 0
 38171                           tosu	equ	0xFFF
 38172                           tosh	equ	0xFFE
 38173                           tosl	equ	0xFFD
 38174                           pclatu	equ	0xFFB
 38175                           pclath	equ	0xFFA
 38176                           tblptru	equ	0xFF8
 38177                           tblptrh	equ	0xFF7
 38178                           tblptrl	equ	0xFF6
 38179                           tablat	equ	0xFF5
 38180                           prodh	equ	0xFF4
 38181                           prodl	equ	0xFF3
 38182                           intcon	equ	0xFF2
 38183                           intcon2	equ	0xFF1
 38184                           intcon3	equ	0xFF0
 38185                           indf0	equ	0xFEF
 38186                           postinc0	equ	0xFEE
 38187                           plusw0	equ	0xFEB
 38188                           fsr0h	equ	0xFEA
 38189                           fsr0l	equ	0xFE9
 38190                           wreg	equ	0xFE8
 38191                           indf1	equ	0xFE7
 38192                           postinc1	equ	0xFE6
 38193                           postdec1	equ	0xFE5
 38194                           plusw1	equ	0xFE3
 38195                           fsr1h	equ	0xFE2
 38196                           fsr1l	equ	0xFE1
 38197                           bsr	equ	0xFE0
 38198                           indf2	equ	0xFDF
 38199                           postinc2	equ	0xFDE
 38200                           postdec2	equ	0xFDD
 38201                           plusw2	equ	0xFDB
 38202                           fsr2h	equ	0xFDA
 38203                           fsr2l	equ	0xFD9
 38204                           status	equ	0xFD8
 38205                           
 38206 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 38207 ;; Defined at:
 38208 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 38209 ;; Parameters:    Size  Location     Type
 38210 ;;		None
 38211 ;; Auto vars:     Size  Location     Type
 38212 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 38213 ;; Return value:  Size  Location     Type
 38214 ;;                  1    wreg      void 
 38215 ;; Registers used:
 38216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 38217 ;; Tracked objects:
 38218 ;;		On entry : 0/0
 38219 ;;		On exit  : 0/0
 38220 ;;		Unchanged: 0/0
 38221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38224 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38225 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38226 ;;Total ram usage:       10 bytes
 38227 ;; Hardware stack levels used:    1
 38228 ;; Hardware stack levels required when called:    7
 38229 ;; This function calls:
 38230 ;;		_I2cDummyTx
 38231 ;;		_OsAlrm_ClearOsAlarm
 38232 ;;		i1___wmul
 38233 ;; This function is called by:
 38234 ;;		_Sch_SchmIntService
 38235 ;; This function uses a non-reentrant model
 38236 ;;
 38237                           
 38238                           	psect	text187
 38239  002440                     __ptext187:
 38240                           	opt stack 0
 38241  002440                     _OsAlrm_ProcessOsAlarms:
 38242                           	opt stack 8
 38243                           
 38244                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 38245                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 38246                           
 38247                           ; BSR set to: 3
 38248                           ;incstack = 0
 38249  002440  0E00               	movlw	0
 38250  002442  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 38251  002444  0E00               	movlw	0
 38252  002446  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 38253  002448  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 38254  00244A  E105               	bnz	i1u1652_20
 38255  00244C  0E14               	movlw	20
 38256  00244E  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 38257  002450  B0D8               	btfsc	status,0,c
 38258  002452  0012               	return	
 38259  002454  D001               	goto	i1l742
 38260  002456                     i1u1652_20:
 38261  002456  0012               	return	
 38262  002458                     i1l742:
 38263                           
 38264                           ;os_alarms.c: 121: {
 38265                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 38266  002458  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38267  00245C  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38268  002460  0E00               	movlw	0
 38269  002462  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38270  002464  0E0B               	movlw	11
 38271  002466  6E1B               	movwf	i1___wmul@multiplicand,c
 38272  002468  EC82  F034         	call	i1___wmul	;wreg free
 38273  00246C  0E00               	movlw	low _OsAlarms
 38274  00246E  2419               	addwf	?i1___wmul,w,c
 38275  002470  6ED9               	movwf	fsr2l,c
 38276  002472  0E06               	movlw	high _OsAlarms
 38277  002474  201A               	addwfc	?i1___wmul+1,w,c
 38278  002476  6EDA               	movwf	fsr2h,c
 38279  002478  04DE               	decf	postinc2,w,c
 38280  00247A  A4D8               	btfss	status,2,c
 38281  00247C  D086               	goto	i1u1656_29
 38282                           
 38283                           ;os_alarms.c: 124: {
 38284                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 38285  00247E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38286  002482  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38287  002486  0E00               	movlw	0
 38288  002488  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38289  00248A  0E0B               	movlw	11
 38290  00248C  6E1B               	movwf	i1___wmul@multiplicand,c
 38291  00248E  EC82  F034         	call	i1___wmul	;wreg free
 38292  002492  0E01               	movlw	1
 38293  002494  2619               	addwf	?i1___wmul,f,c
 38294  002496  0E00               	movlw	0
 38295  002498  221A               	addwfc	?i1___wmul+1,f,c
 38296  00249A  0E00               	movlw	low _OsAlarms
 38297  00249C  2419               	addwf	?i1___wmul,w,c
 38298  00249E  6ED9               	movwf	fsr2l,c
 38299  0024A0  0E06               	movlw	high _OsAlarms
 38300  0024A2  201A               	addwfc	?i1___wmul+1,w,c
 38301  0024A4  6EDA               	movwf	fsr2h,c
 38302  0024A6  2ADE               	incf	postinc2,f,c
 38303  0024A8  0E00               	movlw	0
 38304  0024AA  22DE               	addwfc	postinc2,f,c
 38305  0024AC  22DE               	addwfc	postinc2,f,c
 38306  0024AE  22DE               	addwfc	postinc2,f,c
 38307                           
 38308                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 38309  0024B0  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38310  0024B4  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38311  0024B8  0E00               	movlw	0
 38312  0024BA  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38313  0024BC  0E0B               	movlw	11
 38314  0024BE  6E1B               	movwf	i1___wmul@multiplicand,c
 38315  0024C0  EC82  F034         	call	i1___wmul	;wreg free
 38316  0024C4  0E05               	movlw	5
 38317  0024C6  2619               	addwf	?i1___wmul,f,c
 38318  0024C8  0E00               	movlw	0
 38319  0024CA  221A               	addwfc	?i1___wmul+1,f,c
 38320  0024CC  0E00               	movlw	low _OsAlarms
 38321  0024CE  2419               	addwf	?i1___wmul,w,c
 38322  0024D0  6ED9               	movwf	fsr2l,c
 38323  0024D2  0E06               	movlw	high _OsAlarms
 38324  0024D4  201A               	addwfc	?i1___wmul+1,w,c
 38325  0024D6  6EDA               	movwf	fsr2h,c
 38326  0024D8  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38327  0024DC  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38328  0024E0  0E00               	movlw	0
 38329  0024E2  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38330  0024E4  0E0B               	movlw	11
 38331  0024E6  6E1B               	movwf	i1___wmul@multiplicand,c
 38332  0024E8  EC82  F034         	call	i1___wmul	;wreg free
 38333  0024EC  0E01               	movlw	1
 38334  0024EE  2619               	addwf	?i1___wmul,f,c
 38335  0024F0  0E00               	movlw	0
 38336  0024F2  221A               	addwfc	?i1___wmul+1,f,c
 38337  0024F4  0E00               	movlw	low _OsAlarms
 38338  0024F6  2419               	addwf	?i1___wmul,w,c
 38339  0024F8  6EE1               	movwf	fsr1l,c
 38340  0024FA  0E06               	movlw	high _OsAlarms
 38341  0024FC  201A               	addwfc	?i1___wmul+1,w,c
 38342  0024FE  6EE2               	movwf	fsr1h,c
 38343  002500  50DE               	movf	postinc2,w,c
 38344  002502  5CE6               	subwf	postinc1,w,c
 38345  002504  50DE               	movf	postinc2,w,c
 38346  002506  58E6               	subwfb	postinc1,w,c
 38347  002508  50DE               	movf	postinc2,w,c
 38348  00250A  58E6               	subwfb	postinc1,w,c
 38349  00250C  50DE               	movf	postinc2,w,c
 38350  00250E  58E6               	subwfb	postinc1,w,c
 38351  002510  A0D8               	btfss	status,0,c
 38352  002512  D03B               	goto	i1u1656_29
 38353                           
 38354                           ;os_alarms.c: 129: {
 38355                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 38356  002514  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 38357  002516  EC09  F02E         	call	_OsAlrm_ClearOsAlarm
 38358                           
 38359                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 38360  00251A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38361  00251E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38362  002522  0E00               	movlw	0
 38363  002524  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38364  002526  0E0B               	movlw	11
 38365  002528  6E1B               	movwf	i1___wmul@multiplicand,c
 38366  00252A  EC82  F034         	call	i1___wmul	;wreg free
 38367  00252E  0E09               	movlw	9
 38368  002530  2619               	addwf	?i1___wmul,f,c
 38369  002532  0E00               	movlw	0
 38370  002534  221A               	addwfc	?i1___wmul+1,f,c
 38371  002536  0E00               	movlw	low _OsAlarms
 38372  002538  2419               	addwf	?i1___wmul,w,c
 38373  00253A  6ED9               	movwf	fsr2l,c
 38374  00253C  0E06               	movlw	high _OsAlarms
 38375  00253E  201A               	addwfc	?i1___wmul+1,w,c
 38376  002540  6EDA               	movwf	fsr2h,c
 38377  002542  50DE               	movf	postinc2,w,c
 38378  002544  10DE               	iorwf	postinc2,w,c
 38379  002546  B4D8               	btfsc	status,2,c
 38380  002548  D020               	goto	i1u1656_29
 38381                           
 38382                           ;os_alarms.c: 134: {
 38383                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 38384  00254A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38385  00254E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38386  002552  0E00               	movlw	0
 38387  002554  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38388  002556  0E0B               	movlw	11
 38389  002558  6E1B               	movwf	i1___wmul@multiplicand,c
 38390  00255A  EC82  F034         	call	i1___wmul	;wreg free
 38391  00255E  0E09               	movlw	9
 38392  002560  2619               	addwf	?i1___wmul,f,c
 38393  002562  0E00               	movlw	0
 38394  002564  221A               	addwfc	?i1___wmul+1,f,c
 38395  002566  0E00               	movlw	low _OsAlarms
 38396  002568  2419               	addwf	?i1___wmul,w,c
 38397  00256A  6ED9               	movwf	fsr2l,c
 38398  00256C  0E06               	movlw	high _OsAlarms
 38399  00256E  201A               	addwfc	?i1___wmul+1,w,c
 38400  002570  6EDA               	movwf	fsr2h,c
 38401  002572  D801               	call	i1u1656_28
 38402  002574  D00A               	goto	i1u1656_29
 38403  002576                     i1u1656_28:
 38404  002576  0005               	push	
 38405  002578  6EFA               	movwf	pclath,c
 38406  00257A  50DE               	movf	postinc2,w,c
 38407  00257C  6EFD               	movwf	tosl,c
 38408  00257E  50DE               	movf	postinc2,w,c
 38409  002580  6EFE               	movwf	tosh,c
 38410  002582  50F8               	movf	tblptru,w,c
 38411  002584  6EFF               	movwf	tosu,c
 38412  002586  50FA               	movf	pclath,w,c
 38413  002588  0012               	return		;indir
 38414  00258A                     i1u1656_29:
 38415  00258A  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 38416  00258C  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 38417  00258E  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 38418  002590  E101               	bnz	i1l747
 38419  002592  D75C               	goto	L100
 38420  002594                     i1l747:
 38421  002594  0012               	return		;funcret
 38422  002596                     __end_of_OsAlrm_ProcessOsAlarms:
 38423                           	opt stack 0
 38424                           tosu	equ	0xFFF
 38425                           tosh	equ	0xFFE
 38426                           tosl	equ	0xFFD
 38427                           pclatu	equ	0xFFB
 38428                           pclath	equ	0xFFA
 38429                           tblptru	equ	0xFF8
 38430                           tblptrh	equ	0xFF7
 38431                           tblptrl	equ	0xFF6
 38432                           tablat	equ	0xFF5
 38433                           prodh	equ	0xFF4
 38434                           prodl	equ	0xFF3
 38435                           intcon	equ	0xFF2
 38436                           intcon2	equ	0xFF1
 38437                           intcon3	equ	0xFF0
 38438                           indf0	equ	0xFEF
 38439                           postinc0	equ	0xFEE
 38440                           plusw0	equ	0xFEB
 38441                           fsr0h	equ	0xFEA
 38442                           fsr0l	equ	0xFE9
 38443                           wreg	equ	0xFE8
 38444                           indf1	equ	0xFE7
 38445                           postinc1	equ	0xFE6
 38446                           postdec1	equ	0xFE5
 38447                           plusw1	equ	0xFE3
 38448                           fsr1h	equ	0xFE2
 38449                           fsr1l	equ	0xFE1
 38450                           bsr	equ	0xFE0
 38451                           indf2	equ	0xFDF
 38452                           postinc2	equ	0xFDE
 38453                           postdec2	equ	0xFDD
 38454                           plusw2	equ	0xFDB
 38455                           fsr2h	equ	0xFDA
 38456                           fsr2l	equ	0xFD9
 38457                           status	equ	0xFD8
 38458                           
 38459 ;; *************** function i1___wmul *****************
 38460 ;; Defined at:
 38461 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 38462 ;; Parameters:    Size  Location     Type
 38463 ;;  multiplier      2   24[COMRAM] unsigned int 
 38464 ;;  multiplicand    2   26[COMRAM] unsigned int 
 38465 ;; Auto vars:     Size  Location     Type
 38466 ;;  __wmul          2   28[COMRAM] unsigned int 
 38467 ;; Return value:  Size  Location     Type
 38468 ;;                  2   24[COMRAM] unsigned int 
 38469 ;; Registers used:
 38470 ;;		wreg, status,2, status,0, prodl, prodh
 38471 ;; Tracked objects:
 38472 ;;		On entry : 0/0
 38473 ;;		On exit  : 0/0
 38474 ;;		Unchanged: 0/0
 38475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38476 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38477 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38479 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38480 ;;Total ram usage:        6 bytes
 38481 ;; Hardware stack levels used:    1
 38482 ;; Hardware stack levels required when called:    4
 38483 ;; This function calls:
 38484 ;;		Nothing
 38485 ;; This function is called by:
 38486 ;;		_OsAlrm_ProcessOsAlarms
 38487 ;; This function uses a non-reentrant model
 38488 ;;
 38489                           
 38490                           	psect	text188
 38491  006904                     __ptext188:
 38492                           	opt stack 0
 38493  006904                     i1___wmul:
 38494                           	opt stack 10
 38495                           
 38496                           ;incstack = 0
 38497  006904  5019               	movf	i1___wmul@multiplier,w,c
 38498  006906  021B               	mulwf	i1___wmul@multiplicand,c
 38499  006908  CFF3 F01D          	movff	prodl,i1___wmul@product
 38500  00690C  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 38501  006910  5019               	movf	i1___wmul@multiplier,w,c
 38502  006912  021C               	mulwf	i1___wmul@multiplicand+1,c
 38503  006914  50F3               	movf	prodl,w,c
 38504  006916  261E               	addwf	i1___wmul@product+1,f,c
 38505  006918  501A               	movf	i1___wmul@multiplier+1,w,c
 38506  00691A  021B               	mulwf	i1___wmul@multiplicand,c
 38507  00691C  50F3               	movf	prodl,w,c
 38508  00691E  261E               	addwf	i1___wmul@product+1,f,c
 38509  006920  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 38510  006924  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 38511  006928  0012               	return	
 38512  00692A                     __end_ofi1___wmul:
 38513                           	opt stack 0
 38514                           tosu	equ	0xFFF
 38515                           tosh	equ	0xFFE
 38516                           tosl	equ	0xFFD
 38517                           pclatu	equ	0xFFB
 38518                           pclath	equ	0xFFA
 38519                           tblptru	equ	0xFF8
 38520                           tblptrh	equ	0xFF7
 38521                           tblptrl	equ	0xFF6
 38522                           tablat	equ	0xFF5
 38523                           prodh	equ	0xFF4
 38524                           prodl	equ	0xFF3
 38525                           intcon	equ	0xFF2
 38526                           intcon2	equ	0xFF1
 38527                           intcon3	equ	0xFF0
 38528                           indf0	equ	0xFEF
 38529                           postinc0	equ	0xFEE
 38530                           plusw0	equ	0xFEB
 38531                           fsr0h	equ	0xFEA
 38532                           fsr0l	equ	0xFE9
 38533                           wreg	equ	0xFE8
 38534                           indf1	equ	0xFE7
 38535                           postinc1	equ	0xFE6
 38536                           postdec1	equ	0xFE5
 38537                           plusw1	equ	0xFE3
 38538                           fsr1h	equ	0xFE2
 38539                           fsr1l	equ	0xFE1
 38540                           bsr	equ	0xFE0
 38541                           indf2	equ	0xFDF
 38542                           postinc2	equ	0xFDE
 38543                           postdec2	equ	0xFDD
 38544                           plusw2	equ	0xFDB
 38545                           fsr2h	equ	0xFDA
 38546                           fsr2l	equ	0xFD9
 38547                           status	equ	0xFD8
 38548                           
 38549 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 38550 ;; Defined at:
 38551 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 38552 ;; Parameters:    Size  Location     Type
 38553 ;;  OsAlarmId       1    wreg     unsigned char 
 38554 ;; Auto vars:     Size  Location     Type
 38555 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 38556 ;; Return value:  Size  Location     Type
 38557 ;;                  1    wreg      void 
 38558 ;; Registers used:
 38559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38560 ;; Tracked objects:
 38561 ;;		On entry : 0/0
 38562 ;;		On exit  : 0/0
 38563 ;;		Unchanged: 0/0
 38564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38568 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38569 ;;Total ram usage:        1 bytes
 38570 ;; Hardware stack levels used:    1
 38571 ;; Hardware stack levels required when called:    4
 38572 ;; This function calls:
 38573 ;;		Nothing
 38574 ;; This function is called by:
 38575 ;;		_OsAlrm_ProcessOsAlarms
 38576 ;; This function uses a non-reentrant model
 38577 ;;
 38578                           
 38579                           	psect	text189
 38580  005C12                     __ptext189:
 38581                           	opt stack 0
 38582  005C12                     _OsAlrm_ClearOsAlarm:
 38583                           	opt stack 10
 38584                           
 38585                           ;incstack = 0
 38586                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 38587  005C12  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 38588                           
 38589                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 38590  005C14  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 38591  005C16  0D0B               	mullw	11
 38592  005C18  0E00               	movlw	low _OsAlarms
 38593  005C1A  24F3               	addwf	prodl,w,c
 38594  005C1C  6ED9               	movwf	fsr2l,c
 38595  005C1E  0E06               	movlw	high _OsAlarms
 38596  005C20  20F4               	addwfc	prodh,w,c
 38597  005C22  6EDA               	movwf	fsr2h,c
 38598  005C24  0E00               	movlw	0
 38599  005C26  6EDF               	movwf	indf2,c
 38600                           
 38601                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 38602  005C28  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 38603  005C2A  0D0B               	mullw	11
 38604  005C2C  0E01               	movlw	1
 38605  005C2E  26F3               	addwf	prodl,f,c
 38606  005C30  0E00               	movlw	0
 38607  005C32  22F4               	addwfc	prodh,f,c
 38608  005C34  0E00               	movlw	low _OsAlarms
 38609  005C36  24F3               	addwf	prodl,w,c
 38610  005C38  6ED9               	movwf	fsr2l,c
 38611  005C3A  0E06               	movlw	high _OsAlarms
 38612  005C3C  20F4               	addwfc	prodh,w,c
 38613  005C3E  6EDA               	movwf	fsr2h,c
 38614  005C40  6ADE               	clrf	postinc2,c
 38615  005C42  6ADE               	clrf	postinc2,c
 38616  005C44  6ADE               	clrf	postinc2,c
 38617  005C46  6ADD               	clrf	postdec2,c
 38618                           
 38619                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 38620  005C48  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 38621  005C4A  0D0B               	mullw	11
 38622  005C4C  0E05               	movlw	5
 38623  005C4E  26F3               	addwf	prodl,f,c
 38624  005C50  0E00               	movlw	0
 38625  005C52  22F4               	addwfc	prodh,f,c
 38626  005C54  0E00               	movlw	low _OsAlarms
 38627  005C56  24F3               	addwf	prodl,w,c
 38628  005C58  6ED9               	movwf	fsr2l,c
 38629  005C5A  0E06               	movlw	high _OsAlarms
 38630  005C5C  20F4               	addwfc	prodh,w,c
 38631  005C5E  6EDA               	movwf	fsr2h,c
 38632  005C60  6ADE               	clrf	postinc2,c
 38633  005C62  6ADE               	clrf	postinc2,c
 38634  005C64  6ADE               	clrf	postinc2,c
 38635  005C66  6ADD               	clrf	postdec2,c
 38636  005C68  0012               	return		;funcret
 38637  005C6A                     __end_of_OsAlrm_ClearOsAlarm:
 38638                           	opt stack 0
 38639                           tosu	equ	0xFFF
 38640                           tosh	equ	0xFFE
 38641                           tosl	equ	0xFFD
 38642                           pclatu	equ	0xFFB
 38643                           pclath	equ	0xFFA
 38644                           tblptru	equ	0xFF8
 38645                           tblptrh	equ	0xFF7
 38646                           tblptrl	equ	0xFF6
 38647                           tablat	equ	0xFF5
 38648                           prodh	equ	0xFF4
 38649                           prodl	equ	0xFF3
 38650                           intcon	equ	0xFF2
 38651                           intcon2	equ	0xFF1
 38652                           intcon3	equ	0xFF0
 38653                           indf0	equ	0xFEF
 38654                           postinc0	equ	0xFEE
 38655                           plusw0	equ	0xFEB
 38656                           fsr0h	equ	0xFEA
 38657                           fsr0l	equ	0xFE9
 38658                           wreg	equ	0xFE8
 38659                           indf1	equ	0xFE7
 38660                           postinc1	equ	0xFE6
 38661                           postdec1	equ	0xFE5
 38662                           plusw1	equ	0xFE3
 38663                           fsr1h	equ	0xFE2
 38664                           fsr1l	equ	0xFE1
 38665                           bsr	equ	0xFE0
 38666                           indf2	equ	0xFDF
 38667                           postinc2	equ	0xFDE
 38668                           postdec2	equ	0xFDD
 38669                           plusw2	equ	0xFDB
 38670                           fsr2h	equ	0xFDA
 38671                           fsr2l	equ	0xFD9
 38672                           status	equ	0xFD8
 38673                           
 38674 ;; *************** function _I2cDummyTx *****************
 38675 ;; Defined at:
 38676 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 38677 ;; Parameters:    Size  Location     Type
 38678 ;;		None
 38679 ;; Auto vars:     Size  Location     Type
 38680 ;;		None
 38681 ;; Return value:  Size  Location     Type
 38682 ;;                  1    wreg      void 
 38683 ;; Registers used:
 38684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38685 ;; Tracked objects:
 38686 ;;		On entry : 0/0
 38687 ;;		On exit  : 0/0
 38688 ;;		Unchanged: 0/0
 38689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38694 ;;Total ram usage:        0 bytes
 38695 ;; Hardware stack levels used:    1
 38696 ;; Hardware stack levels required when called:    6
 38697 ;; This function calls:
 38698 ;;		i1_I2cSlv_SendI2cMsg
 38699 ;; This function is called by:
 38700 ;;		_I2cSlv_MainTask
 38701 ;;		_OsAlrm_ProcessOsAlarms
 38702 ;; This function uses a non-reentrant model
 38703 ;;
 38704                           
 38705                           	psect	text190
 38706  006B5C                     __ptext190:
 38707                           	opt stack 0
 38708  006B5C                     _I2cDummyTx:
 38709                           	opt stack 8
 38710                           
 38711                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 38712                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 38713                           
 38714                           ;incstack = 0
 38715  006B5C  0EFB               	movlw	low I2cDummyTx@DummyBuffer
 38716  006B5E  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 38717  006B60  0E01               	movlw	high I2cDummyTx@DummyBuffer
 38718  006B62  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 38719  006B64  0E00               	movlw	0
 38720  006B66  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 38721  006B68  0E01               	movlw	1
 38722  006B6A  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 38723  006B6C  ECE6  F032         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 38724                           
 38725                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 38726  006B70  0E01               	movlw	1
 38727  006B72  0101               	movlb	1	; () banked
 38728  006B74  6FE4               	movwf	_I2cBusStatus& (0+255),b
 38729                           
 38730                           ; BSR set to: 1
 38731  006B76  0012               	return		;funcret
 38732  006B78                     __end_of_I2cDummyTx:
 38733                           	opt stack 0
 38734                           tosu	equ	0xFFF
 38735                           tosh	equ	0xFFE
 38736                           tosl	equ	0xFFD
 38737                           pclatu	equ	0xFFB
 38738                           pclath	equ	0xFFA
 38739                           tblptru	equ	0xFF8
 38740                           tblptrh	equ	0xFF7
 38741                           tblptrl	equ	0xFF6
 38742                           tablat	equ	0xFF5
 38743                           prodh	equ	0xFF4
 38744                           prodl	equ	0xFF3
 38745                           intcon	equ	0xFF2
 38746                           intcon2	equ	0xFF1
 38747                           intcon3	equ	0xFF0
 38748                           indf0	equ	0xFEF
 38749                           postinc0	equ	0xFEE
 38750                           plusw0	equ	0xFEB
 38751                           fsr0h	equ	0xFEA
 38752                           fsr0l	equ	0xFE9
 38753                           wreg	equ	0xFE8
 38754                           indf1	equ	0xFE7
 38755                           postinc1	equ	0xFE6
 38756                           postdec1	equ	0xFE5
 38757                           plusw1	equ	0xFE3
 38758                           fsr1h	equ	0xFE2
 38759                           fsr1l	equ	0xFE1
 38760                           bsr	equ	0xFE0
 38761                           indf2	equ	0xFDF
 38762                           postinc2	equ	0xFDE
 38763                           postdec2	equ	0xFDD
 38764                           plusw2	equ	0xFDB
 38765                           fsr2h	equ	0xFDA
 38766                           fsr2l	equ	0xFD9
 38767                           status	equ	0xFD8
 38768                           
 38769 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 38770 ;; Defined at:
 38771 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 38772 ;; Parameters:    Size  Location     Type
 38773 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 38774 ;;		 -> relayBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 38775 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 38776 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 38777 ;;  DataLenght      1   30[COMRAM] unsigned char 
 38778 ;; Auto vars:     Size  Location     Type
 38779 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 38780 ;; Return value:  Size  Location     Type
 38781 ;;                  1    wreg      unsigned char 
 38782 ;; Registers used:
 38783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38784 ;; Tracked objects:
 38785 ;;		On entry : 0/0
 38786 ;;		On exit  : 0/0
 38787 ;;		Unchanged: 0/0
 38788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38792 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38793 ;;Total ram usage:        5 bytes
 38794 ;; Hardware stack levels used:    1
 38795 ;; Hardware stack levels required when called:    5
 38796 ;; This function calls:
 38797 ;;		i1_GenerateEvt
 38798 ;; This function is called by:
 38799 ;;		_I2cDummyTx
 38800 ;; This function uses a non-reentrant model
 38801 ;;
 38802                           
 38803                           	psect	text191
 38804  0065CC                     __ptext191:
 38805                           	opt stack 0
 38806  0065CC                     i1_I2cSlv_SendI2cMsg:
 38807                           	opt stack 8
 38808                           
 38809                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 38810                           
 38811                           ; BSR set to: 1
 38812                           ;incstack = 0
 38813  0065CC  0E00               	movlw	0
 38814  0065CE  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38815                           
 38816                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 38817  0065D0  0100               	movlb	0	; () banked
 38818  0065D2  05CF               	decf	_I2cComSts& (0+255),w,b
 38819  0065D4  B4D8               	btfsc	status,2,c
 38820  0065D6  D014               	goto	i1l1412
 38821                           
 38822                           ; BSR set to: 0
 38823                           ;i2c_slv.c: 257: {
 38824                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 38825  0065D8  C01E  F3A1         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 38826                           
 38827                           ; BSR set to: 0
 38828                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 38829  0065DC  0E00               	movlw	0
 38830  0065DE  0103               	movlb	3	; () banked
 38831  0065E0  6FA2               	movwf	(_I2cTxPacket+1)& (0+255),b
 38832                           
 38833                           ; BSR set to: 3
 38834                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 38835  0065E2  C01F  F3A5         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 38836                           
 38837                           ; BSR set to: 3
 38838                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 38839  0065E6  C01C  F3A3         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 38840  0065EA  C01D  F3A4         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 38841                           
 38842                           ; BSR set to: 3
 38843                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 38844  0065EE  0ED7               	movlw	low _I2cWriteDataEvt
 38845  0065F0  6E19               	movwf	i1GenerateEvt@Event,c
 38846  0065F2  0E00               	movlw	high _I2cWriteDataEvt
 38847  0065F4  6E1A               	movwf	i1GenerateEvt@Event+1,c
 38848  0065F6  EC2A  F036         	call	i1_GenerateEvt	;wreg free
 38849                           
 38850                           ;i2c_slv.c: 267: TxSts = 1u;
 38851  0065FA  0E01               	movlw	1
 38852  0065FC  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38853                           
 38854                           ;i2c_slv.c: 268: }
 38855  0065FE  0012               	return	
 38856  006600                     i1l1412:
 38857                           
 38858                           ;i2c_slv.c: 269: else
 38859                           ;i2c_slv.c: 270: {
 38860                           ;i2c_slv.c: 272: TxSts = 0u;
 38861  006600  0E00               	movlw	0
 38862  006602  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38863  006604  0012               	return	
 38864  006606                     __end_ofi1_I2cSlv_SendI2cMsg:
 38865                           	opt stack 0
 38866                           tosu	equ	0xFFF
 38867                           tosh	equ	0xFFE
 38868                           tosl	equ	0xFFD
 38869                           pclatu	equ	0xFFB
 38870                           pclath	equ	0xFFA
 38871                           tblptru	equ	0xFF8
 38872                           tblptrh	equ	0xFF7
 38873                           tblptrl	equ	0xFF6
 38874                           tablat	equ	0xFF5
 38875                           prodh	equ	0xFF4
 38876                           prodl	equ	0xFF3
 38877                           intcon	equ	0xFF2
 38878                           intcon2	equ	0xFF1
 38879                           intcon3	equ	0xFF0
 38880                           indf0	equ	0xFEF
 38881                           postinc0	equ	0xFEE
 38882                           plusw0	equ	0xFEB
 38883                           fsr0h	equ	0xFEA
 38884                           fsr0l	equ	0xFE9
 38885                           wreg	equ	0xFE8
 38886                           indf1	equ	0xFE7
 38887                           postinc1	equ	0xFE6
 38888                           postdec1	equ	0xFE5
 38889                           plusw1	equ	0xFE3
 38890                           fsr1h	equ	0xFE2
 38891                           fsr1l	equ	0xFE1
 38892                           bsr	equ	0xFE0
 38893                           indf2	equ	0xFDF
 38894                           postinc2	equ	0xFDE
 38895                           postdec2	equ	0xFDD
 38896                           plusw2	equ	0xFDB
 38897                           fsr2h	equ	0xFDA
 38898                           fsr2l	equ	0xFD9
 38899                           status	equ	0xFD8
 38900                           
 38901 ;; *************** function i1_GenerateEvt *****************
 38902 ;; Defined at:
 38903 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 38904 ;; Parameters:    Size  Location     Type
 38905 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 38906 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 38907 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 38908 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 38909 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 38910 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 38911 ;; Auto vars:     Size  Location     Type
 38912 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 38913 ;; Return value:  Size  Location     Type
 38914 ;;                  1    wreg      enum E7699
 38915 ;; Registers used:
 38916 ;;		wreg, fsr2l, fsr2h, status,2
 38917 ;; Tracked objects:
 38918 ;;		On entry : 0/0
 38919 ;;		On exit  : 0/0
 38920 ;;		Unchanged: 0/0
 38921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38925 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38926 ;;Total ram usage:        3 bytes
 38927 ;; Hardware stack levels used:    1
 38928 ;; Hardware stack levels required when called:    4
 38929 ;; This function calls:
 38930 ;;		Nothing
 38931 ;; This function is called by:
 38932 ;;		i1_I2cSlv_SendI2cMsg
 38933 ;; This function uses a non-reentrant model
 38934 ;;
 38935                           
 38936                           	psect	text192
 38937  006C54                     __ptext192:
 38938                           	opt stack 0
 38939  006C54                     i1_GenerateEvt:
 38940                           	opt stack 8
 38941                           
 38942                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 38943                           
 38944                           ;incstack = 0
 38945  006C54  0E00               	movlw	0
 38946  006C56  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 38947                           
 38948                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 38949  006C58  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 38950  006C5C  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 38951  006C60  0E02               	movlw	2
 38952  006C62  6EDF               	movwf	indf2,c
 38953                           
 38954                           ;os_ser.c: 83: EventStatus = EventSent;
 38955  006C64  0E02               	movlw	2
 38956  006C66  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 38957  006C68  0012               	return	
 38958  006C6A                     __end_ofi1_GenerateEvt:
 38959                           	opt stack 0
 38960                           tosu	equ	0xFFF
 38961                           tosh	equ	0xFFE
 38962                           tosl	equ	0xFFD
 38963                           pclatu	equ	0xFFB
 38964                           pclath	equ	0xFFA
 38965                           tblptru	equ	0xFF8
 38966                           tblptrh	equ	0xFF7
 38967                           tblptrl	equ	0xFF6
 38968                           tablat	equ	0xFF5
 38969                           prodh	equ	0xFF4
 38970                           prodl	equ	0xFF3
 38971                           intcon	equ	0xFF2
 38972                           intcon2	equ	0xFF1
 38973                           intcon3	equ	0xFF0
 38974                           indf0	equ	0xFEF
 38975                           postinc0	equ	0xFEE
 38976                           plusw0	equ	0xFEB
 38977                           fsr0h	equ	0xFEA
 38978                           fsr0l	equ	0xFE9
 38979                           wreg	equ	0xFE8
 38980                           indf1	equ	0xFE7
 38981                           postinc1	equ	0xFE6
 38982                           postdec1	equ	0xFE5
 38983                           plusw1	equ	0xFE3
 38984                           fsr1h	equ	0xFE2
 38985                           fsr1l	equ	0xFE1
 38986                           bsr	equ	0xFE0
 38987                           indf2	equ	0xFDF
 38988                           postinc2	equ	0xFDE
 38989                           postdec2	equ	0xFDD
 38990                           plusw2	equ	0xFDB
 38991                           fsr2h	equ	0xFDA
 38992                           fsr2l	equ	0xFD9
 38993                           status	equ	0xFD8
 38994                           
 38995 ;; *************** function _HighPriorityIsr *****************
 38996 ;; Defined at:
 38997 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 38998 ;; Parameters:    Size  Location     Type
 38999 ;;		None
 39000 ;; Auto vars:     Size  Location     Type
 39001 ;;		None
 39002 ;; Return value:  Size  Location     Type
 39003 ;;                  1    wreg      void 
 39004 ;; Registers used:
 39005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39006 ;; Tracked objects:
 39007 ;;		On entry : 0/0
 39008 ;;		On exit  : 0/0
 39009 ;;		Unchanged: 0/0
 39010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39013 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39014 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39015 ;;Total ram usage:       18 bytes
 39016 ;; Hardware stack levels used:    1
 39017 ;; Hardware stack levels required when called:    3
 39018 ;; This function calls:
 39019 ;;		_Mcu_Int0Isr
 39020 ;;		_Mcu_Int1Isr
 39021 ;;		_Rtcc_RtcIsr
 39022 ;;		_Uart_Uart1RxIsr
 39023 ;; This function is called by:
 39024 ;;		Interrupt level 2
 39025 ;; This function uses a non-reentrant model
 39026 ;;
 39027                           
 39028                           	psect	intcode
 39029  000008                     __pintcode:
 39030                           	opt stack 0
 39031  000008                     _HighPriorityIsr:
 39032                           	opt stack 8
 39033                           
 39034                           ;incstack = 0
 39035  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 39036  00000A  EFEE  F023         	goto	int_func
 39037                           tosu	equ	0xFFF
 39038                           tosh	equ	0xFFE
 39039                           tosl	equ	0xFFD
 39040                           pclatu	equ	0xFFB
 39041                           pclath	equ	0xFFA
 39042                           tblptru	equ	0xFF8
 39043                           tblptrh	equ	0xFF7
 39044                           tblptrl	equ	0xFF6
 39045                           tablat	equ	0xFF5
 39046                           prodh	equ	0xFF4
 39047                           prodl	equ	0xFF3
 39048                           intcon	equ	0xFF2
 39049                           intcon2	equ	0xFF1
 39050                           intcon3	equ	0xFF0
 39051                           indf0	equ	0xFEF
 39052                           postinc0	equ	0xFEE
 39053                           plusw0	equ	0xFEB
 39054                           fsr0h	equ	0xFEA
 39055                           fsr0l	equ	0xFE9
 39056                           wreg	equ	0xFE8
 39057                           indf1	equ	0xFE7
 39058                           postinc1	equ	0xFE6
 39059                           postdec1	equ	0xFE5
 39060                           plusw1	equ	0xFE3
 39061                           fsr1h	equ	0xFE2
 39062                           fsr1l	equ	0xFE1
 39063                           bsr	equ	0xFE0
 39064                           indf2	equ	0xFDF
 39065                           postinc2	equ	0xFDE
 39066                           postdec2	equ	0xFDD
 39067                           plusw2	equ	0xFDB
 39068                           fsr2h	equ	0xFDA
 39069                           fsr2l	equ	0xFD9
 39070                           status	equ	0xFD8
 39071                           
 39072                           	psect	intcode_body
 39073  0047DC                     __pintcode_body:
 39074                           	opt stack 8
 39075  0047DC                     int_func:
 39076                           	opt stack 8
 39077  0047DC  CFFA F007          	movff	pclath,??_HighPriorityIsr
 39078  0047E0  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 39079  0047E4  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 39080  0047E8  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 39081  0047EC  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 39082  0047F0  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 39083  0047F4  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 39084  0047F8  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 39085  0047FC  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 39086  004800  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 39087  004804  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 39088  004808  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 39089  00480C  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 39090  004810  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 39091  004814  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 39092  004818  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 39093  00481C  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 39094  004820  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 39095                           
 39096                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 39097  004824  B2F2               	btfsc	intcon,1,c	;volatile
 39098                           
 39099                           ;irq.c: 158: {
 39100                           ;irq.c: 160: Mcu_Int0Isr();
 39101  004826  ECE2  F036         	call	_Mcu_Int0Isr	;wreg free
 39102                           
 39103                           ;irq.c: 161: }
 39104                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 39105  00482A  B0F0               	btfsc	intcon3,0,c	;volatile
 39106                           
 39107                           ;irq.c: 167: {
 39108                           ;irq.c: 169: Mcu_Int1Isr();
 39109  00482C  ECE0  F036         	call	_Mcu_Int1Isr	;wreg free
 39110                           
 39111                           ;irq.c: 170: }
 39112                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 39113  004830  B0A4               	btfsc	4004,0,c	;volatile
 39114                           
 39115                           ;irq.c: 203: {
 39116                           ;irq.c: 205: Rtcc_RtcIsr();
 39117  004832  ECDE  F036         	call	_Rtcc_RtcIsr	;wreg free
 39118                           
 39119                           ;irq.c: 206: }
 39120                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 39121  004836  BA9E               	btfsc	3998,5,c	;volatile
 39122                           
 39123                           ;irq.c: 212: {
 39124                           ;irq.c: 214: Uart_Uart1RxIsr();
 39125  004838  EC85  F036         	call	_Uart_Uart1RxIsr	;wreg free
 39126  00483C  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 39127  004840  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 39128  004844  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 39129  004848  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 39130  00484C  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 39131  004850  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 39132  004854  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 39133  004858  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 39134  00485C  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 39135  004860  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 39136  004864  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 39137  004868  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 39138  00486C  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 39139  004870  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 39140  004874  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 39141  004878  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 39142  00487C  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 39143  004880  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 39144  004884  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 39145  004886  0011               	retfie		f
 39146  004888                     __end_of_HighPriorityIsr:
 39147                           	opt stack 0
 39148                           tosu	equ	0xFFF
 39149                           tosh	equ	0xFFE
 39150                           tosl	equ	0xFFD
 39151                           pclatu	equ	0xFFB
 39152                           pclath	equ	0xFFA
 39153                           tblptru	equ	0xFF8
 39154                           tblptrh	equ	0xFF7
 39155                           tblptrl	equ	0xFF6
 39156                           tablat	equ	0xFF5
 39157                           prodh	equ	0xFF4
 39158                           prodl	equ	0xFF3
 39159                           intcon	equ	0xFF2
 39160                           intcon2	equ	0xFF1
 39161                           intcon3	equ	0xFF0
 39162                           indf0	equ	0xFEF
 39163                           postinc0	equ	0xFEE
 39164                           plusw0	equ	0xFEB
 39165                           fsr0h	equ	0xFEA
 39166                           fsr0l	equ	0xFE9
 39167                           wreg	equ	0xFE8
 39168                           indf1	equ	0xFE7
 39169                           postinc1	equ	0xFE6
 39170                           postdec1	equ	0xFE5
 39171                           plusw1	equ	0xFE3
 39172                           fsr1h	equ	0xFE2
 39173                           fsr1l	equ	0xFE1
 39174                           bsr	equ	0xFE0
 39175                           indf2	equ	0xFDF
 39176                           postinc2	equ	0xFDE
 39177                           postdec2	equ	0xFDD
 39178                           plusw2	equ	0xFDB
 39179                           fsr2h	equ	0xFDA
 39180                           fsr2l	equ	0xFD9
 39181                           status	equ	0xFD8
 39182                           
 39183 ;; *************** function _Uart_Uart1RxIsr *****************
 39184 ;; Defined at:
 39185 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 39186 ;; Parameters:    Size  Location     Type
 39187 ;;		None
 39188 ;; Auto vars:     Size  Location     Type
 39189 ;;		None
 39190 ;; Return value:  Size  Location     Type
 39191 ;;                  1    wreg      void 
 39192 ;; Registers used:
 39193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39194 ;; Tracked objects:
 39195 ;;		On entry : 0/0
 39196 ;;		On exit  : 0/0
 39197 ;;		Unchanged: 0/0
 39198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39203 ;;Total ram usage:        0 bytes
 39204 ;; Hardware stack levels used:    1
 39205 ;; Hardware stack levels required when called:    2
 39206 ;; This function calls:
 39207 ;;		_Uart_MdmGsmGprsReadService
 39208 ;; This function is called by:
 39209 ;;		_HighPriorityIsr
 39210 ;; This function uses a non-reentrant model
 39211 ;;
 39212                           
 39213                           	psect	text194
 39214  006D0A                     __ptext194:
 39215                           	opt stack 0
 39216  006D0A                     _Uart_Uart1RxIsr:
 39217                           	opt stack 8
 39218                           
 39219                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 39220                           ;uart_drv.c: 590: UartRxData = RCREG1;
 39221                           
 39222                           ;incstack = 0
 39223  006D0A  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 39224                           
 39225                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 39226  006D0E  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 39227  006D12  0E01               	movlw	1
 39228  006D14  ECCD  F01F         	call	_Uart_MdmGsmGprsReadService
 39229  006D18  0012               	return		;funcret
 39230  006D1A                     __end_of_Uart_Uart1RxIsr:
 39231                           	opt stack 0
 39232                           tosu	equ	0xFFF
 39233                           tosh	equ	0xFFE
 39234                           tosl	equ	0xFFD
 39235                           pclatu	equ	0xFFB
 39236                           pclath	equ	0xFFA
 39237                           tblptru	equ	0xFF8
 39238                           tblptrh	equ	0xFF7
 39239                           tblptrl	equ	0xFF6
 39240                           tablat	equ	0xFF5
 39241                           prodh	equ	0xFF4
 39242                           prodl	equ	0xFF3
 39243                           intcon	equ	0xFF2
 39244                           intcon2	equ	0xFF1
 39245                           intcon3	equ	0xFF0
 39246                           indf0	equ	0xFEF
 39247                           postinc0	equ	0xFEE
 39248                           plusw0	equ	0xFEB
 39249                           fsr0h	equ	0xFEA
 39250                           fsr0l	equ	0xFE9
 39251                           wreg	equ	0xFE8
 39252                           indf1	equ	0xFE7
 39253                           postinc1	equ	0xFE6
 39254                           postdec1	equ	0xFE5
 39255                           plusw1	equ	0xFE3
 39256                           fsr1h	equ	0xFE2
 39257                           fsr1l	equ	0xFE1
 39258                           bsr	equ	0xFE0
 39259                           indf2	equ	0xFDF
 39260                           postinc2	equ	0xFDE
 39261                           postdec2	equ	0xFDD
 39262                           plusw2	equ	0xFDB
 39263                           fsr2h	equ	0xFDA
 39264                           fsr2l	equ	0xFD9
 39265                           status	equ	0xFD8
 39266                           
 39267 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 39268 ;; Defined at:
 39269 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 39270 ;; Parameters:    Size  Location     Type
 39271 ;;  Module          1    wreg     unsigned char 
 39272 ;;  UartData        1    3[COMRAM] unsigned char 
 39273 ;; Auto vars:     Size  Location     Type
 39274 ;;  Module          1    0[COMRAM] unsigned char 
 39275 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 39276 ;; Return value:  Size  Location     Type
 39277 ;;                  1    wreg      void 
 39278 ;; Registers used:
 39279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39280 ;; Tracked objects:
 39281 ;;		On entry : 0/0
 39282 ;;		On exit  : 0/0
 39283 ;;		Unchanged: 0/0
 39284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39285 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39288 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39289 ;;Total ram usage:        3 bytes
 39290 ;; Hardware stack levels used:    1
 39291 ;; Hardware stack levels required when called:    1
 39292 ;; This function calls:
 39293 ;;		i2_GenerateEvt
 39294 ;; This function is called by:
 39295 ;;		_Uart_Uart1RxIsr
 39296 ;; This function uses a non-reentrant model
 39297 ;;
 39298                           
 39299                           	psect	text195
 39300  003F9A                     __ptext195:
 39301                           	opt stack 0
 39302  003F9A                     _Uart_MdmGsmGprsReadService:
 39303                           	opt stack 8
 39304                           
 39305                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 39306                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 39307                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 39308                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 39309                           
 39310                           ;incstack = 0
 39311  003F9A  0E00               	movlw	0
 39312  003F9C  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 39313  003F9E  0E00               	movlw	0
 39314  003FA0  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 39315                           
 39316                           ;uart_drv.c: 383: switch (RxState)
 39317  003FA2  D058               	goto	i2l680
 39318  003FA4                     
 39319                           ;uart_drv.c: 387: if (UartData == '\r')
 39320  003FA4  0E0D               	movlw	13
 39321  003FA6  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 39322  003FA8  A4D8               	btfss	status,2,c
 39323  003FAA  D003               	goto	i2l682
 39324                           
 39325                           ;uart_drv.c: 388: {
 39326                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 39327  003FAC  0E01               	movlw	1
 39328  003FAE  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 39329                           
 39330                           ;uart_drv.c: 391: }
 39331  003FB0  0012               	return	
 39332  003FB2                     i2l682:
 39333                           
 39334                           ;uart_drv.c: 392: else
 39335                           ;uart_drv.c: 393: {
 39336                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 39337  003FB2  0E90               	movlw	144
 39338  003FB4  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 39339  003FB6  0E01               	movlw	1
 39340  003FB8  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 39341  003FBA  B0D8               	btfsc	status,0,c
 39342  003FBC  0012               	return	
 39343                           
 39344                           ;uart_drv.c: 395: {
 39345                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 39346  003FBE  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 39347  003FC0  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 39348  003FC2  6ED9               	movwf	fsr2l,c
 39349  003FC4  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 39350  003FC6  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 39351  003FC8  6EDA               	movwf	fsr2h,c
 39352  003FCA  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 39353                           
 39354                           ;uart_drv.c: 399: RxCounter++;
 39355  003FCE  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 39356  003FD0  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 39357                           
 39358                           ;uart_drv.c: 400: }
 39359                           ;uart_drv.c: 401: }
 39360                           ;uart_drv.c: 402: break;
 39361  003FD2  0012               	return	
 39362  003FD4                     
 39363                           ;uart_drv.c: 406: if (UartData == '\n')
 39364  003FD4  0E0A               	movlw	10
 39365  003FD6  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 39366  003FD8  A4D8               	btfss	status,2,c
 39367  003FDA  D035               	goto	i2l688
 39368                           
 39369                           ;uart_drv.c: 407: {
 39370                           ;uart_drv.c: 409: if (RxCounter > 0)
 39371  003FDC  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 39372  003FDE  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 39373  003FE0  B4D8               	btfsc	status,2,c
 39374  003FE2  D031               	goto	i2l688
 39375                           
 39376                           ;uart_drv.c: 410: {
 39377                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 39378  003FE4  0E00               	movlw	0
 39379  003FE6  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 39380  003FE8  0E00               	movlw	0
 39381  003FEA  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 39382  003FEC  D010               	goto	i2l689
 39383  003FEE                     
 39384                           ;uart_drv.c: 413: {
 39385                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 39386  003FEE  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 39387  003FF0  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 39388  003FF2  6ED9               	movwf	fsr2l,c
 39389  003FF4  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 39390  003FF6  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 39391  003FF8  6EDA               	movwf	fsr2h,c
 39392  003FFA  0E58               	movlw	low _RxBuffer
 39393  003FFC  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 39394  003FFE  6EE1               	movwf	fsr1l,c
 39395  004000  0E0C               	movlw	high _RxBuffer
 39396  004002  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 39397  004004  6EE2               	movwf	fsr1h,c
 39398  004006  CFDF FFE7          	movff	indf2,indf1
 39399  00400A  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 39400  00400C  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 39401  00400E                     i2l689:
 39402  00400E  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 39403  004010  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 39404  004012  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 39405  004014  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 39406  004016  A0D8               	btfss	status,0,c
 39407  004018  D7EA               	goto	i2l690
 39408                           
 39409                           ;uart_drv.c: 415: }
 39410                           ;uart_drv.c: 417: RxLen = RxCounter;
 39411  00401A  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 39412  00401E  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 39413                           
 39414                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 39415  004022  0E3C               	movlw	low _NewStringReceived
 39416  004024  6E01               	movwf	i2GenerateEvt@Event,c
 39417  004026  0E00               	movlw	high _NewStringReceived
 39418  004028  6E02               	movwf	i2GenerateEvt@Event+1,c
 39419  00402A  EC35  F036         	call	i2_GenerateEvt	;wreg free
 39420                           
 39421                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 39422  00402E  0E3B               	movlw	low _NewMdmEvtParserRequest
 39423  004030  6E01               	movwf	i2GenerateEvt@Event,c
 39424  004032  0E00               	movlw	high _NewMdmEvtParserRequest
 39425  004034  6E02               	movwf	i2GenerateEvt@Event+1,c
 39426  004036  EC35  F036         	call	i2_GenerateEvt	;wreg free
 39427                           
 39428                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 39429  00403A  0E3A               	movlw	low _NewStringMdmTerminal
 39430  00403C  6E01               	movwf	i2GenerateEvt@Event,c
 39431  00403E  0E00               	movlw	high _NewStringMdmTerminal
 39432  004040  6E02               	movwf	i2GenerateEvt@Event+1,c
 39433  004042  EC35  F036         	call	i2_GenerateEvt	;wreg free
 39434  004046                     i2l688:
 39435                           
 39436                           ;uart_drv.c: 427: }
 39437                           ;uart_drv.c: 429: RxState = ReadData;
 39438                           
 39439                           ;uart_drv.c: 424: else
 39440                           ;uart_drv.c: 425: {
 39441                           
 39442                           ;uart_drv.c: 422: }
 39443                           ;uart_drv.c: 423: }
 39444  004046  0E00               	movlw	0
 39445  004048  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 39446                           
 39447                           ;uart_drv.c: 431: RxCounter = 0;
 39448  00404A  0E00               	movlw	0
 39449  00404C  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 39450  00404E  0E00               	movlw	0
 39451  004050  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 39452                           
 39453                           ;uart_drv.c: 436: }
 39454                           
 39455                           ;uart_drv.c: 435: break;
 39456                           
 39457                           ;uart_drv.c: 434: default:
 39458                           
 39459                           ;uart_drv.c: 432: break;
 39460  004052  0012               	return	
 39461  004054                     i2l680:
 39462  004054  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 39463                           
 39464                           ; Switch size 1, requested type "space"
 39465                           ; Number of cases is 2, Range of values is 0 to 1
 39466                           ; switch strategies available:
 39467                           ; Name         Instructions Cycles
 39468                           ; simple_byte            7     4 (average)
 39469                           ;	Chosen strategy is simple_byte
 39470  004056  0A00               	xorlw	0	; case 0
 39471  004058  B4D8               	btfsc	status,2,c
 39472  00405A  D7A4               	goto	i2l681
 39473  00405C  0A01               	xorlw	1	; case 1
 39474  00405E  A4D8               	btfss	status,2,c
 39475  004060  0012               	return	
 39476  004062  D7B8               	goto	i2l686
 39477  004064                     __end_of_Uart_MdmGsmGprsReadService:
 39478                           	opt stack 0
 39479                           tosu	equ	0xFFF
 39480                           tosh	equ	0xFFE
 39481                           tosl	equ	0xFFD
 39482                           pclatu	equ	0xFFB
 39483                           pclath	equ	0xFFA
 39484                           tblptru	equ	0xFF8
 39485                           tblptrh	equ	0xFF7
 39486                           tblptrl	equ	0xFF6
 39487                           tablat	equ	0xFF5
 39488                           prodh	equ	0xFF4
 39489                           prodl	equ	0xFF3
 39490                           intcon	equ	0xFF2
 39491                           intcon2	equ	0xFF1
 39492                           intcon3	equ	0xFF0
 39493                           indf0	equ	0xFEF
 39494                           postinc0	equ	0xFEE
 39495                           plusw0	equ	0xFEB
 39496                           fsr0h	equ	0xFEA
 39497                           fsr0l	equ	0xFE9
 39498                           wreg	equ	0xFE8
 39499                           indf1	equ	0xFE7
 39500                           postinc1	equ	0xFE6
 39501                           postdec1	equ	0xFE5
 39502                           plusw1	equ	0xFE3
 39503                           fsr1h	equ	0xFE2
 39504                           fsr1l	equ	0xFE1
 39505                           bsr	equ	0xFE0
 39506                           indf2	equ	0xFDF
 39507                           postinc2	equ	0xFDE
 39508                           postdec2	equ	0xFDD
 39509                           plusw2	equ	0xFDB
 39510                           fsr2h	equ	0xFDA
 39511                           fsr2l	equ	0xFD9
 39512                           status	equ	0xFD8
 39513                           
 39514 ;; *************** function i2_GenerateEvt *****************
 39515 ;; Defined at:
 39516 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 39517 ;; Parameters:    Size  Location     Type
 39518 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 39519 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 39520 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 39521 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 39522 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 39523 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 39524 ;; Auto vars:     Size  Location     Type
 39525 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 39526 ;; Return value:  Size  Location     Type
 39527 ;;                  1    wreg      enum E7699
 39528 ;; Registers used:
 39529 ;;		wreg, fsr2l, fsr2h, status,2
 39530 ;; Tracked objects:
 39531 ;;		On entry : 0/0
 39532 ;;		On exit  : 0/0
 39533 ;;		Unchanged: 0/0
 39534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39538 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39539 ;;Total ram usage:        3 bytes
 39540 ;; Hardware stack levels used:    1
 39541 ;; This function calls:
 39542 ;;		Nothing
 39543 ;; This function is called by:
 39544 ;;		_Uart_MdmGsmGprsReadService
 39545 ;; This function uses a non-reentrant model
 39546 ;;
 39547                           
 39548                           	psect	text196
 39549  006C6A                     __ptext196:
 39550                           	opt stack 0
 39551  006C6A                     i2_GenerateEvt:
 39552                           	opt stack 8
 39553                           
 39554                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 39555                           
 39556                           ;incstack = 0
 39557  006C6A  0E00               	movlw	0
 39558  006C6C  6E03               	movwf	i2GenerateEvt@EventStatus,c
 39559                           
 39560                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 39561  006C6E  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 39562  006C72  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 39563  006C76  0E02               	movlw	2
 39564  006C78  6EDF               	movwf	indf2,c
 39565                           
 39566                           ;os_ser.c: 83: EventStatus = EventSent;
 39567  006C7A  0E02               	movlw	2
 39568  006C7C  6E03               	movwf	i2GenerateEvt@EventStatus,c
 39569  006C7E  0012               	return	
 39570  006C80                     __end_ofi2_GenerateEvt:
 39571                           	opt stack 0
 39572                           tosu	equ	0xFFF
 39573                           tosh	equ	0xFFE
 39574                           tosl	equ	0xFFD
 39575                           pclatu	equ	0xFFB
 39576                           pclath	equ	0xFFA
 39577                           tblptru	equ	0xFF8
 39578                           tblptrh	equ	0xFF7
 39579                           tblptrl	equ	0xFF6
 39580                           tablat	equ	0xFF5
 39581                           prodh	equ	0xFF4
 39582                           prodl	equ	0xFF3
 39583                           intcon	equ	0xFF2
 39584                           intcon2	equ	0xFF1
 39585                           intcon3	equ	0xFF0
 39586                           indf0	equ	0xFEF
 39587                           postinc0	equ	0xFEE
 39588                           plusw0	equ	0xFEB
 39589                           fsr0h	equ	0xFEA
 39590                           fsr0l	equ	0xFE9
 39591                           wreg	equ	0xFE8
 39592                           indf1	equ	0xFE7
 39593                           postinc1	equ	0xFE6
 39594                           postdec1	equ	0xFE5
 39595                           plusw1	equ	0xFE3
 39596                           fsr1h	equ	0xFE2
 39597                           fsr1l	equ	0xFE1
 39598                           bsr	equ	0xFE0
 39599                           indf2	equ	0xFDF
 39600                           postinc2	equ	0xFDE
 39601                           postdec2	equ	0xFDD
 39602                           plusw2	equ	0xFDB
 39603                           fsr2h	equ	0xFDA
 39604                           fsr2l	equ	0xFD9
 39605                           status	equ	0xFD8
 39606                           
 39607 ;; *************** function _Rtcc_RtcIsr *****************
 39608 ;; Defined at:
 39609 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 39610 ;; Parameters:    Size  Location     Type
 39611 ;;		None
 39612 ;; Auto vars:     Size  Location     Type
 39613 ;;		None
 39614 ;; Return value:  Size  Location     Type
 39615 ;;                  1    wreg      void 
 39616 ;; Registers used:
 39617 ;;		wreg, status,2, status,0
 39618 ;; Tracked objects:
 39619 ;;		On entry : 0/0
 39620 ;;		On exit  : 0/0
 39621 ;;		Unchanged: 0/0
 39622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39627 ;;Total ram usage:        0 bytes
 39628 ;; Hardware stack levels used:    1
 39629 ;; This function calls:
 39630 ;;		Nothing
 39631 ;; This function is called by:
 39632 ;;		_HighPriorityIsr
 39633 ;; This function uses a non-reentrant model
 39634 ;;
 39635                           
 39636                           	psect	text197
 39637  006DBC                     __ptext197:
 39638                           	opt stack 0
 39639  006DBC                     _Rtcc_RtcIsr:
 39640                           	opt stack 10
 39641                           
 39642                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 39643                           
 39644                           ;incstack = 0
 39645  006DBC  90A4               	bcf	4004,0,c	;volatile
 39646  006DBE  0012               	return	
 39647  006DC0                     __end_of_Rtcc_RtcIsr:
 39648                           	opt stack 0
 39649                           tosu	equ	0xFFF
 39650                           tosh	equ	0xFFE
 39651                           tosl	equ	0xFFD
 39652                           pclatu	equ	0xFFB
 39653                           pclath	equ	0xFFA
 39654                           tblptru	equ	0xFF8
 39655                           tblptrh	equ	0xFF7
 39656                           tblptrl	equ	0xFF6
 39657                           tablat	equ	0xFF5
 39658                           prodh	equ	0xFF4
 39659                           prodl	equ	0xFF3
 39660                           intcon	equ	0xFF2
 39661                           intcon2	equ	0xFF1
 39662                           intcon3	equ	0xFF0
 39663                           indf0	equ	0xFEF
 39664                           postinc0	equ	0xFEE
 39665                           plusw0	equ	0xFEB
 39666                           fsr0h	equ	0xFEA
 39667                           fsr0l	equ	0xFE9
 39668                           wreg	equ	0xFE8
 39669                           indf1	equ	0xFE7
 39670                           postinc1	equ	0xFE6
 39671                           postdec1	equ	0xFE5
 39672                           plusw1	equ	0xFE3
 39673                           fsr1h	equ	0xFE2
 39674                           fsr1l	equ	0xFE1
 39675                           bsr	equ	0xFE0
 39676                           indf2	equ	0xFDF
 39677                           postinc2	equ	0xFDE
 39678                           postdec2	equ	0xFDD
 39679                           plusw2	equ	0xFDB
 39680                           fsr2h	equ	0xFDA
 39681                           fsr2l	equ	0xFD9
 39682                           status	equ	0xFD8
 39683                           
 39684 ;; *************** function _Mcu_Int1Isr *****************
 39685 ;; Defined at:
 39686 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 39687 ;; Parameters:    Size  Location     Type
 39688 ;;		None
 39689 ;; Auto vars:     Size  Location     Type
 39690 ;;		None
 39691 ;; Return value:  Size  Location     Type
 39692 ;;                  1    wreg      void 
 39693 ;; Registers used:
 39694 ;;		wreg, status,2, status,0
 39695 ;; Tracked objects:
 39696 ;;		On entry : 0/0
 39697 ;;		On exit  : 0/0
 39698 ;;		Unchanged: 0/0
 39699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39704 ;;Total ram usage:        0 bytes
 39705 ;; Hardware stack levels used:    1
 39706 ;; This function calls:
 39707 ;;		Nothing
 39708 ;; This function is called by:
 39709 ;;		_HighPriorityIsr
 39710 ;; This function uses a non-reentrant model
 39711 ;;
 39712                           
 39713                           	psect	text198
 39714  006DC0                     __ptext198:
 39715                           	opt stack 0
 39716  006DC0                     _Mcu_Int1Isr:
 39717                           	opt stack 10
 39718                           
 39719                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 39720                           
 39721                           ;incstack = 0
 39722  006DC0  90F0               	bcf	intcon3,0,c	;volatile
 39723  006DC2  0012               	return	
 39724  006DC4                     __end_of_Mcu_Int1Isr:
 39725                           	opt stack 0
 39726                           tosu	equ	0xFFF
 39727                           tosh	equ	0xFFE
 39728                           tosl	equ	0xFFD
 39729                           pclatu	equ	0xFFB
 39730                           pclath	equ	0xFFA
 39731                           tblptru	equ	0xFF8
 39732                           tblptrh	equ	0xFF7
 39733                           tblptrl	equ	0xFF6
 39734                           tablat	equ	0xFF5
 39735                           prodh	equ	0xFF4
 39736                           prodl	equ	0xFF3
 39737                           intcon	equ	0xFF2
 39738                           intcon2	equ	0xFF1
 39739                           intcon3	equ	0xFF0
 39740                           indf0	equ	0xFEF
 39741                           postinc0	equ	0xFEE
 39742                           plusw0	equ	0xFEB
 39743                           fsr0h	equ	0xFEA
 39744                           fsr0l	equ	0xFE9
 39745                           wreg	equ	0xFE8
 39746                           indf1	equ	0xFE7
 39747                           postinc1	equ	0xFE6
 39748                           postdec1	equ	0xFE5
 39749                           plusw1	equ	0xFE3
 39750                           fsr1h	equ	0xFE2
 39751                           fsr1l	equ	0xFE1
 39752                           bsr	equ	0xFE0
 39753                           indf2	equ	0xFDF
 39754                           postinc2	equ	0xFDE
 39755                           postdec2	equ	0xFDD
 39756                           plusw2	equ	0xFDB
 39757                           fsr2h	equ	0xFDA
 39758                           fsr2l	equ	0xFD9
 39759                           status	equ	0xFD8
 39760                           
 39761 ;; *************** function _Mcu_Int0Isr *****************
 39762 ;; Defined at:
 39763 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 39764 ;; Parameters:    Size  Location     Type
 39765 ;;		None
 39766 ;; Auto vars:     Size  Location     Type
 39767 ;;		None
 39768 ;; Return value:  Size  Location     Type
 39769 ;;                  1    wreg      void 
 39770 ;; Registers used:
 39771 ;;		wreg, status,2, status,0
 39772 ;; Tracked objects:
 39773 ;;		On entry : 0/0
 39774 ;;		On exit  : 0/0
 39775 ;;		Unchanged: 0/0
 39776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39781 ;;Total ram usage:        0 bytes
 39782 ;; Hardware stack levels used:    1
 39783 ;; This function calls:
 39784 ;;		Nothing
 39785 ;; This function is called by:
 39786 ;;		_HighPriorityIsr
 39787 ;; This function uses a non-reentrant model
 39788 ;;
 39789                           
 39790                           	psect	text199
 39791  006DC4                     __ptext199:
 39792                           	opt stack 0
 39793  006DC4                     _Mcu_Int0Isr:
 39794                           	opt stack 10
 39795                           
 39796                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 39797                           
 39798                           ;incstack = 0
 39799  006DC4  92F2               	bcf	intcon,1,c	;volatile
 39800  006DC6  0012               	return	
 39801  006DC8                     __end_of_Mcu_Int0Isr:
 39802                           	opt stack 0
 39803                           tosu	equ	0xFFF
 39804                           tosh	equ	0xFFE
 39805                           tosl	equ	0xFFD
 39806                           pclatu	equ	0xFFB
 39807                           pclath	equ	0xFFA
 39808                           tblptru	equ	0xFF8
 39809                           tblptrh	equ	0xFF7
 39810                           tblptrl	equ	0xFF6
 39811                           tablat	equ	0xFF5
 39812                           prodh	equ	0xFF4
 39813                           prodl	equ	0xFF3
 39814                           intcon	equ	0xFF2
 39815                           intcon2	equ	0xFF1
 39816                           intcon3	equ	0xFF0
 39817                           indf0	equ	0xFEF
 39818                           postinc0	equ	0xFEE
 39819                           plusw0	equ	0xFEB
 39820                           fsr0h	equ	0xFEA
 39821                           fsr0l	equ	0xFE9
 39822                           wreg	equ	0xFE8
 39823                           indf1	equ	0xFE7
 39824                           postinc1	equ	0xFE6
 39825                           postdec1	equ	0xFE5
 39826                           plusw1	equ	0xFE3
 39827                           fsr1h	equ	0xFE2
 39828                           fsr1l	equ	0xFE1
 39829                           bsr	equ	0xFE0
 39830                           indf2	equ	0xFDF
 39831                           postinc2	equ	0xFDE
 39832                           postdec2	equ	0xFDD
 39833                           plusw2	equ	0xFDB
 39834                           fsr2h	equ	0xFDA
 39835                           fsr2l	equ	0xFD9
 39836                           status	equ	0xFD8
 39837                           tosu	equ	0xFFF
 39838                           tosh	equ	0xFFE
 39839                           tosl	equ	0xFFD
 39840                           pclatu	equ	0xFFB
 39841                           pclath	equ	0xFFA
 39842                           tblptru	equ	0xFF8
 39843                           tblptrh	equ	0xFF7
 39844                           tblptrl	equ	0xFF6
 39845                           tablat	equ	0xFF5
 39846                           prodh	equ	0xFF4
 39847                           prodl	equ	0xFF3
 39848                           intcon	equ	0xFF2
 39849                           intcon2	equ	0xFF1
 39850                           intcon3	equ	0xFF0
 39851                           indf0	equ	0xFEF
 39852                           postinc0	equ	0xFEE
 39853                           plusw0	equ	0xFEB
 39854                           fsr0h	equ	0xFEA
 39855                           fsr0l	equ	0xFE9
 39856                           wreg	equ	0xFE8
 39857                           indf1	equ	0xFE7
 39858                           postinc1	equ	0xFE6
 39859                           postdec1	equ	0xFE5
 39860                           plusw1	equ	0xFE3
 39861                           fsr1h	equ	0xFE2
 39862                           fsr1l	equ	0xFE1
 39863                           bsr	equ	0xFE0
 39864                           indf2	equ	0xFDF
 39865                           postinc2	equ	0xFDE
 39866                           postdec2	equ	0xFDD
 39867                           plusw2	equ	0xFDB
 39868                           fsr2h	equ	0xFDA
 39869                           fsr2l	equ	0xFD9
 39870                           status	equ	0xFD8
 39871                           
 39872                           	psect	text200
 39873  000000                     __ptext200:
 39874                           	opt stack 0
 39875                           tosu	equ	0xFFF
 39876                           tosh	equ	0xFFE
 39877                           tosl	equ	0xFFD
 39878                           pclatu	equ	0xFFB
 39879                           pclath	equ	0xFFA
 39880                           tblptru	equ	0xFF8
 39881                           tblptrh	equ	0xFF7
 39882                           tblptrl	equ	0xFF6
 39883                           tablat	equ	0xFF5
 39884                           prodh	equ	0xFF4
 39885                           prodl	equ	0xFF3
 39886                           intcon	equ	0xFF2
 39887                           intcon2	equ	0xFF1
 39888                           intcon3	equ	0xFF0
 39889                           indf0	equ	0xFEF
 39890                           postinc0	equ	0xFEE
 39891                           plusw0	equ	0xFEB
 39892                           fsr0h	equ	0xFEA
 39893                           fsr0l	equ	0xFE9
 39894                           wreg	equ	0xFE8
 39895                           indf1	equ	0xFE7
 39896                           postinc1	equ	0xFE6
 39897                           postdec1	equ	0xFE5
 39898                           plusw1	equ	0xFE3
 39899                           fsr1h	equ	0xFE2
 39900                           fsr1l	equ	0xFE1
 39901                           bsr	equ	0xFE0
 39902                           indf2	equ	0xFDF
 39903                           postinc2	equ	0xFDE
 39904                           postdec2	equ	0xFDD
 39905                           plusw2	equ	0xFDB
 39906                           fsr2h	equ	0xFDA
 39907                           fsr2l	equ	0xFD9
 39908                           status	equ	0xFD8
 39909                           
 39910                           	psect	rparam
 39911  0000                     tosu	equ	0xFFF
 39912                           tosh	equ	0xFFE
 39913                           tosl	equ	0xFFD
 39914                           pclatu	equ	0xFFB
 39915                           pclath	equ	0xFFA
 39916                           tblptru	equ	0xFF8
 39917                           tblptrh	equ	0xFF7
 39918                           tblptrl	equ	0xFF6
 39919                           tablat	equ	0xFF5
 39920                           prodh	equ	0xFF4
 39921                           prodl	equ	0xFF3
 39922                           intcon	equ	0xFF2
 39923                           intcon2	equ	0xFF1
 39924                           intcon3	equ	0xFF0
 39925                           indf0	equ	0xFEF
 39926                           postinc0	equ	0xFEE
 39927                           plusw0	equ	0xFEB
 39928                           fsr0h	equ	0xFEA
 39929                           fsr0l	equ	0xFE9
 39930                           wreg	equ	0xFE8
 39931                           indf1	equ	0xFE7
 39932                           postinc1	equ	0xFE6
 39933                           postdec1	equ	0xFE5
 39934                           plusw1	equ	0xFE3
 39935                           fsr1h	equ	0xFE2
 39936                           fsr1l	equ	0xFE1
 39937                           bsr	equ	0xFE0
 39938                           indf2	equ	0xFDF
 39939                           postinc2	equ	0xFDE
 39940                           postdec2	equ	0xFDD
 39941                           plusw2	equ	0xFDB
 39942                           fsr2h	equ	0xFDA
 39943                           fsr2l	equ	0xFD9
 39944                           status	equ	0xFD8
 39945                           
 39946                           	psect	temp
 39947  000042                     btemp:
 39948                           	opt stack 0
 39949  000042                     	ds	1
 39950  0000                     int$flags	set	btemp
 39951  0000                     wtemp6	set	btemp+1
 39952                           tosu	equ	0xFFF
 39953                           tosh	equ	0xFFE
 39954                           tosl	equ	0xFFD
 39955                           pclatu	equ	0xFFB
 39956                           pclath	equ	0xFFA
 39957                           tblptru	equ	0xFF8
 39958                           tblptrh	equ	0xFF7
 39959                           tblptrl	equ	0xFF6
 39960                           tablat	equ	0xFF5
 39961                           prodh	equ	0xFF4
 39962                           prodl	equ	0xFF3
 39963                           intcon	equ	0xFF2
 39964                           intcon2	equ	0xFF1
 39965                           intcon3	equ	0xFF0
 39966                           indf0	equ	0xFEF
 39967                           postinc0	equ	0xFEE
 39968                           plusw0	equ	0xFEB
 39969                           fsr0h	equ	0xFEA
 39970                           fsr0l	equ	0xFE9
 39971                           wreg	equ	0xFE8
 39972                           indf1	equ	0xFE7
 39973                           postinc1	equ	0xFE6
 39974                           postdec1	equ	0xFE5
 39975                           plusw1	equ	0xFE3
 39976                           fsr1h	equ	0xFE2
 39977                           fsr1l	equ	0xFE1
 39978                           bsr	equ	0xFE0
 39979                           indf2	equ	0xFDF
 39980                           postinc2	equ	0xFDE
 39981                           postdec2	equ	0xFDD
 39982                           plusw2	equ	0xFDB
 39983                           fsr2h	equ	0xFDA
 39984                           fsr2l	equ	0xFD9
 39985                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    592
    Data        170
    BSS         2379
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    201     256
    BANK3           256      0     255
    BANK4           192      0     192
    BANK5           256      4     248
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_32(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    findEmptySpot@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> addCmdFsm@numberInMemory(BANK1[1]), 

    isMasterNumber@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    isNumberInMemory@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> triggerCmdFsm@numberInMemory(BANK1[1]), delCmdFsm@numberInMemory(BANK1[1]), addCmdFsm@numberInMemory(BANK1[1]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> readBuffer(BANK3[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), smsText(BANK4[20]), UsbMasterPhoneNumber(BANK4[15]), callerNumber(BANK4[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 3775
		 -> blinkInSeconds(BANK3[2]), setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), RAM(DATA[3775]), 

    triggerCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    resCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    resCmdFsm@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    detectUsbNumber@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    initFsm@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 4
		 -> memoryPreamble(BANK3[4]), 

    delCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    delCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    delCmdFsm@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    addCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    addCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    addCmdFsm@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> memoryPreamble(BANK3[4]), delCmdFsm@emptyNumber(BANK1[13]), smsText(BANK4[20]), UsbMasterPhoneNumber(BANK4[15]), 
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> readBuffer(BANK3[13]), parseCommand@resetCmd(BANK0[4]), parseCommand@deleteNumberCmd(BANK0[4]), parseCommand@addNumberCmd(BANK0[4]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8955 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK4[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK4[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 20
		 -> memoryPreamble(BANK3[4]), delCmdFsm@emptyNumber(BANK1[13]), smsText(BANK4[20]), UsbMasterPhoneNumber(BANK4[15]), 
		 -> callerNumber(BANK4[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4616$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4616$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4616$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4616$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3069$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3059$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3059$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3035$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3035$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3035$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3035$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2536_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2536_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetLastInteractionNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK1[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK1[1]), InitNetwork(BANK0[1]), MdmStsReady(BANK1[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_31(CODE[12]), STR_30(CODE[19]), STR_29(CODE[14]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), 
		 -> STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), 
		 -> STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _triggerRelay->_I2cSlv_SendI2cMsg
    _Eeprom_Reset->_I2cSlv_SendI2cMsg
    _waitSetupCall->_secondsAppTimer
    _savePreamble->_Eeprom_Write
    _initGprsModem->_Mdm_SetSmsFormat
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _detectUsbNumber->_saveNumberInMemory
    _detectCmd->_parseCommand
    _parseCommand->_StringCompare
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _cmdVisualEffet->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _saveNumberInMemory->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _isNumberInMemory->_Eeprom_Read
    _isMasterNumber->_Eeprom_Read
    _findEmptySpot->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCopy
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _StringCopy->_GetCallerNumber
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_delCmdFsm
    _triggerCmdFsm->_isNumberInMemory
    _resCmdFsm->_isMasterNumber
    _initFsm->_initEeprom
    _delCmdFsm->_isNumberInMemory
    _addCmdFsm->_isNumberInMemory
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Sch_MainScheduler->_InitializeTasks
    _Sch_MainScheduler->_ScheduleTasks
    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1399339
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0 1394708
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  697447
                                            200 BANK2      1     1      0
                                              0 BANK5      4     4      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  697261
                                            200 BANK2      1     1      0
                                              0 BANK5      2     2      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59354
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59354
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   42144
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                           1     1      0  431477
                _Led_SetLedBlinkTime
                          _addCmdFsm
                     _cmdVisualEffet
                          _delCmdFsm
                          _detectCmd
                    _detectUsbNumber
                            _initFsm
                          _resCmdFsm
                      _triggerCmdFsm
                _triggerVisualEffect
 ---------------------------------------------------------------------------------
 (4) _triggerVisualEffect                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _triggerCmdFsm                                        6     4      2   74478
                                              5 BANK1      6     4      2
                     _isMasterNumber
                   _isNumberInMemory
                    _secondsAppTimer
                       _triggerRelay
 ---------------------------------------------------------------------------------
 (5) _triggerRelay                                         2     2      0    4067
                                             37 BANK0      2     2      0
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (4) _resCmdFsm                                            6     2      4   36313
                                              3 BANK1      6     2      4
                       _Eeprom_Reset
                     _isMasterNumber
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Reset                                         1     1      0    6686
                                             37 BANK0      1     1      0
                        _ClearBuffer
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              3     1      2   95863
                                              3 BANK1      3     1      2
                    _GetCallerNumber
                   _Led_SetLedStatus
                    _detectUsbNumber
                         _initEeprom
                      _initGprsModem
                 _saveNumberInMemory
                       _savePreamble
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (5) _waitSetupCall                                        1     1      0   17846
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _getSetupCall                                         1     1      0    5527
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (5) _savePreamble                                         0     0      0    9862
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (6) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15786
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24954
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (5) _detectUsbNumber                                      3     1      2   10616
                                             57 BANK0      3     1      2
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (4) _detectCmd                                            1     1      0   35708
                                             53 BANK0      1     1      0
                    _GetCallerNumber
           _GetLastInteractionNumber
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                         _StringCopy
              _Uart_WriteConstString
                       _parseCommand
 ---------------------------------------------------------------------------------
 (5) _parseCommand                                        13    13      0    3986
                                             40 BANK0     13    13      0
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (5) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_HangPhoneCall                                    0     0      0    2751
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (5) _Mdm_GetSmsData                                       3     1      2    8061
                                             47 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (5) _GetLastInteractionNumber                             2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _delCmdFsm                                           23    17      6   69763
                                              5 BANK1     23    17      6
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (4) _cmdVisualEffet                                       2     2      0   12350
                                             51 BANK0      2     2      0
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   11326
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _addCmdFsm                                           10     4      6   95753
                                              5 BANK1     10     4      6
                      _findEmptySpot
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (5) _saveNumberInMemory                                   3     1      2   10340
                                             54 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write                                         7     4      3    9862
                                             47 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (5) _isNumberInMemory                                     5     1      4   29454
                                              0 BANK1      5     1      4
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _isMasterNumber                                       3     1      2   29221
                                              0 BANK1      3     1      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _findEmptySpot                                        3     1      2   25863
                                              0 BANK1      3     1      2
                        _Eeprom_Read
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (6) _isNumberValid                                        5     3      2     786
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Read                                          7     4      3   24874
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (7) _I2cSlv_QueryI2cData                                  7     0      7   23807
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    4023
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     633
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   73780
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   16197
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   13450
                                             47 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _StringCompare                                       11     5      6    3040
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   15392
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8747
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13998
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   43139
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   21606
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   21533
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _Uart_WriteConstString                                3     1      2    2751
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (9) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (9) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _StringCopy                                          10     4      6    5187
                                             37 BANK0     10     4      6
                    _GetCallerNumber (ARG)
           _GetLastInteractionNumber (ARG)
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7139
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7139
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2773
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) _Led_SetLedStatus                                     2     1      1     956
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _cmdVisualEffet
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _detectUsbNumber
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _detectUsbNumber
             _saveNumberInMemory
               _Eeprom_Write
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _StringCopy
                   _GetCallerNumber (ARG)
                     _ClearBuffer
                     _ReceiveEvt
                   _GetLastInteractionNumber (ARG)
                 _initPreamble (ARG)
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _resCmdFsm
           _Eeprom_Reset
             _ClearBuffer
             _I2cSlv_SendI2cMsg
               _GenerateEvt
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
         _triggerCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
         _triggerVisualEffect
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _cmdVisualEffet
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _detectUsbNumber
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _detectUsbNumber
             _saveNumberInMemory
               _Eeprom_Write
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _StringCopy
                   _GetCallerNumber (ARG)
                     _ClearBuffer
                     _ReceiveEvt
                   _GetLastInteractionNumber (ARG)
                 _initPreamble (ARG)
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _resCmdFsm
           _Eeprom_Reset
             _ClearBuffer
             _I2cSlv_SendI2cMsg
               _GenerateEvt
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
         _triggerCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
         _triggerVisualEffect
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      4      F8      16       96.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FF      12       99.6%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C9     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      C0      14      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     9A5       8        0.0%
DATA                 0      0     CC5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Apr  3 12:24:02 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5C12  
                 delCmdFsm@masterOpResult 0119                                _USB_SD_Ptr FC1C  
                          ??_getSetupCall 0083                 __size_of_Mdm_SetSmsFormat 0050  
                         ?_isMasterNumber 0100                      __size_of_TurnOnModem 004C  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 6AE6  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 26EA                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0031                                       l202 2200  
                                     l203 2208                                       l205 2250  
                                     l206 2276                                       l208 227E  
                                     l160 1FE4                                       l209 229E  
                                     l161 1EBA                                       l162 2022  
                                     l170 1F82                                       l171 1F98  
                                     l163 1EC6                                       l315 49BE  
                                     l323 498A                                       l164 1F06  
                                     l316 4934                                       l420 5000  
                                     l500 4E1A                                       l173 1F9C  
                                     l325 49A4                                       l421 5020  
                                     l237 6AF2                                       l174 1FA4  
                                     l166 1F14                                       l318 493E  
                                     l422 502C               __end_of_USBStdGetDscHandler 2E62  
                                     l510 4DEC                                       l502 4DAC  
                                     l175 1FB0                                       l167 1F3C  
                                     l319 4964                                       l423 5038  
                                     l511 4DDC                                       l503 4D9C  
                                     l192 22A8                                       l176 1FC6  
                                     l416 504C                                       l424 5044  
                                     l512 4E00                                       l504 4DC2  
                                     l520 611C                                       l193 2188  
                                     l169 1F4E                                       l417 4FF2  
                                     l441 17F2                                       l513 4DE0  
                                     l505 4DA0                                       l521 60E8  
                                     l194 22E0                                       l418 507A  
                                     l442 15FA                                       l514 4DE6  
                                     l506 4DA6                                       l530 3336  
                                     l195 2194                                       l179 1FD2  
                                     l419 4FFA                                       l523 6102  
                                     l531 339C                                       l196 21D4  
                                     l700 6382                                       l444 1642  
                                     l532 3362                                       l445 168A  
                                     l541 6A90                                       l198 21E2  
                                     l446 16D2                                       l199 21F6  
                                     l631 2B78                                       l447 171A  
                                     l448 1762                                       l528 33A2  
                                     l633 2BF0                                       l625 2B04  
                                     l449 17AA                                       l529 338E  
                                     l538 6A94                                       l546 40BC  
                                     l651 606C                                       l707 64A6  
                                     l627 2B28                                       l715 641A  
                                     l539 6A8C                                       l547 40D8  
                                     l660 6090                                       l652 6066  
                                     l716 63F0                                       l709 64C0  
                                     l629 2B50                                       l718 6408  
                                     l639 6AD8                                       l832 6854  
                                     l844 4190                                       l668 0C4A  
                                     _BDT 000400                                       l790 6B0E  
                                     l855 54BA                                       l775 2F84  
                                     l864 5212                                       l856 5460  
                                     l857 54D4                                       l698 6366  
                                     l858 5490                                       l867 5224  
                                     l982 2160                                       l983 2028  
                                     l985 204E                                       l987 206A  
                                     l988 20A0                                       l989 2114  
                                     l998 213A                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                   __end_of_HighPriorityIsr 4888  
                          ??_Mdm_MainTask 00A9                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 66DC                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BB0  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CE  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 63E4  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 2026  
           findEmptySpot@positionInMemory 0100             ??_Tmr_RegisterTmr2IsrCallback 007F  
                                    l1010 6130           InitGprsNetwork@GprsNetInitState 01E7  
                                    l1100 1B20                                      l1101 1B6C  
                                    l1013 614A                                      l1110 5F70  
                             RiSm@Counter 02DB                                      l1031 3BA2  
                                    l1111 5F84                                      l1032 3BDC  
                                    l2000 5A00                                      l1033 3C02  
                                    l1009 6166                                      l1121 5FDC  
                                    l1027 3C3C                                      l1035 3C22  
                                    l1107 5F96                                      l2100 2972  
                                    l1220 0DD6                                      l1028 3B90  
                                    l1052 1E8C                                      l1060 1E5E  
                                    l1108 5F5A                                      l2101 2866  
                                    l1053 1DA6                                      l2102 28EA  
                                    l1222 10B6                                      l1230 0FBE  
                                    l1070 2D16                                      l2006 59F4  
                                    l2111 3550                                      l1231 0FC2  
                                    l1223 0DEE                                      l1071 2C0E  
                                    l1055 1EA6                                      l2112 3498  
                                    l1232 1006                                      l1224 0E28  
                                    l1056 1DD8                                      l1152 6990  
                                    l1136 696C                                      l2008 59FA  
                                    l2113 356C                                      l2121 4A54  
                                    l1241 1074                                      l1225 0E9C  
                                    l1129 5858                                      l2114 34B6  
                                    l2122 49E6                                      l1226 0E64  
                                    l1074 2C2A                                      l1058 1E28  
                                    l2123 4A7C                                      l1219 107E  
                                    l1075 2C42                                      l1091 1B86  
                                    l2116 3526                                      l2124 49F6  
                                    l1252 0A5A                                      l1260 0744  
                                    l1236 1016                                      l1228 0F44  
                                    l1092 1A04                                      l1412 6498  
                                    l1156 6666                                      l1404 5D02  
                                    l2220 52B0                                      l2125 4A08  
                                    l1261 06FC                                      l1253 05FA  
                                    l1237 105A                                      l1229 0F7E  
                                    l2037 5DAC                                      l2045 5C8A  
                                    l1405 5CC2                                      l2221 5236  
                                    l2142 67E8                                      l2126 4A22  
                                    l1078 2CB4                                      l1422 6A7C  
                                    l2046 5CBC                                      l2134 3EBC  
                                    l2143 67D6                                      l1255 0ABC  
                                    l1263 07F8                                      l1095 1A20  
                                    l2151 5DF8                                      l2039 5DB8  
                                    l1407 5CFC                                      l2135 3E04  
                                    l2223 529C                                      l2128 4A30  
                                    l1280 09CA                                      l1272 0930  
                                    l1264 0832                                      l1256 0612  
                                    l1096 1AD6                                      l2152 5DC2  
                                    l1440 3D1A                                      l2145 67DC  
                                    l2129 4A3E                                      l1281 0A38  
                                    l1273 0974                                      l1265 085C  
                                    l1257 064C                                      l1097 1AFA  
                                    l1417 63DE                                      l1441 3C64  
                                    l2137 3E12                                      l2146 67E2  
                                    l1266 0896                                      l1258 0686  
                                    l2250 5ECE                                      l2154 5DD4  
                                    l1442 3D30                                      l1267 08D0  
                                    l1259 06C0                                      l2251 5EF4  
                                    l2155 5DE6                                      l1443 3C82  
                                    l2411 0152                                      l1291 623E  
                                    l1268 0914                                      l2412 01E2  
                                    l2420 01D0                                      l1700 3858  
                                    l1604 2734                                      l1620 1BF8  
                                    l1285 0A48                                      l1277 0984  
                                    l1445 3CE0                                      l1621 1C08  
                                    l1382 435C                                      l2262 669A  
                                    l1286 0A50                                      l1278 09B0  
                                    l1446 3CF4                                      l3150 3908  
                                    l2430 0304                                      l2414 01AE  
                                    l1702 38BC                                      l1606 275C  
                                    l1630 1CA4                                      l1622 1C10  
                                    l1294 620C                                      l1391 4326  
                                    l1383 42BE                                      l2263 6686  
                                    l2407 05D8                                      l2431 02C6  
                                    l2415 019C                                      l1703 3882  
                                    l1631 1CB0                                      l1623 1C26  
                                    l1615 1BDC                                      l1384 42E0  
                                    l2256 59E4                                      l1448 3D12  
                                    l3152 3950                                      l2408 00E2  
                                    l1608 2798                                      l1640 1D2C  
                                    l1624 1C32                                      l1616 1BD2  
                                    l2512 69CA                                      l1393 4342  
                                    l2257 59A4                                      l2249 5EF8  
                                    l2425 0392                                      l1713 2FE4  
                                    l1633 1CC4                                      l1617 1BD0  
                                    l2513 69BC                                      l2601 26D8  
                                    l1394 434E                                      l1386 4302  
                                    l2098 295C                                      l3330 6A5C  
                                    l1650 4546                                      l2426 0326  
                                    l1706 38FE                                      l1714 2FBE  
                                    l1626 1C5A                                      l2602 25A0  
                                    l2099 283E                                      l3171 5392  
                                    l3155 39A0                                      l2443 0424  
                                    l2427 02B4                                      l1707 38C4  
                                    l1643 62A8                                      l1811 3764  
                                    l2515 69C4                                      l2611 260E  
                                    l3172 538A                                      l3156 3962  
                                    l1652 45A2                                      l3340 4890  
                                    l2452 052A                                      l2428 0250  
                                    l1716 305C                                      l1644 62B8  
                                    l1740 2E3A                                      l1812 376A  
                                    l1636 1CEA                                      l1628 1C6E  
              USBConfigureEndpoint@handle 0083                                      l1389 430A  
                                    l3181 55E2                                      l3149 390E  
                                    l2453 0576                                      l2445 0464  
                                    l2437 0402                                      l1717 3042  
                                    l1733 2E4A                                      l1725 35CC  
                                    l1813 3770                                      l1629 1C7A  
                                    l2605 26AE                                      l2613 263C  
                                    l3190 5634                                      l3182 55EE  
                                    l3158 39D4                                      l3342 48CC  
                                    l2446 057E                                      l2438 03D2  
                                    l2470 10E4                                      l1902 47B8  
                                    l1830 1444                                      l1742 2E42  
                                    l1734 2D46                                      l1750 4716  
                                    l1814 3784                                      l1638 1D0E  
                                    l2606 25D2                                      l3423 5E30  
                                    l3175 53B2                                      l3343 490E  
                                    l1903 4752                                      l1831 1446  
                                    l1751 4698                                      l1727 3640  
                                    l1815 378A                                      l2615 266C  
                                    l3424 5E28                                      l2640 3478  
                                    l3176 53BC                                      l3168 5364  
                                    l3184 5604                                      l1648 451C  
                                    l3336 62FE                                      l2448 04BA  
                                    l2472 1100                                      l1840 1544  
                                    l1832 1462                                      l1736 2D5A  
                                    l1752 469E                                      l1808 37EA  
                                    l1760 6290                                      l2641 33BC  
                                    l3177 53CA                                      l3169 5374  
                                    l3185 55FC                                      l3433 6334  
                                    l2449 047E                                      l2481 1154  
                                    l1905 476A                                      l1841 15C0  
                                    l1825 1384                                      l1737 2DE2  
                                    l1753 46BE                                      l1817 3790  
                                    l1809 375A                                      l1673 4C14  
                                    l1761 628E                                      l2617 2688  
                                    l2609 25EE                                      l3370 5404  
                                    l2642 33E2                                      l3434 632C  
                                    l3610 1862                                      l1906 4778  
                                    l1834 14F0                                      l1826 138A  
                                    l1746 4700                                      l1818 37AE  
                                    l3371 53F8                                      l3427 5E50  
                                    l2803 658C                                      l2467 1324  
                                    l2483 1294                                      l1667 3F16  
                                    l1907 4796                                      l1739 2DEA  
                                    l1747 4686                                      l1819 37CA  
                                    l1675 4C2E                                      l3428 5E5A  
                                    l2652 3424                                      l2820 54E6  
                                    l3188 561C                                      l1924 4EBC  
                                    l3620 18DE                                      l3612 187A  
                                    l2468 10BE                                      l1908 47AE  
                                    l1844 1576                                      l1836 14B8  
                                    l1828 13FC                                      l1684 323A  
                                    l2492 6B9A                                      l2645 3492  
                                    l2821 550C                                      l3189 5626  
                                    l3437 634C                                      l3621 18EE  
                                    l3453 678C                                      l2485 12FE  
                                    l2477 1114                                      l1837 14D6  
                                    l1685 31E2                                      l3374 5438  
                                    l2646 33EA                                      l2582 318C  
                                    l2750 50BA                                      l3438 6356  
                                    l3630 19E6                                      l3614 18CE  
                                    l3454 677A                                      l1846 15CC  
                                    l1774 4FDA                                      l3375 5446  
                                    l2647 3412                                      l2743 50F2  
                                    l2751 50CE                                      l1927 4E6A  
                                    l3623 1908                                      l3703 654C  
                                    l2487 131E                                      l2479 1134  
                                    l1679 4D64                                      l1839 1538  
                                    l3447 61AE                                      l1775 4FD4  
                                    l2495 6B94                                      l2680 3AE2  
                                    l2592 4CC2                                      l2760 5124  
                                    l2752 50E6                                      l2744 5088  
                                    l2824 5552                                      l1928 4E96  
                                    l1960 29F2                                      l1952 299A  
                                    l3448 618C                                      l1768 65C0  
                                    l2905 61D6                                      l2681 3B08  
                                    l2593 4CF8                                      l2825 5516  
                                    l1929 4E70                                      l1793 43B2  
                                    l1785 586E                                      l1689 3264  
                                    l1769 65BE                                      l2930 4602  
                                    l2658 346E                                      l2906 61FC  
                                    l2586 31B6                                      l2578 3150  
                                    l2762 516A                                      l2850 661A  
                                    l3634 6C0C                                      l3626 191A  
                                    l1970 2AA6                                      l1962 2A4A  
                                    l1954 29A8                                      l1698 384E  
                                    l1794 43B8                                      l2915 5950  
                                    l2691 3B6E                                      l2579 314C  
                                    l2771 6AC0                                      l2819 553E  
                                    l2827 5534                                      l3627 1986  
                                    l3707 6BF4                                      l3651 36A2  
                                    l1971 2AAA                                      l1963 2A12  
                                    l1795 4434                                      l1787 58BC  
                                    l2684 3B8A                                      l2764 51A0  
                                    l3660 3740                                      l3580 5AB8  
                                    l1956 29DC                                      l1796 43FA  
                                    l2917 5982                                      l2933 4674  
                                    l2685 3B10                                      l2765 5172  
                                    l2749 510E                                      l3629 19AC  
                                    l2918 5988                                      l2934 4612  
                                    l2926 45D6                                      l2686 3B5A  
                                    l2766 517E                                      l2790 4458  
                                    l2862 3AB0                                      l2870 3A62  
                                    l3654 3702                                      l3582 5AD8  
                                    l1966 2A8C                                      l1798 441A  
                                    l2679 3B76                                      l2759 518C  
                                    l2775 6034                                      l2863 3A16  
                                    l3655 36BA                                      l3583 5ACE  
                                    l1967 2A54                                      l1959 29EE  
                                    l2960 4F12                                      l2952 4ED8  
                                    l2944 5718                                      l2928 4666  
                                    l2936 465E                __size_of_Mdm_IsSmsReceived 0024  
                                    l2792 4474                                      l2872 3A88  
                                    l3656 36D2                                      l3648 367A  
                                    l1992 693C                                _Led1OutSts 01F8  
                                    l2961 4F30                                      l2929 45E2  
                                    l2777 6040                                      l2793 44B4  
                                    l2857 3A90                                      l3657 36E2  
                                    l3649 3674                                      l1993 692C  
                                    l2954 4F44                                      l2786 44DC  
                                    l2794 449E                                      l2858 39F2  
                                    l3594 6434                                      l2955 4EE4  
                                    l2787 444A                                      l2859 3A0C  
                                    l3691 68D4                                      l3579 5ABE  
                                    l3595 642E                                      l1995 6932  
                                    l2956 4F04                                      l3588 6722  
                                    l2980 3D8A                                      l2972 3D40  
                                    l2789 44FC                                      l2797 44B8  
                                    l2869 3A4A                                      l3589 6718  
                                    l2973 3D5A                                      l2798 44C4  
                                    l3686 67C6                                      l2974 3DBC  
                                    l2959 4F52                                      l2895 4AE4  
                                    l2983 3DDC                                      l3696 6A18  
                                    l2897 4B10                                      l2977 3D60  
                                    l2898 4B20                                      l2979 3DA8  
                                    l2997 5B74                                      l2998 5B88  
                                    STR_1 FFE6                                      STR_2 FF75  
                                    STR_3 FFDF                                      STR_4 FFC2  
                                    STR_5 FFCE                                      STR_6 FFF0  
                                    STR_7 FFEB                                      STR_8 FE89  
                                    STR_9 FEBD                                _Led2OutSts 01F6  
                              _Led3OutSts 01F4                     ??_USBCtrlTrfTxService 007D  
                                    _UCFG 000F39                                      u9305 610C  
                                    u9306 610E                                      u9315 6118  
                                    u9316 611A                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                                    u9285 60F2                  __size_of_Uart_Uart1RxIsr 0010  
                                    u9286 60F4                                      u9295 60FE  
                                    u9296 6100                                      _UEIR 000F63  
                                    _UCON 000F65                                _AlarmEvent 01F3  
                          ?_StopCondition 0001                              _triggerRelay 6606  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 0314  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 6D98  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0032               Led_SetLedBlinkTime@OnTimeMs 007D  
            findEmptySpot@currentPosition 00E0    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D5                      _NewStringMdmTerminal 003A  
                                    _atoi 3906                                      _main 6D38  
                         ??_Mdm_IsRinging 0081                                      _itoa 62D8  
                        ?_SetUartBaudRate 0096                   __end_of_GetCallerNumber 6672  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 030C                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                                      _utoa 4888  
                                    _xtoi 3664                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 6DA0               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 4FEC               I2cSlv_SendI2cMsg@DataLenght 0083  
                    ??_Mcu_StartSystemPll 007D               __end_of_Uart_WriteStringLen 6424  
                                    prodh 000FF4                                      prodl 000FF3  
         detectUsbNumber@isCmdSuccessfull 0099                                      start 00CC  
                     __end_of_Eeprom_Read 5DBC   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 6C28  
                           _isNumberValid 592A                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D          isNumberInMemory@positionInMemory 0102  
              __end_of_USBCheckStdRequest 382E                           _Rtcm_SystemDate 044A  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 6CCA  
       __size_of_GetLastInteractionNumber 000C                        ?_Rtcc_GetRtccValue 0001  
                     ?_InitModemInterface 0001                        StringCompare@Index 0086  
               ?_GetLastInteractionNumber 007D                            _GetElapsedTime 412C  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                   resCmdFsm@masterOpResult 0108  
            isNumberInMemory@currentState 00C5                       StringCopy@SourceStr 0085  
             __end_of_OsAlrm_ClearOsAlarm 5C6A                  Eeprom_Write@SlaveAddress 0094  
                   addCmdFsm@currentState 01D9                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
              waitSetupCall@isCallArrived 0093                       __size_of_I2cDummyTx 001C  
                 __end_of_detectUsbNumber 6592                          ??_Mdm_GetSmsData 0091  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 64A0                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDAB                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DA  
                                   l13230 677A                                     l14120 618C  
                                   l12506 6AF2                                     l13268 3858  
                                   l14424 5948                                     l13448 35C4  
                                   l14470 4B20                                     l14286 399C  
                                   l16128 09AA                                     l14720 5006  
                                   l16280 1CBC                                     l14906 272C  
                                   l15644 33A2                                     l14846 66BA  
                                   l14934 2790                                     l15770 1D9E  
                                   l17276 5A1A                                     l17278 5A4A  
                                   l15792 1E58                                     l15962 0FB6  
                                   l16952 5562                                     l16964 2E6C  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 53D4  
               delCmdFsm@isCmdSuccessfull 0109                                     STR_10 FF4B  
                                   STR_11 FF59                                     STR_12 FF9D  
                                   STR_20 FF3D                                     STR_13 FF67  
                                   STR_21 FE5F                                     STR_30 FEFA  
                                   STR_14 FEA8                                     STR_31 FFAA  
                                   STR_15 FEE6                                     STR_23 FED2  
                                   STR_24 FFF5                                     STR_32 FFD8  
                                   STR_16 FF1E                                     STR_25 FFF5  
                                   STR_17 FF83                                     STR_26 FE86  
                                   STR_18 FF90                                     STR_27 FF0D  
                                   STR_28 FFB6                           __end_of___awmod 563E  
                                   STR_29 FF2F                             _triggerCmdFsm 39DE  
       __size_of_USBCtrlEPServiceComplete 00FE                           __end_of___lldiv 5458  
                                   ?_utoa 008A                                     u11005 68A2  
                                   u11006 68A4                                     u11015 68AE  
                                   u11016 68B0                                     u12020 35F8  
                                   u12060 2DAC                           ___awdiv@divisor 007F  
                                   u13110 4E46                                     u12310 155A  
                                   u12070 2DDC                                     u14000 27F4  
                                   u12090 2E2E                    __end_of_USBDeviceTasks 1D36  
                                   u12067 2DA2                                     u12077 2DD2  
                                   u11710 6062                                     u12430 64CE  
                                   ?_xtoi 0083                                     u12360 5E34  
                                   u15000 49B6                                     u13320 186A  
                                   u12097 2E24                                     u11900 59DC  
                                   u13510 598C                                     u12390 6338  
                                   u13350 18A4                                     u11830 38AA  
                                   u15025 6C38                                     u15026 6C3C  
                                   u12730 68D0                                     u13370 18B4  
                                   u16010 2A3A                                     u11850 38EC  
                                   u11907 59D2                                     u12820 6530  
                                   u11837 38A0                                     u11870 6390  
                                   u15070 20C8                                     u12750 67B6  
                                   u14510 04C4                                     u16030 2A7C  
                                   u15151 1D50                                     u12920 2B4C  
                                   u15240 1EAC                                     u12840 653C  
                                   u16040 2A94                                     u15161 1D62  
                                   u16017 2A30                                     u11857 38E2  
                                   u12690 5408                                     u15090 20DC  
                                   u13650 5608                 ?_USBCtrlEPServiceComplete 0001  
                                   u15171 1D74                                     u10995 6896  
                                   u10996 6898                                     u13805 6C4E  
                                   u16037 2A72                                     u13806 6C50  
                                   u13590 5396                                     u14630 3DF4  
                                   u16400 3B6A                                     u12865 6C8E  
                                   u13825 0AFA                                     u16081 5920  
                                   u12866 6C90                                     u14650 3148  
                                   u16410 3A08                                     u14570 5B00  
                                   u13835 0B1A                                     u12980 5F04  
                                   u16340 346A                                     u13685 60B6  
                                   u13845 0BA4                                     u16350 3AC4  
                                   u13865 0C7E                                     u14577 5AF6  
                                   u14850 5098                                     u16450 3A46  
                                   u13970 2750                                     u13875 0C9E  
                                   u16611 528E                                     u13885 0D28  
                                   u16621 52A6                                     u15920 1D32  
                                   u14955 56A2                                     u16708 5598  
                                   u14965 6CA2                                     u16709 55C6  
                                   u14990 499C                                     u14966 6CA4  
                         __end_of___lwdiv 5E64                                     u16748 2F38  
                                   u16749 2F66                           __end_of___lwmod 6360  
               TurnOnModem@TurnOnMdmState 01F1                        ??_UpdateOsCounters 0019  
                                   i1l742 2458                                     i1l747 2594  
                                   i2l680 4054                                     i2l681 3FA4  
                                   i2l690 3FEE                                     i2l682 3FB2  
                                   i2l686 3FD4                                     i2l688 4046  
                                   i2l689 400E                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B7  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E3  
                                   _USTAT 000F64                   __end_of_LedStateMachine 4A82  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 4C62                             _StringCompare 5EB6  
                                   _sd000 FE5B                                     _sd001 FE14  
                                   _sd002 FDEE            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3ECE  
                             _ApnLenLocal 01EB                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_initFsm 4502  
                         __end_of_isalpha 67D0                           __end_of_isdigit 6A64  
               saveNumberInMemory@address 0098                                     atoi@a 0088  
                                   atoi@s 0083                    Eeprom_Write@DataLength 0091  
                             _ClearBuffer 6672                           __end_of_isspace 68DC  
             I2cSlv_QueryI2cData@RxBuffer 00A5                I2c_WriteData@I2cWriteState 0038  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 6A20                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 692A  
               __end_of_Rtcc_GetRtccValue 5080               I2cSlv_QueryI2cData@TxBuffer 00A2  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                         __end_of_CDCInitEP 578A  
                                   utoa@c 0092                             ??_SetBaudRate 009E  
                                   utoa@v 0090                                     status 000FD8  
                         _I2cSlv_MainTask 5CC0                 Rtcc_GetRtccValue@RetValue 007F  
                     i1___wmul@multiplier 0019                                     wtemp6 0043  
                         __end_of_sprintf 3E02                           __end_of_tolower 6BF8  
                     __end_of_Mcu_Int0Isr 6DC8                       __end_of_Mcu_Int1Isr 6DC4  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 6C10                      __end_of_Eeprom_Reset 5CC0  
                  __end_of_GetElapsedTime 41F4                     __end_of_UartSetConfig 5B62  
                    __end_of_Eeprom_Write 5EB6                          delCmdFsm@smsText 0107  
                  __size_of_initGprsModem 0094                            ?_isNumberValid 007D  
             Rtcc_SetRtccValue@RtccPtrVal 0088                  Eeprom_Read@MemoryAddress 00AC  
                   __end_of_Term_MainTask 6BAC                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2D34                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 6888  
                          _InitSchedTimer 6800                           __initialization 22E4  
             __size_of_saveNumberInMemory 001A                          __end_of_MdmCntSm 49DA  
                    __end_of_I2c_ReadData 22E4                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 4380                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 2596                              __end_of_atoi 39DE  
                            __end_of_main 6D44                       StringCompare@Result 0085  
                            __end_of_itoa 631C                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 02EE                              __end_of_utoa 4932  
                            __end_of_xtoi 374A                  __end_of_Rtcm_SetRtccDate 5D68  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 6D84              __size_of_I2cSlv_QueryI2cData 00D2  
                    Term_MainSm@TermDelay 03D1                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE49                 __size_of_USBCtrlEPService 0094  
                          ?_triggerCmdFsm 0105                                    ??_atoi 0085  
                                  ??_main 00B0              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 4E2C  
                           ?_initPreamble 007D                                _ReceiveEvt 682E  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                      _Mdm_RequestSmsData 6CEA                            ?_StringCompare 007D  
                        __end_of_Terminal 05F2                      initFsm@isInitialized 0105  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 5458                              _cdc_mem_type 01DC  
                      ??_Mcu_ConfigExtInt 007D                          addCmdFsm@smsText 0107  
                       CheckModem@Timeout 03F2                           ReceiveEvt@Event 007D  
                             ?_CheckModem 0001                          _CDCDataOutHandle 00BC  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 4064  
              _Uart_MdmGsmGprsReadService 3F9A                __end_of_UsbDevice_MainTask 694E  
                         getsUSBUSART@len 0086                      __end_of_getSetupCall 6AC6  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 6AE6  
                   addCmdFsm@searchNumber 010E                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
                             _Eeprom_Read 5D68        Irq_InitIntController@IntPriorityEn 007F  
                   __size_of_CDCTxService 0146                                    i1l1412 6600  
                             _GenerateEvt 6C10                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
                   triggerRelay@isRelayOn 0086                 Uart_Uart1RxIsr@UartRxData 002C  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC30  
                          _cmdVisualEffet 61C2                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                        ?_GetCallerNumber 0083                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                               _ConnTimeout 02F3  
                    Mdm_IsSmsReceived@Ret 0081                  __end_of_Rtcc_AlarmConfig 57F6  
                         ??_Mcu_SetWdgSts 007D                    __end_of_InitSchedTimer 682E  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0081  
                          _EnableReceiver 6DB8                                _UartConfig 0324  
                    __end_of_Mdm_MainTask 5FA8                         ??_Uart_Uart1RxIsr 0007  
                       _shortPacketStatus 00CD                             ??_Term_MainSm 00A7  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                __end_of_MdmHttp_MainTask 6250                                    _SmsLen 00D3  
                         USBDeviceTasks@i 0098               USBStdFeatureReqHandler@pUEP 0092  
                USBTransferOnePacket@data 007E                USBCtrlTrfInHandler@lastDTS 007E  
                           ??_RtccIrqInit 007D                  ??_OsAlrm_ProcessOsAlarms 0060  
                         ??_USBDeviceInit 0085                       __end_of_SetBaudRate 60E2  
                                  ___lmul 5B62                      _I2cSlv_ReceiveI2cMsg 63A4  
                      TurnOnModem@Counter 0322                              ?_putUSBUSART 0083  
                                  ___wmul 68DC                                 ??___awdiv 0081  
          GetElapsedTime@CurrentTimestamp 0091                            __CFG_STVREN$ON 000000  
                        _Mdm_SetSmsFormat 5FA8                                 ??___awmod 0081  
                      __size_of_SendSmsSm 01B8                         ?_Rtcm_GetRtccDate 0081  
                     _Led_SetLedBlinkTime 5DBC                                 ??___lldiv 0091  
                    __end_of_getsUSBUSART 4EC2                      ??_Mdm_RequestSmsData 0080  
                               ??___lwdiv 0087                    Tmr_TmrBPrSet@IntFreqHz 0096  
                               ??___lwmod 0081                 isMasterNumber@phoneNumber 0100  
                       _USBEnableEndpoint 6294           __size_of_USBStdGetStatusHandler 00B2  
                        ?_detectUsbNumber 0099                             ??_Rtcc_RtcIsr 0001  
                            ReadByte@Byte 007D                       addCmdFsm@isComplete 010B  
                                  _memcpy 617A                    __size_of_HttpGetMethod 04D0  
                                  _memset 6770                                    clear_0 23A2  
                                  clear_1 23B4                                    clear_2 23C0  
                                  clear_3 23CC                                    clear_4 23D8  
                                  clear_5 23E4                                    clear_6 23F0  
                                  clear_7 23FC                         parseCommand@F9031 FC2A  
                                  clear_8 2408                                    clear_9 2414  
                       parseCommand@F9033 FC26                         parseCommand@F9035 FC22  
                        ___awdiv@quotient 0083                        ??_Rtcm_GetRtccDate 0089  
                         ___awmod@divisor 007F                        _ExtInt0IsrCallback 02DF  
                       ?_OsTmr_StartTimer 0081                                _PostMethod 01E8  
                         ___awmod@counter 0081                       UartWriteByte@Module 007E  
                     GetSmsSm@GetSmsState 01EE                        ?_USBEnableEndpoint 0085  
            __size_of_triggerVisualEffect 000C                            ??_initPreamble 007F  
                                  _strcat 5AAE                                    _strcpy 670E  
                                  _strlen 6424                                    _strtol 1822  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 6556                  HttpGetMethod@UartMessage 0100  
                               ??_initFsm 00B0                             _initGprsModem 5080  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9111 03CD  
                     ModemEvtParser@F9113 03C8                       ModemEvtParser@F9115 03C3  
                     ModemEvtParser@F9117 04F6                              _CDCTxService 2984  
                     MdmCntSm@MdmCntState 002E                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC0E  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 04CA                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 6DB0  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 01FD  
                 __end_of_I2cSlv_MainTask 5D14                           _InitGprsNetwork 0DCE  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 6DC4  
                             _Mcu_Int1Isr 6DC0                      ?_Led_SetLedBlinkTime 007D  
                      __size_of_addCmdFsm 00EE                                 ??_sprintf 0083  
                               ??_tolower 007D                         parseCommand@state 0094  
                  __size_of_ScheduleTasks 0126                   delCmdFsm@receivedNumber 0105  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 00A7                    __end_of_cmdVisualEffet 620A  
                    _controlTransferState 00CC                     __end_ofi1_GenerateEvt 6C6A  
                 Eeprom_Read@SlaveAddress 00AD                     __end_of_Rtcm_MainTask 52C2  
              __size_of_Rtcc_GetRtccValue 0094                             ?_parseCommand 0001  
                      _ExtInt1IsrCallback 02DD                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 2432  
                      Eeprom_Read@ReadSts 00AE                    Tmr_TmrBPrSet@Prescaler 0098  
                            __pbssBIGRAMl 0AC8                           ??_isNumberValid 007F  
                  __end_of_EnableReceiver 6DBC                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0182               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                             _ReadAddress 01FA                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 6094  
                        ??_isMasterNumber 00B0           I2cSlv_QueryI2cData@TimeoutTimer 0353  
                    Terminal@FormatOption 02E8                           __CFG_IOL1WAY$ON 000000  
                              _StringCopy 5990                            __pcstackBANK10 0A00  
                      __size_of_delCmdFsm 00D8                     I2cDummyTx@DummyBuffer 01FB  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
                     initFsm@currentState 01D5  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02D9                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 62D8  
                             _InitNetwork 00D8                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE5F  
                           __end_of_sd001 FE32                             __end_of_sd002 FE14  
                            __pidataBANK0 6DC8                              __pidataBANK1 6DCB  
                            __pidataBANK2 6D1A                              __pidataBANK3 64DE  
                            __pidataBANK4 6D5C                              __pidataBANK5 5F08  
               __end_ofparseCommand@F9031 FC2E                 __end_ofparseCommand@F9033 FC2A  
               __end_ofparseCommand@F9035 FC26                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 6360  
                     __size_of_CheckModem 0160                           ??_triggerCmdFsm 00B0  
              __end_of_Uart_ClearRxBuffer 66DC             __size_of_USBConfigureEndpoint 0098  
             parseCommand@deleteNumberCmd 008C                   addCmdFsm@numberInMemory 010D  
                __size_of_InitializeTasks 0074                        __end_of_I2cDummyTx 6B78  
             __end_of_USBCtrlTrfInHandler 4442                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 007D                      StringCompare@String2 007F  
                      ??_UartSetConfigLow 007D                 __size_of_isNumberInMemory 00BA  
                     __end_of_Term_MainSm 1360                 initGprsModem@currentState 01D7  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 6C54  
                      __size_of_detectCmd 009C                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 0083             I2cSlv_QueryI2cData@I2cOpState 01E2  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 6740                                _cdc_notice 0440  
                   __end_of_Tmr_TmrBPrSet 33A8                     __end_of_waitSetupCall 6046  
                     __end_of_Rtcc_RtcIsr 6DC0                                _cdc_rx_len 00C9  
                       __end_of_MsgFormat FD22                                _cdc_tx_len 00C7  
                     Terminal@UsbRxBuffer 0A00                               ?_OsTmr_Wait 009B  
                   ??_Led_SetLedBlinkTime 0081                       Terminal@UsbTxBuffer 0200  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 6606  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01DD  
                 resCmdFsm@receivedNumber 0103                            ClearBuffer@Len 007F  
                         _secondsAppTimer 4A82          __end_of_GetLastInteractionNumber 6D5C  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 6888  
                  _USBStdGetStatusHandler 467A                         __end_of_SendSmsSm 1BB0  
                   __size_of_Eeprom_Reset 0056       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01EA                            _Rtcc_RtcConfig 4B24  
                   __size_of_Eeprom_Write 0052                                __pbssBANK0 00B0  
                              __pbssBANK1 01C9                            ??_parseCommand 0088  
                              __pbssBANK2 02C9                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                         ?_cmdVisualEffet 0001                             _HttpGetMethod 05F2  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 0572  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 6C80  
             isNumberInMemory@phoneNumber 0100                  __end_of_Uart_WriteString 64DE  
                 addCmdFsm@masterOpResult 010C              getSetupCall@isCalledReceived 0083  
                               ?_ReadByte 0001                         MyApp_Task@Options 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                   __size_of_I2c_ReadData 015E                     __size_of_I2cSendMsgSm 00C4  
                     __end_of_Tmr_Tmr2Isr 69BA                               _SetBaudRate 6094  
                           ?_savePreamble 0001                     __end_of_findEmptySpot 4F58  
               initGprsModem@modemCounter 03BF               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01EC                               _pBDTEntryIn 00B6  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 32BA  
                               ?_TmrBInit 007D                        __size_of_resCmdFsm 007E  
                           _CheckTxStatus 6D84                             ??_TurnOnModem 0080  
               addCmdFsm@isCmdSuccessfull 0109                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                 findEmptySpot@currentState 00C4  
                               ?_Terminal 0001                      Eeprom_Write@WriteSts 0092  
                                 ?___lmul 007D                              _Led_MainTask 3E02  
                          _Rtcc_UnlockRtc 6CCA                              _I2cBusStatus 01E4  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2E62                 Uart_InitUartModule@Module 00A1  
                   __end_of_I2c_WriteData 2026                         __end_of_addCmdFsm 3496  
               resCmdFsm@isCmdSuccessfull 0105                        ??_GetOsTickCounter 0081  
                                 ?_memcpy 007D                                   ?_memset 007D  
                          ___lmul@product 0085                                _device_dsc FE49  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 4F58  
                   __end_of_UpdateSchFlag 6B5C                              _EepromBuffer 04BB  
                              _ep_data_in 02D2                           _I2cWriteDataEvt 00D7  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10BC                                   ?_strcpy 007D  
                                 ?_strlen 007D                       _IsUsbNumberReceived 02ED  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 30AC                         __end_of_WriteByte 6D7A  
                      _USBCheckStdRequest 374A                         _configDescriptor1 FDAB  
                            _Eeprom_Reset 5C6A                       Wdg_MainTask@Options 0001  
                             _PhoneNumber 0498                              _Eeprom_Write 5E64  
                   __size_of_getSetupCall 0020               __end_of_USBCtrlTrfTxService 3906  
                     _USBStdSetCfgHandler 357E                         __end_of_delCmdFsm 3B8E  
                 __size_of_ConfigureModem 00D4                    I2cSlv_QueryI2cData@Ret 01E1  
               Eeprom_Write@MemoryAddress 0093                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 685C                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 4BC4  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 008F  
                                 _SSP2BUF 000F75                              _I2c_ReadData 2186  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 42BC                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DB            __end_of_Pm_DsReleasePinControl 6DA6  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                          _blinkInSeconds 03FD                       __size_of_MyApp_Task 0154  
                                 _UIEbits 000F36                            ?_HttpGetMethod 009B  
                            ?_ClearBuffer 007D                      _MdmOnOffPulseRequest 00DF  
                                 _UIRbits 000F62                     CheckModem@CheckMdmSts 01F2  
               __size_of_UpdateOsCounters 0010                                   _Led1Sts 01F9  
                     _I2cSlv_QueryI2cData 3C62                                   _Led2Sts 01F7  
                                 _Led3Sts 01F5                __end_of_Sch_SchmIntService 6D38  
                   __size_of_Mdm_MainTask 0050             ModemEvtParser@CallReadyString 008F  
                           _cdc_trf_state 00C8                                ??_ReadByte 007D  
                     resCmdFsm@isComplete 0107                            ??_savePreamble 0096  
                     _Uart_InitUartModule 0AC2                     __end_of_Mdm_DrvMainFn 6DAC  
                    __end_of_initPreamble 6B40                    initEeprom@currentState 01D6  
                       __end_of_detectCmd 4CFE                          _ComChecCompleted 002B  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C9                     __end_of_Mdm_IsRinging 6996  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CC  
                   __size_of_getsUSBUSART 0096                               ?_StringCopy 0085  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 0039  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 571E                    __end_of_Rtcc_UnlockRtc 6CDA  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 6C94                                _initEeprom 5114  
                             _Term_MainSm 10BC   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD22                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 6B04                    ?_Uart_WriteConstString 0080  
                              _readBuffer 0339                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 6C3E  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 534E  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 55CC  
                                 ___lldiv 53D4                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                   triggerCmdFsm@isComplete 0107  
                                 ___lwdiv 5E10                         ??_USBStallHandler 007D  
                                 ___lwmod 631C                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                            _getSetupCall 6AA6                      ?_I2cSlv_QueryI2cData 00A2  
                         ??_initGprsModem 0099                               _Rtcc_RtcIsr 6DBC  
                    __size_of_putUSBUSART 0022                                   __pcinit 22E4  
                      getsUSBUSART@buffer 0084                           __size_of_memcpy 0048  
                               _I2cComSts 00CF                       __end_of_TurnOnModem 617A  
                         __size_of_memset 0030                   initEeprom@isInitialized 0102  
                               _I2cConfig 035E                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FDEE                                   __ramtop 0F00  
              Mdm_GetSmsData@GetSmsStatus 0091                               Terminal@Len 03B3  
                      ??_Rtcm_SetRtccDate 0091                     Tmr_TmrBIrqSet@TmrNumb 007F  
                    ?_Uart_InitUartModule 009D                                   __ptext0 6D38  
                                 __ptext1 6740                                   __ptext2 6D66  
                                 __ptext3 6DA0                                   __ptext4 6AE6  
                                 __ptext5 6B78                                   __ptext6 6888  
                                 __ptext7 6800                                   __ptext8 4064  
                                 __ptext9 32BA                                   _inPipes 00B0  
                   __size_of_Mcu_ClearWdg 0004                 GsmGprsTerminal@UartBuffer 0900  
             _USBDeferOUTDataStagePackets 0025                           __size_of_strcat 005C  
                 __end_of_secondsAppTimer 4B24                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                      InitGprsNetwork@Apn 009B                                   _initFsm 4442  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 67A0                                   _isdigit 6A42  
          isNumberInMemory@memoryOpResult 0104                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00B0                               ?_SystemInit 0001  
                                 clear_10 2420                                   clear_11 242C  
                        ___awmod@dividend 007D                         ??_InitializeTasks 05F4  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 02E5  
     __end_of_Tmr_RegisterTmr2IsrCallback 6D70               _Tmr_RegisterTmr2IsrCallback 6D66  
                                 _isspace 68B2                              _Mdm_MainTask 5F58  
                       __end_of_resCmdFsm 5558                                   _isupper 69FE  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                                   _smsText 0484  
                  Term_MainSm@FwkBuildStr 013A                           ?_Rtcc_RtcConfig 007E  
                  _OsAlrm_ProcessOsAlarms 2440                              ??_CheckModem 009B  
                      __end_of_USB_CD_Ptr FC30                       Mcu_SetWdgSts@WdgSts 007D  
                             _Tmr_Tmr2Isr 6996                                   _sprintf 3D34  
                                 _tolower 6BE0           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 6D0A                          _HttpGetDataLocal 03A6  
                __end_of_Mdm_SetSmsFormat 5FF8                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 47DC                                   _toupper 6BF8  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 2432                              _getsUSBUSART 4E2C  
                            ?_Eeprom_Read 00A9                          ??_GetElapsedTime 0085  
                             _SmsTxtReady 00D9               ?_Uart_MdmGsmGprsReadService 0004  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F2             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC22       Irq_InitIntController@PerInt_LowPInt 007E  
               triggerCmdFsm@currentState 01D3                                   memcpy@d 0084  
                                 memcpy@n 0081                                   memcpy@s 0086  
                     _pBDTEntryEP0OutNext 00BE                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC0E  
                          _ModemEvtParser 1D36                       _triggerVisualEffect 6D44  
                                 int_func 47DC                           _USB1msTickCount 0310  
         _dummy_encapsulated_cmd_response 037A                  _GetLastInteractionNumber 6D50  
                               i1u1652_20 2456                                 i1u1656_28 2576  
                               i1u1656_29 258A                                 i1u1678_28 69A6  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
              __end_of_saveNumberInMemory 6BE0                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 6B22                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 15F4  
                       _Rtcc_SetRtcStatus 6C28                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 670E                             StringCopy@Len 0089  
                       ?_MdmHttp_MainTask 0001                  I2cSlv_QueryI2cData@RxLen 00A7  
                 _USBCtrlEPAllowDataStage 4BC4                        _UsbDevice_MainTask 692A  
                I2cSlv_QueryI2cData@TxLen 00A4                              _Mcu_ClearWdg 6DAC  
               Eeprom_Reset@memoryAddress 00C6                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                   ??_I2cSlv_QueryI2cData 00A9                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 31BC  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01E5  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 2186  
                         _RtccIsrCallback 02E1          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F1             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                          _isNumberInMemory 45C0  
                    __end_of_parseCommand 31BC                _USBStatusStageEnabledFlag1 0028  
              _USBStatusStageEnabledFlag2 0027                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 69DC                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0300  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                    ?_triggerVisualEffect 0001                       ?_UsbDevice_MainTask 0001  
                                 xtoi@val 0088                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                       ??_Rtcc_SetRtccValue 0086  
                     ??_Rtcc_SetRtcStatus 007D                          __CFG_DSBOREN$OFF 000000  
                        ?_InitGprsNetwork 009B                         _Mdm_HangPhoneCall 6CA6  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 6A86  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 0087  
                        __CFG_CPUDIV$OSC1 000000                        ?_Mdm_HangPhoneCall 0001  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 02E3  
                        _HttpGetMethodSts 01E9                                 _TRISBbits 000F93  
                    SendSmsSm@UartMessage 0100                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0062                  isNumberValid@phoneNumber 007D  
                      _BothEP0OutUOWNsSet 01DE                           ??_HttpGetMethod 009D  
                 __size_of_Mdm_GetSmsData 0068                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0037                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 1EB8  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D5                     __end_of_StopCondition 6DB4  
                __size_of_HighPriorityIsr 4880                       ??_Mdm_HangPhoneCall 0083  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 0371  
                               _Led2Blink 0368                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 04ED              __end_of_USBTransferOnePacket 45C0  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0395  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 1822                 __end_of_Rtcc_SetRtcStatus 6C3E  
                               _Led2Pulse 038F                                 _Led3Pulse 0389  
                       _I2cSlv_SendI2cMsg 6462           SetBaudRate@DesiredI2cBusClockHz 0096  
                     Eeprom_Read@QuerySts 00AF                           ??_ScheduleTasks 05F4  
                          _Tmr_TmrBConfig 4064                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 6CA6                         _OsAlrm_SetOsAlarm 41F4  
                    Terminal@TermRxBuffer 0540                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 60E2  
                             ?_initEeprom 0001                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 612E                                 _ClipEvent 00DC  
                            ??_MyApp_Task 00B0                      Terminal@TermTxBuffer 0100  
           saveNumberInMemory@phoneNumber 0096                                 _GetMethod 01FC  
                  _USBCtrlTrfSetupHandler 52C2                        ?_OsAlrm_SetOsAlarm 0083  
                Eeprom_Reset@SlaveAddress 0085                  __size_of_GetCallerNumber 0036  
                   __end_of_USBDeviceInit 283C     __end_of_USBIncrement1msInternalTimers 69FE  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 69DC  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 5BBA  
                          _CheckAckStatus 6D8E                            __end_of___wmul 6904  
                     ??_I2cSlv_SendI2cMsg 0084                 __end_of_Mdm_HangPhoneCall 6CB8  
                   ??_triggerVisualEffect 007D               triggerCmdFsm@numberInMemory 0108  
                  __size_of_UartWriteByte 0020                 triggerCmdFsm@searchNumber 010A  
                 addCmdFsm@receivedNumber 0105                             _secondCounter 0318  
                          __end_of_memcpy 61C2                        Terminal@PackageLen 02EA  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 67A0  
                      _UartTxBufferStatus 6046                       ??_OsAlrm_SetOsAlarm 008B  
                    __end_of_savePreamble 6BC6                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01DF  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 6D1A  
                               _MdmStatus 00D1                            __end_of_strcat 5B0A  
                          __end_of_strcpy 6740                            __end_of_strlen 6462  
                          __end_of_strtol 19F8                       start_initialization 22E4  
         isNumberInMemory@currentPosition 00E1                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 3B8E  
                        ??_cmdVisualEffet 0093                  __size_of_detectUsbNumber 003C  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 66A8  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 4D96                     __size_of_initPreamble 001E  
         __end_of_USBStdFeatureReqHandler 15F4                                 _MsgFormat FC32  
                      __end_of_MyApp_Task 26EA                          _UpdateOsCounters 6CFA  
                         ?_ModemEvtParser 0001                             ?_triggerRelay 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3F9A                 __end_of_I2cSlv_SendI2cMsg 64A0  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4FEC                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
             triggerCmdFsm@masterOpResult 0109                      __size_of_ClearBuffer 0036  
                    __end_of_Rtcc_LockRtc 6CEA                       ?_Uart_ClearRxBuffer 0001  
                            ?_SetBaudRate 0096                    __end_of_Tmr_TmrBConfig 412C  
                               _SendSmsSm 19F8                 __end_of_OsAlrm_SetOsAlarm 42BC  
                  __end_of_Tmr_TmrBIrqSet 612E                                 _TaskTable 05A4  
                               _RingEvent 00DD                 ??_USBCtrlEPAllowDataStage 007E  
                      ??_Uart_WriteString 0082                               _SystemState 00D4  
                   __end_of_isNumberValid 5990              isMasterNumber@memoryOpResult 0102  
                       __size_of_ReadByte 000A                                 _RtcConfig 03BB  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 009D  
                             ??_CDCInitEP 0089                            USBDeviceInit@i 0085  
                           _UartSetConfig 5B0A                    Led_SetLedBlinkTime@Led 0081  
                      __end_of_ReceiveEvt 685C                    _pBDTEntryEP0OutCurrent 00C0  
                           _Term_MainTask 6B92                   USBTransferOnePacket@dir 007D  
                    ??_UartTxBufferStatus 007D                   USBTransferOnePacket@len 0080  
                   Tmr_TmrBConfig@TmrNumb 00A3                   __size_of_LowPriorityIsr 00B4  
                  __end_of_CheckAckStatus 6D98                                  ??___lmul 0085  
                           _isxdigit$6782 0081                                 Terminal@i 00A4  
                                ??___wmul 0081                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 007D                       _USBStdGetDscHandler 2D34  
              I2cSlv_SendI2cMsg@SlaveAddr 0082                        __end_of_OsTmr_Wait 54DA  
                      HttpGetMethod@Index 01C8                               __pdataBANK0 00E0  
                             __pdataBANK1 01FE                               __pdataBANK2 02F1  
                             __pdataBANK3 03C3                               __pdataBANK4 04F6  
                             __pdataBANK5 05A4                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 0522                                  ??_memcpy 0083  
                                ??_memset 0083                     detectCmd@currentState 0095  
                   __end_of_triggerCmdFsm 3AB6                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 007D                      ??_Uart_ClearRxBuffer 007D  
     __size_of_Uart_MdmGsmGprsReadService 00CA                                  ??_strcat 0081  
                                ??_strcpy 0081                                  ??_strlen 007F  
                  __size_of_Rtcm_MainTask 008E                                 _addCmdFsm 33A8  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 5E10  
                  __end_of_ConfigureModem 3C62                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00D6            __end_of_USBStdGetStatusHandler 472C  
                            _initPreamble 6B22                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC32                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 5F08  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00C2                             __pcstackBANK5 05F4  
                         RiSm@MdmDrvState 002F                              _SetAckStatus 6C80  
                            _isalpha$6772 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 6D70                       __size_of_initEeprom 0090  
                    ?_USBStdGetDscHandler 0001                              _isdigit$6506 007E  
           UpdateSchFlag@InterruptCounter 02D7                            ??_triggerRelay 0085  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 63E4  
                               _delCmdFsm 3AB6       InitGprsNetwork@GprsNetInitNextState 002A  
                 GetElapsedTime@StartTime 0081                             _UartWriteByte 6AC6  
                             _ALRMRPTbits 000F90                MyApp_Task@isCmdSuccessfull 00E2  
              __end_of_USBWakeFromSuspend 65CC              __end_of_LedBlinkStateMachine 2984  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 6250                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 0306                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 6B78  
              __end_of_USBCheckCDCRequest 47DC              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 5C12                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 6AA6                              ??_StringCopy 008B  
                        _Led_SetLedStatus 67D0                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 6A64  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_parseCommand 0110                    __size_of_waitSetupCall 004E  
                               _detectCmd 4C62                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008               findEmptySpot@memoryOpResult 0102  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC0E  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 5080  
                               __ptext101 5FA8                                 __ptext110 57F6  
                               __ptext102 5114                                 __ptext111 6D50  
                               __ptext103 6556                                 __ptext200 0000  
                               __ptext120 56B0                                 __ptext112 663C  
                               __ptext104 4C62                                 __ptext121 4EC2  
                               __ptext113 3AB6                                 __ptext105 30AC  
                               __ptext130 5B0A                                 __ptext122 592A  
                               __ptext114 61C2                                 __ptext106 6CEA  
                           Terminal@Index 00A6                                 __ptext131 612E  
                               __ptext123 5D68                                 __ptext115 4A82  
                               __ptext107 694E                                 __ptext140 2ACA  
                               __ptext132 19F8                                 __ptext124 3C62  
                               __ptext116 33A8                                 __ptext108 6972  
                               __ptext141 5B62                                 __ptext133 63E4  
                               __ptext125 5458                                 __ptext117 6BC6  
                               __ptext109 6CA6                                 __ptext150 6AC6  
                               __ptext142 5BBA                                 __ptext134 1D36  
                               __ptext126 6462                                 __ptext118 5E64  
                               __ptext151 6046                                 __ptext143 2026  
                               __ptext135 66A8                                 __ptext127 63A4  
                               __ptext119 45C0                                 __ptext160 67D0  
                               __ptext152 5990                                 __ptext144 4932  
                               __ptext136 5EB6                                 __ptext128 6A64  
                               __ptext161 283C                                 __ptext153 5A50  
                               __ptext145 6D98                                 __ptext137 2C02  
                               __ptext129 5DBC                                 __ptext170 682E  
                               __ptext162 5E10                                 __ptext154 51A4  
                               __ptext146 0DCE                                 __ptext138 3B8E  
                               __ptext171 1EB8                                 __ptext163 41F4  
                               __ptext155 412C                                 __ptext147 05F2  
                               __ptext139 0AC2                                 __ptext180 6D84  
                               __ptext172 2186                                 __ptext164 68DC  
                               __ptext156 6CB8                                 __ptext148 64A0  
                               __ptext181 6D8E                                 __ptext173 6D70  
                               __ptext165 563E                                 __ptext157 6672  
                               __ptext149 6360                                 __ptext190 6B5C  
                               __ptext174 6DB0                                 __ptext166 6094  
                               __ptext158 49DA                                 __ptext191 65CC  
                               __ptext183 6996                                 __ptext175 6DB4  
                               __ptext167 53D4                                 __ptext159 3496  
                               __ptext192 6C54                                 __ptext184 6D2A  
                               __ptext176 6C80                                 __ptext168 685C  
                               __ptext185 6B40                                 __ptext177 6D7A  
                               __ptext169 42BC                                 __ptext194 6D0A  
                               __ptext186 6CFA                                 __ptext178 6C10  
                               __ptext195 3F9A                                 __ptext187 2440  
                               __ptext179 6DB8                                  ?___awmod 007D  
                      _Sch_SchmIntService 6D2A                                 __ptext196 6C6A  
                               __ptext188 6904                                 __ptext197 6DBC  
                               __ptext189 5C12                                 __ptext198 6DC0  
                               __ptext199 6DC4                           _InitializeTasks 5558  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                __size_of_Mdm_HangPhoneCall 0012  
                 isNumberValid@isNumberOk 0080                   __size_of_isMasterNumber 006E  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 04E2  
                              ?_addCmdFsm 0105                   Eeprom_Write@WriteBuffer 008F  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 039B                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 4502  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
      Uart_MdmGsmGprsReadService@UartData 0004                                  ?_initFsm 0103  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                       ??_GetCallerNumber 0085                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 03A1            InitializeTasks@ActiveTaskIndex 02C8  
                  __size_of_findEmptySpot 0096                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                            _Mdm_GetSmsData 57F6  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02E7                ??_GetLastInteractionNumber 007F  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 58C4                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 58C4  
              ConfigureModem@DelayCounter 031E                        __end_of_StringCopy 59F2  
                             _ep_data_out 02CF                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00DE  
                         Terminal@SwTimer 04D7                  initEeprom@memoryOpResult 0101  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054                            _setupCallTicks 03C1  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                ?_delCmdFsm 0105  
                       ?_Mdm_SetSmsFormat 0001                                 _resCmdFsm 54DA  
                          ?_UartWriteByte 007D                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 0320                          _OsTmr_StartTimer 5A50  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
                       ??_detectUsbNumber 009B                  __end_of_isNumberInMemory 467A  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 6C54                __end_of_Mcu_StartSystemPll 6B04  
                            _parseCommand 30AC                              _PhoneNumbLen 00D2  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 69BA  
                           _Rtcm_MainTask 5234                            ___wmul@product 0081  
                ModemEvtParser@ClipString 0099                          SendSmsSm@SwTimer 03E7  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 01F0  
         HttpGetMethod@GetMethodNextState 00D0                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 563E                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 6770                                  _RCONbits 000FD0  
                              ?_detectCmd 0001                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001                     __size_of_savePreamble 001A  
            __end_of_OsTmr_GetTimerStatus 5234                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                  ModemEvtParser@CompareIdx 00A8  
                    _USBConfigureEndpoint 4CFE                     delCmdFsm@currentState 01D8  
                    _UsbMasterPhoneNumber 04AC          __size_of_USBStdFeatureReqHandler 0294  
                      _saveNumberInMemory 6BC6                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 2596                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 6904                     __end_of_initGprsModem 5114  
                     ??_I2c_InitI2cModule 00A4                            delCmdFsm@F9014 FC0F  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 6DA0  
                  __end_of_Mdm_GetSmsData 585E                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                   resCmdFsm@currentState 01D4                              _RemoteWakeup 01E0  
                                _ApnLocal 031C                            _StartCondition 6DB4  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01E6                             _Tmr_TmrBPrSet 32BA  
                           _waitSetupCall 5FF8                       ?_saveNumberInMemory 0096  
                       _NewStringReceived 003C                              _isspace$6775 007E  
                        _UartSetConfigLow 5BBA                                  _GetSmsSm 2C02  
                 __end_of_USBStallHandler 6294                      Mdm_DrvMainFn@Options 0001  
                          _memoryPreamble 03AB                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03DC                                  _MdmCntSm 4932  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 22F8                                 copy_data1 2318  
                               copy_data2 2338                                 copy_data3 2370  
            __end_of_LedPulseStateMachine 357E                                ?_resCmdFsm 0103  
                  I2cSlv_SendI2cMsg@TxSts 0084               ??_USBCtrlEPAllowStatusStage 007D  
             __end_of_USBStdSetCfgHandler 3664                            ?i1_GenerateEvt 0019  
                Tmr_TmrBConfig@TmrBConfig 00A0                                  _OsAlarms 0600  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0081  
            LedBlinkStateMachine@LedBlink 008A                                  _ReadByte 6D7A  
                           i2_GenerateEvt 6C6A                           ??_UartSetConfig 007D  
                             ??_SendSmsSm 009B                     cmdVisualEffet@seconds 0094  
                      __end_of_device_dsc FE5B                 __end_of_I2c_InitI2cModule 56B0  
                                _MsgReady FE32                           ??_Term_MainTask 00A7  
                            _savePreamble 6BAC                   __end_of_InitializeTasks 55CC  
              initGprsModem@isInitialized 0099                   ?_USBCtrlTrfSetupHandler 0001  
                          isNumberValid@i 0081                             _findEmptySpot 4EC2  
             __end_of_I2cSlv_QueryI2cData 3D34                                _ANCON1bits 000F49  
                                _RxBuffer 0C58                   USBStdGetStatusHandler@p 007E  
                                __Hrparam 0000                                  _TmrBInit 4D96  
                    __size_of_SetBaudRate 004E                              ??_initEeprom 00B0  
                    ??_saveNumberInMemory 0098                              ?_TurnOnModem 0001  
                          _LowPriorityIsr 0018                                 memcpy@tmp 0083  
                    Tmr_TmrBPrSet@Divisor 009C                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0081                   initFsm@isCmdSuccessfull 0103  
             __end_of_Uart_InitUartModule 0DCE                                  _SmsEvent 00DB  
                         _SetUartBaudRate 2ACA              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1EB8                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 6D0A  
                    __end_of_triggerRelay 663C                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02E9                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                  __end_ofdelCmdFsm@F9014 FC1C                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02EB  
                             ??_addCmdFsm 00B0                             _UpdateSchFlag 6B40  
                     __end_of_putUSBUSART 6A42                               _line_coding 0382  
                            _Rtcc_LockRtc 6CDA              I2cSlv_QueryI2cData@SlaveAddr 00A8  
                    _LedBlinkStateMachine 283C               triggerCmdFsm@receivedNumber 0105  
                  __end_of_StartCondition 6DB8                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01ED  
               Rtcm_GetRtccDate@LocalDate 008A                  parseCommand@addNumberCmd 0088  
                         ?_Mdm_GetSmsData 008F                  I2c_WriteData@WriteStatus 0035  
                            _isupper$6778 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0033                            ?_Tmr_TmrBPrSet 0096  
                        __size_of_initFsm 00C0                            ?_waitSetupCall 0001  
                        ??_ModemEvtParser 008F                          _GetOsTickCounter 6CB8  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0186                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03AF                  ModemEvtParser@RingString 00A3  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                                  __ptext10 60E2  
                                __ptext11 6A86                                  __ptext20 692A  
                                __ptext12 4D96                                  __ptext21 620A  
                                __ptext13 6B04                           ??_UartWriteByte 007E  
                                __ptext30 66DC                                  __ptext22 5F58  
                                __ptext14 2E62                                  __ptext31 6250  
                                __ptext23 5CC0                                  __ptext15 5558  
                                __ptext40 357E                                  __ptext32 69DC  
                                __ptext24 6DA6                                  __ptext16 2596  
                                __ptext41 467A                                  __ptext33 26EA  
                                __ptext25 69BA                                  __ptext17 6B92  
                                __ptext50 2F88                                  __ptext42 2D34  
                                __ptext34 4F58                                  __ptext26 6C94  
                                __ptext18 5234                                  __ptext51 3ECE  
                                __ptext43 1360                                  __ptext35 617A  
                                __ptext27 6DAC                                  __ptext19 3E02  
                                __ptext60 00D0                                  __ptext52 4380  
                                __ptext44 59F2                                  __ptext36 52C2  
                                __ptext28 1BB0                                  __ptext61 3664  
                                __ptext53 382E                                  __ptext45 472C  
                                __ptext37 31BC                                  __ptext29 6592  
                                __ptext70 6A20                                  __ptext62 6BE0  
                                __ptext54 2984                                  __ptext46 571E  
                                __ptext38 4BC4                                  __ptext71 62D8  
                                __ptext63 651A                                  __ptext55 10BC  
                                __ptext47 6294                                  __ptext39 374A  
                                __ptext80 15F4                                  __ptext72 4888  
                                __ptext64 1822                                  __ptext56 6424  
                                __ptext48 4CFE                                  __ptext81 55CC  
                                __ptext73 631C                                  __ptext65 6BF8  
                                __ptext57 5AAE                                  __ptext49 585E  
                                __ptext90 6D44                                  __ptext82 534E  
                                __ptext74 4E2C                                  __ptext66 68B2  
                                __ptext58 3D34                                  __ptext91 39DE  
                                __ptext83 6CDA                                  __ptext75 4502  
                                __ptext67 67A0                                  __ptext59 6770  
                                __ptext92 6606                                  __ptext84 58C4  
                                __ptext76 3906                                  __ptext68 69FE  
                                __ptext93 54DA                                  __ptext85 4FEC  
                                __ptext77 6A42                                  __ptext69 670E  
                                __ptext94 5C6A                                  __ptext86 6C28  
                                __ptext78 5D14                                  __ptext95 4442  
                                __ptext87 4B24                                  __ptext79 6CCA  
                                __ptext96 5FF8                                  __ptext88 6C3E  
                                __ptext97 6AA6                                  __ptext89 578A  
                                __ptext98 6BAC                                  __ptext99 6B22  
                        __size_of_isupper 0022                   initEeprom@addressToRead 0100  
                              _I2cDummyTx 6B5C                    Tmr_TmrBIrqSet@Priority 007D  
                      __end_of_initEeprom 51A4                     __end_of_HttpGetMethod 0AC2  
                    delCmdFsm@emptyNumber 010B                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                               ??_delCmdFsm 00B0  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                           triggerRelay@res 0085  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 0030  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                   delCmdFsm@searchNumber 011B                         _Mdm_IsSmsReceived 694E  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 534E  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 008F  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                          ?_findEmptySpot 0100                    __end_of_LowPriorityIsr 00CC  
                   __end_of_CheckTxStatus 6D8E                        ?_Mdm_IsSmsReceived 0001  
                           _Mdm_DrvMainFn 6DA6                        ??_USBCtrlEPService 0097  
                                _isxdigit 651A                             _Mdm_IsRinging 6972  
                     _USBCtrlTrfInHandler 4380                  I2c_ReadData@I2cReadState 0034  
             __end_of_triggerVisualEffect 6D50                __end_of_Mdm_RequestSmsData 6CFA  
          cmdVisualEffet@isCmdSuccessfull 0093                               ??_detectCmd 0095  
                   __end_of_ScheduleTasks 2F88                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                                  _outPipes 01C9  
                    _USBCtrlTrfOutHandler 585E                       Led_SetLedStatus@Led 007E  
                                int$flags 0042                                strtol@base 008D  
                          ?_I2c_WriteData 007E                                  atoi@sign 0087  
                       ??_I2cSlv_MainTask 00A6                           StringCopy@Index 008D  
               _USBCtrlEPAllowStatusStage 3ECE                       ??_Mdm_IsSmsReceived 0081  
                          _receivedNumber 0346                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 02C8                                strtol@sign 0093  
                         Term_MainSm@Data 0452                       delCmdFsm@isComplete 0118  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            _isMasterNumber 56B0  
                             _relayBuffer 02FE                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 65CC  
                __end_of_Mcu_ConfigExtInt 6B92                             ?_Eeprom_Reset 0001  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00CA  
                CDCTxService@byte_to_send 0085                             ?_Eeprom_Write 008F  
           I2c_WriteData@TentativeCounter 0036                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 6A86                  __end_of_Led_SetLedStatus 6800  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                   Eeprom_Read@DataLength 00AB                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 5D14  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 6972  
                             ??_resCmdFsm 00B0                          ??_Tmr_TmrBIrqSet 007F  
                __size_of_secondsAppTimer 00A2                                  intlevel1 0000  
                                intlevel2 0000                      parseCommand@resetCmd 0090  
                    _OsTmr_GetTimerStatus 51A4                                 sprintf@ap 0084  
                               sprintf@cp 0087                                 sprintf@sp 007D  
                       TmrBInit@Prescaler 007D                      __size_of_Tmr_Tmr2Isr 0024  
                  __size_of_USBDeviceInit 0152   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5A50  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 008F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0089           _USER_USB_CALLBACK_EVENT_HANDLER 59F2  
                 Rtcc_SetRtcStatus@Status 007D                          ___lwmod@dividend 007D  
                 __end_of_SetUartBaudRate 2C02                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                         ?_LowPriorityIsr 0001                          ?_InitializeTasks 0001  
                                isupper@c 007F                            ?_Mdm_IsRinging 0001  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 0084  
                  MyApp_Task@currentState 01DA            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 009E                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 63A4                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                           _GetCallerNumber 663C  
                __end_of_Rtcm_GetRtccDate 592A                               _putUSBUSART 6A20  
               Eeprom_Write@CommandLength 0095                       _USBCtrlTrfRxService 2F88  
                  __end_of_isMasterNumber 571E                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 6592  
                           ?_getSetupCall 0001                   _USBStdFeatureReqHandler 1360  
                __end_of_OsTmr_StartTimer 5AAE                      _LedPulseStateMachine 3496  
                      _USBCheckCDCRequest 472C                       _USBCtrlTrfTxService 382E  
                     RtccIrqInit@Priority 007D                                  utoa@base 008E  
                          ??_Eeprom_Reset 0085                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                             _isMemoryEmpty 01FE  
                          ??_Eeprom_Write 0092                          _Rtcc_AlarmConfig 578A  
        detectUsbNumber@isActionPerformed 009B                           ??_Tmr_TmrBPrSet 009A  
                         ??_waitSetupCall 0093                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001                           _detectUsbNumber 6556  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FF                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 02EC                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 02EF                           ___lwmod@counter 0081  
                           ?_Mdm_MainTask 0001                            ??_I2cSetConfig 007D  
          __size_of_Irq_InitIntController 002A                                  toupper@c 007D  
         SetUartBaudRate@BaudRateRegister 009A                       ?_USBCheckCDCRequest 0001  
                        _MdmHttp_MainTask 620A                    __size_of_isNumberValid 0066  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 68B2                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                   delCmdFsm@numberInMemory 011A  
                     USBEnableEndpoint@ep 0088                           _endpoint_number 00CB  
                              _WDTCONbits 000FC0                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                             ??_Eeprom_Read 00AC  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 49DA  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                           ??_findEmptySpot 00B0  
                           _StopCondition 6DB0                     ??i1_I2cSlv_SendI2cMsg 0020  
                       ?_isNumberInMemory 0100                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 0029                          Mdm_IsRinging@Ret 0081  
                  __size_of_triggerCmdFsm 00D8                   __size_of_cmdVisualEffet 0048  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 66A8  
                    __end_of_CDCTxService 2ACA                        ??_isNumberInMemory 00B0  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC2E                     __size_of_triggerRelay 0036  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01EF                   _UsbMasterPhoneNumberLen 031A  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 6C94  
