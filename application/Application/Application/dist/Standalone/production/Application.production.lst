

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Apr  3 12:41:00 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	text0,global,reloc=2,class=CODE,delta=1
    38                           	psect	text1,global,reloc=2,class=CODE,delta=1
    39                           	psect	text2,global,reloc=2,class=CODE,delta=1
    40                           	psect	text3,global,reloc=2,class=CODE,delta=1
    41                           	psect	text4,global,reloc=2,class=CODE,delta=1
    42                           	psect	text5,global,reloc=2,class=CODE,delta=1
    43                           	psect	text6,global,reloc=2,class=CODE,delta=1
    44                           	psect	text7,global,reloc=2,class=CODE,delta=1
    45                           	psect	text8,global,reloc=2,class=CODE,delta=1
    46                           	psect	text9,global,reloc=2,class=CODE,delta=1
    47                           	psect	text10,global,reloc=2,class=CODE,delta=1
    48                           	psect	text11,global,reloc=2,class=CODE,delta=1
    49                           	psect	text12,global,reloc=2,class=CODE,delta=1
    50                           	psect	text13,global,reloc=2,class=CODE,delta=1
    51                           	psect	text14,global,reloc=2,class=CODE,delta=1
    52                           	psect	text15,global,reloc=2,class=CODE,delta=1
    53                           	psect	text16,global,reloc=2,class=CODE,delta=1
    54                           	psect	text17,global,reloc=2,class=CODE,delta=1
    55                           	psect	text18,global,reloc=2,class=CODE,delta=1
    56                           	psect	text19,global,reloc=2,class=CODE,delta=1
    57                           	psect	text20,global,reloc=2,class=CODE,delta=1
    58                           	psect	text21,global,reloc=2,class=CODE,delta=1
    59                           	psect	text22,global,reloc=2,class=CODE,delta=1
    60                           	psect	text23,global,reloc=2,class=CODE,delta=1
    61                           	psect	text24,global,reloc=2,class=CODE,delta=1
    62                           	psect	text25,global,reloc=2,class=CODE,delta=1
    63                           	psect	text26,global,reloc=2,class=CODE,delta=1
    64                           	psect	text27,global,reloc=2,class=CODE,delta=1
    65                           	psect	text28,global,reloc=2,class=CODE,delta=1
    66                           	psect	text29,global,reloc=2,class=CODE,delta=1
    67                           	psect	text30,global,reloc=2,class=CODE,delta=1
    68                           	psect	text31,global,reloc=2,class=CODE,delta=1
    69                           	psect	text32,global,reloc=2,class=CODE,delta=1
    70                           	psect	text33,global,reloc=2,class=CODE,delta=1
    71                           	psect	text34,global,reloc=2,class=CODE,delta=1
    72                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text36,global,reloc=2,class=CODE,delta=1
    74                           	psect	text37,global,reloc=2,class=CODE,delta=1
    75                           	psect	text38,global,reloc=2,class=CODE,delta=1
    76                           	psect	text39,global,reloc=2,class=CODE,delta=1
    77                           	psect	text40,global,reloc=2,class=CODE,delta=1
    78                           	psect	text41,global,reloc=2,class=CODE,delta=1
    79                           	psect	text42,global,reloc=2,class=CODE,delta=1
    80                           	psect	text43,global,reloc=2,class=CODE,delta=1
    81                           	psect	text44,global,reloc=2,class=CODE,delta=1
    82                           	psect	text45,global,reloc=2,class=CODE,delta=1
    83                           	psect	text46,global,reloc=2,class=CODE,delta=1
    84                           	psect	text47,global,reloc=2,class=CODE,delta=1
    85                           	psect	text48,global,reloc=2,class=CODE,delta=1
    86                           	psect	text49,global,reloc=2,class=CODE,delta=1
    87                           	psect	text50,global,reloc=2,class=CODE,delta=1
    88                           	psect	text51,global,reloc=2,class=CODE,delta=1
    89                           	psect	text52,global,reloc=2,class=CODE,delta=1
    90                           	psect	text53,global,reloc=2,class=CODE,delta=1
    91                           	psect	text54,global,reloc=2,class=CODE,delta=1
    92                           	psect	text55,global,reloc=2,class=CODE,delta=1
    93                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text58,global,reloc=2,class=CODE,delta=1
    96                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text60,global,reloc=2,class=CODE,delta=1
    98                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text70,global,reloc=2,class=CODE,delta=1
   108                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text74,global,reloc=2,class=CODE,delta=1
   112                           	psect	text75,global,reloc=2,class=CODE,delta=1
   113                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text78,global,reloc=2,class=CODE,delta=1
   116                           	psect	text79,global,reloc=2,class=CODE,delta=1
   117                           	psect	text80,global,reloc=2,class=CODE,delta=1
   118                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text83,global,reloc=2,class=CODE,delta=1
   121                           	psect	text84,global,reloc=2,class=CODE,delta=1
   122                           	psect	text85,global,reloc=2,class=CODE,delta=1
   123                           	psect	text86,global,reloc=2,class=CODE,delta=1
   124                           	psect	text87,global,reloc=2,class=CODE,delta=1
   125                           	psect	text88,global,reloc=2,class=CODE,delta=1
   126                           	psect	text89,global,reloc=2,class=CODE,delta=1
   127                           	psect	text90,global,reloc=2,class=CODE,delta=1
   128                           	psect	text91,global,reloc=2,class=CODE,delta=1
   129                           	psect	text92,global,reloc=2,class=CODE,delta=1
   130                           	psect	text93,global,reloc=2,class=CODE,delta=1
   131                           	psect	text94,global,reloc=2,class=CODE,delta=1
   132                           	psect	text95,global,reloc=2,class=CODE,delta=1
   133                           	psect	text96,global,reloc=2,class=CODE,delta=1
   134                           	psect	text97,global,reloc=2,class=CODE,delta=1
   135                           	psect	text98,global,reloc=2,class=CODE,delta=1
   136                           	psect	text99,global,reloc=2,class=CODE,delta=1
   137                           	psect	text100,global,reloc=2,class=CODE,delta=1
   138                           	psect	text101,global,reloc=2,class=CODE,delta=1
   139                           	psect	text102,global,reloc=2,class=CODE,delta=1
   140                           	psect	text103,global,reloc=2,class=CODE,delta=1
   141                           	psect	text104,global,reloc=2,class=CODE,delta=1
   142                           	psect	text105,global,reloc=2,class=CODE,delta=1
   143                           	psect	text106,global,reloc=2,class=CODE,delta=1
   144                           	psect	text107,global,reloc=2,class=CODE,delta=1
   145                           	psect	text108,global,reloc=2,class=CODE,delta=1
   146                           	psect	text109,global,reloc=2,class=CODE,delta=1
   147                           	psect	text110,global,reloc=2,class=CODE,delta=1
   148                           	psect	text111,global,reloc=2,class=CODE,delta=1
   149                           	psect	text112,global,reloc=2,class=CODE,delta=1
   150                           	psect	text113,global,reloc=2,class=CODE,delta=1
   151                           	psect	text114,global,reloc=2,class=CODE,delta=1
   152                           	psect	text115,global,reloc=2,class=CODE,delta=1
   153                           	psect	text116,global,reloc=2,class=CODE,delta=1
   154                           	psect	text117,global,reloc=2,class=CODE,delta=1
   155                           	psect	text118,global,reloc=2,class=CODE,delta=1
   156                           	psect	text119,global,reloc=2,class=CODE,delta=1
   157                           	psect	text120,global,reloc=2,class=CODE,delta=1
   158                           	psect	text121,global,reloc=2,class=CODE,delta=1
   159                           	psect	text122,global,reloc=2,class=CODE,delta=1
   160                           	psect	text123,global,reloc=2,class=CODE,delta=1
   161                           	psect	text124,global,reloc=2,class=CODE,delta=1
   162                           	psect	text125,global,reloc=2,class=CODE,delta=1
   163                           	psect	text126,global,reloc=2,class=CODE,delta=1
   164                           	psect	text127,global,reloc=2,class=CODE,delta=1
   165                           	psect	text128,global,reloc=2,class=CODE,delta=1
   166                           	psect	text129,global,reloc=2,class=CODE,delta=1
   167                           	psect	text130,global,reloc=2,class=CODE,delta=1
   168                           	psect	text131,global,reloc=2,class=CODE,delta=1
   169                           	psect	text132,global,reloc=2,class=CODE,delta=1
   170                           	psect	text133,global,reloc=2,class=CODE,delta=1
   171                           	psect	text134,global,reloc=2,class=CODE,delta=1
   172                           	psect	text135,global,reloc=2,class=CODE,delta=1
   173                           	psect	text136,global,reloc=2,class=CODE,delta=1
   174                           	psect	text137,global,reloc=2,class=CODE,delta=1
   175                           	psect	text138,global,reloc=2,class=CODE,delta=1
   176                           	psect	text139,global,reloc=2,class=CODE,delta=1
   177                           	psect	text140,global,reloc=2,class=CODE,delta=1
   178                           	psect	text141,global,reloc=2,class=CODE,delta=1
   179                           	psect	text142,global,reloc=2,class=CODE,delta=1,group=1
   180                           	psect	text143,global,reloc=2,class=CODE,delta=1
   181                           	psect	text144,global,reloc=2,class=CODE,delta=1
   182                           	psect	text145,global,reloc=2,class=CODE,delta=1
   183                           	psect	text146,global,reloc=2,class=CODE,delta=1
   184                           	psect	text147,global,reloc=2,class=CODE,delta=1
   185                           	psect	text148,global,reloc=2,class=CODE,delta=1
   186                           	psect	text149,global,reloc=2,class=CODE,delta=1
   187                           	psect	text150,global,reloc=2,class=CODE,delta=1
   188                           	psect	text151,global,reloc=2,class=CODE,delta=1
   189                           	psect	text152,global,reloc=2,class=CODE,delta=1
   190                           	psect	text153,global,reloc=2,class=CODE,delta=1
   191                           	psect	text154,global,reloc=2,class=CODE,delta=1
   192                           	psect	text155,global,reloc=2,class=CODE,delta=1
   193                           	psect	text156,global,reloc=2,class=CODE,delta=1
   194                           	psect	text157,global,reloc=2,class=CODE,delta=1
   195                           	psect	text158,global,reloc=2,class=CODE,delta=1
   196                           	psect	text159,global,reloc=2,class=CODE,delta=1
   197                           	psect	text160,global,reloc=2,class=CODE,delta=1
   198                           	psect	text161,global,reloc=2,class=CODE,delta=1
   199                           	psect	text162,global,reloc=2,class=CODE,delta=1
   200                           	psect	text163,global,reloc=2,class=CODE,delta=1,group=1
   201                           	psect	text164,global,reloc=2,class=CODE,delta=1
   202                           	psect	text165,global,reloc=2,class=CODE,delta=1,group=1
   203                           	psect	text166,global,reloc=2,class=CODE,delta=1
   204                           	psect	text167,global,reloc=2,class=CODE,delta=1
   205                           	psect	text168,global,reloc=2,class=CODE,delta=1,group=1
   206                           	psect	text169,global,reloc=2,class=CODE,delta=1
   207                           	psect	text170,global,reloc=2,class=CODE,delta=1
   208                           	psect	text171,global,reloc=2,class=CODE,delta=1
   209                           	psect	text172,global,reloc=2,class=CODE,delta=1
   210                           	psect	text173,global,reloc=2,class=CODE,delta=1
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	text177,global,reloc=2,class=CODE,delta=1
   215                           	psect	text178,global,reloc=2,class=CODE,delta=1
   216                           	psect	text179,global,reloc=2,class=CODE,delta=1
   217                           	psect	text180,global,reloc=2,class=CODE,delta=1
   218                           	psect	text181,global,reloc=2,class=CODE,delta=1
   219                           	psect	text182,global,reloc=2,class=CODE,delta=1
   220                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   221                           	psect	text184,global,reloc=2,class=CODE,delta=1
   222                           	psect	text185,global,reloc=2,class=CODE,delta=1
   223                           	psect	text186,global,reloc=2,class=CODE,delta=1
   224                           	psect	text187,global,reloc=2,class=CODE,delta=1
   225                           	psect	text188,global,reloc=2,class=CODE,delta=1
   226                           	psect	text189,global,reloc=2,class=CODE,delta=1
   227                           	psect	text190,global,reloc=2,class=CODE,delta=1
   228                           	psect	text191,global,reloc=2,class=CODE,delta=1
   229                           	psect	text192,global,reloc=2,class=CODE,delta=1
   230                           	psect	text193,global,reloc=2,class=CODE,delta=1
   231                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   232                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   233                           	psect	text195,global,reloc=2,class=CODE,delta=1
   234                           	psect	text196,global,reloc=2,class=CODE,delta=1
   235                           	psect	text197,global,reloc=2,class=CODE,delta=1
   236                           	psect	text198,global,reloc=2,class=CODE,delta=1
   237                           	psect	text199,global,reloc=2,class=CODE,delta=1
   238                           	psect	text200,global,reloc=2,class=CODE,delta=1
   239                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   240                           	psect	text201,global,reloc=2,class=CODE,delta=1
   241                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   242                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   243                           	dabs	1,0x400,48,_BDT
   244                           	dabs	1,0x438,8,_CtrlTrfData
   245                           	dabs	1,0x430,8,_SetupPkt
   246  0000                     
   247                           ; Version 1.45
   248                           ; Generated 16/11/2017 GMT
   249                           ; 
   250                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   251                           ; All rights reserved.
   252                           ; 
   253                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   254                           ; 
   255                           ; Redistribution and use in source and binary forms, with or without modification, are
   256                           ; permitted provided that the following conditions are met:
   257                           ; 
   258                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   259                           ;        conditions and the following disclaimer.
   260                           ; 
   261                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   262                           ;        of conditions and the following disclaimer in the documentation and/or other
   263                           ;        materials provided with the distribution.
   264                           ; 
   265                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   266                           ;        software without specific prior written permission.
   267                           ; 
   268                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   269                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   270                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   271                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   272                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   273                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   274                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   275                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   276                           ; 
   277                           ; 
   278                           ; Code-generator required, PIC18F46J50 Definitions
   279                           ; 
   280                           ; SFR Addresses
   281  0000                     
   282                           	psect	idataBANK0
   283  006E02                     __pidataBANK0:
   284                           	opt stack 0
   285                           
   286                           ;initializer for findEmptySpot@currentPosition
   287  006E02  20                 	db	32
   288                           
   289                           ;initializer for isNumberInMemory@currentPosition
   290  006E03  20                 	db	32
   291                           
   292                           ;initializer for MyApp_Task@isCmdSuccessfull
   293  006E04  01                 	db	1
   294                           
   295                           	psect	idataBANK1
   296  006E05                     __pidataBANK1:
   297                           	opt stack 0
   298                           
   299                           ;initializer for _isMemoryEmpty
   300  006E05  01                 	db	1
   301                           
   302                           ;initializer for InitGprsNetwork@GprsInitSts
   303  006E06  01                 	db	1
   304                           
   305                           	psect	idataBANK2
   306  006D54                     __pidataBANK2:
   307                           	opt stack 0
   308                           
   309                           ;initializer for Terminal@EchoOption
   310  006D54  01                 	db	1
   311                           
   312                           ;initializer for _MainSystemTimebaseFlag
   313  006D55  01                 	db	1
   314                           
   315                           ;initializer for _ConnTimeout
   316  006D56  00                 	db	0
   317  006D57  01                 	db	1
   318  006D58  0000               	dw	0
   319  006D5A  0000               	dw	0
   320  006D5C  0000               	dw	0
   321  006D5E  0000               	dw	0
   322  006D60  00                 	db	0
   323                           
   324                           ;initializer for _relayBuffer
   325  006D61  50                 	db	80
   326  006D62  00                 	db	0
   327                           
   328                           	psect	idataBANK3
   329  006518                     __pidataBANK3:
   330                           	opt stack 0
   331                           
   332                           ;initializer for ModemEvtParser@F9119
   333  006518  2B                 	db	43
   334  006519  43                 	db	67
   335  00651A  4D                 	db	77
   336  00651B  54                 	db	84
   337  00651C  49                 	db	73
   338                           
   339                           ;initializer for ModemEvtParser@F9117
   340  00651D  2B                 	db	43
   341  00651E  43                 	db	67
   342  00651F  4C                 	db	76
   343  006520  49                 	db	73
   344  006521  50                 	db	80
   345                           
   346                           ;initializer for ModemEvtParser@F9115
   347  006522  52                 	db	82
   348  006523  49                 	db	73
   349  006524  4E                 	db	78
   350  006525  47                 	db	71
   351                           
   352                           ;initializer for Term_MainSm@TermDelay
   353  006526  01                 	db	1
   354  006527  01                 	db	1
   355  006528  0000               	dw	0
   356  00652A  0000               	dw	0
   357  00652C  0000               	dw	0
   358  00652E  0000               	dw	0
   359  006530  00                 	db	0
   360                           
   361                           ;initializer for _ConnWait
   362  006531  00                 	db	0
   363  006532  01                 	db	1
   364  006533  0000               	dw	0
   365  006535  0000               	dw	0
   366  006537  0000               	dw	0
   367  006539  0000               	dw	0
   368  00653B  00                 	db	0
   369                           
   370                           ;initializer for SendSmsSm@SwTimer
   371  00653C  01                 	db	1
   372  00653D  01                 	db	1
   373  00653E  0000               	dw	0
   374  006540  0000               	dw	0
   375  006542  0000               	dw	0
   376  006544  0000               	dw	0
   377  006546  00                 	db	0
   378                           
   379                           ;initializer for CheckModem@Timeout
   380  006547  00                 	db	0
   381  006548  01                 	db	1
   382  006549  0000               	dw	0
   383  00654B  0000               	dw	0
   384  00654D  0000               	dw	0
   385  00654F  0000               	dw	0
   386  006551  00                 	db	0
   387                           
   388                           ;initializer for _blinkInSeconds
   389  006552  FFFF               	dw	65535
   390                           
   391                           	psect	idataBANK4
   392  006D96                     __pidataBANK4:
   393                           	opt stack 0
   394                           
   395                           ;initializer for ModemEvtParser@F9121
   396  006D96  43                 	db	67
   397  006D97  61                 	db	97
   398  006D98  6C                 	db	108
   399  006D99  6C                 	db	108
   400  006D9A  20                 	db	32
   401  006D9B  52                 	db	82
   402  006D9C  65                 	db	101
   403  006D9D  61                 	db	97
   404  006D9E  64                 	db	100
   405  006D9F  79                 	db	121
   406                           
   407                           	psect	idataBANK5
   408  005F42                     __pidataBANK5:
   409                           	opt stack 0
   410                           
   411                           ;initializer for _TaskTable
   412  005F42  E0                 	db	low _Mdm_DrvMainFn
   413  005F43  6D                 	db	high _Mdm_DrvMainFn
   414  005F44  00                 	db	0
   415  005F45  0000               	dw	0
   416  005F47  000A               	dw	10
   417  005F49  00                 	db	0
   418  005F4A  A8                 	db	low _I2cSlv_MainTask
   419  005F4B  5C                 	db	high _I2cSlv_MainTask
   420  005F4C  00                 	db	0
   421  005F4D  0000               	dw	0
   422  005F4F  0001               	dw	1
   423  005F51  00                 	db	0
   424  005F52  92                 	db	low _Mdm_MainTask
   425  005F53  5F                 	db	high _Mdm_MainTask
   426  005F54  00                 	db	0
   427  005F55  0000               	dw	0
   428  005F57  0001               	dw	1
   429  005F59  00                 	db	0
   430  005F5A  44                 	db	low _MdmHttp_MainTask
   431  005F5B  62                 	db	high _MdmHttp_MainTask
   432  005F5C  00                 	db	0
   433  005F5D  0000               	dw	0
   434  005F5F  0001               	dw	1
   435  005F61  00                 	db	0
   436  005F62  64                 	db	low _UsbDevice_MainTask
   437  005F63  69                 	db	high _UsbDevice_MainTask
   438  005F64  00                 	db	0
   439  005F65  0000               	dw	0
   440  005F67  0001               	dw	1
   441  005F69  00                 	db	0
   442  005F6A  F4                 	db	low _Wdg_MainTask
   443  005F6B  69                 	db	high _Wdg_MainTask
   444  005F6C  00                 	db	0
   445  005F6D  0000               	dw	0
   446  005F6F  0064               	dw	100
   447  005F71  00                 	db	0
   448  005F72  2A                 	db	low _Led_MainTask
   449  005F73  3D                 	db	high _Led_MainTask
   450  005F74  00                 	db	0
   451  005F75  0000               	dw	0
   452  005F77  0032               	dw	50
   453  005F79  00                 	db	0
   454  005F7A  1C                 	db	low _Rtcm_MainTask
   455  005F7B  52                 	db	high _Rtcm_MainTask
   456  005F7C  00                 	db	0
   457  005F7D  0000               	dw	0
   458  005F7F  0064               	dw	100
   459  005F81  00                 	db	0
   460  005F82  CC                 	db	low _Term_MainTask
   461  005F83  6B                 	db	high _Term_MainTask
   462  005F84  00                 	db	0
   463  005F85  0000               	dw	0
   464  005F87  0001               	dw	1
   465  005F89  00                 	db	0
   466  005F8A  96                 	db	low _MyApp_Task
   467  005F8B  25                 	db	high _MyApp_Task
   468  005F8C  00                 	db	0
   469  005F8D  0000               	dw	0
   470  005F8F  0064               	dw	100
   471  005F91  00                 	db	0
   472                           
   473                           	psect	mediumconst
   474  00FC1A                     __pmediumconst:
   475                           	opt stack 0
   476  00FC1A  00                 	db	0
   477  00FC1B                     _USB_SD_Ptr:
   478                           	opt stack 0
   479  00FC1B  5A                 	db	low _sd000
   480  00FC1C  FE                 	db	high _sd000
   481  00FC1D  13                 	db	low _sd001
   482  00FC1E  FE                 	db	high _sd001
   483  00FC1F  ED                 	db	low _sd002
   484  00FC20  FD                 	db	high _sd002
   485  00FC21                     __end_of_USB_SD_Ptr:
   486                           	opt stack 0
   487  00FC21                     parseCommand@F9039:
   488                           	opt stack 0
   489  00FC21  52                 	db	82
   490  00FC22  45                 	db	69
   491  00FC23  53                 	db	83
   492  00FC24  3B                 	db	59
   493  00FC25                     __end_ofparseCommand@F9039:
   494                           	opt stack 0
   495  00FC25                     parseCommand@F9037:
   496                           	opt stack 0
   497  00FC25  44                 	db	68
   498  00FC26  45                 	db	69
   499  00FC27  4C                 	db	76
   500  00FC28  3B                 	db	59
   501  00FC29                     __end_ofparseCommand@F9037:
   502                           	opt stack 0
   503  00FC29                     parseCommand@F9035:
   504                           	opt stack 0
   505  00FC29  41                 	db	65
   506  00FC2A  44                 	db	68
   507  00FC2B  44                 	db	68
   508  00FC2C  3B                 	db	59
   509  00FC2D                     __end_ofparseCommand@F9035:
   510                           	opt stack 0
   511  00FC2D                     _USB_CD_Ptr:
   512                           	opt stack 0
   513  00FC2D  AA                 	db	low _configDescriptor1
   514  00FC2E  FD                 	db	high _configDescriptor1
   515  00FC2F                     __end_of_USB_CD_Ptr:
   516                           	opt stack 0
   517  00FC2F                     _TaskNumber:
   518                           	opt stack 0
   519  00FC2F  000A               	dw	10
   520  00FC31                     __end_of_TaskNumber:
   521                           	opt stack 0
   522  00FC31                     _MsgFormat:
   523                           	opt stack 0
   524  00FC31  48                 	db	72
   525  00FC32  6F                 	db	111
   526  00FC33  73                 	db	115
   527  00FC34  74                 	db	116
   528  00FC35  20                 	db	32
   529  00FC36  6D                 	db	109
   530  00FC37  65                 	db	101
   531  00FC38  73                 	db	115
   532  00FC39  73                 	db	115
   533  00FC3A  61                 	db	97
   534  00FC3B  67                 	db	103
   535  00FC3C  65                 	db	101
   536  00FC3D  20                 	db	32
   537  00FC3E  66                 	db	102
   538  00FC3F  6F                 	db	111
   539  00FC40  72                 	db	114
   540  00FC41  6D                 	db	109
   541  00FC42  61                 	db	97
   542  00FC43  74                 	db	116
   543  00FC44  3A                 	db	58
   544  00FC45  20                 	db	32
   545  00FC46  0D                 	db	13
   546  00FC47  0A                 	db	10
   547  00FC48  5B                 	db	91
   548  00FC49  6F                 	db	111
   549  00FC4A  70                 	db	112
   550  00FC4B  5F                 	db	95
   551  00FC4C  74                 	db	116
   552  00FC4D  79                 	db	121
   553  00FC4E  70                 	db	112
   554  00FC4F  65                 	db	101
   555  00FC50  5D                 	db	93
   556  00FC51  3A                 	db	58
   557  00FC52  5B                 	db	91
   558  00FC53  6F                 	db	111
   559  00FC54  70                 	db	112
   560  00FC55  5D                 	db	93
   561  00FC56  3A                 	db	58
   562  00FC57  5B                 	db	91
   563  00FC58  6C                 	db	108
   564  00FC59  65                 	db	101
   565  00FC5A  6E                 	db	110
   566  00FC5B  5D                 	db	93
   567  00FC5C  3A                 	db	58
   568  00FC5D  5B                 	db	91
   569  00FC5E  61                 	db	97
   570  00FC5F  64                 	db	100
   571  00FC60  64                 	db	100
   572  00FC61  72                 	db	114
   573  00FC62  5D                 	db	93
   574  00FC63  3A                 	db	58
   575  00FC64  5B                 	db	91
   576  00FC65  70                 	db	112
   577  00FC66  61                 	db	97
   578  00FC67  79                 	db	121
   579  00FC68  6C                 	db	108
   580  00FC69  6F                 	db	111
   581  00FC6A  61                 	db	97
   582  00FC6B  64                 	db	100
   583  00FC6C  5D                 	db	93
   584  00FC6D  0D                 	db	13
   585  00FC6E  0A                 	db	10
   586  00FC6F  0D                 	db	13
   587  00FC70  0A                 	db	10
   588  00FC71  5B                 	db	91
   589  00FC72  6F                 	db	111
   590  00FC73  70                 	db	112
   591  00FC74  5F                 	db	95
   592  00FC75  74                 	db	116
   593  00FC76  79                 	db	121
   594  00FC77  70                 	db	112
   595  00FC78  65                 	db	101
   596  00FC79  5D                 	db	93
   597  00FC7A  20                 	db	32
   598  00FC7B  3D                 	db	61
   599  00FC7C  20                 	db	32
   600  00FC7D  53                 	db	83
   601  00FC7E  4F                 	db	79
   602  00FC7F  2C                 	db	44
   603  00FC80  53                 	db	83
   604  00FC81  42                 	db	66
   605  00FC82  0D                 	db	13
   606  00FC83  0A                 	db	10
   607  00FC84  5B                 	db	91
   608  00FC85  6F                 	db	111
   609  00FC86  70                 	db	112
   610  00FC87  5D                 	db	93
   611  00FC88  20                 	db	32
   612  00FC89  3D                 	db	61
   613  00FC8A  20                 	db	32
   614  00FC8B  52                 	db	82
   615  00FC8C  3A                 	db	58
   616  00FC8D  20                 	db	32
   617  00FC8E  72                 	db	114
   618  00FC8F  65                 	db	101
   619  00FC90  61                 	db	97
   620  00FC91  64                 	db	100
   621  00FC92  2C                 	db	44
   622  00FC93  57                 	db	87
   623  00FC94  3A                 	db	58
   624  00FC95  20                 	db	32
   625  00FC96  77                 	db	119
   626  00FC97  72                 	db	114
   627  00FC98  69                 	db	105
   628  00FC99  74                 	db	116
   629  00FC9A  65                 	db	101
   630  00FC9B  0D                 	db	13
   631  00FC9C  0A                 	db	10
   632  00FC9D  5B                 	db	91
   633  00FC9E  6C                 	db	108
   634  00FC9F  65                 	db	101
   635  00FCA0  6E                 	db	110
   636  00FCA1  5D                 	db	93
   637  00FCA2  20                 	db	32
   638  00FCA3  3D                 	db	61
   639  00FCA4  20                 	db	32
   640  00FCA5  32                 	db	50
   641  00FCA6  20                 	db	32
   642  00FCA7  62                 	db	98
   643  00FCA8  79                 	db	121
   644  00FCA9  74                 	db	116
   645  00FCAA  65                 	db	101
   646  00FCAB  20                 	db	32
   647  00FCAC  41                 	db	65
   648  00FCAD  53                 	db	83
   649  00FCAE  43                 	db	67
   650  00FCAF  49                 	db	73
   651  00FCB0  49                 	db	73
   652  00FCB1  0D                 	db	13
   653  00FCB2  0A                 	db	10
   654  00FCB3  5B                 	db	91
   655  00FCB4  61                 	db	97
   656  00FCB5  64                 	db	100
   657  00FCB6  64                 	db	100
   658  00FCB7  72                 	db	114
   659  00FCB8  5D                 	db	93
   660  00FCB9  20                 	db	32
   661  00FCBA  3D                 	db	61
   662  00FCBB  20                 	db	32
   663  00FCBC  32                 	db	50
   664  00FCBD  20                 	db	32
   665  00FCBE  62                 	db	98
   666  00FCBF  79                 	db	121
   667  00FCC0  74                 	db	116
   668  00FCC1  65                 	db	101
   669  00FCC2  20                 	db	32
   670  00FCC3  41                 	db	65
   671  00FCC4  53                 	db	83
   672  00FCC5  43                 	db	67
   673  00FCC6  49                 	db	73
   674  00FCC7  49                 	db	73
   675  00FCC8  0D                 	db	13
   676  00FCC9  0A                 	db	10
   677  00FCCA  5B                 	db	91
   678  00FCCB  70                 	db	112
   679  00FCCC  61                 	db	97
   680  00FCCD  79                 	db	121
   681  00FCCE  6C                 	db	108
   682  00FCCF  6F                 	db	111
   683  00FCD0  61                 	db	97
   684  00FCD1  64                 	db	100
   685  00FCD2  5D                 	db	93
   686  00FCD3  20                 	db	32
   687  00FCD4  3D                 	db	61
   688  00FCD5  20                 	db	32
   689  00FCD6  6D                 	db	109
   690  00FCD7  61                 	db	97
   691  00FCD8  78                 	db	120
   692  00FCD9  20                 	db	32
   693  00FCDA  32                 	db	50
   694  00FCDB  30                 	db	48
   695  00FCDC  20                 	db	32
   696  00FCDD  62                 	db	98
   697  00FCDE  79                 	db	121
   698  00FCDF  74                 	db	116
   699  00FCE0  65                 	db	101
   700  00FCE1  20                 	db	32
   701  00FCE2  41                 	db	65
   702  00FCE3  53                 	db	83
   703  00FCE4  43                 	db	67
   704  00FCE5  49                 	db	73
   705  00FCE6  49                 	db	73
   706  00FCE7  0D                 	db	13
   707  00FCE8  0A                 	db	10
   708  00FCE9  0D                 	db	13
   709  00FCEA  0A                 	db	10
   710  00FCEB  54                 	db	84
   711  00FCEC  65                 	db	101
   712  00FCED  72                 	db	114
   713  00FCEE  6D                 	db	109
   714  00FCEF  69                 	db	105
   715  00FCF0  6E                 	db	110
   716  00FCF1  61                 	db	97
   717  00FCF2  6C                 	db	108
   718  00FCF3  20                 	db	32
   719  00FCF4  4D                 	db	77
   720  00FCF5  6F                 	db	111
   721  00FCF6  64                 	db	100
   722  00FCF7  65                 	db	101
   723  00FCF8  3A                 	db	58
   724  00FCF9  20                 	db	32
   725  00FCFA  43                 	db	67
   726  00FCFB  4F                 	db	79
   727  00FCFC  4D                 	db	77
   728  00FCFD  4D                 	db	77
   729  00FCFE  41                 	db	65
   730  00FCFF  4E                 	db	78
   731  00FD00  44                 	db	68
   732  00FD01  20                 	db	32
   733  00FD02  4D                 	db	77
   734  00FD03  4F                 	db	79
   735  00FD04  44                 	db	68
   736  00FD05  45                 	db	69
   737  00FD06  0D                 	db	13
   738  00FD07  0A                 	db	10
   739  00FD08  4D                 	db	77
   740  00FD09  6F                 	db	111
   741  00FD0A  64                 	db	100
   742  00FD0B  65                 	db	101
   743  00FD0C  6D                 	db	109
   744  00FD0D  20                 	db	32
   745  00FD0E  54                 	db	84
   746  00FD0F  79                 	db	121
   747  00FD10  70                 	db	112
   748  00FD11  65                 	db	101
   749  00FD12  3A                 	db	58
   750  00FD13  20                 	db	32
   751  00FD14  47                 	db	71
   752  00FD15  53                 	db	83
   753  00FD16  4D                 	db	77
   754  00FD17  2F                 	db	47
   755  00FD18  47                 	db	71
   756  00FD19  50                 	db	80
   757  00FD1A  52                 	db	82
   758  00FD1B  53                 	db	83
   759  00FD1C  0D                 	db	13
   760  00FD1D  0A                 	db	10
   761  00FD1E  0D                 	db	13
   762  00FD1F  0A                 	db	10
   763  00FD20  00                 	db	0
   764  00FD21                     __end_of_MsgFormat:
   765                           	opt stack 0
   766  00FD21                     _Welcome:
   767                           	opt stack 0
   768  00FD21  2A                 	db	42
   769  00FD22  2A                 	db	42
   770  00FD23  2A                 	db	42
   771  00FD24  2A                 	db	42
   772  00FD25  2A                 	db	42
   773  00FD26  2A                 	db	42
   774  00FD27  2A                 	db	42
   775  00FD28  2A                 	db	42
   776  00FD29  2A                 	db	42
   777  00FD2A  2A                 	db	42
   778  00FD2B  2A                 	db	42
   779  00FD2C  2A                 	db	42
   780  00FD2D  2A                 	db	42
   781  00FD2E  2A                 	db	42
   782  00FD2F  2A                 	db	42
   783  00FD30  2A                 	db	42
   784  00FD31  2A                 	db	42
   785  00FD32  2A                 	db	42
   786  00FD33  2A                 	db	42
   787  00FD34  2A                 	db	42
   788  00FD35  2A                 	db	42
   789  00FD36  2A                 	db	42
   790  00FD37  2A                 	db	42
   791  00FD38  2A                 	db	42
   792  00FD39  2A                 	db	42
   793  00FD3A  2A                 	db	42
   794  00FD3B  2A                 	db	42
   795  00FD3C  2A                 	db	42
   796  00FD3D  2A                 	db	42
   797  00FD3E  2A                 	db	42
   798  00FD3F  2A                 	db	42
   799  00FD40  2A                 	db	42
   800  00FD41  2A                 	db	42
   801  00FD42  2A                 	db	42
   802  00FD43  2A                 	db	42
   803  00FD44  2A                 	db	42
   804  00FD45  2A                 	db	42
   805  00FD46  2A                 	db	42
   806  00FD47  2A                 	db	42
   807  00FD48  2A                 	db	42
   808  00FD49  2A                 	db	42
   809  00FD4A  2A                 	db	42
   810  00FD4B  2A                 	db	42
   811  00FD4C  2A                 	db	42
   812  00FD4D  2A                 	db	42
   813  00FD4E  2A                 	db	42
   814  00FD4F  2A                 	db	42
   815  00FD50  2A                 	db	42
   816  00FD51  2A                 	db	42
   817  00FD52  0D                 	db	13
   818  00FD53  0A                 	db	10
   819  00FD54  20                 	db	32
   820  00FD55  20                 	db	32
   821  00FD56  20                 	db	32
   822  00FD57  20                 	db	32
   823  00FD58  20                 	db	32
   824  00FD59  20                 	db	32
   825  00FD5A  20                 	db	32
   826  00FD5B  20                 	db	32
   827  00FD5C  20                 	db	32
   828  00FD5D  20                 	db	32
   829  00FD5E  20                 	db	32
   830  00FD5F  20                 	db	32
   831  00FD60  20                 	db	32
   832  00FD61  20                 	db	32
   833  00FD62  20                 	db	32
   834  00FD63  20                 	db	32
   835  00FD64  20                 	db	32
   836  00FD65  20                 	db	32
   837  00FD66  4D                 	db	77
   838  00FD67  45                 	db	69
   839  00FD68  52                 	db	82
   840  00FD69  43                 	db	67
   841  00FD6A  55                 	db	85
   842  00FD6B  52                 	db	82
   843  00FD6C  59                 	db	89
   844  00FD6D  20                 	db	32
   845  00FD6E  53                 	db	83
   846  00FD6F  59                 	db	89
   847  00FD70  53                 	db	83
   848  00FD71  54                 	db	84
   849  00FD72  45                 	db	69
   850  00FD73  4D                 	db	77
   851  00FD74  0D                 	db	13
   852  00FD75  0A                 	db	10
   853  00FD76  2A                 	db	42
   854  00FD77  2A                 	db	42
   855  00FD78  2A                 	db	42
   856  00FD79  2A                 	db	42
   857  00FD7A  2A                 	db	42
   858  00FD7B  2A                 	db	42
   859  00FD7C  2A                 	db	42
   860  00FD7D  2A                 	db	42
   861  00FD7E  2A                 	db	42
   862  00FD7F  2A                 	db	42
   863  00FD80  2A                 	db	42
   864  00FD81  2A                 	db	42
   865  00FD82  2A                 	db	42
   866  00FD83  2A                 	db	42
   867  00FD84  2A                 	db	42
   868  00FD85  2A                 	db	42
   869  00FD86  2A                 	db	42
   870  00FD87  2A                 	db	42
   871  00FD88  2A                 	db	42
   872  00FD89  2A                 	db	42
   873  00FD8A  2A                 	db	42
   874  00FD8B  2A                 	db	42
   875  00FD8C  2A                 	db	42
   876  00FD8D  2A                 	db	42
   877  00FD8E  2A                 	db	42
   878  00FD8F  2A                 	db	42
   879  00FD90  2A                 	db	42
   880  00FD91  2A                 	db	42
   881  00FD92  2A                 	db	42
   882  00FD93  2A                 	db	42
   883  00FD94  2A                 	db	42
   884  00FD95  2A                 	db	42
   885  00FD96  2A                 	db	42
   886  00FD97  2A                 	db	42
   887  00FD98  2A                 	db	42
   888  00FD99  2A                 	db	42
   889  00FD9A  2A                 	db	42
   890  00FD9B  2A                 	db	42
   891  00FD9C  2A                 	db	42
   892  00FD9D  2A                 	db	42
   893  00FD9E  2A                 	db	42
   894  00FD9F  2A                 	db	42
   895  00FDA0  2A                 	db	42
   896  00FDA1  2A                 	db	42
   897  00FDA2  2A                 	db	42
   898  00FDA3  2A                 	db	42
   899  00FDA4  2A                 	db	42
   900  00FDA5  2A                 	db	42
   901  00FDA6  2A                 	db	42
   902  00FDA7  0D                 	db	13
   903  00FDA8  0A                 	db	10
   904  00FDA9  00                 	db	0
   905  00FDAA                     __end_of_Welcome:
   906                           	opt stack 0
   907  00FDAA                     _configDescriptor1:
   908                           	opt stack 0
   909  00FDAA  09                 	db	9
   910  00FDAB  02                 	db	2
   911  00FDAC  43                 	db	67
   912  00FDAD  00                 	db	0
   913  00FDAE  02                 	db	2
   914  00FDAF  01                 	db	1
   915  00FDB0  00                 	db	0
   916  00FDB1  C0                 	db	192
   917  00FDB2  32                 	db	50
   918  00FDB3  09                 	db	9
   919  00FDB4  04                 	db	4
   920  00FDB5  00                 	db	0
   921  00FDB6  00                 	db	0
   922  00FDB7  01                 	db	1
   923  00FDB8  02                 	db	2
   924  00FDB9  02                 	db	2
   925  00FDBA  01                 	db	1
   926  00FDBB  00                 	db	0
   927  00FDBC  05                 	db	5
   928  00FDBD  24                 	db	36
   929  00FDBE  00                 	db	0
   930  00FDBF  10                 	db	16
   931  00FDC0  01                 	db	1
   932  00FDC1  04                 	db	4
   933  00FDC2  24                 	db	36
   934  00FDC3  02                 	db	2
   935  00FDC4  02                 	db	2
   936  00FDC5  05                 	db	5
   937  00FDC6  24                 	db	36
   938  00FDC7  06                 	db	6
   939  00FDC8  00                 	db	0
   940  00FDC9  01                 	db	1
   941  00FDCA  05                 	db	5
   942  00FDCB  24                 	db	36
   943  00FDCC  01                 	db	1
   944  00FDCD  00                 	db	0
   945  00FDCE  01                 	db	1
   946  00FDCF  07                 	db	7
   947  00FDD0  05                 	db	5
   948  00FDD1  81                 	db	129
   949  00FDD2  03                 	db	3
   950  00FDD3  08                 	db	8
   951  00FDD4  00                 	db	0
   952  00FDD5  02                 	db	2
   953  00FDD6  09                 	db	9
   954  00FDD7  04                 	db	4
   955  00FDD8  01                 	db	1
   956  00FDD9  00                 	db	0
   957  00FDDA  02                 	db	2
   958  00FDDB  0A                 	db	10
   959  00FDDC  00                 	db	0
   960  00FDDD  00                 	db	0
   961  00FDDE  00                 	db	0
   962  00FDDF  07                 	db	7
   963  00FDE0  05                 	db	5
   964  00FDE1  02                 	db	2
   965  00FDE2  02                 	db	2
   966  00FDE3  40                 	db	64
   967  00FDE4  00                 	db	0
   968  00FDE5  00                 	db	0
   969  00FDE6  07                 	db	7
   970  00FDE7  05                 	db	5
   971  00FDE8  82                 	db	130
   972  00FDE9  02                 	db	2
   973  00FDEA  40                 	db	64
   974  00FDEB  00                 	db	0
   975  00FDEC  00                 	db	0
   976  00FDED                     __end_of_configDescriptor1:
   977                           	opt stack 0
   978  00FDED                     _sd002:
   979                           	opt stack 0
   980  00FDED  26                 	db	38
   981  00FDEE  03                 	db	3
   982  00FDEF  0054               	dw	84
   983  00FDF1  0065               	dw	101
   984  00FDF3  0072               	dw	114
   985  00FDF5  006D               	dw	109
   986  00FDF7  0069               	dw	105
   987  00FDF9  006E               	dw	110
   988  00FDFB  0061               	dw	97
   989  00FDFD  006C               	dw	108
   990  00FDFF  0020               	dw	32
   991  00FE01  0049               	dw	73
   992  00FE03  006E               	dw	110
   993  00FE05  0074               	dw	116
   994  00FE07  0065               	dw	101
   995  00FE09  0072               	dw	114
   996  00FE0B  0066               	dw	102
   997  00FE0D  0061               	dw	97
   998  00FE0F  0063               	dw	99
   999  00FE11  0065               	dw	101
  1000  00FE13                     __end_of_sd002:
  1001                           	opt stack 0
  1002  00FE13                     _sd001:
  1003                           	opt stack 0
  1004  00FE13  1E                 	db	30
  1005  00FE14  03                 	db	3
  1006  00FE15  004D               	dw	77
  1007  00FE17  0065               	dw	101
  1008  00FE19  0072               	dw	114
  1009  00FE1B  0063               	dw	99
  1010  00FE1D  0075               	dw	117
  1011  00FE1F  0072               	dw	114
  1012  00FE21  0079               	dw	121
  1013  00FE23  0020               	dw	32
  1014  00FE25  0053               	dw	83
  1015  00FE27  0079               	dw	121
  1016  00FE29  0073               	dw	115
  1017  00FE2B  0074               	dw	116
  1018  00FE2D  0065               	dw	101
  1019  00FE2F  006D               	dw	109
  1020  00FE31                     __end_of_sd001:
  1021                           	opt stack 0
  1022  00FE31                     _MsgReady:
  1023                           	opt stack 0
  1024  00FE31  0D                 	db	13
  1025  00FE32  0A                 	db	10
  1026  00FE33  53                 	db	83
  1027  00FE34  79                 	db	121
  1028  00FE35  73                 	db	115
  1029  00FE36  74                 	db	116
  1030  00FE37  65                 	db	101
  1031  00FE38  6D                 	db	109
  1032  00FE39  20                 	db	32
  1033  00FE3A  52                 	db	82
  1034  00FE3B  65                 	db	101
  1035  00FE3C  61                 	db	97
  1036  00FE3D  64                 	db	100
  1037  00FE3E  79                 	db	121
  1038  00FE3F  2E                 	db	46
  1039  00FE40  2E                 	db	46
  1040  00FE41  2E                 	db	46
  1041  00FE42  20                 	db	32
  1042  00FE43  0D                 	db	13
  1043  00FE44  0A                 	db	10
  1044  00FE45  0D                 	db	13
  1045  00FE46  0A                 	db	10
  1046  00FE47  00                 	db	0
  1047  00FE48                     __end_of_MsgReady:
  1048                           	opt stack 0
  1049  00FE48                     _device_dsc:
  1050                           	opt stack 0
  1051  00FE48  12                 	db	18
  1052  00FE49  01                 	db	1
  1053  00FE4A  0200               	dw	512
  1054  00FE4C  02                 	db	2
  1055  00FE4D  00                 	db	0
  1056  00FE4E  00                 	db	0
  1057  00FE4F  08                 	db	8
  1058  00FE50  04D8               	dw	1240
  1059  00FE52  000A               	dw	10
  1060  00FE54  0100               	dw	256
  1061  00FE56  01                 	db	1
  1062  00FE57  02                 	db	2
  1063  00FE58  00                 	db	0
  1064  00FE59  01                 	db	1
  1065  00FE5A                     __end_of_device_dsc:
  1066                           	opt stack 0
  1067  00FE5A                     _sd000:
  1068                           	opt stack 0
  1069  00FE5A  04                 	db	4
  1070  00FE5B  03                 	db	3
  1071  00FE5C  0409               	dw	1033
  1072  00FE5E                     __end_of_sd000:
  1073                           	opt stack 0
  1074  0000                     _RPINR1	set	3815
  1075  0000                     _UEP0bits	set	3878
  1076  0000                     _UIEbits	set	3894
  1077  0000                     _UADDR	set	3896
  1078  0000                     _UIE	set	3894
  1079  0000                     _UEIE	set	3895
  1080  0000                     _UCFG	set	3897
  1081  0000                     _RTCCAL	set	3902
  1082  0000                     _PADCFG1bits	set	3900
  1083  0000                     _RTCCFGbits	set	3903
  1084  0000                     _DSCONLbits	set	3916
  1085  0000                     _DSGPR1	set	3919
  1086  0000                     _DSGPR0	set	3918
  1087  0000                     _DSCONHbits	set	3917
  1088  0000                     _ANCON1bits	set	3913
  1089  0000                     _UEP1	set	3879
  1090  0000                     _UEP0	set	3878
  1091  0000                     _T1CONbits	set	4045
  1092  0000                     _PORTDbits	set	3971
  1093  0000                     _USTAT	set	3940
  1094  0000                     _PIR2bits	set	4001
  1095  0000                     _UCON	set	3941
  1096  0000                     _UIRbits	set	3938
  1097  0000                     _UCONbits	set	3941
  1098  0000                     _UIR	set	3938
  1099  0000                     _UEIR	set	3939
  1100  0000                     _PIE2bits	set	4000
  1101  0000                     _BAUDCON2	set	3964
  1102  0000                     _RCSTA2	set	3996
  1103  0000                     _BAUDCON1	set	3966
  1104  0000                     _RCSTA1	set	4012
  1105  0000                     _TRISCbits	set	3988
  1106  0000                     _TXSTA2	set	4008
  1107  0000                     _TXSTA1	set	4013
  1108  0000                     _RCREG2	set	4010
  1109  0000                     _RCREG1	set	4015
  1110  0000                     _TXREG2	set	4009
  1111  0000                     _TXREG1	set	4014
  1112  0000                     _SPBRG2	set	4011
  1113  0000                     _SPBRGH2	set	3965
  1114  0000                     _SPBRG1	set	4016
  1115  0000                     _SPBRGH1	set	3967
  1116  0000                     _PR4	set	3959
  1117  0000                     _PR2	set	4043
  1118  0000                     _PIE1bits	set	3997
  1119  0000                     _IPR1bits	set	3999
  1120  0000                     _T4CONbits	set	3958
  1121  0000                     _T2CONbits	set	4042
  1122  0000                     _ALRMVALL	set	3982
  1123  0000                     _ALRMVALH	set	3983
  1124  0000                     _RTCVALH	set	3993
  1125  0000                     _RTCVALL	set	3992
  1126  0000                     _ALRMRPTbits	set	3984
  1127  0000                     _ALRMCFGbits	set	3985
  1128  0000                     _PIE3bits	set	4003
  1129  0000                     _IPR3bits	set	4005
  1130  0000                     _OSCCONbits	set	4051
  1131  0000                     _PORTEbits	set	3972
  1132  0000                     _TRISEbits	set	3990
  1133  0000                     _WDTCONbits	set	4032
  1134  0000                     _INTCON2bits	set	4081
  1135  0000                     _TRISBbits	set	3987
  1136  0000                     _OSCTUNEbits	set	3995
  1137  0000                     _SSP2CON1	set	3954
  1138  0000                     _TRISDbits	set	3989
  1139  0000                     _SSP2BUF	set	3957
  1140  0000                     _SSP2CON2bits	set	3953
  1141  0000                     _SSP2STAT	set	3955
  1142  0000                     _SSP2CON2	set	3953
  1143  0000                     _SSP2ADD	set	3956
  1144  0000                     _PIR1bits	set	3998
  1145  0000                     _PIR3bits	set	4004
  1146  0000                     _INTCON3bits	set	4080
  1147  0000                     _INTCONbits	set	4082
  1148  0000                     _RCONbits	set	4048
  1149  00FE5E                     STR_21:
  1150  00FE5E  20                 	db	32
  1151  00FE5F  4C                 	db	76	;'L'
  1152  00FE60  61                 	db	97	;'a'
  1153  00FE61  7A                 	db	122	;'z'
  1154  00FE62  79                 	db	121	;'y'
  1155  00FE63  20                 	db	32
  1156  00FE64  64                 	db	100	;'d'
  1157  00FE65  65                 	db	101	;'e'
  1158  00FE66  76                 	db	118	;'v'
  1159  00FE67  69                 	db	105	;'i'
  1160  00FE68  63                 	db	99	;'c'
  1161  00FE69  65                 	db	101	;'e'
  1162  00FE6A  2E                 	db	46
  1163  00FE6B  2E                 	db	46
  1164  00FE6C  2E                 	db	46
  1165  00FE6D  79                 	db	121	;'y'
  1166  00FE6E  6F                 	db	111	;'o'
  1167  00FE6F  75                 	db	117	;'u'
  1168  00FE70  27                 	db	39
  1169  00FE71  76                 	db	118	;'v'
  1170  00FE72  65                 	db	101	;'e'
  1171  00FE73  20                 	db	32
  1172  00FE74  62                 	db	98	;'b'
  1173  00FE75  65                 	db	101	;'e'
  1174  00FE76  65                 	db	101	;'e'
  1175  00FE77  6E                 	db	110	;'n'
  1176  00FE78  20                 	db	32
  1177  00FE79  74                 	db	116	;'t'
  1178  00FE7A  69                 	db	105	;'i'
  1179  00FE7B  6D                 	db	109	;'m'
  1180  00FE7C  65                 	db	101	;'e'
  1181  00FE7D  64                 	db	100	;'d'
  1182  00FE7E  2D                 	db	45
  1183  00FE7F  6F                 	db	111	;'o'
  1184  00FE80  75                 	db	117	;'u'
  1185  00FE81  74                 	db	116	;'t'
  1186  00FE82  21                 	db	33
  1187  00FE83  21                 	db	33
  1188  00FE84  21                 	db	33
  1189  00FE85  0D                 	db	13
  1190  00FE86  0A                 	db	10
  1191  00FE87  00                 	db	0
  1192  00FE88                     STR_8:
  1193  00FE88  41                 	db	65	;'A'
  1194  00FE89  54                 	db	84	;'T'
  1195  00FE8A  2B                 	db	43
  1196  00FE8B  53                 	db	83	;'S'
  1197  00FE8C  41                 	db	65	;'A'
  1198  00FE8D  50                 	db	80	;'P'
  1199  00FE8E  42                 	db	66	;'B'
  1200  00FE8F  52                 	db	82	;'R'
  1201  00FE90  3D                 	db	61	;'='
  1202  00FE91  33                 	db	51	;'3'
  1203  00FE92  2C                 	db	44
  1204  00FE93  31                 	db	49	;'1'
  1205  00FE94  2C                 	db	44
  1206  00FE95  22                 	db	34
  1207  00FE96  43                 	db	67	;'C'
  1208  00FE97  6F                 	db	111	;'o'
  1209  00FE98  6E                 	db	110	;'n'
  1210  00FE99  74                 	db	116	;'t'
  1211  00FE9A  79                 	db	121	;'y'
  1212  00FE9B  70                 	db	112	;'p'
  1213  00FE9C  65                 	db	101	;'e'
  1214  00FE9D  22                 	db	34
  1215  00FE9E  2C                 	db	44
  1216  00FE9F  22                 	db	34
  1217  00FEA0  47                 	db	71	;'G'
  1218  00FEA1  50                 	db	80	;'P'
  1219  00FEA2  52                 	db	82	;'R'
  1220  00FEA3  53                 	db	83	;'S'
  1221  00FEA4  22                 	db	34
  1222  00FEA5  0D                 	db	13
  1223  00FEA6  00                 	db	0
  1224  00FEA7                     STR_14:
  1225  00FEA7  41                 	db	65	;'A'
  1226  00FEA8  54                 	db	84	;'T'
  1227  00FEA9  2B                 	db	43
  1228  00FEAA  48                 	db	72	;'H'
  1229  00FEAB  54                 	db	84	;'T'
  1230  00FEAC  54                 	db	84	;'T'
  1231  00FEAD  50                 	db	80	;'P'
  1232  00FEAE  50                 	db	80	;'P'
  1233  00FEAF  41                 	db	65	;'A'
  1234  00FEB0  52                 	db	82	;'R'
  1235  00FEB1  41                 	db	65	;'A'
  1236  00FEB2  3D                 	db	61	;'='
  1237  00FEB3  22                 	db	34
  1238  00FEB4  43                 	db	67	;'C'
  1239  00FEB5  49                 	db	73	;'I'
  1240  00FEB6  44                 	db	68	;'D'
  1241  00FEB7  22                 	db	34
  1242  00FEB8  2C                 	db	44
  1243  00FEB9  31                 	db	49	;'1'
  1244  00FEBA  0D                 	db	13
  1245  00FEBB  00                 	db	0
  1246  00FEBC                     STR_9:
  1247  00FEBC  41                 	db	65	;'A'
  1248  00FEBD  54                 	db	84	;'T'
  1249  00FEBE  2B                 	db	43
  1250  00FEBF  53                 	db	83	;'S'
  1251  00FEC0  41                 	db	65	;'A'
  1252  00FEC1  50                 	db	80	;'P'
  1253  00FEC2  42                 	db	66	;'B'
  1254  00FEC3  52                 	db	82	;'R'
  1255  00FEC4  3D                 	db	61	;'='
  1256  00FEC5  33                 	db	51	;'3'
  1257  00FEC6  2C                 	db	44
  1258  00FEC7  31                 	db	49	;'1'
  1259  00FEC8  2C                 	db	44
  1260  00FEC9  22                 	db	34
  1261  00FECA  41                 	db	65	;'A'
  1262  00FECB  50                 	db	80	;'P'
  1263  00FECC  4E                 	db	78	;'N'
  1264  00FECD  22                 	db	34
  1265  00FECE  2C                 	db	44
  1266  00FECF  22                 	db	34
  1267  00FED0  00                 	db	0
  1268  00FED1                     STR_23:
  1269  00FED1  46                 	db	70	;'F'
  1270  00FED2  72                 	db	114	;'r'
  1271  00FED3  61                 	db	97	;'a'
  1272  00FED4  6D                 	db	109	;'m'
  1273  00FED5  65                 	db	101	;'e'
  1274  00FED6  77                 	db	119	;'w'
  1275  00FED7  6F                 	db	111	;'o'
  1276  00FED8  72                 	db	114	;'r'
  1277  00FED9  6B                 	db	107	;'k'
  1278  00FEDA  20                 	db	32
  1279  00FEDB  56                 	db	86	;'V'
  1280  00FEDC  65                 	db	101	;'e'
  1281  00FEDD  72                 	db	114	;'r'
  1282  00FEDE  73                 	db	115	;'s'
  1283  00FEDF  69                 	db	105	;'i'
  1284  00FEE0  6F                 	db	111	;'o'
  1285  00FEE1  6E                 	db	110	;'n'
  1286  00FEE2  3A                 	db	58	;':'
  1287  00FEE3  20                 	db	32
  1288  00FEE4  00                 	db	0
  1289  00FEE5                     STR_15:
  1290  00FEE5  41                 	db	65	;'A'
  1291  00FEE6  54                 	db	84	;'T'
  1292  00FEE7  2B                 	db	43
  1293  00FEE8  48                 	db	72	;'H'
  1294  00FEE9  54                 	db	84	;'T'
  1295  00FEEA  54                 	db	84	;'T'
  1296  00FEEB  50                 	db	80	;'P'
  1297  00FEEC  50                 	db	80	;'P'
  1298  00FEED  41                 	db	65	;'A'
  1299  00FEEE  52                 	db	82	;'R'
  1300  00FEEF  41                 	db	65	;'A'
  1301  00FEF0  3D                 	db	61	;'='
  1302  00FEF1  22                 	db	34
  1303  00FEF2  55                 	db	85	;'U'
  1304  00FEF3  52                 	db	82	;'R'
  1305  00FEF4  4C                 	db	76	;'L'
  1306  00FEF5  22                 	db	34
  1307  00FEF6  2C                 	db	44
  1308  00FEF7  22                 	db	34
  1309  00FEF8  00                 	db	0
  1310  00FEF9                     STR_30:
  1311  00FEF9  41                 	db	65	;'A'
  1312  00FEFA  54                 	db	84	;'T'
  1313  00FEFB  2B                 	db	43
  1314  00FEFC  43                 	db	67	;'C'
  1315  00FEFD  4D                 	db	77	;'M'
  1316  00FEFE  47                 	db	71	;'G'
  1317  00FEFF  44                 	db	68	;'D'
  1318  00FF00  41                 	db	65	;'A'
  1319  00FF01  3D                 	db	61	;'='
  1320  00FF02  44                 	db	68	;'D'
  1321  00FF03  45                 	db	69	;'E'
  1322  00FF04  4C                 	db	76	;'L'
  1323  00FF05  20                 	db	32
  1324  00FF06  41                 	db	65	;'A'
  1325  00FF07  4C                 	db	76	;'L'
  1326  00FF08  4C                 	db	76	;'L'
  1327  00FF09  0D                 	db	13
  1328  00FF0A  0A                 	db	10
  1329  00FF0B  00                 	db	0
  1330  00FF0C                     STR_27:
  1331  00FF0C  42                 	db	66	;'B'
  1332  00FF0D  75                 	db	117	;'u'
  1333  00FF0E  69                 	db	105	;'i'
  1334  00FF0F  6C                 	db	108	;'l'
  1335  00FF10  64                 	db	100	;'d'
  1336  00FF11  20                 	db	32
  1337  00FF12  44                 	db	68	;'D'
  1338  00FF13  61                 	db	97	;'a'
  1339  00FF14  74                 	db	116	;'t'
  1340  00FF15  65                 	db	101	;'e'
  1341  00FF16  3A                 	db	58	;':'
  1342  00FF17  20                 	db	32
  1343  00FF18  25                 	db	37
  1344  00FF19  73                 	db	115	;'s'
  1345  00FF1A  0D                 	db	13
  1346  00FF1B  0A                 	db	10
  1347  00FF1C  00                 	db	0
  1348  00FF1D                     STR_16:
  1349  00FF1D  41                 	db	65	;'A'
  1350  00FF1E  54                 	db	84	;'T'
  1351  00FF1F  2B                 	db	43
  1352  00FF20  48                 	db	72	;'H'
  1353  00FF21  54                 	db	84	;'T'
  1354  00FF22  54                 	db	84	;'T'
  1355  00FF23  50                 	db	80	;'P'
  1356  00FF24  41                 	db	65	;'A'
  1357  00FF25  43                 	db	67	;'C'
  1358  00FF26  54                 	db	84	;'T'
  1359  00FF27  49                 	db	73	;'I'
  1360  00FF28  4F                 	db	79	;'O'
  1361  00FF29  4E                 	db	78	;'N'
  1362  00FF2A  3D                 	db	61	;'='
  1363  00FF2B  30                 	db	48	;'0'
  1364  00FF2C  0D                 	db	13
  1365  00FF2D  00                 	db	0
  1366  00FF2E                     STR_29:
  1367  00FF2E  41                 	db	65	;'A'
  1368  00FF2F  54                 	db	84	;'T'
  1369  00FF30  2B                 	db	43
  1370  00FF31  43                 	db	67	;'C'
  1371  00FF32  4D                 	db	77	;'M'
  1372  00FF33  47                 	db	71	;'G'
  1373  00FF34  44                 	db	68	;'D'
  1374  00FF35  3D                 	db	61	;'='
  1375  00FF36  31                 	db	49	;'1'
  1376  00FF37  2C                 	db	44
  1377  00FF38  30                 	db	48	;'0'
  1378  00FF39  0D                 	db	13
  1379  00FF3A  0A                 	db	10
  1380  00FF3B  00                 	db	0
  1381  00FF3C  41                 	db	65	;'A'
  1382  00FF3D  54                 	db	84	;'T'
  1383  00FF3E  2B                 	db	43
  1384  00FF3F  48                 	db	72	;'H'
  1385  00FF40  54                 	db	84	;'T'
  1386  00FF41  54                 	db	84	;'T'
  1387  00FF42  50                 	db	80	;'P'
  1388  00FF43  53                 	db	83	;'S'
  1389  00FF44  53                 	db	83	;'S'
  1390  00FF45  4C                 	db	76	;'L'
  1391  00FF46  3D                 	db	61	;'='
  1392  00FF47  30                 	db	48	;'0'
  1393  00FF48  0D                 	db	13
  1394  00FF49  00                 	db	0
  1395  00FF4A                     STR_10:
  1396  00FF4A  41                 	db	65	;'A'
  1397  00FF4B  54                 	db	84	;'T'
  1398  00FF4C  2B                 	db	43
  1399  00FF4D  53                 	db	83	;'S'
  1400  00FF4E  41                 	db	65	;'A'
  1401  00FF4F  50                 	db	80	;'P'
  1402  00FF50  42                 	db	66	;'B'
  1403  00FF51  52                 	db	82	;'R'
  1404  00FF52  3D                 	db	61	;'='
  1405  00FF53  31                 	db	49	;'1'
  1406  00FF54  2C                 	db	44
  1407  00FF55  31                 	db	49	;'1'
  1408  00FF56  0D                 	db	13
  1409  00FF57  00                 	db	0
  1410  00FF58                     STR_11:
  1411  00FF58  41                 	db	65	;'A'
  1412  00FF59  54                 	db	84	;'T'
  1413  00FF5A  2B                 	db	43
  1414  00FF5B  53                 	db	83	;'S'
  1415  00FF5C  41                 	db	65	;'A'
  1416  00FF5D  50                 	db	80	;'P'
  1417  00FF5E  42                 	db	66	;'B'
  1418  00FF5F  52                 	db	82	;'R'
  1419  00FF60  3D                 	db	61	;'='
  1420  00FF61  32                 	db	50	;'2'
  1421  00FF62  2C                 	db	44
  1422  00FF63  31                 	db	49	;'1'
  1423  00FF64  0D                 	db	13
  1424  00FF65  00                 	db	0
  1425  00FF66                     STR_13:
  1426  00FF66  41                 	db	65	;'A'
  1427  00FF67  54                 	db	84	;'T'
  1428  00FF68  2B                 	db	43
  1429  00FF69  48                 	db	72	;'H'
  1430  00FF6A  54                 	db	84	;'T'
  1431  00FF6B  54                 	db	84	;'T'
  1432  00FF6C  50                 	db	80	;'P'
  1433  00FF6D  53                 	db	83	;'S'
  1434  00FF6E  53                 	db	83	;'S'
  1435  00FF6F  4C                 	db	76	;'L'
  1436  00FF70  3D                 	db	61	;'='
  1437  00FF71  31                 	db	49	;'1'
  1438  00FF72  0D                 	db	13
  1439  00FF73  00                 	db	0
  1440  00FF74                     STR_2:
  1441  00FF74  41                 	db	65	;'A'
  1442  00FF75  54                 	db	84	;'T'
  1443  00FF76  2B                 	db	43
  1444  00FF77  49                 	db	73	;'I'
  1445  00FF78  50                 	db	80	;'P'
  1446  00FF79  52                 	db	82	;'R'
  1447  00FF7A  3D                 	db	61	;'='
  1448  00FF7B  39                 	db	57	;'9'
  1449  00FF7C  36                 	db	54	;'6'
  1450  00FF7D  30                 	db	48	;'0'
  1451  00FF7E  30                 	db	48	;'0'
  1452  00FF7F  0D                 	db	13
  1453  00FF80  0A                 	db	10
  1454  00FF81  00                 	db	0
  1455  00FF82                     STR_17:
  1456  00FF82  41                 	db	65	;'A'
  1457  00FF83  54                 	db	84	;'T'
  1458  00FF84  2B                 	db	43
  1459  00FF85  48                 	db	72	;'H'
  1460  00FF86  54                 	db	84	;'T'
  1461  00FF87  54                 	db	84	;'T'
  1462  00FF88  50                 	db	80	;'P'
  1463  00FF89  52                 	db	82	;'R'
  1464  00FF8A  45                 	db	69	;'E'
  1465  00FF8B  41                 	db	65	;'A'
  1466  00FF8C  44                 	db	68	;'D'
  1467  00FF8D  0D                 	db	13
  1468  00FF8E  00                 	db	0
  1469  00FF8F                     STR_18:
  1470  00FF8F  41                 	db	65	;'A'
  1471  00FF90  54                 	db	84	;'T'
  1472  00FF91  2B                 	db	43
  1473  00FF92  48                 	db	72	;'H'
  1474  00FF93  54                 	db	84	;'T'
  1475  00FF94  54                 	db	84	;'T'
  1476  00FF95  50                 	db	80	;'P'
  1477  00FF96  54                 	db	84	;'T'
  1478  00FF97  45                 	db	69	;'E'
  1479  00FF98  52                 	db	82	;'R'
  1480  00FF99  4D                 	db	77	;'M'
  1481  00FF9A  0D                 	db	13
  1482  00FF9B  00                 	db	0
  1483  00FF9C                     STR_12:
  1484  00FF9C  41                 	db	65	;'A'
  1485  00FF9D  54                 	db	84	;'T'
  1486  00FF9E  2B                 	db	43
  1487  00FF9F  48                 	db	72	;'H'
  1488  00FFA0  54                 	db	84	;'T'
  1489  00FFA1  54                 	db	84	;'T'
  1490  00FFA2  50                 	db	80	;'P'
  1491  00FFA3  49                 	db	73	;'I'
  1492  00FFA4  4E                 	db	78	;'N'
  1493  00FFA5  49                 	db	73	;'I'
  1494  00FFA6  54                 	db	84	;'T'
  1495  00FFA7  0D                 	db	13
  1496  00FFA8  00                 	db	0
  1497  00FFA9                     STR_31:
  1498  00FFA9  41                 	db	65	;'A'
  1499  00FFAA  54                 	db	84	;'T'
  1500  00FFAB  2B                 	db	43
  1501  00FFAC  43                 	db	67	;'C'
  1502  00FFAD  4C                 	db	76	;'L'
  1503  00FFAE  49                 	db	73	;'I'
  1504  00FFAF  50                 	db	80	;'P'
  1505  00FFB0  3D                 	db	61	;'='
  1506  00FFB1  31                 	db	49	;'1'
  1507  00FFB2  0D                 	db	13
  1508  00FFB3  0A                 	db	10
  1509  00FFB4  00                 	db	0
  1510  00FFB5                     STR_28:
  1511  00FFB5  41                 	db	65	;'A'
  1512  00FFB6  70                 	db	112	;'p'
  1513  00FFB7  72                 	db	114	;'r'
  1514  00FFB8  20                 	db	32
  1515  00FFB9  20                 	db	32
  1516  00FFBA  33                 	db	51	;'3'
  1517  00FFBB  20                 	db	32
  1518  00FFBC  32                 	db	50	;'2'
  1519  00FFBD  30                 	db	48	;'0'
  1520  00FFBE  32                 	db	50	;'2'
  1521  00FFBF  32                 	db	50	;'2'
  1522  00FFC0  00                 	db	0
  1523  00FFC1                     STR_4:
  1524  00FFC1  41                 	db	65	;'A'
  1525  00FFC2  54                 	db	84	;'T'
  1526  00FFC3  2B                 	db	43
  1527  00FFC4  43                 	db	67	;'C'
  1528  00FFC5  4D                 	db	77	;'M'
  1529  00FFC6  47                 	db	71	;'G'
  1530  00FFC7  52                 	db	82	;'R'
  1531  00FFC8  3D                 	db	61	;'='
  1532  00FFC9  31                 	db	49	;'1'
  1533  00FFCA  0D                 	db	13
  1534  00FFCB  0A                 	db	10
  1535  00FFCC  00                 	db	0
  1536  00FFCD                     STR_5:
  1537  00FFCD  41                 	db	65	;'A'
  1538  00FFCE  54                 	db	84	;'T'
  1539  00FFCF  2B                 	db	43
  1540  00FFD0  43                 	db	67	;'C'
  1541  00FFD1  4D                 	db	77	;'M'
  1542  00FFD2  47                 	db	71	;'G'
  1543  00FFD3  53                 	db	83	;'S'
  1544  00FFD4  3D                 	db	61	;'='
  1545  00FFD5  22                 	db	34
  1546  00FFD6  00                 	db	0
  1547  00FFD7                     STR_32:
  1548  00FFD7  28                 	db	40
  1549  00FFD8  6E                 	db	110	;'n'
  1550  00FFD9  75                 	db	117	;'u'
  1551  00FFDA  6C                 	db	108	;'l'
  1552  00FFDB  6C                 	db	108	;'l'
  1553  00FFDC  29                 	db	41
  1554  00FFDD  00                 	db	0
  1555  00FFDE                     STR_3:
  1556  00FFDE  41                 	db	65	;'A'
  1557  00FFDF  54                 	db	84	;'T'
  1558  00FFE0  45                 	db	69	;'E'
  1559  00FFE1  30                 	db	48	;'0'
  1560  00FFE2  0D                 	db	13
  1561  00FFE3  0A                 	db	10
  1562  00FFE4  00                 	db	0
  1563  00FFE5                     STR_1:
  1564  00FFE5  41                 	db	65	;'A'
  1565  00FFE6  54                 	db	84	;'T'
  1566  00FFE7  0D                 	db	13
  1567  00FFE8  0A                 	db	10
  1568  00FFE9  00                 	db	0
  1569  00FFEA  41                 	db	65	;'A'
  1570  00FFEB  54                 	db	84	;'T'
  1571  00FFEC  41                 	db	65	;'A'
  1572  00FFED  0D                 	db	13
  1573  00FFEE  00                 	db	0
  1574  00FFEF                     STR_6:
  1575  00FFEF  41                 	db	65	;'A'
  1576  00FFF0  54                 	db	84	;'T'
  1577  00FFF1  48                 	db	72	;'H'
  1578  00FFF2  0D                 	db	13
  1579  00FFF3  00                 	db	0
  1580  00FFF4                     STR_24:
  1581  00FFF4  2E                 	db	46
  1582  00FFF5  00                 	db	0
  1583  0000                     
  1584                           ; #config settings
  1585  00FFF6  00                 	db	0	; dummy byte at the end
  1586  0000                     
  1587                           	psect	cinit
  1588  0022E4                     __pcinit:
  1589                           	opt stack 0
  1590  0022E4                     start_initialization:
  1591                           	opt stack 0
  1592  0022E4                     __initialization:
  1593                           	opt stack 0
  1594                           
  1595                           ; Initialize objects allocated to BANK5 (80 bytes)
  1596                           ; load TBLPTR registers with __pidataBANK5
  1597  0022E4  0E42               	movlw	low __pidataBANK5
  1598  0022E6  6EF6               	movwf	tblptrl,c
  1599  0022E8  0E5F               	movlw	high __pidataBANK5
  1600  0022EA  6EF7               	movwf	tblptrh,c
  1601  0022EC  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1602  0022EE  6EF8               	movwf	tblptru,c
  1603  0022F0  EE05  F086         	lfsr	0,__pdataBANK5
  1604  0022F4  EE10 F050          	lfsr	1,80
  1605  0022F8                     copy_data0:
  1606  0022F8  0009               	tblrd		*+
  1607  0022FA  CFF5 FFEE          	movff	tablat,postinc0
  1608  0022FE  50E5               	movf	postdec1,w,c
  1609  002300  50E1               	movf	fsr1l,w,c
  1610  002302  E1FA               	bnz	copy_data0
  1611                           
  1612                           ; Initialize objects allocated to BANK3 (60 bytes)
  1613                           ; load TBLPTR registers with __pidataBANK3
  1614  002304  0E18               	movlw	low __pidataBANK3
  1615  002306  6EF6               	movwf	tblptrl,c
  1616  002308  0E65               	movlw	high __pidataBANK3
  1617  00230A  6EF7               	movwf	tblptrh,c
  1618  00230C  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1619  00230E  6EF8               	movwf	tblptru,c
  1620  002310  EE03  F0C3         	lfsr	0,__pdataBANK3
  1621  002314  EE10 F03C          	lfsr	1,60
  1622  002318                     copy_data1:
  1623  002318  0009               	tblrd		*+
  1624  00231A  CFF5 FFEE          	movff	tablat,postinc0
  1625  00231E  50E5               	movf	postdec1,w,c
  1626  002320  50E1               	movf	fsr1l,w,c
  1627  002322  E1FA               	bnz	copy_data1
  1628                           
  1629                           ; Initialize objects allocated to BANK2 (15 bytes)
  1630                           ; load TBLPTR registers with __pidataBANK2
  1631  002324  0E54               	movlw	low __pidataBANK2
  1632  002326  6EF6               	movwf	tblptrl,c
  1633  002328  0E6D               	movlw	high __pidataBANK2
  1634  00232A  6EF7               	movwf	tblptrh,c
  1635  00232C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1636  00232E  6EF8               	movwf	tblptru,c
  1637  002330  EE02  F0F1         	lfsr	0,__pdataBANK2
  1638  002334  EE10 F00F          	lfsr	1,15
  1639  002338                     copy_data2:
  1640  002338  0009               	tblrd		*+
  1641  00233A  CFF5 FFEE          	movff	tablat,postinc0
  1642  00233E  50E5               	movf	postdec1,w,c
  1643  002340  50E1               	movf	fsr1l,w,c
  1644  002342  E1FA               	bnz	copy_data2
  1645                           
  1646                           ; Initialize objects allocated to BANK1 (2 bytes)
  1647                           ; load TBLPTR registers with __pidataBANK1
  1648  002344  0E05               	movlw	low __pidataBANK1
  1649  002346  6EF6               	movwf	tblptrl,c
  1650  002348  0E6E               	movlw	high __pidataBANK1
  1651  00234A  6EF7               	movwf	tblptrh,c
  1652  00234C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1653  00234E  6EF8               	movwf	tblptru,c
  1654  002350  0009               	tblrd		*+	;fetch initializer
  1655  002352  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1656  002356  0009               	tblrd		*+	;fetch initializer
  1657  002358  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1658                           
  1659                           ; Initialize objects allocated to BANK4 (10 bytes)
  1660                           ; load TBLPTR registers with __pidataBANK4
  1661  00235C  0E96               	movlw	low __pidataBANK4
  1662  00235E  6EF6               	movwf	tblptrl,c
  1663  002360  0E6D               	movlw	high __pidataBANK4
  1664  002362  6EF7               	movwf	tblptrh,c
  1665  002364  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1666  002366  6EF8               	movwf	tblptru,c
  1667  002368  EE04  F0EF         	lfsr	0,__pdataBANK4
  1668  00236C  EE10 F00A          	lfsr	1,10
  1669  002370                     copy_data3:
  1670  002370  0009               	tblrd		*+
  1671  002372  CFF5 FFEE          	movff	tablat,postinc0
  1672  002376  50E5               	movf	postdec1,w,c
  1673  002378  50E1               	movf	fsr1l,w,c
  1674  00237A  E1FA               	bnz	copy_data3
  1675                           
  1676                           ; Initialize objects allocated to BANK0 (3 bytes)
  1677                           ; load TBLPTR registers with __pidataBANK0
  1678  00237C  0E02               	movlw	low __pidataBANK0
  1679  00237E  6EF6               	movwf	tblptrl,c
  1680  002380  0E6E               	movlw	high __pidataBANK0
  1681  002382  6EF7               	movwf	tblptrh,c
  1682  002384  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1683  002386  6EF8               	movwf	tblptru,c
  1684  002388  0009               	tblrd		*+	;fetch initializer
  1685  00238A  CFF5 F0E0          	movff	tablat,__pdataBANK0
  1686  00238E  0009               	tblrd		*+	;fetch initializer
  1687  002390  CFF5 F0E1          	movff	tablat,__pdataBANK0+1
  1688  002394  0009               	tblrd		*+	;fetch initializer
  1689  002396  CFF5 F0E2          	movff	tablat,__pdataBANK0+2
  1690                           
  1691                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1692  00239A  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1693  00239E  EE13 F020          	lfsr	1,800
  1694  0023A2                     clear_0:
  1695  0023A2  6AEE               	clrf	postinc0,c
  1696  0023A4  50E5               	movf	postdec1,w,c
  1697  0023A6  50E1               	movf	fsr1l,w,c
  1698  0023A8  E1FC               	bnz	clear_0
  1699  0023AA  50E2               	movf	fsr1h,w,c
  1700  0023AC  E1FA               	bnz	clear_0
  1701                           
  1702                           ; Clear objects allocated to BANK9 (200 bytes)
  1703  0023AE  EE09  F000         	lfsr	0,__pbssBANK9
  1704  0023B2  0EC8               	movlw	200
  1705  0023B4                     clear_1:
  1706  0023B4  6AEE               	clrf	postinc0,c
  1707  0023B6  06E8               	decf	wreg,f,c
  1708  0023B8  E1FD               	bnz	clear_1
  1709                           
  1710                           ; Clear objects allocated to BANK8 (250 bytes)
  1711  0023BA  EE08  F000         	lfsr	0,__pbssBANK8
  1712  0023BE  0EFA               	movlw	250
  1713  0023C0                     clear_2:
  1714  0023C0  6AEE               	clrf	postinc0,c
  1715  0023C2  06E8               	decf	wreg,f,c
  1716  0023C4  E1FD               	bnz	clear_2
  1717                           
  1718                           ; Clear objects allocated to BANK7 (246 bytes)
  1719  0023C6  EE07  F000         	lfsr	0,__pbssBANK7
  1720  0023CA  0EF6               	movlw	246
  1721  0023CC                     clear_3:
  1722  0023CC  6AEE               	clrf	postinc0,c
  1723  0023CE  06E8               	decf	wreg,f,c
  1724  0023D0  E1FD               	bnz	clear_3
  1725                           
  1726                           ; Clear objects allocated to BANK6 (220 bytes)
  1727  0023D2  EE06  F000         	lfsr	0,__pbssBANK6
  1728  0023D6  0EDC               	movlw	220
  1729  0023D8                     clear_4:
  1730  0023D8  6AEE               	clrf	postinc0,c
  1731  0023DA  06E8               	decf	wreg,f,c
  1732  0023DC  E1FD               	bnz	clear_4
  1733                           
  1734                           ; Clear objects allocated to BANK5 (134 bytes)
  1735  0023DE  EE05  F000         	lfsr	0,__pbssBANK5
  1736  0023E2  0E86               	movlw	134
  1737  0023E4                     clear_5:
  1738  0023E4  6AEE               	clrf	postinc0,c
  1739  0023E6  06E8               	decf	wreg,f,c
  1740  0023E8  E1FD               	bnz	clear_5
  1741                           
  1742                           ; Clear objects allocated to BANK3 (195 bytes)
  1743  0023EA  EE03  F000         	lfsr	0,__pbssBANK3
  1744  0023EE  0EC3               	movlw	195
  1745  0023F0                     clear_6:
  1746  0023F0  6AEE               	clrf	postinc0,c
  1747  0023F2  06E8               	decf	wreg,f,c
  1748  0023F4  E1FD               	bnz	clear_6
  1749                           
  1750                           ; Clear objects allocated to BANK2 (40 bytes)
  1751  0023F6  EE02  F0C9         	lfsr	0,__pbssBANK2
  1752  0023FA  0E28               	movlw	40
  1753  0023FC                     clear_7:
  1754  0023FC  6AEE               	clrf	postinc0,c
  1755  0023FE  06E8               	decf	wreg,f,c
  1756  002400  E1FD               	bnz	clear_7
  1757                           
  1758                           ; Clear objects allocated to BANK1 (53 bytes)
  1759  002402  EE01  F0C9         	lfsr	0,__pbssBANK1
  1760  002406  0E35               	movlw	53
  1761  002408                     clear_8:
  1762  002408  6AEE               	clrf	postinc0,c
  1763  00240A  06E8               	decf	wreg,f,c
  1764  00240C  E1FD               	bnz	clear_8
  1765                           
  1766                           ; Clear objects allocated to BANK4 (175 bytes)
  1767  00240E  EE04  F040         	lfsr	0,__pbssBANK4
  1768  002412  0EAF               	movlw	175
  1769  002414                     clear_9:
  1770  002414  6AEE               	clrf	postinc0,c
  1771  002416  06E8               	decf	wreg,f,c
  1772  002418  E1FD               	bnz	clear_9
  1773                           
  1774                           ; Clear objects allocated to BANK0 (48 bytes)
  1775  00241A  EE00  F0B0         	lfsr	0,__pbssBANK0
  1776  00241E  0E30               	movlw	48
  1777  002420                     clear_10:
  1778  002420  6AEE               	clrf	postinc0,c
  1779  002422  06E8               	decf	wreg,f,c
  1780  002424  E1FD               	bnz	clear_10
  1781                           
  1782                           ; Clear objects allocated to COMRAM (31 bytes)
  1783  002426  EE00  F023         	lfsr	0,__pbssCOMRAM
  1784  00242A  0E1F               	movlw	31
  1785  00242C                     clear_11:
  1786  00242C  6AEE               	clrf	postinc0,c
  1787  00242E  06E8               	decf	wreg,f,c
  1788  002430  E1FD               	bnz	clear_11
  1789  002432                     end_of_initialization:
  1790                           	opt stack 0
  1791  002432                     __end_of__initialization:
  1792                           	opt stack 0
  1793  002432  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1794  002434  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1795  002436  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1796  002438  6EF8               	movwf	tblptru,c
  1797  00243A  0100               	movlb	0
  1798  00243C  EFB9  F036         	goto	_main	;jump to C main() function
  1799                           tblptru	equ	0xFF8
  1800                           tblptrh	equ	0xFF7
  1801                           tblptrl	equ	0xFF6
  1802                           tablat	equ	0xFF5
  1803                           postinc0	equ	0xFEE
  1804                           wreg	equ	0xFE8
  1805                           postdec1	equ	0xFE5
  1806                           fsr1h	equ	0xFE2
  1807                           fsr1l	equ	0xFE1
  1808                           
  1809                           	psect	bssCOMRAM
  1810  000023                     __pbssCOMRAM:
  1811                           	opt stack 0
  1812  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1813                           	opt stack 0
  1814  000023                     	ds	2
  1815  000025                     _USBDeferOUTDataStagePackets:
  1816                           	opt stack 0
  1817  000025                     	ds	1
  1818  000026                     _USBDeferINDataStagePackets:
  1819                           	opt stack 0
  1820  000026                     	ds	1
  1821  000027                     _USBStatusStageEnabledFlag2:
  1822                           	opt stack 0
  1823  000027                     	ds	1
  1824  000028                     _USBStatusStageEnabledFlag1:
  1825                           	opt stack 0
  1826  000028                     	ds	1
  1827  000029                     _USBStatusStageTimeoutCounter:
  1828                           	opt stack 0
  1829  000029                     	ds	1
  1830  00002A                     InitGprsNetwork@GprsNetInitNextState:
  1831                           	opt stack 0
  1832  00002A                     	ds	1
  1833  00002B                     _ComChecCompleted:
  1834                           	opt stack 0
  1835  00002B                     	ds	1
  1836  00002C                     Uart_Uart1RxIsr@UartRxData:
  1837                           	opt stack 0
  1838  00002C                     	ds	1
  1839  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1840                           	opt stack 0
  1841  00002D                     	ds	1
  1842  00002E                     MdmCntSm@MdmCntState:
  1843                           	opt stack 0
  1844  00002E                     	ds	1
  1845  00002F                     RiSm@MdmDrvState:
  1846                           	opt stack 0
  1847  00002F                     	ds	1
  1848  000030                     _Mmd_RingIndicator:
  1849                           	opt stack 0
  1850  000030                     	ds	1
  1851  000031                     I2c_ReadData@ReadStatus:
  1852                           	opt stack 0
  1853  000031                     	ds	1
  1854  000032                     I2c_ReadData@TentativeCounter:
  1855                           	opt stack 0
  1856  000032                     	ds	1
  1857  000033                     I2c_ReadData@DataCounter:
  1858                           	opt stack 0
  1859  000033                     	ds	1
  1860  000034                     I2c_ReadData@I2cReadState:
  1861                           	opt stack 0
  1862  000034                     	ds	1
  1863  000035                     I2c_WriteData@WriteStatus:
  1864                           	opt stack 0
  1865  000035                     	ds	1
  1866  000036                     I2c_WriteData@TentativeCounter:
  1867                           	opt stack 0
  1868  000036                     	ds	1
  1869  000037                     I2c_WriteData@I2cNextState:
  1870                           	opt stack 0
  1871  000037                     	ds	1
  1872  000038                     I2c_WriteData@I2cWriteState:
  1873                           	opt stack 0
  1874  000038                     	ds	1
  1875  000039                     _I2cReadDataEvt:
  1876                           	opt stack 0
  1877  000039                     	ds	1
  1878  00003A                     _NewStringMdmTerminal:
  1879                           	opt stack 0
  1880  00003A                     	ds	1
  1881  00003B                     _NewMdmEvtParserRequest:
  1882                           	opt stack 0
  1883  00003B                     	ds	1
  1884  00003C                     _NewStringReceived:
  1885                           	opt stack 0
  1886  00003C                     	ds	1
  1887  00003D                     _MdmResetRequest:
  1888                           	opt stack 0
  1889  00003D                     	ds	1
  1890  00003E                     _CallClosedEvent:
  1891                           	opt stack 0
  1892  00003E                     	ds	1
  1893  00003F                     _IncomingCallEvent:
  1894                           	opt stack 0
  1895  00003F                     	ds	1
  1896  000040                     _NewSmsEvent:
  1897                           	opt stack 0
  1898  000040                     	ds	1
  1899  000041                     _ActivateRiDetection:
  1900                           	opt stack 0
  1901  000041                     	ds	1
  1902                           tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           postinc0	equ	0xFEE
  1907                           wreg	equ	0xFE8
  1908                           postdec1	equ	0xFE5
  1909                           fsr1h	equ	0xFE2
  1910                           fsr1l	equ	0xFE1
  1911                           
  1912                           	psect	bssBANK0
  1913  0000B0                     __pbssBANK0:
  1914                           	opt stack 0
  1915  0000B0                     _inPipes:
  1916                           	opt stack 0
  1917  0000B0                     	ds	6
  1918  0000B6                     _pBDTEntryIn:
  1919                           	opt stack 0
  1920  0000B6                     	ds	6
  1921  0000BC                     _CDCDataOutHandle:
  1922                           	opt stack 0
  1923  0000BC                     	ds	2
  1924  0000BE                     _pBDTEntryEP0OutNext:
  1925                           	opt stack 0
  1926  0000BE                     	ds	2
  1927  0000C0                     _pBDTEntryEP0OutCurrent:
  1928                           	opt stack 0
  1929  0000C0                     	ds	2
  1930  0000C2                     _RxLen:
  1931                           	opt stack 0
  1932  0000C2                     	ds	2
  1933  0000C4                     findEmptySpot@currentState:
  1934                           	opt stack 0
  1935  0000C4                     	ds	1
  1936  0000C5                     isNumberInMemory@currentState:
  1937                           	opt stack 0
  1938  0000C5                     	ds	1
  1939  0000C6                     Eeprom_Reset@memoryAddress:
  1940                           	opt stack 0
  1941  0000C6                     	ds	1
  1942  0000C7                     _cdc_tx_len:
  1943                           	opt stack 0
  1944  0000C7                     	ds	1
  1945  0000C8                     _cdc_trf_state:
  1946                           	opt stack 0
  1947  0000C8                     	ds	1
  1948  0000C9                     _cdc_rx_len:
  1949                           	opt stack 0
  1950  0000C9                     	ds	1
  1951  0000CA                     _USBDeferStatusStagePacket:
  1952                           	opt stack 0
  1953  0000CA                     	ds	1
  1954  0000CB                     _endpoint_number:
  1955                           	opt stack 0
  1956  0000CB                     	ds	1
  1957  0000CC                     _controlTransferState:
  1958                           	opt stack 0
  1959  0000CC                     	ds	1
  1960  0000CD                     _shortPacketStatus:
  1961                           	opt stack 0
  1962  0000CD                     	ds	1
  1963  0000CE                     _USBDeviceState:
  1964                           	opt stack 0
  1965  0000CE                     	ds	1
  1966  0000CF                     _I2cComSts:
  1967                           	opt stack 0
  1968  0000CF                     	ds	1
  1969  0000D0                     HttpGetMethod@GetMethodNextState:
  1970                           	opt stack 0
  1971  0000D0                     	ds	1
  1972  0000D1                     _MdmStatus:
  1973                           	opt stack 0
  1974  0000D1                     	ds	1
  1975  0000D2                     _PhoneNumbLen:
  1976                           	opt stack 0
  1977  0000D2                     	ds	1
  1978  0000D3                     _SmsLen:
  1979                           	opt stack 0
  1980  0000D3                     	ds	1
  1981  0000D4                     _SystemState:
  1982                           	opt stack 0
  1983  0000D4                     	ds	1
  1984  0000D5                     _USTATcopy:
  1985                           	opt stack 0
  1986  0000D5                     	ds	1
  1987  0000D6                     _USBActiveConfiguration:
  1988                           	opt stack 0
  1989  0000D6                     	ds	1
  1990  0000D7                     _I2cWriteDataEvt:
  1991                           	opt stack 0
  1992  0000D7                     	ds	1
  1993  0000D8                     _InitNetwork:
  1994                           	opt stack 0
  1995  0000D8                     	ds	1
  1996  0000D9                     _SmsTxtReady:
  1997                           	opt stack 0
  1998  0000D9                     	ds	1
  1999  0000DA                     _GetSmsText:
  2000                           	opt stack 0
  2001  0000DA                     	ds	1
  2002  0000DB                     _SmsEvent:
  2003                           	opt stack 0
  2004  0000DB                     	ds	1
  2005  0000DC                     _ClipEvent:
  2006                           	opt stack 0
  2007  0000DC                     	ds	1
  2008  0000DD                     _RingEvent:
  2009                           	opt stack 0
  2010  0000DD                     	ds	1
  2011  0000DE                     _SendSmsEvent:
  2012                           	opt stack 0
  2013  0000DE                     	ds	1
  2014  0000DF                     _MdmOnOffPulseRequest:
  2015                           	opt stack 0
  2016  0000DF                     	ds	1
  2017                           tblptru	equ	0xFF8
  2018                           tblptrh	equ	0xFF7
  2019                           tblptrl	equ	0xFF6
  2020                           tablat	equ	0xFF5
  2021                           postinc0	equ	0xFEE
  2022                           wreg	equ	0xFE8
  2023                           postdec1	equ	0xFE5
  2024                           fsr1h	equ	0xFE2
  2025                           fsr1l	equ	0xFE1
  2026                           
  2027                           	psect	dataBANK0
  2028  0000E0                     __pdataBANK0:
  2029                           	opt stack 0
  2030  0000E0                     findEmptySpot@currentPosition:
  2031                           	opt stack 0
  2032  0000E0                     	ds	1
  2033  0000E1                     isNumberInMemory@currentPosition:
  2034                           	opt stack 0
  2035  0000E1                     	ds	1
  2036  0000E2                     MyApp_Task@isCmdSuccessfull:
  2037                           	opt stack 0
  2038  0000E2                     	ds	1
  2039                           tblptru	equ	0xFF8
  2040                           tblptrh	equ	0xFF7
  2041                           tblptrl	equ	0xFF6
  2042                           tablat	equ	0xFF5
  2043                           postinc0	equ	0xFEE
  2044                           wreg	equ	0xFE8
  2045                           postdec1	equ	0xFE5
  2046                           fsr1h	equ	0xFE2
  2047                           fsr1l	equ	0xFE1
  2048                           
  2049                           	psect	bssBANK1
  2050  0001C9                     __pbssBANK1:
  2051                           	opt stack 0
  2052  0001C9                     _outPipes:
  2053                           	opt stack 0
  2054  0001C9                     	ds	8
  2055  0001D1                     _CDCDataInHandle:
  2056                           	opt stack 0
  2057  0001D1                     	ds	2
  2058  0001D3                     triggerCmdFsm@currentState:
  2059                           	opt stack 0
  2060  0001D3                     	ds	1
  2061  0001D4                     resCmdFsm@currentState:
  2062                           	opt stack 0
  2063  0001D4                     	ds	1
  2064  0001D5                     initFsm@currentState:
  2065                           	opt stack 0
  2066  0001D5                     	ds	1
  2067  0001D6                     initEeprom@currentState:
  2068                           	opt stack 0
  2069  0001D6                     	ds	1
  2070  0001D7                     initGprsModem@currentState:
  2071                           	opt stack 0
  2072  0001D7                     	ds	1
  2073  0001D8                     delCmdFsm@currentState:
  2074                           	opt stack 0
  2075  0001D8                     	ds	1
  2076  0001D9                     addCmdFsm@currentState:
  2077                           	opt stack 0
  2078  0001D9                     	ds	1
  2079  0001DA                     MyApp_Task@currentState:
  2080                           	opt stack 0
  2081  0001DA                     	ds	1
  2082  0001DB                     GsmGprsTerminal@SMS:
  2083                           	opt stack 0
  2084  0001DB                     	ds	1
  2085  0001DC                     _cdc_mem_type:
  2086                           	opt stack 0
  2087  0001DC                     	ds	1
  2088  0001DD                     _USBTicksSinceSuspendEnd:
  2089                           	opt stack 0
  2090  0001DD                     	ds	1
  2091  0001DE                     _BothEP0OutUOWNsSet:
  2092                           	opt stack 0
  2093  0001DE                     	ds	1
  2094  0001DF                     _USBBusIsSuspended:
  2095                           	opt stack 0
  2096  0001DF                     	ds	1
  2097  0001E0                     _RemoteWakeup:
  2098                           	opt stack 0
  2099  0001E0                     	ds	1
  2100  0001E1                     I2cSlv_QueryI2cData@Ret:
  2101                           	opt stack 0
  2102  0001E1                     	ds	1
  2103  0001E2                     I2cSlv_QueryI2cData@I2cOpState:
  2104                           	opt stack 0
  2105  0001E2                     	ds	1
  2106  0001E3                     I2cSendMsgSm@I2cComState:
  2107                           	opt stack 0
  2108  0001E3                     	ds	1
  2109  0001E4                     _I2cBusStatus:
  2110                           	opt stack 0
  2111  0001E4                     	ds	1
  2112  0001E5                     HttpGetMethod@GetMOutSts:
  2113                           	opt stack 0
  2114  0001E5                     	ds	1
  2115  0001E6                     HttpGetMethod@GetMethodState:
  2116                           	opt stack 0
  2117  0001E6                     	ds	1
  2118  0001E7                     InitGprsNetwork@GprsNetInitState:
  2119                           	opt stack 0
  2120  0001E7                     	ds	1
  2121  0001E8                     _PostMethod:
  2122                           	opt stack 0
  2123  0001E8                     	ds	1
  2124  0001E9                     _HttpGetMethodSts:
  2125                           	opt stack 0
  2126  0001E9                     	ds	1
  2127  0001EA                     _GprsNetworkSts:
  2128                           	opt stack 0
  2129  0001EA                     	ds	1
  2130  0001EB                     _ApnLenLocal:
  2131                           	opt stack 0
  2132  0001EB                     	ds	1
  2133  0001EC                     SendSmsSm@SendSms_NextState:
  2134                           	opt stack 0
  2135  0001EC                     	ds	1
  2136  0001ED                     SendSmsSm@SendSms_State:
  2137                           	opt stack 0
  2138  0001ED                     	ds	1
  2139  0001EE                     GetSmsSm@GetSmsState:
  2140                           	opt stack 0
  2141  0001EE                     	ds	1
  2142  0001EF                     ConfigureModem@NextState:
  2143                           	opt stack 0
  2144  0001EF                     	ds	1
  2145  0001F0                     ConfigureModem@MdmConfigState:
  2146                           	opt stack 0
  2147  0001F0                     	ds	1
  2148  0001F1                     TurnOnModem@TurnOnMdmState:
  2149                           	opt stack 0
  2150  0001F1                     	ds	1
  2151  0001F2                     CheckModem@CheckMdmSts:
  2152                           	opt stack 0
  2153  0001F2                     	ds	1
  2154  0001F3                     _AlarmEvent:
  2155                           	opt stack 0
  2156  0001F3                     	ds	1
  2157  0001F4                     _Led3OutSts:
  2158                           	opt stack 0
  2159  0001F4                     	ds	1
  2160  0001F5                     _Led3Sts:
  2161                           	opt stack 0
  2162  0001F5                     	ds	1
  2163  0001F6                     _Led2OutSts:
  2164                           	opt stack 0
  2165  0001F6                     	ds	1
  2166  0001F7                     _Led2Sts:
  2167                           	opt stack 0
  2168  0001F7                     	ds	1
  2169  0001F8                     _Led1OutSts:
  2170                           	opt stack 0
  2171  0001F8                     	ds	1
  2172  0001F9                     _Led1Sts:
  2173                           	opt stack 0
  2174  0001F9                     	ds	1
  2175  0001FA                     _ReadAddress:
  2176                           	opt stack 0
  2177  0001FA                     	ds	1
  2178  0001FB                     I2cDummyTx@DummyBuffer:
  2179                           	opt stack 0
  2180  0001FB                     	ds	1
  2181  0001FC                     _GetMethod:
  2182                           	opt stack 0
  2183  0001FC                     	ds	1
  2184  0001FD                     _MdmStsReady:
  2185                           	opt stack 0
  2186  0001FD                     	ds	1
  2187                           tblptru	equ	0xFF8
  2188                           tblptrh	equ	0xFF7
  2189                           tblptrl	equ	0xFF6
  2190                           tablat	equ	0xFF5
  2191                           postinc0	equ	0xFEE
  2192                           wreg	equ	0xFE8
  2193                           postdec1	equ	0xFE5
  2194                           fsr1h	equ	0xFE2
  2195                           fsr1l	equ	0xFE1
  2196                           
  2197                           	psect	dataBANK1
  2198  0001FE                     __pdataBANK1:
  2199                           	opt stack 0
  2200  0001FE                     _isMemoryEmpty:
  2201                           	opt stack 0
  2202  0001FE                     	ds	1
  2203  0001FF                     InitGprsNetwork@GprsInitSts:
  2204                           	opt stack 0
  2205  0001FF                     	ds	1
  2206                           tblptru	equ	0xFF8
  2207                           tblptrh	equ	0xFF7
  2208                           tblptrl	equ	0xFF6
  2209                           tablat	equ	0xFF5
  2210                           postinc0	equ	0xFEE
  2211                           wreg	equ	0xFE8
  2212                           postdec1	equ	0xFE5
  2213                           fsr1h	equ	0xFE2
  2214                           fsr1l	equ	0xFE1
  2215                           
  2216                           	psect	bssBANK2
  2217  0002C9                     __pbssBANK2:
  2218                           	opt stack 0
  2219  0002C9                     _pCDCDst:
  2220                           	opt stack 0
  2221  0002C9                     	ds	3
  2222  0002CC                     _pCDCSrc:
  2223                           	opt stack 0
  2224  0002CC                     	ds	3
  2225  0002CF                     _ep_data_out:
  2226                           	opt stack 0
  2227  0002CF                     	ds	3
  2228  0002D2                     _ep_data_in:
  2229                           	opt stack 0
  2230  0002D2                     	ds	3
  2231  0002D5                     _pDst:
  2232                           	opt stack 0
  2233  0002D5                     	ds	2
  2234  0002D7                     UpdateSchFlag@InterruptCounter:
  2235                           	opt stack 0
  2236  0002D7                     	ds	2
  2237  0002D9                     MdmCntSm@Counter:
  2238                           	opt stack 0
  2239  0002D9                     	ds	2
  2240  0002DB                     RiSm@Counter:
  2241                           	opt stack 0
  2242  0002DB                     	ds	2
  2243  0002DD                     _ExtInt1IsrCallback:
  2244                           	opt stack 0
  2245  0002DD                     	ds	2
  2246  0002DF                     _ExtInt0IsrCallback:
  2247                           	opt stack 0
  2248  0002DF                     	ds	2
  2249  0002E1                     _RtccIsrCallback:
  2250                           	opt stack 0
  2251  0002E1                     	ds	2
  2252  0002E3                     _Tmr4IsrCallback:
  2253                           	opt stack 0
  2254  0002E3                     	ds	2
  2255  0002E5                     _Tmr2IsrCallback:
  2256                           	opt stack 0
  2257  0002E5                     	ds	2
  2258  0002E7                     Term_MainSm@TermMainSmState:
  2259                           	opt stack 0
  2260  0002E7                     	ds	1
  2261  0002E8                     Terminal@FormatOption:
  2262                           	opt stack 0
  2263  0002E8                     	ds	1
  2264  0002E9                     Terminal@SlaveAddr:
  2265                           	opt stack 0
  2266  0002E9                     	ds	1
  2267  0002EA                     Terminal@PackageLen:
  2268                           	opt stack 0
  2269  0002EA                     	ds	1
  2270  0002EB                     Terminal@TermState:
  2271                           	opt stack 0
  2272  0002EB                     	ds	1
  2273  0002EC                     	ds	1
  2274  0002ED                     _IsUsbNumberReceived:
  2275                           	opt stack 0
  2276  0002ED                     	ds	1
  2277  0002EE                     _control_signal_bitmap:
  2278                           	opt stack 0
  2279  0002EE                     	ds	1
  2280  0002EF                     _USBAlternateInterface:
  2281                           	opt stack 0
  2282  0002EF                     	ds	2
  2283                           tblptru	equ	0xFF8
  2284                           tblptrh	equ	0xFF7
  2285                           tblptrl	equ	0xFF6
  2286                           tablat	equ	0xFF5
  2287                           postinc0	equ	0xFEE
  2288                           wreg	equ	0xFE8
  2289                           postdec1	equ	0xFE5
  2290                           fsr1h	equ	0xFE2
  2291                           fsr1l	equ	0xFE1
  2292                           
  2293                           	psect	dataBANK2
  2294  0002F1                     __pdataBANK2:
  2295                           	opt stack 0
  2296  0002F1                     Terminal@EchoOption:
  2297                           	opt stack 0
  2298  0002F1                     	ds	1
  2299  0002F2                     _MainSystemTimebaseFlag:
  2300                           	opt stack 0
  2301  0002F2                     	ds	1
  2302  0002F3                     _ConnTimeout:
  2303                           	opt stack 0
  2304  0002F3                     	ds	11
  2305  0002FE                     _relayBuffer:
  2306                           	opt stack 0
  2307  0002FE                     	ds	2
  2308                           tblptru	equ	0xFF8
  2309                           tblptrh	equ	0xFF7
  2310                           tblptrl	equ	0xFF6
  2311                           tablat	equ	0xFF5
  2312                           postinc0	equ	0xFEE
  2313                           wreg	equ	0xFE8
  2314                           postdec1	equ	0xFE5
  2315                           fsr1h	equ	0xFE2
  2316                           fsr1l	equ	0xFE1
  2317                           
  2318                           	psect	bssBANK3
  2319  000300                     __pbssBANK3:
  2320                           	opt stack 0
  2321  000300                     _Rtcm_RtccAlarm:
  2322                           	opt stack 0
  2323  000300                     	ds	6
  2324  000306                     _pBDTEntryOut:
  2325                           	opt stack 0
  2326  000306                     	ds	6
  2327  00030C                     _BaudRateGen:
  2328                           	opt stack 0
  2329  00030C                     	ds	4
  2330  000310                     _USB1msTickCount:
  2331                           	opt stack 0
  2332  000310                     	ds	4
  2333  000314                     _OsTmr_OsTickCounter:
  2334                           	opt stack 0
  2335  000314                     	ds	4
  2336  000318                     _UsbMasterPhoneNumberLen:
  2337                           	opt stack 0
  2338  000318                     	ds	2
  2339  00031A                     _ApnLocal:
  2340                           	opt stack 0
  2341  00031A                     	ds	2
  2342  00031C                     ConfigureModem@DelayCounter:
  2343                           	opt stack 0
  2344  00031C                     	ds	2
  2345  00031E                     ConfigureModem@DelayValueMs:
  2346                           	opt stack 0
  2347  00031E                     	ds	2
  2348  000320                     TurnOnModem@Counter:
  2349                           	opt stack 0
  2350  000320                     	ds	2
  2351  000322                     _UartConfig:
  2352                           	opt stack 0
  2353  000322                     	ds	21
  2354  000337                     _readBuffer:
  2355                           	opt stack 0
  2356  000337                     	ds	13
  2357  000344                     _receivedNumber:
  2358                           	opt stack 0
  2359  000344                     	ds	13
  2360  000351                     I2cSlv_QueryI2cData@TimeoutTimer:
  2361                           	opt stack 0
  2362  000351                     	ds	11
  2363  00035C                     _I2cConfig:
  2364                           	opt stack 0
  2365  00035C                     	ds	10
  2366  000366                     _Led2Blink:
  2367                           	opt stack 0
  2368  000366                     	ds	9
  2369  00036F                     _Led1Blink:
  2370                           	opt stack 0
  2371  00036F                     	ds	9
  2372  000378                     _dummy_encapsulated_cmd_response:
  2373                           	opt stack 0
  2374  000378                     	ds	8
  2375  000380                     _line_coding:
  2376                           	opt stack 0
  2377  000380                     	ds	7
  2378  000387                     _Led3Pulse:
  2379                           	opt stack 0
  2380  000387                     	ds	6
  2381  00038D                     _Led2Pulse:
  2382                           	opt stack 0
  2383  00038D                     	ds	6
  2384  000393                     _Led1Pulse:
  2385                           	opt stack 0
  2386  000393                     	ds	6
  2387  000399                     _I2cRxPacket:
  2388                           	opt stack 0
  2389  000399                     	ds	6
  2390  00039F                     _I2cTxPacket:
  2391                           	opt stack 0
  2392  00039F                     	ds	5
  2393  0003A4                     _HttpGetDataLocal:
  2394                           	opt stack 0
  2395  0003A4                     	ds	5
  2396  0003A9                     _memoryPreamble:
  2397                           	opt stack 0
  2398  0003A9                     	ds	4
  2399  0003AD                     Terminal@Addr:
  2400                           	opt stack 0
  2401  0003AD                     	ds	4
  2402  0003B1                     Terminal@Len:
  2403                           	opt stack 0
  2404  0003B1                     	ds	4
  2405  0003B5                     _AlCfg:
  2406                           	opt stack 0
  2407  0003B5                     	ds	4
  2408  0003B9                     _RtcConfig:
  2409                           	opt stack 0
  2410  0003B9                     	ds	4
  2411  0003BD                     _secondCounter:
  2412                           	opt stack 0
  2413  0003BD                     	ds	2
  2414  0003BF                     initGprsModem@modemCounter:
  2415                           	opt stack 0
  2416  0003BF                     	ds	2
  2417  0003C1                     _setupCallTicks:
  2418                           	opt stack 0
  2419  0003C1                     	ds	2
  2420                           tblptru	equ	0xFF8
  2421                           tblptrh	equ	0xFF7
  2422                           tblptrl	equ	0xFF6
  2423                           tablat	equ	0xFF5
  2424                           postinc0	equ	0xFEE
  2425                           wreg	equ	0xFE8
  2426                           postdec1	equ	0xFE5
  2427                           fsr1h	equ	0xFE2
  2428                           fsr1l	equ	0xFE1
  2429                           
  2430                           	psect	dataBANK3
  2431  0003C3                     __pdataBANK3:
  2432                           	opt stack 0
  2433  0003C3                     ModemEvtParser@F9119:
  2434                           	opt stack 0
  2435  0003C3                     	ds	5
  2436  0003C8                     ModemEvtParser@F9117:
  2437                           	opt stack 0
  2438  0003C8                     	ds	5
  2439  0003CD                     ModemEvtParser@F9115:
  2440                           	opt stack 0
  2441  0003CD                     	ds	4
  2442  0003D1                     Term_MainSm@TermDelay:
  2443                           	opt stack 0
  2444  0003D1                     	ds	11
  2445  0003DC                     _ConnWait:
  2446                           	opt stack 0
  2447  0003DC                     	ds	11
  2448  0003E7                     SendSmsSm@SwTimer:
  2449                           	opt stack 0
  2450  0003E7                     	ds	11
  2451  0003F2                     CheckModem@Timeout:
  2452                           	opt stack 0
  2453  0003F2                     	ds	11
  2454  0003FD                     _blinkInSeconds:
  2455                           	opt stack 0
  2456  0003FD                     	ds	2
  2457                           tblptru	equ	0xFF8
  2458                           tblptrh	equ	0xFF7
  2459                           tblptrl	equ	0xFF6
  2460                           tablat	equ	0xFF5
  2461                           postinc0	equ	0xFEE
  2462                           wreg	equ	0xFE8
  2463                           postdec1	equ	0xFE5
  2464                           fsr1h	equ	0xFE2
  2465                           fsr1l	equ	0xFE1
  2466                           
  2467                           	psect	bssBANK4
  2468  000440                     __pbssBANK4:
  2469                           	opt stack 0
  2470  000440                     _cdc_notice:
  2471                           	opt stack 0
  2472  000440                     	ds	10
  2473  00044A                     _Rtcm_SystemDate:
  2474                           	opt stack 0
  2475  00044A                     	ds	8
  2476  000452                     Term_MainSm@Data:
  2477                           	opt stack 0
  2478  000452                     	ds	50
  2479  000484                     _smsText:
  2480                           	opt stack 0
  2481  000484                     	ds	20
  2482  000498                     _UsbMasterPhoneNumber:
  2483                           	opt stack 0
  2484  000498                     	ds	15
  2485  0004A7                     _EepromBuffer:
  2486                           	opt stack 0
  2487  0004A7                     	ds	15
  2488  0004B6                     _emptyNumber:
  2489                           	opt stack 0
  2490  0004B6                     	ds	13
  2491  0004C3                     _callerNumber:
  2492                           	opt stack 0
  2493  0004C3                     	ds	13
  2494  0004D0                     Terminal@SwTimer:
  2495                           	opt stack 0
  2496  0004D0                     	ds	11
  2497  0004DB                     I2cSlv_QueryI2cData@QueryTimer:
  2498                           	opt stack 0
  2499  0004DB                     	ds	11
  2500  0004E6                     _Led3Blink:
  2501                           	opt stack 0
  2502  0004E6                     	ds	9
  2503                           tblptru	equ	0xFF8
  2504                           tblptrh	equ	0xFF7
  2505                           tblptrl	equ	0xFF6
  2506                           tablat	equ	0xFF5
  2507                           postinc0	equ	0xFEE
  2508                           wreg	equ	0xFE8
  2509                           postdec1	equ	0xFE5
  2510                           fsr1h	equ	0xFE2
  2511                           fsr1l	equ	0xFE1
  2512                           
  2513                           	psect	dataBANK4
  2514  0004EF                     __pdataBANK4:
  2515                           	opt stack 0
  2516  0004EF                     ModemEvtParser@F9121:
  2517                           	opt stack 0
  2518  0004EF                     	ds	10
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           postdec1	equ	0xFE5
  2526                           fsr1h	equ	0xFE2
  2527                           fsr1l	equ	0xFE1
  2528                           
  2529                           	psect	bssBANK5
  2530  000500                     __pbssBANK5:
  2531                           	opt stack 0
  2532  000500                     _cdc_data_rx:
  2533                           	opt stack 0
  2534  000500                     	ds	64
  2535  000540                     Terminal@TermRxBuffer:
  2536                           	opt stack 0
  2537  000540                     	ds	50
  2538  000572                     _PhoneNumber:
  2539                           	opt stack 0
  2540  000572                     	ds	20
  2541                           tblptru	equ	0xFF8
  2542                           tblptrh	equ	0xFF7
  2543                           tblptrl	equ	0xFF6
  2544                           tablat	equ	0xFF5
  2545                           postinc0	equ	0xFEE
  2546                           wreg	equ	0xFE8
  2547                           postdec1	equ	0xFE5
  2548                           fsr1h	equ	0xFE2
  2549                           fsr1l	equ	0xFE1
  2550                           
  2551                           	psect	dataBANK5
  2552  000586                     __pdataBANK5:
  2553                           	opt stack 0
  2554  000586                     _TaskTable:
  2555                           	opt stack 0
  2556  000586                     	ds	80
  2557                           tblptru	equ	0xFF8
  2558                           tblptrh	equ	0xFF7
  2559                           tblptrl	equ	0xFF6
  2560                           tablat	equ	0xFF5
  2561                           postinc0	equ	0xFEE
  2562                           wreg	equ	0xFE8
  2563                           postdec1	equ	0xFE5
  2564                           fsr1h	equ	0xFE2
  2565                           fsr1l	equ	0xFE1
  2566                           
  2567                           	psect	bssBANK6
  2568  000600                     __pbssBANK6:
  2569                           	opt stack 0
  2570  000600                     _OsAlarms:
  2571                           	opt stack 0
  2572  000600                     	ds	220
  2573                           tblptru	equ	0xFF8
  2574                           tblptrh	equ	0xFF7
  2575                           tblptrl	equ	0xFF6
  2576                           tablat	equ	0xFF5
  2577                           postinc0	equ	0xFEE
  2578                           wreg	equ	0xFE8
  2579                           postdec1	equ	0xFE5
  2580                           fsr1h	equ	0xFE2
  2581                           fsr1l	equ	0xFE1
  2582                           
  2583                           	psect	bssBANK7
  2584  000700                     __pbssBANK7:
  2585                           	opt stack 0
  2586  000700                     _Mdm_SmsRx:
  2587                           	opt stack 0
  2588  000700                     	ds	102
  2589  000766                     Terminal@Payload:
  2590                           	opt stack 0
  2591  000766                     	ds	80
  2592  0007B6                     _cdc_data_tx:
  2593                           	opt stack 0
  2594  0007B6                     	ds	64
  2595                           tblptru	equ	0xFF8
  2596                           tblptrh	equ	0xFF7
  2597                           tblptrl	equ	0xFF6
  2598                           tablat	equ	0xFF5
  2599                           postinc0	equ	0xFEE
  2600                           wreg	equ	0xFE8
  2601                           postdec1	equ	0xFE5
  2602                           fsr1h	equ	0xFE2
  2603                           fsr1l	equ	0xFE1
  2604                           
  2605                           	psect	bssBANK8
  2606  000800                     __pbssBANK8:
  2607                           	opt stack 0
  2608  000800                     GsmGprsTerminal@UsbBuffer:
  2609                           	opt stack 0
  2610  000800                     	ds	200
  2611  0008C8                     _MessageText:
  2612                           	opt stack 0
  2613  0008C8                     	ds	50
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           postinc0	equ	0xFEE
  2619                           wreg	equ	0xFE8
  2620                           postdec1	equ	0xFE5
  2621                           fsr1h	equ	0xFE2
  2622                           fsr1l	equ	0xFE1
  2623                           
  2624                           	psect	bssBANK9
  2625  000900                     __pbssBANK9:
  2626                           	opt stack 0
  2627  000900                     GsmGprsTerminal@UartBuffer:
  2628                           	opt stack 0
  2629  000900                     	ds	200
  2630                           tblptru	equ	0xFF8
  2631                           tblptrh	equ	0xFF7
  2632                           tblptrl	equ	0xFF6
  2633                           tablat	equ	0xFF5
  2634                           postinc0	equ	0xFEE
  2635                           wreg	equ	0xFE8
  2636                           postdec1	equ	0xFE5
  2637                           fsr1h	equ	0xFE2
  2638                           fsr1l	equ	0xFE1
  2639                           
  2640                           	psect	bssBIGRAMl
  2641  000AC8                     __pbssBIGRAMl:
  2642                           	opt stack 0
  2643  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2644                           	opt stack 0
  2645  000AC8                     	ds	400
  2646  000C58                     _RxBuffer:
  2647                           	opt stack 0
  2648  000C58                     	ds	400
  2649                           tblptru	equ	0xFF8
  2650                           tblptrh	equ	0xFF7
  2651                           tblptrl	equ	0xFF6
  2652                           tablat	equ	0xFF5
  2653                           postinc0	equ	0xFEE
  2654                           wreg	equ	0xFE8
  2655                           postdec1	equ	0xFE5
  2656                           fsr1h	equ	0xFE2
  2657                           fsr1l	equ	0xFE1
  2658                           
  2659                           	psect	cstackBANK10
  2660  000A00                     __pcstackBANK10:
  2661                           	opt stack 0
  2662  000A00                     Terminal@UsbRxBuffer:
  2663                           	opt stack 0
  2664                           
  2665                           ; 200 bytes @ 0x0
  2666  000A00                     	ds	200
  2667                           tblptru	equ	0xFF8
  2668                           tblptrh	equ	0xFF7
  2669                           tblptrl	equ	0xFF6
  2670                           tablat	equ	0xFF5
  2671                           postinc0	equ	0xFEE
  2672                           wreg	equ	0xFE8
  2673                           postdec1	equ	0xFE5
  2674                           fsr1h	equ	0xFE2
  2675                           fsr1l	equ	0xFE1
  2676                           
  2677                           	psect	cstackBANK4
  2678  0004F9                     __pcstackBANK4:
  2679                           	opt stack 0
  2680  0004F9                     ??_InitializeTasks:
  2681  0004F9                     ??_ScheduleTasks:
  2682                           
  2683                           ; 1 bytes @ 0x0
  2684  0004F9                     	ds	4
  2685                           tblptru	equ	0xFF8
  2686                           tblptrh	equ	0xFF7
  2687                           tblptrl	equ	0xFF6
  2688                           tablat	equ	0xFF5
  2689                           postinc0	equ	0xFEE
  2690                           wreg	equ	0xFE8
  2691                           postdec1	equ	0xFE5
  2692                           fsr1h	equ	0xFE2
  2693                           fsr1l	equ	0xFE1
  2694                           
  2695                           	psect	cstackBANK2
  2696  000200                     __pcstackBANK2:
  2697                           	opt stack 0
  2698  000200                     Terminal@UsbTxBuffer:
  2699                           	opt stack 0
  2700                           
  2701                           ; 200 bytes @ 0x0
  2702  000200                     	ds	200
  2703  0002C8                     InitializeTasks@ActiveTaskIndex:
  2704                           	opt stack 0
  2705  0002C8                     ScheduleTasks@ActiveTaskIndex:
  2706                           	opt stack 0
  2707                           
  2708                           ; 1 bytes @ 0xC8
  2709  0002C8                     	ds	1
  2710                           tblptru	equ	0xFF8
  2711                           tblptrh	equ	0xFF7
  2712                           tblptrl	equ	0xFF6
  2713                           tablat	equ	0xFF5
  2714                           postinc0	equ	0xFEE
  2715                           wreg	equ	0xFE8
  2716                           postdec1	equ	0xFE5
  2717                           fsr1h	equ	0xFE2
  2718                           fsr1l	equ	0xFE1
  2719                           
  2720                           	psect	cstackBANK1
  2721  000100                     __pcstackBANK1:
  2722                           	opt stack 0
  2723  000100                     initEeprom@addressToRead:
  2724                           	opt stack 0
  2725  000100                     isNumberInMemory@phoneNumber:
  2726                           	opt stack 0
  2727  000100                     isMasterNumber@phoneNumber:
  2728                           	opt stack 0
  2729  000100                     findEmptySpot@positionInMemory:
  2730                           	opt stack 0
  2731  000100                     SendSmsSm@UartMessage:
  2732                           	opt stack 0
  2733  000100                     InitGprsNetwork@UartMessage:
  2734                           	opt stack 0
  2735  000100                     Terminal@TermTxBuffer:
  2736                           	opt stack 0
  2737  000100                     HttpGetMethod@UartMessage:
  2738                           	opt stack 0
  2739                           
  2740                           ; 200 bytes @ 0x0
  2741  000100                     	ds	1
  2742  000101                     initEeprom@memoryOpResult:
  2743                           	opt stack 0
  2744                           
  2745                           ; 1 bytes @ 0x1
  2746  000101                     	ds	1
  2747  000102                     initEeprom@isInitialized:
  2748                           	opt stack 0
  2749  000102                     isMasterNumber@memoryOpResult:
  2750                           	opt stack 0
  2751  000102                     findEmptySpot@memoryOpResult:
  2752                           	opt stack 0
  2753  000102                     isNumberInMemory@positionInMemory:
  2754                           	opt stack 0
  2755                           
  2756                           ; 2 bytes @ 0x2
  2757  000102                     	ds	1
  2758  000103                     initFsm@isCmdSuccessfull:
  2759                           	opt stack 0
  2760  000103                     resCmdFsm@receivedNumber:
  2761                           	opt stack 0
  2762                           
  2763                           ; 2 bytes @ 0x3
  2764  000103                     	ds	1
  2765  000104                     isNumberInMemory@memoryOpResult:
  2766                           	opt stack 0
  2767                           
  2768                           ; 1 bytes @ 0x4
  2769  000104                     	ds	1
  2770  000105                     initFsm@isInitialized:
  2771                           	opt stack 0
  2772  000105                     addCmdFsm@receivedNumber:
  2773                           	opt stack 0
  2774  000105                     delCmdFsm@receivedNumber:
  2775                           	opt stack 0
  2776  000105                     resCmdFsm@isCmdSuccessfull:
  2777                           	opt stack 0
  2778  000105                     triggerCmdFsm@receivedNumber:
  2779                           	opt stack 0
  2780                           
  2781                           ; 2 bytes @ 0x5
  2782  000105                     	ds	2
  2783  000107                     resCmdFsm@isComplete:
  2784                           	opt stack 0
  2785  000107                     triggerCmdFsm@isComplete:
  2786                           	opt stack 0
  2787  000107                     addCmdFsm@smsText:
  2788                           	opt stack 0
  2789  000107                     delCmdFsm@smsText:
  2790                           	opt stack 0
  2791                           
  2792                           ; 2 bytes @ 0x7
  2793  000107                     	ds	1
  2794  000108                     resCmdFsm@masterOpResult:
  2795                           	opt stack 0
  2796  000108                     triggerCmdFsm@numberInMemory:
  2797                           	opt stack 0
  2798                           
  2799                           ; 1 bytes @ 0x8
  2800  000108                     	ds	1
  2801  000109                     triggerCmdFsm@masterOpResult:
  2802                           	opt stack 0
  2803  000109                     addCmdFsm@isCmdSuccessfull:
  2804                           	opt stack 0
  2805  000109                     delCmdFsm@isCmdSuccessfull:
  2806                           	opt stack 0
  2807                           
  2808                           ; 2 bytes @ 0x9
  2809  000109                     	ds	1
  2810  00010A                     triggerCmdFsm@searchNumber:
  2811                           	opt stack 0
  2812                           
  2813                           ; 1 bytes @ 0xA
  2814  00010A                     	ds	1
  2815  00010B                     addCmdFsm@isComplete:
  2816                           	opt stack 0
  2817  00010B                     delCmdFsm@isComplete:
  2818                           	opt stack 0
  2819                           
  2820                           ; 1 bytes @ 0xB
  2821  00010B                     	ds	1
  2822  00010C                     addCmdFsm@masterOpResult:
  2823                           	opt stack 0
  2824  00010C                     delCmdFsm@masterOpResult:
  2825                           	opt stack 0
  2826                           
  2827                           ; 1 bytes @ 0xC
  2828  00010C                     	ds	1
  2829  00010D                     addCmdFsm@numberInMemory:
  2830                           	opt stack 0
  2831  00010D                     delCmdFsm@numberInMemory:
  2832                           	opt stack 0
  2833                           
  2834                           ; 1 bytes @ 0xD
  2835  00010D                     	ds	1
  2836  00010E                     addCmdFsm@searchNumber:
  2837                           	opt stack 0
  2838  00010E                     delCmdFsm@searchNumber:
  2839                           	opt stack 0
  2840                           
  2841                           ; 1 bytes @ 0xE
  2842  00010E                     	ds	36
  2843  000132                     InitGprsNetwork@Index:
  2844                           	opt stack 0
  2845  000132                     Term_MainSm@FwkMajorStr:
  2846                           	opt stack 0
  2847                           
  2848                           ; 4 bytes @ 0x32
  2849  000132                     	ds	4
  2850  000136                     Term_MainSm@FwkMinorStr:
  2851                           	opt stack 0
  2852                           
  2853                           ; 4 bytes @ 0x36
  2854  000136                     	ds	4
  2855  00013A                     Term_MainSm@FwkBuildStr:
  2856                           	opt stack 0
  2857                           
  2858                           ; 4 bytes @ 0x3A
  2859  00013A                     	ds	142
  2860  0001C8                     HttpGetMethod@Index:
  2861                           	opt stack 0
  2862                           
  2863                           ; 1 bytes @ 0xC8
  2864  0001C8                     	ds	1
  2865                           tblptru	equ	0xFF8
  2866                           tblptrh	equ	0xFF7
  2867                           tblptrl	equ	0xFF6
  2868                           tablat	equ	0xFF5
  2869                           postinc0	equ	0xFEE
  2870                           wreg	equ	0xFE8
  2871                           postdec1	equ	0xFE5
  2872                           fsr1h	equ	0xFE2
  2873                           fsr1l	equ	0xFE1
  2874                           
  2875                           	psect	cstackBANK0
  2876  000060                     __pcstackBANK0:
  2877                           	opt stack 0
  2878  000060                     
  2879                           ; 1 bytes @ 0x0
  2880  000060                     	ds	8
  2881  000068                     ??_LowPriorityIsr:
  2882                           
  2883                           ; 1 bytes @ 0x8
  2884  000068                     	ds	21
  2885  00007D                     ??_isdigit:
  2886  00007D                     ??_isspace:
  2887  00007D                     ??_isupper:
  2888  00007D                     ??_Rtcc_GetRtccValue:
  2889  00007D                     ??_UartTxBufferStatus:
  2890  00007D                     ??_USBStdGetDscHandler:
  2891  00007D                     ??_USBStdGetStatusHandler:
  2892  00007D                     ?_GetLastInteractionNumber:
  2893                           	opt stack 0
  2894  00007D                     ?_USBTransferOnePacket:
  2895                           	opt stack 0
  2896  00007D                     ?_strlen:
  2897                           	opt stack 0
  2898  00007D                     ?_sprintf:
  2899                           	opt stack 0
  2900  00007D                     ?_initPreamble:
  2901                           	opt stack 0
  2902  00007D                     ?___wmul:
  2903                           	opt stack 0
  2904  00007D                     ?___awdiv:
  2905                           	opt stack 0
  2906  00007D                     ?___awmod:
  2907                           	opt stack 0
  2908  00007D                     ?___lwmod:
  2909                           	opt stack 0
  2910  00007D                     ?_GetOsTickCounter:
  2911                           	opt stack 0
  2912  00007D                     ?___lmul:
  2913                           	opt stack 0
  2914  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2915                           	opt stack 0
  2916  00007D                     SetAckStatus@AckSts:
  2917                           	opt stack 0
  2918  00007D                     WriteByte@Byte:
  2919                           	opt stack 0
  2920  00007D                     ReadByte@Byte:
  2921                           	opt stack 0
  2922  00007D                     Mcu_SetWdgSts@WdgSts:
  2923                           	opt stack 0
  2924  00007D                     RtccIrqInit@Priority:
  2925                           	opt stack 0
  2926  00007D                     Rtcc_SetRtcStatus@Status:
  2927                           	opt stack 0
  2928  00007D                     TmrBInit@Prescaler:
  2929                           	opt stack 0
  2930  00007D                     Tmr_TmrBIrqSet@Priority:
  2931                           	opt stack 0
  2932  00007D                     Tmr_StartTmr@TmrNumb:
  2933                           	opt stack 0
  2934  00007D                     UartWriteByte@ByteToWrite:
  2935                           	opt stack 0
  2936  00007D                     USBTransferOnePacket@dir:
  2937                           	opt stack 0
  2938  00007D                     USBConfigureEndpoint@direction:
  2939                           	opt stack 0
  2940  00007D                     USBCtrlTrfTxService@byteToSend:
  2941                           	opt stack 0
  2942  00007D                     USBCtrlTrfRxService@i:
  2943                           	opt stack 0
  2944  00007D                     Led_SetLedStatus@LedSts:
  2945                           	opt stack 0
  2946  00007D                     toupper@c:
  2947                           	opt stack 0
  2948  00007D                     tolower@c:
  2949                           	opt stack 0
  2950  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2951                           	opt stack 0
  2952  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2953                           	opt stack 0
  2954  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2955                           	opt stack 0
  2956  00007D                     Uart_ClearRxBuffer@Index:
  2957                           	opt stack 0
  2958  00007D                     GenerateEvt@Event:
  2959                           	opt stack 0
  2960  00007D                     ReceiveEvt@Event:
  2961                           	opt stack 0
  2962  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2963                           	opt stack 0
  2964  00007D                     StringCompare2Const@String1:
  2965                           	opt stack 0
  2966  00007D                     StringCompare@String1:
  2967                           	opt stack 0
  2968  00007D                     ClearBuffer@Buffer:
  2969                           	opt stack 0
  2970  00007D                     isNumberValid@phoneNumber:
  2971                           	opt stack 0
  2972  00007D                     sprintf@sp:
  2973                           	opt stack 0
  2974  00007D                     ___wmul@multiplier:
  2975                           	opt stack 0
  2976  00007D                     ___awdiv@dividend:
  2977                           	opt stack 0
  2978  00007D                     ___awmod@dividend:
  2979                           	opt stack 0
  2980  00007D                     ___lwmod@dividend:
  2981                           	opt stack 0
  2982  00007D                     memcpy@d1:
  2983                           	opt stack 0
  2984  00007D                     memset@p1:
  2985                           	opt stack 0
  2986  00007D                     strcat@to:
  2987                           	opt stack 0
  2988  00007D                     strcpy@to:
  2989                           	opt stack 0
  2990  00007D                     strlen@s:
  2991                           	opt stack 0
  2992  00007D                     ___lmul@multiplier:
  2993                           	opt stack 0
  2994                           
  2995                           ; 4 bytes @ 0x1D
  2996  00007D                     	ds	1
  2997  00007E                     ??_USBConfigureEndpoint:
  2998  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2999                           	opt stack 0
  3000  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  3001                           	opt stack 0
  3002  00007E                     TmrBInit@Postscaler:
  3003                           	opt stack 0
  3004  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  3005                           	opt stack 0
  3006  00007E                     UartWriteByte@Module:
  3007                           	opt stack 0
  3008  00007E                     UartTxBufferStatus@Module:
  3009                           	opt stack 0
  3010  00007E                     USBCtrlTrfRxService@byteToRead:
  3011                           	opt stack 0
  3012  00007E                     USBCtrlTrfInHandler@lastDTS:
  3013                           	opt stack 0
  3014  00007E                     Led_SetLedStatus@Led:
  3015                           	opt stack 0
  3016  00007E                     _isdigit$6512:
  3017                           	opt stack 0
  3018  00007E                     _isspace$6781:
  3019                           	opt stack 0
  3020  00007E                     _isupper$6784:
  3021                           	opt stack 0
  3022  00007E                     I2c_WriteData@WritePacket:
  3023                           	opt stack 0
  3024  00007E                     Rtcc_RtcConfig@RtcConfig:
  3025                           	opt stack 0
  3026  00007E                     USBTransferOnePacket@data:
  3027                           	opt stack 0
  3028  00007E                     USBStdGetStatusHandler@p:
  3029                           	opt stack 0
  3030                           
  3031                           ; 2 bytes @ 0x1E
  3032  00007E                     	ds	1
  3033  00007F                     ??_strlen:
  3034  00007F                     ??_Rtcc_AlarmConfig:
  3035  00007F                     ??_TmrBInit:
  3036  00007F                     Irq_InitIntController@IntPriorityEn:
  3037                           	opt stack 0
  3038  00007F                     Rtcc_GetRtccValue@RetValue:
  3039                           	opt stack 0
  3040  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  3041                           	opt stack 0
  3042  00007F                     UartTxBufferStatus@TxBufferStatus:
  3043                           	opt stack 0
  3044  00007F                     GenerateEvt@EventStatus:
  3045                           	opt stack 0
  3046  00007F                     isdigit@c:
  3047                           	opt stack 0
  3048  00007F                     isspace@c:
  3049                           	opt stack 0
  3050  00007F                     isupper@c:
  3051                           	opt stack 0
  3052  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  3053                           	opt stack 0
  3054  00007F                     StringCompare2Const@String2:
  3055                           	opt stack 0
  3056  00007F                     StringCompare@String2:
  3057                           	opt stack 0
  3058  00007F                     ClearBuffer@Len:
  3059                           	opt stack 0
  3060  00007F                     sprintf@f:
  3061                           	opt stack 0
  3062  00007F                     ___wmul@multiplicand:
  3063                           	opt stack 0
  3064  00007F                     ___awdiv@divisor:
  3065                           	opt stack 0
  3066  00007F                     ___awmod@divisor:
  3067                           	opt stack 0
  3068  00007F                     ___lwmod@divisor:
  3069                           	opt stack 0
  3070  00007F                     memcpy@s1:
  3071                           	opt stack 0
  3072  00007F                     memset@c:
  3073                           	opt stack 0
  3074  00007F                     strcat@from:
  3075                           	opt stack 0
  3076  00007F                     strcpy@from:
  3077                           	opt stack 0
  3078                           
  3079                           ; 2 bytes @ 0x1F
  3080  00007F                     	ds	1
  3081  000080                     ??_isalpha:
  3082  000080                     ??_isxdigit:
  3083  000080                     ??_I2c_WriteData:
  3084  000080                     ??_Rtcc_RtcConfig:
  3085  000080                     Rtcc_GetRtccValue@RegValue:
  3086                           	opt stack 0
  3087  000080                     TmrBInit@TmrNumb:
  3088                           	opt stack 0
  3089  000080                     ReceiveEvt@EventStatus:
  3090                           	opt stack 0
  3091  000080                     USBTransferOnePacket@len:
  3092                           	opt stack 0
  3093  000080                     isNumberValid@isNumberOk:
  3094                           	opt stack 0
  3095  000080                     I2c_ReadData@ReadPacket:
  3096                           	opt stack 0
  3097  000080                     Uart_WriteConstString@ConstStringToWrite:
  3098                           	opt stack 0
  3099  000080                     Uart_WriteString@StringToWrite:
  3100                           	opt stack 0
  3101  000080                     Uart_WriteStringLen@StringToWrite:
  3102                           	opt stack 0
  3103  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3104                           	opt stack 0
  3105  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3106                           	opt stack 0
  3107                           
  3108                           ; 2 bytes @ 0x20
  3109  000080                     	ds	1
  3110  000081                     ?_GetElapsedTime:
  3111                           	opt stack 0
  3112  000081                     ?_Rtcm_GetRtccDate:
  3113                           	opt stack 0
  3114  000081                     Mdm_IsSmsReceived@Ret:
  3115                           	opt stack 0
  3116  000081                     Mdm_IsRinging@Ret:
  3117                           	opt stack 0
  3118  000081                     I2cSlv_I2cReadMsgSts@Result:
  3119                           	opt stack 0
  3120  000081                     USBTransferOnePacket@ep:
  3121                           	opt stack 0
  3122  000081                     Led_SetLedBlinkTime@Led:
  3123                           	opt stack 0
  3124  000081                     isNumberValid@i:
  3125                           	opt stack 0
  3126  000081                     ___awdiv@counter:
  3127                           	opt stack 0
  3128  000081                     ___awmod@counter:
  3129                           	opt stack 0
  3130  000081                     ___lwmod@counter:
  3131                           	opt stack 0
  3132  000081                     _isalpha$6778:
  3133                           	opt stack 0
  3134  000081                     _isxdigit$6788:
  3135                           	opt stack 0
  3136  000081                     OsTmr_StartTimer@Timer:
  3137                           	opt stack 0
  3138  000081                     StringCompare2Const@Len:
  3139                           	opt stack 0
  3140  000081                     StringCompare@Len:
  3141                           	opt stack 0
  3142  000081                     ClearBuffer@Index:
  3143                           	opt stack 0
  3144  000081                     ___wmul@product:
  3145                           	opt stack 0
  3146  000081                     memcpy@n:
  3147                           	opt stack 0
  3148  000081                     memset@n:
  3149                           	opt stack 0
  3150  000081                     strcat@cp:
  3151                           	opt stack 0
  3152  000081                     strcpy@cp:
  3153                           	opt stack 0
  3154  000081                     strlen@cp:
  3155                           	opt stack 0
  3156  000081                     GetElapsedTime@StartTime:
  3157                           	opt stack 0
  3158  000081                     ___lmul@multiplicand:
  3159                           	opt stack 0
  3160                           
  3161                           ; 4 bytes @ 0x21
  3162  000081                     	ds	1
  3163  000082                     ??_I2c_ReadData:
  3164  000082                     Uart_WriteConstString@Module:
  3165                           	opt stack 0
  3166  000082                     Uart_WriteString@Module:
  3167                           	opt stack 0
  3168  000082                     Uart_WriteStringLen@Len:
  3169                           	opt stack 0
  3170  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3171                           	opt stack 0
  3172  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3173                           	opt stack 0
  3174  000082                     USBConfigureEndpoint@EPNum:
  3175                           	opt stack 0
  3176  000082                     ___awdiv@sign:
  3177                           	opt stack 0
  3178  000082                     ___awmod@sign:
  3179                           	opt stack 0
  3180  000082                     isalpha@c:
  3181                           	opt stack 0
  3182  000082                     isxdigit@c:
  3183                           	opt stack 0
  3184  000082                     USBTransferOnePacket@handle:
  3185                           	opt stack 0
  3186                           
  3187                           ; 2 bytes @ 0x22
  3188  000082                     	ds	1
  3189  000083                     ?_GetCallerNumber:
  3190                           	opt stack 0
  3191  000083                     ?_atoi:
  3192                           	opt stack 0
  3193  000083                     ?_xtoi:
  3194                           	opt stack 0
  3195  000083                     ?___lwdiv:
  3196                           	opt stack 0
  3197  000083                     Uart_WriteStringLen@Index:
  3198                           	opt stack 0
  3199  000083                     Mdm_SetSmsFormat@Index:
  3200                           	opt stack 0
  3201  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3202                           	opt stack 0
  3203  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3204                           	opt stack 0
  3205  000083                     getSetupCall@isCalledReceived:
  3206                           	opt stack 0
  3207  000083                     sprintf@flag:
  3208                           	opt stack 0
  3209  000083                     memcpy@tmp:
  3210                           	opt stack 0
  3211  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3212                           	opt stack 0
  3213  000083                     USBConfigureEndpoint@handle:
  3214                           	opt stack 0
  3215  000083                     putUSBUSART@data:
  3216                           	opt stack 0
  3217  000083                     atoi@s:
  3218                           	opt stack 0
  3219  000083                     ___awdiv@quotient:
  3220                           	opt stack 0
  3221  000083                     ___lwdiv@dividend:
  3222                           	opt stack 0
  3223  000083                     memset@p:
  3224                           	opt stack 0
  3225  000083                     xtoi@s:
  3226                           	opt stack 0
  3227  000083                     OsTmr_StartTimer@Timeout:
  3228                           	opt stack 0
  3229                           
  3230                           ; 4 bytes @ 0x23
  3231  000083                     	ds	1
  3232  000084                     Uart_WriteStringLen@Module:
  3233                           	opt stack 0
  3234  000084                     I2cSlv_SendI2cMsg@TxSts:
  3235                           	opt stack 0
  3236  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3237                           	opt stack 0
  3238  000084                     CDCTxService@i:
  3239                           	opt stack 0
  3240  000084                     getsUSBUSART@buffer:
  3241                           	opt stack 0
  3242  000084                     sprintf@ap:
  3243                           	opt stack 0
  3244  000084                     memcpy@d:
  3245                           	opt stack 0
  3246  000084                     Mdm_SetSmsFormat@UartMessage:
  3247                           	opt stack 0
  3248                           
  3249                           ; 20 bytes @ 0x24
  3250  000084                     	ds	1
  3251  000085                     ??_atoi:
  3252  000085                     ??_xtoi:
  3253  000085                     ??_GetElapsedTime:
  3254  000085                     Rtcc_SetRtccValue@Value:
  3255                           	opt stack 0
  3256  000085                     USBDeviceInit@i:
  3257                           	opt stack 0
  3258  000085                     USBEnableEndpoint@options:
  3259                           	opt stack 0
  3260  000085                     putUSBUSART@length:
  3261                           	opt stack 0
  3262  000085                     CDCTxService@byte_to_send:
  3263                           	opt stack 0
  3264  000085                     Eeprom_Reset@SlaveAddress:
  3265                           	opt stack 0
  3266  000085                     StringCompare2Const@Result:
  3267                           	opt stack 0
  3268  000085                     StringCompare@Result:
  3269                           	opt stack 0
  3270  000085                     triggerRelay@res:
  3271                           	opt stack 0
  3272  000085                     StringCopy@SourceStr:
  3273                           	opt stack 0
  3274  000085                     ___lwdiv@divisor:
  3275                           	opt stack 0
  3276  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3277                           	opt stack 0
  3278  000085                     ___lmul@product:
  3279                           	opt stack 0
  3280                           
  3281                           ; 4 bytes @ 0x25
  3282  000085                     	ds	1
  3283  000086                     ??_Rtcc_SetRtccValue:
  3284  000086                     getsUSBUSART@len:
  3285                           	opt stack 0
  3286  000086                     triggerRelay@isRelayOn:
  3287                           	opt stack 0
  3288  000086                     sprintf@c:
  3289                           	opt stack 0
  3290  000086                     USBEnableEndpoint@p:
  3291                           	opt stack 0
  3292  000086                     StringCompare2Const@Index:
  3293                           	opt stack 0
  3294  000086                     StringCompare@Index:
  3295                           	opt stack 0
  3296  000086                     memcpy@s:
  3297                           	opt stack 0
  3298                           
  3299                           ; 2 bytes @ 0x26
  3300  000086                     	ds	1
  3301  000087                     atoi@sign:
  3302                           	opt stack 0
  3303  000087                     ___lwdiv@counter:
  3304                           	opt stack 0
  3305  000087                     xtoi@sign:
  3306                           	opt stack 0
  3307  000087                     StringCopy@DestStr:
  3308                           	opt stack 0
  3309  000087                     sprintf@cp:
  3310                           	opt stack 0
  3311                           
  3312                           ; 2 bytes @ 0x27
  3313  000087                     	ds	1
  3314  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3315                           	opt stack 0
  3316  000088                     USBEnableEndpoint@ep:
  3317                           	opt stack 0
  3318  000088                     atoi@a:
  3319                           	opt stack 0
  3320  000088                     ___lwdiv@quotient:
  3321                           	opt stack 0
  3322  000088                     xtoi@val:
  3323                           	opt stack 0
  3324  000088                     parseCommand@addNumberCmd:
  3325                           	opt stack 0
  3326                           
  3327                           ; 4 bytes @ 0x28
  3328  000088                     	ds	1
  3329  000089                     ??_Rtcm_GetRtccDate:
  3330  000089                     ?_strtol:
  3331                           	opt stack 0
  3332  000089                     ?___lldiv:
  3333                           	opt stack 0
  3334  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3335                           	opt stack 0
  3336  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3337                           	opt stack 0
  3338  000089                     StringCopy@Len:
  3339                           	opt stack 0
  3340  000089                     strtol@s:
  3341                           	opt stack 0
  3342  000089                     ___lldiv@dividend:
  3343                           	opt stack 0
  3344  000089                     Rtcm_SetRtccDate@Date:
  3345                           	opt stack 0
  3346                           
  3347                           ; 8 bytes @ 0x29
  3348  000089                     	ds	1
  3349  00008A                     xtoi@c:
  3350                           	opt stack 0
  3351  00008A                     LedBlinkStateMachine@LedBlink:
  3352                           	opt stack 0
  3353  00008A                     LedPulseStateMachine@LedPulse:
  3354                           	opt stack 0
  3355  00008A                     secondsAppTimer@counter:
  3356                           	opt stack 0
  3357  00008A                     utoa@buf:
  3358                           	opt stack 0
  3359  00008A                     Rtcm_GetRtccDate@LocalDate:
  3360                           	opt stack 0
  3361                           
  3362                           ; 8 bytes @ 0x2A
  3363  00008A                     	ds	1
  3364  00008B                     ??_StringCopy:
  3365  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3366                           	opt stack 0
  3367  00008B                     strtol@endptr:
  3368                           	opt stack 0
  3369                           
  3370                           ; 2 bytes @ 0x2B
  3371  00008B                     	ds	1
  3372  00008C                     LedPulseStateMachine@Led:
  3373                           	opt stack 0
  3374  00008C                     secondsAppTimer@isCyclic:
  3375                           	opt stack 0
  3376  00008C                     utoa@val:
  3377                           	opt stack 0
  3378  00008C                     parseCommand@deleteNumberCmd:
  3379                           	opt stack 0
  3380                           
  3381                           ; 4 bytes @ 0x2C
  3382  00008C                     	ds	1
  3383  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3384                           	opt stack 0
  3385  00008D                     StringCopy@Index:
  3386                           	opt stack 0
  3387  00008D                     strtol@base:
  3388                           	opt stack 0
  3389  00008D                     GetElapsedTime@TimeValue:
  3390                           	opt stack 0
  3391  00008D                     ___lldiv@divisor:
  3392                           	opt stack 0
  3393                           
  3394                           ; 4 bytes @ 0x2D
  3395  00008D                     	ds	1
  3396  00008E                     utoa@base:
  3397                           	opt stack 0
  3398                           
  3399                           ; 2 bytes @ 0x2E
  3400  00008E                     	ds	1
  3401  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3402  00008F                     ??_strtol:
  3403  00008F                     secondsAppTimer@seconds:
  3404                           	opt stack 0
  3405  00008F                     Mdm_GetSmsData@MessageText:
  3406                           	opt stack 0
  3407  00008F                     Eeprom_Write@WriteBuffer:
  3408                           	opt stack 0
  3409  00008F                     LedStateMachine@LedSts:
  3410                           	opt stack 0
  3411  00008F                     ModemEvtParser@CallReadyString:
  3412                           	opt stack 0
  3413                           
  3414                           ; 10 bytes @ 0x2F
  3415  00008F                     	ds	1
  3416  000090                     secondsAppTimer@isExpired:
  3417                           	opt stack 0
  3418  000090                     utoa@v:
  3419                           	opt stack 0
  3420  000090                     parseCommand@resetCmd:
  3421                           	opt stack 0
  3422                           
  3423                           ; 4 bytes @ 0x30
  3424  000090                     	ds	1
  3425  000091                     ??_USBStdFeatureReqHandler:
  3426  000091                     Mdm_GetSmsData@GetSmsStatus:
  3427                           	opt stack 0
  3428  000091                     USBStdSetCfgHandler@i:
  3429                           	opt stack 0
  3430  000091                     Eeprom_Write@DataLength:
  3431                           	opt stack 0
  3432  000091                     LedStateMachine@LedOut:
  3433                           	opt stack 0
  3434  000091                     secondsAppTimer@destinationTicks:
  3435                           	opt stack 0
  3436  000091                     GetElapsedTime@CurrentTimestamp:
  3437                           	opt stack 0
  3438  000091                     ___lldiv@quotient:
  3439                           	opt stack 0
  3440                           
  3441                           ; 4 bytes @ 0x31
  3442  000091                     	ds	1
  3443  000092                     Eeprom_Write@WriteSts:
  3444                           	opt stack 0
  3445  000092                     utoa@c:
  3446                           	opt stack 0
  3447  000092                     USBStdFeatureReqHandler@pUEP:
  3448                           	opt stack 0
  3449                           
  3450                           ; 2 bytes @ 0x32
  3451  000092                     	ds	1
  3452  000093                     Eeprom_Write@MemoryAddress:
  3453                           	opt stack 0
  3454  000093                     waitSetupCall@isCallArrived:
  3455                           	opt stack 0
  3456  000093                     cmdVisualEffet@isCmdSuccessfull:
  3457                           	opt stack 0
  3458  000093                     strtol@sign:
  3459                           	opt stack 0
  3460  000093                     LedStateMachine@LedBlink:
  3461                           	opt stack 0
  3462  000093                     itoa@buf:
  3463                           	opt stack 0
  3464                           
  3465                           ; 2 bytes @ 0x33
  3466  000093                     	ds	1
  3467  000094                     USBStdFeatureReqHandler@current_ep_data:
  3468                           	opt stack 0
  3469  000094                     Eeprom_Write@SlaveAddress:
  3470                           	opt stack 0
  3471  000094                     parseCommand@state:
  3472                           	opt stack 0
  3473  000094                     cmdVisualEffet@seconds:
  3474                           	opt stack 0
  3475  000094                     strtol@a:
  3476                           	opt stack 0
  3477                           
  3478                           ; 4 bytes @ 0x34
  3479  000094                     	ds	1
  3480  000095                     Eeprom_Write@CommandLength:
  3481                           	opt stack 0
  3482  000095                     detectCmd@currentState:
  3483                           	opt stack 0
  3484  000095                     ___lldiv@counter:
  3485                           	opt stack 0
  3486  000095                     OsTmr_GetTimerStatus@Timer:
  3487                           	opt stack 0
  3488  000095                     USBStdFeatureReqHandler@p:
  3489                           	opt stack 0
  3490  000095                     LedStateMachine@LedPulse:
  3491                           	opt stack 0
  3492  000095                     itoa@val:
  3493                           	opt stack 0
  3494                           
  3495                           ; 2 bytes @ 0x35
  3496  000095                     	ds	1
  3497  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3498                           	opt stack 0
  3499  000096                     SetUartBaudRate@UartConfig:
  3500                           	opt stack 0
  3501  000096                     saveNumberInMemory@phoneNumber:
  3502                           	opt stack 0
  3503  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3504                           	opt stack 0
  3505                           
  3506                           ; 4 bytes @ 0x36
  3507  000096                     	ds	1
  3508  000097                     ??_USBCtrlEPService:
  3509  000097                     itoa@base:
  3510                           	opt stack 0
  3511                           
  3512                           ; 2 bytes @ 0x37
  3513  000097                     	ds	1
  3514  000098                     Tmr_TmrBPrSet@Prescaler:
  3515                           	opt stack 0
  3516  000098                     Mdm_SetSmsFormat@TextFormat:
  3517                           	opt stack 0
  3518  000098                     USBDeviceTasks@i:
  3519                           	opt stack 0
  3520  000098                     LedStateMachine@LedOutSts:
  3521                           	opt stack 0
  3522  000098                     saveNumberInMemory@address:
  3523                           	opt stack 0
  3524  000098                     strtol@c:
  3525                           	opt stack 0
  3526                           
  3527                           ; 1 bytes @ 0x38
  3528  000098                     	ds	1
  3529  000099                     Tmr_TmrBPrSet@Postscaler:
  3530                           	opt stack 0
  3531  000099                     SetUartBaudRate@Module:
  3532                           	opt stack 0
  3533  000099                     LedStateMachine@Led:
  3534                           	opt stack 0
  3535  000099                     initGprsModem@isInitialized:
  3536                           	opt stack 0
  3537  000099                     detectUsbNumber@isCmdSuccessfull:
  3538                           	opt stack 0
  3539  000099                     itoa@cp:
  3540                           	opt stack 0
  3541  000099                     ModemEvtParser@ClipString:
  3542                           	opt stack 0
  3543                           
  3544                           ; 5 bytes @ 0x39
  3545  000099                     	ds	1
  3546  00009A                     ??_Led_MainTask:
  3547  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3548                           	opt stack 0
  3549  00009A                     SetUartBaudRate@BaudRateRegister:
  3550                           	opt stack 0
  3551  00009A                     SetBaudRate@McuClockHz:
  3552                           	opt stack 0
  3553                           
  3554                           ; 4 bytes @ 0x3A
  3555  00009A                     	ds	1
  3556  00009B                     ??_SendSmsSm:
  3557  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3558                           	opt stack 0
  3559  00009B                     detectUsbNumber@isActionPerformed:
  3560                           	opt stack 0
  3561  00009B                     OsTmr_Wait@WaitTimer:
  3562                           	opt stack 0
  3563  00009B                     InitGprsNetwork@Apn:
  3564                           	opt stack 0
  3565  00009B                     HttpGetMethod@GetData:
  3566                           	opt stack 0
  3567                           
  3568                           ; 2 bytes @ 0x3B
  3569  00009B                     	ds	1
  3570  00009C                     SetUartBaudRate@DivisionFactor:
  3571                           	opt stack 0
  3572  00009C                     Tmr_TmrBPrSet@Divisor:
  3573                           	opt stack 0
  3574                           
  3575                           ; 4 bytes @ 0x3C
  3576  00009C                     	ds	1
  3577  00009D                     ??_HttpGetMethod:
  3578  00009D                     InitGprsNetwork@ApnLen:
  3579                           	opt stack 0
  3580  00009D                     Uart_InitUartModule@UartConfig:
  3581                           	opt stack 0
  3582  00009D                     OsTmr_Wait@DelayMs:
  3583                           	opt stack 0
  3584                           
  3585                           ; 4 bytes @ 0x3D
  3586  00009D                     	ds	1
  3587  00009E                     ??_SetBaudRate:
  3588  00009E                     ??_InitGprsNetwork:
  3589  00009E                     ModemEvtParser@SmsString:
  3590                           	opt stack 0
  3591                           
  3592                           ; 5 bytes @ 0x3E
  3593  00009E                     	ds	1
  3594  00009F                     ??_Uart_InitUartModule:
  3595                           
  3596                           ; 1 bytes @ 0x3F
  3597  00009F                     	ds	1
  3598  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3599                           	opt stack 0
  3600                           
  3601                           ; 2 bytes @ 0x40
  3602  0000A0                     	ds	1
  3603  0000A1                     Uart_InitUartModule@Module:
  3604                           	opt stack 0
  3605  0000A1                     OsTmr_Wait@Ret:
  3606                           	opt stack 0
  3607                           
  3608                           ; 1 bytes @ 0x41
  3609  0000A1                     	ds	1
  3610  0000A2                     ??_Terminal:
  3611  0000A2                     I2c_InitI2cModule@I2cConfig:
  3612                           	opt stack 0
  3613  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3614                           	opt stack 0
  3615                           
  3616                           ; 2 bytes @ 0x42
  3617  0000A2                     	ds	1
  3618  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3619                           	opt stack 0
  3620  0000A3                     ModemEvtParser@RingString:
  3621                           	opt stack 0
  3622                           
  3623                           ; 4 bytes @ 0x43
  3624  0000A3                     	ds	1
  3625  0000A4                     ??_I2c_InitI2cModule:
  3626  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3627                           	opt stack 0
  3628  0000A4                     Terminal@i:
  3629                           	opt stack 0
  3630  0000A4                     InitSchedTimer@TmrBConfig:
  3631                           	opt stack 0
  3632                           
  3633                           ; 7 bytes @ 0x44
  3634  0000A4                     	ds	1
  3635  0000A5                     Terminal@ReceivedBytes:
  3636                           	opt stack 0
  3637  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3638                           	opt stack 0
  3639                           
  3640                           ; 2 bytes @ 0x45
  3641  0000A5                     	ds	1
  3642  0000A6                     Terminal@Index:
  3643                           	opt stack 0
  3644                           
  3645                           ; 1 bytes @ 0x46
  3646  0000A6                     	ds	1
  3647  0000A7                     ModemEvtParser@Match:
  3648                           	opt stack 0
  3649  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3650                           	opt stack 0
  3651                           
  3652                           ; 1 bytes @ 0x47
  3653  0000A7                     	ds	1
  3654  0000A8                     ModemEvtParser@CompareIdx:
  3655                           	opt stack 0
  3656  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3657                           	opt stack 0
  3658                           
  3659                           ; 1 bytes @ 0x48
  3660  0000A8                     	ds	1
  3661  0000A9                     Eeprom_Read@ReadBuffer:
  3662                           	opt stack 0
  3663                           
  3664                           ; 2 bytes @ 0x49
  3665  0000A9                     	ds	2
  3666  0000AB                     Eeprom_Read@DataLength:
  3667                           	opt stack 0
  3668                           
  3669                           ; 1 bytes @ 0x4B
  3670  0000AB                     	ds	1
  3671  0000AC                     Eeprom_Read@MemoryAddress:
  3672                           	opt stack 0
  3673                           
  3674                           ; 1 bytes @ 0x4C
  3675  0000AC                     	ds	1
  3676  0000AD                     Eeprom_Read@SlaveAddress:
  3677                           	opt stack 0
  3678                           
  3679                           ; 1 bytes @ 0x4D
  3680  0000AD                     	ds	1
  3681  0000AE                     Eeprom_Read@ReadSts:
  3682                           	opt stack 0
  3683                           
  3684                           ; 1 bytes @ 0x4E
  3685  0000AE                     	ds	1
  3686  0000AF                     Eeprom_Read@QuerySts:
  3687                           	opt stack 0
  3688                           
  3689                           ; 1 bytes @ 0x4F
  3690  0000AF                     	ds	1
  3691  0000B0                     tblptru	equ	0xFF8
  3692                           tblptrh	equ	0xFF7
  3693                           tblptrl	equ	0xFF6
  3694                           tablat	equ	0xFF5
  3695                           postinc0	equ	0xFEE
  3696                           wreg	equ	0xFE8
  3697                           postdec1	equ	0xFE5
  3698                           fsr1h	equ	0xFE2
  3699                           fsr1l	equ	0xFE1
  3700                           
  3701                           ; 1 bytes @ 0x50
  3702                           
  3703                           	psect	cstackCOMRAM
  3704  000001                     __pcstackCOMRAM:
  3705                           	opt stack 0
  3706  000001                     i2GenerateEvt@Event:
  3707                           	opt stack 0
  3708                           
  3709                           ; 2 bytes @ 0x0
  3710  000001                     	ds	2
  3711  000003                     i2GenerateEvt@EventStatus:
  3712                           	opt stack 0
  3713                           
  3714                           ; 1 bytes @ 0x2
  3715  000003                     	ds	1
  3716  000004                     Uart_MdmGsmGprsReadService@UartData:
  3717                           	opt stack 0
  3718                           
  3719                           ; 1 bytes @ 0x3
  3720  000004                     	ds	1
  3721  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3722                           	opt stack 0
  3723                           
  3724                           ; 2 bytes @ 0x4
  3725  000005                     	ds	2
  3726  000007                     ??_HighPriorityIsr:
  3727                           
  3728                           ; 1 bytes @ 0x6
  3729  000007                     	ds	18
  3730  000019                     ?i1___wmul:
  3731                           	opt stack 0
  3732  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3733                           	opt stack 0
  3734  000019                     i1GenerateEvt@Event:
  3735                           	opt stack 0
  3736  000019                     i1___wmul@multiplier:
  3737                           	opt stack 0
  3738                           
  3739                           ; 2 bytes @ 0x18
  3740  000019                     	ds	2
  3741  00001B                     i1GenerateEvt@EventStatus:
  3742                           	opt stack 0
  3743  00001B                     i1___wmul@multiplicand:
  3744                           	opt stack 0
  3745                           
  3746                           ; 2 bytes @ 0x1A
  3747  00001B                     	ds	1
  3748  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3749                           	opt stack 0
  3750                           
  3751                           ; 2 bytes @ 0x1B
  3752  00001C                     	ds	1
  3753  00001D                     i1___wmul@product:
  3754                           	opt stack 0
  3755                           
  3756                           ; 2 bytes @ 0x1C
  3757  00001D                     	ds	1
  3758  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3759                           	opt stack 0
  3760                           
  3761                           ; 1 bytes @ 0x1D
  3762  00001E                     	ds	1
  3763  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3764                           	opt stack 0
  3765                           
  3766                           ; 1 bytes @ 0x1E
  3767  00001F                     	ds	1
  3768  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3769                           	opt stack 0
  3770                           
  3771                           ; 1 bytes @ 0x1F
  3772  000020                     	ds	1
  3773  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3774                           	opt stack 0
  3775                           
  3776                           ; 2 bytes @ 0x20
  3777  000021                     	ds	2
  3778  000023                     tblptru	equ	0xFF8
  3779                           tblptrh	equ	0xFF7
  3780                           tblptrl	equ	0xFF6
  3781                           tablat	equ	0xFF5
  3782                           postinc0	equ	0xFEE
  3783                           wreg	equ	0xFE8
  3784                           postdec1	equ	0xFE5
  3785                           fsr1h	equ	0xFE2
  3786                           fsr1l	equ	0xFE1
  3787                           
  3788                           ; 1 bytes @ 0x22
  3789 ;;
  3790 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3791 ;;
  3792 ;; *************** function _main *****************
  3793 ;; Defined at:
  3794 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  2   14[None  ] short 
  3801 ;; Registers used:
  3802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;Total ram usage:        0 bytes
  3813 ;; Hardware stack levels required when called:   23
  3814 ;; This function calls:
  3815 ;;		_Sch_MainScheduler
  3816 ;;		_SystemInit
  3817 ;; This function is called by:
  3818 ;;		Startup code after reset
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text0
  3823  006D72                     __ptext0:
  3824                           	opt stack 0
  3825  006D72                     _main:
  3826                           	opt stack 8
  3827                           
  3828                           ;main.c: 61: SystemInit();
  3829                           
  3830                           ;incstack = 0
  3831  006D72  ECBD  F033         	call	_SystemInit	;wreg free
  3832                           
  3833                           ;main.c: 64: Sch_MainScheduler();
  3834  006D76  EC9F  F035         	call	_Sch_MainScheduler	;wreg free
  3835                           
  3836                           ;main.c: 67: return 0;
  3837                           ;	Return value of _main is never used
  3838  006D7A  EF66  F000         	goto	start
  3839  006D7E                     __end_of_main:
  3840                           	opt stack 0
  3841                           tblptru	equ	0xFF8
  3842                           tblptrh	equ	0xFF7
  3843                           tblptrl	equ	0xFF6
  3844                           tablat	equ	0xFF5
  3845                           postinc0	equ	0xFEE
  3846                           wreg	equ	0xFE8
  3847                           postdec1	equ	0xFE5
  3848                           fsr1h	equ	0xFE2
  3849                           fsr1l	equ	0xFE1
  3850                           
  3851 ;; *************** function _SystemInit *****************
  3852 ;; Defined at:
  3853 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      void 
  3860 ;; Registers used:
  3861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3871 ;;Total ram usage:        0 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:   15
  3874 ;; This function calls:
  3875 ;;		_InitSchedTimer
  3876 ;;		_Irq_InitIntController
  3877 ;;		_Mcu_ConfigExtInt
  3878 ;;		_Mcu_StartSystemPll
  3879 ;;		_Pm_DsReleasePinControl
  3880 ;;		_Tmr_RegisterTmr2IsrCallback
  3881 ;; This function is called by:
  3882 ;;		_main
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text1
  3887  00677A                     __ptext1:
  3888                           	opt stack 0
  3889  00677A                     _SystemInit:
  3890                           	opt stack 15
  3891                           
  3892                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3893                           
  3894                           ;incstack = 0
  3895  00677A  ECED  F036         	call	_Pm_DsReleasePinControl	;wreg free
  3896                           
  3897                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3898  00677E  EC90  F035         	call	_Mcu_StartSystemPll	;wreg free
  3899                           
  3900                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3901  006782  0E01               	movlw	1
  3902  006784  0100               	movlb	0	; () banked
  3903  006786  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3904  006788  0E01               	movlw	1
  3905  00678A  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3906  00678C  0E01               	movlw	1
  3907  00678E  EC61  F034         	call	_Irq_InitIntController
  3908                           
  3909                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3910  006792  0E64               	movlw	low _Sch_SchmIntService
  3911  006794  0100               	movlb	0	; () banked
  3912  006796  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3913  006798  0E6D               	movlw	high _Sch_SchmIntService
  3914  00679A  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3915  00679C  ECD0  F036         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3916                           
  3917                           ;sys_init.c: 132: InitSchedTimer();
  3918  0067A0  EC1D  F034         	call	_InitSchedTimer	;wreg free
  3919                           
  3920                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3921  0067A4  ECD9  F035         	call	_Mcu_ConfigExtInt	;wreg free
  3922  0067A8  0012               	return		;funcret
  3923  0067AA                     __end_of_SystemInit:
  3924                           	opt stack 0
  3925                           tblptru	equ	0xFF8
  3926                           tblptrh	equ	0xFF7
  3927                           tblptrl	equ	0xFF6
  3928                           tablat	equ	0xFF5
  3929                           postinc0	equ	0xFEE
  3930                           wreg	equ	0xFE8
  3931                           postdec1	equ	0xFE5
  3932                           fsr1h	equ	0xFE2
  3933                           fsr1l	equ	0xFE1
  3934                           
  3935 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3936 ;; Defined at:
  3937 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3940 ;;		 -> Sch_SchmIntService(1), 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;		None
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  1    wreg      void 
  3945 ;; Registers used:
  3946 ;;		wreg, status,2, status,0
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3952 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3955 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3956 ;;Total ram usage:        2 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; Hardware stack levels required when called:   11
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		_SystemInit
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text2
  3967  006DA0                     __ptext2:
  3968                           	opt stack 0
  3969  006DA0                     _Tmr_RegisterTmr2IsrCallback:
  3970                           	opt stack 18
  3971                           
  3972                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3973                           
  3974                           ;incstack = 0
  3975  006DA0  C07D  F2E5         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3976  006DA4  C07E  F2E6         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3977  006DA8  0012               	return		;funcret
  3978  006DAA                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3979                           	opt stack 0
  3980                           tblptru	equ	0xFF8
  3981                           tblptrh	equ	0xFF7
  3982                           tblptrl	equ	0xFF6
  3983                           tablat	equ	0xFF5
  3984                           postinc0	equ	0xFEE
  3985                           wreg	equ	0xFE8
  3986                           postdec1	equ	0xFE5
  3987                           fsr1h	equ	0xFE2
  3988                           fsr1l	equ	0xFE1
  3989                           
  3990 ;; *************** function _Pm_DsReleasePinControl *****************
  3991 ;; Defined at:
  3992 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		None
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4010 ;;Total ram usage:        0 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:   11
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_SystemInit
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text3
  4021  006DDA                     __ptext3:
  4022                           	opt stack 0
  4023  006DDA                     _Pm_DsReleasePinControl:
  4024                           	opt stack 18
  4025                           
  4026                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  4027                           
  4028                           ;incstack = 0
  4029  006DDA  010F               	movlb	15	; () banked
  4030  006DDC  914C               	bcf	76,0,b	;volatile
  4031                           
  4032                           ; BSR set to: 15
  4033  006DDE  0012               	return		;funcret
  4034  006DE0                     __end_of_Pm_DsReleasePinControl:
  4035                           	opt stack 0
  4036                           tblptru	equ	0xFF8
  4037                           tblptrh	equ	0xFF7
  4038                           tblptrl	equ	0xFF6
  4039                           tablat	equ	0xFF5
  4040                           postinc0	equ	0xFEE
  4041                           wreg	equ	0xFE8
  4042                           postdec1	equ	0xFE5
  4043                           fsr1h	equ	0xFE2
  4044                           fsr1l	equ	0xFE1
  4045                           
  4046 ;; *************** function _Mcu_StartSystemPll *****************
  4047 ;; Defined at:
  4048 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;		None
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4063 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4065 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4066 ;;Total ram usage:        2 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:   11
  4069 ;; This function calls:
  4070 ;;		Nothing
  4071 ;; This function is called by:
  4072 ;;		_SystemInit
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text4
  4077  006B20                     __ptext4:
  4078                           	opt stack 0
  4079  006B20                     _Mcu_StartSystemPll:
  4080                           	opt stack 18
  4081                           
  4082                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  4083                           
  4084                           ; BSR set to: 15
  4085                           ;incstack = 0
  4086  006B20  0E03               	movlw	3
  4087  006B22  0100               	movlb	0	; () banked
  4088  006B24  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  4089  006B26  0EE8               	movlw	232
  4090  006B28  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4094  006B2A  8C9B               	bsf	3995,6,c	;volatile
  4095  006B2C                     l12525:
  4096                           
  4097                           ; BSR set to: 0
  4098  006B2C  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4099  006B2E  A0D8               	btfss	status,0,c
  4100  006B30  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4101  006B32  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4102  006B34  E1FB               	bnz	l12525
  4103  006B36  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4104  006B38  B4D8               	btfsc	status,2,c
  4105  006B3A  0012               	return	
  4106  006B3C  D7F7               	goto	l237
  4107  006B3E                     __end_of_Mcu_StartSystemPll:
  4108                           	opt stack 0
  4109                           tblptru	equ	0xFF8
  4110                           tblptrh	equ	0xFF7
  4111                           tblptrl	equ	0xFF6
  4112                           tablat	equ	0xFF5
  4113                           postinc0	equ	0xFEE
  4114                           wreg	equ	0xFE8
  4115                           postdec1	equ	0xFE5
  4116                           fsr1h	equ	0xFE2
  4117                           fsr1l	equ	0xFE1
  4118                           status	equ	0xFD8
  4119                           
  4120 ;; *************** function _Mcu_ConfigExtInt *****************
  4121 ;; Defined at:
  4122 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;		None
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		wreg, status,2
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4140 ;;Total ram usage:        0 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:   11
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		_SystemInit
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text5
  4151  006BB2                     __ptext5:
  4152                           	opt stack 0
  4153  006BB2                     _Mcu_ConfigExtInt:
  4154                           	opt stack 18
  4155                           
  4156                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;incstack = 0
  4160  006BB2  8093               	bsf	3987,0,c	;volatile
  4161                           
  4162                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4163  006BB4  8695               	bsf	3989,3,c	;volatile
  4164                           
  4165                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4166  006BB6  010F               	movlb	15	; () banked
  4167  006BB8  8949               	bsf	73,4,b	;volatile
  4168                           
  4169                           ; BSR set to: 15
  4170                           ;mcu_drv.c: 108: RPINR1 = 20;
  4171  006BBA  0E14               	movlw	20
  4172  006BBC  010E               	movlb	14	; () banked
  4173  006BBE  6FE7               	movwf	231,b	;volatile
  4174                           
  4175                           ; BSR set to: 14
  4176                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4177  006BC0  88F2               	bsf	intcon,4,c	;volatile
  4178                           
  4179                           ; BSR set to: 14
  4180                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4181  006BC2  86F0               	bsf	intcon3,3,c	;volatile
  4182                           
  4183                           ; BSR set to: 14
  4184                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4185  006BC4  8CF0               	bsf	intcon3,6,c	;volatile
  4186                           
  4187                           ; BSR set to: 14
  4188                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4189  006BC6  9CF1               	bcf	intcon2,6,c	;volatile
  4190                           
  4191                           ; BSR set to: 14
  4192                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4193  006BC8  9AF1               	bcf	intcon2,5,c	;volatile
  4194                           
  4195                           ; BSR set to: 14
  4196  006BCA  0012               	return		;funcret
  4197  006BCC                     __end_of_Mcu_ConfigExtInt:
  4198                           	opt stack 0
  4199                           tblptru	equ	0xFF8
  4200                           tblptrh	equ	0xFF7
  4201                           tblptrl	equ	0xFF6
  4202                           tablat	equ	0xFF5
  4203                           intcon	equ	0xFF2
  4204                           intcon2	equ	0xFF1
  4205                           intcon3	equ	0xFF0
  4206                           postinc0	equ	0xFEE
  4207                           wreg	equ	0xFE8
  4208                           postdec1	equ	0xFE5
  4209                           fsr1h	equ	0xFE2
  4210                           fsr1l	equ	0xFE1
  4211                           status	equ	0xFD8
  4212                           
  4213 ;; *************** function _Irq_InitIntController *****************
  4214 ;; Defined at:
  4215 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  IntPriorityE    1    wreg     enum E7720
  4218 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4219 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4231 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4232 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4234 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4235 ;;Total ram usage:        3 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:   11
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		_SystemInit
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text6
  4246  0068C2                     __ptext6:
  4247                           	opt stack 0
  4248  0068C2                     _Irq_InitIntController:
  4249                           	opt stack 18
  4250                           
  4251                           ; BSR set to: 14
  4252                           ;incstack = 0
  4253                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4254  0068C2  0100               	movlb	0	; () banked
  4255  0068C4  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4256                           
  4257                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4258  0068C6  0100               	movlb	0	; () banked
  4259  0068C8  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4260  0068CA  D002               	bra	u11015
  4261  0068CC  9ED0               	bcf	4048,7,c	;volatile
  4262  0068CE  D001               	bra	u11016
  4263  0068D0                     u11015:
  4264  0068D0  8ED0               	bsf	4048,7,c	;volatile
  4265  0068D2                     u11016:
  4266                           
  4267                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4268  0068D2  0100               	movlb	0	; () banked
  4269  0068D4  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4270  0068D6  D002               	bra	u11025
  4271  0068D8  9EF2               	bcf	intcon,7,c	;volatile
  4272  0068DA  D001               	bra	u11026
  4273  0068DC                     u11025:
  4274  0068DC  8EF2               	bsf	intcon,7,c	;volatile
  4275  0068DE                     u11026:
  4276                           
  4277                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4278  0068DE  0100               	movlb	0	; () banked
  4279  0068E0  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4280  0068E2  D002               	bra	u11035
  4281  0068E4  9CF2               	bcf	intcon,6,c	;volatile
  4282  0068E6  D001               	bra	u11036
  4283  0068E8                     u11035:
  4284  0068E8  8CF2               	bsf	intcon,6,c	;volatile
  4285  0068EA                     u11036:
  4286  0068EA  0012               	return		;funcret
  4287  0068EC                     __end_of_Irq_InitIntController:
  4288                           	opt stack 0
  4289                           tblptru	equ	0xFF8
  4290                           tblptrh	equ	0xFF7
  4291                           tblptrl	equ	0xFF6
  4292                           tablat	equ	0xFF5
  4293                           intcon	equ	0xFF2
  4294                           intcon2	equ	0xFF1
  4295                           intcon3	equ	0xFF0
  4296                           postinc0	equ	0xFEE
  4297                           wreg	equ	0xFE8
  4298                           postdec1	equ	0xFE5
  4299                           fsr1h	equ	0xFE2
  4300                           fsr1l	equ	0xFE1
  4301                           status	equ	0xFD8
  4302                           
  4303 ;; *************** function _InitSchedTimer *****************
  4304 ;; Defined at:
  4305 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;		None
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4320 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4323 ;;Total ram usage:        7 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; Hardware stack levels required when called:   14
  4326 ;; This function calls:
  4327 ;;		_Tmr_TmrBConfig
  4328 ;; This function is called by:
  4329 ;;		_SystemInit
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text7
  4334  00683A                     __ptext7:
  4335                           	opt stack 0
  4336  00683A                     _InitSchedTimer:
  4337                           	opt stack 15
  4338                           
  4339                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4340                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4341                           
  4342                           ;incstack = 0
  4343  00683A  0E04               	movlw	4
  4344  00683C  0100               	movlb	0	; () banked
  4345  00683E  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4346                           
  4347                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4348  006840  0E0C               	movlw	12
  4349  006842  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4350                           
  4351                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4352  006844  0E00               	movlw	0
  4353  006846  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4354                           
  4355                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4356  006848  0E01               	movlw	1
  4357  00684A  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4358                           
  4359                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4360  00684C  0E03               	movlw	3
  4361  00684E  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4362  006850  0EE8               	movlw	232
  4363  006852  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4364                           
  4365                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4366  006854  0E01               	movlw	1
  4367  006856  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4371  006858  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4372  00685A  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4373  00685C  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4374  00685E  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4375  006860  0E02               	movlw	2
  4376  006862  ECC6  F01F         	call	_Tmr_TmrBConfig
  4377  006866  0012               	return		;funcret
  4378  006868                     __end_of_InitSchedTimer:
  4379                           	opt stack 0
  4380                           tblptru	equ	0xFF8
  4381                           tblptrh	equ	0xFF7
  4382                           tblptrl	equ	0xFF6
  4383                           tablat	equ	0xFF5
  4384                           intcon	equ	0xFF2
  4385                           intcon2	equ	0xFF1
  4386                           intcon3	equ	0xFF0
  4387                           postinc0	equ	0xFEE
  4388                           wreg	equ	0xFE8
  4389                           postdec1	equ	0xFE5
  4390                           fsr1h	equ	0xFE2
  4391                           fsr1l	equ	0xFE1
  4392                           status	equ	0xFD8
  4393                           
  4394 ;; *************** function _Tmr_TmrBConfig *****************
  4395 ;; Defined at:
  4396 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;  TmrNumb         1    wreg     unsigned char 
  4399 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4400 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4412 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4413 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4414 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4415 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4416 ;;Total ram usage:        4 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:   13
  4419 ;; This function calls:
  4420 ;;		_TmrBInit
  4421 ;;		_Tmr_StartTmr
  4422 ;;		_Tmr_TmrBIrqSet
  4423 ;;		_Tmr_TmrBPrSet
  4424 ;; This function is called by:
  4425 ;;		_InitSchedTimer
  4426 ;;		_InitAuxTimer
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text8
  4431  003F8C                     __ptext8:
  4432                           	opt stack 0
  4433  003F8C                     _Tmr_TmrBConfig:
  4434                           	opt stack 15
  4435                           
  4436                           ;incstack = 0
  4437                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4438  003F8C  0100               	movlb	0	; () banked
  4439  003F8E  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4440                           
  4441                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4442  003F90  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4443  003F94  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4444  003F98  50DF               	movf	indf2,w,c
  4445  003F9A  0100               	movlb	0	; () banked
  4446  003F9C  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4447  003F9E  EE20 F001          	lfsr	2,1
  4448  003FA2  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4449  003FA4  26D9               	addwf	fsr2l,f,c
  4450  003FA6  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4451  003FA8  22DA               	addwfc	fsr2h,f,c
  4452  003FAA  50DF               	movf	indf2,w,c
  4453  003FAC  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4454  003FAE  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4455  003FB0  ECBF  F026         	call	_TmrBInit
  4456                           
  4457                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4458  003FB4  0100               	movlb	0	; () banked
  4459  003FB6  EE20 F002          	lfsr	2,2
  4460  003FBA  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4461  003FBC  26D9               	addwf	fsr2l,f,c
  4462  003FBE  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4463  003FC0  22DA               	addwfc	fsr2h,f,c
  4464  003FC2  04DE               	decf	postinc2,w,c
  4465  003FC4  A4D8               	btfss	status,2,c
  4466  003FC6  D00E               	goto	l546
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;tmr_drv.c: 277: {
  4470                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4471  003FC8  EE20 F003          	lfsr	2,3
  4472  003FCC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4473  003FCE  26D9               	addwf	fsr2l,f,c
  4474  003FD0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4475  003FD2  22DA               	addwfc	fsr2h,f,c
  4476  003FD4  50DF               	movf	indf2,w,c
  4477  003FD6  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4478  003FD8  0E01               	movlw	1
  4479  003FDA  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4480  003FDC  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4481  003FDE  EC8E  F030         	call	_Tmr_TmrBIrqSet
  4482                           
  4483                           ;tmr_drv.c: 280: }
  4484  003FE2  D00E               	goto	l547
  4485  003FE4                     l546:
  4486                           
  4487                           ;tmr_drv.c: 281: else
  4488                           ;tmr_drv.c: 282: {
  4489                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4490  003FE4  0100               	movlb	0	; () banked
  4491  003FE6  EE20 F003          	lfsr	2,3
  4492  003FEA  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4493  003FEC  26D9               	addwf	fsr2l,f,c
  4494  003FEE  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4495  003FF0  22DA               	addwfc	fsr2h,f,c
  4496  003FF2  50DF               	movf	indf2,w,c
  4497  003FF4  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4498  003FF6  0E00               	movlw	0
  4499  003FF8  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4500  003FFA  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4501  003FFC  EC8E  F030         	call	_Tmr_TmrBIrqSet
  4502  004000                     l547:
  4503                           
  4504                           ;tmr_drv.c: 285: }
  4505                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4506  004000  0100               	movlb	0	; () banked
  4507  004002  EE20 F004          	lfsr	2,4
  4508  004006  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4509  004008  26D9               	addwf	fsr2l,f,c
  4510  00400A  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4511  00400C  22DA               	addwfc	fsr2h,f,c
  4512  00400E  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4513  004012  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4514  004016  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4515  00401A  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4516  00401E  50DF               	movf	indf2,w,c
  4517  004020  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4518  004022  EE20 F001          	lfsr	2,1
  4519  004026  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4520  004028  26D9               	addwf	fsr2l,f,c
  4521  00402A  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4522  00402C  22DA               	addwfc	fsr2h,f,c
  4523  00402E  50DF               	movf	indf2,w,c
  4524  004030  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4525  004032  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4526  004034  EC5D  F019         	call	_Tmr_TmrBPrSet
  4527                           
  4528                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4529  004038  0100               	movlb	0	; () banked
  4530  00403A  EE20 F006          	lfsr	2,6
  4531  00403E  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4532  004040  26D9               	addwf	fsr2l,f,c
  4533  004042  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4534  004044  22DA               	addwfc	fsr2h,f,c
  4535  004046  04DE               	decf	postinc2,w,c
  4536  004048  A4D8               	btfss	status,2,c
  4537  00404A  0012               	return	
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;tmr_drv.c: 290: {
  4541                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4542  00404C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4543  00404E  EC60  F035         	call	_Tmr_StartTmr
  4544                           
  4545                           ;tmr_drv.c: 293: }
  4546  004052  0012               	return	
  4547  004054                     __end_of_Tmr_TmrBConfig:
  4548                           	opt stack 0
  4549                           tblptru	equ	0xFF8
  4550                           tblptrh	equ	0xFF7
  4551                           tblptrl	equ	0xFF6
  4552                           tablat	equ	0xFF5
  4553                           intcon	equ	0xFF2
  4554                           intcon2	equ	0xFF1
  4555                           intcon3	equ	0xFF0
  4556                           postinc0	equ	0xFEE
  4557                           wreg	equ	0xFE8
  4558                           postdec1	equ	0xFE5
  4559                           fsr1h	equ	0xFE2
  4560                           fsr1l	equ	0xFE1
  4561                           indf2	equ	0xFDF
  4562                           postinc2	equ	0xFDE
  4563                           postdec2	equ	0xFDD
  4564                           fsr2h	equ	0xFDA
  4565                           fsr2l	equ	0xFD9
  4566                           status	equ	0xFD8
  4567                           
  4568 ;; *************** function _Tmr_TmrBPrSet *****************
  4569 ;; Defined at:
  4570 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  TmrNumb         1    wreg     unsigned char 
  4573 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4574 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4575 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4578 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4579 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  1    wreg      enum E7736
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4589 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4590 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4592 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4593 ;;Total ram usage:       10 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:   12
  4596 ;; This function calls:
  4597 ;;		___lldiv
  4598 ;;		___lmul
  4599 ;; This function is called by:
  4600 ;;		_Tmr_TmrBConfig
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text9
  4605  0032BA                     __ptext9:
  4606                           	opt stack 0
  4607  0032BA                     _Tmr_TmrBPrSet:
  4608                           	opt stack 15
  4609                           
  4610                           ;incstack = 0
  4611                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4612  0032BA  0100               	movlb	0	; () banked
  4613  0032BC  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4614                           
  4615                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4616                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4617  0032BE  0E00               	movlw	0
  4618  0032C0  0100               	movlb	0	; () banked
  4619  0032C2  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4620  0032C4  0E00               	movlw	0
  4621  0032C6  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4622  0032C8  0E00               	movlw	0
  4623  0032CA  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4624  0032CC  0E00               	movlw	0
  4625  0032CE  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4629  0032D0  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4630  0032D2  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4631  0032D4  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4632  0032D8  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4633  0032DC  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4634  0032DE  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4635  0032E0  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4636  0032E4  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4637  0032E8  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4638  0032EA  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4639  0032EC  ECA5  F02D         	call	___lmul	;wreg free
  4640  0032F0  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4641  0032F4  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4642  0032F8  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4643  0032FC  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4644                           
  4645                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4646  003300  0E00               	movlw	0
  4647  003302  0100               	movlb	0	; () banked
  4648  003304  6F89               	movwf	___lldiv@dividend& (0+255),b
  4649  003306  0E1B               	movlw	27
  4650  003308  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4651  00330A  0EB7               	movlw	183
  4652  00330C  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4653  00330E  0E00               	movlw	0
  4654  003310  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4655  003312  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4656  003316  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4657  00331A  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4658  00331E  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4659  003322  ECDE  F029         	call	___lldiv	;wreg free
  4660  003326  0100               	movlb	0	; () banked
  4661  003328  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4662  00332A  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4663  00332C  E13A               	bnz	l15677
  4664  00332E  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4665  003330  A0D8               	btfss	status,0,c
  4666  003332  D02D               	goto	l529
  4667  003334  D036               	goto	l528
  4668  003336                     
  4669                           ; BSR set to: 0
  4670                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4671                           
  4672                           ; BSR set to: 0
  4673  003336  0E00               	movlw	0
  4674  003338  6F89               	movwf	___lldiv@dividend& (0+255),b
  4675  00333A  0E1B               	movlw	27
  4676  00333C  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4677  00333E  0EB7               	movlw	183
  4678  003340  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4679  003342  0E00               	movlw	0
  4680  003344  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4681  003346  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4682  00334A  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4683  00334E  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4684  003352  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4685  003356  ECDE  F029         	call	___lldiv	;wreg free
  4686  00335A  0100               	movlb	0	; () banked
  4687  00335C  5189               	movf	?___lldiv& (0+255),w,b
  4688  00335E  6ECB               	movwf	4043,c	;volatile
  4689                           
  4690                           ;tmr_drv.c: 210: break;
  4691  003360  D01D               	goto	l531
  4692  003362                     
  4693                           ; BSR set to: 0
  4694                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4695                           
  4696                           ; BSR set to: 0
  4697  003362  0E00               	movlw	0
  4698  003364  6F89               	movwf	___lldiv@dividend& (0+255),b
  4699  003366  0E1B               	movlw	27
  4700  003368  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4701  00336A  0EB7               	movlw	183
  4702  00336C  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4703  00336E  0E00               	movlw	0
  4704  003370  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4705  003372  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4706  003376  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4707  00337A  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4708  00337E  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4709  003382  ECDE  F029         	call	___lldiv	;wreg free
  4710  003386  0100               	movlb	0	; () banked
  4711  003388  5189               	movf	?___lldiv& (0+255),w,b
  4712  00338A  6E77               	movwf	3959,c	;volatile
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;tmr_drv.c: 219: }
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;tmr_drv.c: 218: break;
  4719                           
  4720                           ;tmr_drv.c: 217: default:
  4721                           
  4722                           ;tmr_drv.c: 215: break;
  4723  00338C  D007               	goto	l531
  4724  00338E                     l529:
  4725                           
  4726                           ; BSR set to: 0
  4727                           
  4728                           ; BSR set to: 0
  4729  00338E  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4730                           
  4731                           ; Switch size 1, requested type "space"
  4732                           ; Number of cases is 2, Range of values is 2 to 4
  4733                           ; switch strategies available:
  4734                           ; Name         Instructions Cycles
  4735                           ; simple_byte            7     4 (average)
  4736                           ;	Chosen strategy is simple_byte
  4737  003390  0A02               	xorlw	2	; case 2
  4738  003392  B4D8               	btfsc	status,2,c
  4739  003394  D7D0               	goto	l530
  4740  003396  0A06               	xorlw	6	; case 4
  4741  003398  B4D8               	btfsc	status,2,c
  4742  00339A  D7E3               	goto	l532
  4743  00339C                     l531:
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4747                           
  4748                           ; BSR set to: 0
  4749  00339C  0E00               	movlw	0
  4750  00339E  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4751                           
  4752                           ;tmr_drv.c: 223: }
  4753  0033A0  0012               	return	
  4754  0033A2                     l528:
  4755  0033A2                     l15677:
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;tmr_drv.c: 224: else
  4759                           ;tmr_drv.c: 225: {
  4760                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4761  0033A2  0E01               	movlw	1
  4762  0033A4  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4763                           
  4764                           ; BSR set to: 0
  4765  0033A6  0012               	return	
  4766  0033A8                     __end_of_Tmr_TmrBPrSet:
  4767                           	opt stack 0
  4768                           tblptru	equ	0xFF8
  4769                           tblptrh	equ	0xFF7
  4770                           tblptrl	equ	0xFF6
  4771                           tablat	equ	0xFF5
  4772                           prodh	equ	0xFF4
  4773                           prodl	equ	0xFF3
  4774                           intcon	equ	0xFF2
  4775                           intcon2	equ	0xFF1
  4776                           intcon3	equ	0xFF0
  4777                           postinc0	equ	0xFEE
  4778                           wreg	equ	0xFE8
  4779                           postdec1	equ	0xFE5
  4780                           fsr1h	equ	0xFE2
  4781                           fsr1l	equ	0xFE1
  4782                           indf2	equ	0xFDF
  4783                           postinc2	equ	0xFDE
  4784                           postdec2	equ	0xFDD
  4785                           fsr2h	equ	0xFDA
  4786                           fsr2l	equ	0xFD9
  4787                           status	equ	0xFD8
  4788                           
  4789 ;; *************** function _Tmr_TmrBIrqSet *****************
  4790 ;; Defined at:
  4791 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;  TmrNumb         1    wreg     unsigned char 
  4794 ;;  Priority        1   29[BANK0 ] enum E7716
  4795 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      void 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4807 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4808 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4810 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4811 ;;Total ram usage:        3 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:   11
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_Tmr_TmrBConfig
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text10
  4822  00611C                     __ptext10:
  4823                           	opt stack 0
  4824  00611C                     _Tmr_TmrBIrqSet:
  4825                           	opt stack 16
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;incstack = 0
  4829                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4830  00611C  0100               	movlb	0	; () banked
  4831  00611E  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4832                           
  4833                           ;tmr_drv.c: 156: switch (TmrNumb)
  4834  006120  D01A               	goto	l520
  4835  006122                     l521:
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4839  006122  929E               	bcf	3998,1,c	;volatile
  4840                           
  4841                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4842  006124  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4843  006126  D002               	bra	u9315
  4844  006128  929F               	bcf	3999,1,c	;volatile
  4845  00612A  D001               	bra	u9316
  4846  00612C                     u9315:
  4847  00612C  829F               	bsf	3999,1,c	;volatile
  4848  00612E                     u9316:
  4849                           
  4850                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4851  00612E  0100               	movlb	0	; () banked
  4852  006130  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4853  006132  D002               	bra	u9325
  4854  006134  929D               	bcf	3997,1,c	;volatile
  4855  006136  D001               	bra	u9326
  4856  006138                     u9325:
  4857  006138  829D               	bsf	3997,1,c	;volatile
  4858  00613A                     u9326:
  4859                           
  4860                           ;tmr_drv.c: 165: break;
  4861  00613A  0012               	return	
  4862  00613C                     l523:
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4866  00613C  96A4               	bcf	4004,3,c	;volatile
  4867                           
  4868                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4869  00613E  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4870  006140  D002               	bra	u9335
  4871  006142  96A5               	bcf	4005,3,c	;volatile
  4872  006144  D001               	bra	u9336
  4873  006146                     u9335:
  4874  006146  86A5               	bsf	4005,3,c	;volatile
  4875  006148                     u9336:
  4876                           
  4877                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4878  006148  0100               	movlb	0	; () banked
  4879  00614A  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4880  00614C  D002               	bra	u9345
  4881  00614E  96A3               	bcf	4003,3,c	;volatile
  4882  006150  D001               	bra	u9346
  4883  006152                     u9345:
  4884  006152  86A3               	bsf	4003,3,c	;volatile
  4885  006154                     u9346:
  4886                           
  4887                           ;tmr_drv.c: 178: }
  4888                           
  4889                           ;tmr_drv.c: 177: break;
  4890                           
  4891                           ;tmr_drv.c: 176: default:
  4892                           
  4893                           ;tmr_drv.c: 174: break;
  4894  006154  0012               	return	
  4895  006156                     l520:
  4896  006156  0100               	movlb	0	; () banked
  4897  006158  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4898                           
  4899                           ; Switch size 1, requested type "space"
  4900                           ; Number of cases is 2, Range of values is 2 to 4
  4901                           ; switch strategies available:
  4902                           ; Name         Instructions Cycles
  4903                           ; simple_byte            7     4 (average)
  4904                           ;	Chosen strategy is simple_byte
  4905  00615A  0A02               	xorlw	2	; case 2
  4906  00615C  B4D8               	btfsc	status,2,c
  4907  00615E  D7E1               	goto	l521
  4908  006160  0A06               	xorlw	6	; case 4
  4909  006162  A4D8               	btfss	status,2,c
  4910  006164  0012               	return	
  4911  006166  D7EA               	goto	l523
  4912  006168                     __end_of_Tmr_TmrBIrqSet:
  4913                           	opt stack 0
  4914                           tblptru	equ	0xFF8
  4915                           tblptrh	equ	0xFF7
  4916                           tblptrl	equ	0xFF6
  4917                           tablat	equ	0xFF5
  4918                           prodh	equ	0xFF4
  4919                           prodl	equ	0xFF3
  4920                           intcon	equ	0xFF2
  4921                           intcon2	equ	0xFF1
  4922                           intcon3	equ	0xFF0
  4923                           postinc0	equ	0xFEE
  4924                           wreg	equ	0xFE8
  4925                           postdec1	equ	0xFE5
  4926                           fsr1h	equ	0xFE2
  4927                           fsr1l	equ	0xFE1
  4928                           indf2	equ	0xFDF
  4929                           postinc2	equ	0xFDE
  4930                           postdec2	equ	0xFDD
  4931                           fsr2h	equ	0xFDA
  4932                           fsr2l	equ	0xFD9
  4933                           status	equ	0xFD8
  4934                           
  4935 ;; *************** function _Tmr_StartTmr *****************
  4936 ;; Defined at:
  4937 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  TmrNumb         1    wreg     unsigned char 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      void 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, status,0
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4954 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4955 ;;Total ram usage:        1 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; Hardware stack levels required when called:   11
  4958 ;; This function calls:
  4959 ;;		Nothing
  4960 ;; This function is called by:
  4961 ;;		_Tmr_TmrBConfig
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           	psect	text11
  4966  006AC0                     __ptext11:
  4967                           	opt stack 0
  4968  006AC0                     _Tmr_StartTmr:
  4969                           	opt stack 16
  4970                           
  4971                           ;incstack = 0
  4972                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4973  006AC0  0100               	movlb	0	; () banked
  4974  006AC2  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4975                           
  4976                           ;tmr_drv.c: 245: switch (TmrNumb)
  4977  006AC4  D004               	goto	l538
  4978  006AC6                     l539:
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4982  006AC6  84CA               	bsf	4042,2,c	;volatile
  4983                           
  4984                           ;tmr_drv.c: 250: break;
  4985  006AC8  0012               	return	
  4986  006ACA                     l541:
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4990  006ACA  8476               	bsf	3958,2,c	;volatile
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;tmr_drv.c: 259: }
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;tmr_drv.c: 258: break;
  4997                           
  4998                           ;tmr_drv.c: 257: default:
  4999                           
  5000                           ;tmr_drv.c: 255: break;
  5001  006ACC  0012               	return	
  5002  006ACE                     l538:
  5003                           
  5004                           ; BSR set to: 0
  5005  006ACE  0100               	movlb	0	; () banked
  5006  006AD0  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  5007                           
  5008                           ; Switch size 1, requested type "space"
  5009                           ; Number of cases is 2, Range of values is 2 to 4
  5010                           ; switch strategies available:
  5011                           ; Name         Instructions Cycles
  5012                           ; simple_byte            7     4 (average)
  5013                           ;	Chosen strategy is simple_byte
  5014  006AD2  0A02               	xorlw	2	; case 2
  5015  006AD4  B4D8               	btfsc	status,2,c
  5016  006AD6  D7F7               	goto	l539
  5017  006AD8  0A06               	xorlw	6	; case 4
  5018  006ADA  A4D8               	btfss	status,2,c
  5019  006ADC  0012               	return	
  5020  006ADE  D7F5               	goto	l541
  5021  006AE0                     __end_of_Tmr_StartTmr:
  5022                           	opt stack 0
  5023                           tblptru	equ	0xFF8
  5024                           tblptrh	equ	0xFF7
  5025                           tblptrl	equ	0xFF6
  5026                           tablat	equ	0xFF5
  5027                           prodh	equ	0xFF4
  5028                           prodl	equ	0xFF3
  5029                           intcon	equ	0xFF2
  5030                           intcon2	equ	0xFF1
  5031                           intcon3	equ	0xFF0
  5032                           postinc0	equ	0xFEE
  5033                           wreg	equ	0xFE8
  5034                           postdec1	equ	0xFE5
  5035                           fsr1h	equ	0xFE2
  5036                           fsr1l	equ	0xFE1
  5037                           indf2	equ	0xFDF
  5038                           postinc2	equ	0xFDE
  5039                           postdec2	equ	0xFDD
  5040                           fsr2h	equ	0xFDA
  5041                           fsr2l	equ	0xFD9
  5042                           status	equ	0xFD8
  5043                           
  5044 ;; *************** function _TmrBInit *****************
  5045 ;; Defined at:
  5046 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  TmrNumb         1    wreg     unsigned char 
  5049 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  5050 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  1    wreg      void 
  5055 ;; Registers used:
  5056 ;;		wreg, status,2, status,0
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5062 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5063 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5064 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5065 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5066 ;;Total ram usage:        4 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; Hardware stack levels required when called:   11
  5069 ;; This function calls:
  5070 ;;		Nothing
  5071 ;; This function is called by:
  5072 ;;		_Tmr_TmrBConfig
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           	psect	text12
  5077  004D7E                     __ptext12:
  5078                           	opt stack 0
  5079  004D7E                     _TmrBInit:
  5080                           	opt stack 16
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;incstack = 0
  5084                           ;TmrBInit@TmrNumb stored from wreg
  5085  004D7E  0100               	movlb	0	; () banked
  5086  004D80  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  5087                           
  5088                           ;tmr_drv.c: 75: switch (TmrNumb)
  5089  004D82  D03F               	goto	l500
  5090  004D84                     l503:
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5094  004D84  90CA               	bcf	4042,0,c	;volatile
  5095  004D86  D001               	goto	L1
  5096  004D88                     l505:
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5100  004D88  80CA               	bsf	4042,0,c	;volatile
  5101  004D8A                     L1:
  5102                           
  5103                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5104  004D8A  92CA               	bcf	4042,1,c	;volatile
  5105                           
  5106                           ;tmr_drv.c: 91: break;
  5107  004D8C  D00E               	goto	l504
  5108  004D8E                     l506:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5112  004D8E  80CA               	bsf	4042,0,c	;volatile
  5113                           
  5114                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5115  004D90  82CA               	bsf	4042,1,c	;volatile
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;tmr_drv.c: 100: }
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;tmr_drv.c: 99: break;
  5122                           
  5123                           ;tmr_drv.c: 98: default:
  5124                           
  5125                           ;tmr_drv.c: 96: break;
  5126  004D92  D00B               	goto	l504
  5127  004D94                     
  5128                           ; BSR set to: 0
  5129  004D94  0100               	movlb	0	; () banked
  5130  004D96  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5131                           
  5132                           ; Switch size 1, requested type "space"
  5133                           ; Number of cases is 3, Range of values is 1 to 16
  5134                           ; switch strategies available:
  5135                           ; Name         Instructions Cycles
  5136                           ; simple_byte           10     6 (average)
  5137                           ;	Chosen strategy is simple_byte
  5138  004D98  0A01               	xorlw	1	; case 1
  5139  004D9A  B4D8               	btfsc	status,2,c
  5140  004D9C  D7F3               	goto	l503
  5141  004D9E  0A05               	xorlw	5	; case 4
  5142  004DA0  B4D8               	btfsc	status,2,c
  5143  004DA2  D7F2               	goto	l505
  5144  004DA4  0A14               	xorlw	20	; case 16
  5145  004DA6  B4D8               	btfsc	status,2,c
  5146  004DA8  D7F2               	goto	l506
  5147  004DAA                     l504:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5151                           
  5152                           ; BSR set to: 0
  5153  004DAA  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5154  004DAE  0EFF               	movlw	255
  5155  004DB0  277F               	addwf	??_TmrBInit& (0+255),f,b
  5156  004DB2  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5157  004DB4  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5158  004DB6  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5159  004DB8  50CA               	movf	4042,w,c	;volatile
  5160  004DBA  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5161  004DBC  0B87               	andlw	-121
  5162  004DBE  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5163  004DC0  6ECA               	movwf	4042,c	;volatile
  5164                           
  5165                           ;tmr_drv.c: 104: break;
  5166  004DC2  0012               	return	
  5167  004DC4                     l511:
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5171  004DC4  9076               	bcf	3958,0,c	;volatile
  5172  004DC6  D001               	goto	L2
  5173  004DC8                     l513:
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5177  004DC8  8076               	bsf	3958,0,c	;volatile
  5178  004DCA                     L2:
  5179                           
  5180                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5181  004DCA  9276               	bcf	3958,1,c	;volatile
  5182                           
  5183                           ;tmr_drv.c: 120: break;
  5184  004DCC  D00D               	goto	l512
  5185  004DCE                     l514:
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5189  004DCE  8076               	bsf	3958,0,c	;volatile
  5190                           
  5191                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5192  004DD0  8276               	bsf	3958,1,c	;volatile
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;tmr_drv.c: 129: }
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;tmr_drv.c: 128: break;
  5199                           
  5200                           ;tmr_drv.c: 127: default:
  5201                           
  5202                           ;tmr_drv.c: 125: break;
  5203  004DD2  D00A               	goto	l512
  5204  004DD4                     
  5205                           ; BSR set to: 0
  5206                           
  5207                           ; BSR set to: 0
  5208  004DD4  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5209                           
  5210                           ; Switch size 1, requested type "space"
  5211                           ; Number of cases is 3, Range of values is 1 to 16
  5212                           ; switch strategies available:
  5213                           ; Name         Instructions Cycles
  5214                           ; simple_byte           10     6 (average)
  5215                           ;	Chosen strategy is simple_byte
  5216  004DD6  0A01               	xorlw	1	; case 1
  5217  004DD8  B4D8               	btfsc	status,2,c
  5218  004DDA  D7F4               	goto	l511
  5219  004DDC  0A05               	xorlw	5	; case 4
  5220  004DDE  B4D8               	btfsc	status,2,c
  5221  004DE0  D7F3               	goto	l513
  5222  004DE2  0A14               	xorlw	20	; case 16
  5223  004DE4  B4D8               	btfsc	status,2,c
  5224  004DE6  D7F3               	goto	l514
  5225  004DE8                     l512:
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5229                           
  5230                           ; BSR set to: 0
  5231  004DE8  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5232  004DEC  0EFF               	movlw	255
  5233  004DEE  277F               	addwf	??_TmrBInit& (0+255),f,b
  5234  004DF0  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5235  004DF2  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5236  004DF4  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5237  004DF6  5076               	movf	3958,w,c	;volatile
  5238  004DF8  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5239  004DFA  0B87               	andlw	-121
  5240  004DFC  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5241  004DFE  6E76               	movwf	3958,c	;volatile
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;tmr_drv.c: 137: }
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;tmr_drv.c: 136: break;
  5248                           
  5249                           ;tmr_drv.c: 135: default:
  5250                           
  5251                           ;tmr_drv.c: 133: break;
  5252  004E00  0012               	return	
  5253  004E02                     l500:
  5254                           
  5255                           ; BSR set to: 0
  5256  004E02  0100               	movlb	0	; () banked
  5257  004E04  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5258                           
  5259                           ; Switch size 1, requested type "space"
  5260                           ; Number of cases is 2, Range of values is 2 to 4
  5261                           ; switch strategies available:
  5262                           ; Name         Instructions Cycles
  5263                           ; simple_byte            7     4 (average)
  5264                           ;	Chosen strategy is simple_byte
  5265  004E06  0A02               	xorlw	2	; case 2
  5266  004E08  B4D8               	btfsc	status,2,c
  5267  004E0A  D7C4               	goto	l502
  5268  004E0C  0A06               	xorlw	6	; case 4
  5269  004E0E  A4D8               	btfss	status,2,c
  5270  004E10  0012               	return	
  5271  004E12  D7E0               	goto	l510
  5272  004E14                     __end_of_TmrBInit:
  5273                           	opt stack 0
  5274                           tblptru	equ	0xFF8
  5275                           tblptrh	equ	0xFF7
  5276                           tblptrl	equ	0xFF6
  5277                           tablat	equ	0xFF5
  5278                           prodh	equ	0xFF4
  5279                           prodl	equ	0xFF3
  5280                           intcon	equ	0xFF2
  5281                           intcon2	equ	0xFF1
  5282                           intcon3	equ	0xFF0
  5283                           postinc0	equ	0xFEE
  5284                           wreg	equ	0xFE8
  5285                           postdec1	equ	0xFE5
  5286                           fsr1h	equ	0xFE2
  5287                           fsr1l	equ	0xFE1
  5288                           indf2	equ	0xFDF
  5289                           postinc2	equ	0xFDE
  5290                           postdec2	equ	0xFDD
  5291                           fsr2h	equ	0xFDA
  5292                           fsr2l	equ	0xFD9
  5293                           status	equ	0xFD8
  5294                           
  5295 ;; *************** function _Sch_MainScheduler *****************
  5296 ;; Defined at:
  5297 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;		None
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;		None
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5315 ;;Total ram usage:        0 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:   22
  5318 ;; This function calls:
  5319 ;;		_InitializeTasks
  5320 ;;		_ScheduleTasks
  5321 ;; This function is called by:
  5322 ;;		_main
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text13
  5327  006B3E                     __ptext13:
  5328                           	opt stack 0
  5329  006B3E                     _Sch_MainScheduler:
  5330                           	opt stack 8
  5331                           
  5332                           ;os_sched.c: 178: InitializeTasks();
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;incstack = 0
  5336  006B3E  ECA0  F02A         	call	_InitializeTasks	;wreg free
  5337                           
  5338                           ;os_sched.c: 180: SystemState = RunningState;
  5339  006B42  0E01               	movlw	1
  5340  006B44  0100               	movlb	0	; () banked
  5341  006B46  6FD4               	movwf	_SystemState& (0+255),b
  5342  006B48                     
  5343                           ;os_sched.c: 188: {
  5344                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5345                           
  5346                           ; BSR set to: 0
  5347  006B48  0102               	movlb	2	; () banked
  5348  006B4A  51F2               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5349  006B4C  A4D8               	btfss	status,2,c
  5350  006B4E  D7FC               	goto	l790
  5351                           
  5352                           ; BSR set to: 2
  5353                           ;os_sched.c: 191: {
  5354                           ;os_sched.c: 196: ScheduleTasks();
  5355  006B50  EC31  F017         	call	_ScheduleTasks	;wreg free
  5356                           
  5357                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5358  006B54  0E01               	movlw	1
  5359  006B56  0102               	movlb	2	; () banked
  5360  006B58  6FF2               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5361                           
  5362                           ; BSR set to: 2
  5363                           
  5364                           ; BSR set to: 2
  5365  006B5A  D7F6               	goto	l790
  5366  006B5C                     __end_of_Sch_MainScheduler:
  5367                           	opt stack 0
  5368                           tblptru	equ	0xFF8
  5369                           tblptrh	equ	0xFF7
  5370                           tblptrl	equ	0xFF6
  5371                           tablat	equ	0xFF5
  5372                           prodh	equ	0xFF4
  5373                           prodl	equ	0xFF3
  5374                           intcon	equ	0xFF2
  5375                           intcon2	equ	0xFF1
  5376                           intcon3	equ	0xFF0
  5377                           postinc0	equ	0xFEE
  5378                           wreg	equ	0xFE8
  5379                           postdec1	equ	0xFE5
  5380                           fsr1h	equ	0xFE2
  5381                           fsr1l	equ	0xFE1
  5382                           indf2	equ	0xFDF
  5383                           postinc2	equ	0xFDE
  5384                           postdec2	equ	0xFDD
  5385                           fsr2h	equ	0xFDA
  5386                           fsr2l	equ	0xFD9
  5387                           status	equ	0xFD8
  5388                           
  5389 ;; *************** function _ScheduleTasks *****************
  5390 ;; Defined at:
  5391 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;		None
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  ActiveTaskIn    1  200[BANK2 ] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5406 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5407 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5408 ;;      Totals:         0       0       0       1       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5409 ;;Total ram usage:        5 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:   21
  5412 ;; This function calls:
  5413 ;;		_I2cSlv_MainTask
  5414 ;;		_Led_MainTask
  5415 ;;		_MdmHttp_MainTask
  5416 ;;		_Mdm_DrvMainFn
  5417 ;;		_Mdm_MainTask
  5418 ;;		_MyApp_Task
  5419 ;;		_Rtcm_MainTask
  5420 ;;		_Term_MainTask
  5421 ;;		_UsbDevice_MainTask
  5422 ;;		_Wdg_MainTask
  5423 ;; This function is called by:
  5424 ;;		_Sch_MainScheduler
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text14
  5429  002E62                     __ptext14:
  5430                           	opt stack 0
  5431  002E62                     _ScheduleTasks:
  5432                           	opt stack 8
  5433                           
  5434                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5435                           
  5436                           ; BSR set to: 2
  5437                           ;incstack = 0
  5438  002E62  0E00               	movlw	0
  5439  002E64  0102               	movlb	2	; () banked
  5440  002E66  6FC8               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5441                           
  5442                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5443  002E68  0E00               	movlw	0
  5444  002E6A  6FC8               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5445  002E6C                     l16989:
  5446                           
  5447                           ; BSR set to: 2
  5448  002E6C  0E2F               	movlw	low _TaskNumber
  5449  002E6E  6EF6               	movwf	tblptrl,c
  5450  002E70                     	if	1	;There is more than 1 active tblptr byte
  5451  002E70  0EFC               	movlw	high _TaskNumber
  5452  002E72  6EF7               	movwf	tblptrh,c
  5453  002E74                     	endif
  5454  002E74                     	if	0	;There are less than 3 active tblptr bytes
  5455  002E74                     	endif
  5456  002E74  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5457  002E76  0104               	movlb	4	; () banked
  5458  002E78  6FF9               	movwf	??_ScheduleTasks& (0+255),b
  5459  002E7A  6BFA               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5460  002E7C  0009               	tblrd		*+
  5461  002E7E  50F5               	movf	tablat,w,c
  5462  002E80  5DF9               	subwf	??_ScheduleTasks& (0+255),w,b
  5463  002E82  0009               	tblrd		*+
  5464  002E84  50F5               	movf	tablat,w,c
  5465  002E86  59FA               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5466  002E88  B0D8               	btfsc	status,0,c
  5467  002E8A  0012               	return	
  5468                           
  5469                           ; BSR set to: 4
  5470                           ;os_sched.c: 106: {
  5471                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5472                           
  5473                           ; BSR set to: 4
  5474                           
  5475                           ; BSR set to: 4
  5476  002E8C  0102               	movlb	2	; () banked
  5477  002E8E  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5478  002E90  0D08               	mullw	8
  5479  002E92  0E03               	movlw	3
  5480  002E94  26F3               	addwf	prodl,f,c
  5481  002E96  0E00               	movlw	0
  5482  002E98  22F4               	addwfc	prodh,f,c
  5483  002E9A  0E86               	movlw	low _TaskTable
  5484  002E9C  24F3               	addwf	prodl,w,c
  5485  002E9E  6ED9               	movwf	fsr2l,c
  5486  002EA0  0E05               	movlw	high _TaskTable
  5487  002EA2  20F4               	addwfc	prodh,w,c
  5488  002EA4  6EDA               	movwf	fsr2h,c
  5489  002EA6  2ADE               	incf	postinc2,f,c
  5490  002EA8  0E00               	movlw	0
  5491  002EAA  22DD               	addwfc	postdec2,f,c
  5492                           
  5493                           ; BSR set to: 2
  5494                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5495  002EAC  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5496  002EAE  0D08               	mullw	8
  5497  002EB0  0E05               	movlw	5
  5498  002EB2  26F3               	addwf	prodl,f,c
  5499  002EB4  0E00               	movlw	0
  5500  002EB6  22F4               	addwfc	prodh,f,c
  5501  002EB8  0E86               	movlw	low _TaskTable
  5502  002EBA  24F3               	addwf	prodl,w,c
  5503  002EBC  6ED9               	movwf	fsr2l,c
  5504  002EBE  0E05               	movlw	high _TaskTable
  5505  002EC0  20F4               	addwfc	prodh,w,c
  5506  002EC2  6EDA               	movwf	fsr2h,c
  5507  002EC4  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5508  002EC6  0D08               	mullw	8
  5509  002EC8  0E03               	movlw	3
  5510  002ECA  26F3               	addwf	prodl,f,c
  5511  002ECC  0E00               	movlw	0
  5512  002ECE  22F4               	addwfc	prodh,f,c
  5513  002ED0  0E86               	movlw	low _TaskTable
  5514  002ED2  24F3               	addwf	prodl,w,c
  5515  002ED4  6EE1               	movwf	fsr1l,c
  5516  002ED6  0E05               	movlw	high _TaskTable
  5517  002ED8  20F4               	addwfc	prodh,w,c
  5518  002EDA  6EE2               	movwf	fsr1h,c
  5519  002EDC  50DE               	movf	postinc2,w,c
  5520  002EDE  5CE6               	subwf	postinc1,w,c
  5521  002EE0  50DE               	movf	postinc2,w,c
  5522  002EE2  58E6               	subwfb	postinc1,w,c
  5523  002EE4  A0D8               	btfss	status,0,c
  5524  002EE6  D04E               	goto	l775
  5525                           
  5526                           ; BSR set to: 2
  5527                           ;os_sched.c: 111: {
  5528                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5529  002EE8  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5530  002EEA  0D08               	mullw	8
  5531  002EEC  0E03               	movlw	3
  5532  002EEE  26F3               	addwf	prodl,f,c
  5533  002EF0  0E00               	movlw	0
  5534  002EF2  22F4               	addwfc	prodh,f,c
  5535  002EF4  0E86               	movlw	low _TaskTable
  5536  002EF6  24F3               	addwf	prodl,w,c
  5537  002EF8  6ED9               	movwf	fsr2l,c
  5538  002EFA  0E05               	movlw	high _TaskTable
  5539  002EFC  20F4               	addwfc	prodh,w,c
  5540  002EFE  6EDA               	movwf	fsr2h,c
  5541  002F00  0E00               	movlw	0
  5542  002F02  6EDE               	movwf	postinc2,c
  5543  002F04  0E00               	movlw	0
  5544  002F06  6EDD               	movwf	postdec2,c
  5545                           
  5546                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5547  002F08  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5548  002F0A  0D08               	mullw	8
  5549  002F0C  0E02               	movlw	2
  5550  002F0E  26F3               	addwf	prodl,f,c
  5551  002F10  0E00               	movlw	0
  5552  002F12  22F4               	addwfc	prodh,f,c
  5553  002F14  0E86               	movlw	low _TaskTable
  5554  002F16  24F3               	addwf	prodl,w,c
  5555  002F18  6ED9               	movwf	fsr2l,c
  5556  002F1A  0E05               	movlw	high _TaskTable
  5557  002F1C  20F4               	addwfc	prodh,w,c
  5558  002F1E  6EDA               	movwf	fsr2h,c
  5559  002F20  0E01               	movlw	1
  5560  002F22  6EDF               	movwf	indf2,c
  5561                           
  5562                           ; BSR set to: 2
  5563                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5564  002F24  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5565  002F26  0D08               	mullw	8
  5566  002F28  0E86               	movlw	low _TaskTable
  5567  002F2A  24F3               	addwf	prodl,w,c
  5568  002F2C  6ED9               	movwf	fsr2l,c
  5569  002F2E  0E05               	movlw	high _TaskTable
  5570  002F30  20F4               	addwfc	prodh,w,c
  5571  002F32  6EDA               	movwf	fsr2h,c
  5572  002F34  D801               	call	u16778
  5573  002F36  D017               	goto	u16779
  5574  002F38                     u16778:
  5575  002F38  0005               	push	
  5576  002F3A  6EFA               	movwf	pclath,c
  5577  002F3C  50DE               	movf	postinc2,w,c
  5578  002F3E  6EFD               	movwf	tosl,c
  5579  002F40  50DE               	movf	postinc2,w,c
  5580  002F42  6EFE               	movwf	tosh,c
  5581  002F44  50F8               	movf	tblptru,w,c
  5582  002F46  6EFF               	movwf	tosu,c
  5583  002F48  50FA               	movf	pclath,w,c
  5584  002F4A  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5585  002F4C  0D08               	mullw	8
  5586  002F4E  0E07               	movlw	7
  5587  002F50  26F3               	addwf	prodl,f,c
  5588  002F52  0E00               	movlw	0
  5589  002F54  22F4               	addwfc	prodh,f,c
  5590  002F56  0E86               	movlw	low _TaskTable
  5591  002F58  24F3               	addwf	prodl,w,c
  5592  002F5A  6ED9               	movwf	fsr2l,c
  5593  002F5C  0E05               	movlw	high _TaskTable
  5594  002F5E  20F4               	addwfc	prodh,w,c
  5595  002F60  6EDA               	movwf	fsr2h,c
  5596  002F62  50DF               	movf	indf2,w,c
  5597  002F64  0012               	return		;indir
  5598  002F66                     u16779:
  5599                           
  5600                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5601  002F66  0102               	movlb	2	; () banked
  5602  002F68  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5603  002F6A  0D08               	mullw	8
  5604  002F6C  0E02               	movlw	2
  5605  002F6E  26F3               	addwf	prodl,f,c
  5606  002F70  0E00               	movlw	0
  5607  002F72  22F4               	addwfc	prodh,f,c
  5608  002F74  0E86               	movlw	low _TaskTable
  5609  002F76  24F3               	addwf	prodl,w,c
  5610  002F78  6ED9               	movwf	fsr2l,c
  5611  002F7A  0E05               	movlw	high _TaskTable
  5612  002F7C  20F4               	addwfc	prodh,w,c
  5613  002F7E  6EDA               	movwf	fsr2h,c
  5614  002F80  0E00               	movlw	0
  5615  002F82  6EDF               	movwf	indf2,c
  5616  002F84                     l775:
  5617                           
  5618                           ; BSR set to: 2
  5619                           
  5620                           ; BSR set to: 2
  5621                           
  5622                           ;os_sched.c: 117: else
  5623                           ;os_sched.c: 118: {
  5624                           
  5625                           ; BSR set to: 2
  5626  002F84  2BC8               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5627  002F86  D772               	goto	l16989
  5628  002F88                     __end_of_ScheduleTasks:
  5629                           	opt stack 0
  5630                           tosu	equ	0xFFF
  5631                           tosh	equ	0xFFE
  5632                           tosl	equ	0xFFD
  5633                           pclath	equ	0xFFA
  5634                           tblptru	equ	0xFF8
  5635                           tblptrh	equ	0xFF7
  5636                           tblptrl	equ	0xFF6
  5637                           tablat	equ	0xFF5
  5638                           prodh	equ	0xFF4
  5639                           prodl	equ	0xFF3
  5640                           intcon	equ	0xFF2
  5641                           intcon2	equ	0xFF1
  5642                           intcon3	equ	0xFF0
  5643                           postinc0	equ	0xFEE
  5644                           wreg	equ	0xFE8
  5645                           postinc1	equ	0xFE6
  5646                           postdec1	equ	0xFE5
  5647                           fsr1h	equ	0xFE2
  5648                           fsr1l	equ	0xFE1
  5649                           indf2	equ	0xFDF
  5650                           postinc2	equ	0xFDE
  5651                           postdec2	equ	0xFDD
  5652                           fsr2h	equ	0xFDA
  5653                           fsr2l	equ	0xFD9
  5654                           status	equ	0xFD8
  5655                           
  5656 ;; *************** function _InitializeTasks *****************
  5657 ;; Defined at:
  5658 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;		None
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;  ActiveTaskIn    1  200[BANK2 ] unsigned char 
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  1    wreg      void 
  5665 ;; Registers used:
  5666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5673 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5674 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  5675 ;;      Totals:         0       0       0       1       0       2       0       0       0       0       0       0       
      +0       0       0       0
  5676 ;;Total ram usage:        3 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:   21
  5679 ;; This function calls:
  5680 ;;		_I2cSlv_MainTask
  5681 ;;		_Led_MainTask
  5682 ;;		_MdmHttp_MainTask
  5683 ;;		_Mdm_DrvMainFn
  5684 ;;		_Mdm_MainTask
  5685 ;;		_MyApp_Task
  5686 ;;		_Rtcm_MainTask
  5687 ;;		_Term_MainTask
  5688 ;;		_UsbDevice_MainTask
  5689 ;;		_Wdg_MainTask
  5690 ;; This function is called by:
  5691 ;;		_Sch_MainScheduler
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text15
  5696  005540                     __ptext15:
  5697                           	opt stack 0
  5698  005540                     _InitializeTasks:
  5699                           	opt stack 8
  5700                           
  5701                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5702                           
  5703                           ; BSR set to: 4
  5704                           ;incstack = 0
  5705  005540  0E00               	movlw	0
  5706  005542  0102               	movlb	2	; () banked
  5707  005544  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5708                           
  5709                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5710  005546  0E00               	movlw	0
  5711  005548  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5712  00554A                     l16977:
  5713                           
  5714                           ; BSR set to: 2
  5715  00554A  0E2F               	movlw	low _TaskNumber
  5716  00554C  6EF6               	movwf	tblptrl,c
  5717  00554E                     	if	1	;There is more than 1 active tblptr byte
  5718  00554E  0EFC               	movlw	high _TaskNumber
  5719  005550  6EF7               	movwf	tblptrh,c
  5720  005552                     	endif
  5721  005552                     	if	0	;There are less than 3 active tblptr bytes
  5722  005552                     	endif
  5723  005552  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5724  005554  0104               	movlb	4	; () banked
  5725  005556  6FF9               	movwf	??_InitializeTasks& (0+255),b
  5726  005558  6BFA               	clrf	(??_InitializeTasks+1)& (0+255),b
  5727  00555A  0009               	tblrd		*+
  5728  00555C  50F5               	movf	tablat,w,c
  5729  00555E  5DF9               	subwf	??_InitializeTasks& (0+255),w,b
  5730  005560  0009               	tblrd		*+
  5731  005562  50F5               	movf	tablat,w,c
  5732  005564  59FA               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5733  005566  B0D8               	btfsc	status,0,c
  5734  005568  0012               	return	
  5735                           
  5736                           ; BSR set to: 4
  5737                           ;os_sched.c: 86: {
  5738                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5739                           
  5740                           ; BSR set to: 4
  5741                           
  5742                           ; BSR set to: 4
  5743  00556A  0102               	movlb	2	; () banked
  5744  00556C  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5745  00556E  0D08               	mullw	8
  5746  005570  0E86               	movlw	low _TaskTable
  5747  005572  24F3               	addwf	prodl,w,c
  5748  005574  6ED9               	movwf	fsr2l,c
  5749  005576  0E05               	movlw	high _TaskTable
  5750  005578  20F4               	addwfc	prodh,w,c
  5751  00557A  6EDA               	movwf	fsr2h,c
  5752  00557C  D801               	call	u16738
  5753  00557E  D017               	goto	u16739
  5754  005580                     u16738:
  5755  005580  0005               	push	
  5756  005582  6EFA               	movwf	pclath,c
  5757  005584  50DE               	movf	postinc2,w,c
  5758  005586  6EFD               	movwf	tosl,c
  5759  005588  50DE               	movf	postinc2,w,c
  5760  00558A  6EFE               	movwf	tosh,c
  5761  00558C  50F8               	movf	tblptru,w,c
  5762  00558E  6EFF               	movwf	tosu,c
  5763  005590  50FA               	movf	pclath,w,c
  5764  005592  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5765  005594  0D08               	mullw	8
  5766  005596  0E07               	movlw	7
  5767  005598  26F3               	addwf	prodl,f,c
  5768  00559A  0E00               	movlw	0
  5769  00559C  22F4               	addwfc	prodh,f,c
  5770  00559E  0E86               	movlw	low _TaskTable
  5771  0055A0  24F3               	addwf	prodl,w,c
  5772  0055A2  6ED9               	movwf	fsr2l,c
  5773  0055A4  0E05               	movlw	high _TaskTable
  5774  0055A6  20F4               	addwfc	prodh,w,c
  5775  0055A8  6EDA               	movwf	fsr2h,c
  5776  0055AA  50DF               	movf	indf2,w,c
  5777  0055AC  0012               	return		;indir
  5778  0055AE                     u16739:
  5779  0055AE  0102               	movlb	2	; () banked
  5780  0055B0  2BC8               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5781  0055B2  D7CB               	goto	l16977
  5782  0055B4                     __end_of_InitializeTasks:
  5783                           	opt stack 0
  5784                           tosu	equ	0xFFF
  5785                           tosh	equ	0xFFE
  5786                           tosl	equ	0xFFD
  5787                           pclath	equ	0xFFA
  5788                           tblptru	equ	0xFF8
  5789                           tblptrh	equ	0xFF7
  5790                           tblptrl	equ	0xFF6
  5791                           tablat	equ	0xFF5
  5792                           prodh	equ	0xFF4
  5793                           prodl	equ	0xFF3
  5794                           intcon	equ	0xFF2
  5795                           intcon2	equ	0xFF1
  5796                           intcon3	equ	0xFF0
  5797                           postinc0	equ	0xFEE
  5798                           wreg	equ	0xFE8
  5799                           postinc1	equ	0xFE6
  5800                           postdec1	equ	0xFE5
  5801                           fsr1h	equ	0xFE2
  5802                           fsr1l	equ	0xFE1
  5803                           indf2	equ	0xFDF
  5804                           postinc2	equ	0xFDE
  5805                           postdec2	equ	0xFDD
  5806                           fsr2h	equ	0xFDA
  5807                           fsr2l	equ	0xFD9
  5808                           status	equ	0xFD8
  5809                           
  5810 ;; *************** function _MyApp_Task *****************
  5811 ;; Defined at:
  5812 ;;		line 161 in file "../Source/c/04_App/app_main.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  Options         1    wreg     unsigned char 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  Options         1    0[COMRAM] unsigned char 
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  1    wreg      void 
  5819 ;; Registers used:
  5820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5830 ;;Total ram usage:        0 bytes
  5831 ;; Hardware stack levels used:    1
  5832 ;; Hardware stack levels required when called:   19
  5833 ;; This function calls:
  5834 ;;		_Led_SetLedBlinkTime
  5835 ;;		_addCmdFsm
  5836 ;;		_cmdVisualEffet
  5837 ;;		_delCmdFsm
  5838 ;;		_detectCmd
  5839 ;;		_detectUsbNumber
  5840 ;;		_initFsm
  5841 ;;		_resCmdFsm
  5842 ;;		_triggerCmdFsm
  5843 ;;		_triggerVisualEffect
  5844 ;; This function is called by:
  5845 ;;		_InitializeTasks
  5846 ;;		_ScheduleTasks
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text16
  5851  002596                     __ptext16:
  5852                           	opt stack 0
  5853  002596                     _MyApp_Task:
  5854                           	opt stack 9
  5855                           
  5856                           ;app_main.c: 163: static appMainFsmStates currentState = APP_MAIN_INIT;
  5857                           ;app_main.c: 164: static bool isCmdSuccessfull = 1;
  5858                           ;app_main.c: 166: cmdVisualEffet(isCmdSuccessfull);
  5859                           
  5860                           ; BSR set to: 4
  5861                           ;incstack = 0
  5862  002596  0100               	movlb	0	; () banked
  5863  002598  51E2               	movf	MyApp_Task@isCmdSuccessfull& (0+255),w,b
  5864  00259A  ECFE  F030         	call	_cmdVisualEffet
  5865                           
  5866                           ;app_main.c: 168: switch (SystemState)
  5867  00259E  D09C               	goto	l2608
  5868  0025A0                     
  5869                           ;app_main.c: 173: Led_SetLedBlinkTime(1u,100,900);
  5870  0025A0  0E00               	movlw	0
  5871  0025A2  0100               	movlb	0	; () banked
  5872  0025A4  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5873  0025A6  0E64               	movlw	100
  5874  0025A8  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5875  0025AA  0E03               	movlw	3
  5876  0025AC  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5877  0025AE  0E84               	movlw	132
  5878  0025B0  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5879  0025B2  0E01               	movlw	1
  5880  0025B4  ECD2  F02E         	call	_Led_SetLedBlinkTime
  5881                           
  5882                           ;app_main.c: 174: Led_SetLedBlinkTime(2u,100,900);
  5883  0025B8  0E00               	movlw	0
  5884  0025BA  0100               	movlb	0	; () banked
  5885  0025BC  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5886  0025BE  0E64               	movlw	100
  5887  0025C0  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5888  0025C2  0E03               	movlw	3
  5889  0025C4  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5890  0025C6  0E84               	movlw	132
  5891  0025C8  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5892  0025CA  0E02               	movlw	2
  5893  0025CC  ECD2  F02E         	call	_Led_SetLedBlinkTime
  5894                           
  5895                           ;app_main.c: 175: break;
  5896  0025D0  0012               	return	
  5897  0025D2                     
  5898                           ;app_main.c: 182: if (initFsm(&isCmdSuccessfull))
  5899  0025D2  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  5900  0025D4  0101               	movlb	1	; () banked
  5901  0025D6  6F03               	movwf	initFsm@isCmdSuccessfull& (0+255),b
  5902  0025D8  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  5903  0025DA  6F04               	movwf	(initFsm@isCmdSuccessfull+1)& (0+255),b
  5904  0025DC  ECB5  F021         	call	_initFsm	;wreg free
  5905  0025E0  0900               	iorlw	0
  5906  0025E2  B4D8               	btfsc	status,2,c
  5907  0025E4  0012               	return	
  5908                           
  5909                           ;app_main.c: 183: {
  5910                           ;app_main.c: 184: currentState = APP_MAIN_WAIT_EVENT;
  5911  0025E6  0E01               	movlw	1
  5912  0025E8  0101               	movlb	1	; () banked
  5913  0025EA  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  5914                           
  5915                           ; BSR set to: 1
  5916                           ;app_main.c: 185: }
  5917                           ;app_main.c: 186: break;
  5918  0025EC  0012               	return	
  5919  0025EE                     
  5920                           ; BSR set to: 1
  5921                           ;app_main.c: 189: if (detectUsbNumber(&isCmdSuccessfull))
  5922                           
  5923                           ; BSR set to: 1
  5924  0025EE  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  5925  0025F0  0100               	movlb	0	; () banked
  5926  0025F2  6F99               	movwf	detectUsbNumber@isCmdSuccessfull& (0+255),b
  5927  0025F4  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  5928  0025F6  6F9A               	movwf	(detectUsbNumber@isCmdSuccessfull+1)& (0+255),b
  5929  0025F8  ECC8  F032         	call	_detectUsbNumber	;wreg free
  5930  0025FC  0900               	iorlw	0
  5931  0025FE  A4D8               	btfss	status,2,c
  5932                           
  5933                           ;app_main.c: 190: {
  5934                           ;app_main.c: 191: triggerVisualEffect();
  5935  002600  ECBF  F036         	call	_triggerVisualEffect	;wreg free
  5936                           
  5937                           ;app_main.c: 192: }
  5938                           ;app_main.c: 193: currentState = detectCmd();
  5939  002604  EC25  F026         	call	_detectCmd	;wreg free
  5940  002608  0101               	movlb	1	; () banked
  5941  00260A  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  5942                           
  5943                           ;app_main.c: 194: break;
  5944  00260C  0012               	return	
  5945  00260E                     
  5946                           ; BSR set to: 1
  5947                           ;app_main.c: 197: if (addCmdFsm(receivedNumber, smsText, &isCmdSuccessfull))
  5948                           
  5949                           ; BSR set to: 1
  5950  00260E  0E44               	movlw	low _receivedNumber
  5951  002610  6F05               	movwf	addCmdFsm@receivedNumber& (0+255),b
  5952  002612  0E03               	movlw	high _receivedNumber
  5953  002614  6F06               	movwf	(addCmdFsm@receivedNumber+1)& (0+255),b
  5954  002616  0E84               	movlw	low _smsText
  5955  002618  6F07               	movwf	addCmdFsm@smsText& (0+255),b
  5956  00261A  0E04               	movlw	high _smsText
  5957  00261C  6F08               	movwf	(addCmdFsm@smsText+1)& (0+255),b
  5958  00261E  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  5959  002620  6F09               	movwf	addCmdFsm@isCmdSuccessfull& (0+255),b
  5960  002622  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  5961  002624  6F0A               	movwf	(addCmdFsm@isCmdSuccessfull+1)& (0+255),b
  5962  002626  ECD4  F019         	call	_addCmdFsm	;wreg free
  5963  00262A  0900               	iorlw	0
  5964  00262C  B4D8               	btfsc	status,2,c
  5965  00262E  0012               	return	
  5966                           
  5967                           ;app_main.c: 198: {
  5968                           ;app_main.c: 199: currentState = APP_MAIN_WAIT_EVENT;
  5969  002630  0E01               	movlw	1
  5970  002632  0101               	movlb	1	; () banked
  5971  002634  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  5972                           
  5973                           ; BSR set to: 1
  5974                           ;app_main.c: 200: triggerVisualEffect();
  5975  002636  ECBF  F036         	call	_triggerVisualEffect	;wreg free
  5976                           
  5977                           ;app_main.c: 201: }
  5978                           ;app_main.c: 202: break;
  5979  00263A  0012               	return	
  5980  00263C                     
  5981                           ;app_main.c: 205: if (delCmdFsm(receivedNumber, smsText, &isCmdSuccessfull))
  5982  00263C  0E44               	movlw	low _receivedNumber
  5983  00263E  0101               	movlb	1	; () banked
  5984  002640  6F05               	movwf	delCmdFsm@receivedNumber& (0+255),b
  5985  002642  0E03               	movlw	high _receivedNumber
  5986  002644  6F06               	movwf	(delCmdFsm@receivedNumber+1)& (0+255),b
  5987  002646  0E84               	movlw	low _smsText
  5988  002648  6F07               	movwf	delCmdFsm@smsText& (0+255),b
  5989  00264A  0E04               	movlw	high _smsText
  5990  00264C  6F08               	movwf	(delCmdFsm@smsText+1)& (0+255),b
  5991  00264E  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  5992  002650  6F09               	movwf	delCmdFsm@isCmdSuccessfull& (0+255),b
  5993  002652  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  5994  002654  6F0A               	movwf	(delCmdFsm@isCmdSuccessfull+1)& (0+255),b
  5995  002656  EC15  F022         	call	_delCmdFsm	;wreg free
  5996  00265A  0900               	iorlw	0
  5997  00265C  B4D8               	btfsc	status,2,c
  5998  00265E  0012               	return	
  5999                           
  6000                           ;app_main.c: 206: {
  6001                           ;app_main.c: 207: currentState = APP_MAIN_WAIT_EVENT;
  6002  002660  0E01               	movlw	1
  6003  002662  0101               	movlb	1	; () banked
  6004  002664  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  6005                           
  6006                           ; BSR set to: 1
  6007                           ;app_main.c: 208: triggerVisualEffect();
  6008  002666  ECBF  F036         	call	_triggerVisualEffect	;wreg free
  6009                           
  6010                           ;app_main.c: 209: }
  6011                           ;app_main.c: 210: break;
  6012  00266A  0012               	return	
  6013  00266C                     
  6014                           ;app_main.c: 213: if (triggerCmdFsm(receivedNumber))
  6015  00266C  0E44               	movlw	low _receivedNumber
  6016  00266E  0101               	movlb	1	; () banked
  6017  002670  6F05               	movwf	triggerCmdFsm@receivedNumber& (0+255),b
  6018  002672  0E03               	movlw	high _receivedNumber
  6019  002674  6F06               	movwf	(triggerCmdFsm@receivedNumber+1)& (0+255),b
  6020  002676  ECEF  F01C         	call	_triggerCmdFsm	;wreg free
  6021  00267A  0900               	iorlw	0
  6022  00267C  B4D8               	btfsc	status,2,c
  6023  00267E  0012               	return	
  6024                           
  6025                           ;app_main.c: 214: {
  6026                           ;app_main.c: 215: currentState = APP_MAIN_WAIT_EVENT;
  6027  002680  0E01               	movlw	1
  6028  002682  0101               	movlb	1	; () banked
  6029  002684  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  6030                           
  6031                           ; BSR set to: 1
  6032                           ;app_main.c: 216: }
  6033                           ;app_main.c: 217: break;
  6034  002686  0012               	return	
  6035  002688                     
  6036                           ; BSR set to: 1
  6037                           ;app_main.c: 220: if (resCmdFsm(receivedNumber, &isCmdSuccessfull))
  6038                           
  6039                           ; BSR set to: 1
  6040  002688  0E44               	movlw	low _receivedNumber
  6041  00268A  6F03               	movwf	resCmdFsm@receivedNumber& (0+255),b
  6042  00268C  0E03               	movlw	high _receivedNumber
  6043  00268E  6F04               	movwf	(resCmdFsm@receivedNumber+1)& (0+255),b
  6044  002690  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  6045  002692  6F05               	movwf	resCmdFsm@isCmdSuccessfull& (0+255),b
  6046  002694  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  6047  002696  6F06               	movwf	(resCmdFsm@isCmdSuccessfull+1)& (0+255),b
  6048  002698  EC61  F02A         	call	_resCmdFsm	;wreg free
  6049  00269C  0900               	iorlw	0
  6050  00269E  B4D8               	btfsc	status,2,c
  6051  0026A0  0012               	return	
  6052                           
  6053                           ;app_main.c: 221: {
  6054                           ;app_main.c: 222: currentState = APP_MAIN_INIT;
  6055  0026A2  0E00               	movlw	0
  6056  0026A4  0101               	movlb	1	; () banked
  6057  0026A6  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  6058                           
  6059                           ; BSR set to: 1
  6060                           ;app_main.c: 223: triggerVisualEffect();
  6061  0026A8  ECBF  F036         	call	_triggerVisualEffect	;wreg free
  6062                           
  6063                           ;app_main.c: 229: }
  6064                           
  6065                           ;app_main.c: 228: break;
  6066                           
  6067                           ;app_main.c: 227: default:
  6068                           
  6069                           ;app_main.c: 224: }
  6070                           ;app_main.c: 225: break;
  6071  0026AC  0012               	return	
  6072  0026AE  0101               	movlb	1	; () banked
  6073  0026B0  51DA               	movf	MyApp_Task@currentState& (0+255),w,b
  6074                           
  6075                           ; Switch size 1, requested type "space"
  6076                           ; Number of cases is 6, Range of values is 0 to 5
  6077                           ; switch strategies available:
  6078                           ; Name         Instructions Cycles
  6079                           ; simple_byte           19    10 (average)
  6080                           ;	Chosen strategy is simple_byte
  6081  0026B2  0A00               	xorlw	0	; case 0
  6082  0026B4  B4D8               	btfsc	status,2,c
  6083  0026B6  D78D               	goto	l2613
  6084  0026B8  0A01               	xorlw	1	; case 1
  6085  0026BA  B4D8               	btfsc	status,2,c
  6086  0026BC  D798               	goto	l2616
  6087  0026BE  0A03               	xorlw	3	; case 2
  6088  0026C0  B4D8               	btfsc	status,2,c
  6089  0026C2  D7A5               	goto	l2618
  6090  0026C4  0A01               	xorlw	1	; case 3
  6091  0026C6  B4D8               	btfsc	status,2,c
  6092  0026C8  D7B9               	goto	l2620
  6093  0026CA  0A07               	xorlw	7	; case 4
  6094  0026CC  B4D8               	btfsc	status,2,c
  6095  0026CE  D7CE               	goto	l2622
  6096  0026D0  0A01               	xorlw	1	; case 5
  6097  0026D2  A4D8               	btfss	status,2,c
  6098                           
  6099                           ; BSR set to: 1
  6100                           ;app_main.c: 235: }
  6101                           
  6102                           ; BSR set to: 1
  6103                           ;app_main.c: 234: break;
  6104                           
  6105                           ;app_main.c: 233: default:
  6106                           
  6107                           ; BSR set to: 1
  6108                           ;app_main.c: 230: break;
  6109  0026D4  0012               	return	
  6110  0026D6  D7D8               	goto	l2624
  6111  0026D8                     l2608:
  6112                           
  6113                           ; BSR set to: 1
  6114  0026D8  0100               	movlb	0	; () banked
  6115  0026DA  51D4               	movf	_SystemState& (0+255),w,b
  6116                           
  6117                           ; Switch size 1, requested type "space"
  6118                           ; Number of cases is 2, Range of values is 0 to 1
  6119                           ; switch strategies available:
  6120                           ; Name         Instructions Cycles
  6121                           ; simple_byte            7     4 (average)
  6122                           ;	Chosen strategy is simple_byte
  6123  0026DC  0A00               	xorlw	0	; case 0
  6124  0026DE  B4D8               	btfsc	status,2,c
  6125  0026E0  D75F               	goto	l2609
  6126  0026E2  0A01               	xorlw	1	; case 1
  6127  0026E4  A4D8               	btfss	status,2,c
  6128  0026E6  0012               	return	
  6129  0026E8  D7E2               	goto	l2612
  6130  0026EA                     __end_of_MyApp_Task:
  6131                           	opt stack 0
  6132                           tosu	equ	0xFFF
  6133                           tosh	equ	0xFFE
  6134                           tosl	equ	0xFFD
  6135                           pclath	equ	0xFFA
  6136                           tblptru	equ	0xFF8
  6137                           tblptrh	equ	0xFF7
  6138                           tblptrl	equ	0xFF6
  6139                           tablat	equ	0xFF5
  6140                           prodh	equ	0xFF4
  6141                           prodl	equ	0xFF3
  6142                           intcon	equ	0xFF2
  6143                           intcon2	equ	0xFF1
  6144                           intcon3	equ	0xFF0
  6145                           postinc0	equ	0xFEE
  6146                           wreg	equ	0xFE8
  6147                           postinc1	equ	0xFE6
  6148                           postdec1	equ	0xFE5
  6149                           fsr1h	equ	0xFE2
  6150                           fsr1l	equ	0xFE1
  6151                           indf2	equ	0xFDF
  6152                           postinc2	equ	0xFDE
  6153                           postdec2	equ	0xFDD
  6154                           fsr2h	equ	0xFDA
  6155                           fsr2l	equ	0xFD9
  6156                           status	equ	0xFD8
  6157                           
  6158 ;; *************** function _Term_MainTask *****************
  6159 ;; Defined at:
  6160 ;;		line 847 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  Options         1    wreg     unsigned char 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;  Options         1    0[COMRAM] unsigned char 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6178 ;;Total ram usage:        0 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:   17
  6181 ;; This function calls:
  6182 ;;		_Term_MainSm
  6183 ;; This function is called by:
  6184 ;;		_InitializeTasks
  6185 ;;		_ScheduleTasks
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text17
  6190  006BCC                     __ptext17:
  6191                           	opt stack 0
  6192  006BCC                     _Term_MainTask:
  6193                           	opt stack 11
  6194                           
  6195                           ;term.c: 849: switch (SystemState)
  6196                           
  6197                           ;incstack = 0
  6198  006BCC  D003               	goto	l2499
  6199  006BCE                     
  6200                           ;term.c: 860: Term_MainSm();
  6201  006BCE  EC5E  F008         	call	_Term_MainSm	;wreg free
  6202                           
  6203                           ;term.c: 867: }
  6204                           
  6205                           ;term.c: 866: break;
  6206                           
  6207                           ;term.c: 865: default:
  6208                           
  6209                           ;term.c: 862: break;
  6210  006BD2  0012               	return	
  6211  006BD4                     l2499:
  6212  006BD4  0100               	movlb	0	; () banked
  6213  006BD6  51D4               	movf	_SystemState& (0+255),w,b
  6214                           
  6215                           ; Switch size 1, requested type "space"
  6216                           ; Number of cases is 2, Range of values is 0 to 1
  6217                           ; switch strategies available:
  6218                           ; Name         Instructions Cycles
  6219                           ; simple_byte            7     4 (average)
  6220                           ;	Chosen strategy is simple_byte
  6221  006BD8  0A00               	xorlw	0	; case 0
  6222  006BDA  B4D8               	btfsc	status,2,c
  6223  006BDC  0012               	return	
  6224  006BDE  0A01               	xorlw	1	; case 1
  6225  006BE0  A4D8               	btfss	status,2,c
  6226  006BE2  0012               	return	
  6227  006BE4  D7F4               	goto	l2502
  6228  006BE6                     __end_of_Term_MainTask:
  6229                           	opt stack 0
  6230                           tosu	equ	0xFFF
  6231                           tosh	equ	0xFFE
  6232                           tosl	equ	0xFFD
  6233                           pclath	equ	0xFFA
  6234                           tblptru	equ	0xFF8
  6235                           tblptrh	equ	0xFF7
  6236                           tblptrl	equ	0xFF6
  6237                           tablat	equ	0xFF5
  6238                           prodh	equ	0xFF4
  6239                           prodl	equ	0xFF3
  6240                           intcon	equ	0xFF2
  6241                           intcon2	equ	0xFF1
  6242                           intcon3	equ	0xFF0
  6243                           postinc0	equ	0xFEE
  6244                           wreg	equ	0xFE8
  6245                           postinc1	equ	0xFE6
  6246                           postdec1	equ	0xFE5
  6247                           fsr1h	equ	0xFE2
  6248                           fsr1l	equ	0xFE1
  6249                           indf2	equ	0xFDF
  6250                           postinc2	equ	0xFDE
  6251                           postdec2	equ	0xFDD
  6252                           fsr2h	equ	0xFDA
  6253                           fsr2l	equ	0xFD9
  6254                           status	equ	0xFD8
  6255                           
  6256 ;; *************** function _Rtcm_MainTask *****************
  6257 ;; Defined at:
  6258 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;  Options         1    wreg     unsigned char 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  Options         1    0[COMRAM] unsigned char 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  1    wreg      void 
  6265 ;; Registers used:
  6266 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6276 ;;Total ram usage:        0 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:   14
  6279 ;; This function calls:
  6280 ;;		_Rtcc_AlarmConfig
  6281 ;;		_Rtcc_LockRtc
  6282 ;;		_Rtcc_RtcConfig
  6283 ;;		_Rtcc_SetRtcStatus
  6284 ;;		_Rtcc_UnlockRtc
  6285 ;;		_Rtcm_GetRtccDate
  6286 ;;		_Rtcm_SetRtccDate
  6287 ;; This function is called by:
  6288 ;;		_InitializeTasks
  6289 ;;		_ScheduleTasks
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text18
  6294  00521C                     __ptext18:
  6295                           	opt stack 0
  6296  00521C                     _Rtcm_MainTask:
  6297                           	opt stack 14
  6298                           
  6299                           ;rtcm.c: 101: switch (SystemState)
  6300                           
  6301                           ;incstack = 0
  6302  00521C  D03D               	goto	l2220
  6303  00521E                     l2221:
  6304                           
  6305                           ; BSR set to: 0
  6306                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6307  00521E  86CD               	bsf	4045,3,c	;volatile
  6308                           
  6309                           ; BSR set to: 0
  6310                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6311  005220  0E00               	movlw	0
  6312  005222  0103               	movlb	3	; () banked
  6313  005224  6FB9               	movwf	_RtcConfig& (0+255),b
  6314                           
  6315                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6316  005226  0E00               	movlw	0
  6317  005228  6FBA               	movwf	(_RtcConfig+1)& (0+255),b
  6318                           
  6319                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6320  00522A  0E01               	movlw	1
  6321  00522C  6FBB               	movwf	(_RtcConfig+2)& (0+255),b
  6322                           
  6323                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6324  00522E  0E01               	movlw	1
  6325  005230  6FBC               	movwf	(_RtcConfig+3)& (0+255),b
  6326                           
  6327                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6328  005232  0E01               	movlw	1
  6329  005234  6FB5               	movwf	_AlCfg& (0+255),b
  6330                           
  6331                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6332  005236  0E01               	movlw	1
  6333  005238  6FB6               	movwf	(_AlCfg+1)& (0+255),b
  6334                           
  6335                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6336  00523A  0E01               	movlw	1
  6337  00523C  6FB7               	movwf	(_AlCfg+2)& (0+255),b
  6338                           
  6339                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6340  00523E  0E00               	movlw	0
  6341  005240  6FB8               	movwf	(_AlCfg+3)& (0+255),b
  6342                           
  6343                           ; BSR set to: 3
  6344                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6345  005242  EC82  F036         	call	_Rtcc_UnlockRtc	;wreg free
  6346                           
  6347                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6348  005246  0EB9               	movlw	low _RtcConfig
  6349  005248  0100               	movlb	0	; () banked
  6350  00524A  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6351  00524C  0E03               	movlw	high _RtcConfig
  6352  00524E  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6353  005250  EC86  F025         	call	_Rtcc_RtcConfig	;wreg free
  6354                           
  6355                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6356  005254  0EB5               	movlw	low _AlCfg
  6357  005256  0100               	movlb	0	; () banked
  6358  005258  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6359  00525A  0E03               	movlw	high _AlCfg
  6360  00525C  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6361  00525E  ECB9  F02B         	call	_Rtcc_AlarmConfig	;wreg free
  6362                           
  6363                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6364  005262  0E01               	movlw	1
  6365  005264  EC31  F036         	call	_Rtcc_SetRtcStatus
  6366                           
  6367                           ;rtcm.c: 127: Rtcc_LockRtc();
  6368  005268  EC8A  F036         	call	_Rtcc_LockRtc	;wreg free
  6369                           
  6370                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6371  00526C  EE24  F04A         	lfsr	2,_Rtcm_SystemDate
  6372  005270  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6373  005274  0E07               	movlw	7
  6374  005276                     u16641:
  6375  005276  CFDB FFEB          	movff	plusw2,plusw0
  6376  00527A  06E8               	decf	wreg,f,c
  6377  00527C  E2FC               	bc	u16641
  6378  00527E  EC7E  F02E         	call	_Rtcm_SetRtccDate	;wreg free
  6379                           
  6380                           ;rtcm.c: 154: break;
  6381  005282  0012               	return	
  6382  005284                     
  6383                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6384  005284  EC56  F02C         	call	_Rtcm_GetRtccDate	;wreg free
  6385  005288  EE24  F04A         	lfsr	2,_Rtcm_SystemDate
  6386  00528C  0E07               	movlw	7
  6387  00528E                     u16651:
  6388  00528E  CFEB FFDB          	movff	plusw0,plusw2
  6389  005292  06E8               	decf	wreg,f,c
  6390  005294  E2FC               	bc	u16651
  6391                           
  6392                           ;rtcm.c: 165: }
  6393                           
  6394                           ;rtcm.c: 164: break;
  6395                           
  6396                           ;rtcm.c: 163: default:
  6397                           
  6398                           ;rtcm.c: 160: break;
  6399  005296  0012               	return	
  6400  005298                     l2220:
  6401  005298  0100               	movlb	0	; () banked
  6402  00529A  51D4               	movf	_SystemState& (0+255),w,b
  6403                           
  6404                           ; Switch size 1, requested type "space"
  6405                           ; Number of cases is 2, Range of values is 0 to 1
  6406                           ; switch strategies available:
  6407                           ; Name         Instructions Cycles
  6408                           ; simple_byte            7     4 (average)
  6409                           ;	Chosen strategy is simple_byte
  6410  00529C  0A00               	xorlw	0	; case 0
  6411  00529E  B4D8               	btfsc	status,2,c
  6412  0052A0  D7BE               	goto	l2221
  6413  0052A2  0A01               	xorlw	1	; case 1
  6414  0052A4  A4D8               	btfss	status,2,c
  6415  0052A6  0012               	return	
  6416  0052A8  D7ED               	goto	l2223
  6417  0052AA                     __end_of_Rtcm_MainTask:
  6418                           	opt stack 0
  6419                           tosu	equ	0xFFF
  6420                           tosh	equ	0xFFE
  6421                           tosl	equ	0xFFD
  6422                           pclath	equ	0xFFA
  6423                           tblptru	equ	0xFF8
  6424                           tblptrh	equ	0xFF7
  6425                           tblptrl	equ	0xFF6
  6426                           tablat	equ	0xFF5
  6427                           prodh	equ	0xFF4
  6428                           prodl	equ	0xFF3
  6429                           intcon	equ	0xFF2
  6430                           intcon2	equ	0xFF1
  6431                           intcon3	equ	0xFF0
  6432                           postinc0	equ	0xFEE
  6433                           plusw0	equ	0xFEB
  6434                           wreg	equ	0xFE8
  6435                           postinc1	equ	0xFE6
  6436                           postdec1	equ	0xFE5
  6437                           fsr1h	equ	0xFE2
  6438                           fsr1l	equ	0xFE1
  6439                           indf2	equ	0xFDF
  6440                           postinc2	equ	0xFDE
  6441                           postdec2	equ	0xFDD
  6442                           plusw2	equ	0xFDB
  6443                           fsr2h	equ	0xFDA
  6444                           fsr2l	equ	0xFD9
  6445                           status	equ	0xFD8
  6446                           
  6447 ;; *************** function _Led_MainTask *****************
  6448 ;; Defined at:
  6449 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  Options         1    wreg     unsigned char 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;  Options         1    0[COMRAM] unsigned char 
  6454 ;; Return value:  Size  Location     Type
  6455 ;;                  1    wreg      void 
  6456 ;; Registers used:
  6457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6465 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6466 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6467 ;;Total ram usage:        1 bytes
  6468 ;; Hardware stack levels used:    1
  6469 ;; Hardware stack levels required when called:   14
  6470 ;; This function calls:
  6471 ;;		_LedStateMachine
  6472 ;; This function is called by:
  6473 ;;		_InitializeTasks
  6474 ;;		_ScheduleTasks
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           	psect	text19
  6479  003D2A                     __ptext19:
  6480                           	opt stack 0
  6481  003D2A                     _Led_MainTask:
  6482                           	opt stack 14
  6483                           
  6484                           ;led.c: 300: switch (SystemState)
  6485                           
  6486                           ;incstack = 0
  6487  003D2A  D05C               	goto	l2134
  6488  003D2C                     l2135:
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6492  003D2C  9895               	bcf	3989,4,c	;volatile
  6493                           
  6494                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6495  003D2E  9A95               	bcf	3989,5,c	;volatile
  6496                           
  6497                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6498  003D30  9C95               	bcf	3989,6,c	;volatile
  6499                           
  6500                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6501  003D32  9883               	bcf	3971,4,c	;volatile
  6502                           
  6503                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6504  003D34  9A83               	bcf	3971,5,c	;volatile
  6505                           
  6506                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6507  003D36  9C83               	bcf	3971,6,c	;volatile
  6508                           
  6509                           ;led.c: 311: break;
  6510  003D38  0012               	return	
  6511  003D3A                     
  6512                           ; BSR set to: 0
  6513                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6514                           
  6515                           ; BSR set to: 0
  6516  003D3A  0EF9               	movlw	low _Led1Sts
  6517  003D3C  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6518  003D3E  0E01               	movlw	high _Led1Sts
  6519  003D40  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6520  003D42  0EF8               	movlw	low _Led1OutSts
  6521  003D44  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6522  003D46  0E01               	movlw	high _Led1OutSts
  6523  003D48  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6524  003D4A  0E6F               	movlw	low _Led1Blink
  6525  003D4C  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6526  003D4E  0E03               	movlw	high _Led1Blink
  6527  003D50  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6528  003D52  0E93               	movlw	low _Led1Pulse
  6529  003D54  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6530  003D56  0E03               	movlw	high _Led1Pulse
  6531  003D58  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6532  003D5A  0E01               	movlw	1
  6533  003D5C  ECE1  F024         	call	_LedStateMachine
  6534  003D60  0100               	movlb	0	; () banked
  6535  003D62  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6536  003D64  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6537  003D66  5083               	movf	3971,w,c	;volatile
  6538  003D68  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6539  003D6A  0BEF               	andlw	-17
  6540  003D6C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6541  003D6E  6E83               	movwf	3971,c	;volatile
  6542                           
  6543                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6544  003D70  0EF7               	movlw	low _Led2Sts
  6545  003D72  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6546  003D74  0E01               	movlw	high _Led2Sts
  6547  003D76  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6548  003D78  0EF6               	movlw	low _Led2OutSts
  6549  003D7A  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6550  003D7C  0E01               	movlw	high _Led2OutSts
  6551  003D7E  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6552  003D80  0E66               	movlw	low _Led2Blink
  6553  003D82  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6554  003D84  0E03               	movlw	high _Led2Blink
  6555  003D86  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6556  003D88  0E8D               	movlw	low _Led2Pulse
  6557  003D8A  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6558  003D8C  0E03               	movlw	high _Led2Pulse
  6559  003D8E  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6560  003D90  0E02               	movlw	2
  6561  003D92  ECE1  F024         	call	_LedStateMachine
  6562  003D96  0100               	movlb	0	; () banked
  6563  003D98  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6564  003D9A  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6565  003D9C  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6566  003D9E  5083               	movf	3971,w,c	;volatile
  6567  003DA0  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6568  003DA2  0BDF               	andlw	-33
  6569  003DA4  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6570  003DA6  6E83               	movwf	3971,c	;volatile
  6571                           
  6572                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6573  003DA8  0EF5               	movlw	low _Led3Sts
  6574  003DAA  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6575  003DAC  0E01               	movlw	high _Led3Sts
  6576  003DAE  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6577  003DB0  0EF4               	movlw	low _Led3OutSts
  6578  003DB2  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6579  003DB4  0E01               	movlw	high _Led3OutSts
  6580  003DB6  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6581  003DB8  0EE6               	movlw	low _Led3Blink
  6582  003DBA  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6583  003DBC  0E04               	movlw	high _Led3Blink
  6584  003DBE  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6585  003DC0  0E87               	movlw	low _Led3Pulse
  6586  003DC2  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6587  003DC4  0E03               	movlw	high _Led3Pulse
  6588  003DC6  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6589  003DC8  0E03               	movlw	3
  6590  003DCA  ECE1  F024         	call	_LedStateMachine
  6591  003DCE  0100               	movlb	0	; () banked
  6592  003DD0  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6593  003DD2  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6594  003DD4  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6595  003DD6  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6596  003DD8  5083               	movf	3971,w,c	;volatile
  6597  003DDA  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6598  003DDC  0BBF               	andlw	-65
  6599  003DDE  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6600  003DE0  6E83               	movwf	3971,c	;volatile
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;led.c: 326: }
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;led.c: 325: break;
  6607                           
  6608                           ;led.c: 324: default:
  6609                           
  6610                           ;led.c: 321: break;
  6611  003DE2  0012               	return	
  6612  003DE4                     l2134:
  6613                           
  6614                           ; BSR set to: 0
  6615  003DE4  0100               	movlb	0	; () banked
  6616  003DE6  51D4               	movf	_SystemState& (0+255),w,b
  6617                           
  6618                           ; Switch size 1, requested type "space"
  6619                           ; Number of cases is 2, Range of values is 0 to 1
  6620                           ; switch strategies available:
  6621                           ; Name         Instructions Cycles
  6622                           ; simple_byte            7     4 (average)
  6623                           ;	Chosen strategy is simple_byte
  6624  003DE8  0A00               	xorlw	0	; case 0
  6625  003DEA  B4D8               	btfsc	status,2,c
  6626  003DEC  D79F               	goto	l2135
  6627  003DEE  0A01               	xorlw	1	; case 1
  6628  003DF0  A4D8               	btfss	status,2,c
  6629  003DF2  0012               	return	
  6630  003DF4  D7A2               	goto	l2137
  6631  003DF6                     __end_of_Led_MainTask:
  6632                           	opt stack 0
  6633                           tosu	equ	0xFFF
  6634                           tosh	equ	0xFFE
  6635                           tosl	equ	0xFFD
  6636                           pclath	equ	0xFFA
  6637                           tblptru	equ	0xFF8
  6638                           tblptrh	equ	0xFF7
  6639                           tblptrl	equ	0xFF6
  6640                           tablat	equ	0xFF5
  6641                           prodh	equ	0xFF4
  6642                           prodl	equ	0xFF3
  6643                           intcon	equ	0xFF2
  6644                           intcon2	equ	0xFF1
  6645                           intcon3	equ	0xFF0
  6646                           postinc0	equ	0xFEE
  6647                           plusw0	equ	0xFEB
  6648                           wreg	equ	0xFE8
  6649                           postinc1	equ	0xFE6
  6650                           postdec1	equ	0xFE5
  6651                           fsr1h	equ	0xFE2
  6652                           fsr1l	equ	0xFE1
  6653                           indf2	equ	0xFDF
  6654                           postinc2	equ	0xFDE
  6655                           postdec2	equ	0xFDD
  6656                           plusw2	equ	0xFDB
  6657                           fsr2h	equ	0xFDA
  6658                           fsr2l	equ	0xFD9
  6659                           status	equ	0xFD8
  6660                           
  6661 ;; *************** function _UsbDevice_MainTask *****************
  6662 ;; Defined at:
  6663 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  Options         1    wreg     unsigned char 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;  Options         1    0[COMRAM] unsigned char 
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      void 
  6670 ;; Registers used:
  6671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6681 ;;Total ram usage:        0 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:   20
  6684 ;; This function calls:
  6685 ;;		_CDCTxService
  6686 ;;		_USBDeviceInit
  6687 ;;		_USBDeviceTasks
  6688 ;; This function is called by:
  6689 ;;		_InitializeTasks
  6690 ;;		_ScheduleTasks
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           	psect	text20
  6695  006964                     __ptext20:
  6696                           	opt stack 0
  6697  006964                     _UsbDevice_MainTask:
  6698                           	opt stack 8
  6699                           
  6700                           ;usb_device_mgr.c: 74: switch (SystemState)
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;incstack = 0
  6704  006964  D008               	goto	l1992
  6705  006966                     
  6706                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6707  006966  EC75  F013         	call	_USBDeviceInit	;wreg free
  6708                           
  6709                           ;usb_device_mgr.c: 80: ;
  6710                           ;usb_device_mgr.c: 81: break;
  6711  00696A  0012               	return	
  6712  00696C                     
  6713                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6714  00696C  ECD8  F00D         	call	_USBDeviceTasks	;wreg free
  6715                           
  6716                           ;usb_device_mgr.c: 90: CDCTxService();
  6717  006970  ECC2  F014         	call	_CDCTxService	;wreg free
  6718                           
  6719                           ;usb_device_mgr.c: 101: }
  6720                           
  6721                           ;usb_device_mgr.c: 100: break;
  6722                           
  6723                           ;usb_device_mgr.c: 99: default:
  6724                           
  6725                           ;usb_device_mgr.c: 96: break;
  6726  006974  0012               	return	
  6727  006976                     l1992:
  6728  006976  0100               	movlb	0	; () banked
  6729  006978  51D4               	movf	_SystemState& (0+255),w,b
  6730                           
  6731                           ; Switch size 1, requested type "space"
  6732                           ; Number of cases is 2, Range of values is 0 to 1
  6733                           ; switch strategies available:
  6734                           ; Name         Instructions Cycles
  6735                           ; simple_byte            7     4 (average)
  6736                           ;	Chosen strategy is simple_byte
  6737  00697A  0A00               	xorlw	0	; case 0
  6738  00697C  B4D8               	btfsc	status,2,c
  6739  00697E  D7F3               	goto	l1993
  6740  006980  0A01               	xorlw	1	; case 1
  6741  006982  A4D8               	btfss	status,2,c
  6742  006984  0012               	return	
  6743  006986  D7F2               	goto	l1995
  6744  006988                     __end_of_UsbDevice_MainTask:
  6745                           	opt stack 0
  6746                           tosu	equ	0xFFF
  6747                           tosh	equ	0xFFE
  6748                           tosl	equ	0xFFD
  6749                           pclath	equ	0xFFA
  6750                           tblptru	equ	0xFF8
  6751                           tblptrh	equ	0xFF7
  6752                           tblptrl	equ	0xFF6
  6753                           tablat	equ	0xFF5
  6754                           prodh	equ	0xFF4
  6755                           prodl	equ	0xFF3
  6756                           intcon	equ	0xFF2
  6757                           intcon2	equ	0xFF1
  6758                           intcon3	equ	0xFF0
  6759                           postinc0	equ	0xFEE
  6760                           plusw0	equ	0xFEB
  6761                           wreg	equ	0xFE8
  6762                           postinc1	equ	0xFE6
  6763                           postdec1	equ	0xFE5
  6764                           fsr1h	equ	0xFE2
  6765                           fsr1l	equ	0xFE1
  6766                           indf2	equ	0xFDF
  6767                           postinc2	equ	0xFDE
  6768                           postdec2	equ	0xFDD
  6769                           plusw2	equ	0xFDB
  6770                           fsr2h	equ	0xFDA
  6771                           fsr2l	equ	0xFD9
  6772                           status	equ	0xFD8
  6773                           
  6774 ;; *************** function _MdmHttp_MainTask *****************
  6775 ;; Defined at:
  6776 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;  Options         1    wreg     unsigned char 
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;  Options         1    0[COMRAM] unsigned char 
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1    wreg      void 
  6783 ;; Registers used:
  6784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6794 ;;Total ram usage:        0 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; Hardware stack levels required when called:   15
  6797 ;; This function calls:
  6798 ;;		_HttpGetMethod
  6799 ;;		_InitGprsNetwork
  6800 ;; This function is called by:
  6801 ;;		_InitializeTasks
  6802 ;;		_ScheduleTasks
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           	psect	text21
  6807  006244                     __ptext21:
  6808                           	opt stack 0
  6809  006244                     _MdmHttp_MainTask:
  6810                           	opt stack 13
  6811                           
  6812                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6813                           
  6814                           ;incstack = 0
  6815  006244  D019               	goto	l1291
  6816  006246                     
  6817                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6818  006246  0E03               	movlw	3
  6819  006248  0100               	movlb	0	; () banked
  6820  00624A  19D1               	xorwf	_MdmStatus& (0+255),w,b
  6821  00624C  A4D8               	btfss	status,2,c
  6822  00624E  0012               	return	
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;mdm_gsm_gprs_http.c: 570: {
  6826                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6827  006250  C31A  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6828  006254  C31B  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6829  006258  C1EB  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6830  00625C  ECE7  F006         	call	_InitGprsNetwork	;wreg free
  6831  006260  0101               	movlb	1	; () banked
  6832  006262  6FEA               	movwf	_GprsNetworkSts& (0+255),b
  6833                           
  6834                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6835  006264  0EA4               	movlw	low _HttpGetDataLocal
  6836  006266  0100               	movlb	0	; () banked
  6837  006268  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6838  00626A  0E03               	movlw	high _HttpGetDataLocal
  6839  00626C  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6840  00626E  ECF9  F002         	call	_HttpGetMethod	;wreg free
  6841  006272  0101               	movlb	1	; () banked
  6842  006274  6FE9               	movwf	_HttpGetMethodSts& (0+255),b
  6843                           
  6844                           ; BSR set to: 1
  6845                           ;mdm_gsm_gprs_http.c: 581: }
  6846                           
  6847                           ; BSR set to: 1
  6848                           ;mdm_gsm_gprs_http.c: 580: break;
  6849                           
  6850                           ;mdm_gsm_gprs_http.c: 579: default:
  6851                           
  6852                           ; BSR set to: 1
  6853                           ;mdm_gsm_gprs_http.c: 575: }
  6854                           ;mdm_gsm_gprs_http.c: 576: break;
  6855  006276  0012               	return	
  6856  006278                     l1291:
  6857                           
  6858                           ; BSR set to: 1
  6859  006278  0100               	movlb	0	; () banked
  6860  00627A  51D4               	movf	_SystemState& (0+255),w,b
  6861                           
  6862                           ; Switch size 1, requested type "space"
  6863                           ; Number of cases is 2, Range of values is 0 to 1
  6864                           ; switch strategies available:
  6865                           ; Name         Instructions Cycles
  6866                           ; simple_byte            7     4 (average)
  6867                           ;	Chosen strategy is simple_byte
  6868  00627C  0A00               	xorlw	0	; case 0
  6869  00627E  B4D8               	btfsc	status,2,c
  6870  006280  0012               	return	
  6871  006282  0A01               	xorlw	1	; case 1
  6872  006284  A4D8               	btfss	status,2,c
  6873  006286  0012               	return	
  6874  006288  D7DE               	goto	l1294
  6875  00628A                     __end_of_MdmHttp_MainTask:
  6876                           	opt stack 0
  6877                           tosu	equ	0xFFF
  6878                           tosh	equ	0xFFE
  6879                           tosl	equ	0xFFD
  6880                           pclath	equ	0xFFA
  6881                           tblptru	equ	0xFF8
  6882                           tblptrh	equ	0xFF7
  6883                           tblptrl	equ	0xFF6
  6884                           tablat	equ	0xFF5
  6885                           prodh	equ	0xFF4
  6886                           prodl	equ	0xFF3
  6887                           intcon	equ	0xFF2
  6888                           intcon2	equ	0xFF1
  6889                           intcon3	equ	0xFF0
  6890                           postinc0	equ	0xFEE
  6891                           plusw0	equ	0xFEB
  6892                           wreg	equ	0xFE8
  6893                           postinc1	equ	0xFE6
  6894                           postdec1	equ	0xFE5
  6895                           fsr1h	equ	0xFE2
  6896                           fsr1l	equ	0xFE1
  6897                           indf2	equ	0xFDF
  6898                           postinc2	equ	0xFDE
  6899                           postdec2	equ	0xFDD
  6900                           plusw2	equ	0xFDB
  6901                           fsr2h	equ	0xFDA
  6902                           fsr2l	equ	0xFD9
  6903                           status	equ	0xFD8
  6904                           
  6905 ;; *************** function _Mdm_MainTask *****************
  6906 ;; Defined at:
  6907 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;  Options         1    wreg     unsigned char 
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;  Options         1    0[COMRAM] unsigned char 
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  1    wreg      void 
  6914 ;; Registers used:
  6915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6925 ;;Total ram usage:        0 bytes
  6926 ;; Hardware stack levels used:    1
  6927 ;; Hardware stack levels required when called:   15
  6928 ;; This function calls:
  6929 ;;		_CheckModem
  6930 ;;		_ConfigureModem
  6931 ;;		_GetSmsSm
  6932 ;;		_ModemEvtParser
  6933 ;;		_SendSmsSm
  6934 ;;		_TurnOnModem
  6935 ;;		_UartSetConfig
  6936 ;;		_Uart_InitUartModule
  6937 ;; This function is called by:
  6938 ;;		_InitializeTasks
  6939 ;;		_ScheduleTasks
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           	psect	text22
  6944  005F92                     __ptext22:
  6945                           	opt stack 0
  6946  005F92                     _Mdm_MainTask:
  6947                           	opt stack 13
  6948                           
  6949                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6950                           
  6951                           ;incstack = 0
  6952  005F92  D01E               	goto	l1107
  6953  005F94                     
  6954                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6955  005F94  EC79  F02D         	call	_UartSetConfig	;wreg free
  6956                           
  6957                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6958  005F98  0E22               	movlw	low _UartConfig
  6959  005F9A  0100               	movlb	0	; () banked
  6960  005F9C  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6961  005F9E  0E03               	movlw	high _UartConfig
  6962  005FA0  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6963  005FA2  0E01               	movlw	1
  6964  005FA4  EC61  F005         	call	_Uart_InitUartModule
  6965                           
  6966                           ;mdm_gsm_gprs.c: 764: break;
  6967  005FA8  0012               	return	
  6968  005FAA                     
  6969                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6970  005FAA  EC13  F010         	call	_CheckModem	;wreg free
  6971                           
  6972                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6973  005FAE  042B               	decf	_ComChecCompleted,w,c
  6974  005FB0  A4D8               	btfss	status,2,c
  6975  005FB2  D005               	goto	l1111
  6976  005FB4  0100               	movlb	0	; () banked
  6977  005FB6  51D1               	movf	_MdmStatus& (0+255),w,b
  6978  005FB8  B4D8               	btfsc	status,2,c
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;mdm_gsm_gprs.c: 772: {
  6982                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6983  005FBA  ECB4  F030         	call	_TurnOnModem	;wreg free
  6984  005FBE                     l1111:
  6985                           
  6986                           ;mdm_gsm_gprs.c: 775: }
  6987                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6988  005FBE  EC5B  F01D         	call	_ConfigureModem	;wreg free
  6989                           
  6990                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6991  005FC2  EC9B  F00E         	call	_ModemEvtParser	;wreg free
  6992                           
  6993                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6994  005FC6  EC01  F016         	call	_GetSmsSm	;wreg free
  6995                           
  6996                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6997  005FCA  ECFC  F00C         	call	_SendSmsSm	;wreg free
  6998                           
  6999                           ;mdm_gsm_gprs.c: 789: }
  7000                           
  7001                           ;mdm_gsm_gprs.c: 788: break;
  7002                           
  7003                           ;mdm_gsm_gprs.c: 787: default:
  7004                           
  7005                           ;mdm_gsm_gprs.c: 784: break;
  7006  005FCE  0012               	return	
  7007  005FD0                     l1107:
  7008  005FD0  0100               	movlb	0	; () banked
  7009  005FD2  51D4               	movf	_SystemState& (0+255),w,b
  7010                           
  7011                           ; Switch size 1, requested type "space"
  7012                           ; Number of cases is 2, Range of values is 0 to 1
  7013                           ; switch strategies available:
  7014                           ; Name         Instructions Cycles
  7015                           ; simple_byte            7     4 (average)
  7016                           ;	Chosen strategy is simple_byte
  7017  005FD4  0A00               	xorlw	0	; case 0
  7018  005FD6  B4D8               	btfsc	status,2,c
  7019  005FD8  D7DD               	goto	l1108
  7020  005FDA  0A01               	xorlw	1	; case 1
  7021  005FDC  A4D8               	btfss	status,2,c
  7022  005FDE  0012               	return	
  7023  005FE0  D7E4               	goto	l1110
  7024  005FE2                     __end_of_Mdm_MainTask:
  7025                           	opt stack 0
  7026                           tosu	equ	0xFFF
  7027                           tosh	equ	0xFFE
  7028                           tosl	equ	0xFFD
  7029                           pclath	equ	0xFFA
  7030                           tblptru	equ	0xFF8
  7031                           tblptrh	equ	0xFF7
  7032                           tblptrl	equ	0xFF6
  7033                           tablat	equ	0xFF5
  7034                           prodh	equ	0xFF4
  7035                           prodl	equ	0xFF3
  7036                           intcon	equ	0xFF2
  7037                           intcon2	equ	0xFF1
  7038                           intcon3	equ	0xFF0
  7039                           postinc0	equ	0xFEE
  7040                           plusw0	equ	0xFEB
  7041                           wreg	equ	0xFE8
  7042                           postinc1	equ	0xFE6
  7043                           postdec1	equ	0xFE5
  7044                           fsr1h	equ	0xFE2
  7045                           fsr1l	equ	0xFE1
  7046                           indf2	equ	0xFDF
  7047                           postinc2	equ	0xFDE
  7048                           postdec2	equ	0xFDD
  7049                           plusw2	equ	0xFDB
  7050                           fsr2h	equ	0xFDA
  7051                           fsr2l	equ	0xFD9
  7052                           status	equ	0xFD8
  7053                           
  7054 ;; *************** function _I2cSlv_MainTask *****************
  7055 ;; Defined at:
  7056 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;  Options         1    wreg     unsigned char 
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;  Options         1    0[COMRAM] unsigned char 
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7074 ;;Total ram usage:        0 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; Hardware stack levels required when called:   14
  7077 ;; This function calls:
  7078 ;;		_I2cSendMsgSm
  7079 ;;		_I2cSetConfig
  7080 ;;		_I2c_InitI2cModule
  7081 ;;		_OsAlrm_SetOsAlarm
  7082 ;; This function is called by:
  7083 ;;		_InitializeTasks
  7084 ;;		_ScheduleTasks
  7085 ;; This function uses a non-reentrant model
  7086 ;;
  7087                           
  7088                           	psect	text23
  7089  005CA8                     __ptext23:
  7090                           	opt stack 0
  7091  005CA8                     _I2cSlv_MainTask:
  7092                           	opt stack 14
  7093                           
  7094                           ;i2c_slv.c: 217: switch (SystemState)
  7095                           
  7096                           ;incstack = 0
  7097  005CA8  D020               	goto	l1404
  7098  005CAA                     
  7099                           ;i2c_slv.c: 222: I2cSetConfig();
  7100  005CAA  EC4B  F034         	call	_I2cSetConfig	;wreg free
  7101                           
  7102                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7103  005CAE  0E5C               	movlw	low _I2cConfig
  7104  005CB0  0100               	movlb	0	; () banked
  7105  005CB2  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7106  005CB4  0E03               	movlw	high _I2cConfig
  7107  005CB6  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7108  005CB8  EC13  F02B         	call	_I2c_InitI2cModule	;wreg free
  7109                           
  7110                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7111  005CBC  0E00               	movlw	0
  7112  005CBE  0100               	movlb	0	; () banked
  7113  005CC0  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7114  005CC2  0E00               	movlw	0
  7115  005CC4  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7116  005CC6  0E32               	movlw	50
  7117  005CC8  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7118  005CCA  0E00               	movlw	0
  7119  005CCC  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7120  005CCE  0E00               	movlw	0
  7121  005CD0  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7122  005CD2  0E00               	movlw	0
  7123  005CD4  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7124  005CD6  0E96               	movlw	low _I2cDummyTx
  7125  005CD8  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7126  005CDA  0E6B               	movlw	high _I2cDummyTx
  7127  005CDC  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7128  005CDE  EC8E  F020         	call	_OsAlrm_SetOsAlarm	;wreg free
  7129                           
  7130                           ;i2c_slv.c: 227: break;
  7131  005CE2  0012               	return	
  7132  005CE4                     
  7133                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7134  005CE4  ECF2  F020         	call	_I2cSendMsgSm	;wreg free
  7135                           
  7136                           ;i2c_slv.c: 238: }
  7137                           
  7138                           ;i2c_slv.c: 237: break;
  7139                           
  7140                           ;i2c_slv.c: 236: default:
  7141                           
  7142                           ;i2c_slv.c: 233: break;
  7143  005CE8  0012               	return	
  7144  005CEA                     l1404:
  7145  005CEA  0100               	movlb	0	; () banked
  7146  005CEC  51D4               	movf	_SystemState& (0+255),w,b
  7147                           
  7148                           ; Switch size 1, requested type "space"
  7149                           ; Number of cases is 2, Range of values is 0 to 1
  7150                           ; switch strategies available:
  7151                           ; Name         Instructions Cycles
  7152                           ; simple_byte            7     4 (average)
  7153                           ;	Chosen strategy is simple_byte
  7154  005CEE  0A00               	xorlw	0	; case 0
  7155  005CF0  B4D8               	btfsc	status,2,c
  7156  005CF2  D7DB               	goto	l1405
  7157  005CF4  0A01               	xorlw	1	; case 1
  7158  005CF6  A4D8               	btfss	status,2,c
  7159  005CF8  0012               	return	
  7160  005CFA  D7F4               	goto	l1407
  7161  005CFC                     __end_of_I2cSlv_MainTask:
  7162                           	opt stack 0
  7163                           tosu	equ	0xFFF
  7164                           tosh	equ	0xFFE
  7165                           tosl	equ	0xFFD
  7166                           pclath	equ	0xFFA
  7167                           tblptru	equ	0xFF8
  7168                           tblptrh	equ	0xFF7
  7169                           tblptrl	equ	0xFF6
  7170                           tablat	equ	0xFF5
  7171                           prodh	equ	0xFF4
  7172                           prodl	equ	0xFF3
  7173                           intcon	equ	0xFF2
  7174                           intcon2	equ	0xFF1
  7175                           intcon3	equ	0xFF0
  7176                           postinc0	equ	0xFEE
  7177                           plusw0	equ	0xFEB
  7178                           wreg	equ	0xFE8
  7179                           postinc1	equ	0xFE6
  7180                           postdec1	equ	0xFE5
  7181                           fsr1h	equ	0xFE2
  7182                           fsr1l	equ	0xFE1
  7183                           indf2	equ	0xFDF
  7184                           postinc2	equ	0xFDE
  7185                           postdec2	equ	0xFDD
  7186                           plusw2	equ	0xFDB
  7187                           fsr2h	equ	0xFDA
  7188                           fsr2l	equ	0xFD9
  7189                           status	equ	0xFD8
  7190                           
  7191 ;; *************** function _Mdm_DrvMainFn *****************
  7192 ;; Defined at:
  7193 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;  Options         1    wreg     unsigned char 
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;  Options         1    0[COMRAM] unsigned char 
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  1    wreg      void 
  7200 ;; Registers used:
  7201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/0
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7211 ;;Total ram usage:        0 bytes
  7212 ;; Hardware stack levels used:    1
  7213 ;; Hardware stack levels required when called:   13
  7214 ;; This function calls:
  7215 ;;		_MdmCntSm
  7216 ;; This function is called by:
  7217 ;;		_InitializeTasks
  7218 ;;		_ScheduleTasks
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222                           	psect	text24
  7223  006DE0                     __ptext24:
  7224                           	opt stack 0
  7225  006DE0                     _Mdm_DrvMainFn:
  7226                           	opt stack 15
  7227                           
  7228                           ;mdm_drv.c: 307: MdmCntSm();
  7229                           
  7230                           ;incstack = 0
  7231  006DE0  EC8D  F024         	call	_MdmCntSm	;wreg free
  7232  006DE4  0012               	return		;funcret
  7233  006DE6                     __end_of_Mdm_DrvMainFn:
  7234                           	opt stack 0
  7235                           tosu	equ	0xFFF
  7236                           tosh	equ	0xFFE
  7237                           tosl	equ	0xFFD
  7238                           pclath	equ	0xFFA
  7239                           tblptru	equ	0xFF8
  7240                           tblptrh	equ	0xFF7
  7241                           tblptrl	equ	0xFF6
  7242                           tablat	equ	0xFF5
  7243                           prodh	equ	0xFF4
  7244                           prodl	equ	0xFF3
  7245                           intcon	equ	0xFF2
  7246                           intcon2	equ	0xFF1
  7247                           intcon3	equ	0xFF0
  7248                           postinc0	equ	0xFEE
  7249                           plusw0	equ	0xFEB
  7250                           wreg	equ	0xFE8
  7251                           postinc1	equ	0xFE6
  7252                           postdec1	equ	0xFE5
  7253                           fsr1h	equ	0xFE2
  7254                           fsr1l	equ	0xFE1
  7255                           indf2	equ	0xFDF
  7256                           postinc2	equ	0xFDE
  7257                           postdec2	equ	0xFDD
  7258                           plusw2	equ	0xFDB
  7259                           fsr2h	equ	0xFDA
  7260                           fsr2l	equ	0xFD9
  7261                           status	equ	0xFD8
  7262                           
  7263 ;; *************** function _Wdg_MainTask *****************
  7264 ;; Defined at:
  7265 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  Options         1    wreg     unsigned char 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;  Options         1    0[COMRAM] unsigned char 
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  1    wreg      void 
  7272 ;; Registers used:
  7273 ;;		wreg, status,2, status,0, cstack
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7283 ;;Total ram usage:        0 bytes
  7284 ;; Hardware stack levels used:    1
  7285 ;; Hardware stack levels required when called:   12
  7286 ;; This function calls:
  7287 ;;		_Mcu_ClearWdg
  7288 ;;		_Mcu_SetWdgSts
  7289 ;; This function is called by:
  7290 ;;		_InitializeTasks
  7291 ;;		_ScheduleTasks
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295                           	psect	text25
  7296  0069F4                     __ptext25:
  7297                           	opt stack 0
  7298  0069F4                     _Wdg_MainTask:
  7299                           	opt stack 16
  7300                           
  7301                           ;wdg.c: 75: switch (SystemState)
  7302                           
  7303                           ;incstack = 0
  7304  0069F4  D007               	goto	l2519
  7305  0069F6                     
  7306                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7307  0069F6  0E01               	movlw	1
  7308  0069F8  EC67  F036         	call	_Mcu_SetWdgSts
  7309                           
  7310                           ;wdg.c: 81: break;
  7311  0069FC  0012               	return	
  7312  0069FE                     
  7313                           ;wdg.c: 86: Mcu_ClearWdg();
  7314  0069FE  ECF3  F036         	call	_Mcu_ClearWdg	;wreg free
  7315                           
  7316                           ;wdg.c: 92: }
  7317                           
  7318                           ;wdg.c: 91: break;
  7319                           
  7320                           ;wdg.c: 90: default:
  7321                           
  7322                           ;wdg.c: 87: break;
  7323  006A02  0012               	return	
  7324  006A04                     l2519:
  7325  006A04  0100               	movlb	0	; () banked
  7326  006A06  51D4               	movf	_SystemState& (0+255),w,b
  7327                           
  7328                           ; Switch size 1, requested type "space"
  7329                           ; Number of cases is 2, Range of values is 0 to 1
  7330                           ; switch strategies available:
  7331                           ; Name         Instructions Cycles
  7332                           ; simple_byte            7     4 (average)
  7333                           ;	Chosen strategy is simple_byte
  7334  006A08  0A00               	xorlw	0	; case 0
  7335  006A0A  B4D8               	btfsc	status,2,c
  7336  006A0C  D7F4               	goto	l2520
  7337  006A0E  0A01               	xorlw	1	; case 1
  7338  006A10  A4D8               	btfss	status,2,c
  7339  006A12  0012               	return	
  7340  006A14  D7F4               	goto	l2522
  7341  006A16                     __end_of_Wdg_MainTask:
  7342                           	opt stack 0
  7343                           tosu	equ	0xFFF
  7344                           tosh	equ	0xFFE
  7345                           tosl	equ	0xFFD
  7346                           pclath	equ	0xFFA
  7347                           tblptru	equ	0xFF8
  7348                           tblptrh	equ	0xFF7
  7349                           tblptrl	equ	0xFF6
  7350                           tablat	equ	0xFF5
  7351                           prodh	equ	0xFF4
  7352                           prodl	equ	0xFF3
  7353                           intcon	equ	0xFF2
  7354                           intcon2	equ	0xFF1
  7355                           intcon3	equ	0xFF0
  7356                           postinc0	equ	0xFEE
  7357                           plusw0	equ	0xFEB
  7358                           wreg	equ	0xFE8
  7359                           postinc1	equ	0xFE6
  7360                           postdec1	equ	0xFE5
  7361                           fsr1h	equ	0xFE2
  7362                           fsr1l	equ	0xFE1
  7363                           indf2	equ	0xFDF
  7364                           postinc2	equ	0xFDE
  7365                           postdec2	equ	0xFDD
  7366                           plusw2	equ	0xFDB
  7367                           fsr2h	equ	0xFDA
  7368                           fsr2l	equ	0xFD9
  7369                           status	equ	0xFD8
  7370                           
  7371 ;; *************** function _Mcu_SetWdgSts *****************
  7372 ;; Defined at:
  7373 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  WdgSts          1    wreg     unsigned char 
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  1    wreg      void 
  7380 ;; Registers used:
  7381 ;;		wreg
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7390 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7391 ;;Total ram usage:        1 bytes
  7392 ;; Hardware stack levels used:    1
  7393 ;; Hardware stack levels required when called:   11
  7394 ;; This function calls:
  7395 ;;		Nothing
  7396 ;; This function is called by:
  7397 ;;		_Wdg_MainTask
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           	psect	text26
  7402  006CCE                     __ptext26:
  7403                           	opt stack 0
  7404  006CCE                     _Mcu_SetWdgSts:
  7405                           	opt stack 16
  7406                           
  7407                           ;incstack = 0
  7408                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7409  006CCE  0100               	movlb	0	; () banked
  7410  006CD0  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7411                           
  7412                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7413  006CD2  0100               	movlb	0	; () banked
  7414  006CD4  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7415  006CD6  D002               	bra	u15005
  7416  006CD8  90C0               	bcf	4032,0,c	;volatile
  7417  006CDA  D001               	bra	u15006
  7418  006CDC                     u15005:
  7419  006CDC  80C0               	bsf	4032,0,c	;volatile
  7420  006CDE                     u15006:
  7421  006CDE  0012               	return		;funcret
  7422  006CE0                     __end_of_Mcu_SetWdgSts:
  7423                           	opt stack 0
  7424                           tosu	equ	0xFFF
  7425                           tosh	equ	0xFFE
  7426                           tosl	equ	0xFFD
  7427                           pclath	equ	0xFFA
  7428                           tblptru	equ	0xFF8
  7429                           tblptrh	equ	0xFF7
  7430                           tblptrl	equ	0xFF6
  7431                           tablat	equ	0xFF5
  7432                           prodh	equ	0xFF4
  7433                           prodl	equ	0xFF3
  7434                           intcon	equ	0xFF2
  7435                           intcon2	equ	0xFF1
  7436                           intcon3	equ	0xFF0
  7437                           postinc0	equ	0xFEE
  7438                           plusw0	equ	0xFEB
  7439                           wreg	equ	0xFE8
  7440                           postinc1	equ	0xFE6
  7441                           postdec1	equ	0xFE5
  7442                           fsr1h	equ	0xFE2
  7443                           fsr1l	equ	0xFE1
  7444                           indf2	equ	0xFDF
  7445                           postinc2	equ	0xFDE
  7446                           postdec2	equ	0xFDD
  7447                           plusw2	equ	0xFDB
  7448                           fsr2h	equ	0xFDA
  7449                           fsr2l	equ	0xFD9
  7450                           status	equ	0xFD8
  7451                           
  7452 ;; *************** function _Mcu_ClearWdg *****************
  7453 ;; Defined at:
  7454 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;		None
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;		None
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		None
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7472 ;;Total ram usage:        0 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:   11
  7475 ;; This function calls:
  7476 ;;		Nothing
  7477 ;; This function is called by:
  7478 ;;		_Wdg_MainTask
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text27
  7483  006DE6                     __ptext27:
  7484                           	opt stack 0
  7485  006DE6                     _Mcu_ClearWdg:
  7486                           	opt stack 16
  7487                           
  7488                           ;incstack = 0
  7489  006DE6  0004               	clrwdt		;# 
  7490  006DE8  0012               	return		;funcret
  7491  006DEA                     __end_of_Mcu_ClearWdg:
  7492                           	opt stack 0
  7493                           tosu	equ	0xFFF
  7494                           tosh	equ	0xFFE
  7495                           tosl	equ	0xFFD
  7496                           pclath	equ	0xFFA
  7497                           tblptru	equ	0xFF8
  7498                           tblptrh	equ	0xFF7
  7499                           tblptrl	equ	0xFF6
  7500                           tablat	equ	0xFF5
  7501                           prodh	equ	0xFF4
  7502                           prodl	equ	0xFF3
  7503                           intcon	equ	0xFF2
  7504                           intcon2	equ	0xFF1
  7505                           intcon3	equ	0xFF0
  7506                           postinc0	equ	0xFEE
  7507                           plusw0	equ	0xFEB
  7508                           wreg	equ	0xFE8
  7509                           postinc1	equ	0xFE6
  7510                           postdec1	equ	0xFE5
  7511                           fsr1h	equ	0xFE2
  7512                           fsr1l	equ	0xFE1
  7513                           indf2	equ	0xFDF
  7514                           postinc2	equ	0xFDE
  7515                           postdec2	equ	0xFDD
  7516                           plusw2	equ	0xFDB
  7517                           fsr2h	equ	0xFDA
  7518                           fsr2l	equ	0xFD9
  7519                           status	equ	0xFD8
  7520                           
  7521 ;; *************** function _USBDeviceTasks *****************
  7522 ;; Defined at:
  7523 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;		None
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;  i               1   56[BANK0 ] unsigned char 
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  1    wreg      void 
  7530 ;; Registers used:
  7531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7540 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7541 ;;Total ram usage:        1 bytes
  7542 ;; Hardware stack levels used:    1
  7543 ;; Hardware stack levels required when called:   19
  7544 ;; This function calls:
  7545 ;;		_USBCtrlEPAllowStatusStage
  7546 ;;		_USBCtrlEPService
  7547 ;;		_USBDeviceInit
  7548 ;;		_USBIncrement1msInternalTimers
  7549 ;;		_USBStallHandler
  7550 ;;		_USBSuspend
  7551 ;;		_USBWakeFromSuspend
  7552 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7553 ;; This function is called by:
  7554 ;;		_UsbDevice_MainTask
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           	psect	text28
  7559  001BB0                     __ptext28:
  7560                           	opt stack 0
  7561  001BB0                     _USBDeviceTasks:
  7562                           	opt stack 8
  7563                           
  7564                           ;usb_device.c: 562: }
  7565                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7566                           
  7567                           ; BSR set to: 0
  7568                           
  7569                           ; BSR set to: 0
  7570                           ;usb_device.c: 561: return;
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7574                           
  7575                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7576                           
  7577                           ;usb_device.c: 529: UIE = 0;
  7578                           
  7579                           ;usb_device.c: 524: {
  7580                           ;usb_device.c: 526: UCON = 0;
  7581                           
  7582                           ;usb_device.c: 497: uint8_t i;
  7583                           ;usb_device.c: 523: if (1 != 1)
  7584                           
  7585                           ;incstack = 0
  7586  001BB0  0100               	movlb	0	; () banked
  7587  001BB2  51CE               	movf	_USBDeviceState& (0+255),w,b
  7588  001BB4  A4D8               	btfss	status,2,c
  7589  001BB6  D012               	goto	l1615
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;usb_device.c: 585: {
  7593                           ;usb_device.c: 587: UCON = 0;
  7594  001BB8  0E00               	movlw	0
  7595  001BBA  6E65               	movwf	3941,c	;volatile
  7596                           
  7597                           ;usb_device.c: 590: UIE = 0;
  7598  001BBC  0E00               	movlw	0
  7599  001BBE  010F               	movlb	15	; () banked
  7600  001BC0  6F36               	movwf	54,b	;volatile
  7601                           
  7602                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7603  001BC2  0E16               	movlw	22
  7604  001BC4  6F39               	movwf	57,b	;volatile
  7605  001BC6  0E9F               	movlw	159
  7606  001BC8  6F37               	movwf	55,b	;volatile
  7607  001BCA  0E7B               	movlw	123
  7608  001BCC  6F36               	movwf	54,b	;volatile
  7609                           
  7610                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7611  001BCE  D001               	goto	l1616
  7612  001BD0                     l1617:
  7613  001BD0  8665               	bsf	3941,3,c	;volatile
  7614  001BD2                     l1616:
  7615  001BD2  A665               	btfss	3941,3,c	;volatile
  7616  001BD4  D7FD               	goto	l1617
  7617                           
  7618                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7619  001BD6  0E01               	movlw	1
  7620  001BD8  0100               	movlb	0	; () banked
  7621  001BDA  6FCE               	movwf	_USBDeviceState& (0+255),b
  7622  001BDC                     l1615:
  7623                           
  7624                           ; BSR set to: 0
  7625                           ;usb_device.c: 605: }
  7626                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7627                           
  7628                           ; BSR set to: 0
  7629  001BDC  05CE               	decf	_USBDeviceState& (0+255),w,b
  7630  001BDE  B4D8               	btfsc	status,2,c
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;usb_device.c: 609: {
  7634                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7635  001BE0  BA65               	btfsc	3941,5,c	;volatile
  7636  001BE2  D00A               	goto	l1620
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;usb_device.c: 620: {
  7640                           ;usb_device.c: 626: {UIR = 0;};
  7641  001BE4  0E00               	movlw	0
  7642  001BE6  6E62               	movwf	3938,c	;volatile
  7643                           
  7644                           ;usb_device.c: 630: UIE=0;
  7645  001BE8  0E00               	movlw	0
  7646  001BEA  010F               	movlb	15	; () banked
  7647  001BEC  6F36               	movwf	54,b	;volatile
  7648                           
  7649                           ; BSR set to: 15
  7650                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7651  001BEE  8136               	bsf	54,0,b	;volatile
  7652                           
  7653                           ; BSR set to: 15
  7654                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7655  001BF0  8936               	bsf	54,4,b	;volatile
  7656                           
  7657                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7658  001BF2  0E02               	movlw	2
  7659  001BF4  0100               	movlb	0	; () banked
  7660  001BF6  6FCE               	movwf	_USBDeviceState& (0+255),b
  7661  001BF8                     l1620:
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;usb_device.c: 635: }
  7665                           ;usb_device.c: 636: }
  7666                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7667                           
  7668                           ; BSR set to: 0
  7669                           
  7670                           ; BSR set to: 0
  7671  001BF8  A462               	btfss	3938,2,c	;volatile
  7672  001BFA  D006               	goto	l1621
  7673                           
  7674                           ; BSR set to: 0
  7675  001BFC  010F               	movlb	15	; () banked
  7676  001BFE  A536               	btfss	54,2,b	;volatile
  7677  001C00  D003               	goto	l1621
  7678                           
  7679                           ; BSR set to: 15
  7680                           ;usb_device.c: 653: {
  7681                           ;usb_device.c: 654: (UIR &= 0xFB);
  7682  001C02  9462               	bcf	3938,2,c	;volatile
  7683                           
  7684                           ; BSR set to: 15
  7685                           ;usb_device.c: 658: USBWakeFromSuspend();
  7686  001C04  ECE6  F032         	call	_USBWakeFromSuspend	;wreg free
  7687  001C08                     l1621:
  7688                           
  7689                           ;usb_device.c: 660: }
  7690                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7691  001C08  A265               	btfss	3941,1,c	;volatile
  7692  001C0A  D002               	goto	l1622
  7693                           
  7694                           ;usb_device.c: 666: {
  7695                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7696  001C0C  98A1               	bcf	4001,4,c	;volatile
  7697                           
  7698                           ;usb_device.c: 668: return;
  7699  001C0E  0012               	return	
  7700  001C10                     l1622:
  7701                           
  7702                           ;usb_device.c: 669: }
  7703                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7704  001C10  A062               	btfss	3938,0,c	;volatile
  7705  001C12  D009               	goto	l1623
  7706  001C14  010F               	movlb	15	; () banked
  7707  001C16  A136               	btfss	54,0,b	;volatile
  7708  001C18  D006               	goto	l1623
  7709                           
  7710                           ; BSR set to: 15
  7711                           ;usb_device.c: 682: {
  7712                           ;usb_device.c: 683: USBDeviceInit();
  7713  001C1A  EC75  F013         	call	_USBDeviceInit	;wreg free
  7714                           
  7715                           ;usb_device.c: 687: ;
  7716                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7717  001C1E  0E04               	movlw	4
  7718  001C20  0100               	movlb	0	; () banked
  7719  001C22  6FCE               	movwf	_USBDeviceState& (0+255),b
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;usb_device.c: 699: (UIR &= 0xFE);
  7723  001C24  9062               	bcf	3938,0,c	;volatile
  7724  001C26                     l1623:
  7725                           
  7726                           ;usb_device.c: 700: }
  7727                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7728                           
  7729                           ; BSR set to: 0
  7730  001C26  A862               	btfss	3938,4,c	;volatile
  7731  001C28  D004               	goto	l1624
  7732  001C2A  010F               	movlb	15	; () banked
  7733  001C2C  B936               	btfsc	54,4,b	;volatile
  7734                           
  7735                           ; BSR set to: 15
  7736                           ;usb_device.c: 706: {
  7737                           ;usb_device.c: 712: USBSuspend();
  7738  001C2E  EC8B  F033         	call	_USBSuspend	;wreg free
  7739  001C32                     l1624:
  7740                           
  7741                           ;usb_device.c: 714: }
  7742                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7743  001C32  AC62               	btfss	3938,6,c	;volatile
  7744  001C34  D01C               	goto	l1628
  7745                           
  7746                           ;usb_device.c: 727: {
  7747                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7748  001C36  010F               	movlb	15	; () banked
  7749  001C38  AD36               	btfss	54,6,b	;volatile
  7750  001C3A  D00F               	goto	l1626
  7751                           
  7752                           ; BSR set to: 15
  7753                           ;usb_device.c: 730: {
  7754                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7755  001C3C  0E00               	movlw	0
  7756  001C3E  0100               	movlb	0	; () banked
  7757  001C40  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7758  001C42  0E73               	movlw	115
  7759  001C44  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7760  001C46  0E00               	movlw	0
  7761  001C48  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7762  001C4A  0E00               	movlw	0
  7763  001C4C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7764  001C4E  0E00               	movlw	0
  7765  001C50  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7766  001C52  0E01               	movlw	1
  7767  001C54  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7768  001C56  ECED  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7769  001C5A                     l1626:
  7770                           
  7771                           ;usb_device.c: 732: }
  7772                           ;usb_device.c: 733: (UIR &= 0xBF);
  7773  001C5A  9C62               	bcf	3938,6,c	;volatile
  7774                           
  7775                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7776  001C5C  EC0B  F035         	call	_USBIncrement1msInternalTimers	;wreg free
  7777                           
  7778                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7779  001C60  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7780  001C62  A4D8               	btfss	status,2,c
  7781                           
  7782                           ;usb_device.c: 754: {
  7783                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7784  001C64  0629               	decf	_USBStatusStageTimeoutCounter,f,c
  7785                           
  7786                           ;usb_device.c: 756: }
  7787                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7788  001C66  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7789  001C68  B4D8               	btfsc	status,2,c
  7790                           
  7791                           ;usb_device.c: 763: {
  7792                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7793  001C6A  ECFB  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7794  001C6E                     l1628:
  7795                           
  7796                           ;usb_device.c: 765: }
  7797                           ;usb_device.c: 767: }
  7798                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7799  001C6E  AA62               	btfss	3938,5,c	;volatile
  7800  001C70  D004               	goto	l1629
  7801  001C72  010F               	movlb	15	; () banked
  7802  001C74  BB36               	btfsc	54,5,b	;volatile
  7803                           
  7804                           ; BSR set to: 15
  7805                           ;usb_device.c: 770: {
  7806                           ;usb_device.c: 771: USBStallHandler();
  7807  001C76  EC45  F031         	call	_USBStallHandler	;wreg free
  7808  001C7A                     l1629:
  7809                           
  7810                           ;usb_device.c: 772: }
  7811                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7812  001C7A  A262               	btfss	3938,1,c	;volatile
  7813  001C7C  D013               	goto	l1630
  7814  001C7E  010F               	movlb	15	; () banked
  7815  001C80  A336               	btfss	54,1,b	;volatile
  7816  001C82  D010               	goto	l1630
  7817                           
  7818                           ; BSR set to: 15
  7819                           ;usb_device.c: 775: {
  7820                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7821  001C84  0E7F               	movlw	127
  7822  001C86  0100               	movlb	0	; () banked
  7823  001C88  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7824  001C8A  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7825  001C8C  0E00               	movlw	0
  7826  001C8E  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7827  001C90  0E00               	movlw	0
  7828  001C92  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7829  001C94  0E00               	movlw	0
  7830  001C96  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7831  001C98  0E01               	movlw	1
  7832  001C9A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7833  001C9C  ECED  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7834                           
  7835                           ;usb_device.c: 777: {UEIR = 0;};
  7836  001CA0  0E00               	movlw	0
  7837  001CA2  6E63               	movwf	3939,c	;volatile
  7838  001CA4                     l1630:
  7839                           
  7840                           ;usb_device.c: 785: }
  7841                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7842  001CA4  0E04               	movlw	4
  7843  001CA6  0100               	movlb	0	; () banked
  7844  001CA8  61CE               	cpfslt	_USBDeviceState& (0+255),b
  7845  001CAA  D002               	goto	l1631
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;usb_device.c: 793: {
  7849                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7850  001CAC  98A1               	bcf	4001,4,c	;volatile
  7851                           
  7852                           ;usb_device.c: 795: return;
  7853  001CAE  0012               	return	
  7854  001CB0                     l1631:
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;usb_device.c: 796: }
  7858                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7859  001CB0  010F               	movlb	15	; () banked
  7860  001CB2  A736               	btfss	54,3,b	;volatile
  7861  001CB4  D03E               	goto	u15960
  7862                           
  7863                           ; BSR set to: 15
  7864                           ;usb_device.c: 802: {
  7865                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7866  001CB6  0E00               	movlw	0
  7867  001CB8  0100               	movlb	0	; () banked
  7868  001CBA  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7869  001CBC                     l16313:
  7870                           
  7871                           ; BSR set to: 0
  7872  001CBC  0E03               	movlw	3
  7873  001CBE  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7874  001CC0  D001               	goto	l1633
  7875  001CC2  D037               	goto	u15960
  7876  001CC4                     l1633:
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;usb_device.c: 804: {
  7880                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7881  001CC4  A662               	btfss	3938,3,c	;volatile
  7882  001CC6  D035               	goto	u15960
  7883                           
  7884                           ; BSR set to: 0
  7885                           ;usb_device.c: 806: {
  7886                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7887  001CC8  CF64 F0D5          	movff	3940,_USTATcopy	;volatile
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7891  001CCC  31D5               	rrcf	_USTATcopy& (0+255),w,b
  7892  001CCE  32E8               	rrcf	wreg,f,c
  7893  001CD0  32E8               	rrcf	wreg,f,c
  7894  001CD2  0B0F               	andlw	15
  7895  001CD4  6FCB               	movwf	_endpoint_number& (0+255),b
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;usb_device.c: 811: (UIR &= 0xF7);
  7899  001CD6  9662               	bcf	3938,3,c	;volatile
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7903  001CD8  B5D5               	btfsc	_USTATcopy& (0+255),2,b
  7904  001CDA  D007               	goto	l1636
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;usb_device.c: 817: {
  7908                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7909  001CDC  51CB               	movf	_endpoint_number& (0+255),w,b
  7910  001CDE  0D01               	mullw	1
  7911  001CE0  0ECF               	movlw	low _ep_data_out
  7912  001CE2  24F3               	addwf	prodl,w,c
  7913  001CE4  6ED9               	movwf	fsr2l,c
  7914  001CE6  0E02               	movlw	high _ep_data_out
  7915  001CE8  D007               	goto	L3
  7916  001CEA                     l1636:
  7917                           
  7918                           ;usb_device.c: 820: else
  7919                           ;usb_device.c: 821: {
  7920                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7921                           
  7922                           ; BSR set to: 2
  7923  001CEA  0100               	movlb	0	; () banked
  7924  001CEC  51CB               	movf	_endpoint_number& (0+255),w,b
  7925  001CEE  0D01               	mullw	1
  7926  001CF0  0ED2               	movlw	low _ep_data_in
  7927  001CF2  24F3               	addwf	prodl,w,c
  7928  001CF4  6ED9               	movwf	fsr2l,c
  7929  001CF6  0E02               	movlw	high _ep_data_in
  7930  001CF8                     L3:
  7931  001CF8  20F4               	addwfc	prodh,w,c
  7932  001CFA  6EDA               	movwf	fsr2h,c
  7933  001CFC  0102               	movlb	2	; () banked
  7934  001CFE  70DF               	btg	indf2,0,c
  7935                           
  7936                           ; BSR set to: 2
  7937                           ;usb_device.c: 823: }
  7938                           ;usb_device.c: 828: if(endpoint_number == 0)
  7939                           
  7940                           ; BSR set to: 2
  7941  001D00  0100               	movlb	0	; () banked
  7942  001D02  51CB               	movf	_endpoint_number& (0+255),w,b
  7943  001D04  A4D8               	btfss	status,2,c
  7944  001D06  D003               	goto	l1638
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;usb_device.c: 829: {
  7948                           ;usb_device.c: 830: USBCtrlEPService();
  7949  001D08  ECA0  F027         	call	_USBCtrlEPService	;wreg free
  7950                           
  7951                           ;usb_device.c: 831: }
  7952  001D0C  D00F               	goto	l1640
  7953  001D0E                     l1638:
  7954                           
  7955                           ;usb_device.c: 832: else
  7956                           ;usb_device.c: 833: {
  7957                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7958  001D0E  0E00               	movlw	0
  7959  001D10  0100               	movlb	0	; () banked
  7960  001D12  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7961  001D14  0E72               	movlw	114
  7962  001D16  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7963  001D18  0ED5               	movlw	low _USTATcopy
  7964  001D1A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7965  001D1C  0E00               	movlw	high _USTATcopy
  7966  001D1E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7967  001D20  0E00               	movlw	0
  7968  001D22  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7969  001D24  0E00               	movlw	0
  7970  001D26  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7971  001D28  ECED  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7972  001D2C                     l1640:
  7973  001D2C  0100               	movlb	0	; () banked
  7974  001D2E  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7975  001D30  D7C5               	goto	l16313
  7976  001D32                     u15960:
  7977                           
  7978                           ;usb_device.c: 840: }
  7979                           ;usb_device.c: 841: }
  7980                           ;usb_device.c: 842: }
  7981                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7982                           
  7983                           ; BSR set to: 0
  7984  001D32  98A1               	bcf	4001,4,c	;volatile
  7985  001D34  0012               	return		;funcret
  7986  001D36                     __end_of_USBDeviceTasks:
  7987                           	opt stack 0
  7988                           tosu	equ	0xFFF
  7989                           tosh	equ	0xFFE
  7990                           tosl	equ	0xFFD
  7991                           pclath	equ	0xFFA
  7992                           tblptru	equ	0xFF8
  7993                           tblptrh	equ	0xFF7
  7994                           tblptrl	equ	0xFF6
  7995                           tablat	equ	0xFF5
  7996                           prodh	equ	0xFF4
  7997                           prodl	equ	0xFF3
  7998                           intcon	equ	0xFF2
  7999                           intcon2	equ	0xFF1
  8000                           intcon3	equ	0xFF0
  8001                           postinc0	equ	0xFEE
  8002                           plusw0	equ	0xFEB
  8003                           wreg	equ	0xFE8
  8004                           postinc1	equ	0xFE6
  8005                           postdec1	equ	0xFE5
  8006                           fsr1h	equ	0xFE2
  8007                           fsr1l	equ	0xFE1
  8008                           indf2	equ	0xFDF
  8009                           postinc2	equ	0xFDE
  8010                           postdec2	equ	0xFDD
  8011                           plusw2	equ	0xFDB
  8012                           fsr2h	equ	0xFDA
  8013                           fsr2l	equ	0xFD9
  8014                           status	equ	0xFD8
  8015                           
  8016 ;; *************** function _USBWakeFromSuspend *****************
  8017 ;; Defined at:
  8018 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;		None
  8021 ;; Auto vars:     Size  Location     Type
  8022 ;;		None
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  1    wreg      void 
  8025 ;; Registers used:
  8026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8027 ;; Tracked objects:
  8028 ;;		On entry : 0/0
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8036 ;;Total ram usage:        0 bytes
  8037 ;; Hardware stack levels used:    1
  8038 ;; Hardware stack levels required when called:   15
  8039 ;; This function calls:
  8040 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8041 ;; This function is called by:
  8042 ;;		_USBDeviceTasks
  8043 ;; This function uses a non-reentrant model
  8044 ;;
  8045                           
  8046                           	psect	text29
  8047  0065CC                     __ptext29:
  8048                           	opt stack 0
  8049  0065CC                     _USBWakeFromSuspend:
  8050                           	opt stack 11
  8051                           
  8052                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  8053                           
  8054                           ;incstack = 0
  8055  0065CC  0E00               	movlw	0
  8056  0065CE  0101               	movlb	1	; () banked
  8057  0065D0  6FDF               	movwf	_USBBusIsSuspended& (0+255),b
  8058                           
  8059                           ; BSR set to: 1
  8060                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  8061  0065D2  0E00               	movlw	0
  8062  0065D4  0100               	movlb	0	; () banked
  8063  0065D6  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8064  0065D8  0E74               	movlw	116
  8065  0065DA  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8066  0065DC  0E00               	movlw	0
  8067  0065DE  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8068  0065E0  0E00               	movlw	0
  8069  0065E2  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8070  0065E4  0E00               	movlw	0
  8071  0065E6  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8072  0065E8  0E00               	movlw	0
  8073  0065EA  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8074  0065EC  ECED  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8075                           
  8076                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  8077  0065F0  9265               	bcf	3941,1,c	;volatile
  8078                           
  8079                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  8080  0065F2  010F               	movlb	15	; () banked
  8081  0065F4  9536               	bcf	54,2,b	;volatile
  8082                           
  8083                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  8084  0065F6  D001               	goto	l1768
  8085  0065F8                     
  8086                           ;usb_device.c: 2361: {
  8087                           ;usb_device.c: 2362: (UIR &= 0xFB);
  8088                           
  8089                           ; BSR set to: 15
  8090  0065F8  9462               	bcf	3938,2,c	;volatile
  8091  0065FA                     l1768:
  8092  0065FA  B462               	btfsc	3938,2,c	;volatile
  8093  0065FC  D7FD               	goto	l1769
  8094                           
  8095                           ;usb_device.c: 2363: }
  8096                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  8097  0065FE  0E00               	movlw	0
  8098  006600  0101               	movlb	1	; () banked
  8099  006602  6FDD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8100                           
  8101                           ; BSR set to: 1
  8102  006604  0012               	return		;funcret
  8103  006606                     __end_of_USBWakeFromSuspend:
  8104                           	opt stack 0
  8105                           tosu	equ	0xFFF
  8106                           tosh	equ	0xFFE
  8107                           tosl	equ	0xFFD
  8108                           pclath	equ	0xFFA
  8109                           tblptru	equ	0xFF8
  8110                           tblptrh	equ	0xFF7
  8111                           tblptrl	equ	0xFF6
  8112                           tablat	equ	0xFF5
  8113                           prodh	equ	0xFF4
  8114                           prodl	equ	0xFF3
  8115                           intcon	equ	0xFF2
  8116                           intcon2	equ	0xFF1
  8117                           intcon3	equ	0xFF0
  8118                           postinc0	equ	0xFEE
  8119                           plusw0	equ	0xFEB
  8120                           wreg	equ	0xFE8
  8121                           postinc1	equ	0xFE6
  8122                           postdec1	equ	0xFE5
  8123                           fsr1h	equ	0xFE2
  8124                           fsr1l	equ	0xFE1
  8125                           indf2	equ	0xFDF
  8126                           postinc2	equ	0xFDE
  8127                           postdec2	equ	0xFDD
  8128                           plusw2	equ	0xFDB
  8129                           fsr2h	equ	0xFDA
  8130                           fsr2l	equ	0xFD9
  8131                           status	equ	0xFD8
  8132                           
  8133 ;; *************** function _USBSuspend *****************
  8134 ;; Defined at:
  8135 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;		None
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8153 ;;Total ram usage:        0 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:   15
  8156 ;; This function calls:
  8157 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8158 ;; This function is called by:
  8159 ;;		_USBDeviceTasks
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text30
  8164  006716                     __ptext30:
  8165                           	opt stack 0
  8166  006716                     _USBSuspend:
  8167                           	opt stack 11
  8168                           
  8169                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8170                           
  8171                           ; BSR set to: 1
  8172                           ;incstack = 0
  8173  006716  010F               	movlb	15	; () banked
  8174  006718  8536               	bsf	54,2,b	;volatile
  8175                           
  8176                           ; BSR set to: 15
  8177                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8178  00671A  9862               	bcf	3938,4,c	;volatile
  8179                           
  8180                           ; BSR set to: 15
  8181                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8182  00671C  8265               	bsf	3941,1,c	;volatile
  8183                           
  8184                           ; BSR set to: 15
  8185                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8186  00671E  0E01               	movlw	1
  8187  006720  0101               	movlb	1	; () banked
  8188  006722  6FDF               	movwf	_USBBusIsSuspended& (0+255),b
  8189                           
  8190                           ; BSR set to: 1
  8191                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8192  006724  0E00               	movlw	0
  8193  006726  6FDD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8194                           
  8195                           ; BSR set to: 1
  8196                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8197  006728  0E00               	movlw	0
  8198  00672A  0100               	movlb	0	; () banked
  8199  00672C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8200  00672E  0E75               	movlw	117
  8201  006730  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8202  006732  0E00               	movlw	0
  8203  006734  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8204  006736  0E00               	movlw	0
  8205  006738  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8206  00673A  0E00               	movlw	0
  8207  00673C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8208  00673E  0E00               	movlw	0
  8209  006740  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8210  006742  ECED  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8211  006746  0012               	return		;funcret
  8212  006748                     __end_of_USBSuspend:
  8213                           	opt stack 0
  8214                           tosu	equ	0xFFF
  8215                           tosh	equ	0xFFE
  8216                           tosl	equ	0xFFD
  8217                           pclath	equ	0xFFA
  8218                           tblptru	equ	0xFF8
  8219                           tblptrh	equ	0xFF7
  8220                           tblptrl	equ	0xFF6
  8221                           tablat	equ	0xFF5
  8222                           prodh	equ	0xFF4
  8223                           prodl	equ	0xFF3
  8224                           intcon	equ	0xFF2
  8225                           intcon2	equ	0xFF1
  8226                           intcon3	equ	0xFF0
  8227                           postinc0	equ	0xFEE
  8228                           plusw0	equ	0xFEB
  8229                           wreg	equ	0xFE8
  8230                           postinc1	equ	0xFE6
  8231                           postdec1	equ	0xFE5
  8232                           fsr1h	equ	0xFE2
  8233                           fsr1l	equ	0xFE1
  8234                           indf2	equ	0xFDF
  8235                           postinc2	equ	0xFDE
  8236                           postdec2	equ	0xFDD
  8237                           plusw2	equ	0xFDB
  8238                           fsr2h	equ	0xFDA
  8239                           fsr2l	equ	0xFD9
  8240                           status	equ	0xFD8
  8241                           
  8242 ;; *************** function _USBStallHandler *****************
  8243 ;; Defined at:
  8244 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;		None
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;		None
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  1    wreg      void 
  8251 ;; Registers used:
  8252 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8260 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8261 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8262 ;;Total ram usage:        1 bytes
  8263 ;; Hardware stack levels used:    1
  8264 ;; Hardware stack levels required when called:   11
  8265 ;; This function calls:
  8266 ;;		Nothing
  8267 ;; This function is called by:
  8268 ;;		_USBDeviceTasks
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text31
  8273  00628A                     __ptext31:
  8274                           	opt stack 0
  8275  00628A                     _USBStallHandler:
  8276                           	opt stack 15
  8277                           
  8278                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8279                           
  8280                           ;incstack = 0
  8281  00628A  010F               	movlb	15	; () banked
  8282  00628C  A126               	btfss	38,0,b	;volatile
  8283  00628E  D01D               	goto	l1760
  8284                           
  8285                           ; BSR set to: 15
  8286                           ;usb_device.c: 2233: {
  8287                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8288  006290  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8289  006294  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8290  006298  0E80               	movlw	128
  8291  00629A  18DE               	xorwf	postinc2,w,c
  8292  00629C  A4D8               	btfss	status,2,c
  8293  00629E  D014               	goto	l1761
  8294                           
  8295                           ; BSR set to: 15
  8296  0062A0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8297  0062A4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8298  0062A8  0E84               	movlw	132
  8299  0062AA  18DE               	xorwf	postinc2,w,c
  8300  0062AC  A4D8               	btfss	status,2,c
  8301  0062AE  D00C               	goto	l1761
  8302                           
  8303                           ; BSR set to: 15
  8304                           ;usb_device.c: 2236: {
  8305                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8306  0062B0  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8307  0062B4  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8308  0062B8  0E0C               	movlw	12
  8309  0062BA  6EDF               	movwf	indf2,c
  8310                           
  8311                           ; BSR set to: 15
  8312                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8313  0062BC  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8314  0062C0  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8315  0062C4  0E00               	movlw	0
  8316  0062C6  8EDB               	bsf	plusw2,7,c
  8317  0062C8                     l1761:
  8318                           
  8319                           ; BSR set to: 15
  8320                           ;usb_device.c: 2240: }
  8321                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8322                           
  8323                           ; BSR set to: 15
  8324  0062C8  9126               	bcf	38,0,b	;volatile
  8325  0062CA                     l1760:
  8326                           
  8327                           ; BSR set to: 15
  8328                           ;usb_device.c: 2242: }
  8329                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8330  0062CA  9A62               	bcf	3938,5,c	;volatile
  8331                           
  8332                           ; BSR set to: 15
  8333  0062CC  0012               	return		;funcret
  8334  0062CE                     __end_of_USBStallHandler:
  8335                           	opt stack 0
  8336                           tosu	equ	0xFFF
  8337                           tosh	equ	0xFFE
  8338                           tosl	equ	0xFFD
  8339                           pclath	equ	0xFFA
  8340                           tblptru	equ	0xFF8
  8341                           tblptrh	equ	0xFF7
  8342                           tblptrl	equ	0xFF6
  8343                           tablat	equ	0xFF5
  8344                           prodh	equ	0xFF4
  8345                           prodl	equ	0xFF3
  8346                           intcon	equ	0xFF2
  8347                           intcon2	equ	0xFF1
  8348                           intcon3	equ	0xFF0
  8349                           postinc0	equ	0xFEE
  8350                           plusw0	equ	0xFEB
  8351                           wreg	equ	0xFE8
  8352                           postinc1	equ	0xFE6
  8353                           postdec1	equ	0xFE5
  8354                           fsr1h	equ	0xFE2
  8355                           fsr1l	equ	0xFE1
  8356                           indf2	equ	0xFDF
  8357                           postinc2	equ	0xFDE
  8358                           postdec2	equ	0xFDD
  8359                           plusw2	equ	0xFDB
  8360                           fsr2h	equ	0xFDA
  8361                           fsr2l	equ	0xFD9
  8362                           status	equ	0xFD8
  8363                           
  8364 ;; *************** function _USBIncrement1msInternalTimers *****************
  8365 ;; Defined at:
  8366 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;		None
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;		None
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  1    wreg      void 
  8373 ;; Registers used:
  8374 ;;		wreg, status,2, status,0
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8384 ;;Total ram usage:        0 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; Hardware stack levels required when called:   11
  8387 ;; This function calls:
  8388 ;;		Nothing
  8389 ;; This function is called by:
  8390 ;;		_USBDeviceTasks
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           	psect	text32
  8395  006A16                     __ptext32:
  8396                           	opt stack 0
  8397  006A16                     _USBIncrement1msInternalTimers:
  8398                           	opt stack 15
  8399                           
  8400                           ;usb_device.c: 3050: USB1msTickCount++;
  8401                           
  8402                           ; BSR set to: 15
  8403                           ;incstack = 0
  8404  006A16  0E01               	movlw	1
  8405  006A18  0103               	movlb	3	; () banked
  8406  006A1A  2710               	addwf	_USB1msTickCount& (0+255),f,b
  8407  006A1C  0E00               	movlw	0
  8408  006A1E  2311               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8409  006A20  2312               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8410  006A22  2313               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8411                           
  8412                           ; BSR set to: 3
  8413                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8414  006A24  0101               	movlb	1	; () banked
  8415  006A26  51DF               	movf	_USBBusIsSuspended& (0+255),w,b
  8416  006A28  A4D8               	btfss	status,2,c
  8417  006A2A  0012               	return	
  8418                           
  8419                           ; BSR set to: 1
  8420                           ;usb_device.c: 3052: {
  8421                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8422  006A2C  2BDD               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8423                           
  8424                           ; BSR set to: 1
  8425                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8426  006A2E  51DD               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8427  006A30  A4D8               	btfss	status,2,c
  8428  006A32  0012               	return	
  8429                           
  8430                           ; BSR set to: 1
  8431                           ;usb_device.c: 3056: {
  8432                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8433  006A34  69DD               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8434                           
  8435                           ; BSR set to: 1
  8436  006A36  0012               	return	
  8437  006A38                     __end_of_USBIncrement1msInternalTimers:
  8438                           	opt stack 0
  8439                           tosu	equ	0xFFF
  8440                           tosh	equ	0xFFE
  8441                           tosl	equ	0xFFD
  8442                           pclath	equ	0xFFA
  8443                           tblptru	equ	0xFF8
  8444                           tblptrh	equ	0xFF7
  8445                           tblptrl	equ	0xFF6
  8446                           tablat	equ	0xFF5
  8447                           prodh	equ	0xFF4
  8448                           prodl	equ	0xFF3
  8449                           intcon	equ	0xFF2
  8450                           intcon2	equ	0xFF1
  8451                           intcon3	equ	0xFF0
  8452                           postinc0	equ	0xFEE
  8453                           plusw0	equ	0xFEB
  8454                           wreg	equ	0xFE8
  8455                           postinc1	equ	0xFE6
  8456                           postdec1	equ	0xFE5
  8457                           fsr1h	equ	0xFE2
  8458                           fsr1l	equ	0xFE1
  8459                           indf2	equ	0xFDF
  8460                           postinc2	equ	0xFDE
  8461                           postdec2	equ	0xFDD
  8462                           plusw2	equ	0xFDB
  8463                           fsr2h	equ	0xFDA
  8464                           fsr2l	equ	0xFD9
  8465                           status	equ	0xFD8
  8466                           
  8467 ;; *************** function _USBDeviceInit *****************
  8468 ;; Defined at:
  8469 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;		None
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;  i               1   37[BANK0 ] unsigned char 
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  1    wreg      void 
  8476 ;; Registers used:
  8477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8484 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8486 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8487 ;;Total ram usage:        1 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:   12
  8490 ;; This function calls:
  8491 ;;		_memset
  8492 ;; This function is called by:
  8493 ;;		_USBDeviceTasks
  8494 ;;		_UsbDevice_MainTask
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           	psect	text33
  8499  0026EA                     __ptext33:
  8500                           	opt stack 0
  8501  0026EA                     _USBDeviceInit:
  8502                           	opt stack 14
  8503                           
  8504                           ;usb_device.c: 297: uint8_t i;
  8505                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8506                           
  8507                           ; BSR set to: 1
  8508                           ;incstack = 0
  8509  0026EA  98A0               	bcf	4000,4,c	;volatile
  8510                           
  8511                           ;usb_device.c: 303: ;
  8512                           ;usb_device.c: 306: {UEIR = 0;};
  8513  0026EC  0E00               	movlw	0
  8514  0026EE  6E63               	movwf	3939,c	;volatile
  8515                           
  8516                           ;usb_device.c: 309: {UIR = 0;};
  8517  0026F0  0E00               	movlw	0
  8518  0026F2  6E62               	movwf	3938,c	;volatile
  8519                           
  8520                           ;usb_device.c: 312: UEP0 = 0;
  8521  0026F4  0E00               	movlw	0
  8522  0026F6  010F               	movlb	15	; () banked
  8523  0026F8  6F26               	movwf	38,b	;volatile
  8524                           
  8525                           ; BSR set to: 15
  8526                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8527  0026FA  0E27               	movlw	39
  8528  0026FC  0100               	movlb	0	; () banked
  8529  0026FE  6F7D               	movwf	memset@p1& (0+255),b
  8530  002700  0E0F               	movlw	15
  8531  002702  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8532  002704  0E00               	movlw	0
  8533  002706  6F80               	movwf	(memset@c+1)& (0+255),b
  8534  002708  0E00               	movlw	0
  8535  00270A  6F7F               	movwf	memset@c& (0+255),b
  8536  00270C  0E00               	movlw	0
  8537  00270E  6F82               	movwf	(memset@n+1)& (0+255),b
  8538  002710  0E02               	movlw	2
  8539  002712  6F81               	movwf	memset@n& (0+255),b
  8540  002714  ECD5  F033         	call	_memset	;wreg free
  8541                           
  8542                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8543  002718  0E16               	movlw	22
  8544  00271A  010F               	movlb	15	; () banked
  8545  00271C  6F39               	movwf	57,b	;volatile
  8546                           
  8547                           ; BSR set to: 15
  8548  00271E  0E9F               	movlw	159
  8549  002720  6F37               	movwf	55,b	;volatile
  8550                           
  8551                           ; BSR set to: 15
  8552  002722  0E7B               	movlw	123
  8553  002724  6F36               	movwf	54,b	;volatile
  8554                           
  8555                           ; BSR set to: 15
  8556                           ;usb_device.c: 319: ;
  8557                           ;usb_device.c: 322: ;
  8558                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8559  002726  0E00               	movlw	0
  8560  002728  0100               	movlb	0	; () banked
  8561  00272A  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8562  00272C                     l14939:
  8563                           
  8564                           ; BSR set to: 0
  8565  00272C  0E0B               	movlw	11
  8566  00272E  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8567  002730  D001               	goto	l1604
  8568  002732  D00E               	goto	u14010
  8569  002734                     l1604:
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;usb_device.c: 326: {
  8573                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8574                           
  8575                           ; BSR set to: 0
  8576  002734  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8577  002736  0D04               	mullw	4
  8578  002738  0E00               	movlw	0
  8579  00273A  24F3               	addwf	prodl,w,c
  8580  00273C  6ED9               	movwf	fsr2l,c
  8581  00273E  0E04               	movlw	4
  8582  002740  20F4               	addwfc	prodh,w,c
  8583  002742  6EDA               	movwf	fsr2h,c
  8584  002744  6ADE               	clrf	postinc2,c
  8585  002746  6ADE               	clrf	postinc2,c
  8586  002748  6ADE               	clrf	postinc2,c
  8587  00274A  6ADD               	clrf	postdec2,c
  8588                           
  8589                           ; BSR set to: 0
  8590  00274C  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8591  00274E  D7EE               	goto	l14939
  8592  002750                     u14010:
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;usb_device.c: 328: }
  8596                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8597  002750  8C65               	bsf	3941,6,c	;volatile
  8598                           
  8599                           ; BSR set to: 0
  8600                           ;usb_device.c: 334: UADDR = 0x00;
  8601  002752  0E00               	movlw	0
  8602  002754  010F               	movlb	15	; () banked
  8603  002756  6F38               	movwf	56,b	;volatile
  8604                           
  8605                           ; BSR set to: 15
  8606                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8607  002758  9865               	bcf	3941,4,c	;volatile
  8608                           
  8609                           ; BSR set to: 15
  8610                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8611  00275A  9C65               	bcf	3941,6,c	;volatile
  8612  00275C                     
  8613                           ;usb_device.c: 344: {
  8614                           ;usb_device.c: 345: (UIR &= 0xF7);
  8615                           
  8616                           ; BSR set to: 15
  8617  00275C  9662               	bcf	3938,3,c	;volatile
  8618                           
  8619                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8620  00275E  0E00               	movlw	0
  8621  002760  0100               	movlb	0	; () banked
  8622  002762  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8623                           
  8624                           ; BSR set to: 0
  8625                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8626  002764  0E00               	movlw	0
  8627  002766  0101               	movlb	1	; () banked
  8628  002768  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8629                           
  8630                           ; BSR set to: 1
  8631                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8632  00276A  0E00               	movlw	0
  8633  00276C  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8634  00276E  0E00               	movlw	0
  8635  002770  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8636                           
  8637                           ; BSR set to: 1
  8638                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8639  002772  B662               	btfsc	3938,3,c	;volatile
  8640  002774  D7F3               	goto	l1606
  8641                           
  8642                           ; BSR set to: 1
  8643                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8644                           
  8645                           ; BSR set to: 1
  8646  002776  0E01               	movlw	1
  8647  002778  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8648                           
  8649                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8650  00277A  0E01               	movlw	1
  8651  00277C  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8652                           
  8653                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8654  00277E  0E00               	movlw	0
  8655  002780  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8656                           
  8657                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8658  002782  0E00               	movlw	0
  8659  002784  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8660                           
  8661                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8662  002786  0E00               	movlw	0
  8663  002788  6FDF               	movwf	_USBBusIsSuspended& (0+255),b
  8664                           
  8665                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8666  00278A  0E00               	movlw	0
  8667  00278C  0100               	movlb	0	; () banked
  8668  00278E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8669  002790                     l14967:
  8670                           
  8671                           ; BSR set to: 0
  8672  002790  0E02               	movlw	2
  8673  002792  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8674  002794  D001               	goto	l1608
  8675  002796  D02E               	goto	u14040
  8676  002798                     l1608:
  8677                           
  8678                           ; BSR set to: 0
  8679                           ;usb_device.c: 364: {
  8680                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8681                           
  8682                           ; BSR set to: 0
  8683  002798  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8684  00279A  0D02               	mullw	2
  8685  00279C  0EB6               	movlw	low _pBDTEntryIn
  8686  00279E  24F3               	addwf	prodl,w,c
  8687  0027A0  6ED9               	movwf	fsr2l,c
  8688  0027A2  0E00               	movlw	high _pBDTEntryIn
  8689  0027A4  20F4               	addwfc	prodh,w,c
  8690  0027A6  6EDA               	movwf	fsr2h,c
  8691  0027A8  0E00               	movlw	0
  8692  0027AA  6EDE               	movwf	postinc2,c
  8693  0027AC  0E00               	movlw	0
  8694  0027AE  6EDD               	movwf	postdec2,c
  8695                           
  8696                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8697  0027B0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8698  0027B2  0D02               	mullw	2
  8699  0027B4  0E06               	movlw	low _pBDTEntryOut
  8700  0027B6  24F3               	addwf	prodl,w,c
  8701  0027B8  6ED9               	movwf	fsr2l,c
  8702  0027BA  0E03               	movlw	high _pBDTEntryOut
  8703  0027BC  20F4               	addwfc	prodh,w,c
  8704  0027BE  6EDA               	movwf	fsr2h,c
  8705  0027C0  0E00               	movlw	0
  8706  0027C2  6EDE               	movwf	postinc2,c
  8707  0027C4  0E00               	movlw	0
  8708  0027C6  6EDD               	movwf	postdec2,c
  8709                           
  8710                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8711  0027C8  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8712  0027CA  0D01               	mullw	1
  8713  0027CC  0ED2               	movlw	low _ep_data_in
  8714  0027CE  24F3               	addwf	prodl,w,c
  8715  0027D0  6ED9               	movwf	fsr2l,c
  8716  0027D2  0E02               	movlw	high _ep_data_in
  8717  0027D4  20F4               	addwfc	prodh,w,c
  8718  0027D6  6EDA               	movwf	fsr2h,c
  8719  0027D8  0E00               	movlw	0
  8720  0027DA  6EDF               	movwf	indf2,c
  8721                           
  8722                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8723  0027DC  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8724  0027DE  0D01               	mullw	1
  8725  0027E0  0ECF               	movlw	low _ep_data_out
  8726  0027E2  24F3               	addwf	prodl,w,c
  8727  0027E4  6ED9               	movwf	fsr2l,c
  8728  0027E6  0E02               	movlw	high _ep_data_out
  8729  0027E8  20F4               	addwfc	prodh,w,c
  8730  0027EA  6EDA               	movwf	fsr2h,c
  8731  0027EC  0E00               	movlw	0
  8732  0027EE  6EDF               	movwf	indf2,c
  8733                           
  8734                           ; BSR set to: 0
  8735  0027F0  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8736  0027F2  D7CE               	goto	l14967
  8737  0027F4                     u14040:
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;usb_device.c: 369: }
  8741                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8742                           
  8743                           ; BSR set to: 0
  8744  0027F4  0E08               	movlw	8
  8745  0027F6  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8746  0027F8  0E04               	movlw	4
  8747  0027FA  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8751  0027FC  0E16               	movlw	22
  8752  0027FE  010F               	movlb	15	; () banked
  8753  002800  6F26               	movwf	38,b	;volatile
  8754                           
  8755                           ; BSR set to: 15
  8756                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8757  002802  0E04               	movlw	4
  8758  002804  0104               	movlb	4	; () banked
  8759  002806  6F03               	movwf	3,b	;volatile
  8760  002808  0E30               	movlw	48
  8761  00280A  6F02               	movwf	2,b	;volatile
  8762                           
  8763                           ; BSR set to: 4
  8764                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8765  00280C  0E08               	movlw	8
  8766  00280E  6F01               	movwf	1,b	;volatile
  8767                           
  8768                           ; BSR set to: 4
  8769                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8770  002810  0E04               	movlw	4
  8771  002812  6F00               	movwf	0,b	;volatile
  8772                           
  8773                           ; BSR set to: 4
  8774                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8775  002814  8F00               	bsf	0,7,b	;volatile
  8776                           
  8777                           ; BSR set to: 4
  8778                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8779  002816  0E00               	movlw	0
  8780  002818  0100               	movlb	0	; () banked
  8781  00281A  6FD6               	movwf	_USBActiveConfiguration& (0+255),b
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;usb_device.c: 384: USB1msTickCount = 0;
  8785  00281C  0E00               	movlw	0
  8786  00281E  0103               	movlb	3	; () banked
  8787  002820  6F10               	movwf	_USB1msTickCount& (0+255),b
  8788  002822  0E00               	movlw	0
  8789  002824  6F11               	movwf	(_USB1msTickCount+1)& (0+255),b
  8790  002826  0E00               	movlw	0
  8791  002828  6F12               	movwf	(_USB1msTickCount+2)& (0+255),b
  8792  00282A  0E00               	movlw	0
  8793  00282C  6F13               	movwf	(_USB1msTickCount+3)& (0+255),b
  8794                           
  8795                           ; BSR set to: 3
  8796                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8797  00282E  0E00               	movlw	0
  8798  002830  0101               	movlb	1	; () banked
  8799  002832  6FDD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8800                           
  8801                           ; BSR set to: 1
  8802                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8803  002834  0E00               	movlw	0
  8804  002836  0100               	movlb	0	; () banked
  8805  002838  6FCE               	movwf	_USBDeviceState& (0+255),b
  8806                           
  8807                           ; BSR set to: 0
  8808  00283A  0012               	return		;funcret
  8809  00283C                     __end_of_USBDeviceInit:
  8810                           	opt stack 0
  8811                           tosu	equ	0xFFF
  8812                           tosh	equ	0xFFE
  8813                           tosl	equ	0xFFD
  8814                           pclath	equ	0xFFA
  8815                           tblptru	equ	0xFF8
  8816                           tblptrh	equ	0xFF7
  8817                           tblptrl	equ	0xFF6
  8818                           tablat	equ	0xFF5
  8819                           prodh	equ	0xFF4
  8820                           prodl	equ	0xFF3
  8821                           intcon	equ	0xFF2
  8822                           intcon2	equ	0xFF1
  8823                           intcon3	equ	0xFF0
  8824                           postinc0	equ	0xFEE
  8825                           plusw0	equ	0xFEB
  8826                           wreg	equ	0xFE8
  8827                           postinc1	equ	0xFE6
  8828                           postdec1	equ	0xFE5
  8829                           fsr1h	equ	0xFE2
  8830                           fsr1l	equ	0xFE1
  8831                           indf2	equ	0xFDF
  8832                           postinc2	equ	0xFDE
  8833                           postdec2	equ	0xFDD
  8834                           plusw2	equ	0xFDB
  8835                           fsr2h	equ	0xFDA
  8836                           fsr2l	equ	0xFD9
  8837                           status	equ	0xFD8
  8838                           
  8839 ;; *************** function _USBCtrlEPService *****************
  8840 ;; Defined at:
  8841 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;		None
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;		None
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  1    wreg      void 
  8848 ;; Registers used:
  8849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8857 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8858 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8859 ;;Total ram usage:        1 bytes
  8860 ;; Hardware stack levels used:    1
  8861 ;; Hardware stack levels required when called:   18
  8862 ;; This function calls:
  8863 ;;		_USBCtrlTrfInHandler
  8864 ;;		_USBCtrlTrfOutHandler
  8865 ;;		_USBCtrlTrfSetupHandler
  8866 ;;		_memcpy
  8867 ;; This function is called by:
  8868 ;;		_USBDeviceTasks
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           	psect	text34
  8873  004F40                     __ptext34:
  8874                           	opt stack 0
  8875  004F40                     _USBCtrlEPService:
  8876                           	opt stack 8
  8877                           
  8878                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;incstack = 0
  8882  004F40  0E2D               	movlw	45
  8883  004F42  6E29               	movwf	_USBStatusStageTimeoutCounter,c
  8884                           
  8885                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8886  004F44  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8887  004F48  0EFD               	movlw	253
  8888  004F4A  0100               	movlb	0	; () banked
  8889  004F4C  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8890  004F4E  A4D8               	btfss	status,2,c
  8891  004F50  D038               	goto	l1774
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;usb_device.c: 2401: {
  8895                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8896  004F52  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8897  004F56  90D8               	bcf	status,0,c
  8898  004F58  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8899  004F5A  0E3F               	movlw	63
  8900  004F5C  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8901  004F5E  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8902  004F60  0D04               	mullw	4
  8903  004F62  0E00               	movlw	0
  8904  004F64  24F3               	addwf	prodl,w,c
  8905  004F66  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8906  004F68  0E04               	movlw	4
  8907  004F6A  20F4               	addwfc	prodh,w,c
  8908  004F6C  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8912  004F6E  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8913  004F72  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8914                           
  8915                           ; BSR set to: 0
  8916                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8917  004F76  0E04               	movlw	4
  8918  004F78  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8922  004F7A  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8923  004F7E  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8924  004F82  30DF               	rrcf	223,w,c
  8925  004F84  32E8               	rrcf	wreg,f,c
  8926  004F86  0B0F               	andlw	15
  8927  004F88  0A0D               	xorlw	13
  8928  004F8A  A4D8               	btfss	status,2,c
  8929  004F8C  D017               	goto	l1775
  8930                           
  8931                           ; BSR set to: 0
  8932                           ;usb_device.c: 2418: {
  8933                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8934  004F8E  0E30               	movlw	48
  8935  004F90  6F7D               	movwf	memcpy@d1& (0+255),b
  8936  004F92  0E04               	movlw	4
  8937  004F94  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8938  004F96  EE20 F002          	lfsr	2,2
  8939  004F9A  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8940  004F9C  26D9               	addwf	fsr2l,f,c
  8941  004F9E  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8942  004FA0  22DA               	addwfc	fsr2h,f,c
  8943  004FA2  CFDE F07F          	movff	postinc2,memcpy@s1
  8944  004FA6  CFDD F080          	movff	postdec2,memcpy@s1+1
  8945  004FAA  0E00               	movlw	0
  8946  004FAC  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8947  004FAE  0E08               	movlw	8
  8948  004FB0  6F81               	movwf	memcpy@n& (0+255),b
  8949  004FB2  ECDA  F030         	call	_memcpy	;wreg free
  8950                           
  8951                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8952  004FB6  EC55  F029         	call	_USBCtrlTrfSetupHandler	;wreg free
  8953                           
  8954                           ;usb_device.c: 2427: }
  8955  004FBA  0012               	return	
  8956  004FBC                     l1775:
  8957                           
  8958                           ;usb_device.c: 2428: else
  8959                           ;usb_device.c: 2429: {
  8960                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8961  004FBC  EC23  F02C         	call	_USBCtrlTrfOutHandler	;wreg free
  8962                           
  8963                           ;usb_device.c: 2432: }
  8964                           ;usb_device.c: 2433: }
  8965  004FC0  0012               	return	
  8966  004FC2                     l1774:
  8967                           
  8968                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8969  004FC2  0100               	movlb	0	; () banked
  8970  004FC4  51D5               	movf	_USTATcopy& (0+255),w,b
  8971  004FC6  0BFD               	andlw	253
  8972  004FC8  0A04               	xorlw	4
  8973  004FCA  A4D8               	btfss	status,2,c
  8974  004FCC  0012               	return	
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;usb_device.c: 2435: {
  8978                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8979  004FCE  EC54  F021         	call	_USBCtrlTrfInHandler	;wreg free
  8980  004FD2  0012               	return	
  8981  004FD4                     __end_of_USBCtrlEPService:
  8982                           	opt stack 0
  8983                           tosu	equ	0xFFF
  8984                           tosh	equ	0xFFE
  8985                           tosl	equ	0xFFD
  8986                           pclath	equ	0xFFA
  8987                           tblptru	equ	0xFF8
  8988                           tblptrh	equ	0xFF7
  8989                           tblptrl	equ	0xFF6
  8990                           tablat	equ	0xFF5
  8991                           prodh	equ	0xFF4
  8992                           prodl	equ	0xFF3
  8993                           intcon	equ	0xFF2
  8994                           intcon2	equ	0xFF1
  8995                           intcon3	equ	0xFF0
  8996                           postinc0	equ	0xFEE
  8997                           plusw0	equ	0xFEB
  8998                           wreg	equ	0xFE8
  8999                           postinc1	equ	0xFE6
  9000                           postdec1	equ	0xFE5
  9001                           fsr1h	equ	0xFE2
  9002                           fsr1l	equ	0xFE1
  9003                           indf2	equ	0xFDF
  9004                           postinc2	equ	0xFDE
  9005                           postdec2	equ	0xFDD
  9006                           plusw2	equ	0xFDB
  9007                           fsr2h	equ	0xFDA
  9008                           fsr2l	equ	0xFD9
  9009                           status	equ	0xFD8
  9010                           
  9011 ;; *************** function _memcpy *****************
  9012 ;; Defined at:
  9013 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  9014 ;; Parameters:    Size  Location     Type
  9015 ;;  d1              2   29[BANK0 ] PTR void 
  9016 ;;		 -> SetupPkt(8), 
  9017 ;;  s1              2   31[BANK0 ] PTR const void 
  9018 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9019 ;;  n               2   33[BANK0 ] unsigned int 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  9022 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9023 ;;  d               2   36[BANK0 ] PTR unsigned char 
  9024 ;;		 -> SetupPkt(8), 
  9025 ;;  tmp             1   35[BANK0 ] unsigned char 
  9026 ;; Return value:  Size  Location     Type
  9027 ;;                  2   29[BANK0 ] PTR void 
  9028 ;; Registers used:
  9029 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9030 ;; Tracked objects:
  9031 ;;		On entry : 0/0
  9032 ;;		On exit  : 0/0
  9033 ;;		Unchanged: 0/0
  9034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9035 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9036 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9038 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9039 ;;Total ram usage:       11 bytes
  9040 ;; Hardware stack levels used:    1
  9041 ;; Hardware stack levels required when called:   11
  9042 ;; This function calls:
  9043 ;;		Nothing
  9044 ;; This function is called by:
  9045 ;;		_USBCtrlEPService
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           	psect	text35
  9050  0061B4                     __ptext35:
  9051                           	opt stack 0
  9052  0061B4                     _memcpy:
  9053                           	opt stack 14
  9054                           
  9055                           ;incstack = 0
  9056  0061B4  C07F  F086         	movff	memcpy@s1,memcpy@s
  9057  0061B8  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  9058  0061BC  C07D  F084         	movff	memcpy@d1,memcpy@d
  9059  0061C0  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  9060  0061C4  D011               	goto	l3454
  9061  0061C6                     l14139:
  9062  0061C6  C086  FFD9         	movff	memcpy@s,fsr2l
  9063  0061CA  C087  FFDA         	movff	memcpy@s+1,fsr2h
  9064  0061CE  50DF               	movf	indf2,w,c
  9065  0061D0  0100               	movlb	0	; () banked
  9066  0061D2  6F83               	movwf	memcpy@tmp& (0+255),b
  9067                           
  9068                           ; BSR set to: 0
  9069  0061D4  4B86               	infsnz	memcpy@s& (0+255),f,b
  9070  0061D6  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  9071                           
  9072                           ; BSR set to: 0
  9073  0061D8  C084  FFD9         	movff	memcpy@d,fsr2l
  9074  0061DC  C085  FFDA         	movff	memcpy@d+1,fsr2h
  9075  0061E0  C083  FFDF         	movff	memcpy@tmp,indf2
  9076                           
  9077                           ; BSR set to: 0
  9078  0061E4  4B84               	infsnz	memcpy@d& (0+255),f,b
  9079  0061E6  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  9080  0061E8                     l3454:
  9081                           
  9082                           ; BSR set to: 0
  9083  0061E8  0100               	movlb	0	; () banked
  9084  0061EA  0781               	decf	memcpy@n& (0+255),f,b
  9085  0061EC  A0D8               	btfss	status,0,c
  9086  0061EE  0782               	decf	(memcpy@n+1)& (0+255),f,b
  9087  0061F0  2981               	incf	memcpy@n& (0+255),w,b
  9088  0061F2  E1E9               	bnz	l14139
  9089  0061F4  2982               	incf	(memcpy@n+1)& (0+255),w,b
  9090  0061F6  B4D8               	btfsc	status,2,c
  9091  0061F8  0012               	return	
  9092  0061FA  D7E5               	goto	l3455
  9093  0061FC                     __end_of_memcpy:
  9094                           	opt stack 0
  9095                           tosu	equ	0xFFF
  9096                           tosh	equ	0xFFE
  9097                           tosl	equ	0xFFD
  9098                           pclath	equ	0xFFA
  9099                           tblptru	equ	0xFF8
  9100                           tblptrh	equ	0xFF7
  9101                           tblptrl	equ	0xFF6
  9102                           tablat	equ	0xFF5
  9103                           prodh	equ	0xFF4
  9104                           prodl	equ	0xFF3
  9105                           intcon	equ	0xFF2
  9106                           intcon2	equ	0xFF1
  9107                           intcon3	equ	0xFF0
  9108                           postinc0	equ	0xFEE
  9109                           plusw0	equ	0xFEB
  9110                           wreg	equ	0xFE8
  9111                           postinc1	equ	0xFE6
  9112                           postdec1	equ	0xFE5
  9113                           fsr1h	equ	0xFE2
  9114                           fsr1l	equ	0xFE1
  9115                           indf2	equ	0xFDF
  9116                           postinc2	equ	0xFDE
  9117                           postdec2	equ	0xFDD
  9118                           plusw2	equ	0xFDB
  9119                           fsr2h	equ	0xFDA
  9120                           fsr2l	equ	0xFD9
  9121                           status	equ	0xFD8
  9122                           
  9123 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9124 ;; Defined at:
  9125 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9126 ;; Parameters:    Size  Location     Type
  9127 ;;		None
  9128 ;; Auto vars:     Size  Location     Type
  9129 ;;		None
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  1    wreg      void 
  9132 ;; Registers used:
  9133 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9143 ;;Total ram usage:        0 bytes
  9144 ;; Hardware stack levels used:    1
  9145 ;; Hardware stack levels required when called:   17
  9146 ;; This function calls:
  9147 ;;		_USBCheckStdRequest
  9148 ;;		_USBCtrlEPServiceComplete
  9149 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9150 ;; This function is called by:
  9151 ;;		_USBCtrlEPService
  9152 ;; This function uses a non-reentrant model
  9153 ;;
  9154                           
  9155                           	psect	text36
  9156  0052AA                     __ptext36:
  9157                           	opt stack 0
  9158  0052AA                     _USBCtrlTrfSetupHandler:
  9159                           	opt stack 8
  9160                           
  9161                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;incstack = 0
  9165  0052AA  0E00               	movlw	0
  9166  0052AC  0100               	movlb	0	; () banked
  9167  0052AE  6FCD               	movwf	_shortPacketStatus& (0+255),b
  9168                           
  9169                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9170  0052B0  0E00               	movlw	0
  9171  0052B2  6FCA               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9172                           
  9173                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9174  0052B4  0E00               	movlw	0
  9175  0052B6  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9176                           
  9177                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9178  0052B8  0E00               	movlw	0
  9179  0052BA  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9180                           
  9181                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9182  0052BC  0E00               	movlw	0
  9183  0052BE  0101               	movlb	1	; () banked
  9184  0052C0  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9185                           
  9186                           ;usb_device.c: 2493: controlTransferState = 0;
  9187  0052C2  0E00               	movlw	0
  9188  0052C4  0100               	movlb	0	; () banked
  9189  0052C6  6FCC               	movwf	_controlTransferState& (0+255),b
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9193  0052C8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9194  0052CC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9195  0052D0  0E7F               	movlw	127
  9196  0052D2  16DF               	andwf	indf2,f,c
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9200  0052D4  0E04               	movlw	4
  9201  0052D6  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9202                           
  9203                           ; BSR set to: 0
  9204                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9205  0052D8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9206  0052DC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9207  0052E0  0E7F               	movlw	127
  9208  0052E2  16DF               	andwf	indf2,f,c
  9209                           
  9210                           ; BSR set to: 0
  9211                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9212  0052E4  0E04               	movlw	4
  9213  0052E6  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9217  0052E8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9218  0052EC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9219  0052F0  0E7F               	movlw	127
  9220  0052F2  16DF               	andwf	indf2,f,c
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9224  0052F4  0E00               	movlw	0
  9225  0052F6  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9229  0052F8  0E00               	movlw	0
  9230  0052FA  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9231  0052FC  0E00               	movlw	0
  9232  0052FE  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9236  005300  0E00               	movlw	0
  9237  005302  0101               	movlb	1	; () banked
  9238  005304  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9239                           
  9240                           ; BSR set to: 1
  9241                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9242  005306  0E00               	movlw	0
  9243  005308  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9244  00530A  0E00               	movlw	0
  9245  00530C  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9246                           
  9247                           ; BSR set to: 1
  9248                           ;usb_device.c: 2517: USBCheckStdRequest();
  9249  00530E  ECA5  F01B         	call	_USBCheckStdRequest	;wreg free
  9250                           
  9251                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9252  005312  0E00               	movlw	0
  9253  005314  0100               	movlb	0	; () banked
  9254  005316  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9255  005318  0E03               	movlw	3
  9256  00531A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9257  00531C  0E00               	movlw	0
  9258  00531E  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9259  005320  0E00               	movlw	0
  9260  005322  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9261  005324  0E00               	movlw	0
  9262  005326  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9263  005328  0E00               	movlw	0
  9264  00532A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9265  00532C  ECED  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9266                           
  9267                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9268  005330  ECDE  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9269  005334  0012               	return		;funcret
  9270  005336                     __end_of_USBCtrlTrfSetupHandler:
  9271                           	opt stack 0
  9272                           tosu	equ	0xFFF
  9273                           tosh	equ	0xFFE
  9274                           tosl	equ	0xFFD
  9275                           pclath	equ	0xFFA
  9276                           tblptru	equ	0xFF8
  9277                           tblptrh	equ	0xFF7
  9278                           tblptrl	equ	0xFF6
  9279                           tablat	equ	0xFF5
  9280                           prodh	equ	0xFF4
  9281                           prodl	equ	0xFF3
  9282                           intcon	equ	0xFF2
  9283                           intcon2	equ	0xFF1
  9284                           intcon3	equ	0xFF0
  9285                           postinc0	equ	0xFEE
  9286                           plusw0	equ	0xFEB
  9287                           wreg	equ	0xFE8
  9288                           postinc1	equ	0xFE6
  9289                           postdec1	equ	0xFE5
  9290                           fsr1h	equ	0xFE2
  9291                           fsr1l	equ	0xFE1
  9292                           indf2	equ	0xFDF
  9293                           postinc2	equ	0xFDE
  9294                           postdec2	equ	0xFDD
  9295                           plusw2	equ	0xFDB
  9296                           fsr2h	equ	0xFDA
  9297                           fsr2l	equ	0xFD9
  9298                           status	equ	0xFD8
  9299                           
  9300 ;; *************** function _USBCtrlEPServiceComplete *****************
  9301 ;; Defined at:
  9302 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;		None
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;		None
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      void 
  9309 ;; Registers used:
  9310 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9320 ;;Total ram usage:        0 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; Hardware stack levels required when called:   13
  9323 ;; This function calls:
  9324 ;;		_USBCtrlEPAllowDataStage
  9325 ;;		_USBCtrlEPAllowStatusStage
  9326 ;; This function is called by:
  9327 ;;		_USBCtrlTrfSetupHandler
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           	psect	text37
  9332  0031BC                     __ptext37:
  9333                           	opt stack 0
  9334  0031BC                     _USBCtrlEPServiceComplete:
  9335                           	opt stack 11
  9336                           
  9337                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9338                           
  9339                           ;incstack = 0
  9340  0031BC  9865               	bcf	3941,4,c	;volatile
  9341                           
  9342                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9343  0031BE  0100               	movlb	0	; () banked
  9344  0031C0  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9345  0031C2  D03B               	goto	l1684
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;usb_device.c: 1647: {
  9349                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9350  0031C4  0101               	movlb	1	; () banked
  9351  0031C6  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9352  0031C8  D00C               	goto	l1685
  9353                           
  9354                           ; BSR set to: 1
  9355                           ;usb_device.c: 1649: {
  9356                           ;usb_device.c: 1650: controlTransferState = 2;
  9357  0031CA  0E02               	movlw	2
  9358  0031CC  0100               	movlb	0	; () banked
  9359  0031CE  6FCC               	movwf	_controlTransferState& (0+255),b
  9360                           
  9361                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9362  0031D0  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9363  0031D2  B4D8               	btfsc	status,2,c
  9364                           
  9365                           ; BSR set to: 0
  9366                           ;usb_device.c: 1662: {
  9367                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9368  0031D4  ECD6  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
  9369                           
  9370                           ;usb_device.c: 1664: }
  9371                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9372  0031D8  0E00               	movlw	0
  9373  0031DA  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9374                           
  9375                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9376  0031DC  0E00               	movlw	0
  9377  0031DE  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9378                           
  9379                           ;usb_device.c: 1670: }
  9380  0031E0  0012               	return	
  9381  0031E2                     l1685:
  9382                           
  9383                           ;usb_device.c: 1671: else
  9384                           ;usb_device.c: 1672: {
  9385                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9386  0031E2  0100               	movlb	0	; () banked
  9387  0031E4  EE20 F001          	lfsr	2,1
  9388  0031E8  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9389  0031EA  26D9               	addwf	fsr2l,f,c
  9390  0031EC  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9391  0031EE  22DA               	addwfc	fsr2h,f,c
  9392  0031F0  0E08               	movlw	8
  9393  0031F2  6EDF               	movwf	indf2,c
  9394                           
  9395                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9396  0031F4  EE20 F002          	lfsr	2,2
  9397  0031F8  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9398  0031FA  26D9               	addwf	fsr2l,f,c
  9399  0031FC  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9400  0031FE  22DA               	addwfc	fsr2h,f,c
  9401  003200  0E30               	movlw	48
  9402  003202  6EDE               	movwf	postinc2,c
  9403  003204  0E04               	movlw	4
  9404  003206  6EDD               	movwf	postdec2,c
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9408  003208  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9409  00320C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9410  003210  0E0C               	movlw	12
  9411  003212  6EDF               	movwf	indf2,c
  9412                           
  9413                           ; BSR set to: 0
  9414                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9415  003214  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9416  003218  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9417  00321C  0E00               	movlw	0
  9418  00321E  8EDB               	bsf	plusw2,7,c
  9419                           
  9420                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9421  003220  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9422  003224  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9423  003228  0E04               	movlw	4
  9424  00322A  6EDF               	movwf	indf2,c
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9428  00322C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9429  003230  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9430  003234  0E00               	movlw	0
  9431  003236  8EDB               	bsf	plusw2,7,c
  9432                           
  9433                           ; BSR set to: 0
  9434                           ;usb_device.c: 1683: }
  9435                           ;usb_device.c: 1684: }
  9436  003238  0012               	return	
  9437  00323A                     l1684:
  9438                           
  9439                           ; BSR set to: 0
  9440                           ;usb_device.c: 1685: else
  9441                           ;usb_device.c: 1686: {
  9442                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9443  00323A  0104               	movlb	4	; () banked
  9444  00323C  AF30               	btfss	48,7,b	;volatile
  9445  00323E  D012               	goto	l1689
  9446                           
  9447                           ; BSR set to: 4
  9448                           ;usb_device.c: 1688: {
  9449                           ;usb_device.c: 1689: controlTransferState = 1;
  9450  003240  0E01               	movlw	1
  9451  003242  0100               	movlb	0	; () banked
  9452  003244  6FCC               	movwf	_controlTransferState& (0+255),b
  9453                           
  9454                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9455  003246  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9456  003248  B4D8               	btfsc	status,2,c
  9457                           
  9458                           ; BSR set to: 0
  9459                           ;usb_device.c: 1704: {
  9460                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9461  00324A  ECD6  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
  9462                           
  9463                           ;usb_device.c: 1706: }
  9464                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9465  00324E  0E00               	movlw	0
  9466  003250  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9467                           
  9468                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9469  003252  0E00               	movlw	0
  9470  003254  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9471                           
  9472                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9473  003256  0100               	movlb	0	; () banked
  9474  003258  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9475  00325A  A4D8               	btfss	status,2,c
  9476  00325C  0012               	return	
  9477                           
  9478                           ; BSR set to: 0
  9479                           ;usb_device.c: 1731: {
  9480                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9481  00325E  ECFB  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9482                           
  9483                           ;usb_device.c: 1733: }
  9484                           ;usb_device.c: 1734: }
  9485  003262  0012               	return	
  9486  003264                     l1689:
  9487                           
  9488                           ;usb_device.c: 1735: else
  9489                           ;usb_device.c: 1736: {
  9490                           ;usb_device.c: 1747: controlTransferState = 2;
  9491  003264  0E02               	movlw	2
  9492  003266  0100               	movlb	0	; () banked
  9493  003268  6FCC               	movwf	_controlTransferState& (0+255),b
  9494                           
  9495                           ; BSR set to: 0
  9496                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9497  00326A  EE20 F001          	lfsr	2,1
  9498  00326E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9499  003270  26D9               	addwf	fsr2l,f,c
  9500  003272  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9501  003274  22DA               	addwfc	fsr2h,f,c
  9502  003276  0E08               	movlw	8
  9503  003278  6EDF               	movwf	indf2,c
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9507  00327A  EE20 F002          	lfsr	2,2
  9508  00327E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9509  003280  26D9               	addwf	fsr2l,f,c
  9510  003282  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9511  003284  22DA               	addwfc	fsr2h,f,c
  9512  003286  0E30               	movlw	48
  9513  003288  6EDE               	movwf	postinc2,c
  9514  00328A  0E04               	movlw	4
  9515  00328C  6EDD               	movwf	postdec2,c
  9516                           
  9517                           ; BSR set to: 0
  9518                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9519  00328E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9520  003292  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9521  003296  0E04               	movlw	4
  9522  003298  6EDF               	movwf	indf2,c
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9526  00329A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9527  00329E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9528  0032A2  0E00               	movlw	0
  9529  0032A4  8EDB               	bsf	plusw2,7,c
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9533  0032A6  0E00               	movlw	0
  9534  0032A8  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9538  0032AA  0E00               	movlw	0
  9539  0032AC  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9543  0032AE  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9544  0032B0  A4D8               	btfss	status,2,c
  9545  0032B2  0012               	return	
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;usb_device.c: 1759: {
  9549                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9550  0032B4  ECFB  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9551  0032B8  0012               	return	
  9552  0032BA                     __end_of_USBCtrlEPServiceComplete:
  9553                           	opt stack 0
  9554                           tosu	equ	0xFFF
  9555                           tosh	equ	0xFFE
  9556                           tosl	equ	0xFFD
  9557                           pclath	equ	0xFFA
  9558                           tblptru	equ	0xFF8
  9559                           tblptrh	equ	0xFF7
  9560                           tblptrl	equ	0xFF6
  9561                           tablat	equ	0xFF5
  9562                           prodh	equ	0xFF4
  9563                           prodl	equ	0xFF3
  9564                           intcon	equ	0xFF2
  9565                           intcon2	equ	0xFF1
  9566                           intcon3	equ	0xFF0
  9567                           postinc0	equ	0xFEE
  9568                           plusw0	equ	0xFEB
  9569                           wreg	equ	0xFE8
  9570                           postinc1	equ	0xFE6
  9571                           postdec1	equ	0xFE5
  9572                           fsr1h	equ	0xFE2
  9573                           fsr1l	equ	0xFE1
  9574                           indf2	equ	0xFDF
  9575                           postinc2	equ	0xFDE
  9576                           postdec2	equ	0xFDD
  9577                           plusw2	equ	0xFDB
  9578                           fsr2h	equ	0xFDA
  9579                           fsr2l	equ	0xFD9
  9580                           status	equ	0xFD8
  9581                           
  9582 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9583 ;; Defined at:
  9584 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;		None
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;		None
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  1    wreg      void 
  9591 ;; Registers used:
  9592 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9602 ;;Total ram usage:        0 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:   12
  9605 ;; This function calls:
  9606 ;;		_USBCtrlTrfTxService
  9607 ;; This function is called by:
  9608 ;;		_USBCtrlEPServiceComplete
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           
  9612                           	psect	text38
  9613  004BAC                     __ptext38:
  9614                           	opt stack 0
  9615  004BAC                     _USBCtrlEPAllowDataStage:
  9616                           	opt stack 11
  9617                           
  9618                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9619                           
  9620                           ;incstack = 0
  9621  004BAC  0E00               	movlw	0
  9622  004BAE  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9623                           
  9624                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9625  004BB0  0E00               	movlw	0
  9626  004BB2  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9627                           
  9628                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9629  004BB4  0E02               	movlw	2
  9630  004BB6  0100               	movlb	0	; () banked
  9631  004BB8  19CC               	xorwf	_controlTransferState& (0+255),w,b
  9632  004BBA  A4D8               	btfss	status,2,c
  9633  004BBC  D01F               	goto	l1673
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;usb_device.c: 1512: {
  9637                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9638  004BBE  EE20 F001          	lfsr	2,1
  9639  004BC2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9640  004BC4  26D9               	addwf	fsr2l,f,c
  9641  004BC6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9642  004BC8  22DA               	addwfc	fsr2h,f,c
  9643  004BCA  0E08               	movlw	8
  9644  004BCC  6EDF               	movwf	indf2,c
  9645                           
  9646                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9647  004BCE  EE20 F002          	lfsr	2,2
  9648  004BD2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9649  004BD4  26D9               	addwf	fsr2l,f,c
  9650  004BD6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9651  004BD8  22DA               	addwfc	fsr2h,f,c
  9652  004BDA  0E38               	movlw	56
  9653  004BDC  6EDE               	movwf	postinc2,c
  9654  004BDE  0E04               	movlw	4
  9655  004BE0  6EDD               	movwf	postdec2,c
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9659  004BE2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9660  004BE6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9661  004BEA  0E48               	movlw	72
  9662  004BEC  6EDF               	movwf	indf2,c
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9666  004BEE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9667  004BF2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9668  004BF6  0E00               	movlw	0
  9669  004BF8  8EDB               	bsf	plusw2,7,c
  9670                           
  9671                           ;usb_device.c: 1518: }
  9672  004BFA  0012               	return	
  9673  004BFC                     l1673:
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;usb_device.c: 1519: else
  9677                           ;usb_device.c: 1520: {
  9678                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9679                           
  9680                           ; BSR set to: 0
  9681  004BFC  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9682  004BFE  0104               	movlb	4	; () banked
  9683  004C00  5D36               	subwf	54,w,b	;volatile
  9684  004C02  0100               	movlb	0	; () banked
  9685  004C04  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9686  004C06  0104               	movlb	4	; () banked
  9687  004C08  5937               	subwfb	55,w,b	;volatile
  9688  004C0A  B0D8               	btfsc	status,0,c
  9689  004C0C  D004               	goto	l1675
  9690                           
  9691                           ; BSR set to: 4
  9692                           ;usb_device.c: 1524: {
  9693                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9694  004C0E  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9695  004C12  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9696  004C16                     l1675:
  9697                           
  9698                           ; BSR set to: 4
  9699                           ;usb_device.c: 1526: }
  9700                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9701                           
  9702                           ; BSR set to: 4
  9703  004C16  EC17  F01C         	call	_USBCtrlTrfTxService	;wreg free
  9704                           
  9705                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9706  004C1A  0100               	movlb	0	; () banked
  9707  004C1C  EE20 F002          	lfsr	2,2
  9708  004C20  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9709  004C22  26D9               	addwf	fsr2l,f,c
  9710  004C24  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9711  004C26  22DA               	addwfc	fsr2h,f,c
  9712  004C28  0E38               	movlw	56
  9713  004C2A  6EDE               	movwf	postinc2,c
  9714  004C2C  0E04               	movlw	4
  9715  004C2E  6EDD               	movwf	postdec2,c
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9719  004C30  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9720  004C34  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9721  004C38  0E48               	movlw	72
  9722  004C3A  6EDF               	movwf	indf2,c
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9726  004C3C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9727  004C40  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9728  004C44  0E00               	movlw	0
  9729  004C46  8EDB               	bsf	plusw2,7,c
  9730  004C48  0012               	return	
  9731  004C4A                     __end_of_USBCtrlEPAllowDataStage:
  9732                           	opt stack 0
  9733                           tosu	equ	0xFFF
  9734                           tosh	equ	0xFFE
  9735                           tosl	equ	0xFFD
  9736                           pclath	equ	0xFFA
  9737                           tblptru	equ	0xFF8
  9738                           tblptrh	equ	0xFF7
  9739                           tblptrl	equ	0xFF6
  9740                           tablat	equ	0xFF5
  9741                           prodh	equ	0xFF4
  9742                           prodl	equ	0xFF3
  9743                           intcon	equ	0xFF2
  9744                           intcon2	equ	0xFF1
  9745                           intcon3	equ	0xFF0
  9746                           postinc0	equ	0xFEE
  9747                           plusw0	equ	0xFEB
  9748                           wreg	equ	0xFE8
  9749                           postinc1	equ	0xFE6
  9750                           postdec1	equ	0xFE5
  9751                           fsr1h	equ	0xFE2
  9752                           fsr1l	equ	0xFE1
  9753                           indf2	equ	0xFDF
  9754                           postinc2	equ	0xFDE
  9755                           postdec2	equ	0xFDD
  9756                           plusw2	equ	0xFDB
  9757                           fsr2h	equ	0xFDA
  9758                           fsr2l	equ	0xFD9
  9759                           status	equ	0xFD8
  9760                           
  9761 ;; *************** function _USBCheckStdRequest *****************
  9762 ;; Defined at:
  9763 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;		None
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;		None
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      void 
  9770 ;; Registers used:
  9771 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9781 ;;Total ram usage:        0 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; Hardware stack levels required when called:   16
  9784 ;; This function calls:
  9785 ;;		_USBStdFeatureReqHandler
  9786 ;;		_USBStdGetDscHandler
  9787 ;;		_USBStdGetStatusHandler
  9788 ;;		_USBStdSetCfgHandler
  9789 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9790 ;; This function is called by:
  9791 ;;		_USBCtrlTrfSetupHandler
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           
  9795                           	psect	text39
  9796  00374A                     __ptext39:
  9797                           	opt stack 0
  9798  00374A                     _USBCheckStdRequest:
  9799                           	opt stack 8
  9800                           
  9801                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;incstack = 0
  9805  00374A  0104               	movlb	4	; () banked
  9806  00374C  3930               	swapf	48,w,b	;volatile
  9807  00374E  32E8               	rrcf	wreg,f,c
  9808  003750  0B03               	andlw	3
  9809  003752  0900               	iorlw	0
  9810  003754  A4D8               	btfss	status,2,c
  9811  003756  0012               	return	
  9812  003758  D048               	goto	l1808
  9813  00375A                     l1809:
  9814                           
  9815                           ; BSR set to: 4
  9816                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9817  00375A  0100               	movlb	0	; () banked
  9818  00375C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9822  00375E  0E08               	movlw	8
  9823  003760  6FCE               	movwf	_USBDeviceState& (0+255),b
  9824                           
  9825                           ;usb_device.c: 2713: break;
  9826  003762  0012               	return	
  9827  003764                     
  9828                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9829                           
  9830                           ; BSR set to: 0
  9831  003764  EC9A  F016         	call	_USBStdGetDscHandler	;wreg free
  9832                           
  9833                           ;usb_device.c: 2716: break;
  9834  003768  0012               	return	
  9835  00376A                     
  9836                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9837  00376A  ECBF  F01A         	call	_USBStdSetCfgHandler	;wreg free
  9838                           
  9839                           ;usb_device.c: 2719: break;
  9840  00376E  0012               	return	
  9841  003770                     
  9842                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9843  003770  0ED6               	movlw	low _USBActiveConfiguration
  9844  003772  0100               	movlb	0	; () banked
  9845  003774  6FB0               	movwf	_inPipes& (0+255),b
  9846  003776  0E00               	movlw	high _USBActiveConfiguration
  9847  003778  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9848                           
  9849                           ; BSR set to: 0
  9850                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9851  00377A  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9855  00377C  0E01               	movlw	1
  9856  00377E  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9860  003780  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9861                           
  9862                           ;usb_device.c: 2725: break;
  9863  003782  0012               	return	
  9864  003784                     
  9865                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9866                           
  9867                           ; BSR set to: 0
  9868  003784  EC31  F023         	call	_USBStdGetStatusHandler	;wreg free
  9869                           
  9870                           ;usb_device.c: 2728: break;
  9871  003788  0012               	return	
  9872  00378A                     
  9873                           ;usb_device.c: 2730: case 3:
  9874                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9875  00378A  ECB0  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9876                           
  9877                           ;usb_device.c: 2732: break;
  9878  00378E  0012               	return	
  9879  003790                     
  9880                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9881  003790  0104               	movlb	4	; () banked
  9882  003792  5134               	movf	52,w,b	;volatile
  9883  003794  0D01               	mullw	1
  9884  003796  0EEF               	movlw	low _USBAlternateInterface
  9885  003798  24F3               	addwf	prodl,w,c
  9886  00379A  0100               	movlb	0	; () banked
  9887  00379C  6FB0               	movwf	_inPipes& (0+255),b
  9888  00379E  0E02               	movlw	high _USBAlternateInterface
  9889  0037A0  20F4               	addwfc	prodh,w,c
  9890  0037A2  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9894  0037A4  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9898  0037A6  0E01               	movlw	1
  9899  0037A8  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9900                           
  9901                           ; BSR set to: 0
  9902                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9903  0037AA  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9904                           
  9905                           ;usb_device.c: 2738: break;
  9906  0037AC  0012               	return	
  9907  0037AE                     l1818:
  9908                           
  9909                           ; BSR set to: 4
  9910                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9911  0037AE  0100               	movlb	0	; () banked
  9912  0037B0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9913                           
  9914                           ; BSR set to: 0
  9915                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9916  0037B2  0104               	movlb	4	; () banked
  9917  0037B4  5134               	movf	52,w,b	;volatile
  9918  0037B6  0D01               	mullw	1
  9919  0037B8  0EEF               	movlw	low _USBAlternateInterface
  9920  0037BA  24F3               	addwf	prodl,w,c
  9921  0037BC  6ED9               	movwf	fsr2l,c
  9922  0037BE  0E02               	movlw	high _USBAlternateInterface
  9923  0037C0  20F4               	addwfc	prodh,w,c
  9924  0037C2  6EDA               	movwf	fsr2h,c
  9925  0037C4  C432 FFDF          	movff	1074,indf2	;volatile
  9926                           
  9927                           ;usb_device.c: 2742: break;
  9928  0037C8  0012               	return	
  9929  0037CA                     
  9930                           ; BSR set to: 4
  9931                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9932                           
  9933                           ; BSR set to: 4
  9934  0037CA  0E00               	movlw	0
  9935  0037CC  0100               	movlb	0	; () banked
  9936  0037CE  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9937  0037D0  0E02               	movlw	2
  9938  0037D2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9939  0037D4  0E00               	movlw	0
  9940  0037D6  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9941  0037D8  0E00               	movlw	0
  9942  0037DA  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9943  0037DC  0E00               	movlw	0
  9944  0037DE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9945  0037E0  0E00               	movlw	0
  9946  0037E2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9947  0037E4  ECED  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9948                           
  9949                           ;usb_device.c: 2749: }
  9950                           
  9951                           ;usb_device.c: 2748: break;
  9952                           
  9953                           ;usb_device.c: 2747: default:
  9954                           
  9955                           ;usb_device.c: 2746: case 12:
  9956                           
  9957                           ;usb_device.c: 2745: break;
  9958  0037E8  0012               	return	
  9959  0037EA                     l1808:
  9960  0037EA  0104               	movlb	4	; () banked
  9961  0037EC  5131               	movf	49,w,b	;volatile
  9962                           
  9963                           ; Switch size 1, requested type "space"
  9964                           ; Number of cases is 11, Range of values is 0 to 12
  9965                           ; switch strategies available:
  9966                           ; Name         Instructions Cycles
  9967                           ; simple_byte           34    18 (average)
  9968                           ;	Chosen strategy is simple_byte
  9969  0037EE  0A00               	xorlw	0	; case 0
  9970  0037F0  B4D8               	btfsc	status,2,c
  9971  0037F2  D7C8               	goto	l1814
  9972  0037F4  0A01               	xorlw	1	; case 1
  9973  0037F6  B4D8               	btfsc	status,2,c
  9974  0037F8  D7C8               	goto	l1815
  9975  0037FA  0A02               	xorlw	2	; case 3
  9976  0037FC  B4D8               	btfsc	status,2,c
  9977  0037FE  D7C5               	goto	l1815
  9978  003800  0A06               	xorlw	6	; case 5
  9979  003802  B4D8               	btfsc	status,2,c
  9980  003804  D7AA               	goto	l1809
  9981  003806  0A03               	xorlw	3	; case 6
  9982  003808  B4D8               	btfsc	status,2,c
  9983  00380A  D7AC               	goto	l1811
  9984  00380C  0A01               	xorlw	1	; case 7
  9985  00380E  B4D8               	btfsc	status,2,c
  9986  003810  D7DC               	goto	l1819
  9987  003812  0A0F               	xorlw	15	; case 8
  9988  003814  B4D8               	btfsc	status,2,c
  9989  003816  D7AC               	goto	l1813
  9990  003818  0A01               	xorlw	1	; case 9
  9991  00381A  B4D8               	btfsc	status,2,c
  9992  00381C  D7A6               	goto	l1812
  9993  00381E  0A03               	xorlw	3	; case 10
  9994  003820  B4D8               	btfsc	status,2,c
  9995  003822  D7B6               	goto	l1817
  9996  003824  0A01               	xorlw	1	; case 11
  9997  003826  B4D8               	btfsc	status,2,c
  9998  003828  D7C2               	goto	l1818
  9999  00382A  0A07               	xorlw	7	; case 12
 10000  00382C  0012               	return	
 10001  00382E                     __end_of_USBCheckStdRequest:
 10002                           	opt stack 0
 10003                           tosu	equ	0xFFF
 10004                           tosh	equ	0xFFE
 10005                           tosl	equ	0xFFD
 10006                           pclath	equ	0xFFA
 10007                           tblptru	equ	0xFF8
 10008                           tblptrh	equ	0xFF7
 10009                           tblptrl	equ	0xFF6
 10010                           tablat	equ	0xFF5
 10011                           prodh	equ	0xFF4
 10012                           prodl	equ	0xFF3
 10013                           intcon	equ	0xFF2
 10014                           intcon2	equ	0xFF1
 10015                           intcon3	equ	0xFF0
 10016                           postinc0	equ	0xFEE
 10017                           plusw0	equ	0xFEB
 10018                           wreg	equ	0xFE8
 10019                           postinc1	equ	0xFE6
 10020                           postdec1	equ	0xFE5
 10021                           fsr1h	equ	0xFE2
 10022                           fsr1l	equ	0xFE1
 10023                           indf2	equ	0xFDF
 10024                           postinc2	equ	0xFDE
 10025                           postdec2	equ	0xFDD
 10026                           plusw2	equ	0xFDB
 10027                           fsr2h	equ	0xFDA
 10028                           fsr2l	equ	0xFD9
 10029                           status	equ	0xFD8
 10030                           
 10031 ;; *************** function _USBStdSetCfgHandler *****************
 10032 ;; Defined at:
 10033 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;		None
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;  i               1   49[BANK0 ] unsigned char 
 10038 ;; Return value:  Size  Location     Type
 10039 ;;                  1    wreg      void 
 10040 ;; Registers used:
 10041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10042 ;; Tracked objects:
 10043 ;;		On entry : 0/0
 10044 ;;		On exit  : 0/0
 10045 ;;		Unchanged: 0/0
 10046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10048 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10050 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10051 ;;Total ram usage:        1 bytes
 10052 ;; Hardware stack levels used:    1
 10053 ;; Hardware stack levels required when called:   15
 10054 ;; This function calls:
 10055 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10056 ;;		_memset
 10057 ;; This function is called by:
 10058 ;;		_USBCheckStdRequest
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           	psect	text40
 10063  00357E                     __ptext40:
 10064                           	opt stack 0
 10065  00357E                     _USBStdSetCfgHandler:
 10066                           	opt stack 8
 10067                           
 10068                           ;usb_device.c: 1988: uint8_t i;
 10069                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
 10070                           
 10071                           ;incstack = 0
 10072  00357E  0100               	movlb	0	; () banked
 10073  003580  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10074                           
 10075                           ; BSR set to: 0
 10076                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
 10077  003582  0E27               	movlw	39
 10078  003584  6F7D               	movwf	memset@p1& (0+255),b
 10079  003586  0E0F               	movlw	15
 10080  003588  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10081  00358A  0E00               	movlw	0
 10082  00358C  6F80               	movwf	(memset@c+1)& (0+255),b
 10083  00358E  0E00               	movlw	0
 10084  003590  6F7F               	movwf	memset@c& (0+255),b
 10085  003592  0E00               	movlw	0
 10086  003594  6F82               	movwf	(memset@n+1)& (0+255),b
 10087  003596  0E02               	movlw	2
 10088  003598  6F81               	movwf	memset@n& (0+255),b
 10089  00359A  ECD5  F033         	call	_memset	;wreg free
 10090                           
 10091                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10092  00359E  0E00               	movlw	0
 10093  0035A0  0100               	movlb	0	; () banked
 10094  0035A2  6F7D               	movwf	memset@p1& (0+255),b
 10095  0035A4  0E04               	movlw	4
 10096  0035A6  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10097  0035A8  0E00               	movlw	0
 10098  0035AA  6F80               	movwf	(memset@c+1)& (0+255),b
 10099  0035AC  0E00               	movlw	0
 10100  0035AE  6F7F               	movwf	memset@c& (0+255),b
 10101  0035B0  0E00               	movlw	0
 10102  0035B2  6F82               	movwf	(memset@n+1)& (0+255),b
 10103  0035B4  0E30               	movlw	48
 10104  0035B6  6F81               	movwf	memset@n& (0+255),b
 10105  0035B8  ECD5  F033         	call	_memset	;wreg free
 10106                           
 10107                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10108  0035BC  8C65               	bsf	3941,6,c	;volatile
 10109                           
 10110                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10111  0035BE  0E00               	movlw	0
 10112  0035C0  0100               	movlb	0	; () banked
 10113  0035C2  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10114  0035C4                     l13467:
 10115                           
 10116                           ; BSR set to: 0
 10117  0035C4  0E02               	movlw	2
 10118  0035C6  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10119  0035C8  D001               	goto	l1725
 10120  0035CA  D016               	goto	u12040
 10121  0035CC                     l1725:
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;usb_device.c: 2006: {
 10125                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10126                           
 10127                           ; BSR set to: 0
 10128  0035CC  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10129  0035CE  0D01               	mullw	1
 10130  0035D0  0ED2               	movlw	low _ep_data_in
 10131  0035D2  24F3               	addwf	prodl,w,c
 10132  0035D4  6ED9               	movwf	fsr2l,c
 10133  0035D6  0E02               	movlw	high _ep_data_in
 10134  0035D8  20F4               	addwfc	prodh,w,c
 10135  0035DA  6EDA               	movwf	fsr2h,c
 10136  0035DC  0E00               	movlw	0
 10137  0035DE  6EDF               	movwf	indf2,c
 10138                           
 10139                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10140  0035E0  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10141  0035E2  0D01               	mullw	1
 10142  0035E4  0ECF               	movlw	low _ep_data_out
 10143  0035E6  24F3               	addwf	prodl,w,c
 10144  0035E8  6ED9               	movwf	fsr2l,c
 10145  0035EA  0E02               	movlw	high _ep_data_out
 10146  0035EC  20F4               	addwfc	prodh,w,c
 10147  0035EE  6EDA               	movwf	fsr2h,c
 10148  0035F0  0E00               	movlw	0
 10149  0035F2  6EDF               	movwf	indf2,c
 10150                           
 10151                           ; BSR set to: 0
 10152  0035F4  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10153  0035F6  D7E6               	goto	l13467
 10154  0035F8                     u12040:
 10155                           
 10156                           ; BSR set to: 0
 10157                           ;usb_device.c: 2009: }
 10158                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10159                           
 10160                           ; BSR set to: 0
 10161  0035F8  0EEF               	movlw	low _USBAlternateInterface
 10162  0035FA  6F7D               	movwf	memset@p1& (0+255),b
 10163  0035FC  0E02               	movlw	high _USBAlternateInterface
 10164  0035FE  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10165  003600  0E00               	movlw	0
 10166  003602  6F80               	movwf	(memset@c+1)& (0+255),b
 10167  003604  0E00               	movlw	0
 10168  003606  6F7F               	movwf	memset@c& (0+255),b
 10169  003608  0E00               	movlw	0
 10170  00360A  6F82               	movwf	(memset@n+1)& (0+255),b
 10171  00360C  0E02               	movlw	2
 10172  00360E  6F81               	movwf	memset@n& (0+255),b
 10173  003610  ECD5  F033         	call	_memset	;wreg free
 10174                           
 10175                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10176  003614  9C65               	bcf	3941,6,c	;volatile
 10177                           
 10178                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10179  003616  0E08               	movlw	8
 10180  003618  0100               	movlb	0	; () banked
 10181  00361A  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10182  00361C  0E04               	movlw	4
 10183  00361E  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10184                           
 10185                           ; BSR set to: 0
 10186                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10187  003620  0E00               	movlw	0
 10188  003622  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10189  003624  0E04               	movlw	4
 10190  003626  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10191                           
 10192                           ; BSR set to: 0
 10193                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10194  003628  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10195  00362C  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10196                           
 10197                           ; BSR set to: 0
 10198                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10199  003630  C432 F0D6          	movff	1074,_USBActiveConfiguration	;volatile
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10203  003634  51D6               	movf	_USBActiveConfiguration& (0+255),w,b
 10204  003636  A4D8               	btfss	status,2,c
 10205  003638  D003               	goto	l1727
 10206                           
 10207                           ; BSR set to: 0
 10208                           ;usb_device.c: 2028: {
 10209                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10210  00363A  0E10               	movlw	16
 10211  00363C  6FCE               	movwf	_USBDeviceState& (0+255),b
 10212                           
 10213                           ;usb_device.c: 2031: }
 10214  00363E  0012               	return	
 10215  003640                     l1727:
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;usb_device.c: 2032: else
 10219                           ;usb_device.c: 2033: {
 10220                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10221                           
 10222                           ; BSR set to: 0
 10223  003640  0E00               	movlw	0
 10224  003642  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10225  003644  0E01               	movlw	1
 10226  003646  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10227  003648  0ED6               	movlw	low _USBActiveConfiguration
 10228  00364A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10229  00364C  0E00               	movlw	high _USBActiveConfiguration
 10230  00364E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10231  003650  0E00               	movlw	0
 10232  003652  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10233  003654  0E01               	movlw	1
 10234  003656  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10235  003658  ECED  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10236                           
 10237                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10238  00365C  0E20               	movlw	32
 10239  00365E  0100               	movlb	0	; () banked
 10240  003660  6FCE               	movwf	_USBDeviceState& (0+255),b
 10241  003662  0012               	return	
 10242  003664                     __end_of_USBStdSetCfgHandler:
 10243                           	opt stack 0
 10244                           tosu	equ	0xFFF
 10245                           tosh	equ	0xFFE
 10246                           tosl	equ	0xFFD
 10247                           pclath	equ	0xFFA
 10248                           tblptru	equ	0xFF8
 10249                           tblptrh	equ	0xFF7
 10250                           tblptrl	equ	0xFF6
 10251                           tablat	equ	0xFF5
 10252                           prodh	equ	0xFF4
 10253                           prodl	equ	0xFF3
 10254                           intcon	equ	0xFF2
 10255                           intcon2	equ	0xFF1
 10256                           intcon3	equ	0xFF0
 10257                           postinc0	equ	0xFEE
 10258                           plusw0	equ	0xFEB
 10259                           wreg	equ	0xFE8
 10260                           postinc1	equ	0xFE6
 10261                           postdec1	equ	0xFE5
 10262                           fsr1h	equ	0xFE2
 10263                           fsr1l	equ	0xFE1
 10264                           indf2	equ	0xFDF
 10265                           postinc2	equ	0xFDE
 10266                           postdec2	equ	0xFDD
 10267                           plusw2	equ	0xFDB
 10268                           fsr2h	equ	0xFDA
 10269                           fsr2l	equ	0xFD9
 10270                           status	equ	0xFD8
 10271                           
 10272 ;; *************** function _USBStdGetStatusHandler *****************
 10273 ;; Defined at:
 10274 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10275 ;; Parameters:    Size  Location     Type
 10276 ;;		None
 10277 ;; Auto vars:     Size  Location     Type
 10278 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10279 ;;		 -> NULL(0), BDT(48), 
 10280 ;; Return value:  Size  Location     Type
 10281 ;;                  1    wreg      void 
 10282 ;; Registers used:
 10283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10284 ;; Tracked objects:
 10285 ;;		On entry : 0/0
 10286 ;;		On exit  : 0/0
 10287 ;;		Unchanged: 0/0
 10288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10290 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10291 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10292 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10293 ;;Total ram usage:        3 bytes
 10294 ;; Hardware stack levels used:    1
 10295 ;; Hardware stack levels required when called:   11
 10296 ;; This function calls:
 10297 ;;		Nothing
 10298 ;; This function is called by:
 10299 ;;		_USBCheckStdRequest
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           
 10303                           	psect	text41
 10304  004662                     __ptext41:
 10305                           	opt stack 0
 10306  004662                     _USBStdGetStatusHandler:
 10307                           	opt stack 12
 10308                           
 10309                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;incstack = 0
 10313  004662  0E00               	movlw	0
 10314  004664  0104               	movlb	4	; () banked
 10315  004666  6F38               	movwf	56,b	;volatile
 10316                           
 10317                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10318  004668  0E00               	movlw	0
 10319  00466A  6F39               	movwf	57,b	;volatile
 10320                           
 10321                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10322  00466C  D03D               	goto	l1746
 10323  00466E                     l1747:
 10324                           
 10325                           ; BSR set to: 4
 10326                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10327  00466E  0100               	movlb	0	; () banked
 10328  004670  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10329                           
 10330                           ;usb_device.c: 2163: }
 10331                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10332                           
 10333                           ; BSR set to: 4
 10334                           
 10335                           ; BSR set to: 0
 10336                           ;usb_device.c: 2161: {
 10337                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10338                           
 10339                           ;usb_device.c: 2160: if(0 == 1)
 10340  004672  0101               	movlb	1	; () banked
 10341  004674  05E0               	decf	_RemoteWakeup& (0+255),w,b
 10342  004676  A4D8               	btfss	status,2,c
 10343  004678  D042               	goto	l1750
 10344                           
 10345                           ; BSR set to: 1
 10346                           ;usb_device.c: 2166: {
 10347                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10348  00467A  0104               	movlb	4	; () banked
 10349  00467C  8338               	bsf	56,1,b	;volatile
 10350                           
 10351                           ; BSR set to: 4
 10352                           ;usb_device.c: 2168: }
 10353                           ;usb_device.c: 2169: break;
 10354  00467E  D03F               	goto	l1750
 10355  004680                     l1751:
 10356                           
 10357                           ; BSR set to: 4
 10358                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10359  004680  0100               	movlb	0	; () banked
 10360  004682  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10361                           
 10362                           ;usb_device.c: 2172: break;
 10363  004684  D03C               	goto	l1750
 10364  004686                     l1752:
 10365                           
 10366                           ; BSR set to: 4
 10367                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10368  004686  0100               	movlb	0	; () banked
 10369  004688  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10370                           
 10371                           ;usb_device.c: 2178: {
 10372                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10373                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10374  00468A  0104               	movlb	4	; () banked
 10375  00468C  BF34               	btfsc	52,7,b	;volatile
 10376  00468E  D00B               	goto	l1753
 10377                           
 10378                           ; BSR set to: 4
 10379                           ;usb_device.c: 2182: {
 10380                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10381  004690  5134               	movf	52,w,b	;volatile
 10382  004692  0B0F               	andlw	15
 10383  004694  0100               	movlb	0	; () banked
 10384  004696  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10385  004698  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10386  00469A  0D02               	mullw	2
 10387  00469C  0E06               	movlw	low _pBDTEntryOut
 10388  00469E  24F3               	addwf	prodl,w,c
 10389  0046A0  6ED9               	movwf	fsr2l,c
 10390  0046A2  0E03               	movlw	high _pBDTEntryOut
 10391  0046A4  D00B               	goto	L4
 10392  0046A6                     l1753:
 10393                           
 10394                           ;usb_device.c: 2185: else
 10395                           ;usb_device.c: 2186: {
 10396                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10397                           
 10398                           ; BSR set to: 0
 10399  0046A6  0104               	movlb	4	; () banked
 10400  0046A8  5134               	movf	52,w,b	;volatile
 10401  0046AA  0B0F               	andlw	15
 10402  0046AC  0100               	movlb	0	; () banked
 10403  0046AE  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10404  0046B0  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10405  0046B2  0D02               	mullw	2
 10406  0046B4  0EB6               	movlw	low _pBDTEntryIn
 10407  0046B6  24F3               	addwf	prodl,w,c
 10408  0046B8  6ED9               	movwf	fsr2l,c
 10409  0046BA  0E00               	movlw	high _pBDTEntryIn
 10410  0046BC                     L4:
 10411  0046BC  20F4               	addwfc	prodh,w,c
 10412  0046BE  6EDA               	movwf	fsr2h,c
 10413  0046C0  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10414  0046C4  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;usb_device.c: 2188: }
 10418                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10419                           
 10420                           ; BSR set to: 0
 10421  0046C8  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10422  0046CC  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10423  0046D0  AEDF               	btfss	indf2,7,c
 10424  0046D2  D015               	goto	l1750
 10425                           
 10426                           ; BSR set to: 0
 10427  0046D4  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10428  0046D8  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10429  0046DC  A4DF               	btfss	indf2,2,c
 10430  0046DE  D00F               	goto	l1750
 10431                           
 10432                           ; BSR set to: 0
 10433                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10434  0046E0  0E01               	movlw	1
 10435  0046E2  0104               	movlb	4	; () banked
 10436  0046E4  6F38               	movwf	56,b	;volatile
 10437                           
 10438                           ; BSR set to: 4
 10439                           ;usb_device.c: 2193: }
 10440                           ;usb_device.c: 2194: }
 10441                           
 10442                           ; BSR set to: 4
 10443                           ;usb_device.c: 2192: break;
 10444  0046E6  D00B               	goto	l1750
 10445  0046E8                     l1746:
 10446                           
 10447                           ; BSR set to: 4
 10448                           
 10449                           ; BSR set to: 4
 10450  0046E8  5130               	movf	48,w,b	;volatile
 10451  0046EA  0B1F               	andlw	31
 10452                           
 10453                           ; Switch size 1, requested type "space"
 10454                           ; Number of cases is 3, Range of values is 0 to 2
 10455                           ; switch strategies available:
 10456                           ; Name         Instructions Cycles
 10457                           ; simple_byte           10     6 (average)
 10458                           ;	Chosen strategy is simple_byte
 10459  0046EC  0A00               	xorlw	0	; case 0
 10460  0046EE  B4D8               	btfsc	status,2,c
 10461  0046F0  D7BE               	goto	l1747
 10462  0046F2  0A01               	xorlw	1	; case 1
 10463  0046F4  B4D8               	btfsc	status,2,c
 10464  0046F6  D7C4               	goto	l1751
 10465  0046F8  0A03               	xorlw	3	; case 2
 10466  0046FA  B4D8               	btfsc	status,2,c
 10467  0046FC  D7C4               	goto	l1752
 10468  0046FE                     l1750:
 10469                           
 10470                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10471  0046FE  0100               	movlb	0	; () banked
 10472  004700  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10473  004702  0012               	return	
 10474                           
 10475                           ; BSR set to: 0
 10476                           ;usb_device.c: 2197: {
 10477                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10478  004704  0E38               	movlw	56
 10479  004706  6FB0               	movwf	_inPipes& (0+255),b
 10480  004708  0E04               	movlw	4
 10481  00470A  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10482                           
 10483                           ; BSR set to: 0
 10484                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10485  00470C  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10486                           
 10487                           ; BSR set to: 0
 10488                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10489  00470E  0E02               	movlw	2
 10490  004710  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10491  004712  0012               	return	
 10492  004714                     __end_of_USBStdGetStatusHandler:
 10493                           	opt stack 0
 10494                           tosu	equ	0xFFF
 10495                           tosh	equ	0xFFE
 10496                           tosl	equ	0xFFD
 10497                           pclath	equ	0xFFA
 10498                           tblptru	equ	0xFF8
 10499                           tblptrh	equ	0xFF7
 10500                           tblptrl	equ	0xFF6
 10501                           tablat	equ	0xFF5
 10502                           prodh	equ	0xFF4
 10503                           prodl	equ	0xFF3
 10504                           intcon	equ	0xFF2
 10505                           intcon2	equ	0xFF1
 10506                           intcon3	equ	0xFF0
 10507                           postinc0	equ	0xFEE
 10508                           plusw0	equ	0xFEB
 10509                           wreg	equ	0xFE8
 10510                           postinc1	equ	0xFE6
 10511                           postdec1	equ	0xFE5
 10512                           fsr1h	equ	0xFE2
 10513                           fsr1l	equ	0xFE1
 10514                           indf2	equ	0xFDF
 10515                           postinc2	equ	0xFDE
 10516                           postdec2	equ	0xFDD
 10517                           plusw2	equ	0xFDB
 10518                           fsr2h	equ	0xFDA
 10519                           fsr2l	equ	0xFD9
 10520                           status	equ	0xFD8
 10521                           
 10522 ;; *************** function _USBStdGetDscHandler *****************
 10523 ;; Defined at:
 10524 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10525 ;; Parameters:    Size  Location     Type
 10526 ;;		None
 10527 ;; Auto vars:     Size  Location     Type
 10528 ;;		None
 10529 ;; Return value:  Size  Location     Type
 10530 ;;                  1    wreg      void 
 10531 ;; Registers used:
 10532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10533 ;; Tracked objects:
 10534 ;;		On entry : 0/0
 10535 ;;		On exit  : 0/0
 10536 ;;		Unchanged: 0/0
 10537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10540 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10541 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10542 ;;Total ram usage:        2 bytes
 10543 ;; Hardware stack levels used:    1
 10544 ;; Hardware stack levels required when called:   11
 10545 ;; This function calls:
 10546 ;;		Nothing
 10547 ;; This function is called by:
 10548 ;;		_USBCheckStdRequest
 10549 ;; This function uses a non-reentrant model
 10550 ;;
 10551                           
 10552                           	psect	text42
 10553  002D34                     __ptext42:
 10554                           	opt stack 0
 10555  002D34                     _USBStdGetDscHandler:
 10556                           	opt stack 12
 10557                           
 10558                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10559                           
 10560                           ; BSR set to: 0
 10561                           ;incstack = 0
 10562  002D34  0E80               	movlw	128
 10563  002D36  0104               	movlb	4	; () banked
 10564  002D38  1930               	xorwf	48,w,b	;volatile
 10565  002D3A  A4D8               	btfss	status,2,c
 10566  002D3C  0012               	return	
 10567                           
 10568                           ; BSR set to: 4
 10569                           ;usb_device.c: 2064: {
 10570                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10571  002D3E  0EC0               	movlw	192
 10572  002D40  0100               	movlb	0	; () banked
 10573  002D42  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10574                           
 10575                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10576  002D44  D082               	goto	l1733
 10577  002D46                     
 10578                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10579                           
 10580                           ; BSR set to: 0
 10581  002D46  0E48               	movlw	low _device_dsc
 10582  002D48  0100               	movlb	0	; () banked
 10583  002D4A  6FB0               	movwf	_inPipes& (0+255),b
 10584  002D4C  0EFE               	movlw	high _device_dsc
 10585  002D4E  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10586                           
 10587                           ; BSR set to: 0
 10588                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10589  002D50  0E00               	movlw	0
 10590  002D52  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10591  002D54  0E12               	movlw	18
 10592  002D56  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10593                           
 10594                           ;usb_device.c: 2076: break;
 10595  002D58  0012               	return	
 10596  002D5A                     
 10597                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10598                           
 10599                           ; BSR set to: 0
 10600  002D5A  0104               	movlb	4	; () banked
 10601  002D5C  5132               	movf	50,w,b	;volatile
 10602  002D5E  A4D8               	btfss	status,2,c
 10603  002D60  D040               	goto	l1737
 10604                           
 10605                           ; BSR set to: 4
 10606                           ;usb_device.c: 2082: {
 10607                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10608  002D62  5132               	movf	50,w,b	;volatile
 10609  002D64  0D02               	mullw	2
 10610  002D66  0E2D               	movlw	low _USB_CD_Ptr
 10611  002D68  24F3               	addwf	prodl,w,c
 10612  002D6A  6EF6               	movwf	tblptrl,c
 10613  002D6C  0EFC               	movlw	high _USB_CD_Ptr
 10614  002D6E  20F4               	addwfc	prodh,w,c
 10615  002D70  6EF7               	movwf	tblptrh,c
 10616  002D72                     	if	0	;There are less than 3 active tblptr bytes
 10617  002D72                     	endif
 10618  002D72  0009               	tblrd		*+
 10619  002D74  CFF5 F0B0          	movff	tablat,_inPipes
 10620  002D78  000A               	tblrd		*-
 10621  002D7A  CFF5 F0B1          	movff	tablat,_inPipes+1
 10622                           
 10623                           ; BSR set to: 4
 10624                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10625  002D7E  0E02               	movlw	2
 10626  002D80  0100               	movlb	0	; () banked
 10627  002D82  25B0               	addwf	_inPipes& (0+255),w,b
 10628  002D84  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10629  002D86  0E00               	movlw	0
 10630  002D88  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10631  002D8A  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10632  002D8C  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10633  002D90  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10634  002D94  6AF8               	clrf	tblptru,c
 10635  002D96  0E0E               	movlw	(high __ramtop+-1)
 10636  002D98  64F7               	cpfsgt	tblptrh,c
 10637  002D9A  D003               	bra	u12087
 10638  002D9C  0008               	tblrd		*
 10639  002D9E  50F5               	movf	tablat,w,c
 10640  002DA0  D005               	bra	u12080
 10641  002DA2                     u12087:
 10642  002DA2  CFF6 FFE9          	movff	tblptrl,fsr0l
 10643  002DA6  CFF7 FFEA          	movff	tblptrh,fsr0h
 10644  002DAA  50EF               	movf	indf0,w,c
 10645  002DAC                     u12080:
 10646  002DAC  0100               	movlb	0	; () banked
 10647  002DAE  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10648                           
 10649                           ; BSR set to: 0
 10650                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10651  002DB0  0E03               	movlw	3
 10652  002DB2  25B0               	addwf	_inPipes& (0+255),w,b
 10653  002DB4  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10654  002DB6  0E00               	movlw	0
 10655  002DB8  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10656  002DBA  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10657  002DBC  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10658  002DC0  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10659  002DC4  6AF8               	clrf	tblptru,c
 10660  002DC6  0E0E               	movlw	(high __ramtop+-1)
 10661  002DC8  64F7               	cpfsgt	tblptrh,c
 10662  002DCA  D003               	bra	u12097
 10663  002DCC  0008               	tblrd		*
 10664  002DCE  50F5               	movf	tablat,w,c
 10665  002DD0  D005               	bra	u12090
 10666  002DD2                     u12097:
 10667  002DD2  CFF6 FFE9          	movff	tblptrl,fsr0l
 10668  002DD6  CFF7 FFEA          	movff	tblptrh,fsr0h
 10669  002DDA  50EF               	movf	indf0,w,c
 10670  002DDC                     u12090:
 10671  002DDC  0100               	movlb	0	; () banked
 10672  002DDE  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10673                           
 10674                           ;usb_device.c: 2094: }
 10675  002DE0  0012               	return	
 10676  002DE2                     l1737:
 10677                           
 10678                           ;usb_device.c: 2095: else
 10679                           ;usb_device.c: 2096: {
 10680                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10681                           
 10682                           ; BSR set to: 0
 10683  002DE2  0E00               	movlw	0
 10684  002DE4  0100               	movlb	0	; () banked
 10685  002DE6  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10686                           
 10687                           ; BSR set to: 0
 10688                           ;usb_device.c: 2098: }
 10689                           ;usb_device.c: 2099: break;
 10690  002DE8  0012               	return	
 10691  002DEA                     
 10692                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10693                           
 10694                           ; BSR set to: 0
 10695  002DEA  0E03               	movlw	3
 10696  002DEC  0104               	movlb	4	; () banked
 10697  002DEE  6132               	cpfslt	50,b	;volatile
 10698  002DF0  D024               	goto	l1740
 10699                           
 10700                           ; BSR set to: 4
 10701                           ;usb_device.c: 2105: {
 10702                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10703  002DF2  5132               	movf	50,w,b	;volatile
 10704  002DF4  0D02               	mullw	2
 10705  002DF6  0E1B               	movlw	low _USB_SD_Ptr
 10706  002DF8  24F3               	addwf	prodl,w,c
 10707  002DFA  6EF6               	movwf	tblptrl,c
 10708  002DFC  0EFC               	movlw	high _USB_SD_Ptr
 10709  002DFE  20F4               	addwfc	prodh,w,c
 10710  002E00  6EF7               	movwf	tblptrh,c
 10711  002E02                     	if	0	;There are less than 3 active tblptr bytes
 10712  002E02                     	endif
 10713  002E02  0009               	tblrd		*+
 10714  002E04  CFF5 F0B0          	movff	tablat,_inPipes
 10715  002E08  000A               	tblrd		*-
 10716  002E0A  CFF5 F0B1          	movff	tablat,_inPipes+1
 10717                           
 10718                           ; BSR set to: 4
 10719                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10720  002E0E  C0B0  FFF6         	movff	_inPipes,tblptrl
 10721  002E12  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10722  002E16  6AF8               	clrf	tblptru,c
 10723  002E18  0E0E               	movlw	(high __ramtop+-1)
 10724  002E1A  64F7               	cpfsgt	tblptrh,c
 10725  002E1C  D003               	bra	u12117
 10726  002E1E  0008               	tblrd		*
 10727  002E20  50F5               	movf	tablat,w,c
 10728  002E22  D005               	bra	u12110
 10729  002E24                     u12117:
 10730  002E24  CFF6 FFE9          	movff	tblptrl,fsr0l
 10731  002E28  CFF7 FFEA          	movff	tblptrh,fsr0h
 10732  002E2C  50EF               	movf	indf0,w,c
 10733  002E2E                     u12110:
 10734  002E2E  0100               	movlb	0	; () banked
 10735  002E30  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10736  002E32  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10737  002E34  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10738  002E36  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10739                           
 10740                           ;usb_device.c: 2110: }
 10741  002E38  0012               	return	
 10742  002E3A                     l1740:
 10743                           
 10744                           ;usb_device.c: 2120: else
 10745                           ;usb_device.c: 2121: {
 10746                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10747                           
 10748                           ; BSR set to: 0
 10749  002E3A  0E00               	movlw	0
 10750  002E3C  0100               	movlb	0	; () banked
 10751  002E3E  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10752                           
 10753                           ; BSR set to: 0
 10754                           ;usb_device.c: 2123: }
 10755                           ;usb_device.c: 2124: break;
 10756  002E40  0012               	return	
 10757  002E42                     
 10758                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10759                           
 10760                           ; BSR set to: 0
 10761  002E42  0E00               	movlw	0
 10762  002E44  0100               	movlb	0	; () banked
 10763  002E46  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10764                           
 10765                           ; BSR set to: 0
 10766                           ;usb_device.c: 2128: }
 10767                           
 10768                           ;usb_device.c: 2127: break;
 10769  002E48  0012               	return	
 10770  002E4A                     l1733:
 10771                           
 10772                           ; BSR set to: 0
 10773                           
 10774                           ; BSR set to: 0
 10775  002E4A  0104               	movlb	4	; () banked
 10776  002E4C  5133               	movf	51,w,b	;volatile
 10777                           
 10778                           ; Switch size 1, requested type "space"
 10779                           ; Number of cases is 3, Range of values is 1 to 3
 10780                           ; switch strategies available:
 10781                           ; Name         Instructions Cycles
 10782                           ; simple_byte           10     6 (average)
 10783                           ;	Chosen strategy is simple_byte
 10784  002E4E  0A01               	xorlw	1	; case 1
 10785  002E50  B4D8               	btfsc	status,2,c
 10786  002E52  D779               	goto	l1734
 10787  002E54  0A03               	xorlw	3	; case 2
 10788  002E56  B4D8               	btfsc	status,2,c
 10789  002E58  D780               	goto	l1736
 10790  002E5A  0A01               	xorlw	1	; case 3
 10791  002E5C  B4D8               	btfsc	status,2,c
 10792  002E5E  D7C5               	goto	l1739
 10793  002E60  D7F0               	goto	l1742
 10794  002E62                     __end_of_USBStdGetDscHandler:
 10795                           	opt stack 0
 10796                           tosu	equ	0xFFF
 10797                           tosh	equ	0xFFE
 10798                           tosl	equ	0xFFD
 10799                           pclath	equ	0xFFA
 10800                           tblptru	equ	0xFF8
 10801                           tblptrh	equ	0xFF7
 10802                           tblptrl	equ	0xFF6
 10803                           tablat	equ	0xFF5
 10804                           prodh	equ	0xFF4
 10805                           prodl	equ	0xFF3
 10806                           intcon	equ	0xFF2
 10807                           intcon2	equ	0xFF1
 10808                           intcon3	equ	0xFF0
 10809                           indf0	equ	0xFEF
 10810                           postinc0	equ	0xFEE
 10811                           plusw0	equ	0xFEB
 10812                           fsr0h	equ	0xFEA
 10813                           fsr0l	equ	0xFE9
 10814                           wreg	equ	0xFE8
 10815                           postinc1	equ	0xFE6
 10816                           postdec1	equ	0xFE5
 10817                           fsr1h	equ	0xFE2
 10818                           fsr1l	equ	0xFE1
 10819                           indf2	equ	0xFDF
 10820                           postinc2	equ	0xFDE
 10821                           postdec2	equ	0xFDD
 10822                           plusw2	equ	0xFDB
 10823                           fsr2h	equ	0xFDA
 10824                           fsr2l	equ	0xFD9
 10825                           status	equ	0xFD8
 10826                           
 10827 ;; *************** function _USBStdFeatureReqHandler *****************
 10828 ;; Defined at:
 10829 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10830 ;; Parameters:    Size  Location     Type
 10831 ;;		None
 10832 ;; Auto vars:     Size  Location     Type
 10833 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10834 ;;		 -> NULL(0), BDT(48), 
 10835 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10836 ;;		 -> UEP0(1), 
 10837 ;;  current_ep_d    1   52[BANK0 ] struct .
 10838 ;; Return value:  Size  Location     Type
 10839 ;;                  1    wreg      void 
 10840 ;; Registers used:
 10841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10848 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10850 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10851 ;;Total ram usage:        6 bytes
 10852 ;; Hardware stack levels used:    1
 10853 ;; Hardware stack levels required when called:   15
 10854 ;; This function calls:
 10855 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10856 ;; This function is called by:
 10857 ;;		_USBCheckStdRequest
 10858 ;; This function uses a non-reentrant model
 10859 ;;
 10860                           
 10861                           	psect	text43
 10862  001360                     __ptext43:
 10863                           	opt stack 0
 10864  001360                     _USBStdFeatureReqHandler:
 10865                           	opt stack 8
 10866                           
 10867                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10868                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10869                           ;usb_device.c: 2778: unsigned char* pUEP;
 10870                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10871                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10872                           
 10873                           ;incstack = 0
 10874  001360  0104               	movlb	4	; () banked
 10875  001362  0532               	decf	50,w,b	;volatile
 10876  001364  A4D8               	btfss	status,2,c
 10877  001366  D011               	goto	l1826
 10878                           
 10879                           ; BSR set to: 4
 10880  001368  5130               	movf	48,w,b	;volatile
 10881  00136A  0B1F               	andlw	31
 10882  00136C  0900               	iorlw	0
 10883  00136E  A4D8               	btfss	status,2,c
 10884  001370  D00C               	goto	l1826
 10885                           
 10886                           ; BSR set to: 4
 10887                           ;usb_device.c: 2818: {
 10888                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10889  001372  0100               	movlb	0	; () banked
 10890  001374  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10891                           
 10892                           ; BSR set to: 0
 10893                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10894  001376  0E03               	movlw	3
 10895  001378  0104               	movlb	4	; () banked
 10896  00137A  1931               	xorwf	49,w,b	;volatile
 10897  00137C  A4D8               	btfss	status,2,c
 10898  00137E  D002               	goto	l1825
 10899                           
 10900                           ; BSR set to: 4
 10901                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10902  001380  0E01               	movlw	1
 10903  001382  D001               	goto	L5
 10904  001384                     l1825:
 10905                           
 10906                           ;usb_device.c: 2822: else
 10907                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10908                           
 10909                           ; BSR set to: 1
 10910  001384  0E00               	movlw	0
 10911  001386                     L5:
 10912  001386  0101               	movlb	1	; () banked
 10913  001388  6FE0               	movwf	_RemoteWakeup& (0+255),b
 10914  00138A                     l1826:
 10915                           
 10916                           ;usb_device.c: 2824: }
 10917                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10918                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10919                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10920                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10921                           
 10922                           ; BSR set to: 1
 10923  00138A  0104               	movlb	4	; () banked
 10924  00138C  5132               	movf	50,w,b	;volatile
 10925  00138E  A4D8               	btfss	status,2,c
 10926  001390  0012               	return	
 10927                           
 10928                           ; BSR set to: 4
 10929  001392  5130               	movf	48,w,b	;volatile
 10930  001394  0B1F               	andlw	31
 10931  001396  0A02               	xorlw	2
 10932  001398  A4D8               	btfss	status,2,c
 10933  00139A  0012               	return	
 10934                           
 10935                           ; BSR set to: 4
 10936  00139C  5134               	movf	52,w,b	;volatile
 10937  00139E  0B0F               	andlw	15
 10938  0013A0  0900               	iorlw	0
 10939  0013A2  B4D8               	btfsc	status,2,c
 10940  0013A4  0012               	return	
 10941                           
 10942                           ; BSR set to: 4
 10943  0013A6  5134               	movf	52,w,b	;volatile
 10944  0013A8  0B0F               	andlw	15
 10945  0013AA  0100               	movlb	0	; () banked
 10946  0013AC  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10947  0013AE  0E03               	movlw	3
 10948  0013B0  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10949  0013B2  0012               	return	
 10950                           
 10951                           ; BSR set to: 0
 10952  0013B4  0E20               	movlw	32
 10953  0013B6  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 10954  0013B8  A4D8               	btfss	status,2,c
 10955  0013BA  0012               	return	
 10956                           
 10957                           ; BSR set to: 0
 10958                           ;usb_device.c: 2831: {
 10959                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10960  0013BC  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10961                           
 10962                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10963  0013BE  0104               	movlb	4	; () banked
 10964  0013C0  BF34               	btfsc	52,7,b	;volatile
 10965  0013C2  D01C               	goto	l1828
 10966                           
 10967                           ; BSR set to: 4
 10968                           ;usb_device.c: 2838: {
 10969                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10970  0013C4  5134               	movf	52,w,b	;volatile
 10971  0013C6  0B0F               	andlw	15
 10972  0013C8  0100               	movlb	0	; () banked
 10973  0013CA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10974  0013CC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10975  0013CE  0D02               	mullw	2
 10976  0013D0  0E06               	movlw	low _pBDTEntryOut
 10977  0013D2  24F3               	addwf	prodl,w,c
 10978  0013D4  6ED9               	movwf	fsr2l,c
 10979  0013D6  0E03               	movlw	high _pBDTEntryOut
 10980  0013D8  20F4               	addwfc	prodh,w,c
 10981  0013DA  6EDA               	movwf	fsr2h,c
 10982  0013DC  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10983  0013E0  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10984                           
 10985                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10986  0013E4  0104               	movlb	4	; () banked
 10987  0013E6  5134               	movf	52,w,b	;volatile
 10988  0013E8  0B0F               	andlw	15
 10989  0013EA  0100               	movlb	0	; () banked
 10990  0013EC  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10991  0013EE  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10992  0013F0  0D01               	mullw	1
 10993  0013F2  0ECF               	movlw	low _ep_data_out
 10994  0013F4  24F3               	addwf	prodl,w,c
 10995  0013F6  6ED9               	movwf	fsr2l,c
 10996  0013F8  0E02               	movlw	high _ep_data_out
 10997  0013FA  D01C               	goto	L6
 10998  0013FC                     l1828:
 10999                           
 11000                           ;usb_device.c: 2842: else
 11001                           ;usb_device.c: 2843: {
 11002                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11003                           
 11004                           ; BSR set to: 0
 11005  0013FC  0104               	movlb	4	; () banked
 11006  0013FE  5134               	movf	52,w,b	;volatile
 11007  001400  0B0F               	andlw	15
 11008  001402  0100               	movlb	0	; () banked
 11009  001404  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11010  001406  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11011  001408  0D02               	mullw	2
 11012  00140A  0EB6               	movlw	low _pBDTEntryIn
 11013  00140C  24F3               	addwf	prodl,w,c
 11014  00140E  6ED9               	movwf	fsr2l,c
 11015  001410  0E00               	movlw	high _pBDTEntryIn
 11016  001412  20F4               	addwfc	prodh,w,c
 11017  001414  6EDA               	movwf	fsr2h,c
 11018  001416  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11019  00141A  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11020                           
 11021                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 11022  00141E  0104               	movlb	4	; () banked
 11023  001420  5134               	movf	52,w,b	;volatile
 11024  001422  0B0F               	andlw	15
 11025  001424  0100               	movlb	0	; () banked
 11026  001426  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11027  001428  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11028  00142A  0D01               	mullw	1
 11029  00142C  0ED2               	movlw	low _ep_data_in
 11030  00142E  24F3               	addwf	prodl,w,c
 11031  001430  6ED9               	movwf	fsr2l,c
 11032  001432  0E02               	movlw	high _ep_data_in
 11033  001434                     L6:
 11034  001434  20F4               	addwfc	prodh,w,c
 11035  001436  6EDA               	movwf	fsr2h,c
 11036  001438  50DF               	movf	indf2,w,c
 11037  00143A  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 11038                           
 11039                           ; BSR set to: 0
 11040                           ;usb_device.c: 2846: }
 11041                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 11042                           
 11043                           ; BSR set to: 0
 11044  00143C  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 11045  00143E  D002               	goto	l1830
 11046                           
 11047                           ; BSR set to: 0
 11048                           ;usb_device.c: 2853: {
 11049                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 11050  001440  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 11051                           
 11052                           ;usb_device.c: 2855: }
 11053  001442  D001               	goto	l1831
 11054  001444                     l1830:
 11055                           
 11056                           ; BSR set to: 0
 11057                           ;usb_device.c: 2856: else
 11058                           ;usb_device.c: 2857: {
 11059                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 11060                           
 11061                           ; BSR set to: 0
 11062  001444  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 11063  001446                     l1831:
 11064                           
 11065                           ; BSR set to: 0
 11066                           ;usb_device.c: 2859: }
 11067                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 11068                           
 11069                           ; BSR set to: 0
 11070  001446  0104               	movlb	4	; () banked
 11071  001448  BF34               	btfsc	52,7,b	;volatile
 11072  00144A  D00B               	goto	l1832
 11073                           
 11074                           ; BSR set to: 4
 11075                           ;usb_device.c: 2865: {
 11076                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11077  00144C  5134               	movf	52,w,b	;volatile
 11078  00144E  0B0F               	andlw	15
 11079  001450  0100               	movlb	0	; () banked
 11080  001452  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11081  001454  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11082  001456  0D02               	mullw	2
 11083  001458  0E06               	movlw	low _pBDTEntryOut
 11084  00145A  24F3               	addwf	prodl,w,c
 11085  00145C  6ED9               	movwf	fsr2l,c
 11086  00145E  0E03               	movlw	high _pBDTEntryOut
 11087  001460  D00B               	goto	L7
 11088  001462                     l1832:
 11089                           
 11090                           ;usb_device.c: 2868: else
 11091                           ;usb_device.c: 2869: {
 11092                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11093                           
 11094                           ; BSR set to: 0
 11095  001462  0104               	movlb	4	; () banked
 11096  001464  5134               	movf	52,w,b	;volatile
 11097  001466  0B0F               	andlw	15
 11098  001468  0100               	movlb	0	; () banked
 11099  00146A  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11100  00146C  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11101  00146E  0D02               	mullw	2
 11102  001470  0EB6               	movlw	low _pBDTEntryIn
 11103  001472  24F3               	addwf	prodl,w,c
 11104  001474  6ED9               	movwf	fsr2l,c
 11105  001476  0E00               	movlw	high _pBDTEntryIn
 11106  001478                     L7:
 11107  001478  20F4               	addwfc	prodh,w,c
 11108  00147A  6EDA               	movwf	fsr2h,c
 11109  00147C  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11110  001480  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11111                           
 11112                           ; BSR set to: 0
 11113                           ;usb_device.c: 2871: }
 11114                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11115                           
 11116                           ; BSR set to: 0
 11117  001484  0E03               	movlw	3
 11118  001486  0104               	movlb	4	; () banked
 11119  001488  1931               	xorwf	49,w,b	;volatile
 11120  00148A  A4D8               	btfss	status,2,c
 11121  00148C  D031               	goto	l1834
 11122                           
 11123                           ; BSR set to: 4
 11124                           ;usb_device.c: 2875: {
 11125                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11126  00148E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11127  001492  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11128  001496  0100               	movlb	0	; () banked
 11129  001498  AEDF               	btfss	indf2,7,c
 11130  00149A  D01D               	goto	l1837
 11131                           
 11132                           ; BSR set to: 0
 11133                           ;usb_device.c: 2877: {
 11134                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11135  00149C  0104               	movlb	4	; () banked
 11136  00149E  BF34               	btfsc	52,7,b	;volatile
 11137  0014A0  D00B               	goto	l1836
 11138                           
 11139                           ; BSR set to: 4
 11140                           ;usb_device.c: 2881: {
 11141                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11142  0014A2  5134               	movf	52,w,b	;volatile
 11143  0014A4  0B0F               	andlw	15
 11144  0014A6  0100               	movlb	0	; () banked
 11145  0014A8  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11146  0014AA  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11147  0014AC  0D01               	mullw	1
 11148  0014AE  0ECF               	movlw	low _ep_data_out
 11149  0014B0  24F3               	addwf	prodl,w,c
 11150  0014B2  6ED9               	movwf	fsr2l,c
 11151  0014B4  0E02               	movlw	high _ep_data_out
 11152  0014B6  D00B               	goto	L8
 11153  0014B8                     l1836:
 11154                           
 11155                           ;usb_device.c: 2884: else
 11156                           ;usb_device.c: 2885: {
 11157                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11158                           
 11159                           ; BSR set to: 2
 11160  0014B8  0104               	movlb	4	; () banked
 11161  0014BA  5134               	movf	52,w,b	;volatile
 11162  0014BC  0B0F               	andlw	15
 11163  0014BE  0100               	movlb	0	; () banked
 11164  0014C0  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11165  0014C2  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11166  0014C4  0D01               	mullw	1
 11167  0014C6  0ED2               	movlw	low _ep_data_in
 11168  0014C8  24F3               	addwf	prodl,w,c
 11169  0014CA  6ED9               	movwf	fsr2l,c
 11170  0014CC  0E02               	movlw	high _ep_data_in
 11171  0014CE                     L8:
 11172  0014CE  20F4               	addwfc	prodh,w,c
 11173  0014D0  6EDA               	movwf	fsr2h,c
 11174  0014D2  0102               	movlb	2	; () banked
 11175  0014D4  82DF               	bsf	indf2,1,c
 11176  0014D6                     l1837:
 11177                           
 11178                           ;usb_device.c: 2887: }
 11179                           ;usb_device.c: 2888: }
 11180                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11181                           
 11182                           ; BSR set to: 2
 11183                           
 11184                           ; BSR set to: 2
 11185  0014D6  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11186  0014DA  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11187  0014DE  0E00               	movlw	0
 11188  0014E0  84DB               	bsf	plusw2,2,c
 11189                           
 11190                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11191  0014E2  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11192  0014E6  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11193  0014EA  0E00               	movlw	0
 11194  0014EC  8EDB               	bsf	plusw2,7,c
 11195                           
 11196                           ;usb_device.c: 2893: }
 11197  0014EE  0012               	return	
 11198  0014F0                     l1834:
 11199                           
 11200                           ;usb_device.c: 2894: else
 11201                           ;usb_device.c: 2895: {
 11202                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11203  0014F0  0E04               	movlw	4
 11204  0014F2  0100               	movlb	0	; () banked
 11205  0014F4  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11209  0014F6  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11210  0014FA  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11211  0014FE  AEDF               	btfss	indf2,7,c
 11212  001500  D01B               	goto	l1839
 11213                           
 11214                           ; BSR set to: 0
 11215                           ;usb_device.c: 2902: {
 11216                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11217  001502  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11218  001506  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11219  00150A  0E7F               	movlw	127
 11220  00150C  16DF               	andwf	indf2,f,c
 11221                           
 11222                           ; BSR set to: 0
 11223                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11224  00150E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11225  001512  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11226  001516  0E00               	movlw	0
 11227  001518  8CDB               	bsf	plusw2,6,c
 11228                           
 11229                           ; BSR set to: 0
 11230                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11231  00151A  0E00               	movlw	0
 11232  00151C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11233  00151E  0E05               	movlw	5
 11234  001520  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11235  001522  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11236  001526  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11237  00152A  0E00               	movlw	0
 11238  00152C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11239  00152E  0E02               	movlw	2
 11240  001530  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11241  001532  ECED  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11242                           
 11243                           ;usb_device.c: 2908: }
 11244  001536  D006               	goto	l1840
 11245  001538                     l1839:
 11246                           
 11247                           ;usb_device.c: 2909: else
 11248                           ;usb_device.c: 2910: {
 11249                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11250  001538  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11251  00153C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11252  001540  0E00               	movlw	0
 11253  001542  8CDB               	bsf	plusw2,6,c
 11254  001544                     l1840:
 11255                           
 11256                           ;usb_device.c: 2913: }
 11257                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11258  001544  0E04               	movlw	4
 11259  001546  0100               	movlb	0	; () banked
 11260  001548  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11261                           
 11262                           ; BSR set to: 0
 11263                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11264  00154A  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11265  00154C  D006               	goto	u12330
 11266                           
 11267                           ; BSR set to: 0
 11268  00154E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11269  001552  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11270  001556  AEDF               	btfss	indf2,7,c
 11271  001558  D033               	goto	l1841
 11272  00155A                     u12330:
 11273                           
 11274                           ; BSR set to: 0
 11275                           ;usb_device.c: 2924: {
 11276                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11277  00155A  0104               	movlb	4	; () banked
 11278  00155C  BF34               	btfsc	52,7,b	;volatile
 11279  00155E  D00B               	goto	l1844
 11280                           
 11281                           ; BSR set to: 4
 11282                           ;usb_device.c: 2926: {
 11283                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11284  001560  5134               	movf	52,w,b	;volatile
 11285  001562  0B0F               	andlw	15
 11286  001564  0100               	movlb	0	; () banked
 11287  001566  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11288  001568  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11289  00156A  0D01               	mullw	1
 11290  00156C  0ECF               	movlw	low _ep_data_out
 11291  00156E  24F3               	addwf	prodl,w,c
 11292  001570  6ED9               	movwf	fsr2l,c
 11293  001572  0E02               	movlw	high _ep_data_out
 11294  001574  D00B               	goto	L9
 11295  001576                     l1844:
 11296                           
 11297                           ;usb_device.c: 2929: else
 11298                           ;usb_device.c: 2930: {
 11299                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11300                           
 11301                           ; BSR set to: 2
 11302  001576  0104               	movlb	4	; () banked
 11303  001578  5134               	movf	52,w,b	;volatile
 11304  00157A  0B0F               	andlw	15
 11305  00157C  0100               	movlb	0	; () banked
 11306  00157E  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11307  001580  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11308  001582  0D01               	mullw	1
 11309  001584  0ED2               	movlw	low _ep_data_in
 11310  001586  24F3               	addwf	prodl,w,c
 11311  001588  6ED9               	movwf	fsr2l,c
 11312  00158A  0E02               	movlw	high _ep_data_in
 11313  00158C                     L9:
 11314  00158C  20F4               	addwfc	prodh,w,c
 11315  00158E  6EDA               	movwf	fsr2h,c
 11316  001590  0102               	movlb	2	; () banked
 11317  001592  92DF               	bcf	indf2,1,c
 11318                           
 11319                           ; BSR set to: 2
 11320                           ;usb_device.c: 2932: }
 11321                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11322                           
 11323                           ; BSR set to: 2
 11324  001594  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11325  001598  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11326  00159C  0E3B               	movlw	59
 11327  00159E  16DF               	andwf	indf2,f,c
 11328                           
 11329                           ; BSR set to: 2
 11330                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11331  0015A0  0E00               	movlw	0
 11332  0015A2  0100               	movlb	0	; () banked
 11333  0015A4  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11334  0015A6  0E05               	movlw	5
 11335  0015A8  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11336  0015AA  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11337  0015AE  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11338  0015B2  0E00               	movlw	0
 11339  0015B4  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11340  0015B6  0E02               	movlw	2
 11341  0015B8  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11342  0015BA  ECED  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11343                           
 11344                           ;usb_device.c: 2938: }
 11345  0015BE  D006               	goto	l1846
 11346  0015C0                     l1841:
 11347                           
 11348                           ;usb_device.c: 2939: else
 11349                           ;usb_device.c: 2940: {
 11350                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11351  0015C0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11352  0015C4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11353  0015C8  0E3B               	movlw	59
 11354  0015CA  16DF               	andwf	indf2,f,c
 11355  0015CC                     l1846:
 11356                           
 11357                           ;usb_device.c: 2943: }
 11358                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11359  0015CC  0104               	movlb	4	; () banked
 11360  0015CE  5134               	movf	52,w,b	;volatile
 11361  0015D0  0B0F               	andlw	15
 11362  0015D2  0100               	movlb	0	; () banked
 11363  0015D4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11364  0015D6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11365  0015D8  0D01               	mullw	1
 11366  0015DA  0E26               	movlw	38
 11367  0015DC  24F3               	addwf	prodl,w,c
 11368  0015DE  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11369  0015E0  0E0F               	movlw	15
 11370  0015E2  20F4               	addwfc	prodh,w,c
 11371  0015E4  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11372                           
 11373                           ; BSR set to: 0
 11374                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11375  0015E6  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11376  0015EA  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11377  0015EE  0EFE               	movlw	254
 11378  0015F0  16DF               	andwf	indf2,f,c
 11379                           
 11380                           ; BSR set to: 0
 11381  0015F2  0012               	return	
 11382  0015F4                     __end_of_USBStdFeatureReqHandler:
 11383                           	opt stack 0
 11384                           tosu	equ	0xFFF
 11385                           tosh	equ	0xFFE
 11386                           tosl	equ	0xFFD
 11387                           pclath	equ	0xFFA
 11388                           tblptru	equ	0xFF8
 11389                           tblptrh	equ	0xFF7
 11390                           tblptrl	equ	0xFF6
 11391                           tablat	equ	0xFF5
 11392                           prodh	equ	0xFF4
 11393                           prodl	equ	0xFF3
 11394                           intcon	equ	0xFF2
 11395                           intcon2	equ	0xFF1
 11396                           intcon3	equ	0xFF0
 11397                           indf0	equ	0xFEF
 11398                           postinc0	equ	0xFEE
 11399                           plusw0	equ	0xFEB
 11400                           fsr0h	equ	0xFEA
 11401                           fsr0l	equ	0xFE9
 11402                           wreg	equ	0xFE8
 11403                           postinc1	equ	0xFE6
 11404                           postdec1	equ	0xFE5
 11405                           fsr1h	equ	0xFE2
 11406                           fsr1l	equ	0xFE1
 11407                           indf2	equ	0xFDF
 11408                           postinc2	equ	0xFDE
 11409                           postdec2	equ	0xFDD
 11410                           plusw2	equ	0xFDB
 11411                           fsr2h	equ	0xFDA
 11412                           fsr2l	equ	0xFD9
 11413                           status	equ	0xFD8
 11414                           
 11415 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11416 ;; Defined at:
 11417 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11418 ;; Parameters:    Size  Location     Type
 11419 ;;  event           2   41[BANK0 ] enum E8371
 11420 ;;  pdata           2   43[BANK0 ] PTR void 
 11421 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11422 ;;  size            2   45[BANK0 ] unsigned int 
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;		None
 11425 ;; Return value:  Size  Location     Type
 11426 ;;                  1    wreg      unsigned char 
 11427 ;; Registers used:
 11428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11429 ;; Tracked objects:
 11430 ;;		On entry : 0/0
 11431 ;;		On exit  : 0/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11434 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11436 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11437 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11438 ;;Total ram usage:        8 bytes
 11439 ;; Hardware stack levels used:    1
 11440 ;; Hardware stack levels required when called:   14
 11441 ;; This function calls:
 11442 ;;		_CDCInitEP
 11443 ;;		_USBCheckCDCRequest
 11444 ;; This function is called by:
 11445 ;;		_USBDeviceTasks
 11446 ;;		_USBStdSetCfgHandler
 11447 ;;		_USBSuspend
 11448 ;;		_USBWakeFromSuspend
 11449 ;;		_USBCtrlTrfSetupHandler
 11450 ;;		_USBCheckStdRequest
 11451 ;;		_USBStdFeatureReqHandler
 11452 ;; This function uses a non-reentrant model
 11453 ;;
 11454                           
 11455                           	psect	text44
 11456  0059DA                     __ptext44:
 11457                           	opt stack 0
 11458  0059DA                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11459                           	opt stack 12
 11460                           
 11461                           ;usb_device_mgr.c: 106: switch( (int) event )
 11462                           
 11463                           ;incstack = 0
 11464  0059DA  D006               	goto	l2000
 11465  0059DC                     
 11466                           ;usb_device_mgr.c: 134: CDCInitEP();
 11467  0059DC  EC83  F02B         	call	_CDCInitEP	;wreg free
 11468                           
 11469                           ;usb_device_mgr.c: 142: break;
 11470                           
 11471                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11472                           
 11473                           ;usb_device_mgr.c: 139: break;
 11474  0059E0  0012               	return	
 11475  0059E2                     
 11476                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11477  0059E2  EC8A  F023         	call	_USBCheckCDCRequest	;wreg free
 11478                           
 11479                           ;usb_device_mgr.c: 163: }
 11480                           
 11481                           ;usb_device_mgr.c: 162: break;
 11482                           
 11483                           ;usb_device_mgr.c: 161: default:
 11484                           
 11485                           ;usb_device_mgr.c: 159: break;
 11486                           
 11487                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11488                           
 11489                           ;usb_device_mgr.c: 156: break;
 11490                           
 11491                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11492                           
 11493                           ;usb_device_mgr.c: 153: break;
 11494  0059E6  0012               	return	
 11495  0059E8                     l2000:
 11496  0059E8  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11497  0059EC  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11498                           
 11499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11500                           ; Switch size 1, requested type "space"
 11501                           ; Number of cases is 2, Range of values is 0 to 127
 11502                           ; switch strategies available:
 11503                           ; Name         Instructions Cycles
 11504                           ; simple_byte            7     4 (average)
 11505                           ;	Chosen strategy is simple_byte
 11506  0059F0  0100               	movlb	0	; () banked
 11507  0059F2  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11508  0059F4  0A00               	xorlw	0	; case 0
 11509  0059F6  B4D8               	btfsc	status,2,c
 11510  0059F8  D004               	goto	l17301
 11511  0059FA  0A7F               	xorlw	127	; case 127
 11512  0059FC  A4D8               	btfss	status,2,c
 11513  0059FE  0012               	return	
 11514  005A00  D018               	goto	l17303
 11515  005A02                     l17301:
 11516                           
 11517                           ; BSR set to: 0
 11518                           ; Switch size 1, requested type "space"
 11519                           ; Number of cases is 8, Range of values is 1 to 117
 11520                           ; switch strategies available:
 11521                           ; Name         Instructions Cycles
 11522                           ; simple_byte           25    13 (average)
 11523                           ;	Chosen strategy is simple_byte
 11524  005A02  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11525  005A04  0A01               	xorlw	1	; case 1
 11526  005A06  B4D8               	btfsc	status,2,c
 11527  005A08  D7E9               	goto	l2006
 11528  005A0A  0A03               	xorlw	3	; case 2
 11529  005A0C  B4D8               	btfsc	status,2,c
 11530  005A0E  0012               	return	
 11531  005A10  0A01               	xorlw	1	; case 3
 11532  005A12  B4D8               	btfsc	status,2,c
 11533  005A14  D7E6               	goto	l2008
 11534  005A16  0A06               	xorlw	6	; case 5
 11535  005A18  B4D8               	btfsc	status,2,c
 11536  005A1A  0012               	return	
 11537  005A1C  0A77               	xorlw	119	; case 114
 11538  005A1E  B4D8               	btfsc	status,2,c
 11539  005A20  0012               	return	
 11540  005A22  0A01               	xorlw	1	; case 115
 11541  005A24  B4D8               	btfsc	status,2,c
 11542  005A26  0012               	return	
 11543  005A28  0A07               	xorlw	7	; case 116
 11544  005A2A  B4D8               	btfsc	status,2,c
 11545  005A2C  0012               	return	
 11546  005A2E  0A01               	xorlw	1	; case 117
 11547  005A30  0012               	return	
 11548  005A32                     l17303:
 11549                           
 11550                           ; BSR set to: 0
 11551                           ; Switch size 1, requested type "space"
 11552                           ; Number of cases is 1, Range of values is 255 to 255
 11553                           ; switch strategies available:
 11554                           ; Name         Instructions Cycles
 11555                           ; simple_byte            4     3 (average)
 11556                           ;	Chosen strategy is simple_byte
 11557  005A32  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11558  005A34  0AFF               	xorlw	255	; case 255
 11559  005A36  0012               	return	
 11560  005A38                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11561                           	opt stack 0
 11562                           tosu	equ	0xFFF
 11563                           tosh	equ	0xFFE
 11564                           tosl	equ	0xFFD
 11565                           pclath	equ	0xFFA
 11566                           tblptru	equ	0xFF8
 11567                           tblptrh	equ	0xFF7
 11568                           tblptrl	equ	0xFF6
 11569                           tablat	equ	0xFF5
 11570                           prodh	equ	0xFF4
 11571                           prodl	equ	0xFF3
 11572                           intcon	equ	0xFF2
 11573                           intcon2	equ	0xFF1
 11574                           intcon3	equ	0xFF0
 11575                           indf0	equ	0xFEF
 11576                           postinc0	equ	0xFEE
 11577                           plusw0	equ	0xFEB
 11578                           fsr0h	equ	0xFEA
 11579                           fsr0l	equ	0xFE9
 11580                           wreg	equ	0xFE8
 11581                           postinc1	equ	0xFE6
 11582                           postdec1	equ	0xFE5
 11583                           fsr1h	equ	0xFE2
 11584                           fsr1l	equ	0xFE1
 11585                           indf2	equ	0xFDF
 11586                           postinc2	equ	0xFDE
 11587                           postdec2	equ	0xFDD
 11588                           plusw2	equ	0xFDB
 11589                           fsr2h	equ	0xFDA
 11590                           fsr2l	equ	0xFD9
 11591                           status	equ	0xFD8
 11592                           
 11593 ;; *************** function _USBCheckCDCRequest *****************
 11594 ;; Defined at:
 11595 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;		None
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;		None
 11600 ;; Return value:  Size  Location     Type
 11601 ;;                  1    wreg      void 
 11602 ;; Registers used:
 11603 ;;		wreg, status,2, status,0
 11604 ;; Tracked objects:
 11605 ;;		On entry : 0/0
 11606 ;;		On exit  : 0/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11613 ;;Total ram usage:        0 bytes
 11614 ;; Hardware stack levels used:    1
 11615 ;; Hardware stack levels required when called:   11
 11616 ;; This function calls:
 11617 ;;		Nothing
 11618 ;; This function is called by:
 11619 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11620 ;; This function uses a non-reentrant model
 11621 ;;
 11622                           
 11623                           	psect	text45
 11624  004714                     __ptext45:
 11625                           	opt stack 0
 11626  004714                     _USBCheckCDCRequest:
 11627                           	opt stack 14
 11628                           
 11629                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11630                           
 11631                           ;incstack = 0
 11632  004714  0104               	movlb	4	; () banked
 11633  004716  5130               	movf	48,w,b	;volatile
 11634  004718  0B1F               	andlw	31
 11635  00471A  06E8               	decf	wreg,f,c
 11636  00471C  A4D8               	btfss	status,2,c
 11637  00471E  0012               	return	
 11638                           
 11639                           ; BSR set to: 4
 11640                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11641                           
 11642                           ; BSR set to: 4
 11643                           
 11644                           ; BSR set to: 4
 11645  004720  3930               	swapf	48,w,b	;volatile
 11646  004722  32E8               	rrcf	wreg,f,c
 11647  004724  0B03               	andlw	3
 11648  004726  06E8               	decf	wreg,f,c
 11649  004728  A4D8               	btfss	status,2,c
 11650  00472A  0012               	return	
 11651                           
 11652                           ; BSR set to: 4
 11653                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11654                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11655                           
 11656                           ; BSR set to: 4
 11657                           
 11658                           ; BSR set to: 4
 11659  00472C  5134               	movf	52,w,b	;volatile
 11660  00472E  B4D8               	btfsc	status,2,c
 11661  004730  D037               	goto	l1902
 11662                           
 11663                           ; BSR set to: 4
 11664  004732  0534               	decf	52,w,b	;volatile
 11665  004734  A4D8               	btfss	status,2,c
 11666  004736  0012               	return	
 11667  004738  D033               	goto	l1902
 11668  00473A                     
 11669                           ; BSR set to: 4
 11670                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11671                           
 11672                           ; BSR set to: 4
 11673  00473A  0E78               	movlw	low _dummy_encapsulated_cmd_response
 11674  00473C  0100               	movlb	0	; () banked
 11675  00473E  6FB0               	movwf	_inPipes& (0+255),b
 11676  004740  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11677  004742  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11678                           
 11679                           ; BSR set to: 0
 11680                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11681  004744  0E00               	movlw	0
 11682  004746  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11683  004748  0E08               	movlw	8
 11684  00474A  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11685                           
 11686                           ; BSR set to: 0
 11687                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11688  00474C  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11692  00474E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11693                           
 11694                           ;usb_device_cdc.c: 178: break;
 11695  004750  0012               	return	
 11696  004752                     
 11697                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11698                           
 11699                           ; BSR set to: 0
 11700  004752  0E78               	movlw	low _dummy_encapsulated_cmd_response
 11701  004754  0100               	movlb	0	; () banked
 11702  004756  6FB0               	movwf	_inPipes& (0+255),b
 11703  004758  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11704  00475A  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11705                           
 11706                           ; BSR set to: 0
 11707                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11708  00475C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11709                           
 11710                           ;usb_device_cdc.c: 183: break;
 11711  00475E  0012               	return	
 11712  004760                     l1906:
 11713                           
 11714                           ; BSR set to: 4
 11715                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11716  004760  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11717  004764  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11718                           
 11719                           ; BSR set to: 4
 11720                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11721  004768  0E80               	movlw	low _line_coding
 11722  00476A  0101               	movlb	1	; () banked
 11723  00476C  6FC9               	movwf	_outPipes& (0+255),b
 11724  00476E  0E03               	movlw	high _line_coding
 11725  004770  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11726                           
 11727                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11728  004772  0E00               	movlw	0
 11729  004774  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11730  004776  0E00               	movlw	0
 11731  004778  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11732                           
 11733                           ; BSR set to: 1
 11734                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11735  00477A  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11736                           
 11737                           ;usb_device_cdc.c: 192: break;
 11738  00477C  0012               	return	
 11739  00477E                     
 11740                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11741                           
 11742                           ; BSR set to: 1
 11743  00477E  0E80               	movlw	low _line_coding
 11744  004780  0100               	movlb	0	; () banked
 11745  004782  6FB0               	movwf	_inPipes& (0+255),b
 11746  004784  0E03               	movlw	high _line_coding
 11747  004786  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11748                           
 11749                           ; BSR set to: 0
 11750  004788  0E00               	movlw	0
 11751  00478A  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11752  00478C  0E07               	movlw	7
 11753  00478E  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11754                           
 11755                           ; BSR set to: 0
 11756  004790  0EC1               	movlw	193
 11757  004792  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11758                           
 11759                           ;usb_device_cdc.c: 199: break;
 11760  004794  0012               	return	
 11761  004796                     l1908:
 11762                           
 11763                           ; BSR set to: 4
 11764                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11765  004796  C432 F2EE          	movff	1074,_control_signal_bitmap	;volatile
 11766                           
 11767                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11768  00479A  0100               	movlb	0	; () banked
 11769  00479C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11770                           
 11771                           ; BSR set to: 0
 11772                           ;usb_device_cdc.c: 261: }
 11773                           
 11774                           ; BSR set to: 0
 11775                           ;usb_device_cdc.c: 260: break;
 11776                           
 11777                           ;usb_device_cdc.c: 259: default:
 11778                           
 11779                           ;usb_device_cdc.c: 235: break;
 11780  00479E  0012               	return	
 11781  0047A0                     l1902:
 11782                           
 11783                           ; BSR set to: 0
 11784  0047A0  0104               	movlb	4	; () banked
 11785  0047A2  5131               	movf	49,w,b	;volatile
 11786                           
 11787                           ; Switch size 1, requested type "space"
 11788                           ; Number of cases is 5, Range of values is 0 to 34
 11789                           ; switch strategies available:
 11790                           ; Name         Instructions Cycles
 11791                           ; simple_byte           16     9 (average)
 11792                           ;	Chosen strategy is simple_byte
 11793  0047A4  0A00               	xorlw	0	; case 0
 11794  0047A6  B4D8               	btfsc	status,2,c
 11795  0047A8  D7C8               	goto	l1903
 11796  0047AA  0A01               	xorlw	1	; case 1
 11797  0047AC  B4D8               	btfsc	status,2,c
 11798  0047AE  D7D1               	goto	l1905
 11799  0047B0  0A21               	xorlw	33	; case 32
 11800  0047B2  B4D8               	btfsc	status,2,c
 11801  0047B4  D7D5               	goto	l1906
 11802  0047B6  0A01               	xorlw	1	; case 33
 11803  0047B8  B4D8               	btfsc	status,2,c
 11804  0047BA  D7E1               	goto	l1907
 11805  0047BC  0A03               	xorlw	3	; case 34
 11806  0047BE  A4D8               	btfss	status,2,c
 11807  0047C0  0012               	return	
 11808  0047C2  D7E9               	goto	l1908
 11809  0047C4                     __end_of_USBCheckCDCRequest:
 11810                           	opt stack 0
 11811                           tosu	equ	0xFFF
 11812                           tosh	equ	0xFFE
 11813                           tosl	equ	0xFFD
 11814                           pclath	equ	0xFFA
 11815                           tblptru	equ	0xFF8
 11816                           tblptrh	equ	0xFF7
 11817                           tblptrl	equ	0xFF6
 11818                           tablat	equ	0xFF5
 11819                           prodh	equ	0xFF4
 11820                           prodl	equ	0xFF3
 11821                           intcon	equ	0xFF2
 11822                           intcon2	equ	0xFF1
 11823                           intcon3	equ	0xFF0
 11824                           indf0	equ	0xFEF
 11825                           postinc0	equ	0xFEE
 11826                           plusw0	equ	0xFEB
 11827                           fsr0h	equ	0xFEA
 11828                           fsr0l	equ	0xFE9
 11829                           wreg	equ	0xFE8
 11830                           postinc1	equ	0xFE6
 11831                           postdec1	equ	0xFE5
 11832                           fsr1h	equ	0xFE2
 11833                           fsr1l	equ	0xFE1
 11834                           indf2	equ	0xFDF
 11835                           postinc2	equ	0xFDE
 11836                           postdec2	equ	0xFDD
 11837                           plusw2	equ	0xFDB
 11838                           fsr2h	equ	0xFDA
 11839                           fsr2l	equ	0xFD9
 11840                           status	equ	0xFD8
 11841                           
 11842 ;; *************** function _CDCInitEP *****************
 11843 ;; Defined at:
 11844 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;		None
 11847 ;; Auto vars:     Size  Location     Type
 11848 ;;		None
 11849 ;; Return value:  Size  Location     Type
 11850 ;;                  1    wreg      void 
 11851 ;; Registers used:
 11852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11853 ;; Tracked objects:
 11854 ;;		On entry : 0/0
 11855 ;;		On exit  : 0/0
 11856 ;;		Unchanged: 0/0
 11857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11862 ;;Total ram usage:        0 bytes
 11863 ;; Hardware stack levels used:    1
 11864 ;; Hardware stack levels required when called:   13
 11865 ;; This function calls:
 11866 ;;		_USBEnableEndpoint
 11867 ;;		_USBTransferOnePacket
 11868 ;; This function is called by:
 11869 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11870 ;; This function uses a non-reentrant model
 11871 ;;
 11872                           
 11873                           	psect	text46
 11874  005706                     __ptext46:
 11875                           	opt stack 0
 11876  005706                     _CDCInitEP:
 11877                           	opt stack 12
 11878                           
 11879                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11880                           
 11881                           ;incstack = 0
 11882  005706  0E80               	movlw	128
 11883  005708  0103               	movlb	3	; () banked
 11884  00570A  6F80               	movwf	_line_coding& (0+255),b
 11885  00570C  0E25               	movlw	37
 11886  00570E  6F81               	movwf	(_line_coding+1)& (0+255),b
 11887  005710  0E00               	movlw	0
 11888  005712  6F82               	movwf	(_line_coding+2)& (0+255),b
 11889  005714  0E00               	movlw	0
 11890  005716  6F83               	movwf	(_line_coding+3)& (0+255),b
 11891                           
 11892                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11893  005718  0E00               	movlw	0
 11894  00571A  6F84               	movwf	(_line_coding+4)& (0+255),b
 11895                           
 11896                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11897  00571C  0E00               	movlw	0
 11898  00571E  6F85               	movwf	(_line_coding+5)& (0+255),b
 11899                           
 11900                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11901  005720  0E08               	movlw	8
 11902  005722  6F86               	movwf	(_line_coding+6)& (0+255),b
 11903                           
 11904                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11905  005724  0E00               	movlw	0
 11906  005726  0100               	movlb	0	; () banked
 11907  005728  6FC9               	movwf	_cdc_rx_len& (0+255),b
 11908                           
 11909                           ; BSR set to: 0
 11910                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11911  00572A  0E1A               	movlw	26
 11912  00572C  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11913  00572E  0E01               	movlw	1
 11914  005730  EC67  F031         	call	_USBEnableEndpoint
 11915                           
 11916                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11917  005734  0E1E               	movlw	30
 11918  005736  0100               	movlb	0	; () banked
 11919  005738  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11920  00573A  0E02               	movlw	2
 11921  00573C  EC67  F031         	call	_USBEnableEndpoint
 11922                           
 11923                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11924  005740  0E00               	movlw	0
 11925  005742  0100               	movlb	0	; () banked
 11926  005744  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11927  005746  0E00               	movlw	low _cdc_data_rx
 11928  005748  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11929  00574A  0E05               	movlw	high _cdc_data_rx
 11930  00574C  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11931  00574E  0E40               	movlw	64
 11932  005750  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11933  005752  0E02               	movlw	2
 11934  005754  EC75  F022         	call	_USBTransferOnePacket
 11935  005758  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11936  00575C  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11937                           
 11938                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11939  005760  0E00               	movlw	0
 11940  005762  0101               	movlb	1	; () banked
 11941  005764  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11942  005766  0E00               	movlw	0
 11943  005768  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11944                           
 11945                           ; BSR set to: 1
 11946                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11947  00576A  0E00               	movlw	0
 11948  00576C  0100               	movlb	0	; () banked
 11949  00576E  6FC8               	movwf	_cdc_trf_state& (0+255),b
 11950                           
 11951                           ; BSR set to: 0
 11952  005770  0012               	return		;funcret
 11953  005772                     __end_of_CDCInitEP:
 11954                           	opt stack 0
 11955                           tosu	equ	0xFFF
 11956                           tosh	equ	0xFFE
 11957                           tosl	equ	0xFFD
 11958                           pclath	equ	0xFFA
 11959                           tblptru	equ	0xFF8
 11960                           tblptrh	equ	0xFF7
 11961                           tblptrl	equ	0xFF6
 11962                           tablat	equ	0xFF5
 11963                           prodh	equ	0xFF4
 11964                           prodl	equ	0xFF3
 11965                           intcon	equ	0xFF2
 11966                           intcon2	equ	0xFF1
 11967                           intcon3	equ	0xFF0
 11968                           indf0	equ	0xFEF
 11969                           postinc0	equ	0xFEE
 11970                           plusw0	equ	0xFEB
 11971                           fsr0h	equ	0xFEA
 11972                           fsr0l	equ	0xFE9
 11973                           wreg	equ	0xFE8
 11974                           postinc1	equ	0xFE6
 11975                           postdec1	equ	0xFE5
 11976                           fsr1h	equ	0xFE2
 11977                           fsr1l	equ	0xFE1
 11978                           indf2	equ	0xFDF
 11979                           postinc2	equ	0xFDE
 11980                           postdec2	equ	0xFDD
 11981                           plusw2	equ	0xFDB
 11982                           fsr2h	equ	0xFDA
 11983                           fsr2l	equ	0xFD9
 11984                           status	equ	0xFD8
 11985                           
 11986 ;; *************** function _USBEnableEndpoint *****************
 11987 ;; Defined at:
 11988 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11989 ;; Parameters:    Size  Location     Type
 11990 ;;  ep              1    wreg     unsigned char 
 11991 ;;  options         1   37[BANK0 ] unsigned char 
 11992 ;; Auto vars:     Size  Location     Type
 11993 ;;  ep              1   40[BANK0 ] unsigned char 
 11994 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11995 ;;		 -> UEP0(1), 
 11996 ;; Return value:  Size  Location     Type
 11997 ;;                  1    wreg      void 
 11998 ;; Registers used:
 11999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12000 ;; Tracked objects:
 12001 ;;		On entry : 0/0
 12002 ;;		On exit  : 0/0
 12003 ;;		Unchanged: 0/0
 12004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12005 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12006 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12008 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12009 ;;Total ram usage:        4 bytes
 12010 ;; Hardware stack levels used:    1
 12011 ;; Hardware stack levels required when called:   12
 12012 ;; This function calls:
 12013 ;;		_USBConfigureEndpoint
 12014 ;; This function is called by:
 12015 ;;		_CDCInitEP
 12016 ;; This function uses a non-reentrant model
 12017 ;;
 12018                           
 12019                           	psect	text47
 12020  0062CE                     __ptext47:
 12021                           	opt stack 0
 12022  0062CE                     _USBEnableEndpoint:
 12023                           	opt stack 12
 12024                           
 12025                           ; BSR set to: 0
 12026                           ;incstack = 0
 12027                           ;USBEnableEndpoint@ep stored from wreg
 12028  0062CE  0100               	movlb	0	; () banked
 12029  0062D0  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 12030                           
 12031                           ;usb_device.c: 898: unsigned char* p;
 12032                           ;usb_device.c: 902: if(options & 0x04)
 12033  0062D2  0100               	movlb	0	; () banked
 12034  0062D4  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 12035  0062D6  D005               	goto	l1643
 12036                           
 12037                           ; BSR set to: 0
 12038                           ;usb_device.c: 903: {
 12039                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 12040  0062D8  0E00               	movlw	0
 12041  0062DA  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12042  0062DC  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12043  0062DE  EC73  F026         	call	_USBConfigureEndpoint
 12044  0062E2                     l1643:
 12045                           
 12046                           ;usb_device.c: 905: }
 12047                           ;usb_device.c: 906: if(options & 0x02)
 12048  0062E2  0100               	movlb	0	; () banked
 12049  0062E4  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 12050  0062E6  D005               	goto	l1644
 12051                           
 12052                           ; BSR set to: 0
 12053                           ;usb_device.c: 907: {
 12054                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 12055  0062E8  0E01               	movlw	1
 12056  0062EA  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12057  0062EC  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12058  0062EE  EC73  F026         	call	_USBConfigureEndpoint
 12059  0062F2                     l1644:
 12060                           
 12061                           ;usb_device.c: 909: }
 12062                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 12063  0062F2  0100               	movlb	0	; () banked
 12064  0062F4  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12065  0062F6  0D01               	mullw	1
 12066  0062F8  0E26               	movlw	38
 12067  0062FA  24F3               	addwf	prodl,w,c
 12068  0062FC  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 12069  0062FE  0E0F               	movlw	15
 12070  006300  20F4               	addwfc	prodh,w,c
 12071  006302  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;usb_device.c: 919: *p = options;
 12075  006304  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 12076  006308  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 12077  00630C  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 12078                           
 12079                           ; BSR set to: 0
 12080  006310  0012               	return		;funcret
 12081  006312                     __end_of_USBEnableEndpoint:
 12082                           	opt stack 0
 12083                           tosu	equ	0xFFF
 12084                           tosh	equ	0xFFE
 12085                           tosl	equ	0xFFD
 12086                           pclath	equ	0xFFA
 12087                           tblptru	equ	0xFF8
 12088                           tblptrh	equ	0xFF7
 12089                           tblptrl	equ	0xFF6
 12090                           tablat	equ	0xFF5
 12091                           prodh	equ	0xFF4
 12092                           prodl	equ	0xFF3
 12093                           intcon	equ	0xFF2
 12094                           intcon2	equ	0xFF1
 12095                           intcon3	equ	0xFF0
 12096                           indf0	equ	0xFEF
 12097                           postinc0	equ	0xFEE
 12098                           plusw0	equ	0xFEB
 12099                           fsr0h	equ	0xFEA
 12100                           fsr0l	equ	0xFE9
 12101                           wreg	equ	0xFE8
 12102                           postinc1	equ	0xFE6
 12103                           postdec1	equ	0xFE5
 12104                           fsr1h	equ	0xFE2
 12105                           fsr1l	equ	0xFE1
 12106                           indf2	equ	0xFDF
 12107                           postinc2	equ	0xFDE
 12108                           postdec2	equ	0xFDD
 12109                           plusw2	equ	0xFDB
 12110                           fsr2h	equ	0xFDA
 12111                           fsr2l	equ	0xFD9
 12112                           status	equ	0xFD8
 12113                           
 12114 ;; *************** function _USBConfigureEndpoint *****************
 12115 ;; Defined at:
 12116 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12117 ;; Parameters:    Size  Location     Type
 12118 ;;  EPNum           1    wreg     unsigned char 
 12119 ;;  direction       1   29[BANK0 ] unsigned char 
 12120 ;; Auto vars:     Size  Location     Type
 12121 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12122 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12123 ;;		 -> BDT(48), 
 12124 ;; Return value:  Size  Location     Type
 12125 ;;                  1    wreg      void 
 12126 ;; Registers used:
 12127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/0
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12133 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12134 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12135 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12136 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12137 ;;Total ram usage:        8 bytes
 12138 ;; Hardware stack levels used:    1
 12139 ;; Hardware stack levels required when called:   11
 12140 ;; This function calls:
 12141 ;;		Nothing
 12142 ;; This function is called by:
 12143 ;;		_USBEnableEndpoint
 12144 ;; This function uses a non-reentrant model
 12145 ;;
 12146                           
 12147                           	psect	text48
 12148  004CE6                     __ptext48:
 12149                           	opt stack 0
 12150  004CE6                     _USBConfigureEndpoint:
 12151                           	opt stack 12
 12152                           
 12153                           ; BSR set to: 0
 12154                           ;incstack = 0
 12155                           ;USBConfigureEndpoint@EPNum stored from wreg
 12156  004CE6  0100               	movlb	0	; () banked
 12157  004CE8  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12158                           
 12159                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12160                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12161  004CEA  0E00               	movlw	0
 12162  004CEC  0100               	movlb	0	; () banked
 12163  004CEE  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12164  004CF0  0E04               	movlw	4
 12165  004CF2  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12166                           
 12167                           ; BSR set to: 0
 12168                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12169  004CF4  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12170  004CF6  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12171  004CF8  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12172  004CFA  90D8               	bcf	status,0,c
 12173  004CFC  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12174  004CFE  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12175  004D00  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12176  004D02  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12177  004D04  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12178  004D06  90D8               	bcf	status,0,c
 12179  004D08  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12180  004D0A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12181  004D0C  90D8               	bcf	status,0,c
 12182  004D0E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12183  004D10  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12184  004D12  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12185  004D14  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12186  004D16  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12187  004D18  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12188  004D1A  90D8               	bcf	status,0,c
 12189  004D1C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12190  004D1E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12191  004D20  90D8               	bcf	status,0,c
 12192  004D22  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12193  004D24  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12194  004D26  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12195  004D28  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12196  004D2A  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12197  004D2C  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12201  004D2E  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12202  004D32  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12203  004D36  9EDF               	bcf	indf2,7,c
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;usb_device.c: 1575: if(direction == 0)
 12207  004D38  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12208  004D3A  A4D8               	btfss	status,2,c
 12209  004D3C  D007               	goto	l1679
 12210                           
 12211                           ; BSR set to: 0
 12212                           ;usb_device.c: 1576: {
 12213                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12214  004D3E  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12215  004D40  0D02               	mullw	2
 12216  004D42  0E06               	movlw	low _pBDTEntryOut
 12217  004D44  24F3               	addwf	prodl,w,c
 12218  004D46  6ED9               	movwf	fsr2l,c
 12219  004D48  0E03               	movlw	high _pBDTEntryOut
 12220  004D4A  D006               	goto	L10
 12221  004D4C                     l1679:
 12222                           
 12223                           ; BSR set to: 0
 12224                           ;usb_device.c: 1579: else
 12225                           ;usb_device.c: 1580: {
 12226                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12227                           
 12228                           ; BSR set to: 0
 12229  004D4C  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12230  004D4E  0D02               	mullw	2
 12231  004D50  0EB6               	movlw	low _pBDTEntryIn
 12232  004D52  24F3               	addwf	prodl,w,c
 12233  004D54  6ED9               	movwf	fsr2l,c
 12234  004D56  0E00               	movlw	high _pBDTEntryIn
 12235  004D58                     L10:
 12236  004D58  20F4               	addwfc	prodh,w,c
 12237  004D5A  6EDA               	movwf	fsr2h,c
 12238  004D5C  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12239  004D60  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12240                           
 12241                           ; BSR set to: 0
 12242                           ;usb_device.c: 1582: }
 12243                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12244                           
 12245                           ; BSR set to: 0
 12246  004D64  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12247  004D68  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12248  004D6C  9CDF               	bcf	indf2,6,c
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12252  004D6E  EE20 F004          	lfsr	2,4
 12253  004D72  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12254  004D74  26D9               	addwf	fsr2l,f,c
 12255  004D76  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12256  004D78  22DA               	addwfc	fsr2h,f,c
 12257  004D7A  8CDF               	bsf	indf2,6,c
 12258                           
 12259                           ; BSR set to: 0
 12260  004D7C  0012               	return		;funcret
 12261  004D7E                     __end_of_USBConfigureEndpoint:
 12262                           	opt stack 0
 12263                           tosu	equ	0xFFF
 12264                           tosh	equ	0xFFE
 12265                           tosl	equ	0xFFD
 12266                           pclath	equ	0xFFA
 12267                           tblptru	equ	0xFF8
 12268                           tblptrh	equ	0xFF7
 12269                           tblptrl	equ	0xFF6
 12270                           tablat	equ	0xFF5
 12271                           prodh	equ	0xFF4
 12272                           prodl	equ	0xFF3
 12273                           intcon	equ	0xFF2
 12274                           intcon2	equ	0xFF1
 12275                           intcon3	equ	0xFF0
 12276                           indf0	equ	0xFEF
 12277                           postinc0	equ	0xFEE
 12278                           plusw0	equ	0xFEB
 12279                           fsr0h	equ	0xFEA
 12280                           fsr0l	equ	0xFE9
 12281                           wreg	equ	0xFE8
 12282                           postinc1	equ	0xFE6
 12283                           postdec1	equ	0xFE5
 12284                           fsr1h	equ	0xFE2
 12285                           fsr1l	equ	0xFE1
 12286                           indf2	equ	0xFDF
 12287                           postinc2	equ	0xFDE
 12288                           postdec2	equ	0xFDD
 12289                           plusw2	equ	0xFDB
 12290                           fsr2h	equ	0xFDA
 12291                           fsr2l	equ	0xFD9
 12292                           status	equ	0xFD8
 12293                           
 12294 ;; *************** function _USBCtrlTrfOutHandler *****************
 12295 ;; Defined at:
 12296 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12297 ;; Parameters:    Size  Location     Type
 12298 ;;		None
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;		None
 12301 ;; Return value:  Size  Location     Type
 12302 ;;                  1    wreg      void 
 12303 ;; Registers used:
 12304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12305 ;; Tracked objects:
 12306 ;;		On entry : 0/0
 12307 ;;		On exit  : 0/0
 12308 ;;		Unchanged: 0/0
 12309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12314 ;;Total ram usage:        0 bytes
 12315 ;; Hardware stack levels used:    1
 12316 ;; Hardware stack levels required when called:   13
 12317 ;; This function calls:
 12318 ;;		_USBCtrlTrfRxService
 12319 ;; This function is called by:
 12320 ;;		_USBCtrlEPService
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text49
 12325  005846                     __ptext49:
 12326                           	opt stack 0
 12327  005846                     _USBCtrlTrfOutHandler:
 12328                           	opt stack 12
 12329                           
 12330                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;incstack = 0
 12334  005846  0E02               	movlw	2
 12335  005848  0100               	movlb	0	; () banked
 12336  00584A  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12337  00584C  A4D8               	btfss	status,2,c
 12338  00584E  D003               	goto	l1785
 12339                           
 12340                           ; BSR set to: 0
 12341                           ;usb_device.c: 2558: {
 12342                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12343  005850  ECC4  F017         	call	_USBCtrlTrfRxService	;wreg free
 12344                           
 12345                           ;usb_device.c: 2560: }
 12346  005854  0012               	return	
 12347  005856                     l1785:
 12348                           
 12349                           ;usb_device.c: 2561: else
 12350                           ;usb_device.c: 2562: {
 12351                           ;usb_device.c: 2565: controlTransferState = 0;
 12352  005856  0E00               	movlw	0
 12353  005858  0100               	movlb	0	; () banked
 12354  00585A  6FCC               	movwf	_controlTransferState& (0+255),b
 12355                           
 12356                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12357  00585C  0101               	movlb	1	; () banked
 12358  00585E  51DE               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12359  005860  A4D8               	btfss	status,2,c
 12360  005862  D020               	goto	l1787
 12361                           
 12362                           ; BSR set to: 1
 12363                           ;usb_device.c: 2573: {
 12364                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12365  005864  0100               	movlb	0	; () banked
 12366  005866  EE20 F001          	lfsr	2,1
 12367  00586A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12368  00586C  26D9               	addwf	fsr2l,f,c
 12369  00586E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12370  005870  22DA               	addwfc	fsr2h,f,c
 12371  005872  0E08               	movlw	8
 12372  005874  6EDF               	movwf	indf2,c
 12373                           
 12374                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12375  005876  EE20 F002          	lfsr	2,2
 12376  00587A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12377  00587C  26D9               	addwf	fsr2l,f,c
 12378  00587E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12379  005880  22DA               	addwfc	fsr2h,f,c
 12380  005882  0E30               	movlw	48
 12381  005884  6EDE               	movwf	postinc2,c
 12382  005886  0E04               	movlw	4
 12383  005888  6EDD               	movwf	postdec2,c
 12384                           
 12385                           ; BSR set to: 0
 12386                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12387  00588A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12388  00588E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12389  005892  0E0C               	movlw	12
 12390  005894  6EDF               	movwf	indf2,c
 12391                           
 12392                           ; BSR set to: 0
 12393                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12394  005896  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12395  00589A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12396  00589E  0E00               	movlw	0
 12397  0058A0  8EDB               	bsf	plusw2,7,c
 12398                           
 12399                           ;usb_device.c: 2578: }
 12400  0058A2  0012               	return	
 12401  0058A4                     l1787:
 12402                           
 12403                           ;usb_device.c: 2579: else
 12404                           ;usb_device.c: 2580: {
 12405                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12406                           
 12407                           ; BSR set to: 0
 12408  0058A4  0E00               	movlw	0
 12409  0058A6  0101               	movlb	1	; () banked
 12410  0058A8  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12411                           
 12412                           ; BSR set to: 1
 12413  0058AA  0012               	return	
 12414  0058AC                     __end_of_USBCtrlTrfOutHandler:
 12415                           	opt stack 0
 12416                           tosu	equ	0xFFF
 12417                           tosh	equ	0xFFE
 12418                           tosl	equ	0xFFD
 12419                           pclath	equ	0xFFA
 12420                           tblptru	equ	0xFF8
 12421                           tblptrh	equ	0xFF7
 12422                           tblptrl	equ	0xFF6
 12423                           tablat	equ	0xFF5
 12424                           prodh	equ	0xFF4
 12425                           prodl	equ	0xFF3
 12426                           intcon	equ	0xFF2
 12427                           intcon2	equ	0xFF1
 12428                           intcon3	equ	0xFF0
 12429                           indf0	equ	0xFEF
 12430                           postinc0	equ	0xFEE
 12431                           plusw0	equ	0xFEB
 12432                           fsr0h	equ	0xFEA
 12433                           fsr0l	equ	0xFE9
 12434                           wreg	equ	0xFE8
 12435                           postinc1	equ	0xFE6
 12436                           postdec1	equ	0xFE5
 12437                           fsr1h	equ	0xFE2
 12438                           fsr1l	equ	0xFE1
 12439                           indf2	equ	0xFDF
 12440                           postinc2	equ	0xFDE
 12441                           postdec2	equ	0xFDD
 12442                           plusw2	equ	0xFDB
 12443                           fsr2h	equ	0xFDA
 12444                           fsr2l	equ	0xFD9
 12445                           status	equ	0xFD8
 12446                           
 12447 ;; *************** function _USBCtrlTrfRxService *****************
 12448 ;; Defined at:
 12449 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12450 ;; Parameters:    Size  Location     Type
 12451 ;;		None
 12452 ;; Auto vars:     Size  Location     Type
 12453 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12454 ;;  i               1   29[BANK0 ] unsigned char 
 12455 ;; Return value:  Size  Location     Type
 12456 ;;                  1    wreg      void 
 12457 ;; Registers used:
 12458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12459 ;; Tracked objects:
 12460 ;;		On entry : 0/0
 12461 ;;		On exit  : 0/0
 12462 ;;		Unchanged: 0/0
 12463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12465 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12467 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12468 ;;Total ram usage:        2 bytes
 12469 ;; Hardware stack levels used:    1
 12470 ;; Hardware stack levels required when called:   12
 12471 ;; This function calls:
 12472 ;;		_USBCtrlEPAllowStatusStage
 12473 ;; This function is called by:
 12474 ;;		_USBCtrlTrfOutHandler
 12475 ;; This function uses a non-reentrant model
 12476 ;;
 12477                           
 12478                           	psect	text50
 12479  002F88                     __ptext50:
 12480                           	opt stack 0
 12481  002F88                     _USBCtrlTrfRxService:
 12482                           	opt stack 12
 12483                           
 12484                           ;usb_device.c: 1872: uint8_t byteToRead;
 12485                           ;usb_device.c: 1873: uint8_t i;
 12486                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12487                           
 12488                           ;incstack = 0
 12489  002F88  0100               	movlb	0	; () banked
 12490  002F8A  EE20 F001          	lfsr	2,1
 12491  002F8E  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12492  002F90  26D9               	addwf	fsr2l,f,c
 12493  002F92  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12494  002F94  22DA               	addwfc	fsr2h,f,c
 12495  002F96  50DF               	movf	indf2,w,c
 12496  002F98  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12500  002F9A  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12501  002F9C  0101               	movlb	1	; () banked
 12502  002F9E  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12503  002FA0  0E00               	movlw	0
 12504  002FA2  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12505  002FA4  A0D8               	btfss	status,0,c
 12506                           
 12507                           ; BSR set to: 1
 12508                           ;usb_device.c: 1884: {
 12509                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12510  002FA6  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12511                           
 12512                           ; BSR set to: 1
 12513                           ;usb_device.c: 1886: }
 12514                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12515                           
 12516                           ; BSR set to: 1
 12517  002FAA  0100               	movlb	0	; () banked
 12518  002FAC  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12519  002FAE  0101               	movlb	1	; () banked
 12520  002FB0  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12521  002FB2  0E00               	movlw	0
 12522  002FB4  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12523                           
 12524                           ; BSR set to: 1
 12525                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12526  002FB6  0E00               	movlw	0
 12527  002FB8  0100               	movlb	0	; () banked
 12528  002FBA  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12529  002FBC  D013               	goto	l1713
 12530  002FBE                     
 12531                           ; BSR set to: 0
 12532                           ;usb_device.c: 1893: {
 12533                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12534                           
 12535                           ; BSR set to: 0
 12536  002FBE  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12537  002FC0  0D01               	mullw	1
 12538  002FC2  0E38               	movlw	56
 12539  002FC4  24F3               	addwf	prodl,w,c
 12540  002FC6  6ED9               	movwf	fsr2l,c
 12541  002FC8  0E04               	movlw	4
 12542  002FCA  20F4               	addwfc	prodh,w,c
 12543  002FCC  6EDA               	movwf	fsr2h,c
 12544  002FCE  C1C9  FFE1         	movff	_outPipes,fsr1l
 12545  002FD2  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12546  002FD6  CFDF FFE7          	movff	indf2,indf1
 12547                           
 12548                           ; BSR set to: 0
 12549  002FDA  0101               	movlb	1	; () banked
 12550  002FDC  4BC9               	infsnz	_outPipes& (0+255),f,b
 12551  002FDE  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12552                           
 12553                           ; BSR set to: 1
 12554  002FE0  0100               	movlb	0	; () banked
 12555  002FE2  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12556  002FE4                     l1713:
 12557                           
 12558                           ; BSR set to: 0
 12559                           
 12560                           ; BSR set to: 0
 12561  002FE4  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12562  002FE6  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12563  002FE8  A0D8               	btfss	status,0,c
 12564  002FEA  D7E9               	goto	l1714
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;usb_device.c: 1895: }
 12568                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12569                           
 12570                           ; BSR set to: 0
 12571  002FEC  0101               	movlb	1	; () banked
 12572  002FEE  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12573  002FF0  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12574  002FF2  B4D8               	btfsc	status,2,c
 12575  002FF4  D033               	goto	l1716
 12576                           
 12577                           ; BSR set to: 1
 12578                           ;usb_device.c: 1900: {
 12579                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12580  002FF6  0100               	movlb	0	; () banked
 12581  002FF8  EE20 F001          	lfsr	2,1
 12582  002FFC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12583  002FFE  26D9               	addwf	fsr2l,f,c
 12584  003000  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12585  003002  22DA               	addwfc	fsr2h,f,c
 12586  003004  0E08               	movlw	8
 12587  003006  6EDF               	movwf	indf2,c
 12588                           
 12589                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12590  003008  EE20 F002          	lfsr	2,2
 12591  00300C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12592  00300E  26D9               	addwf	fsr2l,f,c
 12593  003010  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12594  003012  22DA               	addwfc	fsr2h,f,c
 12595  003014  0E38               	movlw	56
 12596  003016  6EDE               	movwf	postinc2,c
 12597  003018  0E04               	movlw	4
 12598  00301A  6EDD               	movwf	postdec2,c
 12599                           
 12600                           ; BSR set to: 0
 12601                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12602  00301C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12603  003020  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12604  003024  BCDF               	btfsc	indf2,6,c
 12605  003026  D00D               	goto	l1717
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;usb_device.c: 1904: {
 12609                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12610  003028  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12611  00302C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12612  003030  0E48               	movlw	72
 12613  003032  6EDF               	movwf	indf2,c
 12614                           
 12615                           ; BSR set to: 0
 12616                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12617  003034  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12618  003038  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12619  00303C  0E00               	movlw	0
 12620  00303E  8EDB               	bsf	plusw2,7,c
 12621                           
 12622                           ;usb_device.c: 1907: }
 12623  003040  0012               	return	
 12624  003042                     l1717:
 12625                           
 12626                           ; BSR set to: 0
 12627                           ;usb_device.c: 1908: else
 12628                           ;usb_device.c: 1909: {
 12629                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12630                           
 12631                           ; BSR set to: 0
 12632  003042  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12633  003046  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12634  00304A  0E08               	movlw	8
 12635  00304C  6EDF               	movwf	indf2,c
 12636                           
 12637                           ; BSR set to: 0
 12638                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12639  00304E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12640  003052  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12641  003056  0E00               	movlw	0
 12642  003058  8EDB               	bsf	plusw2,7,c
 12643                           
 12644                           ; BSR set to: 0
 12645                           ;usb_device.c: 1912: }
 12646                           ;usb_device.c: 1913: }
 12647  00305A  0012               	return	
 12648  00305C                     l1716:
 12649                           
 12650                           ;usb_device.c: 1914: else
 12651                           ;usb_device.c: 1915: {
 12652                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12653                           
 12654                           ; BSR set to: 0
 12655  00305C  0100               	movlb	0	; () banked
 12656  00305E  EE20 F001          	lfsr	2,1
 12657  003062  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12658  003064  26D9               	addwf	fsr2l,f,c
 12659  003066  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12660  003068  22DA               	addwfc	fsr2h,f,c
 12661  00306A  0E08               	movlw	8
 12662  00306C  6EDF               	movwf	indf2,c
 12663                           
 12664                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12665  00306E  EE20 F002          	lfsr	2,2
 12666  003072  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12667  003074  26D9               	addwf	fsr2l,f,c
 12668  003076  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12669  003078  22DA               	addwfc	fsr2h,f,c
 12670  00307A  0E30               	movlw	48
 12671  00307C  6EDE               	movwf	postinc2,c
 12672  00307E  0E04               	movlw	4
 12673  003080  6EDD               	movwf	postdec2,c
 12674                           
 12675                           ; BSR set to: 0
 12676                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12677  003082  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12678  003086  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12679  00308A  0E04               	movlw	4
 12680  00308C  6EDF               	movwf	indf2,c
 12681                           
 12682                           ; BSR set to: 0
 12683                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12684  00308E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12685  003092  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12686  003096  0E00               	movlw	0
 12687  003098  8EDB               	bsf	plusw2,7,c
 12688                           
 12689                           ; BSR set to: 0
 12690                           ;usb_device.c: 1944: }
 12691                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12692                           
 12693                           ; BSR set to: 0
 12694  00309A  0101               	movlb	1	; () banked
 12695  00309C  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12696                           
 12697                           ; BSR set to: 1
 12698                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12699  00309E  0100               	movlb	0	; () banked
 12700  0030A0  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12701  0030A2  A4D8               	btfss	status,2,c
 12702  0030A4  0012               	return	
 12703                           
 12704                           ; BSR set to: 0
 12705                           ;usb_device.c: 1960: {
 12706                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12707  0030A6  ECFB  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12708  0030AA  0012               	return	
 12709  0030AC                     __end_of_USBCtrlTrfRxService:
 12710                           	opt stack 0
 12711                           tosu	equ	0xFFF
 12712                           tosh	equ	0xFFE
 12713                           tosl	equ	0xFFD
 12714                           pclath	equ	0xFFA
 12715                           tblptru	equ	0xFF8
 12716                           tblptrh	equ	0xFF7
 12717                           tblptrl	equ	0xFF6
 12718                           tablat	equ	0xFF5
 12719                           prodh	equ	0xFF4
 12720                           prodl	equ	0xFF3
 12721                           intcon	equ	0xFF2
 12722                           intcon2	equ	0xFF1
 12723                           intcon3	equ	0xFF0
 12724                           indf0	equ	0xFEF
 12725                           postinc0	equ	0xFEE
 12726                           plusw0	equ	0xFEB
 12727                           fsr0h	equ	0xFEA
 12728                           fsr0l	equ	0xFE9
 12729                           wreg	equ	0xFE8
 12730                           indf1	equ	0xFE7
 12731                           postinc1	equ	0xFE6
 12732                           postdec1	equ	0xFE5
 12733                           fsr1h	equ	0xFE2
 12734                           fsr1l	equ	0xFE1
 12735                           indf2	equ	0xFDF
 12736                           postinc2	equ	0xFDE
 12737                           postdec2	equ	0xFDD
 12738                           plusw2	equ	0xFDB
 12739                           fsr2h	equ	0xFDA
 12740                           fsr2l	equ	0xFD9
 12741                           status	equ	0xFD8
 12742                           
 12743 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12744 ;; Defined at:
 12745 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12746 ;; Parameters:    Size  Location     Type
 12747 ;;		None
 12748 ;; Auto vars:     Size  Location     Type
 12749 ;;		None
 12750 ;; Return value:  Size  Location     Type
 12751 ;;                  1    wreg      void 
 12752 ;; Registers used:
 12753 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12754 ;; Tracked objects:
 12755 ;;		On entry : 0/0
 12756 ;;		On exit  : 0/0
 12757 ;;		Unchanged: 0/0
 12758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12763 ;;Total ram usage:        0 bytes
 12764 ;; Hardware stack levels used:    1
 12765 ;; Hardware stack levels required when called:   11
 12766 ;; This function calls:
 12767 ;;		Nothing
 12768 ;; This function is called by:
 12769 ;;		_USBDeviceTasks
 12770 ;;		_USBCtrlEPServiceComplete
 12771 ;;		_USBCtrlTrfRxService
 12772 ;; This function uses a non-reentrant model
 12773 ;;
 12774                           
 12775                           	psect	text51
 12776  003DF6                     __ptext51:
 12777                           	opt stack 0
 12778  003DF6                     _USBCtrlEPAllowStatusStage:
 12779                           	opt stack 12
 12780                           
 12781                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12782                           
 12783                           ;incstack = 0
 12784  003DF6  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 12785  003DF8  A4D8               	btfss	status,2,c
 12786  003DFA  0012               	return	
 12787                           
 12788                           ;usb_device.c: 1442: {
 12789                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12790  003DFC  0E01               	movlw	1
 12791  003DFE  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12792                           
 12793                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12794  003E00  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12795  003E02  A4D8               	btfss	status,2,c
 12796  003E04  0012               	return	
 12797                           
 12798                           ;usb_device.c: 1445: {
 12799                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12800  003E06  0E01               	movlw	1
 12801  003E08  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12802                           
 12803                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12804  003E0A  0E02               	movlw	2
 12805  003E0C  0100               	movlb	0	; () banked
 12806  003E0E  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12807  003E10  A4D8               	btfss	status,2,c
 12808  003E12  D015               	goto	l1667
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;usb_device.c: 1451: {
 12812                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12813  003E14  EE20 F001          	lfsr	2,1
 12814  003E18  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12815  003E1A  26D9               	addwf	fsr2l,f,c
 12816  003E1C  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12817  003E1E  22DA               	addwfc	fsr2h,f,c
 12818  003E20  0E00               	movlw	0
 12819  003E22  6EDF               	movwf	indf2,c
 12820                           
 12821                           ; BSR set to: 0
 12822                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12823  003E24  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12824  003E28  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12825  003E2C  0E48               	movlw	72
 12826  003E2E  6EDF               	movwf	indf2,c
 12827                           
 12828                           ; BSR set to: 0
 12829                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12830  003E30  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12831  003E34  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12832  003E38  0E00               	movlw	0
 12833  003E3A  8EDB               	bsf	plusw2,7,c
 12834                           
 12835                           ;usb_device.c: 1455: }
 12836  003E3C  0012               	return	
 12837  003E3E                     l1667:
 12838                           
 12839                           ; BSR set to: 0
 12840                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12841                           
 12842                           ; BSR set to: 0
 12843  003E3E  05CC               	decf	_controlTransferState& (0+255),w,b
 12844  003E40  A4D8               	btfss	status,2,c
 12845  003E42  0012               	return	
 12846                           
 12847                           ; BSR set to: 0
 12848                           ;usb_device.c: 1457: {
 12849                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12850  003E44  0E00               	movlw	0
 12851  003E46  0101               	movlb	1	; () banked
 12852  003E48  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12853                           
 12854                           ; BSR set to: 1
 12855                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12856  003E4A  0100               	movlb	0	; () banked
 12857  003E4C  EE20 F001          	lfsr	2,1
 12858  003E50  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12859  003E52  26D9               	addwf	fsr2l,f,c
 12860  003E54  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12861  003E56  22DA               	addwfc	fsr2h,f,c
 12862  003E58  0E08               	movlw	8
 12863  003E5A  6EDF               	movwf	indf2,c
 12864                           
 12865                           ; BSR set to: 0
 12866                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12867  003E5C  EE20 F002          	lfsr	2,2
 12868  003E60  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12869  003E62  26D9               	addwf	fsr2l,f,c
 12870  003E64  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12871  003E66  22DA               	addwfc	fsr2h,f,c
 12872  003E68  0E30               	movlw	48
 12873  003E6A  6EDE               	movwf	postinc2,c
 12874  003E6C  0E04               	movlw	4
 12875  003E6E  6EDD               	movwf	postdec2,c
 12876                           
 12877                           ; BSR set to: 0
 12878                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12879  003E70  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12880  003E74  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12881  003E78  0E04               	movlw	4
 12882  003E7A  6EDF               	movwf	indf2,c
 12883                           
 12884                           ; BSR set to: 0
 12885                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12886  003E7C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12887  003E80  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12888  003E84  0E00               	movlw	0
 12889  003E86  8EDB               	bsf	plusw2,7,c
 12890                           
 12891                           ; BSR set to: 0
 12892                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12893  003E88  0E01               	movlw	1
 12894  003E8A  0101               	movlb	1	; () banked
 12895  003E8C  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12896                           
 12897                           ; BSR set to: 1
 12898                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12899  003E8E  0100               	movlb	0	; () banked
 12900  003E90  EE20 F001          	lfsr	2,1
 12901  003E94  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12902  003E96  26D9               	addwf	fsr2l,f,c
 12903  003E98  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12904  003E9A  22DA               	addwfc	fsr2h,f,c
 12905  003E9C  0E08               	movlw	8
 12906  003E9E  6EDF               	movwf	indf2,c
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12910  003EA0  EE20 F002          	lfsr	2,2
 12911  003EA4  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12912  003EA6  26D9               	addwf	fsr2l,f,c
 12913  003EA8  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12914  003EAA  22DA               	addwfc	fsr2h,f,c
 12915  003EAC  0E30               	movlw	48
 12916  003EAE  6EDE               	movwf	postinc2,c
 12917  003EB0  0E04               	movlw	4
 12918  003EB2  6EDD               	movwf	postdec2,c
 12919                           
 12920                           ; BSR set to: 0
 12921                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12922  003EB4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12923  003EB8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12924  003EBC  0E80               	movlw	128
 12925  003EBE  6EDF               	movwf	indf2,c
 12926                           
 12927                           ; BSR set to: 0
 12928                           
 12929                           ; BSR set to: 0
 12930                           
 12931                           ; BSR set to: 0
 12932  003EC0  0012               	return	
 12933  003EC2                     __end_of_USBCtrlEPAllowStatusStage:
 12934                           	opt stack 0
 12935                           tosu	equ	0xFFF
 12936                           tosh	equ	0xFFE
 12937                           tosl	equ	0xFFD
 12938                           pclath	equ	0xFFA
 12939                           tblptru	equ	0xFF8
 12940                           tblptrh	equ	0xFF7
 12941                           tblptrl	equ	0xFF6
 12942                           tablat	equ	0xFF5
 12943                           prodh	equ	0xFF4
 12944                           prodl	equ	0xFF3
 12945                           intcon	equ	0xFF2
 12946                           intcon2	equ	0xFF1
 12947                           intcon3	equ	0xFF0
 12948                           indf0	equ	0xFEF
 12949                           postinc0	equ	0xFEE
 12950                           plusw0	equ	0xFEB
 12951                           fsr0h	equ	0xFEA
 12952                           fsr0l	equ	0xFE9
 12953                           wreg	equ	0xFE8
 12954                           indf1	equ	0xFE7
 12955                           postinc1	equ	0xFE6
 12956                           postdec1	equ	0xFE5
 12957                           fsr1h	equ	0xFE2
 12958                           fsr1l	equ	0xFE1
 12959                           indf2	equ	0xFDF
 12960                           postinc2	equ	0xFDE
 12961                           postdec2	equ	0xFDD
 12962                           plusw2	equ	0xFDB
 12963                           fsr2h	equ	0xFDA
 12964                           fsr2l	equ	0xFD9
 12965                           status	equ	0xFD8
 12966                           
 12967 ;; *************** function _USBCtrlTrfInHandler *****************
 12968 ;; Defined at:
 12969 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12970 ;; Parameters:    Size  Location     Type
 12971 ;;		None
 12972 ;; Auto vars:     Size  Location     Type
 12973 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12974 ;; Return value:  Size  Location     Type
 12975 ;;                  1    wreg      void 
 12976 ;; Registers used:
 12977 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12978 ;; Tracked objects:
 12979 ;;		On entry : 0/0
 12980 ;;		On exit  : 0/0
 12981 ;;		Unchanged: 0/0
 12982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12984 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12986 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12987 ;;Total ram usage:        1 bytes
 12988 ;; Hardware stack levels used:    1
 12989 ;; Hardware stack levels required when called:   12
 12990 ;; This function calls:
 12991 ;;		_USBCtrlTrfTxService
 12992 ;; This function is called by:
 12993 ;;		_USBCtrlEPService
 12994 ;; This function uses a non-reentrant model
 12995 ;;
 12996                           
 12997                           	psect	text52
 12998  0042A8                     __ptext52:
 12999                           	opt stack 0
 13000  0042A8                     _USBCtrlTrfInHandler:
 13001                           	opt stack 13
 13002                           
 13003                           ;usb_device.c: 2611: uint8_t lastDTS;
 13004                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 13005                           
 13006                           ;incstack = 0
 13007  0042A8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13008  0042AC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13009  0042B0  0100               	movlb	0	; () banked
 13010  0042B2  0E00               	movlw	0
 13011  0042B4  BCDF               	btfsc	indf2,6,c
 13012  0042B6  0E01               	movlw	1
 13013  0042B8  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 13014                           
 13015                           ; BSR set to: 0
 13016                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 13017  0042BA  0E04               	movlw	4
 13018  0042BC  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 13022  0042BE  0E08               	movlw	8
 13023  0042C0  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 13024  0042C2  A4D8               	btfss	status,2,c
 13025  0042C4  D00D               	goto	l1794
 13026                           
 13027                           ; BSR set to: 0
 13028                           ;usb_device.c: 2622: {
 13029                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 13030  0042C6  0104               	movlb	4	; () banked
 13031  0042C8  5132               	movf	50,w,b	;volatile
 13032  0042CA  0B7F               	andlw	127
 13033  0042CC  010F               	movlb	15	; () banked
 13034  0042CE  6F38               	movwf	56,b	;volatile
 13035                           
 13036                           ; BSR set to: 15
 13037                           ;usb_device.c: 2624: if(UADDR != 0u)
 13038  0042D0  5138               	movf	56,w,b	;volatile
 13039  0042D2  B4D8               	btfsc	status,2,c
 13040  0042D4  D002               	goto	l1793
 13041                           
 13042                           ; BSR set to: 15
 13043                           ;usb_device.c: 2625: {
 13044                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 13045  0042D6  0E10               	movlw	16
 13046  0042D8  D001               	goto	L11
 13047  0042DA                     l1793:
 13048                           
 13049                           ;usb_device.c: 2628: else
 13050                           ;usb_device.c: 2629: {
 13051                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 13052                           
 13053                           ; BSR set to: 0
 13054  0042DA  0E04               	movlw	4
 13055  0042DC                     L11:
 13056  0042DC  0100               	movlb	0	; () banked
 13057  0042DE  6FCE               	movwf	_USBDeviceState& (0+255),b
 13058  0042E0                     l1794:
 13059                           
 13060                           ; BSR set to: 0
 13061                           ;usb_device.c: 2631: }
 13062                           ;usb_device.c: 2632: }
 13063                           ;usb_device.c: 2635: if(controlTransferState == 1)
 13064                           
 13065                           ; BSR set to: 0
 13066                           
 13067                           ; BSR set to: 0
 13068  0042E0  05CC               	decf	_controlTransferState& (0+255),w,b
 13069  0042E2  A4D8               	btfss	status,2,c
 13070  0042E4  D03B               	goto	l1795
 13071                           
 13072                           ; BSR set to: 0
 13073                           ;usb_device.c: 2636: {
 13074                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 13075  0042E6  EE20 F002          	lfsr	2,2
 13076  0042EA  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13077  0042EC  26D9               	addwf	fsr2l,f,c
 13078  0042EE  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13079  0042F0  22DA               	addwfc	fsr2h,f,c
 13080  0042F2  0E38               	movlw	56
 13081  0042F4  6EDE               	movwf	postinc2,c
 13082  0042F6  0E04               	movlw	4
 13083  0042F8  6EDD               	movwf	postdec2,c
 13084                           
 13085                           ; BSR set to: 0
 13086                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 13087  0042FA  EC17  F01C         	call	_USBCtrlTrfTxService	;wreg free
 13088                           
 13089                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 13090  0042FE  0E02               	movlw	2
 13091  004300  0100               	movlb	0	; () banked
 13092  004302  19CD               	xorwf	_shortPacketStatus& (0+255),w,b
 13093  004304  A4D8               	btfss	status,2,c
 13094  004306  D00D               	goto	l1796
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;usb_device.c: 2645: {
 13098                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 13099  004308  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13100  00430C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13101  004310  0E04               	movlw	4
 13102  004312  6EDF               	movwf	indf2,c
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13106  004314  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13107  004318  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13108  00431C  0E00               	movlw	0
 13109  00431E  8EDB               	bsf	plusw2,7,c
 13110                           
 13111                           ;usb_device.c: 2650: }
 13112  004320  0012               	return	
 13113  004322                     l1796:
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;usb_device.c: 2651: else
 13117                           ;usb_device.c: 2652: {
 13118                           ;usb_device.c: 2653: if(lastDTS == 0)
 13119                           
 13120                           ; BSR set to: 0
 13121  004322  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13122  004324  A4D8               	btfss	status,2,c
 13123  004326  D00D               	goto	l1798
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;usb_device.c: 2654: {
 13127                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13128  004328  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13129  00432C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13130  004330  0E48               	movlw	72
 13131  004332  6EDF               	movwf	indf2,c
 13132                           
 13133                           ; BSR set to: 0
 13134                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13135  004334  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13136  004338  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13137  00433C  0E00               	movlw	0
 13138  00433E  8EDB               	bsf	plusw2,7,c
 13139                           
 13140                           ;usb_device.c: 2657: }
 13141  004340  0012               	return	
 13142  004342                     l1798:
 13143                           
 13144                           ; BSR set to: 0
 13145                           ;usb_device.c: 2658: else
 13146                           ;usb_device.c: 2659: {
 13147                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13148                           
 13149                           ; BSR set to: 0
 13150  004342  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13151  004346  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13152  00434A  0E08               	movlw	8
 13153  00434C  6EDF               	movwf	indf2,c
 13154                           
 13155                           ; BSR set to: 0
 13156                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13157  00434E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13158  004352  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13159  004356  0E00               	movlw	0
 13160  004358  8EDB               	bsf	plusw2,7,c
 13161                           
 13162                           ; BSR set to: 0
 13163                           ;usb_device.c: 2662: }
 13164                           ;usb_device.c: 2663: }
 13165                           ;usb_device.c: 2664: }
 13166                           
 13167                           ; BSR set to: 0
 13168  00435A  0012               	return	
 13169  00435C                     l1795:
 13170                           
 13171                           ; BSR set to: 0
 13172                           ;usb_device.c: 2665: else
 13173                           ;usb_device.c: 2666: {
 13174                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13175  00435C  0101               	movlb	1	; () banked
 13176  00435E  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13177                           
 13178                           ; BSR set to: 1
 13179                           ;usb_device.c: 2675: }
 13180                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13181                           
 13182                           ; BSR set to: 1
 13183  004360  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13184                           
 13185                           ; BSR set to: 1
 13186                           ;usb_device.c: 2677: }
 13187                           ;usb_device.c: 2679: controlTransferState = 0;
 13188                           
 13189                           ; BSR set to: 1
 13190  004362  0E00               	movlw	0
 13191  004364  0100               	movlb	0	; () banked
 13192  004366  6FCC               	movwf	_controlTransferState& (0+255),b
 13193  004368  0012               	return	
 13194  00436A                     __end_of_USBCtrlTrfInHandler:
 13195                           	opt stack 0
 13196                           tosu	equ	0xFFF
 13197                           tosh	equ	0xFFE
 13198                           tosl	equ	0xFFD
 13199                           pclath	equ	0xFFA
 13200                           tblptru	equ	0xFF8
 13201                           tblptrh	equ	0xFF7
 13202                           tblptrl	equ	0xFF6
 13203                           tablat	equ	0xFF5
 13204                           prodh	equ	0xFF4
 13205                           prodl	equ	0xFF3
 13206                           intcon	equ	0xFF2
 13207                           intcon2	equ	0xFF1
 13208                           intcon3	equ	0xFF0
 13209                           indf0	equ	0xFEF
 13210                           postinc0	equ	0xFEE
 13211                           plusw0	equ	0xFEB
 13212                           fsr0h	equ	0xFEA
 13213                           fsr0l	equ	0xFE9
 13214                           wreg	equ	0xFE8
 13215                           indf1	equ	0xFE7
 13216                           postinc1	equ	0xFE6
 13217                           postdec1	equ	0xFE5
 13218                           fsr1h	equ	0xFE2
 13219                           fsr1l	equ	0xFE1
 13220                           indf2	equ	0xFDF
 13221                           postinc2	equ	0xFDE
 13222                           postdec2	equ	0xFDD
 13223                           plusw2	equ	0xFDB
 13224                           fsr2h	equ	0xFDA
 13225                           fsr2l	equ	0xFD9
 13226                           status	equ	0xFD8
 13227                           
 13228 ;; *************** function _USBCtrlTrfTxService *****************
 13229 ;; Defined at:
 13230 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13231 ;; Parameters:    Size  Location     Type
 13232 ;;		None
 13233 ;; Auto vars:     Size  Location     Type
 13234 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13235 ;; Return value:  Size  Location     Type
 13236 ;;                  1    wreg      void 
 13237 ;; Registers used:
 13238 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13239 ;; Tracked objects:
 13240 ;;		On entry : 0/0
 13241 ;;		On exit  : 0/0
 13242 ;;		Unchanged: 0/0
 13243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13247 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13248 ;;Total ram usage:        1 bytes
 13249 ;; Hardware stack levels used:    1
 13250 ;; Hardware stack levels required when called:   11
 13251 ;; This function calls:
 13252 ;;		Nothing
 13253 ;; This function is called by:
 13254 ;;		_USBCtrlEPAllowDataStage
 13255 ;;		_USBCtrlTrfInHandler
 13256 ;; This function uses a non-reentrant model
 13257 ;;
 13258                           
 13259                           	psect	text53
 13260  00382E                     __ptext53:
 13261                           	opt stack 0
 13262  00382E                     _USBCtrlTrfTxService:
 13263                           	opt stack 11
 13264                           
 13265                           ;usb_device.c: 1791: uint8_t byteToSend;
 13266                           ;usb_device.c: 1795: byteToSend = 8;
 13267                           
 13268                           ; BSR set to: 0
 13269                           ;incstack = 0
 13270  00382E  0E08               	movlw	8
 13271  003830  0100               	movlb	0	; () banked
 13272  003832  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13273                           
 13274                           ; BSR set to: 0
 13275                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13276  003834  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13277  003836  E110               	bnz	l13287
 13278  003838  0E08               	movlw	8
 13279  00383A  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13280  00383C  B0D8               	btfsc	status,0,c
 13281  00383E  D00C               	goto	l1700
 13282                           
 13283                           ; BSR set to: 0
 13284                           ;usb_device.c: 1797: {
 13285                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13286  003840  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13287                           
 13288                           ; BSR set to: 0
 13289                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13290  003844  51CD               	movf	_shortPacketStatus& (0+255),w,b
 13291  003846  A4D8               	btfss	status,2,c
 13292  003848  D002               	goto	l1698
 13293                           
 13294                           ; BSR set to: 0
 13295                           ;usb_device.c: 1806: {
 13296                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13297  00384A  0E01               	movlw	1
 13298  00384C  D004               	goto	L12
 13299  00384E                     l1698:
 13300                           
 13301                           ; BSR set to: 0
 13302                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13303                           
 13304                           ; BSR set to: 0
 13305  00384E  05CD               	decf	_shortPacketStatus& (0+255),w,b
 13306  003850  A4D8               	btfss	status,2,c
 13307  003852  D002               	goto	l1700
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;usb_device.c: 1810: {
 13311                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13312  003854  0E02               	movlw	2
 13313  003856                     L12:
 13314  003856  6FCD               	movwf	_shortPacketStatus& (0+255),b
 13315  003858                     l1700:
 13316  003858                     l13287:
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;usb_device.c: 1812: }
 13320                           ;usb_device.c: 1813: }
 13321                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13322  003858  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13323  00385A  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13324  00385C  0E00               	movlw	0
 13325  00385E  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13326                           
 13327                           ; BSR set to: 0
 13328                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13329  003860  EE20 F001          	lfsr	2,1
 13330  003864  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13331  003866  26D9               	addwf	fsr2l,f,c
 13332  003868  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13333  00386A  22DA               	addwfc	fsr2h,f,c
 13334  00386C  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13335                           
 13336                           ; BSR set to: 0
 13337                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13338  003870  0E38               	movlw	56
 13339  003872  0102               	movlb	2	; () banked
 13340  003874  6FD5               	movwf	_pDst& (0+255),b
 13341  003876  0E04               	movlw	4
 13342  003878  6FD6               	movwf	(_pDst+1)& (0+255),b
 13343                           
 13344                           ; BSR set to: 2
 13345                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13346  00387A  0100               	movlb	0	; () banked
 13347  00387C  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13348  00387E  D01E               	goto	l1702
 13349  003880  D03E               	goto	l1706
 13350  003882                     
 13351                           ; BSR set to: 0
 13352                           ;usb_device.c: 1830: {
 13353                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13354                           
 13355                           ; BSR set to: 0
 13356  003882  C0B0  FFF6         	movff	_inPipes,tblptrl
 13357  003886  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13358  00388A  6AF8               	clrf	tblptru,c
 13359  00388C  C2D5  FFD9         	movff	_pDst,fsr2l
 13360  003890  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13361  003894  0E0E               	movlw	(high __ramtop+-1)
 13362  003896  64F7               	cpfsgt	tblptrh,c
 13363  003898  D003               	bra	u11857
 13364  00389A  0008               	tblrd		*
 13365  00389C  50F5               	movf	tablat,w,c
 13366  00389E  D005               	bra	u11850
 13367  0038A0                     u11857:
 13368  0038A0  CFF6 FFE9          	movff	tblptrl,fsr0l
 13369  0038A4  CFF7 FFEA          	movff	tblptrh,fsr0h
 13370  0038A8  50EF               	movf	indf0,w,c
 13371  0038AA                     u11850:
 13372  0038AA  6EDF               	movwf	indf2,c
 13373  0038AC  0100               	movlb	0	; () banked
 13374  0038AE  4BB0               	infsnz	_inPipes& (0+255),f,b
 13375  0038B0  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13376                           
 13377                           ; BSR set to: 0
 13378  0038B2  0102               	movlb	2	; () banked
 13379  0038B4  4BD5               	infsnz	_pDst& (0+255),f,b
 13380  0038B6  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13381                           
 13382                           ; BSR set to: 2
 13383                           ;usb_device.c: 1832: byteToSend--;
 13384  0038B8  0100               	movlb	0	; () banked
 13385  0038BA  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13386  0038BC                     l1702:
 13387                           
 13388                           ; BSR set to: 0
 13389                           
 13390                           ; BSR set to: 0
 13391  0038BC  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13392  0038BE  B4D8               	btfsc	status,2,c
 13393  0038C0  0012               	return	
 13394  0038C2  D7DF               	goto	l1703
 13395  0038C4                     
 13396                           ; BSR set to: 0
 13397                           ;usb_device.c: 1838: {
 13398                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13399                           
 13400                           ; BSR set to: 0
 13401  0038C4  C0B0  FFF6         	movff	_inPipes,tblptrl
 13402  0038C8  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13403  0038CC  6AF8               	clrf	tblptru,c
 13404  0038CE  C2D5  FFD9         	movff	_pDst,fsr2l
 13405  0038D2  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13406  0038D6  0E0E               	movlw	(high __ramtop+-1)
 13407  0038D8  64F7               	cpfsgt	tblptrh,c
 13408  0038DA  D003               	bra	u11877
 13409  0038DC  0008               	tblrd		*
 13410  0038DE  50F5               	movf	tablat,w,c
 13411  0038E0  D005               	bra	u11870
 13412  0038E2                     u11877:
 13413  0038E2  CFF6 FFE9          	movff	tblptrl,fsr0l
 13414  0038E6  CFF7 FFEA          	movff	tblptrh,fsr0h
 13415  0038EA  50EF               	movf	indf0,w,c
 13416  0038EC                     u11870:
 13417  0038EC  6EDF               	movwf	indf2,c
 13418  0038EE  0100               	movlb	0	; () banked
 13419  0038F0  4BB0               	infsnz	_inPipes& (0+255),f,b
 13420  0038F2  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13421                           
 13422                           ; BSR set to: 0
 13423  0038F4  0102               	movlb	2	; () banked
 13424  0038F6  4BD5               	infsnz	_pDst& (0+255),f,b
 13425  0038F8  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13426                           
 13427                           ; BSR set to: 2
 13428                           ;usb_device.c: 1840: byteToSend--;
 13429  0038FA  0100               	movlb	0	; () banked
 13430  0038FC  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13431  0038FE                     l1706:
 13432                           
 13433                           ; BSR set to: 0
 13434                           
 13435                           ; BSR set to: 0
 13436  0038FE  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13437  003900  B4D8               	btfsc	status,2,c
 13438  003902  0012               	return	
 13439  003904  D7DF               	goto	l1707
 13440  003906                     __end_of_USBCtrlTrfTxService:
 13441                           	opt stack 0
 13442                           tosu	equ	0xFFF
 13443                           tosh	equ	0xFFE
 13444                           tosl	equ	0xFFD
 13445                           pclath	equ	0xFFA
 13446                           tblptru	equ	0xFF8
 13447                           tblptrh	equ	0xFF7
 13448                           tblptrl	equ	0xFF6
 13449                           tablat	equ	0xFF5
 13450                           prodh	equ	0xFF4
 13451                           prodl	equ	0xFF3
 13452                           intcon	equ	0xFF2
 13453                           intcon2	equ	0xFF1
 13454                           intcon3	equ	0xFF0
 13455                           indf0	equ	0xFEF
 13456                           postinc0	equ	0xFEE
 13457                           plusw0	equ	0xFEB
 13458                           fsr0h	equ	0xFEA
 13459                           fsr0l	equ	0xFE9
 13460                           wreg	equ	0xFE8
 13461                           indf1	equ	0xFE7
 13462                           postinc1	equ	0xFE6
 13463                           postdec1	equ	0xFE5
 13464                           fsr1h	equ	0xFE2
 13465                           fsr1l	equ	0xFE1
 13466                           indf2	equ	0xFDF
 13467                           postinc2	equ	0xFDE
 13468                           postdec2	equ	0xFDD
 13469                           plusw2	equ	0xFDB
 13470                           fsr2h	equ	0xFDA
 13471                           fsr2l	equ	0xFD9
 13472                           status	equ	0xFD8
 13473                           
 13474 ;; *************** function _CDCTxService *****************
 13475 ;; Defined at:
 13476 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13477 ;; Parameters:    Size  Location     Type
 13478 ;;		None
 13479 ;; Auto vars:     Size  Location     Type
 13480 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13481 ;;  i               1   36[BANK0 ] unsigned char 
 13482 ;; Return value:  Size  Location     Type
 13483 ;;                  1    wreg      void 
 13484 ;; Registers used:
 13485 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13486 ;; Tracked objects:
 13487 ;;		On entry : 0/0
 13488 ;;		On exit  : 0/0
 13489 ;;		Unchanged: 0/0
 13490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13492 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13494 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13495 ;;Total ram usage:        2 bytes
 13496 ;; Hardware stack levels used:    1
 13497 ;; Hardware stack levels required when called:   12
 13498 ;; This function calls:
 13499 ;;		_USBTransferOnePacket
 13500 ;; This function is called by:
 13501 ;;		_UsbDevice_MainTask
 13502 ;; This function uses a non-reentrant model
 13503 ;;
 13504                           
 13505                           	psect	text54
 13506  002984                     __ptext54:
 13507                           	opt stack 0
 13508  002984                     _CDCTxService:
 13509                           	opt stack 15
 13510                           
 13511                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13512                           ;usb_device_cdc.c: 842: uint8_t i;
 13513                           ;usb_device_cdc.c: 844: ;
 13514                           ;usb_device_cdc.c: 846: {};
 13515                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13516                           
 13517                           ; BSR set to: 0
 13518                           ;incstack = 0
 13519  002984  0101               	movlb	1	; () banked
 13520  002986  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13521  002988  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13522  00298A  B4D8               	btfsc	status,2,c
 13523  00298C  D006               	goto	l1952
 13524                           
 13525                           ; BSR set to: 1
 13526  00298E  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13527  002992  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13528  002996  BEDF               	btfsc	indf2,7,c
 13529  002998  0012               	return	
 13530  00299A                     l1952:
 13531                           
 13532                           ; BSR set to: 1
 13533                           ;usb_device_cdc.c: 852: }
 13534                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13535                           
 13536                           ; BSR set to: 1
 13537  00299A  0E03               	movlw	3
 13538  00299C  0100               	movlb	0	; () banked
 13539  00299E  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13540  0029A0  A4D8               	btfss	status,2,c
 13541  0029A2  D002               	goto	l1954
 13542                           
 13543                           ; BSR set to: 0
 13544                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13545  0029A4  0E00               	movlw	0
 13546  0029A6  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13547  0029A8                     l1954:
 13548                           
 13549                           ; BSR set to: 0
 13550                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13551  0029A8  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13552  0029AA  B4D8               	btfsc	status,2,c
 13553  0029AC  0012               	return	
 13554                           
 13555                           ; BSR set to: 0
 13556                           ;usb_device_cdc.c: 869: }
 13557                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13558                           
 13559                           ; BSR set to: 0
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;usb_device_cdc.c: 866: {
 13563                           ;usb_device_cdc.c: 867: ;
 13564                           ;usb_device_cdc.c: 868: return;
 13565  0029AE  0E02               	movlw	2
 13566  0029B0  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13567  0029B2  A4D8               	btfss	status,2,c
 13568  0029B4  D013               	goto	l1956
 13569                           
 13570                           ; BSR set to: 0
 13571                           ;usb_device_cdc.c: 875: {
 13572                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13573  0029B6  0E01               	movlw	1
 13574  0029B8  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13575  0029BA  0E00               	movlw	0
 13576  0029BC  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13577  0029BE  0E00               	movlw	0
 13578  0029C0  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13579  0029C2  0E00               	movlw	0
 13580  0029C4  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13581  0029C6  0E02               	movlw	2
 13582  0029C8  EC75  F022         	call	_USBTransferOnePacket
 13583  0029CC  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13584  0029D0  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13585                           
 13586                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13587  0029D4  0E03               	movlw	3
 13588  0029D6  0100               	movlb	0	; () banked
 13589  0029D8  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13590                           
 13591                           ;usb_device_cdc.c: 879: }
 13592  0029DA  0012               	return	
 13593  0029DC                     l1956:
 13594                           
 13595                           ; BSR set to: 0
 13596                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13597                           
 13598                           ; BSR set to: 0
 13599  0029DC  05C8               	decf	_cdc_trf_state& (0+255),w,b
 13600  0029DE  A4D8               	btfss	status,2,c
 13601  0029E0  0012               	return	
 13602                           
 13603                           ; BSR set to: 0
 13604                           ;usb_device_cdc.c: 881: {
 13605                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13606  0029E2  0E40               	movlw	64
 13607  0029E4  65C7               	cpfsgt	_cdc_tx_len& (0+255),b
 13608  0029E6  D003               	goto	l1959
 13609                           
 13610                           ; BSR set to: 0
 13611                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13612  0029E8  0E40               	movlw	64
 13613  0029EA  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13614  0029EC  D002               	goto	l1960
 13615  0029EE                     l1959:
 13616                           
 13617                           ; BSR set to: 0
 13618                           ;usb_device_cdc.c: 887: else
 13619                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13620  0029EE  C0C7  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13621  0029F2                     l1960:
 13622                           
 13623                           ; BSR set to: 0
 13624                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13625                           
 13626                           ; BSR set to: 0
 13627  0029F2  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13628  0029F4  0800               	sublw	0
 13629  0029F6  25C7               	addwf	_cdc_tx_len& (0+255),w,b
 13630  0029F8  6FC7               	movwf	_cdc_tx_len& (0+255),b
 13631                           
 13632                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13633  0029FA  0EB6               	movlw	low _cdc_data_tx
 13634  0029FC  0102               	movlb	2	; () banked
 13635  0029FE  6FC9               	movwf	_pCDCDst& (0+255),b
 13636  002A00  0E07               	movlw	high _cdc_data_tx
 13637  002A02  6FCA               	movwf	(_pCDCDst+1)& (0+255),b
 13638                           
 13639                           ; BSR set to: 2
 13640                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13641  002A04  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13642                           
 13643                           ; BSR set to: 2
 13644                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13645  002A08  0101               	movlb	1	; () banked
 13646  002A0A  51DC               	movf	_cdc_mem_type& (0+255),w,b
 13647  002A0C  B4D8               	btfsc	status,2,c
 13648  002A0E  D01D               	goto	l1962
 13649  002A10  D03D               	goto	l1966
 13650  002A12                     
 13651                           ;usb_device_cdc.c: 901: {
 13652                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13653                           
 13654                           ; BSR set to: 1
 13655  002A12  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13656  002A16  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13657  002A1A  6AF8               	clrf	tblptru,c
 13658  002A1C  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13659  002A20  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13660  002A24  0E0E               	movlw	(high __ramtop+-1)
 13661  002A26  64F7               	cpfsgt	tblptrh,c
 13662  002A28  D003               	bra	u16057
 13663  002A2A  0008               	tblrd		*
 13664  002A2C  50F5               	movf	tablat,w,c
 13665  002A2E  D005               	bra	u16050
 13666  002A30                     u16057:
 13667  002A30  CFF6 FFE9          	movff	tblptrl,fsr0l
 13668  002A34  CFF7 FFEA          	movff	tblptrh,fsr0h
 13669  002A38  50EF               	movf	indf0,w,c
 13670  002A3A                     u16050:
 13671  002A3A  6EDF               	movwf	indf2,c
 13672                           
 13673                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13674  002A3C  0102               	movlb	2	; () banked
 13675  002A3E  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13676  002A40  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13677                           
 13678                           ; BSR set to: 2
 13679                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13680  002A42  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13681  002A44  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13682                           
 13683                           ; BSR set to: 2
 13684                           ;usb_device_cdc.c: 905: i--;
 13685  002A46  0100               	movlb	0	; () banked
 13686  002A48  0784               	decf	CDCTxService@i& (0+255),f,b
 13687  002A4A                     l1962:
 13688                           
 13689                           ; BSR set to: 0
 13690  002A4A  0100               	movlb	0	; () banked
 13691  002A4C  5184               	movf	CDCTxService@i& (0+255),w,b
 13692  002A4E  B4D8               	btfsc	status,2,c
 13693  002A50  D021               	goto	u16080
 13694  002A52  D7DF               	goto	l1963
 13695  002A54                     
 13696                           ; BSR set to: 0
 13697                           ;usb_device_cdc.c: 911: {
 13698                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13699                           
 13700                           ; BSR set to: 0
 13701  002A54  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13702  002A58  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13703  002A5C  6AF8               	clrf	tblptru,c
 13704  002A5E  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13705  002A62  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13706  002A66  0E0E               	movlw	(high __ramtop+-1)
 13707  002A68  64F7               	cpfsgt	tblptrh,c
 13708  002A6A  D003               	bra	u16077
 13709  002A6C  0008               	tblrd		*
 13710  002A6E  50F5               	movf	tablat,w,c
 13711  002A70  D005               	bra	u16070
 13712  002A72                     u16077:
 13713  002A72  CFF6 FFE9          	movff	tblptrl,fsr0l
 13714  002A76  CFF7 FFEA          	movff	tblptrh,fsr0h
 13715  002A7A  50EF               	movf	indf0,w,c
 13716  002A7C                     u16070:
 13717  002A7C  6EDF               	movwf	indf2,c
 13718                           
 13719                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13720  002A7E  0102               	movlb	2	; () banked
 13721  002A80  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13722  002A82  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13723                           
 13724                           ; BSR set to: 2
 13725                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13726  002A84  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13727  002A86  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13728                           
 13729                           ; BSR set to: 2
 13730                           ;usb_device_cdc.c: 915: i--;
 13731  002A88  0100               	movlb	0	; () banked
 13732  002A8A  0784               	decf	CDCTxService@i& (0+255),f,b
 13733  002A8C                     l1966:
 13734                           
 13735                           ; BSR set to: 0
 13736  002A8C  0100               	movlb	0	; () banked
 13737  002A8E  5184               	movf	CDCTxService@i& (0+255),w,b
 13738  002A90  A4D8               	btfss	status,2,c
 13739  002A92  D7E0               	goto	l1967
 13740  002A94                     u16080:
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;usb_device_cdc.c: 916: }
 13744                           ;usb_device_cdc.c: 917: }
 13745                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13746                           
 13747                           ; BSR set to: 0
 13748                           
 13749                           ; BSR set to: 0
 13750  002A94  51C7               	movf	_cdc_tx_len& (0+255),w,b
 13751  002A96  A4D8               	btfss	status,2,c
 13752  002A98  D008               	goto	l1971
 13753                           
 13754                           ; BSR set to: 0
 13755                           ;usb_device_cdc.c: 924: {
 13756                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13757  002A9A  0E40               	movlw	64
 13758  002A9C  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13759  002A9E  A4D8               	btfss	status,2,c
 13760  002AA0  D002               	goto	l1970
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13764  002AA2  0E02               	movlw	2
 13765  002AA4  D001               	goto	L13
 13766  002AA6                     l1970:
 13767                           
 13768                           ; BSR set to: 0
 13769                           ;usb_device_cdc.c: 927: else
 13770                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13771                           
 13772                           ; BSR set to: 0
 13773  002AA6  0E03               	movlw	3
 13774  002AA8                     L13:
 13775  002AA8  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13776  002AAA                     l1971:
 13777                           
 13778                           ; BSR set to: 0
 13779                           ;usb_device_cdc.c: 929: }
 13780                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13781                           
 13782                           ; BSR set to: 0
 13783                           
 13784                           ; BSR set to: 0
 13785  002AAA  0E01               	movlw	1
 13786  002AAC  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13787  002AAE  0EB6               	movlw	low _cdc_data_tx
 13788  002AB0  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13789  002AB2  0E07               	movlw	high _cdc_data_tx
 13790  002AB4  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13791  002AB6  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13792  002ABA  0E02               	movlw	2
 13793  002ABC  EC75  F022         	call	_USBTransferOnePacket
 13794  002AC0  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13795  002AC4  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13796  002AC8  0012               	return	
 13797  002ACA                     __end_of_CDCTxService:
 13798                           	opt stack 0
 13799                           tosu	equ	0xFFF
 13800                           tosh	equ	0xFFE
 13801                           tosl	equ	0xFFD
 13802                           pclath	equ	0xFFA
 13803                           tblptru	equ	0xFF8
 13804                           tblptrh	equ	0xFF7
 13805                           tblptrl	equ	0xFF6
 13806                           tablat	equ	0xFF5
 13807                           prodh	equ	0xFF4
 13808                           prodl	equ	0xFF3
 13809                           intcon	equ	0xFF2
 13810                           intcon2	equ	0xFF1
 13811                           intcon3	equ	0xFF0
 13812                           indf0	equ	0xFEF
 13813                           postinc0	equ	0xFEE
 13814                           plusw0	equ	0xFEB
 13815                           fsr0h	equ	0xFEA
 13816                           fsr0l	equ	0xFE9
 13817                           wreg	equ	0xFE8
 13818                           indf1	equ	0xFE7
 13819                           postinc1	equ	0xFE6
 13820                           postdec1	equ	0xFE5
 13821                           fsr1h	equ	0xFE2
 13822                           fsr1l	equ	0xFE1
 13823                           indf2	equ	0xFDF
 13824                           postinc2	equ	0xFDE
 13825                           postdec2	equ	0xFDD
 13826                           plusw2	equ	0xFDB
 13827                           fsr2h	equ	0xFDA
 13828                           fsr2l	equ	0xFD9
 13829                           status	equ	0xFD8
 13830                           
 13831 ;; *************** function _Term_MainSm *****************
 13832 ;; Defined at:
 13833 ;;		line 709 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13834 ;; Parameters:    Size  Location     Type
 13835 ;;		None
 13836 ;; Auto vars:     Size  Location     Type
 13837 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13838 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13839 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13840 ;;  FwkBuildYear    4    0        unsigned char [4]
 13841 ;;  FwkBuildMont    4    0        unsigned char [4]
 13842 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13843 ;; Return value:  Size  Location     Type
 13844 ;;                  1    wreg      void 
 13845 ;; Registers used:
 13846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13847 ;; Tracked objects:
 13848 ;;		On entry : 0/0
 13849 ;;		On exit  : 0/0
 13850 ;;		Unchanged: 0/0
 13851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13853 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13855 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13856 ;;Total ram usage:       12 bytes
 13857 ;; Hardware stack levels used:    1
 13858 ;; Hardware stack levels required when called:   16
 13859 ;; This function calls:
 13860 ;;		_OsTmr_GetTimerStatus
 13861 ;;		_OsTmr_StartTimer
 13862 ;;		_Terminal
 13863 ;;		_memset
 13864 ;;		_putUSBUSART
 13865 ;;		_sprintf
 13866 ;;		_strcat
 13867 ;;		_strcpy
 13868 ;;		_strlen
 13869 ;;		_utoa
 13870 ;; This function is called by:
 13871 ;;		_Term_MainTask
 13872 ;; This function uses a non-reentrant model
 13873 ;;
 13874                           
 13875                           	psect	text55
 13876  0010BC                     __ptext55:
 13877                           	opt stack 0
 13878  0010BC                     _Term_MainSm:
 13879                           	opt stack 11
 13880                           
 13881                           ;term.c: 711: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13882                           ;term.c: 712: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13883                           ;term.c: 713: static UINT8 Data[50];
 13884                           ;term.c: 714: UINT8 FwkMajorStr[4];
 13885                           ;term.c: 715: UINT8 FwkMinorStr[4];
 13886                           ;term.c: 716: UINT8 FwkBuildStr[4];
 13887                           ;term.c: 717: UINT8 FwkBuildDayStr[4];
 13888                           ;term.c: 718: UINT8 FwkBuildMonthStr[4];
 13889                           ;term.c: 719: UINT8 FwkBuildYearStr[4];
 13890                           ;term.c: 721: switch (TermMainSmState)
 13891                           
 13892                           ;incstack = 0
 13893  0010BC  D133               	goto	l2474
 13894  0010BE                     
 13895                           ;term.c: 725: OsTmr_StartTimer(&TermDelay,2000);
 13896  0010BE  0ED1               	movlw	low Term_MainSm@TermDelay
 13897  0010C0  0100               	movlb	0	; () banked
 13898  0010C2  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13899  0010C4  0E03               	movlw	high Term_MainSm@TermDelay
 13900  0010C6  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13901  0010C8  0ED0               	movlw	208
 13902  0010CA  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13903  0010CC  0E07               	movlw	7
 13904  0010CE  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13905  0010D0  0E00               	movlw	0
 13906  0010D2  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13907  0010D4  0E00               	movlw	0
 13908  0010D6  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13909  0010D8  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 13910                           
 13911                           ;term.c: 727: TermMainSmState = Term_InitDelay;
 13912  0010DC  0E01               	movlw	1
 13913  0010DE  0102               	movlb	2	; () banked
 13914  0010E0  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13915                           
 13916                           ;term.c: 728: break;
 13917  0010E2  0012               	return	
 13918  0010E4                     
 13919                           ; BSR set to: 2
 13920                           ;term.c: 732: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13921                           
 13922                           ; BSR set to: 2
 13923  0010E4  0ED1               	movlw	low Term_MainSm@TermDelay
 13924  0010E6  0100               	movlb	0	; () banked
 13925  0010E8  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13926  0010EA  0E03               	movlw	high Term_MainSm@TermDelay
 13927  0010EC  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13928  0010EE  ECC6  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 13929  0010F2  06E8               	decf	wreg,f,c
 13930  0010F4  A4D8               	btfss	status,2,c
 13931  0010F6  0012               	return	
 13932                           
 13933                           ;term.c: 733: {
 13934                           ;term.c: 735: TermMainSmState = Term_InitState;
 13935  0010F8  0E02               	movlw	2
 13936  0010FA  0102               	movlb	2	; () banked
 13937  0010FC  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13938                           
 13939                           ; BSR set to: 2
 13940                           ;term.c: 736: }
 13941                           ;term.c: 737: break;
 13942  0010FE  0012               	return	
 13943  001100                     
 13944                           ; BSR set to: 2
 13945                           ;term.c: 741: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13946                           
 13947                           ; BSR set to: 2
 13948  001100  0E1F               	movlw	31
 13949  001102  0100               	movlb	0	; () banked
 13950  001104  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 13951  001106  0012               	return	
 13952                           
 13953                           ; BSR set to: 0
 13954  001108  B265               	btfsc	3941,1,c	;volatile
 13955  00110A  0012               	return	
 13956                           
 13957                           ; BSR set to: 0
 13958                           ;term.c: 745: else
 13959                           ;term.c: 746: {
 13960                           ;term.c: 748: TermMainSmState = Term_WelcomeState;
 13961                           
 13962                           ; BSR set to: 0
 13963                           
 13964                           ; BSR set to: 0
 13965                           ;term.c: 742: {
 13966                           ;term.c: 744: }
 13967  00110C  0E03               	movlw	3
 13968  00110E  0102               	movlb	2	; () banked
 13969  001110  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13970                           
 13971                           ; BSR set to: 2
 13972                           ;term.c: 749: }
 13973                           ;term.c: 750: break;
 13974  001112  0012               	return	
 13975  001114                     
 13976                           ; BSR set to: 2
 13977                           ;term.c: 754: if((cdc_trf_state == 0))
 13978                           
 13979                           ; BSR set to: 2
 13980  001114  0100               	movlb	0	; () banked
 13981  001116  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13982  001118  A4D8               	btfss	status,2,c
 13983  00111A  0012               	return	
 13984                           
 13985                           ; BSR set to: 0
 13986                           ;term.c: 755: {
 13987                           ;term.c: 757: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13988  00111C  0E21               	movlw	low _Welcome
 13989  00111E  6F83               	movwf	putUSBUSART@data& (0+255),b
 13990  001120  0EFD               	movlw	high _Welcome
 13991  001122  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13992  001124  0E88               	movlw	136
 13993  001126  6F85               	movwf	putUSBUSART@length& (0+255),b
 13994  001128  EC2D  F035         	call	_putUSBUSART	;wreg free
 13995                           
 13996                           ;term.c: 759: TermMainSmState = Term_InstDescState;
 13997  00112C  0E04               	movlw	4
 13998  00112E  0102               	movlb	2	; () banked
 13999  001130  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14000                           
 14001                           ; BSR set to: 2
 14002                           ;term.c: 760: }
 14003                           ;term.c: 761: break;
 14004  001132  0012               	return	
 14005  001134                     
 14006                           ; BSR set to: 2
 14007                           ;term.c: 765: if((cdc_trf_state == 0))
 14008                           
 14009                           ; BSR set to: 2
 14010  001134  0100               	movlb	0	; () banked
 14011  001136  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14012  001138  A4D8               	btfss	status,2,c
 14013  00113A  0012               	return	
 14014                           
 14015                           ; BSR set to: 0
 14016                           ;term.c: 766: {
 14017                           ;term.c: 768: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 14018  00113C  0E31               	movlw	low _MsgFormat
 14019  00113E  6F83               	movwf	putUSBUSART@data& (0+255),b
 14020  001140  0EFC               	movlw	high _MsgFormat
 14021  001142  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14022  001144  0EEF               	movlw	239
 14023  001146  6F85               	movwf	putUSBUSART@length& (0+255),b
 14024  001148  EC2D  F035         	call	_putUSBUSART	;wreg free
 14025                           
 14026                           ;term.c: 770: TermMainSmState = Term_FwkVerState;
 14027  00114C  0E05               	movlw	5
 14028  00114E  0102               	movlb	2	; () banked
 14029  001150  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14030                           
 14031                           ; BSR set to: 2
 14032                           ;term.c: 771: }
 14033                           ;term.c: 772: break;
 14034  001152  0012               	return	
 14035  001154                     
 14036                           ; BSR set to: 2
 14037                           ;term.c: 776: if((cdc_trf_state == 0))
 14038                           
 14039                           ; BSR set to: 2
 14040  001154  0100               	movlb	0	; () banked
 14041  001156  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14042  001158  A4D8               	btfss	status,2,c
 14043  00115A  0012               	return	
 14044                           
 14045                           ; BSR set to: 0
 14046                           ;term.c: 777: {
 14047                           ;term.c: 779: memset(Data,0,50);
 14048  00115C  0E52               	movlw	low Term_MainSm@Data
 14049  00115E  6F7D               	movwf	memset@p1& (0+255),b
 14050  001160  0E04               	movlw	high Term_MainSm@Data
 14051  001162  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14052  001164  0E00               	movlw	0
 14053  001166  6F80               	movwf	(memset@c+1)& (0+255),b
 14054  001168  0E00               	movlw	0
 14055  00116A  6F7F               	movwf	memset@c& (0+255),b
 14056  00116C  0E00               	movlw	0
 14057  00116E  6F82               	movwf	(memset@n+1)& (0+255),b
 14058  001170  0E32               	movlw	50
 14059  001172  6F81               	movwf	memset@n& (0+255),b
 14060  001174  ECD5  F033         	call	_memset	;wreg free
 14061                           
 14062                           ;term.c: 781: utoa(FwkMajorStr,1,10);
 14063  001178  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14064  00117A  0100               	movlb	0	; () banked
 14065  00117C  6F8A               	movwf	utoa@buf& (0+255),b
 14066  00117E  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14067  001180  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14068  001182  0E00               	movlw	0
 14069  001184  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14070  001186  0E01               	movlw	1
 14071  001188  6F8C               	movwf	utoa@val& (0+255),b
 14072  00118A  0E00               	movlw	0
 14073  00118C  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14074  00118E  0E0A               	movlw	10
 14075  001190  6F8E               	movwf	utoa@base& (0+255),b
 14076  001192  EC38  F024         	call	_utoa	;wreg free
 14077                           
 14078                           ;term.c: 782: utoa(FwkMinorStr,2,10);
 14079  001196  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14080  001198  0100               	movlb	0	; () banked
 14081  00119A  6F8A               	movwf	utoa@buf& (0+255),b
 14082  00119C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14083  00119E  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14084  0011A0  0E00               	movlw	0
 14085  0011A2  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14086  0011A4  0E02               	movlw	2
 14087  0011A6  6F8C               	movwf	utoa@val& (0+255),b
 14088  0011A8  0E00               	movlw	0
 14089  0011AA  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14090  0011AC  0E0A               	movlw	10
 14091  0011AE  6F8E               	movwf	utoa@base& (0+255),b
 14092  0011B0  EC38  F024         	call	_utoa	;wreg free
 14093                           
 14094                           ;term.c: 783: utoa(FwkBuildStr,0,10);
 14095  0011B4  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14096  0011B6  0100               	movlb	0	; () banked
 14097  0011B8  6F8A               	movwf	utoa@buf& (0+255),b
 14098  0011BA  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14099  0011BC  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14100  0011BE  0E00               	movlw	0
 14101  0011C0  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14102  0011C2  0E00               	movlw	0
 14103  0011C4  6F8C               	movwf	utoa@val& (0+255),b
 14104  0011C6  0E00               	movlw	0
 14105  0011C8  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14106  0011CA  0E0A               	movlw	10
 14107  0011CC  6F8E               	movwf	utoa@base& (0+255),b
 14108  0011CE  EC38  F024         	call	_utoa	;wreg free
 14109                           
 14110                           ;term.c: 784: strcpy(Data,"Framework Version: ");
 14111  0011D2  0E52               	movlw	low Term_MainSm@Data
 14112  0011D4  0100               	movlb	0	; () banked
 14113  0011D6  6F7D               	movwf	strcpy@to& (0+255),b
 14114  0011D8  0E04               	movlw	high Term_MainSm@Data
 14115  0011DA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14116  0011DC  0ED1               	movlw	low STR_23
 14117  0011DE  6F7F               	movwf	strcpy@from& (0+255),b
 14118  0011E0  0EFE               	movlw	high STR_23
 14119  0011E2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14120  0011E4  ECA4  F033         	call	_strcpy	;wreg free
 14121                           
 14122                           ;term.c: 785: strcat(Data,FwkMajorStr);
 14123  0011E8  0E52               	movlw	low Term_MainSm@Data
 14124  0011EA  0100               	movlb	0	; () banked
 14125  0011EC  6F7D               	movwf	strcat@to& (0+255),b
 14126  0011EE  0E04               	movlw	high Term_MainSm@Data
 14127  0011F0  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14128  0011F2  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14129  0011F4  6F7F               	movwf	strcat@from& (0+255),b
 14130  0011F6  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14131  0011F8  6F80               	movwf	(strcat@from+1)& (0+255),b
 14132  0011FA  EC4B  F02D         	call	_strcat	;wreg free
 14133                           
 14134                           ;term.c: 786: strcat(Data,".");
 14135  0011FE  0E52               	movlw	low Term_MainSm@Data
 14136  001200  0100               	movlb	0	; () banked
 14137  001202  6F7D               	movwf	strcat@to& (0+255),b
 14138  001204  0E04               	movlw	high Term_MainSm@Data
 14139  001206  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14140  001208  0EF4               	movlw	low STR_24
 14141  00120A  6F7F               	movwf	strcat@from& (0+255),b
 14142  00120C  0EFF               	movlw	high STR_24
 14143  00120E  6F80               	movwf	(strcat@from+1)& (0+255),b
 14144  001210  EC4B  F02D         	call	_strcat	;wreg free
 14145                           
 14146                           ;term.c: 787: strcat(Data,FwkMinorStr);
 14147  001214  0E52               	movlw	low Term_MainSm@Data
 14148  001216  0100               	movlb	0	; () banked
 14149  001218  6F7D               	movwf	strcat@to& (0+255),b
 14150  00121A  0E04               	movlw	high Term_MainSm@Data
 14151  00121C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14152  00121E  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14153  001220  6F7F               	movwf	strcat@from& (0+255),b
 14154  001222  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14155  001224  6F80               	movwf	(strcat@from+1)& (0+255),b
 14156  001226  EC4B  F02D         	call	_strcat	;wreg free
 14157                           
 14158                           ;term.c: 788: strcat(Data,".");
 14159  00122A  0E52               	movlw	low Term_MainSm@Data
 14160  00122C  0100               	movlb	0	; () banked
 14161  00122E  6F7D               	movwf	strcat@to& (0+255),b
 14162  001230  0E04               	movlw	high Term_MainSm@Data
 14163  001232  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14164  001234  0EF4               	movlw	low STR_24
 14165  001236  6F7F               	movwf	strcat@from& (0+255),b
 14166  001238  0EFF               	movlw	high STR_24
 14167  00123A  6F80               	movwf	(strcat@from+1)& (0+255),b
 14168  00123C  EC4B  F02D         	call	_strcat	;wreg free
 14169                           
 14170                           ;term.c: 789: strcat(Data,FwkBuildStr);
 14171  001240  0E52               	movlw	low Term_MainSm@Data
 14172  001242  0100               	movlb	0	; () banked
 14173  001244  6F7D               	movwf	strcat@to& (0+255),b
 14174  001246  0E04               	movlw	high Term_MainSm@Data
 14175  001248  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14176  00124A  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14177  00124C  6F7F               	movwf	strcat@from& (0+255),b
 14178  00124E  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14179  001250  6F80               	movwf	(strcat@from+1)& (0+255),b
 14180  001252  EC4B  F02D         	call	_strcat	;wreg free
 14181                           
 14182                           ;term.c: 790: strcat(Data,"\r\n");
 14183  001256  0E52               	movlw	low Term_MainSm@Data
 14184  001258  0100               	movlb	0	; () banked
 14185  00125A  6F7D               	movwf	strcat@to& (0+255),b
 14186  00125C  0E04               	movlw	high Term_MainSm@Data
 14187  00125E  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14188  001260  0E85               	movlw	low (STR_21+39)
 14189  001262  6F7F               	movwf	strcat@from& (0+255),b
 14190  001264  0EFE               	movlw	high (STR_21+39)
 14191  001266  6F80               	movwf	(strcat@from+1)& (0+255),b
 14192  001268  EC4B  F02D         	call	_strcat	;wreg free
 14193                           
 14194                           ;term.c: 792: putUSBUSART((void*)Data,strlen(Data));
 14195  00126C  0E52               	movlw	low Term_MainSm@Data
 14196  00126E  0100               	movlb	0	; () banked
 14197  001270  6F83               	movwf	putUSBUSART@data& (0+255),b
 14198  001272  0E04               	movlw	high Term_MainSm@Data
 14199  001274  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14200  001276  0E52               	movlw	low Term_MainSm@Data
 14201  001278  6F7D               	movwf	strlen@s& (0+255),b
 14202  00127A  0E04               	movlw	high Term_MainSm@Data
 14203  00127C  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14204  00127E  EC2F  F032         	call	_strlen	;wreg free
 14205  001282  0100               	movlb	0	; () banked
 14206  001284  517D               	movf	?_strlen& (0+255),w,b
 14207  001286  6F85               	movwf	putUSBUSART@length& (0+255),b
 14208  001288  EC2D  F035         	call	_putUSBUSART	;wreg free
 14209                           
 14210                           ;term.c: 794: TermMainSmState = Term_FwkBuildDateState;
 14211  00128C  0E06               	movlw	6
 14212  00128E  0102               	movlb	2	; () banked
 14213  001290  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14214                           
 14215                           ; BSR set to: 2
 14216                           ;term.c: 795: }
 14217                           ;term.c: 796: break;
 14218  001292  0012               	return	
 14219  001294                     
 14220                           ; BSR set to: 2
 14221                           ;term.c: 800: if((cdc_trf_state == 0))
 14222                           
 14223                           ; BSR set to: 2
 14224  001294  0100               	movlb	0	; () banked
 14225  001296  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14226  001298  A4D8               	btfss	status,2,c
 14227  00129A  0012               	return	
 14228                           
 14229                           ; BSR set to: 0
 14230                           ;term.c: 801: {
 14231                           ;term.c: 803: memset(Data,0,50);
 14232  00129C  0E52               	movlw	low Term_MainSm@Data
 14233  00129E  6F7D               	movwf	memset@p1& (0+255),b
 14234  0012A0  0E04               	movlw	high Term_MainSm@Data
 14235  0012A2  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14236  0012A4  0E00               	movlw	0
 14237  0012A6  6F80               	movwf	(memset@c+1)& (0+255),b
 14238  0012A8  0E00               	movlw	0
 14239  0012AA  6F7F               	movwf	memset@c& (0+255),b
 14240  0012AC  0E00               	movlw	0
 14241  0012AE  6F82               	movwf	(memset@n+1)& (0+255),b
 14242  0012B0  0E32               	movlw	50
 14243  0012B2  6F81               	movwf	memset@n& (0+255),b
 14244  0012B4  ECD5  F033         	call	_memset	;wreg free
 14245                           
 14246                           ;term.c: 805: sprintf(Data,"Build Date: %s\r\n","Apr  3 2022");
 14247  0012B8  0E52               	movlw	low Term_MainSm@Data
 14248  0012BA  0100               	movlb	0	; () banked
 14249  0012BC  6F7D               	movwf	sprintf@sp& (0+255),b
 14250  0012BE  0E04               	movlw	high Term_MainSm@Data
 14251  0012C0  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14252  0012C2  0E0C               	movlw	low STR_27
 14253  0012C4  6F7F               	movwf	sprintf@f& (0+255),b
 14254  0012C6  0EFF               	movlw	high STR_27
 14255  0012C8  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14256  0012CA  0EB5               	movlw	low STR_28
 14257  0012CC  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14258  0012CE  0EFF               	movlw	high STR_28
 14259  0012D0  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14260  0012D2  EC2E  F01E         	call	_sprintf	;wreg free
 14261                           
 14262                           ;term.c: 807: putUSBUSART((void*)Data,strlen(Data));
 14263  0012D6  0E52               	movlw	low Term_MainSm@Data
 14264  0012D8  0100               	movlb	0	; () banked
 14265  0012DA  6F83               	movwf	putUSBUSART@data& (0+255),b
 14266  0012DC  0E04               	movlw	high Term_MainSm@Data
 14267  0012DE  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14268  0012E0  0E52               	movlw	low Term_MainSm@Data
 14269  0012E2  6F7D               	movwf	strlen@s& (0+255),b
 14270  0012E4  0E04               	movlw	high Term_MainSm@Data
 14271  0012E6  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14272  0012E8  EC2F  F032         	call	_strlen	;wreg free
 14273  0012EC  0100               	movlb	0	; () banked
 14274  0012EE  517D               	movf	?_strlen& (0+255),w,b
 14275  0012F0  6F85               	movwf	putUSBUSART@length& (0+255),b
 14276  0012F2  EC2D  F035         	call	_putUSBUSART	;wreg free
 14277                           
 14278                           ;term.c: 809: TermMainSmState = Term_SysInitState;
 14279  0012F6  0E07               	movlw	7
 14280  0012F8  0102               	movlb	2	; () banked
 14281  0012FA  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14282                           
 14283                           ; BSR set to: 2
 14284                           ;term.c: 810: }
 14285                           ;term.c: 811: break;
 14286  0012FC  0012               	return	
 14287  0012FE                     
 14288                           ; BSR set to: 2
 14289                           ;term.c: 815: if((cdc_trf_state == 0))
 14290                           
 14291                           ; BSR set to: 2
 14292  0012FE  0100               	movlb	0	; () banked
 14293  001300  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14294  001302  A4D8               	btfss	status,2,c
 14295  001304  0012               	return	
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;term.c: 816: {
 14299                           ;term.c: 818: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14300  001306  0E31               	movlw	low _MsgReady
 14301  001308  6F83               	movwf	putUSBUSART@data& (0+255),b
 14302  00130A  0EFE               	movlw	high _MsgReady
 14303  00130C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14304  00130E  0E16               	movlw	22
 14305  001310  6F85               	movwf	putUSBUSART@length& (0+255),b
 14306  001312  EC2D  F035         	call	_putUSBUSART	;wreg free
 14307                           
 14308                           ;term.c: 820: TermMainSmState = Term_FinalState;
 14309  001316  0E08               	movlw	8
 14310  001318  0102               	movlb	2	; () banked
 14311  00131A  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14312                           
 14313                           ; BSR set to: 2
 14314                           ;term.c: 821: }
 14315                           ;term.c: 822: break;
 14316  00131C  0012               	return	
 14317  00131E                     
 14318                           ; BSR set to: 2
 14319                           ;term.c: 826: Terminal();
 14320                           
 14321                           ; BSR set to: 2
 14322  00131E  EC68  F000         	call	_Terminal	;wreg free
 14323                           
 14324                           ;term.c: 831: }
 14325                           
 14326                           ;term.c: 830: break;
 14327                           
 14328                           ;term.c: 829: default:
 14329                           
 14330                           ;term.c: 827: break;
 14331  001322  0012               	return	
 14332  001324                     l2474:
 14333  001324  0102               	movlb	2	; () banked
 14334  001326  51E7               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14335                           
 14336                           ; Switch size 1, requested type "space"
 14337                           ; Number of cases is 9, Range of values is 0 to 8
 14338                           ; switch strategies available:
 14339                           ; Name         Instructions Cycles
 14340                           ; simple_byte           28    15 (average)
 14341                           ;	Chosen strategy is simple_byte
 14342  001328  0A00               	xorlw	0	; case 0
 14343  00132A  B4D8               	btfsc	status,2,c
 14344  00132C  D6C8               	goto	l2475
 14345  00132E  0A01               	xorlw	1	; case 1
 14346  001330  B4D8               	btfsc	status,2,c
 14347  001332  D6D8               	goto	l2477
 14348  001334  0A03               	xorlw	3	; case 2
 14349  001336  B4D8               	btfsc	status,2,c
 14350  001338  D6E3               	goto	l2479
 14351  00133A  0A01               	xorlw	1	; case 3
 14352  00133C  B4D8               	btfsc	status,2,c
 14353  00133E  D6EA               	goto	l2484
 14354  001340  0A07               	xorlw	7	; case 4
 14355  001342  B4D8               	btfsc	status,2,c
 14356  001344  D6F7               	goto	l2486
 14357  001346  0A01               	xorlw	1	; case 5
 14358  001348  B4D8               	btfsc	status,2,c
 14359  00134A  D704               	goto	l2488
 14360  00134C  0A03               	xorlw	3	; case 6
 14361  00134E  B4D8               	btfsc	status,2,c
 14362  001350  D7A1               	goto	l2490
 14363  001352  0A01               	xorlw	1	; case 7
 14364  001354  B4D8               	btfsc	status,2,c
 14365  001356  D7D3               	goto	l2492
 14366  001358  0A0F               	xorlw	15	; case 8
 14367  00135A  A4D8               	btfss	status,2,c
 14368  00135C  0012               	return	
 14369  00135E  D7DF               	goto	l2494
 14370  001360                     __end_of_Term_MainSm:
 14371                           	opt stack 0
 14372                           tosu	equ	0xFFF
 14373                           tosh	equ	0xFFE
 14374                           tosl	equ	0xFFD
 14375                           pclath	equ	0xFFA
 14376                           tblptru	equ	0xFF8
 14377                           tblptrh	equ	0xFF7
 14378                           tblptrl	equ	0xFF6
 14379                           tablat	equ	0xFF5
 14380                           prodh	equ	0xFF4
 14381                           prodl	equ	0xFF3
 14382                           intcon	equ	0xFF2
 14383                           intcon2	equ	0xFF1
 14384                           intcon3	equ	0xFF0
 14385                           indf0	equ	0xFEF
 14386                           postinc0	equ	0xFEE
 14387                           plusw0	equ	0xFEB
 14388                           fsr0h	equ	0xFEA
 14389                           fsr0l	equ	0xFE9
 14390                           wreg	equ	0xFE8
 14391                           indf1	equ	0xFE7
 14392                           postinc1	equ	0xFE6
 14393                           postdec1	equ	0xFE5
 14394                           fsr1h	equ	0xFE2
 14395                           fsr1l	equ	0xFE1
 14396                           indf2	equ	0xFDF
 14397                           postinc2	equ	0xFDE
 14398                           postdec2	equ	0xFDD
 14399                           plusw2	equ	0xFDB
 14400                           fsr2h	equ	0xFDA
 14401                           fsr2l	equ	0xFD9
 14402                           status	equ	0xFD8
 14403                           
 14404 ;; *************** function _strlen *****************
 14405 ;; Defined at:
 14406 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14407 ;; Parameters:    Size  Location     Type
 14408 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14409 ;;		 -> Term_MainSm@Data(50), 
 14410 ;; Auto vars:     Size  Location     Type
 14411 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14412 ;;		 -> Term_MainSm@Data(50), 
 14413 ;; Return value:  Size  Location     Type
 14414 ;;                  2   29[BANK0 ] unsigned int 
 14415 ;; Registers used:
 14416 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14417 ;; Tracked objects:
 14418 ;;		On entry : 0/0
 14419 ;;		On exit  : 0/0
 14420 ;;		Unchanged: 0/0
 14421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14422 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14423 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14424 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14425 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14426 ;;Total ram usage:        6 bytes
 14427 ;; Hardware stack levels used:    1
 14428 ;; Hardware stack levels required when called:   11
 14429 ;; This function calls:
 14430 ;;		Nothing
 14431 ;; This function is called by:
 14432 ;;		_Term_MainSm
 14433 ;; This function uses a non-reentrant model
 14434 ;;
 14435                           
 14436                           	psect	text56
 14437  00645E                     __ptext56:
 14438                           	opt stack 0
 14439  00645E                     _strlen:
 14440                           	opt stack 15
 14441                           
 14442                           ;incstack = 0
 14443  00645E  C07D  F081         	movff	strlen@s,strlen@cp
 14444  006462  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14445  006466  D003               	goto	l3601
 14446  006468  0100               	movlb	0	; () banked
 14447  00646A  4B81               	infsnz	strlen@cp& (0+255),f,b
 14448  00646C  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14449  00646E                     l3601:
 14450                           
 14451                           ; BSR set to: 0
 14452  00646E  C081  FFD9         	movff	strlen@cp,fsr2l
 14453  006472  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14454  006476  50DF               	movf	indf2,w,c
 14455  006478  A4D8               	btfss	status,2,c
 14456  00647A  D7F6               	goto	l3602
 14457  00647C  C07D  F07F         	movff	strlen@s,??_strlen
 14458  006480  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14459  006484  0100               	movlb	0	; () banked
 14460  006486  1F7F               	comf	??_strlen& (0+255),f,b
 14461  006488  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14462  00648A  4B7F               	infsnz	??_strlen& (0+255),f,b
 14463  00648C  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14464  00648E  5181               	movf	strlen@cp& (0+255),w,b
 14465  006490  257F               	addwf	??_strlen& (0+255),w,b
 14466  006492  6F7D               	movwf	?_strlen& (0+255),b
 14467  006494  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14468  006496  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14469  006498  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14470  00649A  0012               	return	
 14471  00649C                     __end_of_strlen:
 14472                           	opt stack 0
 14473                           tosu	equ	0xFFF
 14474                           tosh	equ	0xFFE
 14475                           tosl	equ	0xFFD
 14476                           pclath	equ	0xFFA
 14477                           tblptru	equ	0xFF8
 14478                           tblptrh	equ	0xFF7
 14479                           tblptrl	equ	0xFF6
 14480                           tablat	equ	0xFF5
 14481                           prodh	equ	0xFF4
 14482                           prodl	equ	0xFF3
 14483                           intcon	equ	0xFF2
 14484                           intcon2	equ	0xFF1
 14485                           intcon3	equ	0xFF0
 14486                           indf0	equ	0xFEF
 14487                           postinc0	equ	0xFEE
 14488                           plusw0	equ	0xFEB
 14489                           fsr0h	equ	0xFEA
 14490                           fsr0l	equ	0xFE9
 14491                           wreg	equ	0xFE8
 14492                           indf1	equ	0xFE7
 14493                           postinc1	equ	0xFE6
 14494                           postdec1	equ	0xFE5
 14495                           fsr1h	equ	0xFE2
 14496                           fsr1l	equ	0xFE1
 14497                           indf2	equ	0xFDF
 14498                           postinc2	equ	0xFDE
 14499                           postdec2	equ	0xFDD
 14500                           plusw2	equ	0xFDB
 14501                           fsr2h	equ	0xFDA
 14502                           fsr2l	equ	0xFD9
 14503                           status	equ	0xFD8
 14504                           
 14505 ;; *************** function _strcat *****************
 14506 ;; Defined at:
 14507 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14508 ;; Parameters:    Size  Location     Type
 14509 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14510 ;;		 -> Term_MainSm@Data(50), 
 14511 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14512 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14513 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14514 ;; Auto vars:     Size  Location     Type
 14515 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14516 ;;		 -> Term_MainSm@Data(50), 
 14517 ;; Return value:  Size  Location     Type
 14518 ;;                  2   29[BANK0 ] PTR unsigned char 
 14519 ;; Registers used:
 14520 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14521 ;; Tracked objects:
 14522 ;;		On entry : 0/0
 14523 ;;		On exit  : 0/0
 14524 ;;		Unchanged: 0/0
 14525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14526 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14527 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14529 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14530 ;;Total ram usage:        6 bytes
 14531 ;; Hardware stack levels used:    1
 14532 ;; Hardware stack levels required when called:   11
 14533 ;; This function calls:
 14534 ;;		Nothing
 14535 ;; This function is called by:
 14536 ;;		_Term_MainSm
 14537 ;; This function uses a non-reentrant model
 14538 ;;
 14539                           
 14540                           	psect	text57
 14541  005A96                     __ptext57:
 14542                           	opt stack 0
 14543  005A96                     _strcat:
 14544                           	opt stack 15
 14545                           
 14546                           ; BSR set to: 0
 14547                           ;incstack = 0
 14548  005A96  C07D  F081         	movff	strcat@to,strcat@cp
 14549  005A9A  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14550  005A9E  D003               	goto	l3586
 14551  005AA0  0100               	movlb	0	; () banked
 14552  005AA2  4B81               	infsnz	strcat@cp& (0+255),f,b
 14553  005AA4  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14554  005AA6                     l3586:
 14555                           
 14556                           ; BSR set to: 0
 14557  005AA6  C081  FFD9         	movff	strcat@cp,fsr2l
 14558  005AAA  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14559  005AAE  50DF               	movf	indf2,w,c
 14560  005AB0  B4D8               	btfsc	status,2,c
 14561  005AB2  D006               	goto	l3589
 14562  005AB4  D7F5               	goto	l3587
 14563  005AB6  0100               	movlb	0	; () banked
 14564  005AB8  4B81               	infsnz	strcat@cp& (0+255),f,b
 14565  005ABA  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14566  005ABC  4B7F               	infsnz	strcat@from& (0+255),f,b
 14567  005ABE  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14568  005AC0                     l3589:
 14569                           
 14570                           ; BSR set to: 0
 14571  005AC0  C07F  FFF6         	movff	strcat@from,tblptrl
 14572  005AC4  C080  FFF7         	movff	strcat@from+1,tblptrh
 14573  005AC8  6AF8               	clrf	tblptru,c
 14574  005ACA  C081  FFD9         	movff	strcat@cp,fsr2l
 14575  005ACE  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14576  005AD2  0E0E               	movlw	(high __ramtop+-1)
 14577  005AD4  64F7               	cpfsgt	tblptrh,c
 14578  005AD6  D003               	bra	u14617
 14579  005AD8  0008               	tblrd		*
 14580  005ADA  50F5               	movf	tablat,w,c
 14581  005ADC  D005               	bra	u14610
 14582  005ADE                     u14617:
 14583  005ADE  CFF6 FFE9          	movff	tblptrl,fsr0l
 14584  005AE2  CFF7 FFEA          	movff	tblptrh,fsr0h
 14585  005AE6  50EF               	movf	indf0,w,c
 14586  005AE8                     u14610:
 14587  005AE8  6EDF               	movwf	indf2,c
 14588  005AEA  50DF               	movf	indf2,w,c
 14589  005AEC  B4D8               	btfsc	status,2,c
 14590  005AEE  0012               	return	
 14591  005AF0  D7E2               	goto	l3590
 14592  005AF2                     __end_of_strcat:
 14593                           	opt stack 0
 14594                           tosu	equ	0xFFF
 14595                           tosh	equ	0xFFE
 14596                           tosl	equ	0xFFD
 14597                           pclath	equ	0xFFA
 14598                           tblptru	equ	0xFF8
 14599                           tblptrh	equ	0xFF7
 14600                           tblptrl	equ	0xFF6
 14601                           tablat	equ	0xFF5
 14602                           prodh	equ	0xFF4
 14603                           prodl	equ	0xFF3
 14604                           intcon	equ	0xFF2
 14605                           intcon2	equ	0xFF1
 14606                           intcon3	equ	0xFF0
 14607                           indf0	equ	0xFEF
 14608                           postinc0	equ	0xFEE
 14609                           plusw0	equ	0xFEB
 14610                           fsr0h	equ	0xFEA
 14611                           fsr0l	equ	0xFE9
 14612                           wreg	equ	0xFE8
 14613                           indf1	equ	0xFE7
 14614                           postinc1	equ	0xFE6
 14615                           postdec1	equ	0xFE5
 14616                           fsr1h	equ	0xFE2
 14617                           fsr1l	equ	0xFE1
 14618                           indf2	equ	0xFDF
 14619                           postinc2	equ	0xFDE
 14620                           postdec2	equ	0xFDD
 14621                           plusw2	equ	0xFDB
 14622                           fsr2h	equ	0xFDA
 14623                           fsr2l	equ	0xFD9
 14624                           status	equ	0xFD8
 14625                           
 14626 ;; *************** function _sprintf *****************
 14627 ;; Defined at:
 14628 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14629 ;; Parameters:    Size  Location     Type
 14630 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14631 ;;		 -> Term_MainSm@Data(50), 
 14632 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14633 ;;		 -> STR_27(17), 
 14634 ;; Auto vars:     Size  Location     Type
 14635 ;;  tmpval          4    0        struct .
 14636 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14637 ;;		 -> STR_32(7), STR_28(12), 
 14638 ;;  ap              2   36[BANK0 ] PTR void [1]
 14639 ;;		 -> ?_sprintf(2), 
 14640 ;;  len             2    0        unsigned int 
 14641 ;;  val             2    0        unsigned int 
 14642 ;;  c               1   38[BANK0 ] char 
 14643 ;;  flag            1   35[BANK0 ] unsigned char 
 14644 ;;  prec            1    0        char 
 14645 ;; Return value:  Size  Location     Type
 14646 ;;                  2   29[BANK0 ] int 
 14647 ;; Registers used:
 14648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14649 ;; Tracked objects:
 14650 ;;		On entry : 0/0
 14651 ;;		On exit  : 0/0
 14652 ;;		Unchanged: 0/0
 14653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14654 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14655 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14657 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14658 ;;Total ram usage:       12 bytes
 14659 ;; Hardware stack levels used:    1
 14660 ;; Hardware stack levels required when called:   11
 14661 ;; This function calls:
 14662 ;;		Nothing
 14663 ;; This function is called by:
 14664 ;;		_Term_MainSm
 14665 ;; This function uses a non-reentrant model
 14666 ;;
 14667                           
 14668                           	psect	text58
 14669  003C5C                     __ptext58:
 14670                           	opt stack 0
 14671  003C5C                     _sprintf:
 14672                           	opt stack 15
 14673                           
 14674                           ;doprnt.c: 494: va_list ap;
 14675                           ;doprnt.c: 499: signed char c;
 14676                           ;doprnt.c: 506: signed char prec;
 14677                           ;doprnt.c: 508: unsigned char flag;
 14678                           ;doprnt.c: 523: union {
 14679                           ;doprnt.c: 524: unsigned long vd;
 14680                           ;doprnt.c: 525: double integ;
 14681                           ;doprnt.c: 526: } tmpval;
 14682                           ;doprnt.c: 528: unsigned int val;
 14683                           ;doprnt.c: 529: unsigned len;
 14684                           ;doprnt.c: 530: const char * cp;
 14685                           ;doprnt.c: 533: *ap = __va_start();
 14686                           
 14687                           ;incstack = 0
 14688  003C5C  0E81               	movlw	low (?_sprintf+4)
 14689  003C5E  0100               	movlb	0	; () banked
 14690  003C60  6F84               	movwf	sprintf@ap& (0+255),b
 14691  003C62  0E00               	movlw	high (?_sprintf+4)
 14692  003C64  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14693                           
 14694                           ;doprnt.c: 536: while(c = *f++) {
 14695  003C66  D04E               	goto	l2990
 14696  003C68                     
 14697                           ; BSR set to: 0
 14698                           ;doprnt.c: 538: if(c != '%')
 14699                           
 14700                           ; BSR set to: 0
 14701  003C68  0E25               	movlw	37
 14702  003C6A  1986               	xorwf	sprintf@c& (0+255),w,b
 14703  003C6C  B4D8               	btfsc	status,2,c
 14704  003C6E  D009               	goto	l2980
 14705                           
 14706                           ; BSR set to: 0
 14707                           ;doprnt.c: 540: {
 14708                           ;doprnt.c: 541: ((*sp++ = (c)));
 14709  003C70  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14710  003C74  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14711  003C78  C086  FFDF         	movff	sprintf@c,indf2
 14712                           
 14713                           ; BSR set to: 0
 14714  003C7C  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14715  003C7E  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14716                           
 14717                           ;doprnt.c: 542: continue;
 14718  003C80  D041               	goto	l2990
 14719  003C82                     l2980:
 14720                           
 14721                           ; BSR set to: 0
 14722                           ;doprnt.c: 543: }
 14723                           ;doprnt.c: 548: flag = 0;
 14724                           
 14725                           ; BSR set to: 0
 14726  003C82  0E00               	movlw	0
 14727  003C84  6F83               	movwf	sprintf@flag& (0+255),b
 14728                           
 14729                           ;doprnt.c: 635: switch(c = *f++) {
 14730  003C86  D02E               	goto	l2981
 14731  003C88                     
 14732                           ; BSR set to: 0
 14733                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14734                           
 14735                           ; BSR set to: 0
 14736  003C88  C084  FFD9         	movff	sprintf@ap,fsr2l
 14737  003C8C  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14738  003C90  CFDE F087          	movff	postinc2,sprintf@cp
 14739  003C94  CFDD F088          	movff	postdec2,sprintf@cp+1
 14740                           
 14741                           ; BSR set to: 0
 14742  003C98  0E02               	movlw	2
 14743  003C9A  2784               	addwf	sprintf@ap& (0+255),f,b
 14744  003C9C  0E00               	movlw	0
 14745  003C9E  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14746                           
 14747                           ; BSR set to: 0
 14748                           ;doprnt.c: 740: if(!cp)
 14749  003CA0  5187               	movf	sprintf@cp& (0+255),w,b
 14750  003CA2  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14751  003CA4  A4D8               	btfss	status,2,c
 14752  003CA6  D014               	goto	l2986
 14753                           
 14754                           ; BSR set to: 0
 14755                           ;doprnt.c: 741: cp = "(null)";
 14756  003CA8  0ED7               	movlw	low STR_32
 14757  003CAA  6F87               	movwf	sprintf@cp& (0+255),b
 14758  003CAC  0EFF               	movlw	high STR_32
 14759  003CAE  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14760                           
 14761                           ; BSR set to: 0
 14762                           ;doprnt.c: 777: while(*cp)
 14763  003CB0  D00F               	goto	l2986
 14764  003CB2                     
 14765                           ; BSR set to: 0
 14766                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14767                           
 14768                           ; BSR set to: 0
 14769  003CB2  C087  FFF6         	movff	sprintf@cp,tblptrl
 14770  003CB6  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14771  003CBA                     	if	0	;tblptru may be non-zero
 14772  003CBA                     	endif
 14773  003CBA                     	if	0	;tblptru may be non-zero
 14774  003CBA                     	endif
 14775  003CBA  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14776  003CBE  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14777  003CC2  0008               	tblrd		*
 14778  003CC4  CFF5 FFDF          	movff	tablat,indf2
 14779                           
 14780                           ; BSR set to: 0
 14781  003CC8  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14782  003CCA  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14783                           
 14784                           ; BSR set to: 0
 14785  003CCC  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14786  003CCE  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14787  003CD0                     l2986:
 14788                           
 14789                           ; BSR set to: 0
 14790                           
 14791                           ; BSR set to: 0
 14792  003CD0  C087  FFF6         	movff	sprintf@cp,tblptrl
 14793  003CD4  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14794  003CD8                     	if	0	;tblptru may be non-zero
 14795  003CD8                     	endif
 14796  003CD8                     	if	0	;tblptru may be non-zero
 14797  003CD8                     	endif
 14798  003CD8  0008               	tblrd		*
 14799  003CDA  50F5               	movf	tablat,w,c
 14800  003CDC  0900               	iorlw	0
 14801  003CDE  B4D8               	btfsc	status,2,c
 14802  003CE0  D011               	goto	l2990
 14803  003CE2  D7E7               	goto	l2987
 14804  003CE4                     l2981:
 14805                           
 14806                           ; BSR set to: 0
 14807                           
 14808                           ; BSR set to: 0
 14809  003CE4  C07F  FFF6         	movff	sprintf@f,tblptrl
 14810  003CE8  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14811  003CEC  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14812  003CEE  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14813  003CF0                     	if	0	;tblptru may be non-zero
 14814  003CF0                     	endif
 14815  003CF0                     	if	0	;tblptru may be non-zero
 14816  003CF0                     	endif
 14817  003CF0  0008               	tblrd		*
 14818  003CF2  CFF5 F086          	movff	tablat,sprintf@c
 14819  003CF6  5186               	movf	sprintf@c& (0+255),w,b
 14820                           
 14821                           ; Switch size 1, requested type "space"
 14822                           ; Number of cases is 2, Range of values is 0 to 115
 14823                           ; switch strategies available:
 14824                           ; Name         Instructions Cycles
 14825                           ; simple_byte            7     4 (average)
 14826                           ;	Chosen strategy is simple_byte
 14827  003CF8  0A00               	xorlw	0	; case 0
 14828  003CFA  B4D8               	btfsc	status,2,c
 14829  003CFC  D00F               	goto	u14670
 14830  003CFE  0A73               	xorlw	115	; case 115
 14831  003D00  B4D8               	btfsc	status,2,c
 14832  003D02  D7C2               	goto	l2984
 14833  003D04                     l2990:
 14834                           
 14835                           ; BSR set to: 0
 14836                           
 14837                           ; BSR set to: 0
 14838                           
 14839                           ;doprnt.c: 1422: {
 14840                           
 14841                           ; BSR set to: 0
 14842  003D04  C07F  FFF6         	movff	sprintf@f,tblptrl
 14843  003D08  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14844  003D0C  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14845  003D0E  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14846  003D10                     	if	0	;tblptru may be non-zero
 14847  003D10                     	endif
 14848  003D10                     	if	0	;tblptru may be non-zero
 14849  003D10                     	endif
 14850  003D10  0008               	tblrd		*
 14851  003D12  CFF5 F086          	movff	tablat,sprintf@c
 14852  003D16  5186               	movf	sprintf@c& (0+255),w,b
 14853  003D18  A4D8               	btfss	status,2,c
 14854  003D1A  D7A6               	goto	l2979
 14855  003D1C                     u14670:
 14856                           
 14857                           ; BSR set to: 0
 14858                           ;doprnt.c: 1538: *sp = 0;
 14859                           
 14860                           ; BSR set to: 0
 14861                           
 14862                           ;doprnt.c: 1469: }
 14863                           ;doprnt.c: 1533: }
 14864                           ;doprnt.c: 1535: alldone:
 14865                           
 14866                           ; BSR set to: 0
 14867  003D1C  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14868  003D20  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14869  003D24  0E00               	movlw	0
 14870  003D26  6EDF               	movwf	indf2,c
 14871  003D28  0012               	return	
 14872  003D2A                     __end_of_sprintf:
 14873                           	opt stack 0
 14874                           tosu	equ	0xFFF
 14875                           tosh	equ	0xFFE
 14876                           tosl	equ	0xFFD
 14877                           pclath	equ	0xFFA
 14878                           tblptru	equ	0xFF8
 14879                           tblptrh	equ	0xFF7
 14880                           tblptrl	equ	0xFF6
 14881                           tablat	equ	0xFF5
 14882                           prodh	equ	0xFF4
 14883                           prodl	equ	0xFF3
 14884                           intcon	equ	0xFF2
 14885                           intcon2	equ	0xFF1
 14886                           intcon3	equ	0xFF0
 14887                           indf0	equ	0xFEF
 14888                           postinc0	equ	0xFEE
 14889                           plusw0	equ	0xFEB
 14890                           fsr0h	equ	0xFEA
 14891                           fsr0l	equ	0xFE9
 14892                           wreg	equ	0xFE8
 14893                           indf1	equ	0xFE7
 14894                           postinc1	equ	0xFE6
 14895                           postdec1	equ	0xFE5
 14896                           fsr1h	equ	0xFE2
 14897                           fsr1l	equ	0xFE1
 14898                           indf2	equ	0xFDF
 14899                           postinc2	equ	0xFDE
 14900                           postdec2	equ	0xFDD
 14901                           plusw2	equ	0xFDB
 14902                           fsr2h	equ	0xFDA
 14903                           fsr2l	equ	0xFD9
 14904                           status	equ	0xFD8
 14905                           
 14906 ;; *************** function _memset *****************
 14907 ;; Defined at:
 14908 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14909 ;; Parameters:    Size  Location     Type
 14910 ;;  p1              2   29[BANK0 ] PTR void 
 14911 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14912 ;;  c               2   31[BANK0 ] int 
 14913 ;;  n               2   33[BANK0 ] unsigned int 
 14914 ;; Auto vars:     Size  Location     Type
 14915 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14916 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14917 ;; Return value:  Size  Location     Type
 14918 ;;                  2   29[BANK0 ] PTR void 
 14919 ;; Registers used:
 14920 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14921 ;; Tracked objects:
 14922 ;;		On entry : 0/0
 14923 ;;		On exit  : 0/0
 14924 ;;		Unchanged: 0/0
 14925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14926 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14927 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14929 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14930 ;;Total ram usage:        8 bytes
 14931 ;; Hardware stack levels used:    1
 14932 ;; Hardware stack levels required when called:   11
 14933 ;; This function calls:
 14934 ;;		Nothing
 14935 ;; This function is called by:
 14936 ;;		_USBDeviceInit
 14937 ;;		_USBStdSetCfgHandler
 14938 ;;		_Term_MainSm
 14939 ;; This function uses a non-reentrant model
 14940 ;;
 14941                           
 14942                           	psect	text59
 14943  0067AA                     __ptext59:
 14944                           	opt stack 0
 14945  0067AA                     _memset:
 14946                           	opt stack 14
 14947                           
 14948                           ; BSR set to: 0
 14949                           ;incstack = 0
 14950  0067AA  C07D  F083         	movff	memset@p1,memset@p
 14951  0067AE  C07E  F084         	movff	memset@p1+1,memset@p+1
 14952  0067B2  D009               	goto	l3460
 14953  0067B4                     l13249:
 14954  0067B4  C083  FFD9         	movff	memset@p,fsr2l
 14955  0067B8  C084  FFDA         	movff	memset@p+1,fsr2h
 14956  0067BC  C07F  FFDF         	movff	memset@c,indf2
 14957  0067C0  0100               	movlb	0	; () banked
 14958  0067C2  4B83               	infsnz	memset@p& (0+255),f,b
 14959  0067C4  2B84               	incf	(memset@p+1)& (0+255),f,b
 14960  0067C6                     l3460:
 14961                           
 14962                           ; BSR set to: 0
 14963  0067C6  0100               	movlb	0	; () banked
 14964  0067C8  0781               	decf	memset@n& (0+255),f,b
 14965  0067CA  A0D8               	btfss	status,0,c
 14966  0067CC  0782               	decf	(memset@n+1)& (0+255),f,b
 14967  0067CE  2981               	incf	memset@n& (0+255),w,b
 14968  0067D0  E1F1               	bnz	l13249
 14969  0067D2  2982               	incf	(memset@n+1)& (0+255),w,b
 14970  0067D4  B4D8               	btfsc	status,2,c
 14971  0067D6  0012               	return	
 14972  0067D8  D7ED               	goto	l3461
 14973  0067DA                     __end_of_memset:
 14974                           	opt stack 0
 14975                           tosu	equ	0xFFF
 14976                           tosh	equ	0xFFE
 14977                           tosl	equ	0xFFD
 14978                           pclath	equ	0xFFA
 14979                           tblptru	equ	0xFF8
 14980                           tblptrh	equ	0xFF7
 14981                           tblptrl	equ	0xFF6
 14982                           tablat	equ	0xFF5
 14983                           prodh	equ	0xFF4
 14984                           prodl	equ	0xFF3
 14985                           intcon	equ	0xFF2
 14986                           intcon2	equ	0xFF1
 14987                           intcon3	equ	0xFF0
 14988                           indf0	equ	0xFEF
 14989                           postinc0	equ	0xFEE
 14990                           plusw0	equ	0xFEB
 14991                           fsr0h	equ	0xFEA
 14992                           fsr0l	equ	0xFE9
 14993                           wreg	equ	0xFE8
 14994                           indf1	equ	0xFE7
 14995                           postinc1	equ	0xFE6
 14996                           postdec1	equ	0xFE5
 14997                           fsr1h	equ	0xFE2
 14998                           fsr1l	equ	0xFE1
 14999                           indf2	equ	0xFDF
 15000                           postinc2	equ	0xFDE
 15001                           postdec2	equ	0xFDD
 15002                           plusw2	equ	0xFDB
 15003                           fsr2h	equ	0xFDA
 15004                           fsr2l	equ	0xFD9
 15005                           status	equ	0xFD8
 15006                           
 15007 ;; *************** function _Terminal *****************
 15008 ;; Defined at:
 15009 ;;		line 429 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 15010 ;; Parameters:    Size  Location     Type
 15011 ;;		None
 15012 ;; Auto vars:     Size  Location     Type
 15013 ;;  i               1   68[BANK0 ] unsigned char 
 15014 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 15015 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 15016 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 15017 ;;  Index           1   70[BANK0 ] unsigned char 
 15018 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 15019 ;; Return value:  Size  Location     Type
 15020 ;;                  1    wreg      void 
 15021 ;; Registers used:
 15022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15023 ;; Tracked objects:
 15024 ;;		On entry : 0/0
 15025 ;;		On exit  : 0/0
 15026 ;;		Unchanged: 0/0
 15027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15029 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15030 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15031 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15032 ;;Total ram usage:      455 bytes
 15033 ;; Hardware stack levels used:    1
 15034 ;; Hardware stack levels required when called:   15
 15035 ;; This function calls:
 15036 ;;		_I2cSlv_I2cReadMsgSts
 15037 ;;		_I2cSlv_ReceiveI2cMsg
 15038 ;;		_I2cSlv_SendI2cMsg
 15039 ;;		_OsTmr_Wait
 15040 ;;		_atoi
 15041 ;;		_getsUSBUSART
 15042 ;;		_itoa
 15043 ;;		_putUSBUSART
 15044 ;;		_strcpy
 15045 ;;		_strtol
 15046 ;;		_xtoi
 15047 ;; This function is called by:
 15048 ;;		_Term_MainSm
 15049 ;; This function uses a non-reentrant model
 15050 ;;
 15051                           
 15052                           	psect	text60
 15053  0000D0                     __ptext60:
 15054                           	opt stack 0
 15055  0000D0                     _Terminal:
 15056                           	opt stack 11
 15057                           
 15058                           ;term.c: 431: static TermStateType TermState = Term_GetData;
 15059                           ;term.c: 432: UINT8 UsbRxBuffer[200u];
 15060                           ;term.c: 433: UINT8 UsbTxBuffer[200u];
 15061                           ;term.c: 434: UINT8 TermTxBuffer[50u];
 15062                           ;term.c: 435: static UINT8 TermRxBuffer[50u];
 15063                           ;term.c: 436: UINT8 Index;
 15064                           ;term.c: 437: static UINT8 Len[4];
 15065                           ;term.c: 438: static UINT8 PackageLen;
 15066                           ;term.c: 439: static UINT8 Addr[4];
 15067                           ;term.c: 440: static UINT8 SlaveAddr;
 15068                           ;term.c: 441: static PayloadType Payload[20u];
 15069                           ;term.c: 442: UINT8 ReceivedBytes = 0;
 15070                           
 15071                           ; BSR set to: 0
 15072                           ;incstack = 0
 15073  0000D0  0E00               	movlw	0
 15074  0000D2  0100               	movlb	0	; () banked
 15075  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15076                           
 15077                           ; BSR set to: 0
 15078                           ;term.c: 444: static UINT8 FormatOption = 0u;
 15079                           ;term.c: 445: static UINT8 EchoOption = 1u;
 15080                           ;term.c: 446: static SwTimerType SwTimer;
 15081                           ;term.c: 449: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 15082  0000D6  0E1F               	movlw	31
 15083  0000D8  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 15084  0000DA  0012               	return	
 15085                           
 15086                           ; BSR set to: 0
 15087  0000DC  B265               	btfsc	3941,1,c	;volatile
 15088  0000DE  0012               	return	
 15089  0000E0  D27B               	goto	l2414
 15090  0000E2                     
 15091                           ;term.c: 456: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 15092                           
 15093                           ; BSR set to: 0
 15094  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 15095  0000E4  0100               	movlb	0	; () banked
 15096  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 15097  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 15098  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15099  0000EC  0EC8               	movlw	200
 15100  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 15101  0000F0  EC0A  F027         	call	_getsUSBUSART	;wreg free
 15102  0000F4  0100               	movlb	0	; () banked
 15103  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15104                           
 15105                           ; BSR set to: 0
 15106                           ;term.c: 459: if (ReceivedBytes > 0)
 15107  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15108  0000FA  B4D8               	btfsc	status,2,c
 15109  0000FC  0012               	return	
 15110                           
 15111                           ; BSR set to: 0
 15112                           ;term.c: 460: {
 15113                           ;term.c: 462: if (EchoOption == 1u)
 15114  0000FE  0102               	movlb	2	; () banked
 15115  000100  05F1               	decf	Terminal@EchoOption& (0+255),w,b
 15116  000102  A4D8               	btfss	status,2,c
 15117  000104  D026               	goto	l2418
 15118                           
 15119                           ; BSR set to: 2
 15120                           ;term.c: 463: {
 15121                           ;term.c: 465: if((cdc_trf_state == 0))
 15122  000106  0100               	movlb	0	; () banked
 15123  000108  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15124  00010A  A4D8               	btfss	status,2,c
 15125  00010C  D022               	goto	l2418
 15126                           
 15127                           ; BSR set to: 0
 15128                           ;term.c: 466: {
 15129                           ;term.c: 467: UsbRxBuffer[ReceivedBytes] = '\r';
 15130  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15131  000110  0D01               	mullw	1
 15132  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15133  000114  24F3               	addwf	prodl,w,c
 15134  000116  6ED9               	movwf	fsr2l,c
 15135  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15136  00011A  20F4               	addwfc	prodh,w,c
 15137  00011C  6EDA               	movwf	fsr2h,c
 15138  00011E  0E0D               	movlw	13
 15139  000120  6EDF               	movwf	indf2,c
 15140                           
 15141                           ; BSR set to: 0
 15142                           ;term.c: 468: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15143  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15144  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15145  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15146  000128  0E01               	movlw	1
 15147  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15148  00012C  0E00               	movlw	0
 15149  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15150  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15151  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15152  000134  6ED9               	movwf	fsr2l,c
 15153  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15154  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15155  00013A  6EDA               	movwf	fsr2h,c
 15156  00013C  0E0A               	movlw	10
 15157  00013E  6EDF               	movwf	indf2,c
 15158                           
 15159                           ; BSR set to: 0
 15160                           ;term.c: 469: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15161  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15162  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15163  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15164  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15165  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15166  00014A  0F02               	addlw	2
 15167  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15168  00014E  EC2D  F035         	call	_putUSBUSART	;wreg free
 15169  000152                     l2418:
 15170                           
 15171                           ;term.c: 470: }
 15172                           ;term.c: 471: }
 15173                           ;term.c: 474: if ((UsbRxBuffer[0u] == 'S') &&
 15174                           ;term.c: 475: (UsbRxBuffer[0u + 1u] == 'O') &&
 15175                           ;term.c: 476: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15176  000152  0E53               	movlw	83
 15177  000154  010A               	movlb	10	; () banked
 15178  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15179  000158  A4D8               	btfss	status,2,c
 15180  00015A  D043               	goto	l2419
 15181                           
 15182                           ; BSR set to: 10
 15183  00015C  0E4F               	movlw	79
 15184  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15185  000160  A4D8               	btfss	status,2,c
 15186  000162  D03F               	goto	l2419
 15187                           
 15188                           ; BSR set to: 10
 15189  000164  0E3A               	movlw	58
 15190  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15191  000168  A4D8               	btfss	status,2,c
 15192  00016A  D03B               	goto	l2419
 15193                           
 15194                           ; BSR set to: 10
 15195                           ;term.c: 477: {
 15196                           ;term.c: 479: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15197  00016C  0E47               	movlw	71
 15198  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15199  000170  A4D8               	btfss	status,2,c
 15200  000172  0012               	return	
 15201                           
 15202                           ; BSR set to: 10
 15203  000174  0E3A               	movlw	58
 15204  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15205  000178  A4D8               	btfss	status,2,c
 15206  00017A  0012               	return	
 15207                           
 15208                           ; BSR set to: 10
 15209                           ;term.c: 480: {
 15210                           ;term.c: 482: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15211  00017C  0E44               	movlw	68
 15212  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15213  000180  A4D8               	btfss	status,2,c
 15214  000182  D015               	goto	l2421
 15215                           
 15216                           ; BSR set to: 10
 15217  000184  0E46               	movlw	70
 15218  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15219  000188  A4D8               	btfss	status,2,c
 15220  00018A  D011               	goto	l2421
 15221                           
 15222                           ; BSR set to: 10
 15223                           ;term.c: 483: {
 15224                           ;term.c: 484: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15225  00018C  0E41               	movlw	65
 15226  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15227  000190  A4D8               	btfss	status,2,c
 15228  000192  D004               	goto	l2422
 15229                           
 15230                           ; BSR set to: 10
 15231                           ;term.c: 485: {
 15232                           ;term.c: 486: FormatOption = 1u;
 15233  000194  0E01               	movlw	1
 15234  000196  0102               	movlb	2	; () banked
 15235  000198  6FE8               	movwf	Terminal@FormatOption& (0+255),b
 15236                           
 15237                           ;term.c: 487: }
 15238  00019A  0012               	return	
 15239  00019C                     l2422:
 15240                           
 15241                           ;term.c: 488: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15242                           
 15243                           ; BSR set to: 2
 15244  00019C  0E42               	movlw	66
 15245  00019E  010A               	movlb	10	; () banked
 15246  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15247  0001A2  A4D8               	btfss	status,2,c
 15248  0001A4  0012               	return	
 15249                           
 15250                           ; BSR set to: 10
 15251                           ;term.c: 489: {
 15252                           ;term.c: 490: FormatOption = 0u;
 15253  0001A6  0E00               	movlw	0
 15254  0001A8  0102               	movlb	2	; () banked
 15255  0001AA  6FE8               	movwf	Terminal@FormatOption& (0+255),b
 15256                           
 15257                           ; BSR set to: 2
 15258                           ;term.c: 491: }
 15259                           ;term.c: 492: }
 15260                           
 15261                           ; BSR set to: 2
 15262  0001AC  0012               	return	
 15263  0001AE                     l2421:
 15264                           
 15265                           ;term.c: 494: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15266                           
 15267                           ; BSR set to: 2
 15268  0001AE  0E45               	movlw	69
 15269  0001B0  010A               	movlb	10	; () banked
 15270  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15271  0001B4  A4D8               	btfss	status,2,c
 15272  0001B6  0012               	return	
 15273                           
 15274                           ; BSR set to: 10
 15275  0001B8  0E4D               	movlw	77
 15276  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15277  0001BC  A4D8               	btfss	status,2,c
 15278  0001BE  0012               	return	
 15279                           
 15280                           ; BSR set to: 10
 15281                           ;term.c: 495: {
 15282                           ;term.c: 496: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15283  0001C0  0E31               	movlw	49
 15284  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15285  0001C4  A4D8               	btfss	status,2,c
 15286  0001C6  D004               	goto	l2427
 15287                           
 15288                           ; BSR set to: 10
 15289                           ;term.c: 497: {
 15290                           ;term.c: 498: EchoOption = 1u;
 15291  0001C8  0E01               	movlw	1
 15292  0001CA  0102               	movlb	2	; () banked
 15293  0001CC  6FF1               	movwf	Terminal@EchoOption& (0+255),b
 15294                           
 15295                           ;term.c: 499: }
 15296  0001CE  0012               	return	
 15297  0001D0                     l2427:
 15298                           
 15299                           ;term.c: 500: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15300                           
 15301                           ; BSR set to: 2
 15302  0001D0  0E30               	movlw	48
 15303  0001D2  010A               	movlb	10	; () banked
 15304  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15305  0001D6  A4D8               	btfss	status,2,c
 15306  0001D8  0012               	return	
 15307                           
 15308                           ; BSR set to: 10
 15309                           ;term.c: 501: {
 15310                           ;term.c: 502: EchoOption = 0u;
 15311  0001DA  0E00               	movlw	0
 15312  0001DC  0102               	movlb	2	; () banked
 15313  0001DE  6FF1               	movwf	Terminal@EchoOption& (0+255),b
 15314                           
 15315                           ; BSR set to: 2
 15316                           ;term.c: 508: }
 15317                           ;term.c: 509: }
 15318                           ;term.c: 510: }
 15319                           
 15320                           ; BSR set to: 2
 15321                           
 15322                           ; BSR set to: 2
 15323                           
 15324                           ;term.c: 505: else
 15325                           ;term.c: 506: {
 15326                           
 15327                           ; BSR set to: 2
 15328                           
 15329                           ; BSR set to: 2
 15330                           ;term.c: 503: }
 15331                           ;term.c: 504: }
 15332                           
 15333                           ; BSR set to: 2
 15334  0001E0  0012               	return	
 15335  0001E2                     l2419:
 15336                           
 15337                           ;term.c: 511: else if ((UsbRxBuffer[0u] == 'S') &&
 15338                           ;term.c: 512: (UsbRxBuffer[0u + 1u] == 'B') &&
 15339                           ;term.c: 513: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15340                           
 15341                           ; BSR set to: 2
 15342  0001E2  0E53               	movlw	83
 15343  0001E4  010A               	movlb	10	; () banked
 15344  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15345  0001E8  A4D8               	btfss	status,2,c
 15346  0001EA  D0D3               	goto	l2432
 15347                           
 15348                           ; BSR set to: 10
 15349  0001EC  0E42               	movlw	66
 15350  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15351  0001F0  A4D8               	btfss	status,2,c
 15352  0001F2  D0CF               	goto	l2432
 15353                           
 15354                           ; BSR set to: 10
 15355  0001F4  0E3A               	movlw	58
 15356  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15357  0001F8  A4D8               	btfss	status,2,c
 15358  0001FA  D0CB               	goto	l2432
 15359                           
 15360                           ; BSR set to: 10
 15361                           ;term.c: 514: {
 15362                           ;term.c: 515: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15363  0001FC  0E57               	movlw	87
 15364  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15365  000200  A4D8               	btfss	status,2,c
 15366  000202  D091               	goto	l2433
 15367                           
 15368                           ; BSR set to: 10
 15369  000204  0E3A               	movlw	58
 15370  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15371  000208  A4D8               	btfss	status,2,c
 15372  00020A  D08D               	goto	l2433
 15373                           
 15374                           ; BSR set to: 10
 15375                           ;term.c: 516: {
 15376                           ;term.c: 518: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15377  00020C  CA05  F3B1         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15378                           
 15379                           ;term.c: 519: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15380  000210  CA06  F3B2         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15381                           
 15382                           ;term.c: 521: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15383  000214  CA08  F3AD         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15384                           
 15385                           ;term.c: 522: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15386  000218  CA09  F3AE         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15387                           
 15388                           ; BSR set to: 10
 15389                           ;term.c: 524: PackageLen = atoi((void*)Len);
 15390  00021C  0EB1               	movlw	low Terminal@Len
 15391  00021E  0100               	movlb	0	; () banked
 15392  000220  6F83               	movwf	atoi@s& (0+255),b
 15393  000222  0E03               	movlw	high Terminal@Len
 15394  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15395  000226  EC83  F01C         	call	_atoi	;wreg free
 15396  00022A  0100               	movlb	0	; () banked
 15397  00022C  5183               	movf	?_atoi& (0+255),w,b
 15398  00022E  0102               	movlb	2	; () banked
 15399  000230  6FEA               	movwf	Terminal@PackageLen& (0+255),b
 15400                           
 15401                           ; BSR set to: 2
 15402                           ;term.c: 525: SlaveAddr = xtoi((void*)Addr);
 15403  000232  0EAD               	movlw	low Terminal@Addr
 15404  000234  0100               	movlb	0	; () banked
 15405  000236  6F83               	movwf	xtoi@s& (0+255),b
 15406  000238  0E03               	movlw	high Terminal@Addr
 15407  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15408  00023C  EC32  F01B         	call	_xtoi	;wreg free
 15409  000240  0100               	movlb	0	; () banked
 15410  000242  5183               	movf	?_xtoi& (0+255),w,b
 15411  000244  0102               	movlb	2	; () banked
 15412  000246  6FE9               	movwf	Terminal@SlaveAddr& (0+255),b
 15413                           
 15414                           ; BSR set to: 2
 15415                           ;term.c: 527: for (Index = 0; Index <= PackageLen; Index++)
 15416  000248  0E00               	movlw	0
 15417  00024A  0100               	movlb	0	; () banked
 15418  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15419  00024E  D032               	goto	l2434
 15420  000250                     
 15421                           ;term.c: 528: {
 15422                           ;term.c: 529: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15423                           
 15424                           ; BSR set to: 0
 15425  000250  0100               	movlb	0	; () banked
 15426  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15427  000254  0D02               	mullw	2
 15428  000256  0E0B               	movlw	11
 15429  000258  26F3               	addwf	prodl,f,c
 15430  00025A  0E00               	movlw	0
 15431  00025C  22F4               	addwfc	prodh,f,c
 15432  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15433  000260  24F3               	addwf	prodl,w,c
 15434  000262  6ED9               	movwf	fsr2l,c
 15435  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15436  000266  20F4               	addwfc	prodh,w,c
 15437  000268  6EDA               	movwf	fsr2h,c
 15438  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15439  00026C  0D04               	mullw	4
 15440  00026E  0E66               	movlw	low Terminal@Payload
 15441  000270  24F3               	addwf	prodl,w,c
 15442  000272  6EE1               	movwf	fsr1l,c
 15443  000274  0E07               	movlw	high Terminal@Payload
 15444  000276  20F4               	addwfc	prodh,w,c
 15445  000278  6EE2               	movwf	fsr1h,c
 15446  00027A  CFDF FFE7          	movff	indf2,indf1
 15447                           
 15448                           ;term.c: 530: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15449  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15450  000280  0D02               	mullw	2
 15451  000282  0E0C               	movlw	12
 15452  000284  26F3               	addwf	prodl,f,c
 15453  000286  0E00               	movlw	0
 15454  000288  22F4               	addwfc	prodh,f,c
 15455  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15456  00028C  24F3               	addwf	prodl,w,c
 15457  00028E  6ED9               	movwf	fsr2l,c
 15458  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15459  000292  20F4               	addwfc	prodh,w,c
 15460  000294  6EDA               	movwf	fsr2h,c
 15461  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15462  000298  0D04               	mullw	4
 15463  00029A  0E01               	movlw	1
 15464  00029C  26F3               	addwf	prodl,f,c
 15465  00029E  0E00               	movlw	0
 15466  0002A0  22F4               	addwfc	prodh,f,c
 15467  0002A2  0E66               	movlw	low Terminal@Payload
 15468  0002A4  24F3               	addwf	prodl,w,c
 15469  0002A6  6EE1               	movwf	fsr1l,c
 15470  0002A8  0E07               	movlw	high Terminal@Payload
 15471  0002AA  20F4               	addwfc	prodh,w,c
 15472  0002AC  6EE2               	movwf	fsr1h,c
 15473  0002AE  CFDF FFE7          	movff	indf2,indf1
 15474                           
 15475                           ; BSR set to: 0
 15476  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15477  0002B4                     l2434:
 15478                           
 15479                           ; BSR set to: 0
 15480                           
 15481                           ; BSR set to: 0
 15482  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15483  0002B6  0102               	movlb	2	; () banked
 15484  0002B8  5DEA               	subwf	Terminal@PackageLen& (0+255),w,b
 15485  0002BA  B0D8               	btfsc	status,0,c
 15486  0002BC  D7C9               	goto	l2435
 15487                           
 15488                           ; BSR set to: 2
 15489                           ;term.c: 531: }
 15490                           ;term.c: 533: for (Index = 0; Index <= PackageLen; Index++)
 15491                           
 15492                           ; BSR set to: 2
 15493  0002BE  0E00               	movlw	0
 15494  0002C0  0100               	movlb	0	; () banked
 15495  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15496  0002C4  D01F               	goto	l2437
 15497  0002C6                     
 15498                           ;term.c: 534: {
 15499                           ;term.c: 538: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15500                           
 15501                           ; BSR set to: 0
 15502  0002C6  0100               	movlb	0	; () banked
 15503  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15504  0002CA  0D04               	mullw	4
 15505  0002CC  0E66               	movlw	low Terminal@Payload
 15506  0002CE  24F3               	addwf	prodl,w,c
 15507  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15508  0002D2  0E07               	movlw	high Terminal@Payload
 15509  0002D4  20F4               	addwfc	prodh,w,c
 15510  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15511  0002D8  0E00               	movlw	0
 15512  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15513  0002DC  0E00               	movlw	0
 15514  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15515  0002E0  0E00               	movlw	0
 15516  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15517  0002E4  0E10               	movlw	16
 15518  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15519  0002E8  EC11  F00C         	call	_strtol	;wreg free
 15520  0002EC  0100               	movlb	0	; () banked
 15521  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15522  0002F0  0D01               	mullw	1
 15523  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15524  0002F4  24F3               	addwf	prodl,w,c
 15525  0002F6  6ED9               	movwf	fsr2l,c
 15526  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15527  0002FA  20F4               	addwfc	prodh,w,c
 15528  0002FC  6EDA               	movwf	fsr2h,c
 15529  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15530                           
 15531                           ; BSR set to: 0
 15532  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15533  000304                     l2437:
 15534                           
 15535                           ; BSR set to: 0
 15536                           
 15537                           ; BSR set to: 0
 15538  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15539  000306  0102               	movlb	2	; () banked
 15540  000308  5DEA               	subwf	Terminal@PackageLen& (0+255),w,b
 15541  00030A  B0D8               	btfsc	status,0,c
 15542  00030C  D7DC               	goto	l2438
 15543                           
 15544                           ; BSR set to: 2
 15545                           ;term.c: 540: }
 15546                           ;term.c: 543: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15547                           
 15548                           ; BSR set to: 2
 15549  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15550  000310  0100               	movlb	0	; () banked
 15551  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15552  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15553  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15554  000318  C2E9  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15555  00031C  C2EA  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15556  000320  EC4E  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 15557                           
 15558                           ;term.c: 544: }
 15559  000324  0012               	return	
 15560  000326                     l2433:
 15561                           
 15562                           ;term.c: 545: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15563  000326  0E52               	movlw	82
 15564  000328  010A               	movlb	10	; () banked
 15565  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15566  00032C  A4D8               	btfss	status,2,c
 15567  00032E  0012               	return	
 15568                           
 15569                           ; BSR set to: 10
 15570  000330  0E3A               	movlw	58
 15571  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15572  000334  A4D8               	btfss	status,2,c
 15573  000336  0012               	return	
 15574                           
 15575                           ; BSR set to: 10
 15576                           ;term.c: 546: {
 15577                           ;term.c: 548: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15578  000338  CA05  F3B1         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15579                           
 15580                           ;term.c: 549: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15581  00033C  CA06  F3B2         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15582                           
 15583                           ;term.c: 551: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15584  000340  CA08  F3AD         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15585                           
 15586                           ;term.c: 552: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15587  000344  CA09  F3AE         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15588                           
 15589                           ; BSR set to: 10
 15590                           ;term.c: 554: PackageLen = atoi((void*)Len);
 15591  000348  0EB1               	movlw	low Terminal@Len
 15592  00034A  0100               	movlb	0	; () banked
 15593  00034C  6F83               	movwf	atoi@s& (0+255),b
 15594  00034E  0E03               	movlw	high Terminal@Len
 15595  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15596  000352  EC83  F01C         	call	_atoi	;wreg free
 15597  000356  0100               	movlb	0	; () banked
 15598  000358  5183               	movf	?_atoi& (0+255),w,b
 15599  00035A  0102               	movlb	2	; () banked
 15600  00035C  6FEA               	movwf	Terminal@PackageLen& (0+255),b
 15601                           
 15602                           ; BSR set to: 2
 15603                           ;term.c: 555: SlaveAddr = xtoi((void*)Addr);
 15604  00035E  0EAD               	movlw	low Terminal@Addr
 15605  000360  0100               	movlb	0	; () banked
 15606  000362  6F83               	movwf	xtoi@s& (0+255),b
 15607  000364  0E03               	movlw	high Terminal@Addr
 15608  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15609  000368  EC32  F01B         	call	_xtoi	;wreg free
 15610  00036C  0100               	movlb	0	; () banked
 15611  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15612  000370  0102               	movlb	2	; () banked
 15613  000372  6FE9               	movwf	Terminal@SlaveAddr& (0+255),b
 15614                           
 15615                           ; BSR set to: 2
 15616                           ;term.c: 558: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15617  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15618  000376  0100               	movlb	0	; () banked
 15619  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15620  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15621  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15622  00037E  C2E9  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15623  000382  C2EA  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15624  000386  ECEF  F031         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15625                           
 15626                           ;term.c: 561: TermState = Term_PrepSlvI2cResp;
 15627  00038A  0E01               	movlw	1
 15628  00038C  0102               	movlb	2	; () banked
 15629  00038E  6FEB               	movwf	Terminal@TermState& (0+255),b
 15630                           
 15631                           ; BSR set to: 2
 15632                           ;term.c: 562: }
 15633                           ;term.c: 563: }
 15634                           
 15635                           ; BSR set to: 2
 15636  000390  0012               	return	
 15637  000392                     l2432:
 15638                           
 15639                           ;term.c: 564: else if ((UsbRxBuffer[0u] == 'T') &&
 15640                           ;term.c: 565: (UsbRxBuffer[0u + 1u] == 'E') &&
 15641                           ;term.c: 566: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15642                           
 15643                           ; BSR set to: 2
 15644  000392  0E54               	movlw	84
 15645  000394  010A               	movlb	10	; () banked
 15646  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15647  000398  A4D8               	btfss	status,2,c
 15648  00039A  0012               	return	
 15649                           
 15650                           ; BSR set to: 10
 15651  00039C  0E45               	movlw	69
 15652  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15653  0003A0  A4D8               	btfss	status,2,c
 15654  0003A2  0012               	return	
 15655                           
 15656                           ; BSR set to: 10
 15657  0003A4  0E4C               	movlw	76
 15658  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15659  0003A8  A4D8               	btfss	status,2,c
 15660  0003AA  0012               	return	
 15661                           
 15662                           ; BSR set to: 10
 15663                           ;term.c: 567: {
 15664                           ;term.c: 569: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15665  0003AC  CA03  F3B1         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15666                           
 15667                           ;term.c: 570: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15668  0003B0  CA04  F3B2         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15669                           
 15670                           ; BSR set to: 10
 15671                           ;term.c: 571: UsbMasterPhoneNumberLen = atoi(Len);
 15672  0003B4  0EB1               	movlw	low Terminal@Len
 15673  0003B6  0100               	movlb	0	; () banked
 15674  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15675  0003BA  0E03               	movlw	high Terminal@Len
 15676  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15677  0003BE  EC83  F01C         	call	_atoi	;wreg free
 15678  0003C2  C083  F318         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15679  0003C6  C084  F319         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15680                           
 15681                           ;term.c: 573: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15682  0003CA  0E00               	movlw	0
 15683  0003CC  0100               	movlb	0	; () banked
 15684  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15685  0003D0  D018               	goto	l2444
 15686  0003D2                     
 15687                           ; BSR set to: 0
 15688                           ;term.c: 574: {
 15689                           ;term.c: 575: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15690                           
 15691                           ; BSR set to: 0
 15692  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15693  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15694  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15695  0003D8  0E05               	movlw	5
 15696  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15697  0003DC  0E00               	movlw	0
 15698  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15699  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15700  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15701  0003E4  6ED9               	movwf	fsr2l,c
 15702  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15703  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15704  0003EA  6EDA               	movwf	fsr2h,c
 15705  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15706  0003EE  0D01               	mullw	1
 15707  0003F0  0E98               	movlw	low _UsbMasterPhoneNumber
 15708  0003F2  24F3               	addwf	prodl,w,c
 15709  0003F4  6EE1               	movwf	fsr1l,c
 15710  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15711  0003F8  20F4               	addwfc	prodh,w,c
 15712  0003FA  6EE2               	movwf	fsr1h,c
 15713  0003FC  CFDF FFE7          	movff	indf2,indf1
 15714                           
 15715                           ; BSR set to: 0
 15716  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15717  000402                     l2444:
 15718                           
 15719                           ; BSR set to: 0
 15720                           
 15721                           ; BSR set to: 0
 15722  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15723  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15724  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15725  000408  0103               	movlb	3	; () banked
 15726  00040A  5118               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15727  00040C  0100               	movlb	0	; () banked
 15728  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15729  000410  0103               	movlb	3	; () banked
 15730  000412  5119               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15731  000414  0100               	movlb	0	; () banked
 15732  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15733  000418  A0D8               	btfss	status,0,c
 15734  00041A  D7DB               	goto	l2445
 15735                           
 15736                           ; BSR set to: 0
 15737                           ;term.c: 576: }
 15738                           ;term.c: 577: IsUsbNumberReceived = 1;
 15739                           
 15740                           ; BSR set to: 0
 15741  00041C  0E01               	movlw	1
 15742  00041E  0102               	movlb	2	; () banked
 15743  000420  6FED               	movwf	_IsUsbNumberReceived& (0+255),b
 15744                           
 15745                           ; BSR set to: 2
 15746                           ;term.c: 584: }
 15747                           ;term.c: 616: }
 15748                           ;term.c: 617: break;
 15749                           
 15750                           ; BSR set to: 2
 15751                           
 15752                           ; BSR set to: 2
 15753                           
 15754                           ; BSR set to: 2
 15755                           
 15756                           ; BSR set to: 2
 15757                           
 15758                           ;term.c: 582: {
 15759                           
 15760                           ; BSR set to: 2
 15761                           
 15762                           ; BSR set to: 2
 15763                           
 15764                           ; BSR set to: 2
 15765                           
 15766                           ; BSR set to: 2
 15767                           
 15768                           ;term.c: 578: }
 15769  000422  0012               	return	
 15770  000424                     
 15771                           ; BSR set to: 2
 15772                           ;term.c: 621: if((cdc_trf_state == 0))
 15773                           
 15774                           ; BSR set to: 2
 15775  000424  0100               	movlb	0	; () banked
 15776  000426  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15777  000428  A4D8               	btfss	status,2,c
 15778  00042A  0012               	return	
 15779                           
 15780                           ; BSR set to: 0
 15781                           ;term.c: 622: {
 15782                           ;term.c: 623: UsbTxBuffer[0] = 'S';
 15783  00042C  0E53               	movlw	83
 15784  00042E  0102               	movlb	2	; () banked
 15785  000430  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15786                           
 15787                           ;term.c: 624: UsbTxBuffer[1] = 'B';
 15788  000432  0E42               	movlw	66
 15789  000434  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15790                           
 15791                           ;term.c: 625: UsbTxBuffer[2] = '[';
 15792  000436  0E5B               	movlw	91
 15793  000438  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15794                           
 15795                           ; BSR set to: 2
 15796                           ;term.c: 626: UsbTxBuffer[3] = Addr[0];
 15797  00043A  C3AD  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15798                           
 15799                           ; BSR set to: 2
 15800                           ;term.c: 627: UsbTxBuffer[4] = Addr[1];
 15801  00043E  C3AE  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15802                           
 15803                           ;term.c: 628: UsbTxBuffer[5] = ']';
 15804  000442  0E5D               	movlw	93
 15805  000444  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15806                           
 15807                           ;term.c: 629: UsbTxBuffer[6] = ':';
 15808  000446  0E3A               	movlw	58
 15809  000448  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15810                           
 15811                           ; BSR set to: 2
 15812                           ;term.c: 630: putUSBUSART(UsbTxBuffer,7);
 15813  00044A  0E00               	movlw	low Terminal@UsbTxBuffer
 15814  00044C  0100               	movlb	0	; () banked
 15815  00044E  6F83               	movwf	putUSBUSART@data& (0+255),b
 15816  000450  0E02               	movlw	high Terminal@UsbTxBuffer
 15817  000452  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15818  000454  0E07               	movlw	7
 15819  000456  6F85               	movwf	putUSBUSART@length& (0+255),b
 15820  000458  EC2D  F035         	call	_putUSBUSART	;wreg free
 15821                           
 15822                           ;term.c: 633: TermState = Term_ReadSlvI2cData;
 15823  00045C  0E02               	movlw	2
 15824  00045E  0102               	movlb	2	; () banked
 15825  000460  6FEB               	movwf	Terminal@TermState& (0+255),b
 15826                           
 15827                           ; BSR set to: 2
 15828                           ;term.c: 634: }
 15829                           ;term.c: 635: break;
 15830  000462  0012               	return	
 15831  000464                     
 15832                           ; BSR set to: 2
 15833                           ;term.c: 639: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15834                           
 15835                           ; BSR set to: 2
 15836  000464  EC4F  F035         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15837  000468  06E8               	decf	wreg,f,c
 15838  00046A  A4D8               	btfss	status,2,c
 15839  00046C  D088               	goto	l2453
 15840                           
 15841                           ;term.c: 640: {
 15842                           ;term.c: 642: if (FormatOption == 1u)
 15843  00046E  0102               	movlb	2	; () banked
 15844  000470  05E8               	decf	Terminal@FormatOption& (0+255),w,b
 15845  000472  A4D8               	btfss	status,2,c
 15846  000474  D027               	goto	u14550
 15847                           
 15848                           ; BSR set to: 2
 15849                           ;term.c: 643: {
 15850                           ;term.c: 645: for (Index = 0; Index <= PackageLen; Index++)
 15851  000476  0E00               	movlw	0
 15852  000478  0100               	movlb	0	; () banked
 15853  00047A  6FA6               	movwf	Terminal@Index& (0+255),b
 15854  00047C  D01E               	goto	l2455
 15855  00047E                     
 15856                           ;term.c: 646: {
 15857                           ;term.c: 647: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15858                           
 15859                           ; BSR set to: 0
 15860  00047E  0100               	movlb	0	; () banked
 15861  000480  51A6               	movf	Terminal@Index& (0+255),w,b
 15862  000482  0D04               	mullw	4
 15863  000484  0E66               	movlw	low Terminal@Payload
 15864  000486  24F3               	addwf	prodl,w,c
 15865  000488  6F93               	movwf	itoa@buf& (0+255),b
 15866  00048A  0E07               	movlw	high Terminal@Payload
 15867  00048C  20F4               	addwfc	prodh,w,c
 15868  00048E  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15869  000490  51A6               	movf	Terminal@Index& (0+255),w,b
 15870  000492  0D01               	mullw	1
 15871  000494  0E40               	movlw	low Terminal@TermRxBuffer
 15872  000496  24F3               	addwf	prodl,w,c
 15873  000498  6ED9               	movwf	fsr2l,c
 15874  00049A  0E05               	movlw	high Terminal@TermRxBuffer
 15875  00049C  20F4               	addwfc	prodh,w,c
 15876  00049E  6EDA               	movwf	fsr2h,c
 15877  0004A0  50DF               	movf	indf2,w,c
 15878  0004A2  6FA2               	movwf	??_Terminal& (0+255),b
 15879  0004A4  51A2               	movf	??_Terminal& (0+255),w,b
 15880  0004A6  6F95               	movwf	itoa@val& (0+255),b
 15881  0004A8  6B96               	clrf	(itoa@val+1)& (0+255),b
 15882  0004AA  0E00               	movlw	0
 15883  0004AC  6F98               	movwf	(itoa@base+1)& (0+255),b
 15884  0004AE  0E0A               	movlw	10
 15885  0004B0  6F97               	movwf	itoa@base& (0+255),b
 15886  0004B2  EC89  F031         	call	_itoa	;wreg free
 15887  0004B6  0100               	movlb	0	; () banked
 15888  0004B8  2BA6               	incf	Terminal@Index& (0+255),f,b
 15889  0004BA                     l2455:
 15890                           
 15891                           ; BSR set to: 0
 15892                           
 15893                           ; BSR set to: 0
 15894  0004BA  51A6               	movf	Terminal@Index& (0+255),w,b
 15895  0004BC  0102               	movlb	2	; () banked
 15896  0004BE  5DEA               	subwf	Terminal@PackageLen& (0+255),w,b
 15897  0004C0  B0D8               	btfsc	status,0,c
 15898  0004C2  D7DD               	goto	l2456
 15899  0004C4                     u14550:
 15900                           
 15901                           ; BSR set to: 2
 15902                           ;term.c: 648: }
 15903                           ;term.c: 649: }
 15904                           ;term.c: 652: if((cdc_trf_state == 0))
 15905                           
 15906                           ; BSR set to: 2
 15907                           
 15908                           ; BSR set to: 2
 15909  0004C4  0100               	movlb	0	; () banked
 15910  0004C6  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15911  0004C8  A4D8               	btfss	status,2,c
 15912  0004CA  0012               	return	
 15913                           
 15914                           ; BSR set to: 0
 15915                           ;term.c: 653: {
 15916                           ;term.c: 655: if (FormatOption == 1u)
 15917  0004CC  0102               	movlb	2	; () banked
 15918  0004CE  05E8               	decf	Terminal@FormatOption& (0+255),w,b
 15919  0004D0  A4D8               	btfss	status,2,c
 15920  0004D2  D02B               	goto	l2459
 15921                           
 15922                           ; BSR set to: 2
 15923                           ;term.c: 656: {
 15924                           ;term.c: 657: Payload[(2*PackageLen)].Byte[3] = '\r';
 15925  0004D4  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 15926  0004D6  0D08               	mullw	8
 15927  0004D8  0E03               	movlw	3
 15928  0004DA  26F3               	addwf	prodl,f,c
 15929  0004DC  0E00               	movlw	0
 15930  0004DE  22F4               	addwfc	prodh,f,c
 15931  0004E0  0E66               	movlw	low Terminal@Payload
 15932  0004E2  24F3               	addwf	prodl,w,c
 15933  0004E4  6ED9               	movwf	fsr2l,c
 15934  0004E6  0E07               	movlw	high Terminal@Payload
 15935  0004E8  20F4               	addwfc	prodh,w,c
 15936  0004EA  6EDA               	movwf	fsr2h,c
 15937  0004EC  0E0D               	movlw	13
 15938  0004EE  6EDF               	movwf	indf2,c
 15939                           
 15940                           ;term.c: 658: Payload[(2*PackageLen)].Byte[2] = '\n';
 15941  0004F0  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 15942  0004F2  0D08               	mullw	8
 15943  0004F4  0E02               	movlw	2
 15944  0004F6  26F3               	addwf	prodl,f,c
 15945  0004F8  0E00               	movlw	0
 15946  0004FA  22F4               	addwfc	prodh,f,c
 15947  0004FC  0E66               	movlw	low Terminal@Payload
 15948  0004FE  24F3               	addwf	prodl,w,c
 15949  000500  6ED9               	movwf	fsr2l,c
 15950  000502  0E07               	movlw	high Terminal@Payload
 15951  000504  20F4               	addwfc	prodh,w,c
 15952  000506  6EDA               	movwf	fsr2h,c
 15953  000508  0E0A               	movlw	10
 15954  00050A  6EDF               	movwf	indf2,c
 15955                           
 15956                           ; BSR set to: 2
 15957                           ;term.c: 660: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15958  00050C  0E66               	movlw	low Terminal@Payload
 15959  00050E  0100               	movlb	0	; () banked
 15960  000510  6F83               	movwf	putUSBUSART@data& (0+255),b
 15961  000512  0E07               	movlw	high Terminal@Payload
 15962  000514  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15963  000516  0102               	movlb	2	; () banked
 15964  000518  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 15965  00051A  0D02               	mullw	2
 15966  00051C  50F3               	movf	prodl,w,c
 15967  00051E  0F04               	addlw	4
 15968  000520  0100               	movlb	0	; () banked
 15969  000522  6F85               	movwf	putUSBUSART@length& (0+255),b
 15970  000524  EC2D  F035         	call	_putUSBUSART	;wreg free
 15971                           
 15972                           ;term.c: 661: }
 15973  000528  D026               	goto	l2460
 15974  00052A                     l2459:
 15975                           
 15976                           ;term.c: 662: else
 15977                           ;term.c: 663: {
 15978                           ;term.c: 664: TermRxBuffer[PackageLen] = '\r';
 15979  00052A  0102               	movlb	2	; () banked
 15980  00052C  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 15981  00052E  0D01               	mullw	1
 15982  000530  0E40               	movlw	low Terminal@TermRxBuffer
 15983  000532  24F3               	addwf	prodl,w,c
 15984  000534  6ED9               	movwf	fsr2l,c
 15985  000536  0E05               	movlw	high Terminal@TermRxBuffer
 15986  000538  20F4               	addwfc	prodh,w,c
 15987  00053A  6EDA               	movwf	fsr2h,c
 15988  00053C  0E0D               	movlw	13
 15989  00053E  6EDF               	movwf	indf2,c
 15990                           
 15991                           ; BSR set to: 2
 15992                           ;term.c: 665: TermRxBuffer[PackageLen + 1] = '\n';
 15993  000540  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 15994  000542  0100               	movlb	0	; () banked
 15995  000544  6FA2               	movwf	??_Terminal& (0+255),b
 15996  000546  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15997  000548  0E01               	movlw	1
 15998  00054A  27A2               	addwf	??_Terminal& (0+255),f,b
 15999  00054C  0E00               	movlw	0
 16000  00054E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 16001  000550  0E40               	movlw	low Terminal@TermRxBuffer
 16002  000552  25A2               	addwf	??_Terminal& (0+255),w,b
 16003  000554  6ED9               	movwf	fsr2l,c
 16004  000556  0E05               	movlw	high Terminal@TermRxBuffer
 16005  000558  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 16006  00055A  6EDA               	movwf	fsr2h,c
 16007  00055C  0E0A               	movlw	10
 16008  00055E  6EDF               	movwf	indf2,c
 16009                           
 16010                           ; BSR set to: 0
 16011                           ;term.c: 667: putUSBUSART(TermRxBuffer,PackageLen + 2);
 16012  000560  0E40               	movlw	low Terminal@TermRxBuffer
 16013  000562  6F83               	movwf	putUSBUSART@data& (0+255),b
 16014  000564  0E05               	movlw	high Terminal@TermRxBuffer
 16015  000566  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16016  000568  0102               	movlb	2	; () banked
 16017  00056A  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 16018  00056C  0F02               	addlw	2
 16019  00056E  0100               	movlb	0	; () banked
 16020  000570  6F85               	movwf	putUSBUSART@length& (0+255),b
 16021  000572  EC2D  F035         	call	_putUSBUSART	;wreg free
 16022  000576                     l2460:
 16023                           
 16024                           ;term.c: 668: }
 16025                           ;term.c: 670: TermState = Term_GetData;
 16026  000576  0E00               	movlw	0
 16027  000578  0102               	movlb	2	; () banked
 16028  00057A  6FEB               	movwf	Terminal@TermState& (0+255),b
 16029                           
 16030                           ; BSR set to: 2
 16031                           ;term.c: 671: }
 16032                           ;term.c: 672: }
 16033  00057C  0012               	return	
 16034  00057E                     l2453:
 16035                           
 16036                           ;term.c: 673: else
 16037                           ;term.c: 674: {
 16038                           ;term.c: 676: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 16039                           
 16040                           ; BSR set to: 2
 16041  00057E  0ED0               	movlw	low Terminal@SwTimer
 16042  000580  0100               	movlb	0	; () banked
 16043  000582  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 16044  000584  0E04               	movlw	high Terminal@SwTimer
 16045  000586  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 16046  000588  0EB8               	movlw	184
 16047  00058A  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 16048  00058C  0E0B               	movlw	11
 16049  00058E  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 16050  000590  0E00               	movlw	0
 16051  000592  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 16052  000594  0E00               	movlw	0
 16053  000596  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 16054  000598  EC20  F02A         	call	_OsTmr_Wait	;wreg free
 16055  00059C  06E8               	decf	wreg,f,c
 16056  00059E  A4D8               	btfss	status,2,c
 16057  0005A0  0012               	return	
 16058                           
 16059                           ;term.c: 677: {
 16060                           ;term.c: 679: if((cdc_trf_state == 0))
 16061  0005A2  0100               	movlb	0	; () banked
 16062  0005A4  51C8               	movf	_cdc_trf_state& (0+255),w,b
 16063  0005A6  A4D8               	btfss	status,2,c
 16064  0005A8  0012               	return	
 16065                           
 16066                           ; BSR set to: 0
 16067                           ;term.c: 680: {
 16068                           ;term.c: 681: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 16069  0005AA  0E00               	movlw	low Terminal@UsbTxBuffer
 16070  0005AC  6F7D               	movwf	strcpy@to& (0+255),b
 16071  0005AE  0E02               	movlw	high Terminal@UsbTxBuffer
 16072  0005B0  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 16073  0005B2  0E5E               	movlw	low STR_21
 16074  0005B4  6F7F               	movwf	strcpy@from& (0+255),b
 16075  0005B6  0EFE               	movlw	high STR_21
 16076  0005B8  6F80               	movwf	(strcpy@from+1)& (0+255),b
 16077  0005BA  ECA4  F033         	call	_strcpy	;wreg free
 16078                           
 16079                           ;term.c: 682: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 16080  0005BE  0E00               	movlw	low Terminal@UsbTxBuffer
 16081  0005C0  0100               	movlb	0	; () banked
 16082  0005C2  6F83               	movwf	putUSBUSART@data& (0+255),b
 16083  0005C4  0E02               	movlw	high Terminal@UsbTxBuffer
 16084  0005C6  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16085  0005C8  0E29               	movlw	41
 16086  0005CA  6F85               	movwf	putUSBUSART@length& (0+255),b
 16087  0005CC  EC2D  F035         	call	_putUSBUSART	;wreg free
 16088                           
 16089                           ;term.c: 684: TermState = Term_GetData;
 16090  0005D0  0E00               	movlw	0
 16091  0005D2  0102               	movlb	2	; () banked
 16092  0005D4  6FEB               	movwf	Terminal@TermState& (0+255),b
 16093                           
 16094                           ; BSR set to: 2
 16095                           ;term.c: 695: }
 16096                           
 16097                           ; BSR set to: 2
 16098                           ;term.c: 694: break;
 16099                           
 16100                           ;term.c: 693: default:
 16101                           
 16102                           ; BSR set to: 2
 16103                           ;term.c: 691: break;
 16104                           
 16105                           ;term.c: 690: case Term_ReadSlvUartData:
 16106                           
 16107                           ; BSR set to: 2
 16108                           ;term.c: 685: }
 16109                           ;term.c: 686: }
 16110                           ;term.c: 687: }
 16111                           ;term.c: 688: break;
 16112                           
 16113                           ; BSR set to: 2
 16114                           
 16115                           ; BSR set to: 2
 16116  0005D6  0012               	return	
 16117  0005D8                     l2414:
 16118                           
 16119                           ; BSR set to: 2
 16120  0005D8  0102               	movlb	2	; () banked
 16121  0005DA  51EB               	movf	Terminal@TermState& (0+255),w,b
 16122                           
 16123                           ; Switch size 1, requested type "space"
 16124                           ; Number of cases is 4, Range of values is 0 to 3
 16125                           ; switch strategies available:
 16126                           ; Name         Instructions Cycles
 16127                           ; simple_byte           13     7 (average)
 16128                           ;	Chosen strategy is simple_byte
 16129  0005DC  0A00               	xorlw	0	; case 0
 16130  0005DE  B4D8               	btfsc	status,2,c
 16131  0005E0  D580               	goto	l2415
 16132  0005E2  0A01               	xorlw	1	; case 1
 16133  0005E4  B4D8               	btfsc	status,2,c
 16134  0005E6  D71E               	goto	l2450
 16135  0005E8  0A03               	xorlw	3	; case 2
 16136  0005EA  B4D8               	btfsc	status,2,c
 16137  0005EC  D73B               	goto	l2452
 16138  0005EE  0A01               	xorlw	1	; case 3
 16139  0005F0  0012               	return	
 16140  0005F2                     __end_of_Terminal:
 16141                           	opt stack 0
 16142                           tosu	equ	0xFFF
 16143                           tosh	equ	0xFFE
 16144                           tosl	equ	0xFFD
 16145                           pclath	equ	0xFFA
 16146                           tblptru	equ	0xFF8
 16147                           tblptrh	equ	0xFF7
 16148                           tblptrl	equ	0xFF6
 16149                           tablat	equ	0xFF5
 16150                           prodh	equ	0xFF4
 16151                           prodl	equ	0xFF3
 16152                           intcon	equ	0xFF2
 16153                           intcon2	equ	0xFF1
 16154                           intcon3	equ	0xFF0
 16155                           indf0	equ	0xFEF
 16156                           postinc0	equ	0xFEE
 16157                           plusw0	equ	0xFEB
 16158                           fsr0h	equ	0xFEA
 16159                           fsr0l	equ	0xFE9
 16160                           wreg	equ	0xFE8
 16161                           indf1	equ	0xFE7
 16162                           postinc1	equ	0xFE6
 16163                           postdec1	equ	0xFE5
 16164                           fsr1h	equ	0xFE2
 16165                           fsr1l	equ	0xFE1
 16166                           indf2	equ	0xFDF
 16167                           postinc2	equ	0xFDE
 16168                           postdec2	equ	0xFDD
 16169                           plusw2	equ	0xFDB
 16170                           fsr2h	equ	0xFDA
 16171                           fsr2l	equ	0xFD9
 16172                           status	equ	0xFD8
 16173                           
 16174 ;; *************** function _xtoi *****************
 16175 ;; Defined at:
 16176 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16177 ;; Parameters:    Size  Location     Type
 16178 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16179 ;;		 -> Terminal@Addr(4), 
 16180 ;; Auto vars:     Size  Location     Type
 16181 ;;  val             2   40[BANK0 ] unsigned int 
 16182 ;;  c               1   42[BANK0 ] unsigned char 
 16183 ;;  sign            1   39[BANK0 ] unsigned char 
 16184 ;; Return value:  Size  Location     Type
 16185 ;;                  2   35[BANK0 ] unsigned int 
 16186 ;; Registers used:
 16187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16188 ;; Tracked objects:
 16189 ;;		On entry : 0/0
 16190 ;;		On exit  : 0/0
 16191 ;;		Unchanged: 0/0
 16192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16193 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16194 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16195 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16196 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16197 ;;Total ram usage:        8 bytes
 16198 ;; Hardware stack levels used:    1
 16199 ;; Hardware stack levels required when called:   13
 16200 ;; This function calls:
 16201 ;;		_isdigit
 16202 ;;		_isspace
 16203 ;;		_isupper
 16204 ;;		_isxdigit
 16205 ;;		_tolower
 16206 ;; This function is called by:
 16207 ;;		_Terminal
 16208 ;; This function uses a non-reentrant model
 16209 ;;
 16210                           
 16211                           	psect	text61
 16212  003664                     __ptext61:
 16213                           	opt stack 0
 16214  003664                     _xtoi:
 16215                           	opt stack 12
 16216                           
 16217                           ;incstack = 0
 16218  003664  0E00               	movlw	0
 16219  003666  0100               	movlb	0	; () banked
 16220  003668  6F87               	movwf	xtoi@sign& (0+255),b
 16221  00366A  0E00               	movlw	0
 16222  00366C  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16223  00366E  0E00               	movlw	0
 16224  003670  6F88               	movwf	xtoi@val& (0+255),b
 16225  003672  D003               	goto	l3655
 16226  003674                     
 16227                           ; BSR set to: 0
 16228  003674  0100               	movlb	0	; () banked
 16229  003676  4B83               	infsnz	xtoi@s& (0+255),f,b
 16230  003678  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16231  00367A                     l3655:
 16232                           
 16233                           ; BSR set to: 0
 16234                           
 16235                           ; BSR set to: 0
 16236  00367A  C083  FFD9         	movff	xtoi@s,fsr2l
 16237  00367E  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16238  003682  50DF               	movf	indf2,w,c
 16239  003684  EC76  F034         	call	_isspace
 16240  003688  B0D8               	btfsc	status,0,c
 16241  00368A  D7F4               	goto	l3656
 16242  00368C  C083  FFD9         	movff	xtoi@s,fsr2l
 16243  003690  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16244  003694  0E2D               	movlw	45
 16245  003696  18DE               	xorwf	postinc2,w,c
 16246  003698  A4D8               	btfss	status,2,c
 16247  00369A  D003               	goto	l3658
 16248  00369C  0100               	movlb	0	; () banked
 16249  00369E  2B87               	incf	xtoi@sign& (0+255),f,b
 16250  0036A0  D009               	goto	L15
 16251  0036A2                     l3658:
 16252                           
 16253                           ; BSR set to: 0
 16254  0036A2  C083  FFD9         	movff	xtoi@s,fsr2l
 16255  0036A6  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16256  0036AA  0E2B               	movlw	43
 16257  0036AC  18DE               	xorwf	postinc2,w,c
 16258  0036AE  A4D8               	btfss	status,2,c
 16259  0036B0  D028               	goto	l3661
 16260  0036B2  0100               	movlb	0	; () banked
 16261  0036B4                     L15:
 16262  0036B4  4B83               	infsnz	xtoi@s& (0+255),f,b
 16263  0036B6  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16264                           
 16265                           ; BSR set to: 0
 16266                           
 16267                           ; BSR set to: 0
 16268  0036B8  D024               	goto	l3661
 16269  0036BA                     
 16270                           ; BSR set to: 0
 16271  0036BA  0100               	movlb	0	; () banked
 16272  0036BC  518A               	movf	xtoi@c& (0+255),w,b
 16273  0036BE  EC1C  F035         	call	_isupper
 16274  0036C2  A0D8               	btfss	status,0,c
 16275  0036C4  D006               	goto	l3663
 16276  0036C6  0100               	movlb	0	; () banked
 16277  0036C8  518A               	movf	xtoi@c& (0+255),w,b
 16278  0036CA  EC0D  F036         	call	_tolower
 16279  0036CE  0100               	movlb	0	; () banked
 16280  0036D0  6F8A               	movwf	xtoi@c& (0+255),b
 16281  0036D2                     l3663:
 16282  0036D2  0100               	movlb	0	; () banked
 16283  0036D4  518A               	movf	xtoi@c& (0+255),w,b
 16284  0036D6  EC3E  F035         	call	_isdigit
 16285  0036DA  A0D8               	btfss	status,0,c
 16286  0036DC  D002               	goto	l3664
 16287  0036DE  0E30               	movlw	48
 16288  0036E0  D001               	goto	L14
 16289  0036E2                     l3664:
 16290                           
 16291                           ; BSR set to: 0
 16292  0036E2  0E57               	movlw	87
 16293  0036E4                     L14:
 16294  0036E4  0100               	movlb	0	; () banked
 16295  0036E6  5F8A               	subwf	xtoi@c& (0+255),f,b
 16296                           
 16297                           ; BSR set to: 0
 16298  0036E8  3B88               	swapf	xtoi@val& (0+255),f,b
 16299  0036EA  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16300  0036EC  0EF0               	movlw	240
 16301  0036EE  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16302  0036F0  5188               	movf	xtoi@val& (0+255),w,b
 16303  0036F2  0B0F               	andlw	15
 16304  0036F4  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16305  0036F6  0EF0               	movlw	240
 16306  0036F8  1788               	andwf	xtoi@val& (0+255),f,b
 16307  0036FA  518A               	movf	xtoi@c& (0+255),w,b
 16308  0036FC  2788               	addwf	xtoi@val& (0+255),f,b
 16309  0036FE  0E00               	movlw	0
 16310  003700  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16311  003702                     l3661:
 16312                           
 16313                           ; BSR set to: 0
 16314  003702  C083  FFD9         	movff	xtoi@s,fsr2l
 16315  003706  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16316  00370A  0100               	movlb	0	; () banked
 16317  00370C  4B83               	infsnz	xtoi@s& (0+255),f,b
 16318  00370E  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16319  003710  50DF               	movf	indf2,w,c
 16320  003712  6F8A               	movwf	xtoi@c& (0+255),b
 16321  003714  518A               	movf	xtoi@c& (0+255),w,b
 16322  003716  ECAA  F032         	call	_isxdigit
 16323  00371A  B0D8               	btfsc	status,0,c
 16324  00371C  D7CE               	goto	l3662
 16325  00371E  0100               	movlb	0	; () banked
 16326  003720  5187               	movf	xtoi@sign& (0+255),w,b
 16327  003722  B4D8               	btfsc	status,2,c
 16328  003724  D00D               	goto	l3667
 16329                           
 16330                           ; BSR set to: 0
 16331  003726  C088  F085         	movff	xtoi@val,??_xtoi
 16332  00372A  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16333  00372E  1F85               	comf	??_xtoi& (0+255),f,b
 16334  003730  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16335  003732  4B85               	infsnz	??_xtoi& (0+255),f,b
 16336  003734  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16337  003736  C085  F083         	movff	??_xtoi,?_xtoi
 16338  00373A  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16339  00373E  0012               	return	
 16340  003740                     l3667:
 16341                           
 16342                           ; BSR set to: 0
 16343  003740  C088  F083         	movff	xtoi@val,?_xtoi
 16344  003744  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16345                           
 16346                           ; BSR set to: 0
 16347  003748  0012               	return		;funcret
 16348  00374A                     __end_of_xtoi:
 16349                           	opt stack 0
 16350                           tosu	equ	0xFFF
 16351                           tosh	equ	0xFFE
 16352                           tosl	equ	0xFFD
 16353                           pclath	equ	0xFFA
 16354                           tblptru	equ	0xFF8
 16355                           tblptrh	equ	0xFF7
 16356                           tblptrl	equ	0xFF6
 16357                           tablat	equ	0xFF5
 16358                           prodh	equ	0xFF4
 16359                           prodl	equ	0xFF3
 16360                           intcon	equ	0xFF2
 16361                           intcon2	equ	0xFF1
 16362                           intcon3	equ	0xFF0
 16363                           indf0	equ	0xFEF
 16364                           postinc0	equ	0xFEE
 16365                           plusw0	equ	0xFEB
 16366                           fsr0h	equ	0xFEA
 16367                           fsr0l	equ	0xFE9
 16368                           wreg	equ	0xFE8
 16369                           indf1	equ	0xFE7
 16370                           postinc1	equ	0xFE6
 16371                           postdec1	equ	0xFE5
 16372                           fsr1h	equ	0xFE2
 16373                           fsr1l	equ	0xFE1
 16374                           indf2	equ	0xFDF
 16375                           postinc2	equ	0xFDE
 16376                           postdec2	equ	0xFDD
 16377                           plusw2	equ	0xFDB
 16378                           fsr2h	equ	0xFDA
 16379                           fsr2l	equ	0xFD9
 16380                           status	equ	0xFD8
 16381                           
 16382 ;; *************** function _tolower *****************
 16383 ;; Defined at:
 16384 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16385 ;; Parameters:    Size  Location     Type
 16386 ;;  c               1    wreg     unsigned char 
 16387 ;; Auto vars:     Size  Location     Type
 16388 ;;  c               1   29[BANK0 ] unsigned char 
 16389 ;; Return value:  Size  Location     Type
 16390 ;;                  1    wreg      unsigned char 
 16391 ;; Registers used:
 16392 ;;		wreg, status,2, status,0
 16393 ;; Tracked objects:
 16394 ;;		On entry : 0/0
 16395 ;;		On exit  : 0/0
 16396 ;;		Unchanged: 0/0
 16397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16399 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16401 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16402 ;;Total ram usage:        1 bytes
 16403 ;; Hardware stack levels used:    1
 16404 ;; Hardware stack levels required when called:   11
 16405 ;; This function calls:
 16406 ;;		Nothing
 16407 ;; This function is called by:
 16408 ;;		_xtoi
 16409 ;; This function uses a non-reentrant model
 16410 ;;
 16411                           
 16412                           	psect	text62
 16413  006C1A                     __ptext62:
 16414                           	opt stack 0
 16415  006C1A                     _tolower:
 16416                           	opt stack 13
 16417                           
 16418                           ; BSR set to: 0
 16419                           ;incstack = 0
 16420                           ;tolower@c stored from wreg
 16421  006C1A  0100               	movlb	0	; () banked
 16422  006C1C  6F7D               	movwf	tolower@c& (0+255),b
 16423  006C1E  0E5B               	movlw	91
 16424  006C20  0100               	movlb	0	; () banked
 16425  006C22  617D               	cpfslt	tolower@c& (0+255),b
 16426  006C24  D004               	goto	l3714
 16427                           
 16428                           ; BSR set to: 0
 16429  006C26  0E40               	movlw	64
 16430  006C28  657D               	cpfsgt	tolower@c& (0+255),b
 16431  006C2A  D001               	goto	l3714
 16432                           
 16433                           ; BSR set to: 0
 16434  006C2C  8B7D               	bsf	tolower@c& (0+255),5,b
 16435  006C2E                     l3714:
 16436                           
 16437                           ; BSR set to: 0
 16438                           
 16439                           ; BSR set to: 0
 16440  006C2E  517D               	movf	tolower@c& (0+255),w,b
 16441  006C30  0012               	return	
 16442  006C32                     __end_of_tolower:
 16443                           	opt stack 0
 16444                           tosu	equ	0xFFF
 16445                           tosh	equ	0xFFE
 16446                           tosl	equ	0xFFD
 16447                           pclath	equ	0xFFA
 16448                           tblptru	equ	0xFF8
 16449                           tblptrh	equ	0xFF7
 16450                           tblptrl	equ	0xFF6
 16451                           tablat	equ	0xFF5
 16452                           prodh	equ	0xFF4
 16453                           prodl	equ	0xFF3
 16454                           intcon	equ	0xFF2
 16455                           intcon2	equ	0xFF1
 16456                           intcon3	equ	0xFF0
 16457                           indf0	equ	0xFEF
 16458                           postinc0	equ	0xFEE
 16459                           plusw0	equ	0xFEB
 16460                           fsr0h	equ	0xFEA
 16461                           fsr0l	equ	0xFE9
 16462                           wreg	equ	0xFE8
 16463                           indf1	equ	0xFE7
 16464                           postinc1	equ	0xFE6
 16465                           postdec1	equ	0xFE5
 16466                           fsr1h	equ	0xFE2
 16467                           fsr1l	equ	0xFE1
 16468                           indf2	equ	0xFDF
 16469                           postinc2	equ	0xFDE
 16470                           postdec2	equ	0xFDD
 16471                           plusw2	equ	0xFDB
 16472                           fsr2h	equ	0xFDA
 16473                           fsr2l	equ	0xFD9
 16474                           status	equ	0xFD8
 16475                           
 16476 ;; *************** function _isxdigit *****************
 16477 ;; Defined at:
 16478 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16479 ;; Parameters:    Size  Location     Type
 16480 ;;  c               1    wreg     unsigned char 
 16481 ;; Auto vars:     Size  Location     Type
 16482 ;;  c               1   34[BANK0 ] unsigned char 
 16483 ;; Return value:  Size  Location     Type
 16484 ;;		None               void
 16485 ;; Registers used:
 16486 ;;		wreg, status,2, status,0, cstack
 16487 ;; Tracked objects:
 16488 ;;		On entry : 0/0
 16489 ;;		On exit  : 0/0
 16490 ;;		Unchanged: 0/0
 16491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16493 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16495 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16496 ;;Total ram usage:        3 bytes
 16497 ;; Hardware stack levels used:    1
 16498 ;; Hardware stack levels required when called:   12
 16499 ;; This function calls:
 16500 ;;		_isdigit
 16501 ;; This function is called by:
 16502 ;;		_xtoi
 16503 ;; This function uses a non-reentrant model
 16504 ;;
 16505                           
 16506                           	psect	text63
 16507  006554                     __ptext63:
 16508                           	opt stack 0
 16509  006554                     _isxdigit:
 16510                           	opt stack 12
 16511                           
 16512                           ; BSR set to: 0
 16513                           ;incstack = 0
 16514                           ;isxdigit@c stored from wreg
 16515  006554  0100               	movlb	0	; () banked
 16516  006556  6F82               	movwf	isxdigit@c& (0+255),b
 16517  006558  0E01               	movlw	1
 16518  00655A  0100               	movlb	0	; () banked
 16519  00655C  6F81               	movwf	_isxdigit$6788& (0+255),b
 16520                           
 16521                           ; BSR set to: 0
 16522  00655E  0E67               	movlw	103
 16523  006560  6182               	cpfslt	isxdigit@c& (0+255),b
 16524  006562  D003               	goto	u12840
 16525                           
 16526                           ; BSR set to: 0
 16527  006564  0E61               	movlw	97
 16528  006566  6182               	cpfslt	isxdigit@c& (0+255),b
 16529  006568  D00E               	goto	l3710
 16530  00656A                     u12840:
 16531                           
 16532                           ; BSR set to: 0
 16533                           
 16534                           ; BSR set to: 0
 16535  00656A  0E47               	movlw	71
 16536  00656C  6182               	cpfslt	isxdigit@c& (0+255),b
 16537  00656E  D003               	goto	u12860
 16538                           
 16539                           ; BSR set to: 0
 16540  006570  0E41               	movlw	65
 16541  006572  6182               	cpfslt	isxdigit@c& (0+255),b
 16542  006574  D008               	goto	l3710
 16543  006576                     u12860:
 16544                           
 16545                           ; BSR set to: 0
 16546                           
 16547                           ; BSR set to: 0
 16548  006576  5182               	movf	isxdigit@c& (0+255),w,b
 16549  006578  EC3E  F035         	call	_isdigit
 16550  00657C  B0D8               	btfsc	status,0,c
 16551  00657E  D003               	goto	l3710
 16552  006580  0E00               	movlw	0
 16553  006582  0100               	movlb	0	; () banked
 16554  006584  6F81               	movwf	_isxdigit$6788& (0+255),b
 16555  006586                     l3710:
 16556                           
 16557                           ; BSR set to: 0
 16558  006586  C081  F080         	movff	_isxdigit$6788,??_isxdigit
 16559  00658A  0100               	movlb	0	; () banked
 16560  00658C  3180               	rrcf	??_isxdigit& (0+255),w,b
 16561  00658E  0012               	return	
 16562  006590                     __end_of_isxdigit:
 16563                           	opt stack 0
 16564                           tosu	equ	0xFFF
 16565                           tosh	equ	0xFFE
 16566                           tosl	equ	0xFFD
 16567                           pclath	equ	0xFFA
 16568                           tblptru	equ	0xFF8
 16569                           tblptrh	equ	0xFF7
 16570                           tblptrl	equ	0xFF6
 16571                           tablat	equ	0xFF5
 16572                           prodh	equ	0xFF4
 16573                           prodl	equ	0xFF3
 16574                           intcon	equ	0xFF2
 16575                           intcon2	equ	0xFF1
 16576                           intcon3	equ	0xFF0
 16577                           indf0	equ	0xFEF
 16578                           postinc0	equ	0xFEE
 16579                           plusw0	equ	0xFEB
 16580                           fsr0h	equ	0xFEA
 16581                           fsr0l	equ	0xFE9
 16582                           wreg	equ	0xFE8
 16583                           indf1	equ	0xFE7
 16584                           postinc1	equ	0xFE6
 16585                           postdec1	equ	0xFE5
 16586                           fsr1h	equ	0xFE2
 16587                           fsr1l	equ	0xFE1
 16588                           indf2	equ	0xFDF
 16589                           postinc2	equ	0xFDE
 16590                           postdec2	equ	0xFDD
 16591                           plusw2	equ	0xFDB
 16592                           fsr2h	equ	0xFDA
 16593                           fsr2l	equ	0xFD9
 16594                           status	equ	0xFD8
 16595                           
 16596 ;; *************** function _strtol *****************
 16597 ;; Defined at:
 16598 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16599 ;; Parameters:    Size  Location     Type
 16600 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16601 ;;		 -> Terminal@Payload(80), 
 16602 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16603 ;;		 -> NULL(0), 
 16604 ;;  base            2   45[BANK0 ] int 
 16605 ;; Auto vars:     Size  Location     Type
 16606 ;;  a               4   52[BANK0 ] long 
 16607 ;;  c               1   56[BANK0 ] unsigned char 
 16608 ;;  sign            1   51[BANK0 ] unsigned char 
 16609 ;; Return value:  Size  Location     Type
 16610 ;;                  4   41[BANK0 ] long 
 16611 ;; Registers used:
 16612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16613 ;; Tracked objects:
 16614 ;;		On entry : 0/0
 16615 ;;		On exit  : 0/0
 16616 ;;		Unchanged: 0/0
 16617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16618 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16619 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16620 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16621 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16622 ;;Total ram usage:       16 bytes
 16623 ;; Hardware stack levels used:    1
 16624 ;; Hardware stack levels required when called:   13
 16625 ;; This function calls:
 16626 ;;		___lmul
 16627 ;;		_isalpha
 16628 ;;		_isdigit
 16629 ;;		_isspace
 16630 ;;		_toupper
 16631 ;; This function is called by:
 16632 ;;		_Terminal
 16633 ;; This function uses a non-reentrant model
 16634 ;;
 16635                           
 16636                           	psect	text64
 16637  001822                     __ptext64:
 16638                           	opt stack 0
 16639  001822                     _strtol:
 16640                           	opt stack 12
 16641                           
 16642                           ; BSR set to: 0
 16643                           ;incstack = 0
 16644  001822  C089  FFD9         	movff	strtol@s,fsr2l
 16645  001826  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16646  00182A  50DF               	movf	indf2,w,c
 16647  00182C  0100               	movlb	0	; () banked
 16648  00182E  6F98               	movwf	strtol@c& (0+255),b
 16649                           
 16650                           ; BSR set to: 0
 16651  001830  4B89               	infsnz	strtol@s& (0+255),f,b
 16652  001832  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16653                           
 16654                           ; BSR set to: 0
 16655  001834  5198               	movf	strtol@c& (0+255),w,b
 16656  001836  EC76  F034         	call	_isspace
 16657  00183A  B0D8               	btfsc	status,0,c
 16658  00183C  D7F2               	goto	_strtol
 16659  00183E  0E00               	movlw	0
 16660  001840  0100               	movlb	0	; () banked
 16661  001842  6F94               	movwf	strtol@a& (0+255),b
 16662  001844  0E00               	movlw	0
 16663  001846  6F95               	movwf	(strtol@a+1)& (0+255),b
 16664  001848  0E00               	movlw	0
 16665  00184A  6F96               	movwf	(strtol@a+2)& (0+255),b
 16666  00184C  0E00               	movlw	0
 16667  00184E  6F97               	movwf	(strtol@a+3)& (0+255),b
 16668  001850  0E00               	movlw	0
 16669  001852  6F93               	movwf	strtol@sign& (0+255),b
 16670                           
 16671                           ; BSR set to: 0
 16672  001854  0E2D               	movlw	45
 16673  001856  1998               	xorwf	strtol@c& (0+255),w,b
 16674  001858  A4D8               	btfss	status,2,c
 16675  00185A  D003               	goto	l3617
 16676                           
 16677                           ; BSR set to: 0
 16678  00185C  0E01               	movlw	1
 16679  00185E  6F93               	movwf	strtol@sign& (0+255),b
 16680  001860  D004               	goto	u13360
 16681  001862                     l3617:
 16682                           
 16683                           ; BSR set to: 0
 16684                           
 16685                           ; BSR set to: 0
 16686  001862  0E2B               	movlw	43
 16687  001864  1998               	xorwf	strtol@c& (0+255),w,b
 16688  001866  A4D8               	btfss	status,2,c
 16689  001868  D008               	goto	l3619
 16690  00186A                     u13360:
 16691                           
 16692                           ; BSR set to: 0
 16693  00186A  C089  FFD9         	movff	strtol@s,fsr2l
 16694  00186E  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16695  001872  50DF               	movf	indf2,w,c
 16696  001874  6F98               	movwf	strtol@c& (0+255),b
 16697                           
 16698                           ; BSR set to: 0
 16699  001876  4B89               	infsnz	strtol@s& (0+255),f,b
 16700  001878  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16701  00187A                     l3619:
 16702                           
 16703                           ; BSR set to: 0
 16704                           
 16705                           ; BSR set to: 0
 16706                           
 16707                           ; BSR set to: 0
 16708  00187A  0E30               	movlw	48
 16709  00187C  1998               	xorwf	strtol@c& (0+255),w,b
 16710  00187E  A4D8               	btfss	status,2,c
 16711  001880  D02E               	goto	l3627
 16712                           
 16713                           ; BSR set to: 0
 16714  001882  C089  FFD9         	movff	strtol@s,fsr2l
 16715  001886  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16716  00188A  50DF               	movf	indf2,w,c
 16717  00188C  6F98               	movwf	strtol@c& (0+255),b
 16718                           
 16719                           ; BSR set to: 0
 16720  00188E  4B89               	infsnz	strtol@s& (0+255),f,b
 16721  001890  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16722                           
 16723                           ; BSR set to: 0
 16724  001892  518D               	movf	strtol@base& (0+255),w,b
 16725  001894  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16726  001896  B4D8               	btfsc	status,2,c
 16727  001898  D005               	goto	u13390
 16728                           
 16729                           ; BSR set to: 0
 16730  00189A  0E10               	movlw	16
 16731  00189C  198D               	xorwf	strtol@base& (0+255),w,b
 16732  00189E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16733  0018A0  A4D8               	btfss	status,2,c
 16734  0018A2  D015               	goto	l3621
 16735  0018A4                     u13390:
 16736                           
 16737                           ; BSR set to: 0
 16738                           
 16739                           ; BSR set to: 0
 16740  0018A4  0E78               	movlw	120
 16741  0018A6  1998               	xorwf	strtol@c& (0+255),w,b
 16742  0018A8  B4D8               	btfsc	status,2,c
 16743  0018AA  D004               	goto	u13410
 16744                           
 16745                           ; BSR set to: 0
 16746  0018AC  0E58               	movlw	88
 16747  0018AE  1998               	xorwf	strtol@c& (0+255),w,b
 16748  0018B0  A4D8               	btfss	status,2,c
 16749  0018B2  D00D               	goto	l3621
 16750  0018B4                     u13410:
 16751                           
 16752                           ; BSR set to: 0
 16753                           
 16754                           ; BSR set to: 0
 16755  0018B4  0E00               	movlw	0
 16756  0018B6  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16757  0018B8  0E10               	movlw	16
 16758  0018BA  6F8D               	movwf	strtol@base& (0+255),b
 16759                           
 16760                           ; BSR set to: 0
 16761  0018BC  C089  FFD9         	movff	strtol@s,fsr2l
 16762  0018C0  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16763  0018C4  50DF               	movf	indf2,w,c
 16764  0018C6  6F98               	movwf	strtol@c& (0+255),b
 16765                           
 16766                           ; BSR set to: 0
 16767  0018C8  4B89               	infsnz	strtol@s& (0+255),f,b
 16768  0018CA  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16769  0018CC  D008               	goto	l3627
 16770  0018CE                     l3621:
 16771                           
 16772                           ; BSR set to: 0
 16773                           
 16774                           ; BSR set to: 0
 16775  0018CE  518D               	movf	strtol@base& (0+255),w,b
 16776  0018D0  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16777  0018D2  A4D8               	btfss	status,2,c
 16778  0018D4  D004               	goto	l3627
 16779                           
 16780                           ; BSR set to: 0
 16781  0018D6  0E00               	movlw	0
 16782  0018D8  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16783  0018DA  0E08               	movlw	8
 16784  0018DC  6F8D               	movwf	strtol@base& (0+255),b
 16785  0018DE                     l3627:
 16786                           
 16787                           ; BSR set to: 0
 16788                           
 16789                           ; BSR set to: 0
 16790                           
 16791                           ; BSR set to: 0
 16792                           
 16793                           ; BSR set to: 0
 16794  0018DE  518D               	movf	strtol@base& (0+255),w,b
 16795  0018E0  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16796  0018E2  A4D8               	btfss	status,2,c
 16797  0018E4  D004               	goto	l3628
 16798                           
 16799                           ; BSR set to: 0
 16800  0018E6  0E00               	movlw	0
 16801  0018E8  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16802  0018EA  0E0A               	movlw	10
 16803  0018EC  6F8D               	movwf	strtol@base& (0+255),b
 16804  0018EE                     l3628:
 16805                           
 16806                           ; BSR set to: 0
 16807                           
 16808                           ; BSR set to: 0
 16809                           
 16810                           ; BSR set to: 0
 16811  0018EE  5198               	movf	strtol@c& (0+255),w,b
 16812  0018F0  ECED  F033         	call	_isalpha
 16813  0018F4  A0D8               	btfss	status,0,c
 16814  0018F6  D008               	goto	l3630
 16815  0018F8  0100               	movlb	0	; () banked
 16816  0018FA  5198               	movf	strtol@c& (0+255),w,b
 16817  0018FC  EC19  F036         	call	_toupper
 16818  001900  0FC9               	addlw	201
 16819  001902  0100               	movlb	0	; () banked
 16820  001904  6F98               	movwf	strtol@c& (0+255),b
 16821  001906  D009               	goto	l3633
 16822  001908                     l3630:
 16823                           
 16824                           ; BSR set to: 0
 16825  001908  0100               	movlb	0	; () banked
 16826  00190A  5198               	movf	strtol@c& (0+255),w,b
 16827  00190C  EC3E  F035         	call	_isdigit
 16828  001910  A0D8               	btfss	status,0,c
 16829  001912  D039               	goto	l3634
 16830  001914  0E30               	movlw	48
 16831  001916  0100               	movlb	0	; () banked
 16832  001918  5F98               	subwf	strtol@c& (0+255),f,b
 16833  00191A                     l3633:
 16834                           
 16835                           ; BSR set to: 0
 16836                           
 16837                           ; BSR set to: 0
 16838                           
 16839                           ; BSR set to: 0
 16840  00191A  5198               	movf	strtol@c& (0+255),w,b
 16841  00191C  6F8F               	movwf	??_strtol& (0+255),b
 16842  00191E  6B90               	clrf	(??_strtol+1)& (0+255),b
 16843  001920  518D               	movf	strtol@base& (0+255),w,b
 16844  001922  5D8F               	subwf	??_strtol& (0+255),w,b
 16845  001924  5190               	movf	(??_strtol+1)& (0+255),w,b
 16846  001926  0A80               	xorlw	128
 16847  001928  6F91               	movwf	(??_strtol+2)& (0+255),b
 16848  00192A  518E               	movf	(strtol@base+1)& (0+255),w,b
 16849  00192C  0A80               	xorlw	128
 16850  00192E  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16851  001930  B0D8               	btfsc	status,0,c
 16852  001932  D029               	goto	l3634
 16853                           
 16854                           ; BSR set to: 0
 16855                           
 16856                           ; BSR set to: 0
 16857                           
 16858                           ; BSR set to: 0
 16859  001934  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16860  001938  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16861  00193C  0E00               	movlw	0
 16862  00193E  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16863  001940  0EFF               	movlw	-1
 16864  001942  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16865  001944  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16866  001946  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16867  00194A  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16868  00194E  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16869  001952  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16870  001956  ECA5  F02D         	call	___lmul	;wreg free
 16871  00195A  0100               	movlb	0	; () banked
 16872  00195C  5198               	movf	strtol@c& (0+255),w,b
 16873  00195E  257D               	addwf	?___lmul& (0+255),w,b
 16874  001960  6F94               	movwf	strtol@a& (0+255),b
 16875  001962  0E00               	movlw	0
 16876  001964  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16877  001966  6F95               	movwf	(strtol@a+1)& (0+255),b
 16878  001968  0E00               	movlw	0
 16879  00196A  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16880  00196C  6F96               	movwf	(strtol@a+2)& (0+255),b
 16881  00196E  0E00               	movlw	0
 16882  001970  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16883  001972  6F97               	movwf	(strtol@a+3)& (0+255),b
 16884                           
 16885                           ; BSR set to: 0
 16886  001974  C089  FFD9         	movff	strtol@s,fsr2l
 16887  001978  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16888  00197C  50DF               	movf	indf2,w,c
 16889  00197E  6F98               	movwf	strtol@c& (0+255),b
 16890                           
 16891                           ; BSR set to: 0
 16892  001980  4B89               	infsnz	strtol@s& (0+255),f,b
 16893  001982  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16894  001984  D7B4               	goto	l3628
 16895  001986                     l3634:
 16896                           
 16897                           ; BSR set to: 0
 16898  001986  0100               	movlb	0	; () banked
 16899  001988  518B               	movf	strtol@endptr& (0+255),w,b
 16900  00198A  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16901  00198C  B4D8               	btfsc	status,2,c
 16902  00198E  D00E               	goto	l3636
 16903                           
 16904                           ; BSR set to: 0
 16905  001990  0EFF               	movlw	255
 16906  001992  2589               	addwf	strtol@s& (0+255),w,b
 16907  001994  6F8F               	movwf	??_strtol& (0+255),b
 16908  001996  0EFF               	movlw	255
 16909  001998  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16910  00199A  6F90               	movwf	(??_strtol+1)& (0+255),b
 16911  00199C  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16912  0019A0  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16913  0019A4  C08F  FFDE         	movff	??_strtol,postinc2
 16914  0019A8  C090  FFDD         	movff	??_strtol+1,postdec2
 16915  0019AC                     l3636:
 16916                           
 16917                           ; BSR set to: 0
 16918                           
 16919                           ; BSR set to: 0
 16920  0019AC  5193               	movf	strtol@sign& (0+255),w,b
 16921  0019AE  B4D8               	btfsc	status,2,c
 16922  0019B0  D01A               	goto	l3637
 16923                           
 16924                           ; BSR set to: 0
 16925  0019B2  C094  F08F         	movff	strtol@a,??_strtol
 16926  0019B6  C095  F090         	movff	strtol@a+1,??_strtol+1
 16927  0019BA  C096  F091         	movff	strtol@a+2,??_strtol+2
 16928  0019BE  C097  F092         	movff	strtol@a+3,??_strtol+3
 16929  0019C2  1F8F               	comf	??_strtol& (0+255),f,b
 16930  0019C4  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16931  0019C6  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16932  0019C8  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16933  0019CA  2B8F               	incf	??_strtol& (0+255),f,b
 16934  0019CC  0E00               	movlw	0
 16935  0019CE  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16936  0019D0  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16937  0019D2  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16938  0019D4  C08F  F089         	movff	??_strtol,?_strtol
 16939  0019D8  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16940  0019DC  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16941  0019E0  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16942                           
 16943                           ; BSR set to: 0
 16944  0019E4  0012               	return	
 16945  0019E6                     l3637:
 16946                           
 16947                           ; BSR set to: 0
 16948  0019E6  C094  F089         	movff	strtol@a,?_strtol
 16949  0019EA  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16950  0019EE  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16951  0019F2  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16952                           
 16953                           ; BSR set to: 0
 16954  0019F6  0012               	return		;funcret
 16955  0019F8                     __end_of_strtol:
 16956                           	opt stack 0
 16957                           tosu	equ	0xFFF
 16958                           tosh	equ	0xFFE
 16959                           tosl	equ	0xFFD
 16960                           pclath	equ	0xFFA
 16961                           tblptru	equ	0xFF8
 16962                           tblptrh	equ	0xFF7
 16963                           tblptrl	equ	0xFF6
 16964                           tablat	equ	0xFF5
 16965                           prodh	equ	0xFF4
 16966                           prodl	equ	0xFF3
 16967                           intcon	equ	0xFF2
 16968                           intcon2	equ	0xFF1
 16969                           intcon3	equ	0xFF0
 16970                           indf0	equ	0xFEF
 16971                           postinc0	equ	0xFEE
 16972                           plusw0	equ	0xFEB
 16973                           fsr0h	equ	0xFEA
 16974                           fsr0l	equ	0xFE9
 16975                           wreg	equ	0xFE8
 16976                           indf1	equ	0xFE7
 16977                           postinc1	equ	0xFE6
 16978                           postdec1	equ	0xFE5
 16979                           fsr1h	equ	0xFE2
 16980                           fsr1l	equ	0xFE1
 16981                           indf2	equ	0xFDF
 16982                           postinc2	equ	0xFDE
 16983                           postdec2	equ	0xFDD
 16984                           plusw2	equ	0xFDB
 16985                           fsr2h	equ	0xFDA
 16986                           fsr2l	equ	0xFD9
 16987                           status	equ	0xFD8
 16988                           
 16989 ;; *************** function _toupper *****************
 16990 ;; Defined at:
 16991 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16992 ;; Parameters:    Size  Location     Type
 16993 ;;  c               1    wreg     unsigned char 
 16994 ;; Auto vars:     Size  Location     Type
 16995 ;;  c               1   29[BANK0 ] unsigned char 
 16996 ;; Return value:  Size  Location     Type
 16997 ;;                  1    wreg      unsigned char 
 16998 ;; Registers used:
 16999 ;;		wreg, status,2, status,0
 17000 ;; Tracked objects:
 17001 ;;		On entry : 0/0
 17002 ;;		On exit  : 0/0
 17003 ;;		Unchanged: 0/0
 17004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17006 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17008 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17009 ;;Total ram usage:        1 bytes
 17010 ;; Hardware stack levels used:    1
 17011 ;; Hardware stack levels required when called:   11
 17012 ;; This function calls:
 17013 ;;		Nothing
 17014 ;; This function is called by:
 17015 ;;		_strtol
 17016 ;; This function uses a non-reentrant model
 17017 ;;
 17018                           
 17019                           	psect	text65
 17020  006C32                     __ptext65:
 17021                           	opt stack 0
 17022  006C32                     _toupper:
 17023                           	opt stack 13
 17024                           
 17025                           ; BSR set to: 0
 17026                           ;incstack = 0
 17027                           ;toupper@c stored from wreg
 17028  006C32  0100               	movlb	0	; () banked
 17029  006C34  6F7D               	movwf	toupper@c& (0+255),b
 17030  006C36  0E7B               	movlw	123
 17031  006C38  0100               	movlb	0	; () banked
 17032  006C3A  617D               	cpfslt	toupper@c& (0+255),b
 17033  006C3C  D004               	goto	l3641
 17034                           
 17035                           ; BSR set to: 0
 17036  006C3E  0E60               	movlw	96
 17037  006C40  657D               	cpfsgt	toupper@c& (0+255),b
 17038  006C42  D001               	goto	l3641
 17039                           
 17040                           ; BSR set to: 0
 17041  006C44  9B7D               	bcf	toupper@c& (0+255),5,b
 17042  006C46                     l3641:
 17043                           
 17044                           ; BSR set to: 0
 17045                           
 17046                           ; BSR set to: 0
 17047  006C46  517D               	movf	toupper@c& (0+255),w,b
 17048  006C48  0012               	return	
 17049  006C4A                     __end_of_toupper:
 17050                           	opt stack 0
 17051                           tosu	equ	0xFFF
 17052                           tosh	equ	0xFFE
 17053                           tosl	equ	0xFFD
 17054                           pclath	equ	0xFFA
 17055                           tblptru	equ	0xFF8
 17056                           tblptrh	equ	0xFF7
 17057                           tblptrl	equ	0xFF6
 17058                           tablat	equ	0xFF5
 17059                           prodh	equ	0xFF4
 17060                           prodl	equ	0xFF3
 17061                           intcon	equ	0xFF2
 17062                           intcon2	equ	0xFF1
 17063                           intcon3	equ	0xFF0
 17064                           indf0	equ	0xFEF
 17065                           postinc0	equ	0xFEE
 17066                           plusw0	equ	0xFEB
 17067                           fsr0h	equ	0xFEA
 17068                           fsr0l	equ	0xFE9
 17069                           wreg	equ	0xFE8
 17070                           indf1	equ	0xFE7
 17071                           postinc1	equ	0xFE6
 17072                           postdec1	equ	0xFE5
 17073                           fsr1h	equ	0xFE2
 17074                           fsr1l	equ	0xFE1
 17075                           indf2	equ	0xFDF
 17076                           postinc2	equ	0xFDE
 17077                           postdec2	equ	0xFDD
 17078                           plusw2	equ	0xFDB
 17079                           fsr2h	equ	0xFDA
 17080                           fsr2l	equ	0xFD9
 17081                           status	equ	0xFD8
 17082                           
 17083 ;; *************** function _isspace *****************
 17084 ;; Defined at:
 17085 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 17086 ;; Parameters:    Size  Location     Type
 17087 ;;  c               1    wreg     unsigned char 
 17088 ;; Auto vars:     Size  Location     Type
 17089 ;;  c               1   31[BANK0 ] unsigned char 
 17090 ;; Return value:  Size  Location     Type
 17091 ;;		None               void
 17092 ;; Registers used:
 17093 ;;		wreg, status,2, status,0
 17094 ;; Tracked objects:
 17095 ;;		On entry : 0/0
 17096 ;;		On exit  : 0/0
 17097 ;;		Unchanged: 0/0
 17098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17100 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17101 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17102 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17103 ;;Total ram usage:        3 bytes
 17104 ;; Hardware stack levels used:    1
 17105 ;; Hardware stack levels required when called:   11
 17106 ;; This function calls:
 17107 ;;		Nothing
 17108 ;; This function is called by:
 17109 ;;		_strtol
 17110 ;;		_xtoi
 17111 ;; This function uses a non-reentrant model
 17112 ;;
 17113                           
 17114                           	psect	text66
 17115  0068EC                     __ptext66:
 17116                           	opt stack 0
 17117  0068EC                     _isspace:
 17118                           	opt stack 13
 17119                           
 17120                           ; BSR set to: 0
 17121                           ;incstack = 0
 17122                           ;isspace@c stored from wreg
 17123  0068EC  0100               	movlb	0	; () banked
 17124  0068EE  6F7F               	movwf	isspace@c& (0+255),b
 17125  0068F0  0E01               	movlw	1
 17126  0068F2  0100               	movlb	0	; () banked
 17127  0068F4  6F7E               	movwf	_isspace$6781& (0+255),b
 17128                           
 17129                           ; BSR set to: 0
 17130  0068F6  0E20               	movlw	32
 17131  0068F8  197F               	xorwf	isspace@c& (0+255),w,b
 17132  0068FA  B4D8               	btfsc	status,2,c
 17133  0068FC  D008               	goto	l3698
 17134                           
 17135                           ; BSR set to: 0
 17136  0068FE  0E0E               	movlw	14
 17137  006900  617F               	cpfslt	isspace@c& (0+255),b
 17138  006902  D003               	goto	u12750
 17139                           
 17140                           ; BSR set to: 0
 17141  006904  0E09               	movlw	9
 17142  006906  617F               	cpfslt	isspace@c& (0+255),b
 17143  006908  D002               	goto	l3698
 17144  00690A                     u12750:
 17145                           
 17146                           ; BSR set to: 0
 17147                           
 17148                           ; BSR set to: 0
 17149  00690A  0E00               	movlw	0
 17150  00690C  6F7E               	movwf	_isspace$6781& (0+255),b
 17151  00690E                     l3698:
 17152                           
 17153                           ; BSR set to: 0
 17154                           
 17155                           ; BSR set to: 0
 17156  00690E  C07E  F07D         	movff	_isspace$6781,??_isspace
 17157  006912  317D               	rrcf	??_isspace& (0+255),w,b
 17158  006914  0012               	return	
 17159  006916                     __end_of_isspace:
 17160                           	opt stack 0
 17161                           tosu	equ	0xFFF
 17162                           tosh	equ	0xFFE
 17163                           tosl	equ	0xFFD
 17164                           pclath	equ	0xFFA
 17165                           tblptru	equ	0xFF8
 17166                           tblptrh	equ	0xFF7
 17167                           tblptrl	equ	0xFF6
 17168                           tablat	equ	0xFF5
 17169                           prodh	equ	0xFF4
 17170                           prodl	equ	0xFF3
 17171                           intcon	equ	0xFF2
 17172                           intcon2	equ	0xFF1
 17173                           intcon3	equ	0xFF0
 17174                           indf0	equ	0xFEF
 17175                           postinc0	equ	0xFEE
 17176                           plusw0	equ	0xFEB
 17177                           fsr0h	equ	0xFEA
 17178                           fsr0l	equ	0xFE9
 17179                           wreg	equ	0xFE8
 17180                           indf1	equ	0xFE7
 17181                           postinc1	equ	0xFE6
 17182                           postdec1	equ	0xFE5
 17183                           fsr1h	equ	0xFE2
 17184                           fsr1l	equ	0xFE1
 17185                           indf2	equ	0xFDF
 17186                           postinc2	equ	0xFDE
 17187                           postdec2	equ	0xFDD
 17188                           plusw2	equ	0xFDB
 17189                           fsr2h	equ	0xFDA
 17190                           fsr2l	equ	0xFD9
 17191                           status	equ	0xFD8
 17192                           
 17193 ;; *************** function _isalpha *****************
 17194 ;; Defined at:
 17195 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17196 ;; Parameters:    Size  Location     Type
 17197 ;;  c               1    wreg     unsigned char 
 17198 ;; Auto vars:     Size  Location     Type
 17199 ;;  c               1   34[BANK0 ] unsigned char 
 17200 ;; Return value:  Size  Location     Type
 17201 ;;		None               void
 17202 ;; Registers used:
 17203 ;;		wreg, status,2, status,0, cstack
 17204 ;; Tracked objects:
 17205 ;;		On entry : 0/0
 17206 ;;		On exit  : 0/0
 17207 ;;		Unchanged: 0/0
 17208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17210 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17211 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17212 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17213 ;;Total ram usage:        3 bytes
 17214 ;; Hardware stack levels used:    1
 17215 ;; Hardware stack levels required when called:   12
 17216 ;; This function calls:
 17217 ;;		_isupper
 17218 ;; This function is called by:
 17219 ;;		_strtol
 17220 ;; This function uses a non-reentrant model
 17221 ;;
 17222                           
 17223                           	psect	text67
 17224  0067DA                     __ptext67:
 17225                           	opt stack 0
 17226  0067DA                     _isalpha:
 17227                           	opt stack 12
 17228                           
 17229                           ; BSR set to: 0
 17230                           ;incstack = 0
 17231                           ;isalpha@c stored from wreg
 17232  0067DA  0100               	movlb	0	; () banked
 17233  0067DC  6F82               	movwf	isalpha@c& (0+255),b
 17234  0067DE  0E01               	movlw	1
 17235  0067E0  0100               	movlb	0	; () banked
 17236  0067E2  6F81               	movwf	_isalpha$6778& (0+255),b
 17237                           
 17238                           ; BSR set to: 0
 17239  0067E4  0E7B               	movlw	123
 17240  0067E6  6182               	cpfslt	isalpha@c& (0+255),b
 17241  0067E8  D003               	goto	u12770
 17242                           
 17243                           ; BSR set to: 0
 17244  0067EA  0E61               	movlw	97
 17245  0067EC  6182               	cpfslt	isalpha@c& (0+255),b
 17246  0067EE  D008               	goto	l3693
 17247  0067F0                     u12770:
 17248                           
 17249                           ; BSR set to: 0
 17250                           
 17251                           ; BSR set to: 0
 17252  0067F0  5182               	movf	isalpha@c& (0+255),w,b
 17253  0067F2  EC1C  F035         	call	_isupper
 17254  0067F6  B0D8               	btfsc	status,0,c
 17255  0067F8  D003               	goto	l3693
 17256  0067FA  0E00               	movlw	0
 17257  0067FC  0100               	movlb	0	; () banked
 17258  0067FE  6F81               	movwf	_isalpha$6778& (0+255),b
 17259  006800                     l3693:
 17260                           
 17261                           ; BSR set to: 0
 17262  006800  C081  F080         	movff	_isalpha$6778,??_isalpha
 17263  006804  0100               	movlb	0	; () banked
 17264  006806  3180               	rrcf	??_isalpha& (0+255),w,b
 17265  006808  0012               	return	
 17266  00680A                     __end_of_isalpha:
 17267                           	opt stack 0
 17268                           tosu	equ	0xFFF
 17269                           tosh	equ	0xFFE
 17270                           tosl	equ	0xFFD
 17271                           pclath	equ	0xFFA
 17272                           tblptru	equ	0xFF8
 17273                           tblptrh	equ	0xFF7
 17274                           tblptrl	equ	0xFF6
 17275                           tablat	equ	0xFF5
 17276                           prodh	equ	0xFF4
 17277                           prodl	equ	0xFF3
 17278                           intcon	equ	0xFF2
 17279                           intcon2	equ	0xFF1
 17280                           intcon3	equ	0xFF0
 17281                           indf0	equ	0xFEF
 17282                           postinc0	equ	0xFEE
 17283                           plusw0	equ	0xFEB
 17284                           fsr0h	equ	0xFEA
 17285                           fsr0l	equ	0xFE9
 17286                           wreg	equ	0xFE8
 17287                           indf1	equ	0xFE7
 17288                           postinc1	equ	0xFE6
 17289                           postdec1	equ	0xFE5
 17290                           fsr1h	equ	0xFE2
 17291                           fsr1l	equ	0xFE1
 17292                           indf2	equ	0xFDF
 17293                           postinc2	equ	0xFDE
 17294                           postdec2	equ	0xFDD
 17295                           plusw2	equ	0xFDB
 17296                           fsr2h	equ	0xFDA
 17297                           fsr2l	equ	0xFD9
 17298                           status	equ	0xFD8
 17299                           
 17300 ;; *************** function _isupper *****************
 17301 ;; Defined at:
 17302 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17303 ;; Parameters:    Size  Location     Type
 17304 ;;  c               1    wreg     unsigned char 
 17305 ;; Auto vars:     Size  Location     Type
 17306 ;;  c               1   31[BANK0 ] unsigned char 
 17307 ;; Return value:  Size  Location     Type
 17308 ;;		None               void
 17309 ;; Registers used:
 17310 ;;		wreg, status,2, status,0
 17311 ;; Tracked objects:
 17312 ;;		On entry : 0/0
 17313 ;;		On exit  : 0/0
 17314 ;;		Unchanged: 0/0
 17315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17317 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17318 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17319 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17320 ;;Total ram usage:        3 bytes
 17321 ;; Hardware stack levels used:    1
 17322 ;; Hardware stack levels required when called:   11
 17323 ;; This function calls:
 17324 ;;		Nothing
 17325 ;; This function is called by:
 17326 ;;		_xtoi
 17327 ;;		_isalpha
 17328 ;; This function uses a non-reentrant model
 17329 ;;
 17330                           
 17331                           	psect	text68
 17332  006A38                     __ptext68:
 17333                           	opt stack 0
 17334  006A38                     _isupper:
 17335                           	opt stack 13
 17336                           
 17337                           ; BSR set to: 0
 17338                           ;incstack = 0
 17339                           ;isupper@c stored from wreg
 17340  006A38  0100               	movlb	0	; () banked
 17341  006A3A  6F7F               	movwf	isupper@c& (0+255),b
 17342  006A3C  0E00               	movlw	0
 17343  006A3E  0100               	movlb	0	; () banked
 17344  006A40  6F7E               	movwf	_isupper$6784& (0+255),b
 17345                           
 17346                           ; BSR set to: 0
 17347  006A42  0E5B               	movlw	91
 17348  006A44  617F               	cpfslt	isupper@c& (0+255),b
 17349  006A46  D005               	goto	l3703
 17350                           
 17351                           ; BSR set to: 0
 17352  006A48  0E40               	movlw	64
 17353  006A4A  657F               	cpfsgt	isupper@c& (0+255),b
 17354  006A4C  D002               	goto	l3703
 17355                           
 17356                           ; BSR set to: 0
 17357  006A4E  0E01               	movlw	1
 17358  006A50  6F7E               	movwf	_isupper$6784& (0+255),b
 17359  006A52                     l3703:
 17360                           
 17361                           ; BSR set to: 0
 17362                           
 17363                           ; BSR set to: 0
 17364  006A52  C07E  F07D         	movff	_isupper$6784,??_isupper
 17365  006A56  317D               	rrcf	??_isupper& (0+255),w,b
 17366  006A58  0012               	return	
 17367  006A5A                     __end_of_isupper:
 17368                           	opt stack 0
 17369                           tosu	equ	0xFFF
 17370                           tosh	equ	0xFFE
 17371                           tosl	equ	0xFFD
 17372                           pclath	equ	0xFFA
 17373                           tblptru	equ	0xFF8
 17374                           tblptrh	equ	0xFF7
 17375                           tblptrl	equ	0xFF6
 17376                           tablat	equ	0xFF5
 17377                           prodh	equ	0xFF4
 17378                           prodl	equ	0xFF3
 17379                           intcon	equ	0xFF2
 17380                           intcon2	equ	0xFF1
 17381                           intcon3	equ	0xFF0
 17382                           indf0	equ	0xFEF
 17383                           postinc0	equ	0xFEE
 17384                           plusw0	equ	0xFEB
 17385                           fsr0h	equ	0xFEA
 17386                           fsr0l	equ	0xFE9
 17387                           wreg	equ	0xFE8
 17388                           indf1	equ	0xFE7
 17389                           postinc1	equ	0xFE6
 17390                           postdec1	equ	0xFE5
 17391                           fsr1h	equ	0xFE2
 17392                           fsr1l	equ	0xFE1
 17393                           indf2	equ	0xFDF
 17394                           postinc2	equ	0xFDE
 17395                           postdec2	equ	0xFDD
 17396                           plusw2	equ	0xFDB
 17397                           fsr2h	equ	0xFDA
 17398                           fsr2l	equ	0xFD9
 17399                           status	equ	0xFD8
 17400                           
 17401 ;; *************** function _strcpy *****************
 17402 ;; Defined at:
 17403 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17404 ;; Parameters:    Size  Location     Type
 17405 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17406 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17407 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17408 ;;		 -> STR_23(20), STR_21(42), 
 17409 ;; Auto vars:     Size  Location     Type
 17410 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17411 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17412 ;; Return value:  Size  Location     Type
 17413 ;;                  2   29[BANK0 ] PTR unsigned char 
 17414 ;; Registers used:
 17415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17416 ;; Tracked objects:
 17417 ;;		On entry : 0/0
 17418 ;;		On exit  : 0/0
 17419 ;;		Unchanged: 0/0
 17420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17421 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17422 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17424 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17425 ;;Total ram usage:        6 bytes
 17426 ;; Hardware stack levels used:    1
 17427 ;; Hardware stack levels required when called:   11
 17428 ;; This function calls:
 17429 ;;		Nothing
 17430 ;; This function is called by:
 17431 ;;		_Terminal
 17432 ;;		_Term_MainSm
 17433 ;; This function uses a non-reentrant model
 17434 ;;
 17435                           
 17436                           	psect	text69
 17437  006748                     __ptext69:
 17438                           	opt stack 0
 17439  006748                     _strcpy:
 17440                           	opt stack 15
 17441                           
 17442                           ; BSR set to: 0
 17443                           ;incstack = 0
 17444  006748  C07D  F081         	movff	strcpy@to,strcpy@cp
 17445  00674C  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17446  006750  D005               	goto	l3595
 17447  006752  0100               	movlb	0	; () banked
 17448  006754  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17449  006756  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17450  006758  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17451  00675A  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17452  00675C                     l3595:
 17453                           
 17454                           ; BSR set to: 0
 17455  00675C  C07F  FFF6         	movff	strcpy@from,tblptrl
 17456  006760  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17457  006764                     	if	0	;tblptru may be non-zero
 17458  006764                     	endif
 17459  006764                     	if	0	;tblptru may be non-zero
 17460  006764                     	endif
 17461  006764  C081  FFD9         	movff	strcpy@cp,fsr2l
 17462  006768  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17463  00676C  0008               	tblrd		*
 17464  00676E  CFF5 FFDF          	movff	tablat,indf2
 17465  006772  50DF               	movf	indf2,w,c
 17466  006774  B4D8               	btfsc	status,2,c
 17467  006776  0012               	return	
 17468  006778  D7EC               	goto	l3596
 17469  00677A                     __end_of_strcpy:
 17470                           	opt stack 0
 17471                           tosu	equ	0xFFF
 17472                           tosh	equ	0xFFE
 17473                           tosl	equ	0xFFD
 17474                           pclath	equ	0xFFA
 17475                           tblptru	equ	0xFF8
 17476                           tblptrh	equ	0xFF7
 17477                           tblptrl	equ	0xFF6
 17478                           tablat	equ	0xFF5
 17479                           prodh	equ	0xFF4
 17480                           prodl	equ	0xFF3
 17481                           intcon	equ	0xFF2
 17482                           intcon2	equ	0xFF1
 17483                           intcon3	equ	0xFF0
 17484                           indf0	equ	0xFEF
 17485                           postinc0	equ	0xFEE
 17486                           plusw0	equ	0xFEB
 17487                           fsr0h	equ	0xFEA
 17488                           fsr0l	equ	0xFE9
 17489                           wreg	equ	0xFE8
 17490                           indf1	equ	0xFE7
 17491                           postinc1	equ	0xFE6
 17492                           postdec1	equ	0xFE5
 17493                           fsr1h	equ	0xFE2
 17494                           fsr1l	equ	0xFE1
 17495                           indf2	equ	0xFDF
 17496                           postinc2	equ	0xFDE
 17497                           postdec2	equ	0xFDD
 17498                           plusw2	equ	0xFDB
 17499                           fsr2h	equ	0xFDA
 17500                           fsr2l	equ	0xFD9
 17501                           status	equ	0xFD8
 17502                           
 17503 ;; *************** function _putUSBUSART *****************
 17504 ;; Defined at:
 17505 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17506 ;; Parameters:    Size  Location     Type
 17507 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17508 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17509 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17510 ;;		 -> RxBuffer(400), 
 17511 ;;  length          1   37[BANK0 ] unsigned char 
 17512 ;; Auto vars:     Size  Location     Type
 17513 ;;		None
 17514 ;; Return value:  Size  Location     Type
 17515 ;;                  1    wreg      void 
 17516 ;; Registers used:
 17517 ;;		wreg, status,2, status,0
 17518 ;; Tracked objects:
 17519 ;;		On entry : 0/0
 17520 ;;		On exit  : 0/0
 17521 ;;		Unchanged: 0/0
 17522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17523 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17526 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17527 ;;Total ram usage:        3 bytes
 17528 ;; Hardware stack levels used:    1
 17529 ;; Hardware stack levels required when called:   11
 17530 ;; This function calls:
 17531 ;;		Nothing
 17532 ;; This function is called by:
 17533 ;;		_Terminal
 17534 ;;		_Term_MainSm
 17535 ;;		_GsmGprsTerminal
 17536 ;; This function uses a non-reentrant model
 17537 ;;
 17538                           
 17539                           	psect	text70
 17540  006A5A                     __ptext70:
 17541                           	opt stack 0
 17542  006A5A                     _putUSBUSART:
 17543                           	opt stack 15
 17544                           
 17545                           ;usb_device_cdc.c: 584: ;
 17546                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17547                           
 17548                           ;incstack = 0
 17549  006A5A  0100               	movlb	0	; () banked
 17550  006A5C  51C8               	movf	_cdc_trf_state& (0+255),w,b
 17551  006A5E  A4D8               	btfss	status,2,c
 17552  006A60  0012               	return	
 17553                           
 17554                           ; BSR set to: 0
 17555                           ;usb_device_cdc.c: 586: {
 17556                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17557  006A62  C083  F2CC         	movff	putUSBUSART@data,_pCDCSrc
 17558  006A66  C084  F2CD         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17559                           
 17560                           ; BSR set to: 0
 17561  006A6A  C085  F0C7         	movff	putUSBUSART@length,_cdc_tx_len
 17562                           
 17563                           ; BSR set to: 0
 17564  006A6E  0E01               	movlw	1
 17565  006A70  0101               	movlb	1	; () banked
 17566  006A72  6FDC               	movwf	_cdc_mem_type& (0+255),b
 17567                           
 17568                           ; BSR set to: 1
 17569  006A74  0E01               	movlw	1
 17570  006A76  0100               	movlb	0	; () banked
 17571  006A78  6FC8               	movwf	_cdc_trf_state& (0+255),b
 17572  006A7A  0012               	return	
 17573  006A7C                     __end_of_putUSBUSART:
 17574                           	opt stack 0
 17575                           tosu	equ	0xFFF
 17576                           tosh	equ	0xFFE
 17577                           tosl	equ	0xFFD
 17578                           pclath	equ	0xFFA
 17579                           tblptru	equ	0xFF8
 17580                           tblptrh	equ	0xFF7
 17581                           tblptrl	equ	0xFF6
 17582                           tablat	equ	0xFF5
 17583                           prodh	equ	0xFF4
 17584                           prodl	equ	0xFF3
 17585                           intcon	equ	0xFF2
 17586                           intcon2	equ	0xFF1
 17587                           intcon3	equ	0xFF0
 17588                           indf0	equ	0xFEF
 17589                           postinc0	equ	0xFEE
 17590                           plusw0	equ	0xFEB
 17591                           fsr0h	equ	0xFEA
 17592                           fsr0l	equ	0xFE9
 17593                           wreg	equ	0xFE8
 17594                           indf1	equ	0xFE7
 17595                           postinc1	equ	0xFE6
 17596                           postdec1	equ	0xFE5
 17597                           fsr1h	equ	0xFE2
 17598                           fsr1l	equ	0xFE1
 17599                           indf2	equ	0xFDF
 17600                           postinc2	equ	0xFDE
 17601                           postdec2	equ	0xFDD
 17602                           plusw2	equ	0xFDB
 17603                           fsr2h	equ	0xFDA
 17604                           fsr2l	equ	0xFD9
 17605                           status	equ	0xFD8
 17606                           
 17607 ;; *************** function _itoa *****************
 17608 ;; Defined at:
 17609 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17610 ;; Parameters:    Size  Location     Type
 17611 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17612 ;;		 -> Terminal@Payload(80), 
 17613 ;;  val             2   53[BANK0 ] int 
 17614 ;;  base            2   55[BANK0 ] int 
 17615 ;; Auto vars:     Size  Location     Type
 17616 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17617 ;;		 -> Terminal@Payload(80), 
 17618 ;; Return value:  Size  Location     Type
 17619 ;;                  2   51[BANK0 ] PTR unsigned char 
 17620 ;; Registers used:
 17621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17622 ;; Tracked objects:
 17623 ;;		On entry : 0/0
 17624 ;;		On exit  : 0/0
 17625 ;;		Unchanged: 0/0
 17626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17627 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17628 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17630 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17631 ;;Total ram usage:        8 bytes
 17632 ;; Hardware stack levels used:    1
 17633 ;; Hardware stack levels required when called:   13
 17634 ;; This function calls:
 17635 ;;		_utoa
 17636 ;; This function is called by:
 17637 ;;		_Terminal
 17638 ;; This function uses a non-reentrant model
 17639 ;;
 17640                           
 17641                           	psect	text71
 17642  006312                     __ptext71:
 17643                           	opt stack 0
 17644  006312                     _itoa:
 17645                           	opt stack 12
 17646                           
 17647                           ; BSR set to: 0
 17648                           ;incstack = 0
 17649  006312  C093  F099         	movff	itoa@buf,itoa@cp
 17650  006316  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17651  00631A  0100               	movlb	0	; () banked
 17652  00631C  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17653  00631E  D00C               	goto	l3343
 17654                           
 17655                           ; BSR set to: 0
 17656  006320  C093  FFD9         	movff	itoa@buf,fsr2l
 17657  006324  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17658  006328  0E2D               	movlw	45
 17659  00632A  6EDF               	movwf	indf2,c
 17660                           
 17661                           ; BSR set to: 0
 17662  00632C  4B93               	infsnz	itoa@buf& (0+255),f,b
 17663  00632E  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17664                           
 17665                           ; BSR set to: 0
 17666  006330  6D95               	negf	itoa@val& (0+255),b
 17667  006332  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17668  006334  B0D8               	btfsc	status,0,c
 17669  006336  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17670  006338                     l3343:
 17671                           
 17672                           ; BSR set to: 0
 17673                           
 17674                           ; BSR set to: 0
 17675  006338  C093  F08A         	movff	itoa@buf,utoa@buf
 17676  00633C  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17677  006340  C095  F08C         	movff	itoa@val,utoa@val
 17678  006344  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17679  006348  C097  F08E         	movff	itoa@base,utoa@base
 17680  00634C  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17681  006350  EC38  F024         	call	_utoa	;wreg free
 17682  006354  0012               	return	
 17683  006356                     __end_of_itoa:
 17684                           	opt stack 0
 17685                           tosu	equ	0xFFF
 17686                           tosh	equ	0xFFE
 17687                           tosl	equ	0xFFD
 17688                           pclath	equ	0xFFA
 17689                           tblptru	equ	0xFF8
 17690                           tblptrh	equ	0xFF7
 17691                           tblptrl	equ	0xFF6
 17692                           tablat	equ	0xFF5
 17693                           prodh	equ	0xFF4
 17694                           prodl	equ	0xFF3
 17695                           intcon	equ	0xFF2
 17696                           intcon2	equ	0xFF1
 17697                           intcon3	equ	0xFF0
 17698                           indf0	equ	0xFEF
 17699                           postinc0	equ	0xFEE
 17700                           plusw0	equ	0xFEB
 17701                           fsr0h	equ	0xFEA
 17702                           fsr0l	equ	0xFE9
 17703                           wreg	equ	0xFE8
 17704                           indf1	equ	0xFE7
 17705                           postinc1	equ	0xFE6
 17706                           postdec1	equ	0xFE5
 17707                           fsr1h	equ	0xFE2
 17708                           fsr1l	equ	0xFE1
 17709                           indf2	equ	0xFDF
 17710                           postinc2	equ	0xFDE
 17711                           postdec2	equ	0xFDD
 17712                           plusw2	equ	0xFDB
 17713                           fsr2h	equ	0xFDA
 17714                           fsr2l	equ	0xFD9
 17715                           status	equ	0xFD8
 17716                           
 17717 ;; *************** function _utoa *****************
 17718 ;; Defined at:
 17719 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17720 ;; Parameters:    Size  Location     Type
 17721 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17722 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17723 ;;  val             2   44[BANK0 ] unsigned int 
 17724 ;;  base            2   46[BANK0 ] int 
 17725 ;; Auto vars:     Size  Location     Type
 17726 ;;  v               2   48[BANK0 ] unsigned int 
 17727 ;;  c               1   50[BANK0 ] unsigned char 
 17728 ;; Return value:  Size  Location     Type
 17729 ;;                  2   42[BANK0 ] PTR unsigned char 
 17730 ;; Registers used:
 17731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17732 ;; Tracked objects:
 17733 ;;		On entry : 0/0
 17734 ;;		On exit  : 0/0
 17735 ;;		Unchanged: 0/0
 17736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17737 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17738 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17740 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17741 ;;Total ram usage:        9 bytes
 17742 ;; Hardware stack levels used:    1
 17743 ;; Hardware stack levels required when called:   12
 17744 ;; This function calls:
 17745 ;;		___lwdiv
 17746 ;;		___lwmod
 17747 ;; This function is called by:
 17748 ;;		_Term_MainSm
 17749 ;;		_itoa
 17750 ;; This function uses a non-reentrant model
 17751 ;;
 17752                           
 17753                           	psect	text72
 17754  004870                     __ptext72:
 17755                           	opt stack 0
 17756  004870                     _utoa:
 17757                           	opt stack 14
 17758                           
 17759                           ;incstack = 0
 17760  004870  C08C  F090         	movff	utoa@val,utoa@v
 17761  004874  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17762  004878  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17763  00487C  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17764  004880  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17765  004884  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17766  004888  ECFC  F02E         	call	___lwdiv	;wreg free
 17767  00488C  C083  F090         	movff	?___lwdiv,utoa@v
 17768  004890  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17769  004894  0100               	movlb	0	; () banked
 17770  004896  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17771  004898  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17772                           
 17773                           ; BSR set to: 0
 17774  00489A  5190               	movf	utoa@v& (0+255),w,b
 17775  00489C  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17776  00489E  A4D8               	btfss	status,2,c
 17777  0048A0  D7EB               	goto	l3347
 17778                           
 17779                           ; BSR set to: 0
 17780                           
 17781                           ; BSR set to: 0
 17782  0048A2  C08A  FFD9         	movff	utoa@buf,fsr2l
 17783  0048A6  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17784  0048AA  0E00               	movlw	0
 17785  0048AC  6EDF               	movwf	indf2,c
 17786                           
 17787                           ; BSR set to: 0
 17788  0048AE  078A               	decf	utoa@buf& (0+255),f,b
 17789  0048B0  A0D8               	btfss	status,0,c
 17790  0048B2  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17791  0048B4                     
 17792                           ; BSR set to: 0
 17793                           
 17794                           ; BSR set to: 0
 17795  0048B4  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17796  0048B8  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17797  0048BC  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17798  0048C0  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17799  0048C4  ECAB  F031         	call	___lwmod	;wreg free
 17800  0048C8  0100               	movlb	0	; () banked
 17801  0048CA  517D               	movf	?___lwmod& (0+255),w,b
 17802  0048CC  6F92               	movwf	utoa@c& (0+255),b
 17803                           
 17804                           ; BSR set to: 0
 17805  0048CE  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17806  0048D2  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17807  0048D6  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17808  0048DA  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17809  0048DE  ECFC  F02E         	call	___lwdiv	;wreg free
 17810  0048E2  C083  F08C         	movff	?___lwdiv,utoa@val
 17811  0048E6  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17812  0048EA  0E09               	movlw	9
 17813  0048EC  0100               	movlb	0	; () banked
 17814  0048EE  6592               	cpfsgt	utoa@c& (0+255),b
 17815  0048F0  D002               	goto	l3350
 17816                           
 17817                           ; BSR set to: 0
 17818  0048F2  0E07               	movlw	7
 17819  0048F4  2792               	addwf	utoa@c& (0+255),f,b
 17820  0048F6                     l3350:
 17821                           
 17822                           ; BSR set to: 0
 17823  0048F6  0E30               	movlw	48
 17824  0048F8  2792               	addwf	utoa@c& (0+255),f,b
 17825                           
 17826                           ; BSR set to: 0
 17827  0048FA  C08A  FFD9         	movff	utoa@buf,fsr2l
 17828  0048FE  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17829  004902  C092  FFDF         	movff	utoa@c,indf2
 17830                           
 17831                           ; BSR set to: 0
 17832  004906  078A               	decf	utoa@buf& (0+255),f,b
 17833  004908  A0D8               	btfss	status,0,c
 17834  00490A  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17835                           
 17836                           ; BSR set to: 0
 17837  00490C  518C               	movf	utoa@val& (0+255),w,b
 17838  00490E  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17839  004910  A4D8               	btfss	status,2,c
 17840  004912  D7D0               	goto	l3349
 17841                           
 17842                           ; BSR set to: 0
 17843                           ;	Return value of _utoa is never used
 17844                           
 17845                           ; BSR set to: 0
 17846  004914  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17847  004916  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17848  004918  0012               	return	
 17849  00491A                     __end_of_utoa:
 17850                           	opt stack 0
 17851                           tosu	equ	0xFFF
 17852                           tosh	equ	0xFFE
 17853                           tosl	equ	0xFFD
 17854                           pclath	equ	0xFFA
 17855                           tblptru	equ	0xFF8
 17856                           tblptrh	equ	0xFF7
 17857                           tblptrl	equ	0xFF6
 17858                           tablat	equ	0xFF5
 17859                           prodh	equ	0xFF4
 17860                           prodl	equ	0xFF3
 17861                           intcon	equ	0xFF2
 17862                           intcon2	equ	0xFF1
 17863                           intcon3	equ	0xFF0
 17864                           indf0	equ	0xFEF
 17865                           postinc0	equ	0xFEE
 17866                           plusw0	equ	0xFEB
 17867                           fsr0h	equ	0xFEA
 17868                           fsr0l	equ	0xFE9
 17869                           wreg	equ	0xFE8
 17870                           indf1	equ	0xFE7
 17871                           postinc1	equ	0xFE6
 17872                           postdec1	equ	0xFE5
 17873                           fsr1h	equ	0xFE2
 17874                           fsr1l	equ	0xFE1
 17875                           indf2	equ	0xFDF
 17876                           postinc2	equ	0xFDE
 17877                           postdec2	equ	0xFDD
 17878                           plusw2	equ	0xFDB
 17879                           fsr2h	equ	0xFDA
 17880                           fsr2l	equ	0xFD9
 17881                           status	equ	0xFD8
 17882                           
 17883 ;; *************** function ___lwmod *****************
 17884 ;; Defined at:
 17885 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17886 ;; Parameters:    Size  Location     Type
 17887 ;;  dividend        2   29[BANK0 ] unsigned int 
 17888 ;;  divisor         2   31[BANK0 ] unsigned int 
 17889 ;; Auto vars:     Size  Location     Type
 17890 ;;  counter         1   33[BANK0 ] unsigned char 
 17891 ;; Return value:  Size  Location     Type
 17892 ;;                  2   29[BANK0 ] unsigned int 
 17893 ;; Registers used:
 17894 ;;		wreg, status,2, status,0
 17895 ;; Tracked objects:
 17896 ;;		On entry : 0/0
 17897 ;;		On exit  : 0/0
 17898 ;;		Unchanged: 0/0
 17899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17900 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17901 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17903 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17904 ;;Total ram usage:        5 bytes
 17905 ;; Hardware stack levels used:    1
 17906 ;; Hardware stack levels required when called:   11
 17907 ;; This function calls:
 17908 ;;		Nothing
 17909 ;; This function is called by:
 17910 ;;		_utoa
 17911 ;; This function uses a non-reentrant model
 17912 ;;
 17913                           
 17914                           	psect	text73
 17915  006356                     __ptext73:
 17916                           	opt stack 0
 17917  006356                     ___lwmod:
 17918                           	opt stack 14
 17919                           
 17920                           ; BSR set to: 0
 17921                           ;incstack = 0
 17922  006356  0100               	movlb	0	; () banked
 17923  006358  517F               	movf	___lwmod@divisor& (0+255),w,b
 17924  00635A  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17925  00635C  B4D8               	btfsc	status,2,c
 17926  00635E  D018               	goto	l3445
 17927                           
 17928                           ; BSR set to: 0
 17929  006360  0E01               	movlw	1
 17930  006362  6F81               	movwf	___lwmod@counter& (0+255),b
 17931  006364  D004               	goto	l3440
 17932  006366                     
 17933                           ; BSR set to: 0
 17934                           
 17935                           ; BSR set to: 0
 17936  006366  90D8               	bcf	status,0,c
 17937  006368  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17938  00636A  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17939  00636C  2B81               	incf	___lwmod@counter& (0+255),f,b
 17940  00636E                     l3440:
 17941                           
 17942                           ; BSR set to: 0
 17943                           
 17944                           ; BSR set to: 0
 17945  00636E  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17946  006370  D7FA               	goto	l3441
 17947  006372                     u12410:
 17948                           
 17949                           ; BSR set to: 0
 17950                           
 17951                           ; BSR set to: 0
 17952                           
 17953                           ; BSR set to: 0
 17954  006372  517F               	movf	___lwmod@divisor& (0+255),w,b
 17955  006374  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17956  006376  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17957  006378  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17958  00637A  A0D8               	btfss	status,0,c
 17959  00637C  D004               	goto	l3444
 17960                           
 17961                           ; BSR set to: 0
 17962  00637E  517F               	movf	___lwmod@divisor& (0+255),w,b
 17963  006380  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17964  006382  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17965  006384  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17966  006386                     l3444:
 17967                           
 17968                           ; BSR set to: 0
 17969                           
 17970                           ; BSR set to: 0
 17971  006386  90D8               	bcf	status,0,c
 17972  006388  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17973  00638A  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17974                           
 17975                           ; BSR set to: 0
 17976  00638C  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17977  00638E  D7F1               	goto	u12410
 17978  006390                     l3445:
 17979                           
 17980                           ; BSR set to: 0
 17981                           
 17982                           ; BSR set to: 0
 17983  006390  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17984  006394  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17985                           
 17986                           ; BSR set to: 0
 17987  006398  0012               	return		;funcret
 17988  00639A                     __end_of___lwmod:
 17989                           	opt stack 0
 17990                           tosu	equ	0xFFF
 17991                           tosh	equ	0xFFE
 17992                           tosl	equ	0xFFD
 17993                           pclath	equ	0xFFA
 17994                           tblptru	equ	0xFF8
 17995                           tblptrh	equ	0xFF7
 17996                           tblptrl	equ	0xFF6
 17997                           tablat	equ	0xFF5
 17998                           prodh	equ	0xFF4
 17999                           prodl	equ	0xFF3
 18000                           intcon	equ	0xFF2
 18001                           intcon2	equ	0xFF1
 18002                           intcon3	equ	0xFF0
 18003                           indf0	equ	0xFEF
 18004                           postinc0	equ	0xFEE
 18005                           plusw0	equ	0xFEB
 18006                           fsr0h	equ	0xFEA
 18007                           fsr0l	equ	0xFE9
 18008                           wreg	equ	0xFE8
 18009                           indf1	equ	0xFE7
 18010                           postinc1	equ	0xFE6
 18011                           postdec1	equ	0xFE5
 18012                           fsr1h	equ	0xFE2
 18013                           fsr1l	equ	0xFE1
 18014                           indf2	equ	0xFDF
 18015                           postinc2	equ	0xFDE
 18016                           postdec2	equ	0xFDD
 18017                           plusw2	equ	0xFDB
 18018                           fsr2h	equ	0xFDA
 18019                           fsr2l	equ	0xFD9
 18020                           status	equ	0xFD8
 18021                           
 18022 ;; *************** function _getsUSBUSART *****************
 18023 ;; Defined at:
 18024 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 18025 ;; Parameters:    Size  Location     Type
 18026 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 18027 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 18028 ;;  len             1   38[BANK0 ] unsigned char 
 18029 ;; Auto vars:     Size  Location     Type
 18030 ;;		None
 18031 ;; Return value:  Size  Location     Type
 18032 ;;                  1    wreg      unsigned char 
 18033 ;; Registers used:
 18034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18035 ;; Tracked objects:
 18036 ;;		On entry : 0/0
 18037 ;;		On exit  : 0/0
 18038 ;;		Unchanged: 0/0
 18039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18040 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18042 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18043 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18044 ;;Total ram usage:        4 bytes
 18045 ;; Hardware stack levels used:    1
 18046 ;; Hardware stack levels required when called:   12
 18047 ;; This function calls:
 18048 ;;		_USBTransferOnePacket
 18049 ;; This function is called by:
 18050 ;;		_Terminal
 18051 ;;		_GsmGprsTerminal
 18052 ;; This function uses a non-reentrant model
 18053 ;;
 18054                           
 18055                           	psect	text74
 18056  004E14                     __ptext74:
 18057                           	opt stack 0
 18058  004E14                     _getsUSBUSART:
 18059                           	opt stack 13
 18060                           
 18061                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 18062                           
 18063                           ; BSR set to: 0
 18064                           ;incstack = 0
 18065  004E14  0E00               	movlw	0
 18066  004E16  0100               	movlb	0	; () banked
 18067  004E18  6FC9               	movwf	_cdc_rx_len& (0+255),b
 18068                           
 18069                           ; BSR set to: 0
 18070                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 18071  004E1A  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18072  004E1C  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18073  004E1E  B4D8               	btfsc	status,2,c
 18074  004E20  D006               	goto	u13130
 18075                           
 18076                           ; BSR set to: 0
 18077  004E22  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18078  004E26  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18079  004E2A  BEDF               	btfsc	indf2,7,c
 18080  004E2C  D03B               	goto	l1924
 18081  004E2E                     u13130:
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;usb_device_cdc.c: 493: {
 18085                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18086                           
 18087                           ; BSR set to: 0
 18088  004E2E  EE20 F001          	lfsr	2,1
 18089  004E32  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18090  004E34  26D9               	addwf	fsr2l,f,c
 18091  004E36  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18092  004E38  22DA               	addwfc	fsr2h,f,c
 18093  004E3A  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18094  004E3C  5CDE               	subwf	postinc2,w,c
 18095  004E3E  B0D8               	btfsc	status,0,c
 18096  004E40  D008               	goto	l1927
 18097                           
 18098                           ; BSR set to: 0
 18099                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18100  004E42  EE20 F001          	lfsr	2,1
 18101  004E46  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18102  004E48  26D9               	addwf	fsr2l,f,c
 18103  004E4A  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18104  004E4C  22DA               	addwfc	fsr2h,f,c
 18105  004E4E  50DF               	movf	indf2,w,c
 18106  004E50  6F86               	movwf	getsUSBUSART@len& (0+255),b
 18107  004E52                     l1927:
 18108                           
 18109                           ; BSR set to: 0
 18110                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18111                           
 18112                           ; BSR set to: 0
 18113  004E52  0E00               	movlw	0
 18114  004E54  6FC9               	movwf	_cdc_rx_len& (0+255),b
 18115  004E56  D013               	goto	l1928
 18116  004E58                     
 18117                           ; BSR set to: 0
 18118                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18119                           
 18120                           ; BSR set to: 0
 18121  004E58  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18122  004E5A  0D01               	mullw	1
 18123  004E5C  0E00               	movlw	low _cdc_data_rx
 18124  004E5E  24F3               	addwf	prodl,w,c
 18125  004E60  6ED9               	movwf	fsr2l,c
 18126  004E62  0E05               	movlw	high _cdc_data_rx
 18127  004E64  20F4               	addwfc	prodh,w,c
 18128  004E66  6EDA               	movwf	fsr2h,c
 18129  004E68  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18130  004E6A  0D01               	mullw	1
 18131  004E6C  50F3               	movf	prodl,w,c
 18132  004E6E  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18133  004E70  6EE1               	movwf	fsr1l,c
 18134  004E72  50F4               	movf	prodh,w,c
 18135  004E74  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18136  004E76  6EE2               	movwf	fsr1h,c
 18137  004E78  CFDF FFE7          	movff	indf2,indf1
 18138                           
 18139                           ; BSR set to: 0
 18140  004E7C  2BC9               	incf	_cdc_rx_len& (0+255),f,b
 18141  004E7E                     l1928:
 18142                           
 18143                           ; BSR set to: 0
 18144                           
 18145                           ; BSR set to: 0
 18146  004E7E  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18147  004E80  5DC9               	subwf	_cdc_rx_len& (0+255),w,b
 18148  004E82  A0D8               	btfss	status,0,c
 18149  004E84  D7E9               	goto	l1929
 18150                           
 18151                           ; BSR set to: 0
 18152                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18153                           
 18154                           ; BSR set to: 0
 18155  004E86  0E00               	movlw	0
 18156  004E88  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18157  004E8A  0E00               	movlw	low _cdc_data_rx
 18158  004E8C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18159  004E8E  0E05               	movlw	high _cdc_data_rx
 18160  004E90  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18161  004E92  0E40               	movlw	64
 18162  004E94  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18163  004E96  0E02               	movlw	2
 18164  004E98  EC75  F022         	call	_USBTransferOnePacket
 18165  004E9C  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18166  004EA0  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18167  004EA4                     l1924:
 18168                           
 18169                           ;usb_device_cdc.c: 513: }
 18170                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18171  004EA4  0100               	movlb	0	; () banked
 18172  004EA6  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18173  004EA8  0012               	return	
 18174  004EAA                     __end_of_getsUSBUSART:
 18175                           	opt stack 0
 18176                           tosu	equ	0xFFF
 18177                           tosh	equ	0xFFE
 18178                           tosl	equ	0xFFD
 18179                           pclath	equ	0xFFA
 18180                           tblptru	equ	0xFF8
 18181                           tblptrh	equ	0xFF7
 18182                           tblptrl	equ	0xFF6
 18183                           tablat	equ	0xFF5
 18184                           prodh	equ	0xFF4
 18185                           prodl	equ	0xFF3
 18186                           intcon	equ	0xFF2
 18187                           intcon2	equ	0xFF1
 18188                           intcon3	equ	0xFF0
 18189                           indf0	equ	0xFEF
 18190                           postinc0	equ	0xFEE
 18191                           plusw0	equ	0xFEB
 18192                           fsr0h	equ	0xFEA
 18193                           fsr0l	equ	0xFE9
 18194                           wreg	equ	0xFE8
 18195                           indf1	equ	0xFE7
 18196                           postinc1	equ	0xFE6
 18197                           postdec1	equ	0xFE5
 18198                           fsr1h	equ	0xFE2
 18199                           fsr1l	equ	0xFE1
 18200                           indf2	equ	0xFDF
 18201                           postinc2	equ	0xFDE
 18202                           postdec2	equ	0xFDD
 18203                           plusw2	equ	0xFDB
 18204                           fsr2h	equ	0xFDA
 18205                           fsr2l	equ	0xFD9
 18206                           status	equ	0xFD8
 18207                           
 18208 ;; *************** function _USBTransferOnePacket *****************
 18209 ;; Defined at:
 18210 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18211 ;; Parameters:    Size  Location     Type
 18212 ;;  ep              1    wreg     unsigned char 
 18213 ;;  dir             1   29[BANK0 ] unsigned char 
 18214 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18215 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18216 ;;  len             1   32[BANK0 ] unsigned char 
 18217 ;; Auto vars:     Size  Location     Type
 18218 ;;  ep              1   33[BANK0 ] unsigned char 
 18219 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18220 ;;		 -> NULL(0), BDT(48), 
 18221 ;; Return value:  Size  Location     Type
 18222 ;;                  2   29[BANK0 ] PTR void 
 18223 ;; Registers used:
 18224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18225 ;; Tracked objects:
 18226 ;;		On entry : 0/0
 18227 ;;		On exit  : 0/0
 18228 ;;		Unchanged: 0/0
 18229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18230 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18231 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18233 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18234 ;;Total ram usage:        7 bytes
 18235 ;; Hardware stack levels used:    1
 18236 ;; Hardware stack levels required when called:   11
 18237 ;; This function calls:
 18238 ;;		Nothing
 18239 ;; This function is called by:
 18240 ;;		_CDCInitEP
 18241 ;;		_getsUSBUSART
 18242 ;;		_CDCTxService
 18243 ;;		_USBCDCEventHandler
 18244 ;; This function uses a non-reentrant model
 18245 ;;
 18246                           
 18247                           	psect	text75
 18248  0044EA                     __ptext75:
 18249                           	opt stack 0
 18250  0044EA                     _USBTransferOnePacket:
 18251                           	opt stack 13
 18252                           
 18253                           ; BSR set to: 0
 18254                           ;incstack = 0
 18255                           ;USBTransferOnePacket@ep stored from wreg
 18256  0044EA  0100               	movlb	0	; () banked
 18257  0044EC  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18258                           
 18259                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18260                           ;usb_device.c: 1018: if(dir != 0)
 18261  0044EE  0100               	movlb	0	; () banked
 18262  0044F0  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18263  0044F2  B4D8               	btfsc	status,2,c
 18264  0044F4  D007               	goto	l1648
 18265                           
 18266                           ; BSR set to: 0
 18267                           ;usb_device.c: 1019: {
 18268                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18269  0044F6  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18270  0044F8  0D02               	mullw	2
 18271  0044FA  0EB6               	movlw	low _pBDTEntryIn
 18272  0044FC  24F3               	addwf	prodl,w,c
 18273  0044FE  6ED9               	movwf	fsr2l,c
 18274  004500  0E00               	movlw	high _pBDTEntryIn
 18275  004502  D006               	goto	L16
 18276  004504                     l1648:
 18277                           
 18278                           ; BSR set to: 0
 18279                           ;usb_device.c: 1023: else
 18280                           ;usb_device.c: 1024: {
 18281                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18282                           
 18283                           ; BSR set to: 0
 18284  004504  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18285  004506  0D02               	mullw	2
 18286  004508  0E06               	movlw	low _pBDTEntryOut
 18287  00450A  24F3               	addwf	prodl,w,c
 18288  00450C  6ED9               	movwf	fsr2l,c
 18289  00450E  0E03               	movlw	high _pBDTEntryOut
 18290  004510                     L16:
 18291  004510  20F4               	addwfc	prodh,w,c
 18292  004512  6EDA               	movwf	fsr2h,c
 18293  004514  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18294  004518  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18295                           
 18296                           ; BSR set to: 0
 18297                           ;usb_device.c: 1027: }
 18298                           ;usb_device.c: 1031: if(handle == 0)
 18299                           
 18300                           ; BSR set to: 0
 18301  00451C  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18302  00451E  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18303  004520  A4D8               	btfss	status,2,c
 18304  004522  D005               	goto	l1650
 18305                           
 18306                           ; BSR set to: 0
 18307                           ;usb_device.c: 1032: {
 18308                           ;usb_device.c: 1033: return 0;
 18309  004524  0E00               	movlw	0
 18310  004526  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18311  004528  0E00               	movlw	0
 18312  00452A  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18313                           
 18314                           ; BSR set to: 0
 18315  00452C  0012               	return	
 18316  00452E                     l1650:
 18317                           
 18318                           ; BSR set to: 0
 18319                           ;usb_device.c: 1034: }
 18320                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18321                           
 18322                           ; BSR set to: 0
 18323  00452E  EE20 F002          	lfsr	2,2
 18324  004532  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18325  004534  26D9               	addwf	fsr2l,f,c
 18326  004536  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18327  004538  22DA               	addwfc	fsr2h,f,c
 18328  00453A  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18329  00453E  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18330                           
 18331                           ;usb_device.c: 1048: handle->CNT = len;
 18332  004542  EE20 F001          	lfsr	2,1
 18333  004546  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18334  004548  26D9               	addwf	fsr2l,f,c
 18335  00454A  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18336  00454C  22DA               	addwfc	fsr2h,f,c
 18337  00454E  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18338                           
 18339                           ; BSR set to: 0
 18340                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18341  004552  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18342  004556  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18343  00455A  0E40               	movlw	64
 18344  00455C  16DF               	andwf	indf2,f,c
 18345                           
 18346                           ; BSR set to: 0
 18347                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18348  00455E  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18349  004562  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18350  004566  0E00               	movlw	0
 18351  004568  86DB               	bsf	plusw2,3,c
 18352                           
 18353                           ; BSR set to: 0
 18354                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18355  00456A  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18356  00456E  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18357  004572  0E00               	movlw	0
 18358  004574  8EDB               	bsf	plusw2,7,c
 18359                           
 18360                           ; BSR set to: 0
 18361                           ;usb_device.c: 1054: if(dir != 0)
 18362  004576  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18363  004578  B4D8               	btfsc	status,2,c
 18364  00457A  D007               	goto	l1652
 18365                           
 18366                           ; BSR set to: 0
 18367                           ;usb_device.c: 1055: {
 18368                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18369  00457C  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18370  00457E  0D02               	mullw	2
 18371  004580  0EB6               	movlw	low _pBDTEntryIn
 18372  004582  24F3               	addwf	prodl,w,c
 18373  004584  6ED9               	movwf	fsr2l,c
 18374  004586  0E00               	movlw	high _pBDTEntryIn
 18375  004588  D006               	goto	L17
 18376  00458A                     l1652:
 18377                           
 18378                           ; BSR set to: 0
 18379                           ;usb_device.c: 1059: else
 18380                           ;usb_device.c: 1060: {
 18381                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18382                           
 18383                           ; BSR set to: 0
 18384  00458A  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18385  00458C  0D02               	mullw	2
 18386  00458E  0E06               	movlw	low _pBDTEntryOut
 18387  004590  24F3               	addwf	prodl,w,c
 18388  004592  6ED9               	movwf	fsr2l,c
 18389  004594  0E03               	movlw	high _pBDTEntryOut
 18390  004596                     L17:
 18391  004596  20F4               	addwfc	prodh,w,c
 18392  004598  6EDA               	movwf	fsr2h,c
 18393  00459A  0E04               	movlw	4
 18394  00459C  1ADF               	xorwf	indf2,f,c
 18395                           
 18396                           ; BSR set to: 0
 18397                           ;usb_device.c: 1063: }
 18398                           ;usb_device.c: 1064: return (void*)handle;
 18399                           
 18400                           ; BSR set to: 0
 18401  00459E  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18402  0045A2  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18403  0045A6  0012               	return	
 18404  0045A8                     __end_of_USBTransferOnePacket:
 18405                           	opt stack 0
 18406                           tosu	equ	0xFFF
 18407                           tosh	equ	0xFFE
 18408                           tosl	equ	0xFFD
 18409                           pclath	equ	0xFFA
 18410                           tblptru	equ	0xFF8
 18411                           tblptrh	equ	0xFF7
 18412                           tblptrl	equ	0xFF6
 18413                           tablat	equ	0xFF5
 18414                           prodh	equ	0xFF4
 18415                           prodl	equ	0xFF3
 18416                           intcon	equ	0xFF2
 18417                           intcon2	equ	0xFF1
 18418                           intcon3	equ	0xFF0
 18419                           indf0	equ	0xFEF
 18420                           postinc0	equ	0xFEE
 18421                           plusw0	equ	0xFEB
 18422                           fsr0h	equ	0xFEA
 18423                           fsr0l	equ	0xFE9
 18424                           wreg	equ	0xFE8
 18425                           indf1	equ	0xFE7
 18426                           postinc1	equ	0xFE6
 18427                           postdec1	equ	0xFE5
 18428                           fsr1h	equ	0xFE2
 18429                           fsr1l	equ	0xFE1
 18430                           indf2	equ	0xFDF
 18431                           postinc2	equ	0xFDE
 18432                           postdec2	equ	0xFDD
 18433                           plusw2	equ	0xFDB
 18434                           fsr2h	equ	0xFDA
 18435                           fsr2l	equ	0xFD9
 18436                           status	equ	0xFD8
 18437                           
 18438 ;; *************** function _atoi *****************
 18439 ;; Defined at:
 18440 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18441 ;; Parameters:    Size  Location     Type
 18442 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18443 ;;		 -> Terminal@Len(4), 
 18444 ;; Auto vars:     Size  Location     Type
 18445 ;;  a               2   40[BANK0 ] int 
 18446 ;;  sign            1   39[BANK0 ] unsigned char 
 18447 ;; Return value:  Size  Location     Type
 18448 ;;                  2   35[BANK0 ] int 
 18449 ;; Registers used:
 18450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18451 ;; Tracked objects:
 18452 ;;		On entry : 0/0
 18453 ;;		On exit  : 0/0
 18454 ;;		Unchanged: 0/0
 18455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18456 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18457 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18458 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18459 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18460 ;;Total ram usage:        7 bytes
 18461 ;; Hardware stack levels used:    1
 18462 ;; Hardware stack levels required when called:   12
 18463 ;; This function calls:
 18464 ;;		___wmul
 18465 ;;		_isdigit
 18466 ;; This function is called by:
 18467 ;;		_Terminal
 18468 ;; This function uses a non-reentrant model
 18469 ;;
 18470                           
 18471                           	psect	text76
 18472  003906                     __ptext76:
 18473                           	opt stack 0
 18474  003906                     _atoi:
 18475                           	opt stack 13
 18476                           
 18477                           ; BSR set to: 0
 18478                           ;incstack = 0
 18479  003906  D003               	goto	l3156
 18480  003908  0100               	movlb	0	; () banked
 18481  00390A  4B83               	infsnz	atoi@s& (0+255),f,b
 18482  00390C  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18483  00390E                     l3156:
 18484                           
 18485                           ; BSR set to: 0
 18486  00390E  C083  FFD9         	movff	atoi@s,fsr2l
 18487  003912  C084  FFDA         	movff	atoi@s+1,fsr2h
 18488  003916  0E20               	movlw	32
 18489  003918  18DE               	xorwf	postinc2,w,c
 18490  00391A  B4D8               	btfsc	status,2,c
 18491  00391C  D7F5               	goto	l3157
 18492  00391E  C083  FFD9         	movff	atoi@s,fsr2l
 18493  003922  C084  FFDA         	movff	atoi@s+1,fsr2h
 18494  003926  0E09               	movlw	9
 18495  003928  18DE               	xorwf	postinc2,w,c
 18496  00392A  B4D8               	btfsc	status,2,c
 18497  00392C  D7ED               	goto	l3157
 18498  00392E  0E00               	movlw	0
 18499  003930  0100               	movlb	0	; () banked
 18500  003932  6F89               	movwf	(atoi@a+1)& (0+255),b
 18501  003934  0E00               	movlw	0
 18502  003936  6F88               	movwf	atoi@a& (0+255),b
 18503  003938  0E00               	movlw	0
 18504  00393A  6F87               	movwf	atoi@sign& (0+255),b
 18505                           
 18506                           ; BSR set to: 0
 18507  00393C  C083  FFD9         	movff	atoi@s,fsr2l
 18508  003940  C084  FFDA         	movff	atoi@s+1,fsr2h
 18509  003944  0E2D               	movlw	45
 18510  003946  18DE               	xorwf	postinc2,w,c
 18511  003948  A4D8               	btfss	status,2,c
 18512  00394A  D002               	goto	l3159
 18513                           
 18514                           ; BSR set to: 0
 18515  00394C  2B87               	incf	atoi@sign& (0+255),f,b
 18516  00394E  D026               	goto	l14319
 18517  003950                     l3159:
 18518                           
 18519                           ; BSR set to: 0
 18520                           
 18521                           ; BSR set to: 0
 18522  003950  C083  FFD9         	movff	atoi@s,fsr2l
 18523  003954  C084  FFDA         	movff	atoi@s+1,fsr2h
 18524  003958  0E2B               	movlw	43
 18525  00395A  18DE               	xorwf	postinc2,w,c
 18526  00395C  A4D8               	btfss	status,2,c
 18527  00395E  D020               	goto	l3162
 18528  003960  D01D               	goto	l14319
 18529  003962                     
 18530                           ; BSR set to: 0
 18531  003962  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18532  003966  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18533  00396A  0E00               	movlw	0
 18534  00396C  0100               	movlb	0	; () banked
 18535  00396E  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18536  003970  0E0A               	movlw	10
 18537  003972  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18538  003974  EC8B  F034         	call	___wmul	;wreg free
 18539  003978  C083  FFD9         	movff	atoi@s,fsr2l
 18540  00397C  C084  FFDA         	movff	atoi@s+1,fsr2h
 18541  003980  50DF               	movf	indf2,w,c
 18542  003982  0100               	movlb	0	; () banked
 18543  003984  6F85               	movwf	??_atoi& (0+255),b
 18544  003986  6B86               	clrf	(??_atoi+1)& (0+255),b
 18545  003988  517D               	movf	?___wmul& (0+255),w,b
 18546  00398A  2785               	addwf	??_atoi& (0+255),f,b
 18547  00398C  517E               	movf	(?___wmul+1)& (0+255),w,b
 18548  00398E  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18549  003990  0ED0               	movlw	208
 18550  003992  2585               	addwf	??_atoi& (0+255),w,b
 18551  003994  6F88               	movwf	atoi@a& (0+255),b
 18552  003996  0EFF               	movlw	255
 18553  003998  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18554  00399A  6F89               	movwf	(atoi@a+1)& (0+255),b
 18555  00399C                     l14319:
 18556                           
 18557                           ; BSR set to: 0
 18558  00399C  4B83               	infsnz	atoi@s& (0+255),f,b
 18559  00399E  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18560  0039A0                     l3162:
 18561                           
 18562                           ; BSR set to: 0
 18563                           
 18564                           ; BSR set to: 0
 18565  0039A0  C083  FFD9         	movff	atoi@s,fsr2l
 18566  0039A4  C084  FFDA         	movff	atoi@s+1,fsr2h
 18567  0039A8  50DF               	movf	indf2,w,c
 18568  0039AA  EC3E  F035         	call	_isdigit
 18569  0039AE  B0D8               	btfsc	status,0,c
 18570  0039B0  D7D8               	goto	l3163
 18571  0039B2  0100               	movlb	0	; () banked
 18572  0039B4  5187               	movf	atoi@sign& (0+255),w,b
 18573  0039B6  B4D8               	btfsc	status,2,c
 18574  0039B8  D00D               	goto	l3165
 18575                           
 18576                           ; BSR set to: 0
 18577  0039BA  C088  F085         	movff	atoi@a,??_atoi
 18578  0039BE  C089  F086         	movff	atoi@a+1,??_atoi+1
 18579  0039C2  1F85               	comf	??_atoi& (0+255),f,b
 18580  0039C4  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18581  0039C6  4B85               	infsnz	??_atoi& (0+255),f,b
 18582  0039C8  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18583  0039CA  C085  F083         	movff	??_atoi,?_atoi
 18584  0039CE  C086  F084         	movff	??_atoi+1,?_atoi+1
 18585  0039D2  0012               	return	
 18586  0039D4                     l3165:
 18587                           
 18588                           ; BSR set to: 0
 18589  0039D4  C088  F083         	movff	atoi@a,?_atoi
 18590  0039D8  C089  F084         	movff	atoi@a+1,?_atoi+1
 18591                           
 18592                           ; BSR set to: 0
 18593  0039DC  0012               	return		;funcret
 18594  0039DE                     __end_of_atoi:
 18595                           	opt stack 0
 18596                           tosu	equ	0xFFF
 18597                           tosh	equ	0xFFE
 18598                           tosl	equ	0xFFD
 18599                           pclath	equ	0xFFA
 18600                           tblptru	equ	0xFF8
 18601                           tblptrh	equ	0xFF7
 18602                           tblptrl	equ	0xFF6
 18603                           tablat	equ	0xFF5
 18604                           prodh	equ	0xFF4
 18605                           prodl	equ	0xFF3
 18606                           intcon	equ	0xFF2
 18607                           intcon2	equ	0xFF1
 18608                           intcon3	equ	0xFF0
 18609                           indf0	equ	0xFEF
 18610                           postinc0	equ	0xFEE
 18611                           plusw0	equ	0xFEB
 18612                           fsr0h	equ	0xFEA
 18613                           fsr0l	equ	0xFE9
 18614                           wreg	equ	0xFE8
 18615                           indf1	equ	0xFE7
 18616                           postinc1	equ	0xFE6
 18617                           postdec1	equ	0xFE5
 18618                           fsr1h	equ	0xFE2
 18619                           fsr1l	equ	0xFE1
 18620                           indf2	equ	0xFDF
 18621                           postinc2	equ	0xFDE
 18622                           postdec2	equ	0xFDD
 18623                           plusw2	equ	0xFDB
 18624                           fsr2h	equ	0xFDA
 18625                           fsr2l	equ	0xFD9
 18626                           status	equ	0xFD8
 18627                           
 18628 ;; *************** function _isdigit *****************
 18629 ;; Defined at:
 18630 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18631 ;; Parameters:    Size  Location     Type
 18632 ;;  c               1    wreg     unsigned char 
 18633 ;; Auto vars:     Size  Location     Type
 18634 ;;  c               1   31[BANK0 ] unsigned char 
 18635 ;; Return value:  Size  Location     Type
 18636 ;;		None               void
 18637 ;; Registers used:
 18638 ;;		wreg, status,2, status,0
 18639 ;; Tracked objects:
 18640 ;;		On entry : 0/0
 18641 ;;		On exit  : 0/0
 18642 ;;		Unchanged: 0/0
 18643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18645 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18646 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18647 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18648 ;;Total ram usage:        3 bytes
 18649 ;; Hardware stack levels used:    1
 18650 ;; Hardware stack levels required when called:   11
 18651 ;; This function calls:
 18652 ;;		Nothing
 18653 ;; This function is called by:
 18654 ;;		_atoi
 18655 ;;		_strtol
 18656 ;;		_xtoi
 18657 ;;		_isxdigit
 18658 ;; This function uses a non-reentrant model
 18659 ;;
 18660                           
 18661                           	psect	text77
 18662  006A7C                     __ptext77:
 18663                           	opt stack 0
 18664  006A7C                     _isdigit:
 18665                           	opt stack 12
 18666                           
 18667                           ; BSR set to: 0
 18668                           ;incstack = 0
 18669                           ;isdigit@c stored from wreg
 18670  006A7C  0100               	movlb	0	; () banked
 18671  006A7E  6F7F               	movwf	isdigit@c& (0+255),b
 18672  006A80  0E00               	movlw	0
 18673  006A82  0100               	movlb	0	; () banked
 18674  006A84  6F7E               	movwf	_isdigit$6512& (0+255),b
 18675                           
 18676                           ; BSR set to: 0
 18677  006A86  0E3A               	movlw	58
 18678  006A88  617F               	cpfslt	isdigit@c& (0+255),b
 18679  006A8A  D005               	goto	l3337
 18680                           
 18681                           ; BSR set to: 0
 18682  006A8C  0E2F               	movlw	47
 18683  006A8E  657F               	cpfsgt	isdigit@c& (0+255),b
 18684  006A90  D002               	goto	l3337
 18685                           
 18686                           ; BSR set to: 0
 18687  006A92  0E01               	movlw	1
 18688  006A94  6F7E               	movwf	_isdigit$6512& (0+255),b
 18689  006A96                     l3337:
 18690                           
 18691                           ; BSR set to: 0
 18692                           
 18693                           ; BSR set to: 0
 18694  006A96  C07E  F07D         	movff	_isdigit$6512,??_isdigit
 18695  006A9A  317D               	rrcf	??_isdigit& (0+255),w,b
 18696  006A9C  0012               	return	
 18697  006A9E                     __end_of_isdigit:
 18698                           	opt stack 0
 18699                           tosu	equ	0xFFF
 18700                           tosh	equ	0xFFE
 18701                           tosl	equ	0xFFD
 18702                           pclath	equ	0xFFA
 18703                           tblptru	equ	0xFF8
 18704                           tblptrh	equ	0xFF7
 18705                           tblptrl	equ	0xFF6
 18706                           tablat	equ	0xFF5
 18707                           prodh	equ	0xFF4
 18708                           prodl	equ	0xFF3
 18709                           intcon	equ	0xFF2
 18710                           intcon2	equ	0xFF1
 18711                           intcon3	equ	0xFF0
 18712                           indf0	equ	0xFEF
 18713                           postinc0	equ	0xFEE
 18714                           plusw0	equ	0xFEB
 18715                           fsr0h	equ	0xFEA
 18716                           fsr0l	equ	0xFE9
 18717                           wreg	equ	0xFE8
 18718                           indf1	equ	0xFE7
 18719                           postinc1	equ	0xFE6
 18720                           postdec1	equ	0xFE5
 18721                           fsr1h	equ	0xFE2
 18722                           fsr1l	equ	0xFE1
 18723                           indf2	equ	0xFDF
 18724                           postinc2	equ	0xFDE
 18725                           postdec2	equ	0xFDD
 18726                           plusw2	equ	0xFDB
 18727                           fsr2h	equ	0xFDA
 18728                           fsr2l	equ	0xFD9
 18729                           status	equ	0xFD8
 18730                           
 18731 ;; *************** function _Rtcm_SetRtccDate *****************
 18732 ;; Defined at:
 18733 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18734 ;; Parameters:    Size  Location     Type
 18735 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18736 ;; Auto vars:     Size  Location     Type
 18737 ;;		None
 18738 ;; Return value:  Size  Location     Type
 18739 ;;                  1    wreg      void 
 18740 ;; Registers used:
 18741 ;;		wreg, status,2, status,0, cstack
 18742 ;; Tracked objects:
 18743 ;;		On entry : 0/0
 18744 ;;		On exit  : 0/0
 18745 ;;		Unchanged: 0/0
 18746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18747 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18750 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18751 ;;Total ram usage:        8 bytes
 18752 ;; Hardware stack levels used:    1
 18753 ;; Hardware stack levels required when called:   13
 18754 ;; This function calls:
 18755 ;;		_Rtcc_LockRtc
 18756 ;;		_Rtcc_SetRtccValue
 18757 ;;		_Rtcc_UnlockRtc
 18758 ;; This function is called by:
 18759 ;;		_Rtcm_MainTask
 18760 ;; This function uses a non-reentrant model
 18761 ;;
 18762                           
 18763                           	psect	text78
 18764  005CFC                     __ptext78:
 18765                           	opt stack 0
 18766  005CFC                     _Rtcm_SetRtccDate:
 18767                           	opt stack 14
 18768                           
 18769                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18770                           
 18771                           ; BSR set to: 0
 18772                           ;incstack = 0
 18773  005CFC  EC82  F036         	call	_Rtcc_UnlockRtc	;wreg free
 18774                           
 18775                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18776  005D00  0100               	movlb	0	; () banked
 18777  005D02  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18778  005D04  0F30               	addlw	48
 18779  005D06  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18780  005D08  0E00               	movlw	0
 18781  005D0A  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18782                           
 18783                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18784  005D0E  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18785  005D12  0E01               	movlw	1
 18786  005D14  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18787                           
 18788                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18789  005D18  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18790  005D1C  0E02               	movlw	2
 18791  005D1E  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18792                           
 18793                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18794  005D22  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18795  005D26  0E03               	movlw	3
 18796  005D28  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18797                           
 18798                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18799  005D2C  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18800  005D30  0E04               	movlw	4
 18801  005D32  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18802                           
 18803                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18804  005D36  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18805  005D3A  0E05               	movlw	5
 18806  005D3C  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18807                           
 18808                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18809  005D40  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18810  005D44  0E06               	movlw	6
 18811  005D46  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18812                           
 18813                           ;rtcm.c: 191: Rtcc_LockRtc();
 18814  005D4A  EC8A  F036         	call	_Rtcc_LockRtc	;wreg free
 18815  005D4E  0012               	return		;funcret
 18816  005D50                     __end_of_Rtcm_SetRtccDate:
 18817                           	opt stack 0
 18818                           tosu	equ	0xFFF
 18819                           tosh	equ	0xFFE
 18820                           tosl	equ	0xFFD
 18821                           pclath	equ	0xFFA
 18822                           tblptru	equ	0xFF8
 18823                           tblptrh	equ	0xFF7
 18824                           tblptrl	equ	0xFF6
 18825                           tablat	equ	0xFF5
 18826                           prodh	equ	0xFF4
 18827                           prodl	equ	0xFF3
 18828                           intcon	equ	0xFF2
 18829                           intcon2	equ	0xFF1
 18830                           intcon3	equ	0xFF0
 18831                           indf0	equ	0xFEF
 18832                           postinc0	equ	0xFEE
 18833                           plusw0	equ	0xFEB
 18834                           fsr0h	equ	0xFEA
 18835                           fsr0l	equ	0xFE9
 18836                           wreg	equ	0xFE8
 18837                           indf1	equ	0xFE7
 18838                           postinc1	equ	0xFE6
 18839                           postdec1	equ	0xFE5
 18840                           fsr1h	equ	0xFE2
 18841                           fsr1l	equ	0xFE1
 18842                           indf2	equ	0xFDF
 18843                           postinc2	equ	0xFDE
 18844                           postdec2	equ	0xFDD
 18845                           plusw2	equ	0xFDB
 18846                           fsr2h	equ	0xFDA
 18847                           fsr2l	equ	0xFD9
 18848                           status	equ	0xFD8
 18849                           
 18850 ;; *************** function _Rtcc_UnlockRtc *****************
 18851 ;; Defined at:
 18852 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18853 ;; Parameters:    Size  Location     Type
 18854 ;;		None
 18855 ;; Auto vars:     Size  Location     Type
 18856 ;;		None
 18857 ;; Return value:  Size  Location     Type
 18858 ;;                  1    wreg      void 
 18859 ;; Registers used:
 18860 ;;		None
 18861 ;; Tracked objects:
 18862 ;;		On entry : 0/0
 18863 ;;		On exit  : 0/0
 18864 ;;		Unchanged: 0/0
 18865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18870 ;;Total ram usage:        0 bytes
 18871 ;; Hardware stack levels used:    1
 18872 ;; Hardware stack levels required when called:   11
 18873 ;; This function calls:
 18874 ;;		Nothing
 18875 ;; This function is called by:
 18876 ;;		_Rtcm_MainTask
 18877 ;;		_Rtcm_SetRtccDate
 18878 ;;		_Rtcm_SetRtccAlarm
 18879 ;; This function uses a non-reentrant model
 18880 ;;
 18881                           
 18882                           	psect	text79
 18883  006D04                     __ptext79:
 18884                           	opt stack 0
 18885  006D04                     _Rtcc_UnlockRtc:
 18886                           	opt stack 15
 18887                           
 18888                           ;incstack = 0
 18889  006D04  010F               	movlb	15	;# 
 18890  006D06  0E55               	movlw	85	;# 
 18891  006D08  6EA7               	movwf	4007,c	;# 
 18892  006D0A  0EAA               	movlw	170	;# 
 18893  006D0C  6EA7               	movwf	4007,c	;# 
 18894                           
 18895                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18896  006D0E  010F               	movlb	15	; () banked
 18897  006D10  8B3F               	bsf	63,5,b	;volatile
 18898                           
 18899                           ; BSR set to: 15
 18900  006D12  0012               	return		;funcret
 18901  006D14                     __end_of_Rtcc_UnlockRtc:
 18902                           	opt stack 0
 18903                           tosu	equ	0xFFF
 18904                           tosh	equ	0xFFE
 18905                           tosl	equ	0xFFD
 18906                           pclath	equ	0xFFA
 18907                           tblptru	equ	0xFF8
 18908                           tblptrh	equ	0xFF7
 18909                           tblptrl	equ	0xFF6
 18910                           tablat	equ	0xFF5
 18911                           prodh	equ	0xFF4
 18912                           prodl	equ	0xFF3
 18913                           intcon	equ	0xFF2
 18914                           intcon2	equ	0xFF1
 18915                           intcon3	equ	0xFF0
 18916                           indf0	equ	0xFEF
 18917                           postinc0	equ	0xFEE
 18918                           plusw0	equ	0xFEB
 18919                           fsr0h	equ	0xFEA
 18920                           fsr0l	equ	0xFE9
 18921                           wreg	equ	0xFE8
 18922                           indf1	equ	0xFE7
 18923                           postinc1	equ	0xFE6
 18924                           postdec1	equ	0xFE5
 18925                           fsr1h	equ	0xFE2
 18926                           fsr1l	equ	0xFE1
 18927                           indf2	equ	0xFDF
 18928                           postinc2	equ	0xFDE
 18929                           postdec2	equ	0xFDD
 18930                           plusw2	equ	0xFDB
 18931                           fsr2h	equ	0xFDA
 18932                           fsr2l	equ	0xFD9
 18933                           status	equ	0xFD8
 18934                           
 18935 ;; *************** function _Rtcc_SetRtccValue *****************
 18936 ;; Defined at:
 18937 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18938 ;; Parameters:    Size  Location     Type
 18939 ;;  RtccPtrVal      1    wreg     enum E7757
 18940 ;;  Value           1   37[BANK0 ] unsigned char 
 18941 ;; Auto vars:     Size  Location     Type
 18942 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18943 ;; Return value:  Size  Location     Type
 18944 ;;                  1    wreg      void 
 18945 ;; Registers used:
 18946 ;;		wreg, status,2, status,0, cstack
 18947 ;; Tracked objects:
 18948 ;;		On entry : 0/0
 18949 ;;		On exit  : 0/0
 18950 ;;		Unchanged: 0/0
 18951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18952 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18954 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18955 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18956 ;;Total ram usage:        4 bytes
 18957 ;; Hardware stack levels used:    1
 18958 ;; Hardware stack levels required when called:   12
 18959 ;; This function calls:
 18960 ;;		___awdiv
 18961 ;;		___awmod
 18962 ;; This function is called by:
 18963 ;;		_Rtcm_SetRtccDate
 18964 ;; This function uses a non-reentrant model
 18965 ;;
 18966                           
 18967                           	psect	text80
 18968  0015F4                     __ptext80:
 18969                           	opt stack 0
 18970  0015F4                     _Rtcc_SetRtccValue:
 18971                           	opt stack 14
 18972                           
 18973                           ; BSR set to: 15
 18974                           ;incstack = 0
 18975                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18976  0015F4  0100               	movlb	0	; () banked
 18977  0015F6  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18978                           
 18979                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18980  0015F8  D0FC               	goto	l441
 18981  0015FA                     l442:
 18982                           
 18983                           ; BSR set to: 0
 18984                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18985  0015FA  010F               	movlb	15	; () banked
 18986  0015FC  833F               	bsf	63,1,b	;volatile
 18987                           
 18988                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18989  0015FE  813F               	bsf	63,0,b	;volatile
 18990                           
 18991                           ; BSR set to: 15
 18992                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18993  001600  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18994  001604  0100               	movlb	0	; () banked
 18995  001606  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18996  001608  0E00               	movlw	0
 18997  00160A  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18998  00160C  0E0A               	movlw	10
 18999  00160E  6F7F               	movwf	___awmod@divisor& (0+255),b
 19000  001610  ECDA  F02A         	call	___awmod	;wreg free
 19001  001614  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19002  001618  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19003  00161C  0E0F               	movlw	15
 19004  00161E  0100               	movlb	0	; () banked
 19005  001620  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19006  001622  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19007  001626  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19008  001628  0E00               	movlw	0
 19009  00162A  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19010  00162C  0E0A               	movlw	10
 19011  00162E  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19012  001630  EC9B  F029         	call	___awdiv	;wreg free
 19013  001634  0100               	movlb	0	; () banked
 19014  001636  397D               	swapf	?___awdiv& (0+255),w,b
 19015  001638  0BF0               	andlw	240
 19016  00163A  0BF0               	andlw	240
 19017  00163C  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19018  00163E  6E98               	movwf	3992,c	;volatile
 19019                           
 19020                           ;rtcc_drv.c: 393: break;
 19021  001640  0012               	return	
 19022  001642                     l444:
 19023                           
 19024                           ; BSR set to: 0
 19025                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19026  001642  010F               	movlb	15	; () banked
 19027  001644  833F               	bsf	63,1,b	;volatile
 19028                           
 19029                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19030  001646  913F               	bcf	63,0,b	;volatile
 19031                           
 19032                           ; BSR set to: 15
 19033                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19034  001648  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19035  00164C  0100               	movlb	0	; () banked
 19036  00164E  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19037  001650  0E00               	movlw	0
 19038  001652  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19039  001654  0E0A               	movlw	10
 19040  001656  6F7F               	movwf	___awmod@divisor& (0+255),b
 19041  001658  ECDA  F02A         	call	___awmod	;wreg free
 19042  00165C  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19043  001660  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19044  001664  0E0F               	movlw	15
 19045  001666  0100               	movlb	0	; () banked
 19046  001668  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19047  00166A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19048  00166E  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19049  001670  0E00               	movlw	0
 19050  001672  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19051  001674  0E0A               	movlw	10
 19052  001676  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19053  001678  EC9B  F029         	call	___awdiv	;wreg free
 19054  00167C  0100               	movlb	0	; () banked
 19055  00167E  397D               	swapf	?___awdiv& (0+255),w,b
 19056  001680  0BF0               	andlw	240
 19057  001682  0BF0               	andlw	240
 19058  001684  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19059  001686  6E99               	movwf	3993,c	;volatile
 19060                           
 19061                           ;rtcc_drv.c: 401: break;
 19062  001688  0012               	return	
 19063  00168A                     l445:
 19064                           
 19065                           ; BSR set to: 0
 19066                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19067  00168A  010F               	movlb	15	; () banked
 19068  00168C  833F               	bsf	63,1,b	;volatile
 19069                           
 19070                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19071  00168E  913F               	bcf	63,0,b	;volatile
 19072                           
 19073                           ; BSR set to: 15
 19074                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19075  001690  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19076  001694  0100               	movlb	0	; () banked
 19077  001696  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19078  001698  0E00               	movlw	0
 19079  00169A  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19080  00169C  0E0A               	movlw	10
 19081  00169E  6F7F               	movwf	___awmod@divisor& (0+255),b
 19082  0016A0  ECDA  F02A         	call	___awmod	;wreg free
 19083  0016A4  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19084  0016A8  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19085  0016AC  0E0F               	movlw	15
 19086  0016AE  0100               	movlb	0	; () banked
 19087  0016B0  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19088  0016B2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19089  0016B6  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19090  0016B8  0E00               	movlw	0
 19091  0016BA  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19092  0016BC  0E0A               	movlw	10
 19093  0016BE  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19094  0016C0  EC9B  F029         	call	___awdiv	;wreg free
 19095  0016C4  0100               	movlb	0	; () banked
 19096  0016C6  397D               	swapf	?___awdiv& (0+255),w,b
 19097  0016C8  0BF0               	andlw	240
 19098  0016CA  0BF0               	andlw	240
 19099  0016CC  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19100  0016CE  6E98               	movwf	3992,c	;volatile
 19101                           
 19102                           ;rtcc_drv.c: 409: break;
 19103  0016D0  0012               	return	
 19104  0016D2                     l446:
 19105                           
 19106                           ; BSR set to: 0
 19107                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19108  0016D2  010F               	movlb	15	; () banked
 19109  0016D4  933F               	bcf	63,1,b	;volatile
 19110                           
 19111                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19112  0016D6  813F               	bsf	63,0,b	;volatile
 19113                           
 19114                           ; BSR set to: 15
 19115                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19116  0016D8  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19117  0016DC  0100               	movlb	0	; () banked
 19118  0016DE  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19119  0016E0  0E00               	movlw	0
 19120  0016E2  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19121  0016E4  0E0A               	movlw	10
 19122  0016E6  6F7F               	movwf	___awmod@divisor& (0+255),b
 19123  0016E8  ECDA  F02A         	call	___awmod	;wreg free
 19124  0016EC  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19125  0016F0  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19126  0016F4  0E0F               	movlw	15
 19127  0016F6  0100               	movlb	0	; () banked
 19128  0016F8  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19129  0016FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19130  0016FE  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19131  001700  0E00               	movlw	0
 19132  001702  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19133  001704  0E0A               	movlw	10
 19134  001706  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19135  001708  EC9B  F029         	call	___awdiv	;wreg free
 19136  00170C  0100               	movlb	0	; () banked
 19137  00170E  397D               	swapf	?___awdiv& (0+255),w,b
 19138  001710  0BF0               	andlw	240
 19139  001712  0BF0               	andlw	240
 19140  001714  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19141  001716  6E99               	movwf	3993,c	;volatile
 19142                           
 19143                           ;rtcc_drv.c: 417: break;
 19144  001718  0012               	return	
 19145  00171A                     l447:
 19146                           
 19147                           ; BSR set to: 0
 19148                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19149  00171A  010F               	movlb	15	; () banked
 19150  00171C  933F               	bcf	63,1,b	;volatile
 19151                           
 19152                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19153  00171E  813F               	bsf	63,0,b	;volatile
 19154                           
 19155                           ; BSR set to: 15
 19156                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19157  001720  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19158  001724  0100               	movlb	0	; () banked
 19159  001726  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19160  001728  0E00               	movlw	0
 19161  00172A  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19162  00172C  0E0A               	movlw	10
 19163  00172E  6F7F               	movwf	___awmod@divisor& (0+255),b
 19164  001730  ECDA  F02A         	call	___awmod	;wreg free
 19165  001734  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19166  001738  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19167  00173C  0E0F               	movlw	15
 19168  00173E  0100               	movlb	0	; () banked
 19169  001740  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19170  001742  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19171  001746  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19172  001748  0E00               	movlw	0
 19173  00174A  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19174  00174C  0E0A               	movlw	10
 19175  00174E  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19176  001750  EC9B  F029         	call	___awdiv	;wreg free
 19177  001754  0100               	movlb	0	; () banked
 19178  001756  397D               	swapf	?___awdiv& (0+255),w,b
 19179  001758  0BF0               	andlw	240
 19180  00175A  0BF0               	andlw	240
 19181  00175C  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19182  00175E  6E98               	movwf	3992,c	;volatile
 19183                           
 19184                           ;rtcc_drv.c: 425: break;
 19185  001760  0012               	return	
 19186  001762                     l448:
 19187                           
 19188                           ; BSR set to: 0
 19189                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19190  001762  010F               	movlb	15	; () banked
 19191  001764  933F               	bcf	63,1,b	;volatile
 19192                           
 19193                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19194  001766  913F               	bcf	63,0,b	;volatile
 19195                           
 19196                           ; BSR set to: 15
 19197                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19198  001768  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19199  00176C  0100               	movlb	0	; () banked
 19200  00176E  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19201  001770  0E00               	movlw	0
 19202  001772  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19203  001774  0E0A               	movlw	10
 19204  001776  6F7F               	movwf	___awmod@divisor& (0+255),b
 19205  001778  ECDA  F02A         	call	___awmod	;wreg free
 19206  00177C  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19207  001780  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19208  001784  0E0F               	movlw	15
 19209  001786  0100               	movlb	0	; () banked
 19210  001788  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19211  00178A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19212  00178E  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19213  001790  0E00               	movlw	0
 19214  001792  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19215  001794  0E0A               	movlw	10
 19216  001796  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19217  001798  EC9B  F029         	call	___awdiv	;wreg free
 19218  00179C  0100               	movlb	0	; () banked
 19219  00179E  397D               	swapf	?___awdiv& (0+255),w,b
 19220  0017A0  0BF0               	andlw	240
 19221  0017A2  0BF0               	andlw	240
 19222  0017A4  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19223  0017A6  6E99               	movwf	3993,c	;volatile
 19224                           
 19225                           ;rtcc_drv.c: 433: break;
 19226  0017A8  0012               	return	
 19227  0017AA                     l449:
 19228                           
 19229                           ; BSR set to: 0
 19230                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19231  0017AA  010F               	movlb	15	; () banked
 19232  0017AC  933F               	bcf	63,1,b	;volatile
 19233                           
 19234                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19235  0017AE  913F               	bcf	63,0,b	;volatile
 19236                           
 19237                           ; BSR set to: 15
 19238                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19239  0017B0  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19240  0017B4  0100               	movlb	0	; () banked
 19241  0017B6  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19242  0017B8  0E00               	movlw	0
 19243  0017BA  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19244  0017BC  0E0A               	movlw	10
 19245  0017BE  6F7F               	movwf	___awmod@divisor& (0+255),b
 19246  0017C0  ECDA  F02A         	call	___awmod	;wreg free
 19247  0017C4  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19248  0017C8  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19249  0017CC  0E0F               	movlw	15
 19250  0017CE  0100               	movlb	0	; () banked
 19251  0017D0  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19252  0017D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19253  0017D6  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19254  0017D8  0E00               	movlw	0
 19255  0017DA  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19256  0017DC  0E0A               	movlw	10
 19257  0017DE  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19258  0017E0  EC9B  F029         	call	___awdiv	;wreg free
 19259  0017E4  0100               	movlb	0	; () banked
 19260  0017E6  397D               	swapf	?___awdiv& (0+255),w,b
 19261  0017E8  0BF0               	andlw	240
 19262  0017EA  0BF0               	andlw	240
 19263  0017EC  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19264  0017EE  6E98               	movwf	3992,c	;volatile
 19265                           
 19266                           ; BSR set to: 0
 19267                           ;rtcc_drv.c: 445: }
 19268                           
 19269                           ; BSR set to: 0
 19270                           ;rtcc_drv.c: 444: break;
 19271                           
 19272                           ;rtcc_drv.c: 443: default:
 19273                           
 19274                           ;rtcc_drv.c: 441: break;
 19275  0017F0  0012               	return	
 19276  0017F2                     l441:
 19277                           
 19278                           ; BSR set to: 0
 19279  0017F2  0100               	movlb	0	; () banked
 19280  0017F4  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19281                           
 19282                           ; Switch size 1, requested type "space"
 19283                           ; Number of cases is 7, Range of values is 0 to 6
 19284                           ; switch strategies available:
 19285                           ; Name         Instructions Cycles
 19286                           ; simple_byte           22    12 (average)
 19287                           ;	Chosen strategy is simple_byte
 19288  0017F6  0A00               	xorlw	0	; case 0
 19289  0017F8  B4D8               	btfsc	status,2,c
 19290  0017FA  D6FF               	goto	l442
 19291  0017FC  0A01               	xorlw	1	; case 1
 19292  0017FE  B4D8               	btfsc	status,2,c
 19293  001800  D720               	goto	l444
 19294  001802  0A03               	xorlw	3	; case 2
 19295  001804  B4D8               	btfsc	status,2,c
 19296  001806  D741               	goto	l445
 19297  001808  0A01               	xorlw	1	; case 3
 19298  00180A  B4D8               	btfsc	status,2,c
 19299  00180C  D762               	goto	l446
 19300  00180E  0A07               	xorlw	7	; case 4
 19301  001810  B4D8               	btfsc	status,2,c
 19302  001812  D783               	goto	l447
 19303  001814  0A01               	xorlw	1	; case 5
 19304  001816  B4D8               	btfsc	status,2,c
 19305  001818  D7A4               	goto	l448
 19306  00181A  0A03               	xorlw	3	; case 6
 19307  00181C  A4D8               	btfss	status,2,c
 19308  00181E  0012               	return	
 19309  001820  D7C4               	goto	l449
 19310  001822                     __end_of_Rtcc_SetRtccValue:
 19311                           	opt stack 0
 19312                           tosu	equ	0xFFF
 19313                           tosh	equ	0xFFE
 19314                           tosl	equ	0xFFD
 19315                           pclath	equ	0xFFA
 19316                           tblptru	equ	0xFF8
 19317                           tblptrh	equ	0xFF7
 19318                           tblptrl	equ	0xFF6
 19319                           tablat	equ	0xFF5
 19320                           prodh	equ	0xFF4
 19321                           prodl	equ	0xFF3
 19322                           intcon	equ	0xFF2
 19323                           intcon2	equ	0xFF1
 19324                           intcon3	equ	0xFF0
 19325                           indf0	equ	0xFEF
 19326                           postinc0	equ	0xFEE
 19327                           plusw0	equ	0xFEB
 19328                           fsr0h	equ	0xFEA
 19329                           fsr0l	equ	0xFE9
 19330                           wreg	equ	0xFE8
 19331                           indf1	equ	0xFE7
 19332                           postinc1	equ	0xFE6
 19333                           postdec1	equ	0xFE5
 19334                           fsr1h	equ	0xFE2
 19335                           fsr1l	equ	0xFE1
 19336                           indf2	equ	0xFDF
 19337                           postinc2	equ	0xFDE
 19338                           postdec2	equ	0xFDD
 19339                           plusw2	equ	0xFDB
 19340                           fsr2h	equ	0xFDA
 19341                           fsr2l	equ	0xFD9
 19342                           status	equ	0xFD8
 19343                           
 19344 ;; *************** function ___awmod *****************
 19345 ;; Defined at:
 19346 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19347 ;; Parameters:    Size  Location     Type
 19348 ;;  dividend        2   29[BANK0 ] int 
 19349 ;;  divisor         2   31[BANK0 ] int 
 19350 ;; Auto vars:     Size  Location     Type
 19351 ;;  sign            1   34[BANK0 ] unsigned char 
 19352 ;;  counter         1   33[BANK0 ] unsigned char 
 19353 ;; Return value:  Size  Location     Type
 19354 ;;                  2   29[BANK0 ] int 
 19355 ;; Registers used:
 19356 ;;		wreg, status,2, status,0
 19357 ;; Tracked objects:
 19358 ;;		On entry : 0/0
 19359 ;;		On exit  : 0/0
 19360 ;;		Unchanged: 0/0
 19361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19362 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19363 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19365 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19366 ;;Total ram usage:        6 bytes
 19367 ;; Hardware stack levels used:    1
 19368 ;; Hardware stack levels required when called:   11
 19369 ;; This function calls:
 19370 ;;		Nothing
 19371 ;; This function is called by:
 19372 ;;		_Rtcc_SetRtccValue
 19373 ;;		_Rtcc_SetRtccAlarm
 19374 ;; This function uses a non-reentrant model
 19375 ;;
 19376                           
 19377                           	psect	text81
 19378  0055B4                     __ptext81:
 19379                           	opt stack 0
 19380  0055B4                     ___awmod:
 19381                           	opt stack 14
 19382                           
 19383                           ; BSR set to: 0
 19384                           ;incstack = 0
 19385  0055B4  0E00               	movlw	0
 19386  0055B6  0100               	movlb	0	; () banked
 19387  0055B8  6F82               	movwf	___awmod@sign& (0+255),b
 19388                           
 19389                           ; BSR set to: 0
 19390  0055BA  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19391  0055BC  D006               	goto	l3188
 19392                           
 19393                           ; BSR set to: 0
 19394  0055BE  6D7D               	negf	___awmod@dividend& (0+255),b
 19395  0055C0  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19396  0055C2  B0D8               	btfsc	status,0,c
 19397  0055C4  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19398                           
 19399                           ; BSR set to: 0
 19400  0055C6  0E01               	movlw	1
 19401  0055C8  6F82               	movwf	___awmod@sign& (0+255),b
 19402  0055CA                     l3188:
 19403                           
 19404                           ; BSR set to: 0
 19405                           
 19406                           ; BSR set to: 0
 19407  0055CA  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19408  0055CC  D004               	goto	l3189
 19409                           
 19410                           ; BSR set to: 0
 19411  0055CE  6D7F               	negf	___awmod@divisor& (0+255),b
 19412  0055D0  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19413  0055D2  B0D8               	btfsc	status,0,c
 19414  0055D4  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19415  0055D6                     l3189:
 19416                           
 19417                           ; BSR set to: 0
 19418                           
 19419                           ; BSR set to: 0
 19420  0055D6  517F               	movf	___awmod@divisor& (0+255),w,b
 19421  0055D8  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19422  0055DA  B4D8               	btfsc	status,2,c
 19423  0055DC  D018               	goto	l3196
 19424                           
 19425                           ; BSR set to: 0
 19426  0055DE  0E01               	movlw	1
 19427  0055E0  6F81               	movwf	___awmod@counter& (0+255),b
 19428  0055E2  D004               	goto	l3191
 19429  0055E4                     
 19430                           ; BSR set to: 0
 19431                           
 19432                           ; BSR set to: 0
 19433  0055E4  90D8               	bcf	status,0,c
 19434  0055E6  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19435  0055E8  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19436  0055EA  2B81               	incf	___awmod@counter& (0+255),f,b
 19437  0055EC                     l3191:
 19438                           
 19439                           ; BSR set to: 0
 19440                           
 19441                           ; BSR set to: 0
 19442  0055EC  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19443  0055EE  D7FA               	goto	l3192
 19444  0055F0                     u13690:
 19445                           
 19446                           ; BSR set to: 0
 19447                           
 19448                           ; BSR set to: 0
 19449                           
 19450                           ; BSR set to: 0
 19451  0055F0  517F               	movf	___awmod@divisor& (0+255),w,b
 19452  0055F2  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19453  0055F4  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19454  0055F6  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19455  0055F8  A0D8               	btfss	status,0,c
 19456  0055FA  D004               	goto	l3195
 19457                           
 19458                           ; BSR set to: 0
 19459  0055FC  517F               	movf	___awmod@divisor& (0+255),w,b
 19460  0055FE  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19461  005600  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19462  005602  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19463  005604                     l3195:
 19464                           
 19465                           ; BSR set to: 0
 19466                           
 19467                           ; BSR set to: 0
 19468  005604  90D8               	bcf	status,0,c
 19469  005606  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19470  005608  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19471                           
 19472                           ; BSR set to: 0
 19473  00560A  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19474  00560C  D7F1               	goto	u13690
 19475  00560E                     l3196:
 19476                           
 19477                           ; BSR set to: 0
 19478                           
 19479                           ; BSR set to: 0
 19480                           
 19481                           ; BSR set to: 0
 19482  00560E  5182               	movf	___awmod@sign& (0+255),w,b
 19483  005610  B4D8               	btfsc	status,2,c
 19484  005612  D004               	goto	l3197
 19485                           
 19486                           ; BSR set to: 0
 19487  005614  6D7D               	negf	___awmod@dividend& (0+255),b
 19488  005616  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19489  005618  B0D8               	btfsc	status,0,c
 19490  00561A  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19491  00561C                     l3197:
 19492                           
 19493                           ; BSR set to: 0
 19494                           
 19495                           ; BSR set to: 0
 19496  00561C  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19497  005620  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19498  005624  0012               	return	
 19499  005626                     __end_of___awmod:
 19500                           	opt stack 0
 19501                           tosu	equ	0xFFF
 19502                           tosh	equ	0xFFE
 19503                           tosl	equ	0xFFD
 19504                           pclath	equ	0xFFA
 19505                           tblptru	equ	0xFF8
 19506                           tblptrh	equ	0xFF7
 19507                           tblptrl	equ	0xFF6
 19508                           tablat	equ	0xFF5
 19509                           prodh	equ	0xFF4
 19510                           prodl	equ	0xFF3
 19511                           intcon	equ	0xFF2
 19512                           intcon2	equ	0xFF1
 19513                           intcon3	equ	0xFF0
 19514                           indf0	equ	0xFEF
 19515                           postinc0	equ	0xFEE
 19516                           plusw0	equ	0xFEB
 19517                           fsr0h	equ	0xFEA
 19518                           fsr0l	equ	0xFE9
 19519                           wreg	equ	0xFE8
 19520                           indf1	equ	0xFE7
 19521                           postinc1	equ	0xFE6
 19522                           postdec1	equ	0xFE5
 19523                           fsr1h	equ	0xFE2
 19524                           fsr1l	equ	0xFE1
 19525                           indf2	equ	0xFDF
 19526                           postinc2	equ	0xFDE
 19527                           postdec2	equ	0xFDD
 19528                           plusw2	equ	0xFDB
 19529                           fsr2h	equ	0xFDA
 19530                           fsr2l	equ	0xFD9
 19531                           status	equ	0xFD8
 19532                           
 19533 ;; *************** function ___awdiv *****************
 19534 ;; Defined at:
 19535 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19536 ;; Parameters:    Size  Location     Type
 19537 ;;  dividend        2   29[BANK0 ] int 
 19538 ;;  divisor         2   31[BANK0 ] int 
 19539 ;; Auto vars:     Size  Location     Type
 19540 ;;  quotient        2   35[BANK0 ] int 
 19541 ;;  sign            1   34[BANK0 ] unsigned char 
 19542 ;;  counter         1   33[BANK0 ] unsigned char 
 19543 ;; Return value:  Size  Location     Type
 19544 ;;                  2   29[BANK0 ] int 
 19545 ;; Registers used:
 19546 ;;		wreg, status,2, status,0
 19547 ;; Tracked objects:
 19548 ;;		On entry : 0/0
 19549 ;;		On exit  : 0/0
 19550 ;;		Unchanged: 0/0
 19551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19552 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19553 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19555 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19556 ;;Total ram usage:        8 bytes
 19557 ;; Hardware stack levels used:    1
 19558 ;; Hardware stack levels required when called:   11
 19559 ;; This function calls:
 19560 ;;		Nothing
 19561 ;; This function is called by:
 19562 ;;		_Rtcc_SetRtccValue
 19563 ;;		_Rtcc_SetRtccAlarm
 19564 ;; This function uses a non-reentrant model
 19565 ;;
 19566                           
 19567                           	psect	text82
 19568  005336                     __ptext82:
 19569                           	opt stack 0
 19570  005336                     ___awdiv:
 19571                           	opt stack 14
 19572                           
 19573                           ; BSR set to: 0
 19574                           ;incstack = 0
 19575  005336  0E00               	movlw	0
 19576  005338  0100               	movlb	0	; () banked
 19577  00533A  6F82               	movwf	___awdiv@sign& (0+255),b
 19578                           
 19579                           ; BSR set to: 0
 19580  00533C  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19581  00533E  D006               	goto	l3175
 19582                           
 19583                           ; BSR set to: 0
 19584  005340  6D7F               	negf	___awdiv@divisor& (0+255),b
 19585  005342  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19586  005344  B0D8               	btfsc	status,0,c
 19587  005346  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19588                           
 19589                           ; BSR set to: 0
 19590  005348  0E01               	movlw	1
 19591  00534A  6F82               	movwf	___awdiv@sign& (0+255),b
 19592  00534C                     l3175:
 19593                           
 19594                           ; BSR set to: 0
 19595                           
 19596                           ; BSR set to: 0
 19597  00534C  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19598  00534E  D006               	goto	l3176
 19599                           
 19600                           ; BSR set to: 0
 19601  005350  6D7D               	negf	___awdiv@dividend& (0+255),b
 19602  005352  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19603  005354  B0D8               	btfsc	status,0,c
 19604  005356  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19605                           
 19606                           ; BSR set to: 0
 19607  005358  0E01               	movlw	1
 19608  00535A  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19609  00535C                     l3176:
 19610                           
 19611                           ; BSR set to: 0
 19612                           
 19613                           ; BSR set to: 0
 19614  00535C  0E00               	movlw	0
 19615  00535E  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19616  005360  0E00               	movlw	0
 19617  005362  6F83               	movwf	___awdiv@quotient& (0+255),b
 19618                           
 19619                           ; BSR set to: 0
 19620  005364  517F               	movf	___awdiv@divisor& (0+255),w,b
 19621  005366  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19622  005368  B4D8               	btfsc	status,2,c
 19623  00536A  D01C               	goto	l3183
 19624                           
 19625                           ; BSR set to: 0
 19626  00536C  0E01               	movlw	1
 19627  00536E  6F81               	movwf	___awdiv@counter& (0+255),b
 19628  005370  D004               	goto	l3178
 19629  005372                     
 19630                           ; BSR set to: 0
 19631                           
 19632                           ; BSR set to: 0
 19633  005372  90D8               	bcf	status,0,c
 19634  005374  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19635  005376  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19636  005378  2B81               	incf	___awdiv@counter& (0+255),f,b
 19637  00537A                     l3178:
 19638                           
 19639                           ; BSR set to: 0
 19640                           
 19641                           ; BSR set to: 0
 19642  00537A  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19643  00537C  D7FA               	goto	l3179
 19644  00537E                     u13630:
 19645                           
 19646                           ; BSR set to: 0
 19647                           
 19648                           ; BSR set to: 0
 19649                           
 19650                           ; BSR set to: 0
 19651  00537E  90D8               	bcf	status,0,c
 19652  005380  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19653  005382  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19654                           
 19655                           ; BSR set to: 0
 19656  005384  517F               	movf	___awdiv@divisor& (0+255),w,b
 19657  005386  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19658  005388  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19659  00538A  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19660  00538C  A0D8               	btfss	status,0,c
 19661  00538E  D005               	goto	l3182
 19662                           
 19663                           ; BSR set to: 0
 19664  005390  517F               	movf	___awdiv@divisor& (0+255),w,b
 19665  005392  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19666  005394  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19667  005396  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19668                           
 19669                           ; BSR set to: 0
 19670  005398  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19671  00539A                     l3182:
 19672                           
 19673                           ; BSR set to: 0
 19674                           
 19675                           ; BSR set to: 0
 19676  00539A  90D8               	bcf	status,0,c
 19677  00539C  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19678  00539E  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19679                           
 19680                           ; BSR set to: 0
 19681  0053A0  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19682  0053A2  D7ED               	goto	u13630
 19683  0053A4                     l3183:
 19684                           
 19685                           ; BSR set to: 0
 19686                           
 19687                           ; BSR set to: 0
 19688                           
 19689                           ; BSR set to: 0
 19690  0053A4  5182               	movf	___awdiv@sign& (0+255),w,b
 19691  0053A6  B4D8               	btfsc	status,2,c
 19692  0053A8  D004               	goto	l3184
 19693                           
 19694                           ; BSR set to: 0
 19695  0053AA  6D83               	negf	___awdiv@quotient& (0+255),b
 19696  0053AC  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19697  0053AE  B0D8               	btfsc	status,0,c
 19698  0053B0  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19699  0053B2                     l3184:
 19700                           
 19701                           ; BSR set to: 0
 19702                           
 19703                           ; BSR set to: 0
 19704  0053B2  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19705  0053B6  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19706  0053BA  0012               	return	
 19707  0053BC                     __end_of___awdiv:
 19708                           	opt stack 0
 19709                           tosu	equ	0xFFF
 19710                           tosh	equ	0xFFE
 19711                           tosl	equ	0xFFD
 19712                           pclath	equ	0xFFA
 19713                           tblptru	equ	0xFF8
 19714                           tblptrh	equ	0xFF7
 19715                           tblptrl	equ	0xFF6
 19716                           tablat	equ	0xFF5
 19717                           prodh	equ	0xFF4
 19718                           prodl	equ	0xFF3
 19719                           intcon	equ	0xFF2
 19720                           intcon2	equ	0xFF1
 19721                           intcon3	equ	0xFF0
 19722                           indf0	equ	0xFEF
 19723                           postinc0	equ	0xFEE
 19724                           plusw0	equ	0xFEB
 19725                           fsr0h	equ	0xFEA
 19726                           fsr0l	equ	0xFE9
 19727                           wreg	equ	0xFE8
 19728                           indf1	equ	0xFE7
 19729                           postinc1	equ	0xFE6
 19730                           postdec1	equ	0xFE5
 19731                           fsr1h	equ	0xFE2
 19732                           fsr1l	equ	0xFE1
 19733                           indf2	equ	0xFDF
 19734                           postinc2	equ	0xFDE
 19735                           postdec2	equ	0xFDD
 19736                           plusw2	equ	0xFDB
 19737                           fsr2h	equ	0xFDA
 19738                           fsr2l	equ	0xFD9
 19739                           status	equ	0xFD8
 19740                           
 19741 ;; *************** function _Rtcc_LockRtc *****************
 19742 ;; Defined at:
 19743 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19744 ;; Parameters:    Size  Location     Type
 19745 ;;		None
 19746 ;; Auto vars:     Size  Location     Type
 19747 ;;		None
 19748 ;; Return value:  Size  Location     Type
 19749 ;;                  1    wreg      void 
 19750 ;; Registers used:
 19751 ;;		None
 19752 ;; Tracked objects:
 19753 ;;		On entry : 0/0
 19754 ;;		On exit  : 0/0
 19755 ;;		Unchanged: 0/0
 19756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19761 ;;Total ram usage:        0 bytes
 19762 ;; Hardware stack levels used:    1
 19763 ;; Hardware stack levels required when called:   11
 19764 ;; This function calls:
 19765 ;;		Nothing
 19766 ;; This function is called by:
 19767 ;;		_Rtcm_MainTask
 19768 ;;		_Rtcm_SetRtccDate
 19769 ;;		_Rtcm_SetRtccAlarm
 19770 ;; This function uses a non-reentrant model
 19771 ;;
 19772                           
 19773                           	psect	text83
 19774  006D14                     __ptext83:
 19775                           	opt stack 0
 19776  006D14                     _Rtcc_LockRtc:
 19777                           	opt stack 15
 19778                           
 19779                           ; BSR set to: 0
 19780                           ;incstack = 0
 19781  006D14  010F               	movlb	15	;# 
 19782  006D16  0E55               	movlw	85	;# 
 19783  006D18  6EA7               	movwf	4007,c	;# 
 19784  006D1A  0EAA               	movlw	170	;# 
 19785  006D1C  6EA7               	movwf	4007,c	;# 
 19786                           
 19787                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19788  006D1E  010F               	movlb	15	; () banked
 19789  006D20  9B3F               	bcf	63,5,b	;volatile
 19790                           
 19791                           ; BSR set to: 15
 19792  006D22  0012               	return		;funcret
 19793  006D24                     __end_of_Rtcc_LockRtc:
 19794                           	opt stack 0
 19795                           tosu	equ	0xFFF
 19796                           tosh	equ	0xFFE
 19797                           tosl	equ	0xFFD
 19798                           pclath	equ	0xFFA
 19799                           tblptru	equ	0xFF8
 19800                           tblptrh	equ	0xFF7
 19801                           tblptrl	equ	0xFF6
 19802                           tablat	equ	0xFF5
 19803                           prodh	equ	0xFF4
 19804                           prodl	equ	0xFF3
 19805                           intcon	equ	0xFF2
 19806                           intcon2	equ	0xFF1
 19807                           intcon3	equ	0xFF0
 19808                           indf0	equ	0xFEF
 19809                           postinc0	equ	0xFEE
 19810                           plusw0	equ	0xFEB
 19811                           fsr0h	equ	0xFEA
 19812                           fsr0l	equ	0xFE9
 19813                           wreg	equ	0xFE8
 19814                           indf1	equ	0xFE7
 19815                           postinc1	equ	0xFE6
 19816                           postdec1	equ	0xFE5
 19817                           fsr1h	equ	0xFE2
 19818                           fsr1l	equ	0xFE1
 19819                           indf2	equ	0xFDF
 19820                           postinc2	equ	0xFDE
 19821                           postdec2	equ	0xFDD
 19822                           plusw2	equ	0xFDB
 19823                           fsr2h	equ	0xFDA
 19824                           fsr2l	equ	0xFD9
 19825                           status	equ	0xFD8
 19826                           
 19827 ;; *************** function _Rtcm_GetRtccDate *****************
 19828 ;; Defined at:
 19829 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19830 ;; Parameters:    Size  Location     Type
 19831 ;;		None
 19832 ;; Auto vars:     Size  Location     Type
 19833 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19834 ;; Return value:  Size  Location     Type
 19835 ;;                  8   33[BANK0 ] struct _RtccDateType
 19836 ;; Registers used:
 19837 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19838 ;; Tracked objects:
 19839 ;;		On entry : 0/0
 19840 ;;		On exit  : 0/0
 19841 ;;		Unchanged: 0/0
 19842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19843 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19844 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19845 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19846 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19847 ;;Total ram usage:       17 bytes
 19848 ;; Hardware stack levels used:    1
 19849 ;; Hardware stack levels required when called:   12
 19850 ;; This function calls:
 19851 ;;		_Rtcc_GetRtccValue
 19852 ;; This function is called by:
 19853 ;;		_Rtcm_MainTask
 19854 ;; This function uses a non-reentrant model
 19855 ;;
 19856                           
 19857                           	psect	text84
 19858  0058AC                     __ptext84:
 19859                           	opt stack 0
 19860  0058AC                     _Rtcm_GetRtccDate:
 19861                           	opt stack 15
 19862                           
 19863                           ;rtcm.c: 204: RtccDateType LocalDate;
 19864                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19865                           
 19866                           ; BSR set to: 15
 19867                           ;incstack = 0
 19868  0058AC  0E00               	movlw	0
 19869  0058AE  ECEA  F027         	call	_Rtcc_GetRtccValue
 19870  0058B2  0100               	movlb	0	; () banked
 19871  0058B4  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19872  0058B6  0ED0               	movlw	208
 19873  0058B8  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19874  0058BA  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19875  0058BC  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19876  0058BE  0E07               	movlw	7
 19877  0058C0  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19878                           
 19879                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19880  0058C2  0E01               	movlw	1
 19881  0058C4  ECEA  F027         	call	_Rtcc_GetRtccValue
 19882  0058C8  0100               	movlb	0	; () banked
 19883  0058CA  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19884                           
 19885                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19886  0058CC  0E02               	movlw	2
 19887  0058CE  ECEA  F027         	call	_Rtcc_GetRtccValue
 19888  0058D2  0100               	movlb	0	; () banked
 19889  0058D4  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19890                           
 19891                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19892  0058D6  0E03               	movlw	3
 19893  0058D8  ECEA  F027         	call	_Rtcc_GetRtccValue
 19894  0058DC  0100               	movlb	0	; () banked
 19895  0058DE  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19896                           
 19897                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19898  0058E0  0E04               	movlw	4
 19899  0058E2  ECEA  F027         	call	_Rtcc_GetRtccValue
 19900  0058E6  0100               	movlb	0	; () banked
 19901  0058E8  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19902                           
 19903                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19904  0058EA  0E05               	movlw	5
 19905  0058EC  ECEA  F027         	call	_Rtcc_GetRtccValue
 19906  0058F0  0100               	movlb	0	; () banked
 19907  0058F2  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19908                           
 19909                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19910  0058F4  0E06               	movlw	6
 19911  0058F6  ECEA  F027         	call	_Rtcc_GetRtccValue
 19912  0058FA  0100               	movlb	0	; () banked
 19913  0058FC  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19914                           
 19915                           ; BSR set to: 0
 19916                           ;rtcm.c: 216: return LocalDate;
 19917  0058FE  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19918  005902  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19919  005906  0E07               	movlw	7
 19920  005908                     u16121:
 19921  005908  CFDB FFEB          	movff	plusw2,plusw0
 19922  00590C  06E8               	decf	wreg,f,c
 19923  00590E  E2FC               	bc	u16121
 19924  005910  0012               	return	
 19925  005912                     __end_of_Rtcm_GetRtccDate:
 19926                           	opt stack 0
 19927                           tosu	equ	0xFFF
 19928                           tosh	equ	0xFFE
 19929                           tosl	equ	0xFFD
 19930                           pclath	equ	0xFFA
 19931                           tblptru	equ	0xFF8
 19932                           tblptrh	equ	0xFF7
 19933                           tblptrl	equ	0xFF6
 19934                           tablat	equ	0xFF5
 19935                           prodh	equ	0xFF4
 19936                           prodl	equ	0xFF3
 19937                           intcon	equ	0xFF2
 19938                           intcon2	equ	0xFF1
 19939                           intcon3	equ	0xFF0
 19940                           indf0	equ	0xFEF
 19941                           postinc0	equ	0xFEE
 19942                           plusw0	equ	0xFEB
 19943                           fsr0h	equ	0xFEA
 19944                           fsr0l	equ	0xFE9
 19945                           wreg	equ	0xFE8
 19946                           indf1	equ	0xFE7
 19947                           postinc1	equ	0xFE6
 19948                           postdec1	equ	0xFE5
 19949                           fsr1h	equ	0xFE2
 19950                           fsr1l	equ	0xFE1
 19951                           indf2	equ	0xFDF
 19952                           postinc2	equ	0xFDE
 19953                           postdec2	equ	0xFDD
 19954                           plusw2	equ	0xFDB
 19955                           fsr2h	equ	0xFDA
 19956                           fsr2l	equ	0xFD9
 19957                           status	equ	0xFD8
 19958                           
 19959 ;; *************** function _Rtcc_GetRtccValue *****************
 19960 ;; Defined at:
 19961 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19962 ;; Parameters:    Size  Location     Type
 19963 ;;  RtccPtrVal      1    wreg     enum E7757
 19964 ;; Auto vars:     Size  Location     Type
 19965 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19966 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19967 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19968 ;; Return value:  Size  Location     Type
 19969 ;;                  1    wreg      unsigned char 
 19970 ;; Registers used:
 19971 ;;		wreg, status,2, status,0, prodl, prodh
 19972 ;; Tracked objects:
 19973 ;;		On entry : 0/0
 19974 ;;		On exit  : 0/0
 19975 ;;		Unchanged: 0/0
 19976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19978 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19979 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19980 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19981 ;;Total ram usage:        4 bytes
 19982 ;; Hardware stack levels used:    1
 19983 ;; Hardware stack levels required when called:   11
 19984 ;; This function calls:
 19985 ;;		Nothing
 19986 ;; This function is called by:
 19987 ;;		_Rtcm_GetRtccDate
 19988 ;; This function uses a non-reentrant model
 19989 ;;
 19990                           
 19991                           	psect	text85
 19992  004FD4                     __ptext85:
 19993                           	opt stack 0
 19994  004FD4                     _Rtcc_GetRtccValue:
 19995                           	opt stack 15
 19996                           
 19997                           ; BSR set to: 0
 19998                           ;incstack = 0
 19999                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20000  004FD4  0100               	movlb	0	; () banked
 20001  004FD6  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20002                           
 20003                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20004                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20005                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20006  004FD8  D02D               	goto	l416
 20007  004FDA                     l417:
 20008                           
 20009                           ; BSR set to: 0
 20010                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20011  004FDA  010F               	movlb	15	; () banked
 20012  004FDC  833F               	bsf	63,1,b	;volatile
 20013  004FDE                     
 20014                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20015  004FDE  813F               	bsf	63,0,b	;volatile
 20016  004FE0  D01C               	goto	L18
 20017  004FE2                     l419:
 20018                           
 20019                           ; BSR set to: 0
 20020                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20021  004FE2  010F               	movlb	15	; () banked
 20022  004FE4  833F               	bsf	63,1,b	;volatile
 20023  004FE6  D01E               	goto	L19
 20024  004FE8                     l420:
 20025                           
 20026                           ; BSR set to: 0
 20027                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20028  004FE8  010F               	movlb	15	; () banked
 20029  004FEA  833F               	bsf	63,1,b	;volatile
 20030  004FEC  D021               	goto	L22
 20031  004FEE                     l14753:
 20032                           
 20033                           ; BSR set to: 15
 20034                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20035  004FEE  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20036  004FF2  0E0F               	movlw	15
 20037  004FF4  0100               	movlb	0	; () banked
 20038  004FF6  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20039  004FF8  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20040  004FFA  0B0F               	andlw	15
 20041  004FFC  0B0F               	andlw	15
 20042  004FFE  0D0A               	mullw	10
 20043  005000  50F3               	movf	prodl,w,c
 20044  005002  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20045  005004  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20046                           
 20047                           ;rtcc_drv.c: 241: break;
 20048  005006  D02D               	goto	l418
 20049  005008                     l421:
 20050                           
 20051                           ; BSR set to: 0
 20052                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20053  005008  010F               	movlb	15	; () banked
 20054  00500A  933F               	bcf	63,1,b	;volatile
 20055                           
 20056                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20057  00500C  813F               	bsf	63,0,b	;volatile
 20058                           
 20059                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20060  00500E  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20061                           
 20062                           ;rtcc_drv.c: 249: break;
 20063  005012  D027               	goto	l418
 20064  005014                     l422:
 20065                           
 20066                           ; BSR set to: 0
 20067                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20068  005014  010F               	movlb	15	; () banked
 20069  005016  933F               	bcf	63,1,b	;volatile
 20070  005018  D7E2               	goto	L20
 20071  00501A                     L18:
 20072                           
 20073                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20074  00501A  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20075  00501E  D7E7               	goto	l14753
 20076  005020                     l423:
 20077                           
 20078                           ; BSR set to: 0
 20079                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20080  005020  010F               	movlb	15	; () banked
 20081  005022  933F               	bcf	63,1,b	;volatile
 20082  005024                     L19:
 20083                           
 20084                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20085  005024  913F               	bcf	63,0,b	;volatile
 20086                           
 20087                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20088  005026  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20089  00502A  D7E1               	goto	l14753
 20090  00502C                     l424:
 20091                           
 20092                           ; BSR set to: 0
 20093                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20094  00502C  010F               	movlb	15	; () banked
 20095  00502E  933F               	bcf	63,1,b	;volatile
 20096  005030                     L22:
 20097                           
 20098                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20099  005030  913F               	bcf	63,0,b	;volatile
 20100  005032  D7F3               	goto	L18
 20101  005034                     l416:
 20102                           
 20103                           ; BSR set to: 0
 20104  005034  0100               	movlb	0	; () banked
 20105  005036  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20106                           
 20107                           ; Switch size 1, requested type "space"
 20108                           ; Number of cases is 7, Range of values is 0 to 6
 20109                           ; switch strategies available:
 20110                           ; Name         Instructions Cycles
 20111                           ; simple_byte           22    12 (average)
 20112                           ;	Chosen strategy is simple_byte
 20113  005038  0A00               	xorlw	0	; case 0
 20114  00503A  B4D8               	btfsc	status,2,c
 20115  00503C  D7CE               	goto	l417
 20116  00503E  0A01               	xorlw	1	; case 1
 20117  005040  B4D8               	btfsc	status,2,c
 20118  005042  D7CF               	goto	l419
 20119  005044  0A03               	xorlw	3	; case 2
 20120  005046  B4D8               	btfsc	status,2,c
 20121  005048  D7CF               	goto	l420
 20122  00504A  0A01               	xorlw	1	; case 3
 20123  00504C  B4D8               	btfsc	status,2,c
 20124  00504E  D7DC               	goto	l421
 20125  005050  0A07               	xorlw	7	; case 4
 20126  005052  B4D8               	btfsc	status,2,c
 20127  005054  D7DF               	goto	l422
 20128  005056  0A01               	xorlw	1	; case 5
 20129  005058  B4D8               	btfsc	status,2,c
 20130  00505A  D7E2               	goto	l423
 20131  00505C  0A03               	xorlw	3	; case 6
 20132  00505E  B4D8               	btfsc	status,2,c
 20133  005060  D7E5               	goto	l424
 20134  005062                     l418:
 20135                           
 20136                           ;rtcc_drv.c: 286: return RetValue;
 20137                           
 20138                           ; BSR set to: 0
 20139  005062  0100               	movlb	0	; () banked
 20140  005064  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20141  005066  0012               	return	
 20142  005068                     __end_of_Rtcc_GetRtccValue:
 20143                           	opt stack 0
 20144                           tosu	equ	0xFFF
 20145                           tosh	equ	0xFFE
 20146                           tosl	equ	0xFFD
 20147                           pclath	equ	0xFFA
 20148                           tblptru	equ	0xFF8
 20149                           tblptrh	equ	0xFF7
 20150                           tblptrl	equ	0xFF6
 20151                           tablat	equ	0xFF5
 20152                           prodh	equ	0xFF4
 20153                           prodl	equ	0xFF3
 20154                           intcon	equ	0xFF2
 20155                           intcon2	equ	0xFF1
 20156                           intcon3	equ	0xFF0
 20157                           indf0	equ	0xFEF
 20158                           postinc0	equ	0xFEE
 20159                           plusw0	equ	0xFEB
 20160                           fsr0h	equ	0xFEA
 20161                           fsr0l	equ	0xFE9
 20162                           wreg	equ	0xFE8
 20163                           indf1	equ	0xFE7
 20164                           postinc1	equ	0xFE6
 20165                           postdec1	equ	0xFE5
 20166                           fsr1h	equ	0xFE2
 20167                           fsr1l	equ	0xFE1
 20168                           indf2	equ	0xFDF
 20169                           postinc2	equ	0xFDE
 20170                           postdec2	equ	0xFDD
 20171                           plusw2	equ	0xFDB
 20172                           fsr2h	equ	0xFDA
 20173                           fsr2l	equ	0xFD9
 20174                           status	equ	0xFD8
 20175                           
 20176 ;; *************** function _Rtcc_SetRtcStatus *****************
 20177 ;; Defined at:
 20178 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20179 ;; Parameters:    Size  Location     Type
 20180 ;;  Status          1    wreg     unsigned char 
 20181 ;; Auto vars:     Size  Location     Type
 20182 ;;  Status          1   29[BANK0 ] unsigned char 
 20183 ;; Return value:  Size  Location     Type
 20184 ;;                  1    wreg      void 
 20185 ;; Registers used:
 20186 ;;		wreg
 20187 ;; Tracked objects:
 20188 ;;		On entry : 0/0
 20189 ;;		On exit  : 0/0
 20190 ;;		Unchanged: 0/0
 20191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20193 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20195 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20196 ;;Total ram usage:        1 bytes
 20197 ;; Hardware stack levels used:    1
 20198 ;; Hardware stack levels required when called:   11
 20199 ;; This function calls:
 20200 ;;		Nothing
 20201 ;; This function is called by:
 20202 ;;		_Rtcm_MainTask
 20203 ;; This function uses a non-reentrant model
 20204 ;;
 20205                           
 20206                           	psect	text86
 20207  006C62                     __ptext86:
 20208                           	opt stack 0
 20209  006C62                     _Rtcc_SetRtcStatus:
 20210                           	opt stack 16
 20211                           
 20212                           ; BSR set to: 0
 20213                           ;incstack = 0
 20214                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20215  006C62  0100               	movlb	0	; () banked
 20216  006C64  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20217                           
 20218                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20219  006C66  0100               	movlb	0	; () banked
 20220  006C68  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20221  006C6A  D003               	bra	u15065
 20222  006C6C  010F               	movlb	15	; () banked
 20223  006C6E  9F3F               	bcf	63,7,b	;volatile
 20224  006C70  D002               	bra	u15066
 20225  006C72                     u15065:
 20226  006C72  010F               	movlb	15	; () banked
 20227  006C74  8F3F               	bsf	63,7,b	;volatile
 20228  006C76                     u15066:
 20229                           
 20230                           ; BSR set to: 15
 20231  006C76  0012               	return		;funcret
 20232  006C78                     __end_of_Rtcc_SetRtcStatus:
 20233                           	opt stack 0
 20234                           tosu	equ	0xFFF
 20235                           tosh	equ	0xFFE
 20236                           tosl	equ	0xFFD
 20237                           pclath	equ	0xFFA
 20238                           tblptru	equ	0xFF8
 20239                           tblptrh	equ	0xFF7
 20240                           tblptrl	equ	0xFF6
 20241                           tablat	equ	0xFF5
 20242                           prodh	equ	0xFF4
 20243                           prodl	equ	0xFF3
 20244                           intcon	equ	0xFF2
 20245                           intcon2	equ	0xFF1
 20246                           intcon3	equ	0xFF0
 20247                           indf0	equ	0xFEF
 20248                           postinc0	equ	0xFEE
 20249                           plusw0	equ	0xFEB
 20250                           fsr0h	equ	0xFEA
 20251                           fsr0l	equ	0xFE9
 20252                           wreg	equ	0xFE8
 20253                           indf1	equ	0xFE7
 20254                           postinc1	equ	0xFE6
 20255                           postdec1	equ	0xFE5
 20256                           fsr1h	equ	0xFE2
 20257                           fsr1l	equ	0xFE1
 20258                           indf2	equ	0xFDF
 20259                           postinc2	equ	0xFDE
 20260                           postdec2	equ	0xFDD
 20261                           plusw2	equ	0xFDB
 20262                           fsr2h	equ	0xFDA
 20263                           fsr2l	equ	0xFD9
 20264                           status	equ	0xFD8
 20265                           
 20266 ;; *************** function _Rtcc_RtcConfig *****************
 20267 ;; Defined at:
 20268 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20269 ;; Parameters:    Size  Location     Type
 20270 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20271 ;;		 -> RtcConfig(4), 
 20272 ;; Auto vars:     Size  Location     Type
 20273 ;;		None
 20274 ;; Return value:  Size  Location     Type
 20275 ;;                  1    wreg      void 
 20276 ;; Registers used:
 20277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20278 ;; Tracked objects:
 20279 ;;		On entry : 0/0
 20280 ;;		On exit  : 0/0
 20281 ;;		Unchanged: 0/0
 20282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20283 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20285 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20286 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20287 ;;Total ram usage:        3 bytes
 20288 ;; Hardware stack levels used:    1
 20289 ;; Hardware stack levels required when called:   12
 20290 ;; This function calls:
 20291 ;;		_RtccIrqInit
 20292 ;; This function is called by:
 20293 ;;		_Rtcm_MainTask
 20294 ;; This function uses a non-reentrant model
 20295 ;;
 20296                           
 20297                           	psect	text87
 20298  004B0C                     __ptext87:
 20299                           	opt stack 0
 20300  004B0C                     _Rtcc_RtcConfig:
 20301                           	opt stack 15
 20302                           
 20303                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20304                           
 20305                           ; BSR set to: 15
 20306                           ;incstack = 0
 20307  004B0C  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20308  004B10  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20309  004B14  50DF               	movf	indf2,w,c
 20310  004B16  0100               	movlb	0	; () banked
 20311  004B18  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20312  004B1A  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20313  004B1C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20314  004B1E  010F               	movlb	15	; () banked
 20315  004B20  513F               	movf	63,w,b	;volatile
 20316  004B22  0100               	movlb	0	; () banked
 20317  004B24  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20318  004B26  0BFB               	andlw	-5
 20319  004B28  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20320  004B2A  010F               	movlb	15	; () banked
 20321  004B2C  6F3F               	movwf	63,b	;volatile
 20322                           
 20323                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20324  004B2E  0100               	movlb	0	; () banked
 20325  004B30  EE20 F001          	lfsr	2,1
 20326  004B34  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20327  004B36  26D9               	addwf	fsr2l,f,c
 20328  004B38  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20329  004B3A  22DA               	addwfc	fsr2h,f,c
 20330  004B3C  50DF               	movf	indf2,w,c
 20331  004B3E  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20332  004B40  0E01               	movlw	1
 20333  004B42  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20334  004B44  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20335  004B46  010F               	movlb	15	; () banked
 20336  004B48  513C               	movf	60,w,b	;volatile
 20337  004B4A  0100               	movlb	0	; () banked
 20338  004B4C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20339  004B4E  0BFD               	andlw	-3
 20340  004B50  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20341  004B52  010F               	movlb	15	; () banked
 20342  004B54  6F3C               	movwf	60,b	;volatile
 20343                           
 20344                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20345  004B56  0100               	movlb	0	; () banked
 20346  004B58  EE20 F001          	lfsr	2,1
 20347  004B5C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20348  004B5E  26D9               	addwf	fsr2l,f,c
 20349  004B60  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20350  004B62  22DA               	addwfc	fsr2h,f,c
 20351  004B64  50DF               	movf	indf2,w,c
 20352  004B66  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20353  004B68  90D8               	bcf	status,0,c
 20354  004B6A  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20355  004B6C  0E01               	movlw	1
 20356  004B6E  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20357  004B70  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20358  004B72  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20359  004B74  010F               	movlb	15	; () banked
 20360  004B76  513C               	movf	60,w,b	;volatile
 20361  004B78  0100               	movlb	0	; () banked
 20362  004B7A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20363  004B7C  0BFB               	andlw	-5
 20364  004B7E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20365  004B80  010F               	movlb	15	; () banked
 20366  004B82  6F3C               	movwf	60,b	;volatile
 20367                           
 20368                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20369  004B84  0100               	movlb	0	; () banked
 20370  004B86  EE20 F002          	lfsr	2,2
 20371  004B8A  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20372  004B8C  26D9               	addwf	fsr2l,f,c
 20373  004B8E  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20374  004B90  22DA               	addwfc	fsr2h,f,c
 20375  004B92  04DE               	decf	postinc2,w,c
 20376  004B94  A4D8               	btfss	status,2,c
 20377  004B96  0012               	return	
 20378                           
 20379                           ; BSR set to: 0
 20380                           ;rtcc_drv.c: 115: {
 20381                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20382  004B98  EE20 F003          	lfsr	2,3
 20383  004B9C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20384  004B9E  26D9               	addwf	fsr2l,f,c
 20385  004BA0  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20386  004BA2  22DA               	addwfc	fsr2h,f,c
 20387  004BA4  50DF               	movf	indf2,w,c
 20388  004BA6  EC3C  F036         	call	_RtccIrqInit
 20389  004BAA  0012               	return	
 20390  004BAC                     __end_of_Rtcc_RtcConfig:
 20391                           	opt stack 0
 20392                           tosu	equ	0xFFF
 20393                           tosh	equ	0xFFE
 20394                           tosl	equ	0xFFD
 20395                           pclath	equ	0xFFA
 20396                           tblptru	equ	0xFF8
 20397                           tblptrh	equ	0xFF7
 20398                           tblptrl	equ	0xFF6
 20399                           tablat	equ	0xFF5
 20400                           prodh	equ	0xFF4
 20401                           prodl	equ	0xFF3
 20402                           intcon	equ	0xFF2
 20403                           intcon2	equ	0xFF1
 20404                           intcon3	equ	0xFF0
 20405                           indf0	equ	0xFEF
 20406                           postinc0	equ	0xFEE
 20407                           plusw0	equ	0xFEB
 20408                           fsr0h	equ	0xFEA
 20409                           fsr0l	equ	0xFE9
 20410                           wreg	equ	0xFE8
 20411                           indf1	equ	0xFE7
 20412                           postinc1	equ	0xFE6
 20413                           postdec1	equ	0xFE5
 20414                           fsr1h	equ	0xFE2
 20415                           fsr1l	equ	0xFE1
 20416                           indf2	equ	0xFDF
 20417                           postinc2	equ	0xFDE
 20418                           postdec2	equ	0xFDD
 20419                           plusw2	equ	0xFDB
 20420                           fsr2h	equ	0xFDA
 20421                           fsr2l	equ	0xFD9
 20422                           status	equ	0xFD8
 20423                           
 20424 ;; *************** function _RtccIrqInit *****************
 20425 ;; Defined at:
 20426 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20427 ;; Parameters:    Size  Location     Type
 20428 ;;  Priority        1    wreg     enum E7716
 20429 ;; Auto vars:     Size  Location     Type
 20430 ;;  Priority        1   29[BANK0 ] enum E7716
 20431 ;; Return value:  Size  Location     Type
 20432 ;;                  1    wreg      void 
 20433 ;; Registers used:
 20434 ;;		wreg
 20435 ;; Tracked objects:
 20436 ;;		On entry : 0/0
 20437 ;;		On exit  : 0/0
 20438 ;;		Unchanged: 0/0
 20439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20443 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20444 ;;Total ram usage:        1 bytes
 20445 ;; Hardware stack levels used:    1
 20446 ;; Hardware stack levels required when called:   11
 20447 ;; This function calls:
 20448 ;;		Nothing
 20449 ;; This function is called by:
 20450 ;;		_Rtcc_RtcConfig
 20451 ;; This function uses a non-reentrant model
 20452 ;;
 20453                           
 20454                           	psect	text88
 20455  006C78                     __ptext88:
 20456                           	opt stack 0
 20457  006C78                     _RtccIrqInit:
 20458                           	opt stack 15
 20459                           
 20460                           ;incstack = 0
 20461                           ;RtccIrqInit@Priority stored from wreg
 20462  006C78  0100               	movlb	0	; () banked
 20463  006C7A  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20464                           
 20465                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20466  006C7C  90A4               	bcf	4004,0,c	;volatile
 20467                           
 20468                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20469  006C7E  0100               	movlb	0	; () banked
 20470  006C80  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20471  006C82  D002               	bra	u13845
 20472  006C84  90A5               	bcf	4005,0,c	;volatile
 20473  006C86  D001               	bra	u13846
 20474  006C88                     u13845:
 20475  006C88  80A5               	bsf	4005,0,c	;volatile
 20476  006C8A                     u13846:
 20477                           
 20478                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20479  006C8A  80A3               	bsf	4003,0,c	;volatile
 20480  006C8C  0012               	return		;funcret
 20481  006C8E                     __end_of_RtccIrqInit:
 20482                           	opt stack 0
 20483                           tosu	equ	0xFFF
 20484                           tosh	equ	0xFFE
 20485                           tosl	equ	0xFFD
 20486                           pclath	equ	0xFFA
 20487                           tblptru	equ	0xFF8
 20488                           tblptrh	equ	0xFF7
 20489                           tblptrl	equ	0xFF6
 20490                           tablat	equ	0xFF5
 20491                           prodh	equ	0xFF4
 20492                           prodl	equ	0xFF3
 20493                           intcon	equ	0xFF2
 20494                           intcon2	equ	0xFF1
 20495                           intcon3	equ	0xFF0
 20496                           indf0	equ	0xFEF
 20497                           postinc0	equ	0xFEE
 20498                           plusw0	equ	0xFEB
 20499                           fsr0h	equ	0xFEA
 20500                           fsr0l	equ	0xFE9
 20501                           wreg	equ	0xFE8
 20502                           indf1	equ	0xFE7
 20503                           postinc1	equ	0xFE6
 20504                           postdec1	equ	0xFE5
 20505                           fsr1h	equ	0xFE2
 20506                           fsr1l	equ	0xFE1
 20507                           indf2	equ	0xFDF
 20508                           postinc2	equ	0xFDE
 20509                           postdec2	equ	0xFDD
 20510                           plusw2	equ	0xFDB
 20511                           fsr2h	equ	0xFDA
 20512                           fsr2l	equ	0xFD9
 20513                           status	equ	0xFD8
 20514                           
 20515 ;; *************** function _Rtcc_AlarmConfig *****************
 20516 ;; Defined at:
 20517 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20518 ;; Parameters:    Size  Location     Type
 20519 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20520 ;;		 -> AlCfg(4), 
 20521 ;; Auto vars:     Size  Location     Type
 20522 ;;		None
 20523 ;; Return value:  Size  Location     Type
 20524 ;;                  1    wreg      void 
 20525 ;; Registers used:
 20526 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20527 ;; Tracked objects:
 20528 ;;		On entry : 0/0
 20529 ;;		On exit  : 0/0
 20530 ;;		Unchanged: 0/0
 20531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20532 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20534 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20535 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20536 ;;Total ram usage:        3 bytes
 20537 ;; Hardware stack levels used:    1
 20538 ;; Hardware stack levels required when called:   11
 20539 ;; This function calls:
 20540 ;;		Nothing
 20541 ;; This function is called by:
 20542 ;;		_Rtcm_MainTask
 20543 ;; This function uses a non-reentrant model
 20544 ;;
 20545                           
 20546                           	psect	text89
 20547  005772                     __ptext89:
 20548                           	opt stack 0
 20549  005772                     _Rtcc_AlarmConfig:
 20550                           	opt stack 16
 20551                           
 20552                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20553                           
 20554                           ;incstack = 0
 20555  005772  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20556  005776  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20557  00577A  50DF               	movf	indf2,w,c
 20558  00577C  0100               	movlb	0	; () banked
 20559  00577E  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20560  005780  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20561  005782  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20562  005784  5091               	movf	3985,w,c	;volatile
 20563  005786  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20564  005788  0B7F               	andlw	-129
 20565  00578A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20566  00578C  6E91               	movwf	3985,c	;volatile
 20567                           
 20568                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20569  00578E  EE20 F001          	lfsr	2,1
 20570  005792  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20571  005794  26D9               	addwf	fsr2l,f,c
 20572  005796  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20573  005798  22DA               	addwfc	fsr2h,f,c
 20574  00579A  50DF               	movf	indf2,w,c
 20575  00579C  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20576  00579E  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20577  0057A0  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20578  0057A2  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20579  0057A4  5091               	movf	3985,w,c	;volatile
 20580  0057A6  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20581  0057A8  0BBF               	andlw	-65
 20582  0057AA  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20583  0057AC  6E91               	movwf	3985,c	;volatile
 20584                           
 20585                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20586  0057AE  EE20 F002          	lfsr	2,2
 20587  0057B2  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20588  0057B4  26D9               	addwf	fsr2l,f,c
 20589  0057B6  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20590  0057B8  22DA               	addwfc	fsr2h,f,c
 20591  0057BA  50DF               	movf	indf2,w,c
 20592  0057BC  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20593  0057BE  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20594  0057C0  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20595  0057C2  5091               	movf	3985,w,c	;volatile
 20596  0057C4  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20597  0057C6  0BC3               	andlw	-61
 20598  0057C8  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20599  0057CA  6E91               	movwf	3985,c	;volatile
 20600                           
 20601                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20602  0057CC  EE20 F003          	lfsr	2,3
 20603  0057D0  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20604  0057D2  26D9               	addwf	fsr2l,f,c
 20605  0057D4  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20606  0057D6  22DA               	addwfc	fsr2h,f,c
 20607  0057D8  50DF               	movf	indf2,w,c
 20608  0057DA  6E90               	movwf	3984,c	;volatile
 20609                           
 20610                           ; BSR set to: 0
 20611  0057DC  0012               	return		;funcret
 20612  0057DE                     __end_of_Rtcc_AlarmConfig:
 20613                           	opt stack 0
 20614                           tosu	equ	0xFFF
 20615                           tosh	equ	0xFFE
 20616                           tosl	equ	0xFFD
 20617                           pclath	equ	0xFFA
 20618                           tblptru	equ	0xFF8
 20619                           tblptrh	equ	0xFF7
 20620                           tblptrl	equ	0xFF6
 20621                           tablat	equ	0xFF5
 20622                           prodh	equ	0xFF4
 20623                           prodl	equ	0xFF3
 20624                           intcon	equ	0xFF2
 20625                           intcon2	equ	0xFF1
 20626                           intcon3	equ	0xFF0
 20627                           indf0	equ	0xFEF
 20628                           postinc0	equ	0xFEE
 20629                           plusw0	equ	0xFEB
 20630                           fsr0h	equ	0xFEA
 20631                           fsr0l	equ	0xFE9
 20632                           wreg	equ	0xFE8
 20633                           indf1	equ	0xFE7
 20634                           postinc1	equ	0xFE6
 20635                           postdec1	equ	0xFE5
 20636                           fsr1h	equ	0xFE2
 20637                           fsr1l	equ	0xFE1
 20638                           indf2	equ	0xFDF
 20639                           postinc2	equ	0xFDE
 20640                           postdec2	equ	0xFDD
 20641                           plusw2	equ	0xFDB
 20642                           fsr2h	equ	0xFDA
 20643                           fsr2l	equ	0xFD9
 20644                           status	equ	0xFD8
 20645                           
 20646 ;; *************** function _triggerVisualEffect *****************
 20647 ;; Defined at:
 20648 ;;		line 107 in file "../Source/c/04_App/utils.c"
 20649 ;; Parameters:    Size  Location     Type
 20650 ;;		None
 20651 ;; Auto vars:     Size  Location     Type
 20652 ;;		None
 20653 ;; Return value:  Size  Location     Type
 20654 ;;                  1    wreg      void 
 20655 ;; Registers used:
 20656 ;;		wreg, status,2
 20657 ;; Tracked objects:
 20658 ;;		On entry : 0/0
 20659 ;;		On exit  : 0/0
 20660 ;;		Unchanged: 0/0
 20661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20666 ;;Total ram usage:        0 bytes
 20667 ;; Hardware stack levels used:    1
 20668 ;; Hardware stack levels required when called:   11
 20669 ;; This function calls:
 20670 ;;		Nothing
 20671 ;; This function is called by:
 20672 ;;		_MyApp_Task
 20673 ;; This function uses a non-reentrant model
 20674 ;;
 20675                           
 20676                           	psect	text90
 20677  006D7E                     __ptext90:
 20678                           	opt stack 0
 20679  006D7E                     _triggerVisualEffect:
 20680                           	opt stack 16
 20681                           
 20682                           ;utils.c: 109: blinkInSeconds = 0;
 20683                           
 20684                           ; BSR set to: 0
 20685                           ;incstack = 0
 20686  006D7E  0E00               	movlw	0
 20687  006D80  0103               	movlb	3	; () banked
 20688  006D82  6FFE               	movwf	(_blinkInSeconds+1)& (0+255),b
 20689  006D84  0E00               	movlw	0
 20690  006D86  6FFD               	movwf	_blinkInSeconds& (0+255),b
 20691                           
 20692                           ; BSR set to: 3
 20693  006D88  0012               	return		;funcret
 20694  006D8A                     __end_of_triggerVisualEffect:
 20695                           	opt stack 0
 20696                           tosu	equ	0xFFF
 20697                           tosh	equ	0xFFE
 20698                           tosl	equ	0xFFD
 20699                           pclath	equ	0xFFA
 20700                           tblptru	equ	0xFF8
 20701                           tblptrh	equ	0xFF7
 20702                           tblptrl	equ	0xFF6
 20703                           tablat	equ	0xFF5
 20704                           prodh	equ	0xFF4
 20705                           prodl	equ	0xFF3
 20706                           intcon	equ	0xFF2
 20707                           intcon2	equ	0xFF1
 20708                           intcon3	equ	0xFF0
 20709                           indf0	equ	0xFEF
 20710                           postinc0	equ	0xFEE
 20711                           plusw0	equ	0xFEB
 20712                           fsr0h	equ	0xFEA
 20713                           fsr0l	equ	0xFE9
 20714                           wreg	equ	0xFE8
 20715                           indf1	equ	0xFE7
 20716                           postinc1	equ	0xFE6
 20717                           postdec1	equ	0xFE5
 20718                           fsr1h	equ	0xFE2
 20719                           fsr1l	equ	0xFE1
 20720                           indf2	equ	0xFDF
 20721                           postinc2	equ	0xFDE
 20722                           postdec2	equ	0xFDD
 20723                           plusw2	equ	0xFDB
 20724                           fsr2h	equ	0xFDA
 20725                           fsr2l	equ	0xFD9
 20726                           status	equ	0xFD8
 20727                           
 20728 ;; *************** function _triggerCmdFsm *****************
 20729 ;; Defined at:
 20730 ;;		line 108 in file "../Source/c/04_App/cmd_trigger.c"
 20731 ;; Parameters:    Size  Location     Type
 20732 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 20733 ;;		 -> receivedNumber(13), 
 20734 ;; Auto vars:     Size  Location     Type
 20735 ;;  searchNumber    1   10[BANK1 ] unsigned char 
 20736 ;;  masterOpResu    1    9[BANK1 ] unsigned char 
 20737 ;;  numberInMemo    1    8[BANK1 ] unsigned char 
 20738 ;;  isComplete      1    7[BANK1 ] unsigned char 
 20739 ;; Return value:  Size  Location     Type
 20740 ;;                  1    wreg      unsigned char 
 20741 ;; Registers used:
 20742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20743 ;; Tracked objects:
 20744 ;;		On entry : 0/0
 20745 ;;		On exit  : 0/0
 20746 ;;		Unchanged: 0/0
 20747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20748 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20749 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20751 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20752 ;;Total ram usage:        6 bytes
 20753 ;; Hardware stack levels used:    1
 20754 ;; Hardware stack levels required when called:   18
 20755 ;; This function calls:
 20756 ;;		_isMasterNumber
 20757 ;;		_isNumberInMemory
 20758 ;;		_secondsAppTimer
 20759 ;;		_triggerRelay
 20760 ;; This function is called by:
 20761 ;;		_MyApp_Task
 20762 ;; This function uses a non-reentrant model
 20763 ;;
 20764                           
 20765                           	psect	text91
 20766  0039DE                     __ptext91:
 20767                           	opt stack 0
 20768  0039DE                     _triggerCmdFsm:
 20769                           	opt stack 9
 20770                           
 20771                           ;cmd_trigger.c: 110: static triggerFsmStates currentState = TRIGGER_FSM_CHECK_MASTER;
 20772                           ;cmd_trigger.c: 111: bool isComplete = 0;
 20773                           
 20774                           ; BSR set to: 3
 20775                           ;incstack = 0
 20776  0039DE  0E00               	movlw	0
 20777  0039E0  0101               	movlb	1	; () banked
 20778  0039E2  6F07               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20779                           
 20780                           ;cmd_trigger.c: 112: uint8_t numberInMemory = 0;
 20781  0039E4  0E00               	movlw	0
 20782  0039E6  6F08               	movwf	triggerCmdFsm@numberInMemory& (0+255),b
 20783                           
 20784                           ;cmd_trigger.c: 113: uint8_t masterOpResult = OP_FAILED;
 20785  0039E8  0E01               	movlw	1
 20786  0039EA  6F09               	movwf	triggerCmdFsm@masterOpResult& (0+255),b
 20787                           
 20788                           ;cmd_trigger.c: 114: uint8_t searchNumber = OP_FAILED;
 20789  0039EC  0E01               	movlw	1
 20790  0039EE  6F0A               	movwf	triggerCmdFsm@searchNumber& (0+255),b
 20791                           
 20792                           ;cmd_trigger.c: 116: switch (currentState)
 20793  0039F0  D04F               	goto	l2864
 20794  0039F2                     
 20795                           ; BSR set to: 1
 20796                           ;cmd_trigger.c: 119: masterOpResult = isMasterNumber(receivedNumber);
 20797                           
 20798                           ; BSR set to: 1
 20799  0039F2  C105  F100         	movff	triggerCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 20800  0039F6  C106  F101         	movff	triggerCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 20801  0039FA  EC4C  F02B         	call	_isMasterNumber	;wreg free
 20802  0039FE  0101               	movlb	1	; () banked
 20803  003A00  6F09               	movwf	triggerCmdFsm@masterOpResult& (0+255),b
 20804                           
 20805                           ; BSR set to: 1
 20806                           ;cmd_trigger.c: 120: if (masterOpResult == OP_SUCCESS)
 20807  003A02  5109               	movf	triggerCmdFsm@masterOpResult& (0+255),w,b
 20808  003A04  A4D8               	btfss	status,2,c
 20809  003A06  D002               	goto	l2866
 20810  003A08                     u16440:
 20811                           
 20812                           ; BSR set to: 1
 20813                           ;cmd_trigger.c: 121: {
 20814                           ;cmd_trigger.c: 122: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20815  003A08  0E02               	movlw	2
 20816  003A0A  D029               	goto	L26
 20817  003A0C                     l2866:
 20818                           
 20819                           ; BSR set to: 1
 20820                           ;cmd_trigger.c: 124: else if (masterOpResult == OP_FAILED)
 20821                           
 20822                           ; BSR set to: 1
 20823  003A0C  0509               	decf	triggerCmdFsm@masterOpResult& (0+255),w,b
 20824  003A0E  A4D8               	btfss	status,2,c
 20825  003A10  D04F               	goto	l2869
 20826                           
 20827                           ; BSR set to: 1
 20828                           ;cmd_trigger.c: 125: {
 20829                           ;cmd_trigger.c: 126: currentState = TRIGGER_FSM_CHECK_NUMBER;
 20830  003A12  0E01               	movlw	1
 20831  003A14  D024               	goto	L26
 20832  003A16                     
 20833                           ; BSR set to: 1
 20834                           ;cmd_trigger.c: 131: searchNumber = isNumberInMemory(receivedNumber, &numberInMemory);
 20835                           
 20836                           ; BSR set to: 1
 20837  003A16  C105  F100         	movff	triggerCmdFsm@receivedNumber,isNumberInMemory@phoneNumber
 20838  003A1A  C106  F101         	movff	triggerCmdFsm@receivedNumber+1,isNumberInMemory@phoneNumber+1
 20839  003A1E  0E08               	movlw	low triggerCmdFsm@numberInMemory
 20840  003A20  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 20841  003A22  0E01               	movlw	high triggerCmdFsm@numberInMemory
 20842  003A24  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 20843  003A26  ECD4  F022         	call	_isNumberInMemory	;wreg free
 20844  003A2A  0101               	movlb	1	; () banked
 20845  003A2C  6F0A               	movwf	triggerCmdFsm@searchNumber& (0+255),b
 20846                           
 20847                           ; BSR set to: 1
 20848                           ;cmd_trigger.c: 132: if (searchNumber == SEARCH_FSM_FOUND)
 20849  003A2E  0E03               	movlw	3
 20850  003A30  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20851  003A32  B4D8               	btfsc	status,2,c
 20852  003A34  D7E9               	goto	u16440
 20853                           
 20854                           ; BSR set to: 1
 20855                           ;cmd_trigger.c: 136: else if (searchNumber == SEARCH_FSM_NOT_FOUND || searchNumber == SE
      +                          ARCH_FSM_ERROR)
 20856                           
 20857                           ; BSR set to: 1
 20858                           
 20859                           ;cmd_trigger.c: 135: }
 20860                           
 20861                           ; BSR set to: 1
 20862                           ;cmd_trigger.c: 133: {
 20863                           ;cmd_trigger.c: 134: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20864  003A36  0E04               	movlw	4
 20865  003A38  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20866  003A3A  B4D8               	btfsc	status,2,c
 20867  003A3C  D004               	goto	u16480
 20868                           
 20869                           ; BSR set to: 1
 20870  003A3E  0E02               	movlw	2
 20871  003A40  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20872  003A42  A4D8               	btfss	status,2,c
 20873  003A44  D035               	goto	l2869
 20874  003A46                     u16480:
 20875                           
 20876                           ; BSR set to: 1
 20877                           ;cmd_trigger.c: 137: {
 20878                           ;cmd_trigger.c: 138: currentState = TRIGGER_FSM_COMPLETE;
 20879                           
 20880                           ; BSR set to: 1
 20881  003A46  0E04               	movlw	4
 20882  003A48  D00A               	goto	L26
 20883  003A4A                     
 20884                           ; BSR set to: 1
 20885                           ;cmd_trigger.c: 143: triggerRelay(1);
 20886                           
 20887                           ; BSR set to: 1
 20888  003A4A  0E01               	movlw	1
 20889  003A4C  EC20  F033         	call	_triggerRelay
 20890                           
 20891                           ;cmd_trigger.c: 144: secondCounter = 0;
 20892  003A50  0E00               	movlw	0
 20893  003A52  0103               	movlb	3	; () banked
 20894  003A54  6FBE               	movwf	(_secondCounter+1)& (0+255),b
 20895  003A56  0E00               	movlw	0
 20896  003A58  6FBD               	movwf	_secondCounter& (0+255),b
 20897                           
 20898                           ; BSR set to: 3
 20899                           ;cmd_trigger.c: 145: currentState = TRIGGER_FSM_DEACTIVATE_RELAY;
 20900  003A5A  0E03               	movlw	3
 20901  003A5C  D013               	goto	L27
 20902  003A5E                     L26:
 20903  003A5E  6FD3               	movwf	triggerCmdFsm@currentState& (0+255),b
 20904                           
 20905                           ;cmd_trigger.c: 146: break;
 20906  003A60  D027               	goto	l2869
 20907  003A62                     
 20908                           ; BSR set to: 1
 20909                           ;cmd_trigger.c: 149: if (secondsAppTimer(1, &secondCounter, 0))
 20910                           
 20911                           ; BSR set to: 1
 20912  003A62  0EBD               	movlw	low _secondCounter
 20913  003A64  0100               	movlb	0	; () banked
 20914  003A66  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20915  003A68  0E03               	movlw	high _secondCounter
 20916  003A6A  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20917  003A6C  0E00               	movlw	0
 20918  003A6E  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20919  003A70  0E01               	movlw	1
 20920  003A72  EC35  F025         	call	_secondsAppTimer
 20921  003A76  0900               	iorlw	0
 20922  003A78  B4D8               	btfsc	status,2,c
 20923  003A7A  D01A               	goto	l2869
 20924                           
 20925                           ;cmd_trigger.c: 150: {
 20926                           ;cmd_trigger.c: 151: triggerRelay(0);
 20927  003A7C  0E00               	movlw	0
 20928  003A7E  EC20  F033         	call	_triggerRelay
 20929                           
 20930                           ;cmd_trigger.c: 152: currentState = TRIGGER_FSM_COMPLETE;
 20931  003A82  0E04               	movlw	4
 20932  003A84                     L27:
 20933  003A84  0101               	movlb	1	; () banked
 20934  003A86  D7EB               	goto	L26
 20935  003A88                     
 20936                           ; BSR set to: 1
 20937                           ;cmd_trigger.c: 157: isComplete = 1;
 20938                           
 20939                           ; BSR set to: 1
 20940  003A88  0E01               	movlw	1
 20941  003A8A  6F07               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20942                           
 20943                           ;cmd_trigger.c: 158: currentState = TRIGGER_FSM_CHECK_MASTER;
 20944  003A8C  0E00               	movlw	0
 20945  003A8E  D7E7               	goto	L26
 20946  003A90                     l2864:
 20947                           
 20948                           ; BSR set to: 1
 20949                           
 20950                           ; BSR set to: 1
 20951  003A90  51D3               	movf	triggerCmdFsm@currentState& (0+255),w,b
 20952                           
 20953                           ; Switch size 1, requested type "space"
 20954                           ; Number of cases is 5, Range of values is 0 to 4
 20955                           ; switch strategies available:
 20956                           ; Name         Instructions Cycles
 20957                           ; simple_byte           16     9 (average)
 20958                           ;	Chosen strategy is simple_byte
 20959  003A92  0A00               	xorlw	0	; case 0
 20960  003A94  B4D8               	btfsc	status,2,c
 20961  003A96  D7AD               	goto	l2865
 20962  003A98  0A01               	xorlw	1	; case 1
 20963  003A9A  B4D8               	btfsc	status,2,c
 20964  003A9C  D7BC               	goto	l2870
 20965  003A9E  0A03               	xorlw	3	; case 2
 20966  003AA0  B4D8               	btfsc	status,2,c
 20967  003AA2  D7D3               	goto	l2876
 20968  003AA4  0A01               	xorlw	1	; case 3
 20969  003AA6  B4D8               	btfsc	status,2,c
 20970  003AA8  D7DC               	goto	l2877
 20971  003AAA  0A07               	xorlw	7	; case 4
 20972  003AAC  B4D8               	btfsc	status,2,c
 20973  003AAE  D7EC               	goto	l2879
 20974  003AB0                     l2869:
 20975                           
 20976                           ;cmd_trigger.c: 164: return isComplete;
 20977                           
 20978                           ; BSR set to: 1
 20979  003AB0  0101               	movlb	1	; () banked
 20980  003AB2  5107               	movf	triggerCmdFsm@isComplete& (0+255),w,b
 20981  003AB4  0012               	return	
 20982  003AB6                     __end_of_triggerCmdFsm:
 20983                           	opt stack 0
 20984                           tosu	equ	0xFFF
 20985                           tosh	equ	0xFFE
 20986                           tosl	equ	0xFFD
 20987                           pclath	equ	0xFFA
 20988                           tblptru	equ	0xFF8
 20989                           tblptrh	equ	0xFF7
 20990                           tblptrl	equ	0xFF6
 20991                           tablat	equ	0xFF5
 20992                           prodh	equ	0xFF4
 20993                           prodl	equ	0xFF3
 20994                           intcon	equ	0xFF2
 20995                           intcon2	equ	0xFF1
 20996                           intcon3	equ	0xFF0
 20997                           indf0	equ	0xFEF
 20998                           postinc0	equ	0xFEE
 20999                           plusw0	equ	0xFEB
 21000                           fsr0h	equ	0xFEA
 21001                           fsr0l	equ	0xFE9
 21002                           wreg	equ	0xFE8
 21003                           indf1	equ	0xFE7
 21004                           postinc1	equ	0xFE6
 21005                           postdec1	equ	0xFE5
 21006                           fsr1h	equ	0xFE2
 21007                           fsr1l	equ	0xFE1
 21008                           indf2	equ	0xFDF
 21009                           postinc2	equ	0xFDE
 21010                           postdec2	equ	0xFDD
 21011                           plusw2	equ	0xFDB
 21012                           fsr2h	equ	0xFDA
 21013                           fsr2l	equ	0xFD9
 21014                           status	equ	0xFD8
 21015                           
 21016 ;; *************** function _triggerRelay *****************
 21017 ;; Defined at:
 21018 ;;		line 83 in file "../Source/c/04_App/cmd_trigger.c"
 21019 ;; Parameters:    Size  Location     Type
 21020 ;;  isRelayOn       1    wreg     unsigned char 
 21021 ;; Auto vars:     Size  Location     Type
 21022 ;;  isRelayOn       1   38[BANK0 ] unsigned char 
 21023 ;;  res             1   37[BANK0 ] unsigned char 
 21024 ;; Return value:  Size  Location     Type
 21025 ;;                  1    wreg      unsigned char 
 21026 ;; Registers used:
 21027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21028 ;; Tracked objects:
 21029 ;;		On entry : 0/0
 21030 ;;		On exit  : 0/0
 21031 ;;		Unchanged: 0/0
 21032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21034 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21036 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21037 ;;Total ram usage:        2 bytes
 21038 ;; Hardware stack levels used:    1
 21039 ;; Hardware stack levels required when called:   13
 21040 ;; This function calls:
 21041 ;;		_I2cSlv_SendI2cMsg
 21042 ;; This function is called by:
 21043 ;;		_triggerCmdFsm
 21044 ;; This function uses a non-reentrant model
 21045 ;;
 21046                           
 21047                           	psect	text92
 21048  006640                     __ptext92:
 21049                           	opt stack 0
 21050  006640                     _triggerRelay:
 21051                           	opt stack 13
 21052                           
 21053                           ; BSR set to: 1
 21054                           ;incstack = 0
 21055                           ;triggerRelay@isRelayOn stored from wreg
 21056  006640  0100               	movlb	0	; () banked
 21057  006642  6F86               	movwf	triggerRelay@isRelayOn& (0+255),b
 21058                           
 21059                           ;cmd_trigger.c: 85: uint8_t res = 0u;
 21060  006644  0E00               	movlw	0
 21061  006646  0100               	movlb	0	; () banked
 21062  006648  6F85               	movwf	triggerRelay@res& (0+255),b
 21063                           
 21064                           ; BSR set to: 0
 21065                           ;cmd_trigger.c: 86: if (isRelayOn)
 21066  00664A  5186               	movf	triggerRelay@isRelayOn& (0+255),w,b
 21067  00664C  B4D8               	btfsc	status,2,c
 21068  00664E  D002               	goto	l2857
 21069                           
 21070                           ; BSR set to: 0
 21071                           ;cmd_trigger.c: 87: {
 21072                           ;cmd_trigger.c: 88: relayBuffer[1] = 0x01;
 21073  006650  0E01               	movlw	1
 21074  006652  D001               	goto	L28
 21075  006654                     l2857:
 21076                           
 21077                           ;cmd_trigger.c: 90: else
 21078                           ;cmd_trigger.c: 91: {
 21079                           ;cmd_trigger.c: 92: relayBuffer[1] = 0x00;
 21080                           
 21081                           ; BSR set to: 2
 21082  006654  0E00               	movlw	0
 21083  006656                     L28:
 21084  006656  0102               	movlb	2	; () banked
 21085  006658  6FFF               	movwf	(_relayBuffer+1)& (0+255),b
 21086                           
 21087                           ; BSR set to: 2
 21088                           ;cmd_trigger.c: 93: }
 21089                           ;cmd_trigger.c: 94: res = I2cSlv_SendI2cMsg(relayBuffer, 1, 2);
 21090                           
 21091                           ; BSR set to: 2
 21092  00665A  0EFE               	movlw	low _relayBuffer
 21093  00665C  0100               	movlb	0	; () banked
 21094  00665E  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 21095  006660  0E02               	movlw	high _relayBuffer
 21096  006662  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 21097  006664  0E01               	movlw	1
 21098  006666  6F82               	movwf	I2cSlv_SendI2cMsg@SlaveAddr& (0+255),b
 21099  006668  0E02               	movlw	2
 21100  00666A  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 21101  00666C  EC4E  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 21102  006670  0100               	movlb	0	; () banked
 21103  006672  6F85               	movwf	triggerRelay@res& (0+255),b
 21104  006674  0012               	return	
 21105  006676                     __end_of_triggerRelay:
 21106                           	opt stack 0
 21107                           tosu	equ	0xFFF
 21108                           tosh	equ	0xFFE
 21109                           tosl	equ	0xFFD
 21110                           pclath	equ	0xFFA
 21111                           tblptru	equ	0xFF8
 21112                           tblptrh	equ	0xFF7
 21113                           tblptrl	equ	0xFF6
 21114                           tablat	equ	0xFF5
 21115                           prodh	equ	0xFF4
 21116                           prodl	equ	0xFF3
 21117                           intcon	equ	0xFF2
 21118                           intcon2	equ	0xFF1
 21119                           intcon3	equ	0xFF0
 21120                           indf0	equ	0xFEF
 21121                           postinc0	equ	0xFEE
 21122                           plusw0	equ	0xFEB
 21123                           fsr0h	equ	0xFEA
 21124                           fsr0l	equ	0xFE9
 21125                           wreg	equ	0xFE8
 21126                           indf1	equ	0xFE7
 21127                           postinc1	equ	0xFE6
 21128                           postdec1	equ	0xFE5
 21129                           fsr1h	equ	0xFE2
 21130                           fsr1l	equ	0xFE1
 21131                           indf2	equ	0xFDF
 21132                           postinc2	equ	0xFDE
 21133                           postdec2	equ	0xFDD
 21134                           plusw2	equ	0xFDB
 21135                           fsr2h	equ	0xFDA
 21136                           fsr2l	equ	0xFD9
 21137                           status	equ	0xFD8
 21138                           
 21139 ;; *************** function _resCmdFsm *****************
 21140 ;; Defined at:
 21141 ;;		line 77 in file "../Source/c/04_App/cmd_res.c"
 21142 ;; Parameters:    Size  Location     Type
 21143 ;;  receivedNumb    2    3[BANK1 ] PTR unsigned char 
 21144 ;;		 -> receivedNumber(13), 
 21145 ;;  isCmdSuccess    2    5[BANK1 ] PTR unsigned char 
 21146 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 21147 ;; Auto vars:     Size  Location     Type
 21148 ;;  masterOpResu    1    8[BANK1 ] unsigned char 
 21149 ;;  isComplete      1    7[BANK1 ] unsigned char 
 21150 ;; Return value:  Size  Location     Type
 21151 ;;                  1    wreg      unsigned char 
 21152 ;; Registers used:
 21153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21154 ;; Tracked objects:
 21155 ;;		On entry : 0/0
 21156 ;;		On exit  : 0/0
 21157 ;;		Unchanged: 0/0
 21158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21159 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21160 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21162 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21163 ;;Total ram usage:        6 bytes
 21164 ;; Hardware stack levels used:    1
 21165 ;; Hardware stack levels required when called:   18
 21166 ;; This function calls:
 21167 ;;		_Eeprom_Reset
 21168 ;;		_isMasterNumber
 21169 ;; This function is called by:
 21170 ;;		_MyApp_Task
 21171 ;; This function uses a non-reentrant model
 21172 ;;
 21173                           
 21174                           	psect	text93
 21175  0054C2                     __ptext93:
 21176                           	opt stack 0
 21177  0054C2                     _resCmdFsm:
 21178                           	opt stack 9
 21179                           
 21180                           ;cmd_res.c: 79: static resFsmStates currentState = RES_FSM_CHECK_MASTER;
 21181                           ;cmd_res.c: 80: bool isComplete = 0;
 21182                           
 21183                           ; BSR set to: 0
 21184                           ;incstack = 0
 21185  0054C2  0E00               	movlw	0
 21186  0054C4  0101               	movlb	1	; () banked
 21187  0054C6  6F07               	movwf	resCmdFsm@isComplete& (0+255),b
 21188                           
 21189                           ;cmd_res.c: 81: uint8_t masterOpResult = OP_FAILED;
 21190  0054C8  0E01               	movlw	1
 21191  0054CA  6F08               	movwf	resCmdFsm@masterOpResult& (0+255),b
 21192                           
 21193                           ;cmd_res.c: 83: switch (currentState)
 21194  0054CC  D02C               	goto	l2826
 21195  0054CE                     
 21196                           ; BSR set to: 1
 21197                           ;cmd_res.c: 86: *isCmdSuccessfull = 0;
 21198                           
 21199                           ; BSR set to: 1
 21200  0054CE  C105  FFD9         	movff	resCmdFsm@isCmdSuccessfull,fsr2l
 21201  0054D2  C106  FFDA         	movff	resCmdFsm@isCmdSuccessfull+1,fsr2h
 21202  0054D6  0E00               	movlw	0
 21203  0054D8  6EDF               	movwf	indf2,c
 21204                           
 21205                           ; BSR set to: 1
 21206                           ;cmd_res.c: 87: masterOpResult = isMasterNumber(receivedNumber);
 21207  0054DA  C103  F100         	movff	resCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 21208  0054DE  C104  F101         	movff	resCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 21209  0054E2  EC4C  F02B         	call	_isMasterNumber	;wreg free
 21210  0054E6  0101               	movlb	1	; () banked
 21211  0054E8  6F08               	movwf	resCmdFsm@masterOpResult& (0+255),b
 21212                           
 21213                           ; BSR set to: 1
 21214                           ;cmd_res.c: 88: if (masterOpResult == OP_SUCCESS)
 21215  0054EA  5108               	movf	resCmdFsm@masterOpResult& (0+255),w,b
 21216  0054EC  A4D8               	btfss	status,2,c
 21217  0054EE  D002               	goto	l2828
 21218                           
 21219                           ; BSR set to: 1
 21220                           ;cmd_res.c: 89: {
 21221                           ;cmd_res.c: 90: currentState = RES_FSM_RESET;
 21222  0054F0  0E01               	movlw	1
 21223  0054F2  D017               	goto	L30
 21224  0054F4                     l2828:
 21225                           
 21226                           ; BSR set to: 1
 21227                           ;cmd_res.c: 92: else if (masterOpResult == OP_FAILED)
 21228                           
 21229                           ; BSR set to: 1
 21230  0054F4  0508               	decf	resCmdFsm@masterOpResult& (0+255),w,b
 21231  0054F6  A4D8               	btfss	status,2,c
 21232  0054F8  D020               	goto	l2831
 21233                           
 21234                           ; BSR set to: 1
 21235                           ;cmd_res.c: 93: {
 21236                           ;cmd_res.c: 94: currentState = RES_FSM_COMPLETE;
 21237  0054FA  0E02               	movlw	2
 21238  0054FC  D012               	goto	L30
 21239  0054FE                     
 21240                           ; BSR set to: 1
 21241                           ;cmd_res.c: 99: if (Eeprom_Reset() == 0)
 21242                           
 21243                           ; BSR set to: 1
 21244  0054FE  EC29  F02E         	call	_Eeprom_Reset	;wreg free
 21245  005502  0900               	iorlw	0
 21246  005504  A4D8               	btfss	status,2,c
 21247  005506  D019               	goto	l2831
 21248                           
 21249                           ;cmd_res.c: 100: {
 21250                           ;cmd_res.c: 101: currentState = RES_FSM_COMPLETE;
 21251  005508  0E02               	movlw	2
 21252  00550A  0101               	movlb	1	; () banked
 21253  00550C  6FD4               	movwf	resCmdFsm@currentState& (0+255),b
 21254                           
 21255                           ; BSR set to: 1
 21256                           ;cmd_res.c: 102: *isCmdSuccessfull = 1;
 21257  00550E  C105  FFD9         	movff	resCmdFsm@isCmdSuccessfull,fsr2l
 21258  005512  C106  FFDA         	movff	resCmdFsm@isCmdSuccessfull+1,fsr2h
 21259  005516  0E01               	movlw	1
 21260  005518  6EDF               	movwf	indf2,c
 21261                           
 21262                           ; BSR set to: 1
 21263                           ;cmd_res.c: 103: }
 21264                           ;cmd_res.c: 104: break;
 21265  00551A  D00F               	goto	l2831
 21266  00551C                     
 21267                           ; BSR set to: 1
 21268                           ;cmd_res.c: 107: isComplete = 1;
 21269                           
 21270                           ; BSR set to: 1
 21271  00551C  0E01               	movlw	1
 21272  00551E  6F07               	movwf	resCmdFsm@isComplete& (0+255),b
 21273                           
 21274                           ;cmd_res.c: 108: currentState = RES_FSM_CHECK_MASTER;
 21275  005520  0E00               	movlw	0
 21276  005522                     L30:
 21277  005522  6FD4               	movwf	resCmdFsm@currentState& (0+255),b
 21278                           
 21279                           ; BSR set to: 1
 21280                           ;cmd_res.c: 113: }
 21281                           
 21282                           ; BSR set to: 1
 21283                           ;cmd_res.c: 112: break;
 21284                           
 21285                           ;cmd_res.c: 111: default:
 21286                           
 21287                           ;cmd_res.c: 109: break;
 21288  005524  D00A               	goto	l2831
 21289  005526                     l2826:
 21290                           
 21291                           ; BSR set to: 1
 21292                           
 21293                           ; BSR set to: 1
 21294  005526  51D4               	movf	resCmdFsm@currentState& (0+255),w,b
 21295                           
 21296                           ; Switch size 1, requested type "space"
 21297                           ; Number of cases is 3, Range of values is 0 to 2
 21298                           ; switch strategies available:
 21299                           ; Name         Instructions Cycles
 21300                           ; simple_byte           10     6 (average)
 21301                           ;	Chosen strategy is simple_byte
 21302  005528  0A00               	xorlw	0	; case 0
 21303  00552A  B4D8               	btfsc	status,2,c
 21304  00552C  D7D0               	goto	l2827
 21305  00552E  0A01               	xorlw	1	; case 1
 21306  005530  B4D8               	btfsc	status,2,c
 21307  005532  D7E5               	goto	l2832
 21308  005534  0A03               	xorlw	3	; case 2
 21309  005536  B4D8               	btfsc	status,2,c
 21310  005538  D7F1               	goto	l2834
 21311  00553A                     l2831:
 21312                           
 21313                           ;cmd_res.c: 114: return isComplete;
 21314                           
 21315                           ; BSR set to: 1
 21316  00553A  0101               	movlb	1	; () banked
 21317  00553C  5107               	movf	resCmdFsm@isComplete& (0+255),w,b
 21318  00553E  0012               	return	
 21319  005540                     __end_of_resCmdFsm:
 21320                           	opt stack 0
 21321                           tosu	equ	0xFFF
 21322                           tosh	equ	0xFFE
 21323                           tosl	equ	0xFFD
 21324                           pclath	equ	0xFFA
 21325                           tblptru	equ	0xFF8
 21326                           tblptrh	equ	0xFF7
 21327                           tblptrl	equ	0xFF6
 21328                           tablat	equ	0xFF5
 21329                           prodh	equ	0xFF4
 21330                           prodl	equ	0xFF3
 21331                           intcon	equ	0xFF2
 21332                           intcon2	equ	0xFF1
 21333                           intcon3	equ	0xFF0
 21334                           indf0	equ	0xFEF
 21335                           postinc0	equ	0xFEE
 21336                           plusw0	equ	0xFEB
 21337                           fsr0h	equ	0xFEA
 21338                           fsr0l	equ	0xFE9
 21339                           wreg	equ	0xFE8
 21340                           indf1	equ	0xFE7
 21341                           postinc1	equ	0xFE6
 21342                           postdec1	equ	0xFE5
 21343                           fsr1h	equ	0xFE2
 21344                           fsr1l	equ	0xFE1
 21345                           indf2	equ	0xFDF
 21346                           postinc2	equ	0xFDE
 21347                           postdec2	equ	0xFDD
 21348                           plusw2	equ	0xFDB
 21349                           fsr2h	equ	0xFDA
 21350                           fsr2l	equ	0xFD9
 21351                           status	equ	0xFD8
 21352                           
 21353 ;; *************** function _Eeprom_Reset *****************
 21354 ;; Defined at:
 21355 ;;		line 131 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 21356 ;; Parameters:    Size  Location     Type
 21357 ;;		None
 21358 ;; Auto vars:     Size  Location     Type
 21359 ;;  SlaveAddress    1   37[BANK0 ] const unsigned char 
 21360 ;; Return value:  Size  Location     Type
 21361 ;;                  1    wreg      unsigned char 
 21362 ;; Registers used:
 21363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21364 ;; Tracked objects:
 21365 ;;		On entry : 0/0
 21366 ;;		On exit  : 0/0
 21367 ;;		Unchanged: 0/0
 21368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21372 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21373 ;;Total ram usage:        1 bytes
 21374 ;; Hardware stack levels used:    1
 21375 ;; Hardware stack levels required when called:   13
 21376 ;; This function calls:
 21377 ;;		_ClearBuffer
 21378 ;;		_I2cSlv_SendI2cMsg
 21379 ;; This function is called by:
 21380 ;;		_resCmdFsm
 21381 ;; This function uses a non-reentrant model
 21382 ;;
 21383                           
 21384                           	psect	text94
 21385  005C52                     __ptext94:
 21386                           	opt stack 0
 21387  005C52                     _Eeprom_Reset:
 21388                           	opt stack 13
 21389                           
 21390                           ;eeprom_if.c: 133: const UINT8 SlaveAddress = 0x50;
 21391                           
 21392                           ; BSR set to: 1
 21393                           ;incstack = 0
 21394  005C52  0E50               	movlw	80
 21395  005C54  0100               	movlb	0	; () banked
 21396  005C56  6F85               	movwf	Eeprom_Reset@SlaveAddress& (0+255),b
 21397                           
 21398                           ;eeprom_if.c: 134: static UINT8 memoryAddress = 0;
 21399                           ;eeprom_if.c: 136: if (memoryAddress == 0)
 21400  005C58  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 21401  005C5A  A4D8               	btfss	status,2,c
 21402  005C5C  D00A               	goto	l2045
 21403                           
 21404                           ; BSR set to: 0
 21405                           ;eeprom_if.c: 137: {
 21406                           ;eeprom_if.c: 138: ClearBuffer(EepromBuffer, 15);
 21407  005C5E  0EA7               	movlw	low _EepromBuffer
 21408  005C60  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 21409  005C62  0E04               	movlw	high _EepromBuffer
 21410  005C64  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 21411  005C66  0E00               	movlw	0
 21412  005C68  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 21413  005C6A  0E0F               	movlw	15
 21414  005C6C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 21415  005C6E  EC56  F033         	call	_ClearBuffer	;wreg free
 21416  005C72                     l2045:
 21417                           
 21418                           ;eeprom_if.c: 139: }
 21419                           ;eeprom_if.c: 141: EepromBuffer[0] = memoryAddress;
 21420  005C72  C0C6  F4A7         	movff	Eeprom_Reset@memoryAddress,_EepromBuffer
 21421                           
 21422                           ;eeprom_if.c: 142: I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, 15);
 21423  005C76  0EA7               	movlw	low _EepromBuffer
 21424  005C78  0100               	movlb	0	; () banked
 21425  005C7A  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 21426  005C7C  0E04               	movlw	high _EepromBuffer
 21427  005C7E  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 21428  005C80  C085  F082         	movff	Eeprom_Reset@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 21429  005C84  0E0F               	movlw	15
 21430  005C86  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 21431  005C88  EC4E  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 21432                           
 21433                           ;eeprom_if.c: 144: memoryAddress += 16;
 21434  005C8C  0E10               	movlw	16
 21435  005C8E  0100               	movlb	0	; () banked
 21436  005C90  27C6               	addwf	Eeprom_Reset@memoryAddress& (0+255),f,b
 21437                           
 21438                           ; BSR set to: 0
 21439                           ;eeprom_if.c: 145: if (memoryAddress >= 224)
 21440  005C92  0EDF               	movlw	223
 21441  005C94  65C6               	cpfsgt	Eeprom_Reset@memoryAddress& (0+255),b
 21442  005C96  D006               	goto	l2046
 21443                           
 21444                           ; BSR set to: 0
 21445                           ;eeprom_if.c: 146: {
 21446                           ;eeprom_if.c: 147: EepromBuffer[0] = 0;
 21447  005C98  0E00               	movlw	0
 21448  005C9A  0104               	movlb	4	; () banked
 21449  005C9C  6FA7               	movwf	_EepromBuffer& (0+255),b
 21450                           
 21451                           ;eeprom_if.c: 148: memoryAddress = 0;
 21452  005C9E  0E00               	movlw	0
 21453  005CA0  0100               	movlb	0	; () banked
 21454  005CA2  6FC6               	movwf	Eeprom_Reset@memoryAddress& (0+255),b
 21455  005CA4                     l2046:
 21456                           
 21457                           ; BSR set to: 0
 21458                           ;eeprom_if.c: 149: }
 21459                           ;eeprom_if.c: 150: return memoryAddress;
 21460  005CA4  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 21461  005CA6  0012               	return	
 21462  005CA8                     __end_of_Eeprom_Reset:
 21463                           	opt stack 0
 21464                           tosu	equ	0xFFF
 21465                           tosh	equ	0xFFE
 21466                           tosl	equ	0xFFD
 21467                           pclath	equ	0xFFA
 21468                           tblptru	equ	0xFF8
 21469                           tblptrh	equ	0xFF7
 21470                           tblptrl	equ	0xFF6
 21471                           tablat	equ	0xFF5
 21472                           prodh	equ	0xFF4
 21473                           prodl	equ	0xFF3
 21474                           intcon	equ	0xFF2
 21475                           intcon2	equ	0xFF1
 21476                           intcon3	equ	0xFF0
 21477                           indf0	equ	0xFEF
 21478                           postinc0	equ	0xFEE
 21479                           plusw0	equ	0xFEB
 21480                           fsr0h	equ	0xFEA
 21481                           fsr0l	equ	0xFE9
 21482                           wreg	equ	0xFE8
 21483                           indf1	equ	0xFE7
 21484                           postinc1	equ	0xFE6
 21485                           postdec1	equ	0xFE5
 21486                           fsr1h	equ	0xFE2
 21487                           fsr1l	equ	0xFE1
 21488                           indf2	equ	0xFDF
 21489                           postinc2	equ	0xFDE
 21490                           postdec2	equ	0xFDD
 21491                           plusw2	equ	0xFDB
 21492                           fsr2h	equ	0xFDA
 21493                           fsr2l	equ	0xFD9
 21494                           status	equ	0xFD8
 21495                           
 21496 ;; *************** function _initFsm *****************
 21497 ;; Defined at:
 21498 ;;		line 274 in file "../Source/c/04_App/cmd_init.c"
 21499 ;; Parameters:    Size  Location     Type
 21500 ;;  isCmdSuccess    2    3[BANK1 ] PTR unsigned char 
 21501 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 21502 ;; Auto vars:     Size  Location     Type
 21503 ;;  isInitialize    1    5[BANK1 ] unsigned char 
 21504 ;; Return value:  Size  Location     Type
 21505 ;;                  1    wreg      unsigned char 
 21506 ;; Registers used:
 21507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21508 ;; Tracked objects:
 21509 ;;		On entry : 0/0
 21510 ;;		On exit  : 0/0
 21511 ;;		Unchanged: 0/0
 21512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21513 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21514 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21516 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21517 ;;Total ram usage:        3 bytes
 21518 ;; Hardware stack levels used:    1
 21519 ;; Hardware stack levels required when called:   18
 21520 ;; This function calls:
 21521 ;;		_GetCallerNumber
 21522 ;;		_Led_SetLedStatus
 21523 ;;		_detectUsbNumber
 21524 ;;		_initEeprom
 21525 ;;		_initGprsModem
 21526 ;;		_saveNumberInMemory
 21527 ;;		_savePreamble
 21528 ;;		_waitSetupCall
 21529 ;; This function is called by:
 21530 ;;		_MyApp_Task
 21531 ;; This function uses a non-reentrant model
 21532 ;;
 21533                           
 21534                           	psect	text95
 21535  00436A                     __ptext95:
 21536                           	opt stack 0
 21537  00436A                     _initFsm:
 21538                           	opt stack 9
 21539                           
 21540                           ;cmd_init.c: 276: static initFsmStates currentState = INIT_FSM_MODEM;
 21541                           ;cmd_init.c: 277: bool isInitialized = 0;
 21542                           
 21543                           ; BSR set to: 0
 21544                           ;incstack = 0
 21545  00436A  0E00               	movlw	0
 21546  00436C  0101               	movlb	1	; () banked
 21547  00436E  6F05               	movwf	initFsm@isInitialized& (0+255),b
 21548                           
 21549                           ;cmd_init.c: 279: switch (currentState)
 21550  004370  D049               	goto	l2793
 21551  004372                     
 21552                           ; BSR set to: 1
 21553                           ;cmd_init.c: 282: if (initGprsModem())
 21554                           
 21555                           ; BSR set to: 1
 21556  004372  EC34  F028         	call	_initGprsModem	;wreg free
 21557  004376  0900               	iorlw	0
 21558  004378  B4D8               	btfsc	status,2,c
 21559  00437A  D054               	goto	l2796
 21560                           
 21561                           ;cmd_init.c: 283: {
 21562                           ;cmd_init.c: 284: currentState = INIT_FSM_EEPROM;
 21563  00437C  0E01               	movlw	1
 21564  00437E  D033               	goto	L34
 21565  004380                     
 21566                           ; BSR set to: 1
 21567                           ;cmd_init.c: 289: if (initEeprom())
 21568                           
 21569                           ; BSR set to: 1
 21570  004380  EC7E  F028         	call	_initEeprom	;wreg free
 21571  004384  0900               	iorlw	0
 21572  004386  B4D8               	btfsc	status,2,c
 21573  004388  D04D               	goto	l2796
 21574                           
 21575                           ;cmd_init.c: 290: {
 21576                           ;cmd_init.c: 291: currentState = INIT_FSM_WAIT_CMD;
 21577  00438A  0E02               	movlw	2
 21578  00438C  0101               	movlb	1	; () banked
 21579  00438E  6FD5               	movwf	initFsm@currentState& (0+255),b
 21580                           
 21581                           ;cmd_init.c: 292: setupCallTicks = 0;
 21582  004390  0E00               	movlw	0
 21583  004392  0103               	movlb	3	; () banked
 21584  004394  6FC2               	movwf	(_setupCallTicks+1)& (0+255),b
 21585  004396  0E00               	movlw	0
 21586  004398  6FC1               	movwf	_setupCallTicks& (0+255),b
 21587                           
 21588                           ; BSR set to: 3
 21589                           ;cmd_init.c: 293: }
 21590                           ;cmd_init.c: 294: break;
 21591  00439A  D044               	goto	l2796
 21592  00439C                     
 21593                           ;cmd_init.c: 297: if (isMemoryEmpty)
 21594                           
 21595                           ; BSR set to: 3
 21596  00439C  0101               	movlb	1	; () banked
 21597  00439E  51FE               	movf	_isMemoryEmpty& (0+255),w,b
 21598  0043A0  B4D8               	btfsc	status,2,c
 21599  0043A2  D01C               	goto	l2800
 21600                           
 21601                           ; BSR set to: 1
 21602                           ;cmd_init.c: 298: {
 21603                           ;cmd_init.c: 299: if (waitSetupCall())
 21604  0043A4  EC19  F030         	call	_waitSetupCall	;wreg free
 21605  0043A8  0900               	iorlw	0
 21606  0043AA  B4D8               	btfsc	status,2,c
 21607  0043AC  D00C               	goto	l2801
 21608                           
 21609                           ;cmd_init.c: 300: {
 21610                           ;cmd_init.c: 301: saveNumberInMemory(16, GetCallerNumber());
 21611  0043AE  EC3B  F033         	call	_GetCallerNumber	;wreg free
 21612  0043B2  C083  F096         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
 21613  0043B6  C084  F097         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
 21614  0043BA  0E10               	movlw	16
 21615  0043BC  EC00  F036         	call	_saveNumberInMemory
 21616                           
 21617                           ;cmd_init.c: 302: currentState = INIT_FSM_PREAMBLE;
 21618  0043C0  0E03               	movlw	3
 21619  0043C2  0101               	movlb	1	; () banked
 21620  0043C4  6FD5               	movwf	initFsm@currentState& (0+255),b
 21621  0043C6                     l2801:
 21622                           
 21623                           ;cmd_init.c: 303: }
 21624                           ;cmd_init.c: 304: if (detectUsbNumber(isCmdSuccessfull))
 21625                           
 21626                           ; BSR set to: 1
 21627  0043C6  C103  F099         	movff	initFsm@isCmdSuccessfull,detectUsbNumber@isCmdSuccessfull
 21628  0043CA  C104  F09A         	movff	initFsm@isCmdSuccessfull+1,detectUsbNumber@isCmdSuccessfull+1
 21629  0043CE  ECC8  F032         	call	_detectUsbNumber	;wreg free
 21630  0043D2  0900               	iorlw	0
 21631  0043D4  B4D8               	btfsc	status,2,c
 21632  0043D6  D026               	goto	l2796
 21633                           
 21634                           ;cmd_init.c: 305: {
 21635                           ;cmd_init.c: 306: currentState = INIT_FSM_PREAMBLE;
 21636  0043D8  0E03               	movlw	3
 21637  0043DA  D005               	goto	L34
 21638  0043DC                     l2800:
 21639                           
 21640                           ; BSR set to: 1
 21641                           ;cmd_init.c: 309: else
 21642                           ;cmd_init.c: 310: {
 21643                           ;cmd_init.c: 311: currentState = INIT_FSM_COMPLETE;
 21644                           
 21645                           ; BSR set to: 1
 21646  0043DC  0E04               	movlw	4
 21647  0043DE  D004               	goto	L33
 21648  0043E0                     
 21649                           ; BSR set to: 1
 21650                           ;cmd_init.c: 316: savePreamble();
 21651                           
 21652                           ; BSR set to: 1
 21653  0043E0  ECF3  F035         	call	_savePreamble	;wreg free
 21654                           
 21655                           ;cmd_init.c: 317: currentState = INIT_FSM_COMPLETE;
 21656  0043E4  0E04               	movlw	4
 21657  0043E6                     L34:
 21658  0043E6  0101               	movlb	1	; () banked
 21659  0043E8                     L33:
 21660  0043E8  6FD5               	movwf	initFsm@currentState& (0+255),b
 21661                           
 21662                           ;cmd_init.c: 318: break;
 21663  0043EA  D01C               	goto	l2796
 21664  0043EC                     
 21665                           ; BSR set to: 1
 21666                           ;cmd_init.c: 321: Led_SetLedStatus(1u, LED_STS_ON);
 21667                           
 21668                           ; BSR set to: 1
 21669  0043EC  0E01               	movlw	1
 21670  0043EE  0100               	movlb	0	; () banked
 21671  0043F0  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21672  0043F2  0E01               	movlw	1
 21673  0043F4  EC05  F034         	call	_Led_SetLedStatus
 21674                           
 21675                           ;cmd_init.c: 322: currentState = INIT_FSM_MODEM;
 21676  0043F8  0E00               	movlw	0
 21677  0043FA  0101               	movlb	1	; () banked
 21678  0043FC  6FD5               	movwf	initFsm@currentState& (0+255),b
 21679                           
 21680                           ; BSR set to: 1
 21681                           ;cmd_init.c: 323: isInitialized = 1;
 21682  0043FE  0E01               	movlw	1
 21683  004400  6F05               	movwf	initFsm@isInitialized& (0+255),b
 21684                           
 21685                           ; BSR set to: 1
 21686                           ;cmd_init.c: 328: }
 21687                           
 21688                           ; BSR set to: 1
 21689                           ;cmd_init.c: 327: break;
 21690                           
 21691                           ;cmd_init.c: 326: default:
 21692                           
 21693                           ;cmd_init.c: 324: break;
 21694  004402  D010               	goto	l2796
 21695  004404                     l2793:
 21696                           
 21697                           ; BSR set to: 1
 21698                           
 21699                           ; BSR set to: 1
 21700  004404  51D5               	movf	initFsm@currentState& (0+255),w,b
 21701                           
 21702                           ; Switch size 1, requested type "space"
 21703                           ; Number of cases is 5, Range of values is 0 to 4
 21704                           ; switch strategies available:
 21705                           ; Name         Instructions Cycles
 21706                           ; simple_byte           16     9 (average)
 21707                           ;	Chosen strategy is simple_byte
 21708  004406  0A00               	xorlw	0	; case 0
 21709  004408  B4D8               	btfsc	status,2,c
 21710  00440A  D7B3               	goto	l2794
 21711  00440C  0A01               	xorlw	1	; case 1
 21712  00440E  B4D8               	btfsc	status,2,c
 21713  004410  D7B7               	goto	l2797
 21714  004412  0A03               	xorlw	3	; case 2
 21715  004414  B4D8               	btfsc	status,2,c
 21716  004416  D7C2               	goto	l2799
 21717  004418  0A01               	xorlw	1	; case 3
 21718  00441A  B4D8               	btfsc	status,2,c
 21719  00441C  D7E1               	goto	l2804
 21720  00441E  0A07               	xorlw	7	; case 4
 21721  004420  B4D8               	btfsc	status,2,c
 21722  004422  D7E4               	goto	l2805
 21723  004424                     l2796:
 21724                           
 21725                           ;cmd_init.c: 329: return isInitialized;
 21726                           
 21727                           ; BSR set to: 1
 21728  004424  0101               	movlb	1	; () banked
 21729  004426  5105               	movf	initFsm@isInitialized& (0+255),w,b
 21730  004428  0012               	return	
 21731  00442A                     __end_of_initFsm:
 21732                           	opt stack 0
 21733                           tosu	equ	0xFFF
 21734                           tosh	equ	0xFFE
 21735                           tosl	equ	0xFFD
 21736                           pclath	equ	0xFFA
 21737                           tblptru	equ	0xFF8
 21738                           tblptrh	equ	0xFF7
 21739                           tblptrl	equ	0xFF6
 21740                           tablat	equ	0xFF5
 21741                           prodh	equ	0xFF4
 21742                           prodl	equ	0xFF3
 21743                           intcon	equ	0xFF2
 21744                           intcon2	equ	0xFF1
 21745                           intcon3	equ	0xFF0
 21746                           indf0	equ	0xFEF
 21747                           postinc0	equ	0xFEE
 21748                           plusw0	equ	0xFEB
 21749                           fsr0h	equ	0xFEA
 21750                           fsr0l	equ	0xFE9
 21751                           wreg	equ	0xFE8
 21752                           indf1	equ	0xFE7
 21753                           postinc1	equ	0xFE6
 21754                           postdec1	equ	0xFE5
 21755                           fsr1h	equ	0xFE2
 21756                           fsr1l	equ	0xFE1
 21757                           indf2	equ	0xFDF
 21758                           postinc2	equ	0xFDE
 21759                           postdec2	equ	0xFDD
 21760                           plusw2	equ	0xFDB
 21761                           fsr2h	equ	0xFDA
 21762                           fsr2l	equ	0xFD9
 21763                           status	equ	0xFD8
 21764                           
 21765 ;; *************** function _waitSetupCall *****************
 21766 ;; Defined at:
 21767 ;;		line 239 in file "../Source/c/04_App/cmd_init.c"
 21768 ;; Parameters:    Size  Location     Type
 21769 ;;		None
 21770 ;; Auto vars:     Size  Location     Type
 21771 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 21772 ;; Return value:  Size  Location     Type
 21773 ;;                  1    wreg      unsigned char 
 21774 ;; Registers used:
 21775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21776 ;; Tracked objects:
 21777 ;;		On entry : 0/0
 21778 ;;		On exit  : 0/0
 21779 ;;		Unchanged: 0/0
 21780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21782 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21784 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21785 ;;Total ram usage:        1 bytes
 21786 ;; Hardware stack levels used:    1
 21787 ;; Hardware stack levels required when called:   15
 21788 ;; This function calls:
 21789 ;;		_Led_SetLedStatus
 21790 ;;		_getSetupCall
 21791 ;;		_secondsAppTimer
 21792 ;; This function is called by:
 21793 ;;		_initFsm
 21794 ;; This function uses a non-reentrant model
 21795 ;;
 21796                           
 21797                           	psect	text96
 21798  006032                     __ptext96:
 21799                           	opt stack 0
 21800  006032                     _waitSetupCall:
 21801                           	opt stack 11
 21802                           
 21803                           ;cmd_init.c: 241: bool isCallArrived = 0;
 21804                           
 21805                           ; BSR set to: 1
 21806                           ;incstack = 0
 21807  006032  0E00               	movlw	0
 21808  006034  0100               	movlb	0	; () banked
 21809  006036  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21810                           
 21811                           ; BSR set to: 0
 21812                           ;cmd_init.c: 242: if (!secondsAppTimer(30, &setupCallTicks, 0))
 21813  006038  0EC1               	movlw	low _setupCallTicks
 21814  00603A  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21815  00603C  0E03               	movlw	high _setupCallTicks
 21816  00603E  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21817  006040  0E00               	movlw	0
 21818  006042  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21819  006044  0E1E               	movlw	30
 21820  006046  EC35  F025         	call	_secondsAppTimer
 21821  00604A  0900               	iorlw	0
 21822  00604C  A4D8               	btfss	status,2,c
 21823  00604E  D00F               	goto	l2782
 21824                           
 21825                           ;cmd_init.c: 243: {
 21826                           ;cmd_init.c: 244: Led_SetLedStatus(1u, LED_STS_BLINK);
 21827  006050  0E03               	movlw	3
 21828  006052  0100               	movlb	0	; () banked
 21829  006054  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21830  006056  0E01               	movlw	1
 21831  006058  EC05  F034         	call	_Led_SetLedStatus
 21832                           
 21833                           ;cmd_init.c: 245: if (getSetupCall())
 21834  00605C  EC70  F035         	call	_getSetupCall	;wreg free
 21835  006060  0900               	iorlw	0
 21836  006062  B4D8               	btfsc	status,2,c
 21837  006064  D00A               	goto	l2784
 21838                           
 21839                           ;cmd_init.c: 246: {
 21840                           ;cmd_init.c: 247: isCallArrived = 1;
 21841  006066  0E01               	movlw	1
 21842  006068  0100               	movlb	0	; () banked
 21843  00606A  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21844                           
 21845                           ; BSR set to: 0
 21846                           ;cmd_init.c: 248: }
 21847                           ;cmd_init.c: 249: }
 21848  00606C  D006               	goto	l2784
 21849  00606E                     l2782:
 21850                           
 21851                           ;cmd_init.c: 250: else
 21852                           ;cmd_init.c: 251: {
 21853                           ;cmd_init.c: 252: Led_SetLedStatus(1u, LED_STS_ON);
 21854                           
 21855                           ; BSR set to: 0
 21856  00606E  0E01               	movlw	1
 21857  006070  0100               	movlb	0	; () banked
 21858  006072  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21859  006074  0E01               	movlw	1
 21860  006076  EC05  F034         	call	_Led_SetLedStatus
 21861  00607A                     l2784:
 21862                           
 21863                           ;cmd_init.c: 253: }
 21864                           ;cmd_init.c: 254: return isCallArrived;
 21865  00607A  0100               	movlb	0	; () banked
 21866  00607C  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 21867  00607E  0012               	return	
 21868  006080                     __end_of_waitSetupCall:
 21869                           	opt stack 0
 21870                           tosu	equ	0xFFF
 21871                           tosh	equ	0xFFE
 21872                           tosl	equ	0xFFD
 21873                           pclath	equ	0xFFA
 21874                           tblptru	equ	0xFF8
 21875                           tblptrh	equ	0xFF7
 21876                           tblptrl	equ	0xFF6
 21877                           tablat	equ	0xFF5
 21878                           prodh	equ	0xFF4
 21879                           prodl	equ	0xFF3
 21880                           intcon	equ	0xFF2
 21881                           intcon2	equ	0xFF1
 21882                           intcon3	equ	0xFF0
 21883                           indf0	equ	0xFEF
 21884                           postinc0	equ	0xFEE
 21885                           plusw0	equ	0xFEB
 21886                           fsr0h	equ	0xFEA
 21887                           fsr0l	equ	0xFE9
 21888                           wreg	equ	0xFE8
 21889                           indf1	equ	0xFE7
 21890                           postinc1	equ	0xFE6
 21891                           postdec1	equ	0xFE5
 21892                           fsr1h	equ	0xFE2
 21893                           fsr1l	equ	0xFE1
 21894                           indf2	equ	0xFDF
 21895                           postinc2	equ	0xFDE
 21896                           postdec2	equ	0xFDD
 21897                           plusw2	equ	0xFDB
 21898                           fsr2h	equ	0xFDA
 21899                           fsr2l	equ	0xFD9
 21900                           status	equ	0xFD8
 21901                           
 21902 ;; *************** function _getSetupCall *****************
 21903 ;; Defined at:
 21904 ;;		line 221 in file "../Source/c/04_App/cmd_init.c"
 21905 ;; Parameters:    Size  Location     Type
 21906 ;;		None
 21907 ;; Auto vars:     Size  Location     Type
 21908 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 21909 ;; Return value:  Size  Location     Type
 21910 ;;                  1    wreg      unsigned char 
 21911 ;; Registers used:
 21912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21913 ;; Tracked objects:
 21914 ;;		On entry : 0/0
 21915 ;;		On exit  : 0/0
 21916 ;;		Unchanged: 0/0
 21917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21919 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21921 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21922 ;;Total ram usage:        1 bytes
 21923 ;; Hardware stack levels used:    1
 21924 ;; Hardware stack levels required when called:   14
 21925 ;; This function calls:
 21926 ;;		_Mdm_HangPhoneCall
 21927 ;;		_Mdm_IsRinging
 21928 ;; This function is called by:
 21929 ;;		_waitSetupCall
 21930 ;; This function uses a non-reentrant model
 21931 ;;
 21932                           
 21933                           	psect	text97
 21934  006AE0                     __ptext97:
 21935                           	opt stack 0
 21936  006AE0                     _getSetupCall:
 21937                           	opt stack 11
 21938                           
 21939                           ;cmd_init.c: 223: bool isCalledReceived = 0;
 21940                           
 21941                           ; BSR set to: 0
 21942                           ;incstack = 0
 21943  006AE0  0E00               	movlw	0
 21944  006AE2  0100               	movlb	0	; () banked
 21945  006AE4  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21946                           
 21947                           ; BSR set to: 0
 21948                           ;cmd_init.c: 225: if (Mdm_IsRinging())
 21949  006AE6  ECD6  F034         	call	_Mdm_IsRinging	;wreg free
 21950  006AEA  0900               	iorlw	0
 21951  006AEC  B4D8               	btfsc	status,2,c
 21952  006AEE  D005               	goto	l2778
 21953                           
 21954                           ;cmd_init.c: 226: {
 21955                           ;cmd_init.c: 227: Mdm_HangPhoneCall();
 21956  006AF0  EC70  F036         	call	_Mdm_HangPhoneCall	;wreg free
 21957                           
 21958                           ;cmd_init.c: 228: isCalledReceived = 1;
 21959  006AF4  0E01               	movlw	1
 21960  006AF6  0100               	movlb	0	; () banked
 21961  006AF8  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21962  006AFA                     l2778:
 21963                           
 21964                           ;cmd_init.c: 229: }
 21965                           ;cmd_init.c: 230: return isCalledReceived;
 21966                           
 21967                           ; BSR set to: 0
 21968  006AFA  0100               	movlb	0	; () banked
 21969  006AFC  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21970  006AFE  0012               	return	
 21971  006B00                     __end_of_getSetupCall:
 21972                           	opt stack 0
 21973                           tosu	equ	0xFFF
 21974                           tosh	equ	0xFFE
 21975                           tosl	equ	0xFFD
 21976                           pclath	equ	0xFFA
 21977                           tblptru	equ	0xFF8
 21978                           tblptrh	equ	0xFF7
 21979                           tblptrl	equ	0xFF6
 21980                           tablat	equ	0xFF5
 21981                           prodh	equ	0xFF4
 21982                           prodl	equ	0xFF3
 21983                           intcon	equ	0xFF2
 21984                           intcon2	equ	0xFF1
 21985                           intcon3	equ	0xFF0
 21986                           indf0	equ	0xFEF
 21987                           postinc0	equ	0xFEE
 21988                           plusw0	equ	0xFEB
 21989                           fsr0h	equ	0xFEA
 21990                           fsr0l	equ	0xFE9
 21991                           wreg	equ	0xFE8
 21992                           indf1	equ	0xFE7
 21993                           postinc1	equ	0xFE6
 21994                           postdec1	equ	0xFE5
 21995                           fsr1h	equ	0xFE2
 21996                           fsr1l	equ	0xFE1
 21997                           indf2	equ	0xFDF
 21998                           postinc2	equ	0xFDE
 21999                           postdec2	equ	0xFDD
 22000                           plusw2	equ	0xFDB
 22001                           fsr2h	equ	0xFDA
 22002                           fsr2l	equ	0xFD9
 22003                           status	equ	0xFD8
 22004                           
 22005 ;; *************** function _savePreamble *****************
 22006 ;; Defined at:
 22007 ;;		line 260 in file "../Source/c/04_App/cmd_init.c"
 22008 ;; Parameters:    Size  Location     Type
 22009 ;;		None
 22010 ;; Auto vars:     Size  Location     Type
 22011 ;;		None
 22012 ;; Return value:  Size  Location     Type
 22013 ;;                  1    wreg      void 
 22014 ;; Registers used:
 22015 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22016 ;; Tracked objects:
 22017 ;;		On entry : 0/0
 22018 ;;		On exit  : 0/0
 22019 ;;		Unchanged: 0/0
 22020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22025 ;;Total ram usage:        0 bytes
 22026 ;; Hardware stack levels used:    1
 22027 ;; Hardware stack levels required when called:   14
 22028 ;; This function calls:
 22029 ;;		_Eeprom_Write
 22030 ;;		_initPreamble
 22031 ;; This function is called by:
 22032 ;;		_initFsm
 22033 ;; This function uses a non-reentrant model
 22034 ;;
 22035                           
 22036                           	psect	text98
 22037  006BE6                     __ptext98:
 22038                           	opt stack 0
 22039  006BE6                     _savePreamble:
 22040                           	opt stack 12
 22041                           
 22042                           ;cmd_init.c: 262: Eeprom_Write(0, initPreamble(), 4);
 22043                           
 22044                           ; BSR set to: 0
 22045                           ;incstack = 0
 22046  006BE6  ECAE  F035         	call	_initPreamble	;wreg free
 22047  006BEA  C07D  F08F         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 22048  006BEE  C07E  F090         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 22049  006BF2  0E04               	movlw	4
 22050  006BF4  0100               	movlb	0	; () banked
 22051  006BF6  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 22052  006BF8  0E00               	movlw	0
 22053  006BFA  EC4F  F02F         	call	_Eeprom_Write
 22054  006BFE  0012               	return		;funcret
 22055  006C00                     __end_of_savePreamble:
 22056                           	opt stack 0
 22057                           tosu	equ	0xFFF
 22058                           tosh	equ	0xFFE
 22059                           tosl	equ	0xFFD
 22060                           pclath	equ	0xFFA
 22061                           tblptru	equ	0xFF8
 22062                           tblptrh	equ	0xFF7
 22063                           tblptrl	equ	0xFF6
 22064                           tablat	equ	0xFF5
 22065                           prodh	equ	0xFF4
 22066                           prodl	equ	0xFF3
 22067                           intcon	equ	0xFF2
 22068                           intcon2	equ	0xFF1
 22069                           intcon3	equ	0xFF0
 22070                           indf0	equ	0xFEF
 22071                           postinc0	equ	0xFEE
 22072                           plusw0	equ	0xFEB
 22073                           fsr0h	equ	0xFEA
 22074                           fsr0l	equ	0xFE9
 22075                           wreg	equ	0xFE8
 22076                           indf1	equ	0xFE7
 22077                           postinc1	equ	0xFE6
 22078                           postdec1	equ	0xFE5
 22079                           fsr1h	equ	0xFE2
 22080                           fsr1l	equ	0xFE1
 22081                           indf2	equ	0xFDF
 22082                           postinc2	equ	0xFDE
 22083                           postdec2	equ	0xFDD
 22084                           plusw2	equ	0xFDB
 22085                           fsr2h	equ	0xFDA
 22086                           fsr2l	equ	0xFD9
 22087                           status	equ	0xFD8
 22088                           
 22089 ;; *************** function _initPreamble *****************
 22090 ;; Defined at:
 22091 ;;		line 109 in file "../Source/c/04_App/cmd_init.c"
 22092 ;; Parameters:    Size  Location     Type
 22093 ;;		None
 22094 ;; Auto vars:     Size  Location     Type
 22095 ;;		None
 22096 ;; Return value:  Size  Location     Type
 22097 ;;                  2   29[BANK0 ] PTR unsigned char 
 22098 ;; Registers used:
 22099 ;;		wreg, status,2, status,0
 22100 ;; Tracked objects:
 22101 ;;		On entry : 0/0
 22102 ;;		On exit  : 0/0
 22103 ;;		Unchanged: 0/0
 22104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22105 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22108 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22109 ;;Total ram usage:        2 bytes
 22110 ;; Hardware stack levels used:    1
 22111 ;; Hardware stack levels required when called:   11
 22112 ;; This function calls:
 22113 ;;		Nothing
 22114 ;; This function is called by:
 22115 ;;		_savePreamble
 22116 ;; This function uses a non-reentrant model
 22117 ;;
 22118                           
 22119                           	psect	text99
 22120  006B5C                     __ptext99:
 22121                           	opt stack 0
 22122  006B5C                     _initPreamble:
 22123                           	opt stack 14
 22124                           
 22125                           ;cmd_init.c: 111: memoryPreamble[0] = 'U';
 22126                           
 22127                           ;incstack = 0
 22128  006B5C  0E55               	movlw	85
 22129  006B5E  0103               	movlb	3	; () banked
 22130  006B60  6FA9               	movwf	_memoryPreamble& (0+255),b
 22131                           
 22132                           ;cmd_init.c: 112: memoryPreamble[1] = 'S';
 22133  006B62  0E53               	movlw	83
 22134  006B64  6FAA               	movwf	(_memoryPreamble+1)& (0+255),b
 22135                           
 22136                           ;cmd_init.c: 113: memoryPreamble[2] = 'I';
 22137  006B66  0E49               	movlw	73
 22138  006B68  6FAB               	movwf	(_memoryPreamble+2)& (0+255),b
 22139                           
 22140                           ;cmd_init.c: 114: memoryPreamble[3] = 'M';
 22141  006B6A  0E4D               	movlw	77
 22142  006B6C  6FAC               	movwf	(_memoryPreamble+3)& (0+255),b
 22143                           
 22144                           ; BSR set to: 3
 22145                           ;cmd_init.c: 115: return memoryPreamble;
 22146  006B6E  0EA9               	movlw	low _memoryPreamble
 22147  006B70  0100               	movlb	0	; () banked
 22148  006B72  6F7D               	movwf	?_initPreamble& (0+255),b
 22149  006B74  0E03               	movlw	high _memoryPreamble
 22150  006B76  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 22151  006B78  0012               	return	
 22152  006B7A                     __end_of_initPreamble:
 22153                           	opt stack 0
 22154                           tosu	equ	0xFFF
 22155                           tosh	equ	0xFFE
 22156                           tosl	equ	0xFFD
 22157                           pclath	equ	0xFFA
 22158                           tblptru	equ	0xFF8
 22159                           tblptrh	equ	0xFF7
 22160                           tblptrl	equ	0xFF6
 22161                           tablat	equ	0xFF5
 22162                           prodh	equ	0xFF4
 22163                           prodl	equ	0xFF3
 22164                           intcon	equ	0xFF2
 22165                           intcon2	equ	0xFF1
 22166                           intcon3	equ	0xFF0
 22167                           indf0	equ	0xFEF
 22168                           postinc0	equ	0xFEE
 22169                           plusw0	equ	0xFEB
 22170                           fsr0h	equ	0xFEA
 22171                           fsr0l	equ	0xFE9
 22172                           wreg	equ	0xFE8
 22173                           indf1	equ	0xFE7
 22174                           postinc1	equ	0xFE6
 22175                           postdec1	equ	0xFE5
 22176                           fsr1h	equ	0xFE2
 22177                           fsr1l	equ	0xFE1
 22178                           indf2	equ	0xFDF
 22179                           postinc2	equ	0xFDE
 22180                           postdec2	equ	0xFDD
 22181                           plusw2	equ	0xFDB
 22182                           fsr2h	equ	0xFDA
 22183                           fsr2l	equ	0xFD9
 22184                           status	equ	0xFD8
 22185                           
 22186 ;; *************** function _initGprsModem *****************
 22187 ;; Defined at:
 22188 ;;		line 124 in file "../Source/c/04_App/cmd_init.c"
 22189 ;; Parameters:    Size  Location     Type
 22190 ;;		None
 22191 ;; Auto vars:     Size  Location     Type
 22192 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 22193 ;; Return value:  Size  Location     Type
 22194 ;;                  1    wreg      unsigned char 
 22195 ;; Registers used:
 22196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22197 ;; Tracked objects:
 22198 ;;		On entry : 0/0
 22199 ;;		On exit  : 0/0
 22200 ;;		Unchanged: 0/0
 22201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22203 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22205 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22206 ;;Total ram usage:        1 bytes
 22207 ;; Hardware stack levels used:    1
 22208 ;; Hardware stack levels required when called:   14
 22209 ;; This function calls:
 22210 ;;		_Mdm_SetSmsFormat
 22211 ;;		_Uart_WriteConstString
 22212 ;;		_secondsAppTimer
 22213 ;; This function is called by:
 22214 ;;		_initFsm
 22215 ;; This function uses a non-reentrant model
 22216 ;;
 22217                           
 22218                           	psect	text100
 22219  005068                     __ptext100:
 22220                           	opt stack 0
 22221  005068                     _initGprsModem:
 22222                           	opt stack 12
 22223                           
 22224                           ;cmd_init.c: 126: static uint16_t modemCounter = 0;
 22225                           ;cmd_init.c: 127: static modemStates currentState = MODEM_INIT;
 22226                           ;cmd_init.c: 128: bool isInitialized = 0;
 22227                           
 22228                           ; BSR set to: 0
 22229                           ;incstack = 0
 22230  005068  0E00               	movlw	0
 22231  00506A  0100               	movlb	0	; () banked
 22232  00506C  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22233                           
 22234                           ;cmd_init.c: 130: switch(currentState)
 22235  00506E  D035               	goto	l2750
 22236  005070                     
 22237                           ;cmd_init.c: 133: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 22238                           
 22239                           ; BSR set to: 0
 22240  005070  0E03               	movlw	3
 22241  005072  0100               	movlb	0	; () banked
 22242  005074  19D1               	xorwf	_MdmStatus& (0+255),w,b
 22243  005076  B4D8               	btfsc	status,2,c
 22244  005078  D003               	goto	u14890
 22245                           
 22246                           ; BSR set to: 0
 22247  00507A  05D1               	decf	_MdmStatus& (0+255),w,b
 22248  00507C  A4D8               	btfss	status,2,c
 22249  00507E  D03B               	goto	l2756
 22250  005080                     u14890:
 22251                           
 22252                           ; BSR set to: 0
 22253                           ;cmd_init.c: 134: {
 22254                           ;cmd_init.c: 135: if (secondsAppTimer(5, &modemCounter, 0))
 22255                           
 22256                           ; BSR set to: 0
 22257  005080  0EBF               	movlw	low initGprsModem@modemCounter
 22258  005082  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 22259  005084  0E03               	movlw	high initGprsModem@modemCounter
 22260  005086  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 22261  005088  0E00               	movlw	0
 22262  00508A  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 22263  00508C  0E05               	movlw	5
 22264  00508E  EC35  F025         	call	_secondsAppTimer
 22265  005092  0900               	iorlw	0
 22266  005094  B4D8               	btfsc	status,2,c
 22267  005096  D02F               	goto	l2756
 22268                           
 22269                           ;cmd_init.c: 136: {
 22270                           ;cmd_init.c: 137: Mdm_SetSmsFormat(1);
 22271  005098  0E01               	movlw	1
 22272  00509A  ECF1  F02F         	call	_Mdm_SetSmsFormat
 22273                           
 22274                           ;cmd_init.c: 138: currentState = MODEM_DELETE_SMS;
 22275  00509E  0E01               	movlw	1
 22276  0050A0  D013               	goto	L36
 22277  0050A2                     
 22278                           ; BSR set to: 1
 22279                           ;cmd_init.c: 144: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 22280                           
 22281                           ; BSR set to: 1
 22282  0050A2  0EF9               	movlw	low STR_30
 22283  0050A4  0100               	movlb	0	; () banked
 22284  0050A6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22285  0050A8  0EFE               	movlw	high STR_30
 22286  0050AA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22287  0050AC  0E01               	movlw	1
 22288  0050AE  ECCD  F031         	call	_Uart_WriteConstString
 22289                           
 22290                           ;cmd_init.c: 145: currentState = MODEM_SET_CALLER_ID;
 22291  0050B2  0E02               	movlw	2
 22292  0050B4  D009               	goto	L36
 22293  0050B6                     
 22294                           ; BSR set to: 1
 22295                           ;cmd_init.c: 149: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 22296                           
 22297                           ; BSR set to: 1
 22298  0050B6  0EA9               	movlw	low STR_31
 22299  0050B8  0100               	movlb	0	; () banked
 22300  0050BA  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22301  0050BC  0EFF               	movlw	high STR_31
 22302  0050BE  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22303  0050C0  0E01               	movlw	1
 22304  0050C2  ECCD  F031         	call	_Uart_WriteConstString
 22305                           
 22306                           ;cmd_init.c: 150: currentState = MODEM_INIT_COMPLETE;
 22307  0050C6  0E03               	movlw	3
 22308  0050C8                     L36:
 22309  0050C8  0101               	movlb	1	; () banked
 22310  0050CA  6FD7               	movwf	initGprsModem@currentState& (0+255),b
 22311                           
 22312                           ;cmd_init.c: 151: break;
 22313  0050CC  D014               	goto	l2756
 22314  0050CE                     
 22315                           ; BSR set to: 1
 22316                           ;cmd_init.c: 154: currentState = MODEM_INIT;
 22317                           
 22318                           ; BSR set to: 1
 22319  0050CE  0E00               	movlw	0
 22320  0050D0  6FD7               	movwf	initGprsModem@currentState& (0+255),b
 22321                           
 22322                           ;cmd_init.c: 155: isInitialized = 1;
 22323  0050D2  0E01               	movlw	1
 22324  0050D4  0100               	movlb	0	; () banked
 22325  0050D6  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22326                           
 22327                           ; BSR set to: 0
 22328                           ;cmd_init.c: 160: }
 22329                           
 22330                           ; BSR set to: 0
 22331                           ;cmd_init.c: 159: break;
 22332                           
 22333                           ;cmd_init.c: 158: default:
 22334                           
 22335                           ;cmd_init.c: 156: break;
 22336  0050D8  D00E               	goto	l2756
 22337  0050DA                     l2750:
 22338                           
 22339                           ; BSR set to: 0
 22340                           
 22341                           ; BSR set to: 0
 22342  0050DA  0101               	movlb	1	; () banked
 22343  0050DC  51D7               	movf	initGprsModem@currentState& (0+255),w,b
 22344                           
 22345                           ; Switch size 1, requested type "space"
 22346                           ; Number of cases is 4, Range of values is 0 to 3
 22347                           ; switch strategies available:
 22348                           ; Name         Instructions Cycles
 22349                           ; simple_byte           13     7 (average)
 22350                           ;	Chosen strategy is simple_byte
 22351  0050DE  0A00               	xorlw	0	; case 0
 22352  0050E0  B4D8               	btfsc	status,2,c
 22353  0050E2  D7C6               	goto	l2751
 22354  0050E4  0A01               	xorlw	1	; case 1
 22355  0050E6  B4D8               	btfsc	status,2,c
 22356  0050E8  D7DC               	goto	l2757
 22357  0050EA  0A03               	xorlw	3	; case 2
 22358  0050EC  B4D8               	btfsc	status,2,c
 22359  0050EE  D7E3               	goto	l2758
 22360  0050F0  0A01               	xorlw	1	; case 3
 22361  0050F2  B4D8               	btfsc	status,2,c
 22362  0050F4  D7EC               	goto	l2759
 22363  0050F6                     l2756:
 22364                           
 22365                           ;cmd_init.c: 161: return isInitialized;
 22366                           
 22367                           ; BSR set to: 1
 22368  0050F6  0100               	movlb	0	; () banked
 22369  0050F8  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 22370  0050FA  0012               	return	
 22371  0050FC                     __end_of_initGprsModem:
 22372                           	opt stack 0
 22373                           tosu	equ	0xFFF
 22374                           tosh	equ	0xFFE
 22375                           tosl	equ	0xFFD
 22376                           pclath	equ	0xFFA
 22377                           tblptru	equ	0xFF8
 22378                           tblptrh	equ	0xFF7
 22379                           tblptrl	equ	0xFF6
 22380                           tablat	equ	0xFF5
 22381                           prodh	equ	0xFF4
 22382                           prodl	equ	0xFF3
 22383                           intcon	equ	0xFF2
 22384                           intcon2	equ	0xFF1
 22385                           intcon3	equ	0xFF0
 22386                           indf0	equ	0xFEF
 22387                           postinc0	equ	0xFEE
 22388                           plusw0	equ	0xFEB
 22389                           fsr0h	equ	0xFEA
 22390                           fsr0l	equ	0xFE9
 22391                           wreg	equ	0xFE8
 22392                           indf1	equ	0xFE7
 22393                           postinc1	equ	0xFE6
 22394                           postdec1	equ	0xFE5
 22395                           fsr1h	equ	0xFE2
 22396                           fsr1l	equ	0xFE1
 22397                           indf2	equ	0xFDF
 22398                           postinc2	equ	0xFDE
 22399                           postdec2	equ	0xFDD
 22400                           plusw2	equ	0xFDB
 22401                           fsr2h	equ	0xFDA
 22402                           fsr2l	equ	0xFD9
 22403                           status	equ	0xFD8
 22404                           
 22405 ;; *************** function _Mdm_SetSmsFormat *****************
 22406 ;; Defined at:
 22407 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22408 ;; Parameters:    Size  Location     Type
 22409 ;;  TextFormat      1    wreg     unsigned char 
 22410 ;; Auto vars:     Size  Location     Type
 22411 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 22412 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 22413 ;;  Index           1   35[BANK0 ] unsigned char 
 22414 ;; Return value:  Size  Location     Type
 22415 ;;                  1    wreg      void 
 22416 ;; Registers used:
 22417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22418 ;; Tracked objects:
 22419 ;;		On entry : 0/0
 22420 ;;		On exit  : 0/0
 22421 ;;		Unchanged: 0/0
 22422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22424 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22426 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22427 ;;Total ram usage:       22 bytes
 22428 ;; Hardware stack levels used:    1
 22429 ;; Hardware stack levels required when called:   13
 22430 ;; This function calls:
 22431 ;;		_Uart_WriteString
 22432 ;; This function is called by:
 22433 ;;		_initGprsModem
 22434 ;; This function uses a non-reentrant model
 22435 ;;
 22436                           
 22437                           	psect	text101
 22438  005FE2                     __ptext101:
 22439                           	opt stack 0
 22440  005FE2                     _Mdm_SetSmsFormat:
 22441                           	opt stack 12
 22442                           
 22443                           ; BSR set to: 0
 22444                           ;incstack = 0
 22445                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 22446  005FE2  0100               	movlb	0	; () banked
 22447  005FE4  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 22448                           
 22449                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 22450                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 22451  005FE6  0E00               	movlw	0
 22452  005FE8  0100               	movlb	0	; () banked
 22453  005FEA  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 22454                           
 22455                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 22456  005FEC  0E41               	movlw	65
 22457  005FEE  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 22458                           
 22459                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 22460  005FF0  0E54               	movlw	84
 22461  005FF2  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 22462                           
 22463                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 22464  005FF4  0E2B               	movlw	43
 22465  005FF6  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 22466                           
 22467                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 22468  005FF8  0E43               	movlw	67
 22469  005FFA  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 22470                           
 22471                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 22472  005FFC  0E4D               	movlw	77
 22473  005FFE  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 22474                           
 22475                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 22476  006000  0E47               	movlw	71
 22477  006002  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 22478                           
 22479                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 22480  006004  0E46               	movlw	70
 22481  006006  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 22482                           
 22483                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 22484  006008  0E3D               	movlw	61
 22485  00600A  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 22486                           
 22487                           ; BSR set to: 0
 22488                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 22489  00600C  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 22490  00600E  A4D8               	btfss	status,2,c
 22491  006010  D002               	goto	l1121
 22492                           
 22493                           ; BSR set to: 0
 22494                           ;mdm_gsm_gprs.c: 854: {
 22495                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 22496  006012  0E31               	movlw	49
 22497  006014  D001               	goto	L37
 22498  006016                     l1121:
 22499                           
 22500                           ; BSR set to: 0
 22501                           ;mdm_gsm_gprs.c: 857: else
 22502                           ;mdm_gsm_gprs.c: 858: {
 22503                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22504                           
 22505                           ; BSR set to: 0
 22506  006016  0E30               	movlw	48
 22507  006018                     L37:
 22508  006018  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22509                           
 22510                           ; BSR set to: 0
 22511                           ;mdm_gsm_gprs.c: 860: }
 22512                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22513  00601A  0E0D               	movlw	13
 22514  00601C  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22515                           
 22516                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22517  00601E  0E00               	movlw	0
 22518  006020  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22519                           
 22520                           ; BSR set to: 0
 22521                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22522  006022  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22523  006024  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22524  006026  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22525  006028  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22526  00602A  0E01               	movlw	1
 22527  00602C  EC6D  F032         	call	_Uart_WriteString
 22528  006030  0012               	return		;funcret
 22529  006032                     __end_of_Mdm_SetSmsFormat:
 22530                           	opt stack 0
 22531                           tosu	equ	0xFFF
 22532                           tosh	equ	0xFFE
 22533                           tosl	equ	0xFFD
 22534                           pclath	equ	0xFFA
 22535                           tblptru	equ	0xFF8
 22536                           tblptrh	equ	0xFF7
 22537                           tblptrl	equ	0xFF6
 22538                           tablat	equ	0xFF5
 22539                           prodh	equ	0xFF4
 22540                           prodl	equ	0xFF3
 22541                           intcon	equ	0xFF2
 22542                           intcon2	equ	0xFF1
 22543                           intcon3	equ	0xFF0
 22544                           indf0	equ	0xFEF
 22545                           postinc0	equ	0xFEE
 22546                           plusw0	equ	0xFEB
 22547                           fsr0h	equ	0xFEA
 22548                           fsr0l	equ	0xFE9
 22549                           wreg	equ	0xFE8
 22550                           indf1	equ	0xFE7
 22551                           postinc1	equ	0xFE6
 22552                           postdec1	equ	0xFE5
 22553                           fsr1h	equ	0xFE2
 22554                           fsr1l	equ	0xFE1
 22555                           indf2	equ	0xFDF
 22556                           postinc2	equ	0xFDE
 22557                           postdec2	equ	0xFDD
 22558                           plusw2	equ	0xFDB
 22559                           fsr2h	equ	0xFDA
 22560                           fsr2l	equ	0xFD9
 22561                           status	equ	0xFD8
 22562                           
 22563 ;; *************** function _initEeprom *****************
 22564 ;; Defined at:
 22565 ;;		line 170 in file "../Source/c/04_App/cmd_init.c"
 22566 ;; Parameters:    Size  Location     Type
 22567 ;;		None
 22568 ;; Auto vars:     Size  Location     Type
 22569 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22570 ;;  memoryOpResu    1    1[BANK1 ] enum E8246
 22571 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22572 ;; Return value:  Size  Location     Type
 22573 ;;                  1    wreg      unsigned char 
 22574 ;; Registers used:
 22575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22576 ;; Tracked objects:
 22577 ;;		On entry : 0/0
 22578 ;;		On exit  : 0/0
 22579 ;;		Unchanged: 0/0
 22580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22582 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22584 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22585 ;;Total ram usage:        3 bytes
 22586 ;; Hardware stack levels used:    1
 22587 ;; Hardware stack levels required when called:   17
 22588 ;; This function calls:
 22589 ;;		_Eeprom_Read
 22590 ;; This function is called by:
 22591 ;;		_initFsm
 22592 ;; This function uses a non-reentrant model
 22593 ;;
 22594                           
 22595                           	psect	text102
 22596  0050FC                     __ptext102:
 22597                           	opt stack 0
 22598  0050FC                     _initEeprom:
 22599                           	opt stack 9
 22600                           
 22601                           ;cmd_init.c: 172: const uint8_t addressToRead = 0;
 22602                           
 22603                           ;incstack = 0
 22604  0050FC  0E00               	movlw	0
 22605  0050FE  0101               	movlb	1	; () banked
 22606  005100  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22607                           
 22608                           ;cmd_init.c: 173: static eepromStates currentState = EEPROM_INIT;
 22609                           ;cmd_init.c: 174: EepromStsType memoryOpResult = OP_PENDING;
 22610  005102  0E02               	movlw	2
 22611  005104  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22612                           
 22613                           ;cmd_init.c: 175: bool isInitialized = 0;
 22614  005106  0E00               	movlw	0
 22615  005108  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22616                           
 22617                           ;cmd_init.c: 177: switch (currentState)
 22618  00510A  D034               	goto	l2766
 22619  00510C                     
 22620                           ; BSR set to: 1
 22621                           ;cmd_init.c: 180: memoryOpResult = Eeprom_Read(0, memoryPreamble, 4);
 22622                           
 22623                           ; BSR set to: 1
 22624  00510C  0EA9               	movlw	low _memoryPreamble
 22625  00510E  0100               	movlb	0	; () banked
 22626  005110  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22627  005112  0E03               	movlw	high _memoryPreamble
 22628  005114  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22629  005116  0E04               	movlw	4
 22630  005118  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22631  00511A  0E00               	movlw	0
 22632  00511C  ECA8  F02E         	call	_Eeprom_Read
 22633  005120  0101               	movlb	1	; () banked
 22634  005122  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22635                           
 22636                           ; BSR set to: 1
 22637                           ;cmd_init.c: 181: if (memoryOpResult != OP_PENDING)
 22638  005124  0E02               	movlw	2
 22639  005126  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 22640  005128  B4D8               	btfsc	status,2,c
 22641  00512A  D02E               	goto	l2771
 22642                           
 22643                           ; BSR set to: 1
 22644                           ;cmd_init.c: 182: {
 22645                           ;cmd_init.c: 183: if (memoryPreamble[0] == 'U' &&
 22646                           ;cmd_init.c: 184: memoryPreamble[1] == 'S' &&
 22647                           ;cmd_init.c: 185: memoryPreamble[2] == 'I' &&
 22648                           ;cmd_init.c: 186: memoryPreamble[3] == 'M')
 22649  00512C  0E55               	movlw	85
 22650  00512E  0103               	movlb	3	; () banked
 22651  005130  19A9               	xorwf	_memoryPreamble& (0+255),w,b
 22652  005132  A4D8               	btfss	status,2,c
 22653  005134  D00E               	goto	l2769
 22654                           
 22655                           ; BSR set to: 3
 22656  005136  0E53               	movlw	83
 22657  005138  19AA               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 22658  00513A  A4D8               	btfss	status,2,c
 22659  00513C  D00A               	goto	l2769
 22660                           
 22661                           ; BSR set to: 3
 22662  00513E  0E49               	movlw	73
 22663  005140  19AB               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 22664  005142  A4D8               	btfss	status,2,c
 22665  005144  D006               	goto	l2769
 22666                           
 22667                           ; BSR set to: 3
 22668  005146  0E4D               	movlw	77
 22669  005148  19AC               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 22670  00514A  A4D8               	btfss	status,2,c
 22671  00514C  D002               	goto	l2769
 22672                           
 22673                           ; BSR set to: 3
 22674                           ;cmd_init.c: 187: {
 22675                           ;cmd_init.c: 188: currentState = EEPROM_NOT_EMPTY;
 22676  00514E  0E02               	movlw	2
 22677  005150  D001               	goto	L38
 22678  005152                     l2769:
 22679                           
 22680                           ;cmd_init.c: 190: else
 22681                           ;cmd_init.c: 191: {
 22682                           ;cmd_init.c: 192: currentState = EEPROM_EMPTY;
 22683                           
 22684                           ; BSR set to: 1
 22685  005152  0E01               	movlw	1
 22686  005154                     L38:
 22687  005154  0101               	movlb	1	; () banked
 22688  005156  6FD6               	movwf	initEeprom@currentState& (0+255),b
 22689                           
 22690                           ; BSR set to: 1
 22691                           ;cmd_init.c: 193: }
 22692                           ;cmd_init.c: 194: }
 22693                           ;cmd_init.c: 195: break;
 22694                           
 22695                           ; BSR set to: 1
 22696  005158  D017               	goto	l2771
 22697  00515A                     
 22698                           ; BSR set to: 1
 22699                           ;cmd_init.c: 198: currentState = EEPROM_INIT;
 22700                           
 22701                           ; BSR set to: 1
 22702  00515A  0E00               	movlw	0
 22703  00515C  6FD6               	movwf	initEeprom@currentState& (0+255),b
 22704                           
 22705                           ;cmd_init.c: 199: isInitialized = 1;
 22706  00515E  0E01               	movlw	1
 22707  005160  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22708                           
 22709                           ;cmd_init.c: 200: isMemoryEmpty = 1;
 22710  005162  0E01               	movlw	1
 22711  005164  D005               	goto	L39
 22712  005166                     
 22713                           ; BSR set to: 1
 22714                           ;cmd_init.c: 204: currentState = EEPROM_INIT;
 22715                           
 22716                           ; BSR set to: 1
 22717  005166  0E00               	movlw	0
 22718  005168  6FD6               	movwf	initEeprom@currentState& (0+255),b
 22719                           
 22720                           ;cmd_init.c: 205: isInitialized = 1;
 22721  00516A  0E01               	movlw	1
 22722  00516C  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22723                           
 22724                           ;cmd_init.c: 206: isMemoryEmpty = 0;
 22725  00516E  0E00               	movlw	0
 22726  005170                     L39:
 22727  005170  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 22728                           
 22729                           ; BSR set to: 1
 22730                           ;cmd_init.c: 211: }
 22731                           
 22732                           ; BSR set to: 1
 22733                           ;cmd_init.c: 210: break;
 22734                           
 22735                           ;cmd_init.c: 209: default:
 22736                           
 22737                           ;cmd_init.c: 207: break;
 22738  005172  D00A               	goto	l2771
 22739  005174                     l2766:
 22740                           
 22741                           ; BSR set to: 1
 22742                           
 22743                           ; BSR set to: 1
 22744  005174  51D6               	movf	initEeprom@currentState& (0+255),w,b
 22745                           
 22746                           ; Switch size 1, requested type "space"
 22747                           ; Number of cases is 3, Range of values is 0 to 2
 22748                           ; switch strategies available:
 22749                           ; Name         Instructions Cycles
 22750                           ; simple_byte           10     6 (average)
 22751                           ;	Chosen strategy is simple_byte
 22752  005176  0A00               	xorlw	0	; case 0
 22753  005178  B4D8               	btfsc	status,2,c
 22754  00517A  D7C8               	goto	l2767
 22755  00517C  0A01               	xorlw	1	; case 1
 22756  00517E  B4D8               	btfsc	status,2,c
 22757  005180  D7EC               	goto	l2772
 22758  005182  0A03               	xorlw	3	; case 2
 22759  005184  B4D8               	btfsc	status,2,c
 22760  005186  D7EF               	goto	l2773
 22761  005188                     l2771:
 22762                           
 22763                           ; BSR set to: 1
 22764                           ;cmd_init.c: 212: return isInitialized;
 22765                           
 22766                           ; BSR set to: 1
 22767  005188  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 22768  00518A  0012               	return	
 22769  00518C                     __end_of_initEeprom:
 22770                           	opt stack 0
 22771                           tosu	equ	0xFFF
 22772                           tosh	equ	0xFFE
 22773                           tosl	equ	0xFFD
 22774                           pclath	equ	0xFFA
 22775                           tblptru	equ	0xFF8
 22776                           tblptrh	equ	0xFF7
 22777                           tblptrl	equ	0xFF6
 22778                           tablat	equ	0xFF5
 22779                           prodh	equ	0xFF4
 22780                           prodl	equ	0xFF3
 22781                           intcon	equ	0xFF2
 22782                           intcon2	equ	0xFF1
 22783                           intcon3	equ	0xFF0
 22784                           indf0	equ	0xFEF
 22785                           postinc0	equ	0xFEE
 22786                           plusw0	equ	0xFEB
 22787                           fsr0h	equ	0xFEA
 22788                           fsr0l	equ	0xFE9
 22789                           wreg	equ	0xFE8
 22790                           indf1	equ	0xFE7
 22791                           postinc1	equ	0xFE6
 22792                           postdec1	equ	0xFE5
 22793                           fsr1h	equ	0xFE2
 22794                           fsr1l	equ	0xFE1
 22795                           indf2	equ	0xFDF
 22796                           postinc2	equ	0xFDE
 22797                           postdec2	equ	0xFDD
 22798                           plusw2	equ	0xFDB
 22799                           fsr2h	equ	0xFDA
 22800                           fsr2l	equ	0xFD9
 22801                           status	equ	0xFD8
 22802                           
 22803 ;; *************** function _detectUsbNumber *****************
 22804 ;; Defined at:
 22805 ;;		line 339 in file "../Source/c/04_App/cmd_init.c"
 22806 ;; Parameters:    Size  Location     Type
 22807 ;;  isCmdSuccess    2   57[BANK0 ] PTR unsigned char 
 22808 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 22809 ;; Auto vars:     Size  Location     Type
 22810 ;;  isActionPerf    1   59[BANK0 ] unsigned char 
 22811 ;; Return value:  Size  Location     Type
 22812 ;;                  1    wreg      unsigned char 
 22813 ;; Registers used:
 22814 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22815 ;; Tracked objects:
 22816 ;;		On entry : 0/0
 22817 ;;		On exit  : 0/0
 22818 ;;		Unchanged: 0/0
 22819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22820 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22821 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22823 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22824 ;;Total ram usage:        3 bytes
 22825 ;; Hardware stack levels used:    1
 22826 ;; Hardware stack levels required when called:   15
 22827 ;; This function calls:
 22828 ;;		_saveNumberInMemory
 22829 ;; This function is called by:
 22830 ;;		_MyApp_Task
 22831 ;;		_initFsm
 22832 ;; This function uses a non-reentrant model
 22833 ;;
 22834                           
 22835                           	psect	text103
 22836  006590                     __ptext103:
 22837                           	opt stack 0
 22838  006590                     _detectUsbNumber:
 22839                           	opt stack 11
 22840                           
 22841                           ;cmd_init.c: 341: bool isActionPerformed = 0;
 22842                           
 22843                           ; BSR set to: 1
 22844                           ;incstack = 0
 22845  006590  0E00               	movlw	0
 22846  006592  0100               	movlb	0	; () banked
 22847  006594  6F9B               	movwf	detectUsbNumber@isActionPerformed& (0+255),b
 22848                           
 22849                           ; BSR set to: 0
 22850                           ;cmd_init.c: 343: if (IsUsbNumberReceived == 1)
 22851  006596  0102               	movlb	2	; () banked
 22852  006598  05ED               	decf	_IsUsbNumberReceived& (0+255),w,b
 22853  00659A  A4D8               	btfss	status,2,c
 22854  00659C  D014               	goto	l2810
 22855                           
 22856                           ; BSR set to: 2
 22857                           ;cmd_init.c: 344: {
 22858                           ;cmd_init.c: 345: saveNumberInMemory(16, UsbMasterPhoneNumber);
 22859  00659E  0E98               	movlw	low _UsbMasterPhoneNumber
 22860  0065A0  0100               	movlb	0	; () banked
 22861  0065A2  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 22862  0065A4  0E04               	movlw	high _UsbMasterPhoneNumber
 22863  0065A6  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 22864  0065A8  0E10               	movlw	16
 22865  0065AA  EC00  F036         	call	_saveNumberInMemory
 22866                           
 22867                           ;cmd_init.c: 346: *isCmdSuccessfull = 1;
 22868  0065AE  C099  FFD9         	movff	detectUsbNumber@isCmdSuccessfull,fsr2l
 22869  0065B2  C09A  FFDA         	movff	detectUsbNumber@isCmdSuccessfull+1,fsr2h
 22870  0065B6  0E01               	movlw	1
 22871  0065B8  6EDF               	movwf	indf2,c
 22872                           
 22873                           ;cmd_init.c: 347: isActionPerformed = 1;
 22874  0065BA  0E01               	movlw	1
 22875  0065BC  0100               	movlb	0	; () banked
 22876  0065BE  6F9B               	movwf	detectUsbNumber@isActionPerformed& (0+255),b
 22877                           
 22878                           ; BSR set to: 0
 22879                           ;cmd_init.c: 348: IsUsbNumberReceived = 0;
 22880  0065C0  0E00               	movlw	0
 22881  0065C2  0102               	movlb	2	; () banked
 22882  0065C4  6FED               	movwf	_IsUsbNumberReceived& (0+255),b
 22883  0065C6                     l2810:
 22884                           
 22885                           ; BSR set to: 2
 22886                           ;cmd_init.c: 349: }
 22887                           ;cmd_init.c: 350: return isActionPerformed;
 22888                           
 22889                           ; BSR set to: 2
 22890  0065C6  0100               	movlb	0	; () banked
 22891  0065C8  519B               	movf	detectUsbNumber@isActionPerformed& (0+255),w,b
 22892  0065CA  0012               	return	
 22893  0065CC                     __end_of_detectUsbNumber:
 22894                           	opt stack 0
 22895                           tosu	equ	0xFFF
 22896                           tosh	equ	0xFFE
 22897                           tosl	equ	0xFFD
 22898                           pclath	equ	0xFFA
 22899                           tblptru	equ	0xFF8
 22900                           tblptrh	equ	0xFF7
 22901                           tblptrl	equ	0xFF6
 22902                           tablat	equ	0xFF5
 22903                           prodh	equ	0xFF4
 22904                           prodl	equ	0xFF3
 22905                           intcon	equ	0xFF2
 22906                           intcon2	equ	0xFF1
 22907                           intcon3	equ	0xFF0
 22908                           indf0	equ	0xFEF
 22909                           postinc0	equ	0xFEE
 22910                           plusw0	equ	0xFEB
 22911                           fsr0h	equ	0xFEA
 22912                           fsr0l	equ	0xFE9
 22913                           wreg	equ	0xFE8
 22914                           indf1	equ	0xFE7
 22915                           postinc1	equ	0xFE6
 22916                           postdec1	equ	0xFE5
 22917                           fsr1h	equ	0xFE2
 22918                           fsr1l	equ	0xFE1
 22919                           indf2	equ	0xFDF
 22920                           postinc2	equ	0xFDE
 22921                           postdec2	equ	0xFDD
 22922                           plusw2	equ	0xFDB
 22923                           fsr2h	equ	0xFDA
 22924                           fsr2l	equ	0xFD9
 22925                           status	equ	0xFD8
 22926                           
 22927 ;; *************** function _detectCmd *****************
 22928 ;; Defined at:
 22929 ;;		line 131 in file "../Source/c/04_App/app_main.c"
 22930 ;; Parameters:    Size  Location     Type
 22931 ;;		None
 22932 ;; Auto vars:     Size  Location     Type
 22933 ;;  currentState    1   53[BANK0 ] enum E9021
 22934 ;; Return value:  Size  Location     Type
 22935 ;;                  1    wreg      enum E9021
 22936 ;; Registers used:
 22937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22938 ;; Tracked objects:
 22939 ;;		On entry : 0/0
 22940 ;;		On exit  : 0/0
 22941 ;;		Unchanged: 0/0
 22942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22944 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22946 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22947 ;;Total ram usage:        1 bytes
 22948 ;; Hardware stack levels used:    1
 22949 ;; Hardware stack levels required when called:   14
 22950 ;; This function calls:
 22951 ;;		_GetCallerNumber
 22952 ;;		_GetLastInteractionNumber
 22953 ;;		_Mdm_GetSmsData
 22954 ;;		_Mdm_HangPhoneCall
 22955 ;;		_Mdm_IsRinging
 22956 ;;		_Mdm_IsSmsReceived
 22957 ;;		_Mdm_RequestSmsData
 22958 ;;		_StringCopy
 22959 ;;		_Uart_WriteConstString
 22960 ;;		_parseCommand
 22961 ;; This function is called by:
 22962 ;;		_MyApp_Task
 22963 ;; This function uses a non-reentrant model
 22964 ;;
 22965                           
 22966                           	psect	text104
 22967  004C4A                     __ptext104:
 22968                           	opt stack 0
 22969  004C4A                     _detectCmd:
 22970                           	opt stack 13
 22971                           
 22972                           ;app_main.c: 133: appMainFsmStates currentState = APP_MAIN_WAIT_EVENT;
 22973                           
 22974                           ; BSR set to: 0
 22975                           ;incstack = 0
 22976  004C4A  0E01               	movlw	1
 22977  004C4C  0100               	movlb	0	; () banked
 22978  004C4E  6F95               	movwf	detectCmd@currentState& (0+255),b
 22979                           
 22980                           ; BSR set to: 0
 22981                           ;app_main.c: 134: if (Mdm_IsSmsReceived())
 22982  004C50  ECC4  F034         	call	_Mdm_IsSmsReceived	;wreg free
 22983  004C54  0900               	iorlw	0
 22984  004C56  A4D8               	btfss	status,2,c
 22985                           
 22986                           ;app_main.c: 135: {
 22987                           ;app_main.c: 136: Mdm_RequestSmsData();
 22988  004C58  EC92  F036         	call	_Mdm_RequestSmsData	;wreg free
 22989                           
 22990                           ;app_main.c: 137: }
 22991                           ;app_main.c: 138: if (Mdm_GetSmsData(smsText) == SmsDataReady)
 22992  004C5C  0E84               	movlw	low _smsText
 22993  004C5E  0100               	movlb	0	; () banked
 22994  004C60  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
 22995  004C62  0E04               	movlw	high _smsText
 22996  004C64  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
 22997  004C66  ECEF  F02B         	call	_Mdm_GetSmsData	;wreg free
 22998  004C6A  06E8               	decf	wreg,f,c
 22999  004C6C  A4D8               	btfss	status,2,c
 23000  004C6E  D01D               	goto	l2599
 23001                           
 23002                           ;app_main.c: 139: {
 23003                           ;app_main.c: 140: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
 23004  004C70  0E2E               	movlw	low STR_29
 23005  004C72  0100               	movlb	0	; () banked
 23006  004C74  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23007  004C76  0EFF               	movlw	high STR_29
 23008  004C78  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23009  004C7A  0E01               	movlw	1
 23010  004C7C  ECCD  F031         	call	_Uart_WriteConstString
 23011                           
 23012                           ;app_main.c: 141: currentState = parseCommand();
 23013  004C80  EC56  F018         	call	_parseCommand	;wreg free
 23014  004C84  0100               	movlb	0	; () banked
 23015  004C86  6F95               	movwf	detectCmd@currentState& (0+255),b
 23016                           
 23017                           ; BSR set to: 0
 23018                           ;app_main.c: 142: StringCopy(GetLastInteractionNumber(), receivedNumber, ((UINT8)(13)));
 23019  004C88  ECC5  F036         	call	_GetLastInteractionNumber	;wreg free
 23020  004C8C  C07D  F085         	movff	?_GetLastInteractionNumber,StringCopy@SourceStr
 23021  004C90  C07E  F086         	movff	?_GetLastInteractionNumber+1,StringCopy@SourceStr+1
 23022  004C94  0E44               	movlw	low _receivedNumber
 23023  004C96  0100               	movlb	0	; () banked
 23024  004C98  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23025  004C9A  0E03               	movlw	high _receivedNumber
 23026  004C9C  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23027  004C9E  0E00               	movlw	0
 23028  004CA0  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23029  004CA2  0E0D               	movlw	13
 23030  004CA4  6F89               	movwf	StringCopy@Len& (0+255),b
 23031  004CA6  ECBC  F02C         	call	_StringCopy	;wreg free
 23032  004CAA                     l2599:
 23033                           
 23034                           ;app_main.c: 143: }
 23035                           ;app_main.c: 144: if (Mdm_IsRinging())
 23036  004CAA  ECD6  F034         	call	_Mdm_IsRinging	;wreg free
 23037  004CAE  0900               	iorlw	0
 23038  004CB0  B4D8               	btfsc	status,2,c
 23039  004CB2  D016               	goto	l2600
 23040                           
 23041                           ;app_main.c: 145: {
 23042                           ;app_main.c: 146: Mdm_HangPhoneCall();
 23043  004CB4  EC70  F036         	call	_Mdm_HangPhoneCall	;wreg free
 23044                           
 23045                           ;app_main.c: 147: currentState = APP_MAIN_TRIGGER_CMD;
 23046  004CB8  0E04               	movlw	4
 23047  004CBA  0100               	movlb	0	; () banked
 23048  004CBC  6F95               	movwf	detectCmd@currentState& (0+255),b
 23049                           
 23050                           ; BSR set to: 0
 23051                           ;app_main.c: 148: StringCopy(GetCallerNumber(), receivedNumber, ((UINT8)(13)));
 23052  004CBE  EC3B  F033         	call	_GetCallerNumber	;wreg free
 23053  004CC2  C083  F085         	movff	?_GetCallerNumber,StringCopy@SourceStr
 23054  004CC6  C084  F086         	movff	?_GetCallerNumber+1,StringCopy@SourceStr+1
 23055  004CCA  0E44               	movlw	low _receivedNumber
 23056  004CCC  0100               	movlb	0	; () banked
 23057  004CCE  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23058  004CD0  0E03               	movlw	high _receivedNumber
 23059  004CD2  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23060  004CD4  0E00               	movlw	0
 23061  004CD6  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23062  004CD8  0E0D               	movlw	13
 23063  004CDA  6F89               	movwf	StringCopy@Len& (0+255),b
 23064  004CDC  ECBC  F02C         	call	_StringCopy	;wreg free
 23065  004CE0                     l2600:
 23066                           
 23067                           ;app_main.c: 149: }
 23068                           ;app_main.c: 150: return currentState;
 23069  004CE0  0100               	movlb	0	; () banked
 23070  004CE2  5195               	movf	detectCmd@currentState& (0+255),w,b
 23071  004CE4  0012               	return	
 23072  004CE6                     __end_of_detectCmd:
 23073                           	opt stack 0
 23074                           tosu	equ	0xFFF
 23075                           tosh	equ	0xFFE
 23076                           tosl	equ	0xFFD
 23077                           pclath	equ	0xFFA
 23078                           tblptru	equ	0xFF8
 23079                           tblptrh	equ	0xFF7
 23080                           tblptrl	equ	0xFF6
 23081                           tablat	equ	0xFF5
 23082                           prodh	equ	0xFF4
 23083                           prodl	equ	0xFF3
 23084                           intcon	equ	0xFF2
 23085                           intcon2	equ	0xFF1
 23086                           intcon3	equ	0xFF0
 23087                           indf0	equ	0xFEF
 23088                           postinc0	equ	0xFEE
 23089                           plusw0	equ	0xFEB
 23090                           fsr0h	equ	0xFEA
 23091                           fsr0l	equ	0xFE9
 23092                           wreg	equ	0xFE8
 23093                           indf1	equ	0xFE7
 23094                           postinc1	equ	0xFE6
 23095                           postdec1	equ	0xFE5
 23096                           fsr1h	equ	0xFE2
 23097                           fsr1l	equ	0xFE1
 23098                           indf2	equ	0xFDF
 23099                           postinc2	equ	0xFDE
 23100                           postdec2	equ	0xFDD
 23101                           plusw2	equ	0xFDB
 23102                           fsr2h	equ	0xFDA
 23103                           fsr2l	equ	0xFD9
 23104                           status	equ	0xFD8
 23105                           
 23106 ;; *************** function _parseCommand *****************
 23107 ;; Defined at:
 23108 ;;		line 86 in file "../Source/c/04_App/app_main.c"
 23109 ;; Parameters:    Size  Location     Type
 23110 ;;		None
 23111 ;; Auto vars:     Size  Location     Type
 23112 ;;  resetCmd        4   48[BANK0 ] const unsigned char [4]
 23113 ;;  deleteNumber    4   44[BANK0 ] const unsigned char [4]
 23114 ;;  addNumberCmd    4   40[BANK0 ] const unsigned char [4]
 23115 ;;  state           1   52[BANK0 ] enum E9021
 23116 ;; Return value:  Size  Location     Type
 23117 ;;                  1    wreg      enum E9021
 23118 ;; Registers used:
 23119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23120 ;; Tracked objects:
 23121 ;;		On entry : 0/0
 23122 ;;		On exit  : 0/0
 23123 ;;		Unchanged: 0/0
 23124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23126 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23128 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23129 ;;Total ram usage:       13 bytes
 23130 ;; Hardware stack levels used:    1
 23131 ;; Hardware stack levels required when called:   12
 23132 ;; This function calls:
 23133 ;;		_StringCompare2Const
 23134 ;;		_isNumberValid
 23135 ;; This function is called by:
 23136 ;;		_detectCmd
 23137 ;; This function uses a non-reentrant model
 23138 ;;
 23139                           
 23140                           	psect	text105
 23141  0030AC                     __ptext105:
 23142                           	opt stack 0
 23143  0030AC                     _parseCommand:
 23144                           	opt stack 14
 23145                           
 23146                           ;app_main.c: 88: const uint8_t addNumberCmd[] = {'A', 'D', 'D', ';'};
 23147                           
 23148                           ; BSR set to: 0
 23149                           ;incstack = 0
 23150  0030AC  0E29               	movlw	low parseCommand@F9035
 23151  0030AE  6EF6               	movwf	tblptrl,c
 23152  0030B0                     	if	1	;There is more than 1 active tblptr byte
 23153  0030B0  0EFC               	movlw	high parseCommand@F9035
 23154  0030B2  6EF7               	movwf	tblptrh,c
 23155  0030B4                     	endif
 23156  0030B4                     	if	0	;There are less than 3 active tblptr bytes
 23157  0030B4                     	endif
 23158  0030B4  0009               	tblrd		*+
 23159  0030B6  CFF5 F088          	movff	tablat,parseCommand@addNumberCmd
 23160  0030BA  0009               	tblrd		*+
 23161  0030BC  CFF5 F089          	movff	tablat,parseCommand@addNumberCmd+1
 23162  0030C0  0009               	tblrd		*+
 23163  0030C2  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd+2
 23164  0030C6  000A               	tblrd		*-
 23165  0030C8  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+3
 23166                           
 23167                           ;app_main.c: 89: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L', ';'};
 23168  0030CC  0E25               	movlw	low parseCommand@F9037
 23169  0030CE  6EF6               	movwf	tblptrl,c
 23170  0030D0                     	if	1	;There is more than 1 active tblptr byte
 23171  0030D0  0EFC               	movlw	high parseCommand@F9037
 23172  0030D2  6EF7               	movwf	tblptrh,c
 23173  0030D4                     	endif
 23174  0030D4                     	if	0	;There are less than 3 active tblptr bytes
 23175  0030D4                     	endif
 23176  0030D4  0009               	tblrd		*+
 23177  0030D6  CFF5 F08C          	movff	tablat,parseCommand@deleteNumberCmd
 23178  0030DA  0009               	tblrd		*+
 23179  0030DC  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd+1
 23180  0030E0  0009               	tblrd		*+
 23181  0030E2  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+2
 23182  0030E6  000A               	tblrd		*-
 23183  0030E8  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+3
 23184                           
 23185                           ;app_main.c: 90: const uint8_t resetCmd[] = {'R', 'E', 'S', ';'};
 23186  0030EC  0E21               	movlw	low parseCommand@F9039
 23187  0030EE  6EF6               	movwf	tblptrl,c
 23188  0030F0                     	if	1	;There is more than 1 active tblptr byte
 23189  0030F0  0EFC               	movlw	high parseCommand@F9039
 23190  0030F2  6EF7               	movwf	tblptrh,c
 23191  0030F4                     	endif
 23192  0030F4                     	if	0	;There are less than 3 active tblptr bytes
 23193  0030F4                     	endif
 23194  0030F4  0009               	tblrd		*+
 23195  0030F6  CFF5 F090          	movff	tablat,parseCommand@resetCmd
 23196  0030FA  0009               	tblrd		*+
 23197  0030FC  CFF5 F091          	movff	tablat,parseCommand@resetCmd+1
 23198  003100  0009               	tblrd		*+
 23199  003102  CFF5 F092          	movff	tablat,parseCommand@resetCmd+2
 23200  003106  000A               	tblrd		*-
 23201  003108  CFF5 F093          	movff	tablat,parseCommand@resetCmd+3
 23202                           
 23203                           ;app_main.c: 91: appMainFsmStates state = APP_MAIN_WAIT_EVENT;
 23204  00310C  0E01               	movlw	1
 23205  00310E  0100               	movlb	0	; () banked
 23206  003110  6F94               	movwf	parseCommand@state& (0+255),b
 23207                           
 23208                           ; BSR set to: 0
 23209                           ;app_main.c: 93: if (StringCompare2Const(smsText, addNumberCmd, sizeof(addNumberCmd)))
 23210  003112  0E84               	movlw	low _smsText
 23211  003114  6F7D               	movwf	StringCompare2Const@String1& (0+255),b
 23212  003116  0E04               	movlw	high _smsText
 23213  003118  6F7E               	movwf	(StringCompare2Const@String1+1)& (0+255),b
 23214  00311A  0E88               	movlw	low parseCommand@addNumberCmd
 23215  00311C  6F7F               	movwf	StringCompare2Const@String2& (0+255),b
 23216  00311E  0E00               	movlw	high parseCommand@addNumberCmd
 23217  003120  6F80               	movwf	(StringCompare2Const@String2+1)& (0+255),b
 23218  003122  0E00               	movlw	0
 23219  003124  6F82               	movwf	(StringCompare2Const@Len+1)& (0+255),b
 23220  003126  0E04               	movlw	4
 23221  003128  6F81               	movwf	StringCompare2Const@Len& (0+255),b
 23222  00312A  EC26  F02F         	call	_StringCompare2Const	;wreg free
 23223  00312E  0900               	iorlw	0
 23224  003130  B4D8               	btfsc	status,2,c
 23225  003132  D00E               	goto	l2585
 23226                           
 23227                           ;app_main.c: 94: {
 23228                           ;app_main.c: 95: if (!isNumberValid(smsText + 4))
 23229  003134  0E88               	movlw	low (_smsText+4)
 23230  003136  0100               	movlb	0	; () banked
 23231  003138  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 23232  00313A  0E04               	movlw	high (_smsText+4)
 23233  00313C  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 23234  00313E  EC89  F02C         	call	_isNumberValid	;wreg free
 23235  003142  0900               	iorlw	0
 23236  003144  A4D8               	btfss	status,2,c
 23237  003146  D002               	goto	l2586
 23238  003148                     u14690:
 23239                           
 23240                           ;app_main.c: 96: {
 23241                           ;app_main.c: 97: state = APP_MAIN_WAIT_EVENT;
 23242  003148  0E01               	movlw	1
 23243  00314A  D033               	goto	L43
 23244  00314C                     l2586:
 23245                           
 23246                           ;app_main.c: 99: else
 23247                           ;app_main.c: 100: {
 23248                           ;app_main.c: 101: state = APP_MAIN_ADD_CMD;
 23249                           
 23250                           ; BSR set to: 0
 23251  00314C  0E02               	movlw	2
 23252  00314E  D031               	goto	L43
 23253  003150                     l2585:
 23254                           
 23255                           ;app_main.c: 104: else if (StringCompare2Const(smsText, deleteNumberCmd, sizeof(deleteNu
      +                          mberCmd)))
 23256                           
 23257                           ; BSR set to: 0
 23258  003150  0E84               	movlw	low _smsText
 23259  003152  0100               	movlb	0	; () banked
 23260  003154  6F7D               	movwf	StringCompare2Const@String1& (0+255),b
 23261  003156  0E04               	movlw	high _smsText
 23262  003158  6F7E               	movwf	(StringCompare2Const@String1+1)& (0+255),b
 23263  00315A  0E8C               	movlw	low parseCommand@deleteNumberCmd
 23264  00315C  6F7F               	movwf	StringCompare2Const@String2& (0+255),b
 23265  00315E  0E00               	movlw	high parseCommand@deleteNumberCmd
 23266  003160  6F80               	movwf	(StringCompare2Const@String2+1)& (0+255),b
 23267  003162  0E00               	movlw	0
 23268  003164  6F82               	movwf	(StringCompare2Const@Len+1)& (0+255),b
 23269  003166  0E04               	movlw	4
 23270  003168  6F81               	movwf	StringCompare2Const@Len& (0+255),b
 23271  00316A  EC26  F02F         	call	_StringCompare2Const	;wreg free
 23272  00316E  0900               	iorlw	0
 23273  003170  B4D8               	btfsc	status,2,c
 23274  003172  D00C               	goto	l2589
 23275                           
 23276                           ;app_main.c: 105: {
 23277                           ;app_main.c: 106: if (!isNumberValid(smsText + 4))
 23278  003174  0E88               	movlw	low (_smsText+4)
 23279  003176  0100               	movlb	0	; () banked
 23280  003178  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 23281  00317A  0E04               	movlw	high (_smsText+4)
 23282  00317C  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 23283  00317E  EC89  F02C         	call	_isNumberValid	;wreg free
 23284  003182  0900               	iorlw	0
 23285  003184  B4D8               	btfsc	status,2,c
 23286  003186  D7E0               	goto	u14690
 23287                           
 23288                           ;app_main.c: 110: else
 23289                           ;app_main.c: 111: {
 23290                           ;app_main.c: 112: state = APP_MAIN_DEL_CMD;
 23291                           
 23292                           ; BSR set to: 0
 23293                           
 23294                           ;app_main.c: 109: }
 23295                           
 23296                           ;app_main.c: 107: {
 23297                           ;app_main.c: 108: state = APP_MAIN_WAIT_EVENT;
 23298  003188  0E03               	movlw	3
 23299  00318A  D013               	goto	L43
 23300  00318C                     l2589:
 23301                           
 23302                           ;app_main.c: 115: else if (StringCompare2Const(smsText, resetCmd, sizeof(resetCmd)))
 23303                           
 23304                           ; BSR set to: 0
 23305  00318C  0E84               	movlw	low _smsText
 23306  00318E  0100               	movlb	0	; () banked
 23307  003190  6F7D               	movwf	StringCompare2Const@String1& (0+255),b
 23308  003192  0E04               	movlw	high _smsText
 23309  003194  6F7E               	movwf	(StringCompare2Const@String1+1)& (0+255),b
 23310  003196  0E90               	movlw	low parseCommand@resetCmd
 23311  003198  6F7F               	movwf	StringCompare2Const@String2& (0+255),b
 23312  00319A  0E00               	movlw	high parseCommand@resetCmd
 23313  00319C  6F80               	movwf	(StringCompare2Const@String2+1)& (0+255),b
 23314  00319E  0E00               	movlw	0
 23315  0031A0  6F82               	movwf	(StringCompare2Const@Len+1)& (0+255),b
 23316  0031A2  0E04               	movlw	4
 23317  0031A4  6F81               	movwf	StringCompare2Const@Len& (0+255),b
 23318  0031A6  EC26  F02F         	call	_StringCompare2Const	;wreg free
 23319  0031AA  0900               	iorlw	0
 23320  0031AC  B4D8               	btfsc	status,2,c
 23321  0031AE  D003               	goto	l2593
 23322                           
 23323                           ;app_main.c: 116: {
 23324                           ;app_main.c: 117: state = APP_MAIN_RESET;
 23325  0031B0  0E05               	movlw	5
 23326  0031B2                     L43:
 23327  0031B2  0100               	movlb	0	; () banked
 23328  0031B4  6F94               	movwf	parseCommand@state& (0+255),b
 23329  0031B6                     l2593:
 23330                           
 23331                           ;app_main.c: 122: }
 23332                           ;app_main.c: 123: return state;
 23333                           
 23334                           ; BSR set to: 0
 23335                           
 23336                           ; BSR set to: 0
 23337                           
 23338                           ; BSR set to: 0
 23339                           
 23340                           ;app_main.c: 119: else
 23341                           ;app_main.c: 120: {
 23342                           
 23343                           ; BSR set to: 0
 23344  0031B6  0100               	movlb	0	; () banked
 23345  0031B8  5194               	movf	parseCommand@state& (0+255),w,b
 23346  0031BA  0012               	return	
 23347  0031BC                     __end_of_parseCommand:
 23348                           	opt stack 0
 23349                           tosu	equ	0xFFF
 23350                           tosh	equ	0xFFE
 23351                           tosl	equ	0xFFD
 23352                           pclath	equ	0xFFA
 23353                           tblptru	equ	0xFF8
 23354                           tblptrh	equ	0xFF7
 23355                           tblptrl	equ	0xFF6
 23356                           tablat	equ	0xFF5
 23357                           prodh	equ	0xFF4
 23358                           prodl	equ	0xFF3
 23359                           intcon	equ	0xFF2
 23360                           intcon2	equ	0xFF1
 23361                           intcon3	equ	0xFF0
 23362                           indf0	equ	0xFEF
 23363                           postinc0	equ	0xFEE
 23364                           plusw0	equ	0xFEB
 23365                           fsr0h	equ	0xFEA
 23366                           fsr0l	equ	0xFE9
 23367                           wreg	equ	0xFE8
 23368                           indf1	equ	0xFE7
 23369                           postinc1	equ	0xFE6
 23370                           postdec1	equ	0xFE5
 23371                           fsr1h	equ	0xFE2
 23372                           fsr1l	equ	0xFE1
 23373                           indf2	equ	0xFDF
 23374                           postinc2	equ	0xFDE
 23375                           postdec2	equ	0xFDD
 23376                           plusw2	equ	0xFDB
 23377                           fsr2h	equ	0xFDA
 23378                           fsr2l	equ	0xFD9
 23379                           status	equ	0xFD8
 23380                           
 23381 ;; *************** function _StringCompare2Const *****************
 23382 ;; Defined at:
 23383 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 23384 ;; Parameters:    Size  Location     Type
 23385 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 23386 ;;		 -> smsText(20), 
 23387 ;;  String2         2   31[BANK0 ] PTR const unsigned char 
 23388 ;;		 -> parseCommand@resetCmd(4), parseCommand@deleteNumberCmd(4), parseCommand@addNumberCmd(4), 
 23389 ;;  Len             2   33[BANK0 ] unsigned short 
 23390 ;; Auto vars:     Size  Location     Type
 23391 ;;  Index           2   38[BANK0 ] unsigned short 
 23392 ;;  Result          1   37[BANK0 ] unsigned char 
 23393 ;; Return value:  Size  Location     Type
 23394 ;;                  1    wreg      unsigned char 
 23395 ;; Registers used:
 23396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23397 ;; Tracked objects:
 23398 ;;		On entry : 0/0
 23399 ;;		On exit  : 0/0
 23400 ;;		Unchanged: 0/0
 23401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23402 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23403 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23404 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23405 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23406 ;;Total ram usage:       11 bytes
 23407 ;; Hardware stack levels used:    1
 23408 ;; Hardware stack levels required when called:   11
 23409 ;; This function calls:
 23410 ;;		Nothing
 23411 ;; This function is called by:
 23412 ;;		_parseCommand
 23413 ;; This function uses a non-reentrant model
 23414 ;;
 23415                           
 23416                           	psect	text106
 23417  005E4C                     __ptext106:
 23418                           	opt stack 0
 23419  005E4C                     _StringCompare2Const:
 23420                           	opt stack 14
 23421                           
 23422                           ;sf.c: 77: UINT16 Index = 0;
 23423                           
 23424                           ; BSR set to: 0
 23425                           ;incstack = 0
 23426  005E4C  0E00               	movlw	0
 23427  005E4E  0100               	movlb	0	; () banked
 23428  005E50  6F87               	movwf	(StringCompare2Const@Index+1)& (0+255),b
 23429  005E52  0E00               	movlw	0
 23430  005E54  6F86               	movwf	StringCompare2Const@Index& (0+255),b
 23431                           
 23432                           ;sf.c: 78: UINT8 Result = 1;
 23433  005E56  0E01               	movlw	1
 23434  005E58  6F85               	movwf	StringCompare2Const@Result& (0+255),b
 23435                           
 23436                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 23437  005E5A  0E00               	movlw	0
 23438  005E5C  6F87               	movwf	(StringCompare2Const@Index+1)& (0+255),b
 23439  005E5E  0E00               	movlw	0
 23440  005E60  6F86               	movwf	StringCompare2Const@Index& (0+255),b
 23441  005E62  D015               	goto	l2249
 23442  005E64                     
 23443                           ; BSR set to: 0
 23444                           ;sf.c: 82: {
 23445                           ;sf.c: 83: if (String1[Index] != String2[Index])
 23446                           
 23447                           ; BSR set to: 0
 23448  005E64  5186               	movf	StringCompare2Const@Index& (0+255),w,b
 23449  005E66  257F               	addwf	StringCompare2Const@String2& (0+255),w,b
 23450  005E68  6ED9               	movwf	fsr2l,c
 23451  005E6A  5187               	movf	(StringCompare2Const@Index+1)& (0+255),w,b
 23452  005E6C  2180               	addwfc	(StringCompare2Const@String2+1)& (0+255),w,b
 23453  005E6E  6EDA               	movwf	fsr2h,c
 23454  005E70  5186               	movf	StringCompare2Const@Index& (0+255),w,b
 23455  005E72  257D               	addwf	StringCompare2Const@String1& (0+255),w,b
 23456  005E74  6EE1               	movwf	fsr1l,c
 23457  005E76  5187               	movf	(StringCompare2Const@Index+1)& (0+255),w,b
 23458  005E78  217E               	addwfc	(StringCompare2Const@String1+1)& (0+255),w,b
 23459  005E7A  6EE2               	movwf	fsr1h,c
 23460  005E7C  50DE               	movf	postinc2,w,c
 23461  005E7E  18E6               	xorwf	postinc1,w,c
 23462  005E80  B4D8               	btfsc	status,2,c
 23463  005E82  D003               	goto	l2251
 23464                           
 23465                           ; BSR set to: 0
 23466                           ;sf.c: 84: {
 23467                           ;sf.c: 85: Result = 0;
 23468  005E84  0E00               	movlw	0
 23469  005E86  6F85               	movwf	StringCompare2Const@Result& (0+255),b
 23470                           
 23471                           ;sf.c: 86: break;
 23472  005E88  D008               	goto	u13200
 23473  005E8A                     l2251:
 23474                           
 23475                           ; BSR set to: 0
 23476                           
 23477                           ; BSR set to: 0
 23478  005E8A  4B86               	infsnz	StringCompare2Const@Index& (0+255),f,b
 23479  005E8C  2B87               	incf	(StringCompare2Const@Index+1)& (0+255),f,b
 23480  005E8E                     l2249:
 23481                           
 23482                           ; BSR set to: 0
 23483                           
 23484                           ; BSR set to: 0
 23485  005E8E  5181               	movf	StringCompare2Const@Len& (0+255),w,b
 23486  005E90  5D86               	subwf	StringCompare2Const@Index& (0+255),w,b
 23487  005E92  5182               	movf	(StringCompare2Const@Len+1)& (0+255),w,b
 23488  005E94  5987               	subwfb	(StringCompare2Const@Index+1)& (0+255),w,b
 23489  005E96  A0D8               	btfss	status,0,c
 23490  005E98  D7E5               	goto	l2250
 23491  005E9A                     u13200:
 23492                           
 23493                           ; BSR set to: 0
 23494                           ;sf.c: 87: }
 23495                           ;sf.c: 88: }
 23496                           ;sf.c: 91: return Result;
 23497                           
 23498                           ; BSR set to: 0
 23499  005E9A  5185               	movf	StringCompare2Const@Result& (0+255),w,b
 23500  005E9C  0012               	return	
 23501  005E9E                     __end_of_StringCompare2Const:
 23502                           	opt stack 0
 23503                           tosu	equ	0xFFF
 23504                           tosh	equ	0xFFE
 23505                           tosl	equ	0xFFD
 23506                           pclath	equ	0xFFA
 23507                           tblptru	equ	0xFF8
 23508                           tblptrh	equ	0xFF7
 23509                           tblptrl	equ	0xFF6
 23510                           tablat	equ	0xFF5
 23511                           prodh	equ	0xFF4
 23512                           prodl	equ	0xFF3
 23513                           intcon	equ	0xFF2
 23514                           intcon2	equ	0xFF1
 23515                           intcon3	equ	0xFF0
 23516                           indf0	equ	0xFEF
 23517                           postinc0	equ	0xFEE
 23518                           plusw0	equ	0xFEB
 23519                           fsr0h	equ	0xFEA
 23520                           fsr0l	equ	0xFE9
 23521                           wreg	equ	0xFE8
 23522                           indf1	equ	0xFE7
 23523                           postinc1	equ	0xFE6
 23524                           postdec1	equ	0xFE5
 23525                           fsr1h	equ	0xFE2
 23526                           fsr1l	equ	0xFE1
 23527                           indf2	equ	0xFDF
 23528                           postinc2	equ	0xFDE
 23529                           postdec2	equ	0xFDD
 23530                           plusw2	equ	0xFDB
 23531                           fsr2h	equ	0xFDA
 23532                           fsr2l	equ	0xFD9
 23533                           status	equ	0xFD8
 23534                           
 23535 ;; *************** function _Mdm_RequestSmsData *****************
 23536 ;; Defined at:
 23537 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23538 ;; Parameters:    Size  Location     Type
 23539 ;;		None
 23540 ;; Auto vars:     Size  Location     Type
 23541 ;;		None
 23542 ;; Return value:  Size  Location     Type
 23543 ;;                  1    wreg      void 
 23544 ;; Registers used:
 23545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23546 ;; Tracked objects:
 23547 ;;		On entry : 0/0
 23548 ;;		On exit  : 0/0
 23549 ;;		Unchanged: 0/0
 23550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23555 ;;Total ram usage:        0 bytes
 23556 ;; Hardware stack levels used:    1
 23557 ;; Hardware stack levels required when called:   12
 23558 ;; This function calls:
 23559 ;;		_GenerateEvt
 23560 ;; This function is called by:
 23561 ;;		_detectCmd
 23562 ;; This function uses a non-reentrant model
 23563 ;;
 23564                           
 23565                           	psect	text107
 23566  006D24                     __ptext107:
 23567                           	opt stack 0
 23568  006D24                     _Mdm_RequestSmsData:
 23569                           	opt stack 14
 23570                           
 23571                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 23572                           
 23573                           ; BSR set to: 0
 23574                           ;incstack = 0
 23575  006D24  0EDA               	movlw	low _GetSmsText
 23576  006D26  0100               	movlb	0	; () banked
 23577  006D28  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23578  006D2A  0E00               	movlw	high _GetSmsText
 23579  006D2C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23580  006D2E  EC25  F036         	call	_GenerateEvt	;wreg free
 23581  006D32  0012               	return		;funcret
 23582  006D34                     __end_of_Mdm_RequestSmsData:
 23583                           	opt stack 0
 23584                           tosu	equ	0xFFF
 23585                           tosh	equ	0xFFE
 23586                           tosl	equ	0xFFD
 23587                           pclath	equ	0xFFA
 23588                           tblptru	equ	0xFF8
 23589                           tblptrh	equ	0xFF7
 23590                           tblptrl	equ	0xFF6
 23591                           tablat	equ	0xFF5
 23592                           prodh	equ	0xFF4
 23593                           prodl	equ	0xFF3
 23594                           intcon	equ	0xFF2
 23595                           intcon2	equ	0xFF1
 23596                           intcon3	equ	0xFF0
 23597                           indf0	equ	0xFEF
 23598                           postinc0	equ	0xFEE
 23599                           plusw0	equ	0xFEB
 23600                           fsr0h	equ	0xFEA
 23601                           fsr0l	equ	0xFE9
 23602                           wreg	equ	0xFE8
 23603                           indf1	equ	0xFE7
 23604                           postinc1	equ	0xFE6
 23605                           postdec1	equ	0xFE5
 23606                           fsr1h	equ	0xFE2
 23607                           fsr1l	equ	0xFE1
 23608                           indf2	equ	0xFDF
 23609                           postinc2	equ	0xFDE
 23610                           postdec2	equ	0xFDD
 23611                           plusw2	equ	0xFDB
 23612                           fsr2h	equ	0xFDA
 23613                           fsr2l	equ	0xFD9
 23614                           status	equ	0xFD8
 23615                           
 23616 ;; *************** function _Mdm_IsSmsReceived *****************
 23617 ;; Defined at:
 23618 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23619 ;; Parameters:    Size  Location     Type
 23620 ;;		None
 23621 ;; Auto vars:     Size  Location     Type
 23622 ;;  Ret             1   33[BANK0 ] enum E8935
 23623 ;; Return value:  Size  Location     Type
 23624 ;;                  1    wreg      enum E8935
 23625 ;; Registers used:
 23626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23627 ;; Tracked objects:
 23628 ;;		On entry : 0/0
 23629 ;;		On exit  : 0/0
 23630 ;;		Unchanged: 0/0
 23631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23635 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23636 ;;Total ram usage:        1 bytes
 23637 ;; Hardware stack levels used:    1
 23638 ;; Hardware stack levels required when called:   12
 23639 ;; This function calls:
 23640 ;;		_ReceiveEvt
 23641 ;; This function is called by:
 23642 ;;		_detectCmd
 23643 ;; This function uses a non-reentrant model
 23644 ;;
 23645                           
 23646                           	psect	text108
 23647  006988                     __ptext108:
 23648                           	opt stack 0
 23649  006988                     _Mdm_IsSmsReceived:
 23650                           	opt stack 14
 23651                           
 23652                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 23653                           
 23654                           ;incstack = 0
 23655  006988  0E00               	movlw	0
 23656  00698A  0100               	movlb	0	; () banked
 23657  00698C  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 23658                           
 23659                           ; BSR set to: 0
 23660                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 23661  00698E  0EDB               	movlw	low _SmsEvent
 23662  006990  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23663  006992  0E00               	movlw	high _SmsEvent
 23664  006994  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23665  006996  EC34  F034         	call	_ReceiveEvt	;wreg free
 23666  00699A  0900               	iorlw	0
 23667  00699C  B4D8               	btfsc	status,2,c
 23668  00699E  D003               	goto	l1136
 23669                           
 23670                           ;mdm_gsm_gprs.c: 947: {
 23671                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 23672  0069A0  0E01               	movlw	1
 23673  0069A2  0100               	movlb	0	; () banked
 23674  0069A4  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 23675  0069A6                     l1136:
 23676                           
 23677                           ;mdm_gsm_gprs.c: 949: }
 23678                           ;mdm_gsm_gprs.c: 951: return Ret;
 23679  0069A6  0100               	movlb	0	; () banked
 23680  0069A8  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 23681  0069AA  0012               	return	
 23682  0069AC                     __end_of_Mdm_IsSmsReceived:
 23683                           	opt stack 0
 23684                           tosu	equ	0xFFF
 23685                           tosh	equ	0xFFE
 23686                           tosl	equ	0xFFD
 23687                           pclath	equ	0xFFA
 23688                           tblptru	equ	0xFF8
 23689                           tblptrh	equ	0xFF7
 23690                           tblptrl	equ	0xFF6
 23691                           tablat	equ	0xFF5
 23692                           prodh	equ	0xFF4
 23693                           prodl	equ	0xFF3
 23694                           intcon	equ	0xFF2
 23695                           intcon2	equ	0xFF1
 23696                           intcon3	equ	0xFF0
 23697                           indf0	equ	0xFEF
 23698                           postinc0	equ	0xFEE
 23699                           plusw0	equ	0xFEB
 23700                           fsr0h	equ	0xFEA
 23701                           fsr0l	equ	0xFE9
 23702                           wreg	equ	0xFE8
 23703                           indf1	equ	0xFE7
 23704                           postinc1	equ	0xFE6
 23705                           postdec1	equ	0xFE5
 23706                           fsr1h	equ	0xFE2
 23707                           fsr1l	equ	0xFE1
 23708                           indf2	equ	0xFDF
 23709                           postinc2	equ	0xFDE
 23710                           postdec2	equ	0xFDD
 23711                           plusw2	equ	0xFDB
 23712                           fsr2h	equ	0xFDA
 23713                           fsr2l	equ	0xFD9
 23714                           status	equ	0xFD8
 23715                           
 23716 ;; *************** function _Mdm_IsRinging *****************
 23717 ;; Defined at:
 23718 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23719 ;; Parameters:    Size  Location     Type
 23720 ;;		None
 23721 ;; Auto vars:     Size  Location     Type
 23722 ;;  Ret             1   33[BANK0 ] enum E8931
 23723 ;; Return value:  Size  Location     Type
 23724 ;;                  1    wreg      enum E8931
 23725 ;; Registers used:
 23726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23727 ;; Tracked objects:
 23728 ;;		On entry : 0/0
 23729 ;;		On exit  : 0/0
 23730 ;;		Unchanged: 0/0
 23731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23735 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23736 ;;Total ram usage:        1 bytes
 23737 ;; Hardware stack levels used:    1
 23738 ;; Hardware stack levels required when called:   12
 23739 ;; This function calls:
 23740 ;;		_ReceiveEvt
 23741 ;; This function is called by:
 23742 ;;		_detectCmd
 23743 ;;		_getSetupCall
 23744 ;; This function uses a non-reentrant model
 23745 ;;
 23746                           
 23747                           	psect	text109
 23748  0069AC                     __ptext109:
 23749                           	opt stack 0
 23750  0069AC                     _Mdm_IsRinging:
 23751                           	opt stack 12
 23752                           
 23753                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 23754                           
 23755                           ; BSR set to: 0
 23756                           ;incstack = 0
 23757  0069AC  0E00               	movlw	0
 23758  0069AE  0100               	movlb	0	; () banked
 23759  0069B0  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 23760                           
 23761                           ; BSR set to: 0
 23762                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 23763  0069B2  0EDD               	movlw	low _RingEvent
 23764  0069B4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23765  0069B6  0E00               	movlw	high _RingEvent
 23766  0069B8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23767  0069BA  EC34  F034         	call	_ReceiveEvt	;wreg free
 23768  0069BE  0900               	iorlw	0
 23769  0069C0  B4D8               	btfsc	status,2,c
 23770  0069C2  D003               	goto	l1152
 23771                           
 23772                           ;mdm_gsm_gprs.c: 1030: {
 23773                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 23774  0069C4  0E01               	movlw	1
 23775  0069C6  0100               	movlb	0	; () banked
 23776  0069C8  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 23777  0069CA                     l1152:
 23778                           
 23779                           ;mdm_gsm_gprs.c: 1032: }
 23780                           ;mdm_gsm_gprs.c: 1034: return Ret;
 23781  0069CA  0100               	movlb	0	; () banked
 23782  0069CC  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 23783  0069CE  0012               	return	
 23784  0069D0                     __end_of_Mdm_IsRinging:
 23785                           	opt stack 0
 23786                           tosu	equ	0xFFF
 23787                           tosh	equ	0xFFE
 23788                           tosl	equ	0xFFD
 23789                           pclath	equ	0xFFA
 23790                           tblptru	equ	0xFF8
 23791                           tblptrh	equ	0xFF7
 23792                           tblptrl	equ	0xFF6
 23793                           tablat	equ	0xFF5
 23794                           prodh	equ	0xFF4
 23795                           prodl	equ	0xFF3
 23796                           intcon	equ	0xFF2
 23797                           intcon2	equ	0xFF1
 23798                           intcon3	equ	0xFF0
 23799                           indf0	equ	0xFEF
 23800                           postinc0	equ	0xFEE
 23801                           plusw0	equ	0xFEB
 23802                           fsr0h	equ	0xFEA
 23803                           fsr0l	equ	0xFE9
 23804                           wreg	equ	0xFE8
 23805                           indf1	equ	0xFE7
 23806                           postinc1	equ	0xFE6
 23807                           postdec1	equ	0xFE5
 23808                           fsr1h	equ	0xFE2
 23809                           fsr1l	equ	0xFE1
 23810                           indf2	equ	0xFDF
 23811                           postinc2	equ	0xFDE
 23812                           postdec2	equ	0xFDD
 23813                           plusw2	equ	0xFDB
 23814                           fsr2h	equ	0xFDA
 23815                           fsr2l	equ	0xFD9
 23816                           status	equ	0xFD8
 23817                           
 23818 ;; *************** function _Mdm_HangPhoneCall *****************
 23819 ;; Defined at:
 23820 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23821 ;; Parameters:    Size  Location     Type
 23822 ;;		None
 23823 ;; Auto vars:     Size  Location     Type
 23824 ;;		None
 23825 ;; Return value:  Size  Location     Type
 23826 ;;                  1    wreg      void 
 23827 ;; Registers used:
 23828 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23829 ;; Tracked objects:
 23830 ;;		On entry : 0/0
 23831 ;;		On exit  : 0/0
 23832 ;;		Unchanged: 0/0
 23833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23838 ;;Total ram usage:        0 bytes
 23839 ;; Hardware stack levels used:    1
 23840 ;; Hardware stack levels required when called:   13
 23841 ;; This function calls:
 23842 ;;		_Uart_WriteConstString
 23843 ;; This function is called by:
 23844 ;;		_detectCmd
 23845 ;;		_getSetupCall
 23846 ;; This function uses a non-reentrant model
 23847 ;;
 23848                           
 23849                           	psect	text110
 23850  006CE0                     __ptext110:
 23851                           	opt stack 0
 23852  006CE0                     _Mdm_HangPhoneCall:
 23853                           	opt stack 11
 23854                           
 23855                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 23856                           
 23857                           ; BSR set to: 0
 23858                           ;incstack = 0
 23859  006CE0  0EEF               	movlw	low STR_6
 23860  006CE2  0100               	movlb	0	; () banked
 23861  006CE4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23862  006CE6  0EFF               	movlw	high STR_6
 23863  006CE8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23864  006CEA  0E01               	movlw	1
 23865  006CEC  ECCD  F031         	call	_Uart_WriteConstString
 23866  006CF0  0012               	return		;funcret
 23867  006CF2                     __end_of_Mdm_HangPhoneCall:
 23868                           	opt stack 0
 23869                           tosu	equ	0xFFF
 23870                           tosh	equ	0xFFE
 23871                           tosl	equ	0xFFD
 23872                           pclath	equ	0xFFA
 23873                           tblptru	equ	0xFF8
 23874                           tblptrh	equ	0xFF7
 23875                           tblptrl	equ	0xFF6
 23876                           tablat	equ	0xFF5
 23877                           prodh	equ	0xFF4
 23878                           prodl	equ	0xFF3
 23879                           intcon	equ	0xFF2
 23880                           intcon2	equ	0xFF1
 23881                           intcon3	equ	0xFF0
 23882                           indf0	equ	0xFEF
 23883                           postinc0	equ	0xFEE
 23884                           plusw0	equ	0xFEB
 23885                           fsr0h	equ	0xFEA
 23886                           fsr0l	equ	0xFE9
 23887                           wreg	equ	0xFE8
 23888                           indf1	equ	0xFE7
 23889                           postinc1	equ	0xFE6
 23890                           postdec1	equ	0xFE5
 23891                           fsr1h	equ	0xFE2
 23892                           fsr1l	equ	0xFE1
 23893                           indf2	equ	0xFDF
 23894                           postinc2	equ	0xFDE
 23895                           postdec2	equ	0xFDD
 23896                           plusw2	equ	0xFDB
 23897                           fsr2h	equ	0xFDA
 23898                           fsr2l	equ	0xFD9
 23899                           status	equ	0xFD8
 23900                           
 23901 ;; *************** function _Mdm_GetSmsData *****************
 23902 ;; Defined at:
 23903 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23904 ;; Parameters:    Size  Location     Type
 23905 ;;  MessageText     2   47[BANK0 ] PTR unsigned char 
 23906 ;;		 -> smsText(20), 
 23907 ;; Auto vars:     Size  Location     Type
 23908 ;;  GetSmsStatus    1   49[BANK0 ] enum E8927
 23909 ;; Return value:  Size  Location     Type
 23910 ;;                  1    wreg      enum E8927
 23911 ;; Registers used:
 23912 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23913 ;; Tracked objects:
 23914 ;;		On entry : 0/0
 23915 ;;		On exit  : 0/0
 23916 ;;		Unchanged: 0/0
 23917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23918 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23919 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23921 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23922 ;;Total ram usage:        3 bytes
 23923 ;; Hardware stack levels used:    1
 23924 ;; Hardware stack levels required when called:   12
 23925 ;; This function calls:
 23926 ;;		_ReceiveEvt
 23927 ;;		_StringCopy
 23928 ;; This function is called by:
 23929 ;;		_detectCmd
 23930 ;; This function uses a non-reentrant model
 23931 ;;
 23932                           
 23933                           	psect	text111
 23934  0057DE                     __ptext111:
 23935                           	opt stack 0
 23936  0057DE                     _Mdm_GetSmsData:
 23937                           	opt stack 14
 23938                           
 23939                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 23940                           
 23941                           ;incstack = 0
 23942  0057DE  0E00               	movlw	0
 23943  0057E0  0100               	movlb	0	; () banked
 23944  0057E2  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23945                           
 23946                           ; BSR set to: 0
 23947                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 23948  0057E4  0ED9               	movlw	low _SmsTxtReady
 23949  0057E6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23950  0057E8  0E00               	movlw	high _SmsTxtReady
 23951  0057EA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23952  0057EC  EC34  F034         	call	_ReceiveEvt	;wreg free
 23953  0057F0  0900               	iorlw	0
 23954  0057F2  B4D8               	btfsc	status,2,c
 23955  0057F4  D025               	goto	l1129
 23956                           
 23957                           ;mdm_gsm_gprs.c: 898: {
 23958                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 23959  0057F6  0E50               	movlw	low (_Mdm_SmsRx+80)
 23960  0057F8  0100               	movlb	0	; () banked
 23961  0057FA  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23962  0057FC  0E07               	movlw	high (_Mdm_SmsRx+80)
 23963  0057FE  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23964  005800  C08F  F087         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 23965  005804  C090  F088         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 23966  005808  0E01               	movlw	1
 23967  00580A  0107               	movlb	7	; () banked
 23968  00580C  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 23969  00580E  0100               	movlb	0	; () banked
 23970  005810  6F89               	movwf	StringCopy@Len& (0+255),b
 23971  005812  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 23972  005814  0E00               	movlw	0
 23973  005816  238A               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 23974  005818  ECBC  F02C         	call	_StringCopy	;wreg free
 23975                           
 23976                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ));
 23977  00581C  0E15               	movlw	low (_Mdm_SmsRx+21)
 23978  00581E  0100               	movlb	0	; () banked
 23979  005820  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23980  005822  0E07               	movlw	high (_Mdm_SmsRx+21)
 23981  005824  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23982  005826  0EC3               	movlw	low _callerNumber
 23983  005828  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23984  00582A  0E04               	movlw	high _callerNumber
 23985  00582C  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23986  00582E  0E00               	movlw	0
 23987  005830  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23988  005832  0E0D               	movlw	13
 23989  005834  6F89               	movwf	StringCopy@Len& (0+255),b
 23990  005836  ECBC  F02C         	call	_StringCopy	;wreg free
 23991                           
 23992                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 23993  00583A  0E01               	movlw	1
 23994  00583C  0100               	movlb	0	; () banked
 23995  00583E  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23996  005840                     l1129:
 23997                           
 23998                           ;mdm_gsm_gprs.c: 904: }
 23999                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 24000                           
 24001                           ; BSR set to: 0
 24002  005840  0100               	movlb	0	; () banked
 24003  005842  5191               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 24004  005844  0012               	return	
 24005  005846                     __end_of_Mdm_GetSmsData:
 24006                           	opt stack 0
 24007                           tosu	equ	0xFFF
 24008                           tosh	equ	0xFFE
 24009                           tosl	equ	0xFFD
 24010                           pclath	equ	0xFFA
 24011                           tblptru	equ	0xFF8
 24012                           tblptrh	equ	0xFF7
 24013                           tblptrl	equ	0xFF6
 24014                           tablat	equ	0xFF5
 24015                           prodh	equ	0xFF4
 24016                           prodl	equ	0xFF3
 24017                           intcon	equ	0xFF2
 24018                           intcon2	equ	0xFF1
 24019                           intcon3	equ	0xFF0
 24020                           indf0	equ	0xFEF
 24021                           postinc0	equ	0xFEE
 24022                           plusw0	equ	0xFEB
 24023                           fsr0h	equ	0xFEA
 24024                           fsr0l	equ	0xFE9
 24025                           wreg	equ	0xFE8
 24026                           indf1	equ	0xFE7
 24027                           postinc1	equ	0xFE6
 24028                           postdec1	equ	0xFE5
 24029                           fsr1h	equ	0xFE2
 24030                           fsr1l	equ	0xFE1
 24031                           indf2	equ	0xFDF
 24032                           postinc2	equ	0xFDE
 24033                           postdec2	equ	0xFDD
 24034                           plusw2	equ	0xFDB
 24035                           fsr2h	equ	0xFDA
 24036                           fsr2l	equ	0xFD9
 24037                           status	equ	0xFD8
 24038                           
 24039 ;; *************** function _GetLastInteractionNumber *****************
 24040 ;; Defined at:
 24041 ;;		line 1046 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24042 ;; Parameters:    Size  Location     Type
 24043 ;;		None
 24044 ;; Auto vars:     Size  Location     Type
 24045 ;;		None
 24046 ;; Return value:  Size  Location     Type
 24047 ;;                  2   29[BANK0 ] PTR unsigned char 
 24048 ;; Registers used:
 24049 ;;		wreg, status,2, status,0
 24050 ;; Tracked objects:
 24051 ;;		On entry : 0/0
 24052 ;;		On exit  : 0/0
 24053 ;;		Unchanged: 0/0
 24054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24055 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24058 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24059 ;;Total ram usage:        2 bytes
 24060 ;; Hardware stack levels used:    1
 24061 ;; Hardware stack levels required when called:   11
 24062 ;; This function calls:
 24063 ;;		Nothing
 24064 ;; This function is called by:
 24065 ;;		_detectCmd
 24066 ;; This function uses a non-reentrant model
 24067 ;;
 24068                           
 24069                           	psect	text112
 24070  006D8A                     __ptext112:
 24071                           	opt stack 0
 24072  006D8A                     _GetLastInteractionNumber:
 24073                           	opt stack 15
 24074                           
 24075                           ;mdm_gsm_gprs.c: 1048: return callerNumber;
 24076                           
 24077                           ; BSR set to: 0
 24078                           ;incstack = 0
 24079  006D8A  0EC3               	movlw	low _callerNumber
 24080  006D8C  0100               	movlb	0	; () banked
 24081  006D8E  6F7D               	movwf	?_GetLastInteractionNumber& (0+255),b
 24082  006D90  0E04               	movlw	high _callerNumber
 24083  006D92  6F7E               	movwf	(?_GetLastInteractionNumber+1)& (0+255),b
 24084  006D94  0012               	return	
 24085  006D96                     __end_of_GetLastInteractionNumber:
 24086                           	opt stack 0
 24087                           tosu	equ	0xFFF
 24088                           tosh	equ	0xFFE
 24089                           tosl	equ	0xFFD
 24090                           pclath	equ	0xFFA
 24091                           tblptru	equ	0xFF8
 24092                           tblptrh	equ	0xFF7
 24093                           tblptrl	equ	0xFF6
 24094                           tablat	equ	0xFF5
 24095                           prodh	equ	0xFF4
 24096                           prodl	equ	0xFF3
 24097                           intcon	equ	0xFF2
 24098                           intcon2	equ	0xFF1
 24099                           intcon3	equ	0xFF0
 24100                           indf0	equ	0xFEF
 24101                           postinc0	equ	0xFEE
 24102                           plusw0	equ	0xFEB
 24103                           fsr0h	equ	0xFEA
 24104                           fsr0l	equ	0xFE9
 24105                           wreg	equ	0xFE8
 24106                           indf1	equ	0xFE7
 24107                           postinc1	equ	0xFE6
 24108                           postdec1	equ	0xFE5
 24109                           fsr1h	equ	0xFE2
 24110                           fsr1l	equ	0xFE1
 24111                           indf2	equ	0xFDF
 24112                           postinc2	equ	0xFDE
 24113                           postdec2	equ	0xFDD
 24114                           plusw2	equ	0xFDB
 24115                           fsr2h	equ	0xFDA
 24116                           fsr2l	equ	0xFD9
 24117                           status	equ	0xFD8
 24118                           
 24119 ;; *************** function _GetCallerNumber *****************
 24120 ;; Defined at:
 24121 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24122 ;; Parameters:    Size  Location     Type
 24123 ;;		None
 24124 ;; Auto vars:     Size  Location     Type
 24125 ;;		None
 24126 ;; Return value:  Size  Location     Type
 24127 ;;                  2   35[BANK0 ] PTR unsigned char 
 24128 ;; Registers used:
 24129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24130 ;; Tracked objects:
 24131 ;;		On entry : 0/0
 24132 ;;		On exit  : 0/0
 24133 ;;		Unchanged: 0/0
 24134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24135 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24138 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24139 ;;Total ram usage:        2 bytes
 24140 ;; Hardware stack levels used:    1
 24141 ;; Hardware stack levels required when called:   12
 24142 ;; This function calls:
 24143 ;;		_ClearBuffer
 24144 ;;		_ReceiveEvt
 24145 ;; This function is called by:
 24146 ;;		_detectCmd
 24147 ;;		_initFsm
 24148 ;; This function uses a non-reentrant model
 24149 ;;
 24150                           
 24151                           	psect	text113
 24152  006676                     __ptext113:
 24153                           	opt stack 0
 24154  006676                     _GetCallerNumber:
 24155                           	opt stack 14
 24156                           
 24157                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 24158                           
 24159                           ; BSR set to: 0
 24160                           ;incstack = 0
 24161  006676  0EDC               	movlw	low _ClipEvent
 24162  006678  0100               	movlb	0	; () banked
 24163  00667A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24164  00667C  0E00               	movlw	high _ClipEvent
 24165  00667E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24166  006680  EC34  F034         	call	_ReceiveEvt	;wreg free
 24167  006684  0900               	iorlw	0
 24168  006686  A4D8               	btfss	status,2,c
 24169  006688  D00B               	goto	l1156
 24170                           
 24171                           ;mdm_gsm_gprs.c: 1040: {
 24172                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 24173  00668A  0EC3               	movlw	low _callerNumber
 24174  00668C  0100               	movlb	0	; () banked
 24175  00668E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24176  006690  0E04               	movlw	high _callerNumber
 24177  006692  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24178  006694  0E00               	movlw	0
 24179  006696  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24180  006698  0E0D               	movlw	13
 24181  00669A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24182  00669C  EC56  F033         	call	_ClearBuffer	;wreg free
 24183  0066A0                     l1156:
 24184                           
 24185                           ;mdm_gsm_gprs.c: 1042: }
 24186                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 24187  0066A0  0EC3               	movlw	low _callerNumber
 24188  0066A2  0100               	movlb	0	; () banked
 24189  0066A4  6F83               	movwf	?_GetCallerNumber& (0+255),b
 24190  0066A6  0E04               	movlw	high _callerNumber
 24191  0066A8  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 24192  0066AA  0012               	return	
 24193  0066AC                     __end_of_GetCallerNumber:
 24194                           	opt stack 0
 24195                           tosu	equ	0xFFF
 24196                           tosh	equ	0xFFE
 24197                           tosl	equ	0xFFD
 24198                           pclath	equ	0xFFA
 24199                           tblptru	equ	0xFF8
 24200                           tblptrh	equ	0xFF7
 24201                           tblptrl	equ	0xFF6
 24202                           tablat	equ	0xFF5
 24203                           prodh	equ	0xFF4
 24204                           prodl	equ	0xFF3
 24205                           intcon	equ	0xFF2
 24206                           intcon2	equ	0xFF1
 24207                           intcon3	equ	0xFF0
 24208                           indf0	equ	0xFEF
 24209                           postinc0	equ	0xFEE
 24210                           plusw0	equ	0xFEB
 24211                           fsr0h	equ	0xFEA
 24212                           fsr0l	equ	0xFE9
 24213                           wreg	equ	0xFE8
 24214                           indf1	equ	0xFE7
 24215                           postinc1	equ	0xFE6
 24216                           postdec1	equ	0xFE5
 24217                           fsr1h	equ	0xFE2
 24218                           fsr1l	equ	0xFE1
 24219                           indf2	equ	0xFDF
 24220                           postinc2	equ	0xFDE
 24221                           postdec2	equ	0xFDD
 24222                           plusw2	equ	0xFDB
 24223                           fsr2h	equ	0xFDA
 24224                           fsr2l	equ	0xFD9
 24225                           status	equ	0xFD8
 24226                           
 24227 ;; *************** function _delCmdFsm *****************
 24228 ;; Defined at:
 24229 ;;		line 82 in file "../Source/c/04_App/cmd_del.c"
 24230 ;; Parameters:    Size  Location     Type
 24231 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 24232 ;;		 -> receivedNumber(13), 
 24233 ;;  smsText         2    7[BANK1 ] PTR unsigned char 
 24234 ;;		 -> smsText(20), 
 24235 ;;  isCmdSuccess    2    9[BANK1 ] PTR unsigned char 
 24236 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 24237 ;; Auto vars:     Size  Location     Type
 24238 ;;  searchNumber    1   14[BANK1 ] unsigned char 
 24239 ;;  numberInMemo    1   13[BANK1 ] unsigned char 
 24240 ;;  masterOpResu    1   12[BANK1 ] unsigned char 
 24241 ;;  isComplete      1   11[BANK1 ] unsigned char 
 24242 ;; Return value:  Size  Location     Type
 24243 ;;                  1    wreg      unsigned char 
 24244 ;; Registers used:
 24245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24246 ;; Tracked objects:
 24247 ;;		On entry : 0/0
 24248 ;;		On exit  : 0/0
 24249 ;;		Unchanged: 0/0
 24250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24251 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24252 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24254 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24255 ;;Total ram usage:       10 bytes
 24256 ;; Hardware stack levels used:    1
 24257 ;; Hardware stack levels required when called:   18
 24258 ;; This function calls:
 24259 ;;		_isMasterNumber
 24260 ;;		_isNumberInMemory
 24261 ;;		_saveNumberInMemory
 24262 ;; This function is called by:
 24263 ;;		_MyApp_Task
 24264 ;; This function uses a non-reentrant model
 24265 ;;
 24266                           
 24267                           	psect	text114
 24268  00442A                     __ptext114:
 24269                           	opt stack 0
 24270  00442A                     _delCmdFsm:
 24271                           	opt stack 9
 24272                           
 24273                           ;cmd_del.c: 84: static delFsmStates currentState = DEL_FSM_CHECK_MASTER;
 24274                           ;cmd_del.c: 85: bool isComplete = 0;
 24275                           
 24276                           ; BSR set to: 0
 24277                           ;incstack = 0
 24278  00442A  0E00               	movlw	0
 24279  00442C  0101               	movlb	1	; () banked
 24280  00442E  6F0B               	movwf	delCmdFsm@isComplete& (0+255),b
 24281                           
 24282                           ;cmd_del.c: 86: uint8_t numberInMemory = 0;
 24283  004430  0E00               	movlw	0
 24284  004432  6F0D               	movwf	delCmdFsm@numberInMemory& (0+255),b
 24285                           
 24286                           ;cmd_del.c: 87: uint8_t masterOpResult = OP_FAILED;
 24287  004434  0E01               	movlw	1
 24288  004436  6F0C               	movwf	delCmdFsm@masterOpResult& (0+255),b
 24289                           
 24290                           ;cmd_del.c: 88: uint8_t searchNumber = OP_FAILED;
 24291  004438  0E01               	movlw	1
 24292  00443A  6F0E               	movwf	delCmdFsm@searchNumber& (0+255),b
 24293                           
 24294                           ;cmd_del.c: 90: switch (currentState)
 24295  00443C  D04A               	goto	l2686
 24296  00443E                     
 24297                           ; BSR set to: 1
 24298                           ;cmd_del.c: 93: *isCmdSuccessfull = 0;
 24299                           
 24300                           ; BSR set to: 1
 24301  00443E  C109  FFD9         	movff	delCmdFsm@isCmdSuccessfull,fsr2l
 24302  004442  C10A  FFDA         	movff	delCmdFsm@isCmdSuccessfull+1,fsr2h
 24303  004446  0E00               	movlw	0
 24304  004448  6EDF               	movwf	indf2,c
 24305                           
 24306                           ; BSR set to: 1
 24307                           ;cmd_del.c: 94: masterOpResult = isMasterNumber(receivedNumber);
 24308  00444A  C105  F100         	movff	delCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 24309  00444E  C106  F101         	movff	delCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 24310  004452  EC4C  F02B         	call	_isMasterNumber	;wreg free
 24311  004456  0101               	movlb	1	; () banked
 24312  004458  6F0C               	movwf	delCmdFsm@masterOpResult& (0+255),b
 24313                           
 24314                           ; BSR set to: 1
 24315                           ;cmd_del.c: 95: if (masterOpResult == OP_SUCCESS)
 24316  00445A  510C               	movf	delCmdFsm@masterOpResult& (0+255),w,b
 24317  00445C  A4D8               	btfss	status,2,c
 24318  00445E  D002               	goto	l2688
 24319                           
 24320                           ; BSR set to: 1
 24321                           ;cmd_del.c: 96: {
 24322                           ;cmd_del.c: 97: currentState = DEL_FSM_REMOVE_NUMBER;
 24323  004460  0E01               	movlw	1
 24324  004462  D002               	goto	L44
 24325  004464                     l2688:
 24326                           
 24327                           ; BSR set to: 1
 24328                           ;cmd_del.c: 99: else if (masterOpResult == OP_FAILED)
 24329                           
 24330                           ; BSR set to: 1
 24331  004464  050C               	decf	delCmdFsm@masterOpResult& (0+255),w,b
 24332  004466  D02D               	goto	L101
 24333  004468                     L44:
 24334  004468  6FD8               	movwf	delCmdFsm@currentState& (0+255),b
 24335                           
 24336                           ; BSR set to: 1
 24337                           ;cmd_del.c: 102: }
 24338                           ;cmd_del.c: 103: break;
 24339                           
 24340                           ; BSR set to: 1
 24341  00446A  D03D               	goto	l2691
 24342  00446C                     
 24343                           ; BSR set to: 1
 24344                           ;cmd_del.c: 106: searchNumber = isNumberInMemory(smsText + 4, &numberInMemory);
 24345                           
 24346                           ; BSR set to: 1
 24347  00446C  0E04               	movlw	4
 24348  00446E  2507               	addwf	delCmdFsm@smsText& (0+255),w,b
 24349  004470  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 24350  004472  0E00               	movlw	0
 24351  004474  2108               	addwfc	(delCmdFsm@smsText+1)& (0+255),w,b
 24352  004476  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 24353  004478  0E0D               	movlw	low delCmdFsm@numberInMemory
 24354  00447A  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 24355  00447C  0E01               	movlw	high delCmdFsm@numberInMemory
 24356  00447E  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 24357  004480  ECD4  F022         	call	_isNumberInMemory	;wreg free
 24358  004484  0101               	movlb	1	; () banked
 24359  004486  6F0E               	movwf	delCmdFsm@searchNumber& (0+255),b
 24360                           
 24361                           ; BSR set to: 1
 24362                           ;cmd_del.c: 107: if (searchNumber == SEARCH_FSM_FOUND)
 24363  004488  0E03               	movlw	3
 24364  00448A  190E               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 24365  00448C  A4D8               	btfss	status,2,c
 24366  00448E  D013               	goto	l2693
 24367                           
 24368                           ; BSR set to: 1
 24369                           ;cmd_del.c: 108: {
 24370                           ;cmd_del.c: 109: saveNumberInMemory(numberInMemory, emptyNumber);
 24371  004490  0EB6               	movlw	low _emptyNumber
 24372  004492  0100               	movlb	0	; () banked
 24373  004494  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 24374  004496  0E04               	movlw	high _emptyNumber
 24375  004498  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 24376  00449A  0101               	movlb	1	; () banked
 24377  00449C  510D               	movf	delCmdFsm@numberInMemory& (0+255),w,b
 24378  00449E  EC00  F036         	call	_saveNumberInMemory
 24379                           
 24380                           ;cmd_del.c: 110: currentState = DEL_FSM_COMPLETE;
 24381  0044A2  0E02               	movlw	2
 24382  0044A4  0101               	movlb	1	; () banked
 24383  0044A6  6FD8               	movwf	delCmdFsm@currentState& (0+255),b
 24384                           
 24385                           ; BSR set to: 1
 24386                           ;cmd_del.c: 111: *isCmdSuccessfull = 1;
 24387  0044A8  C109  FFD9         	movff	delCmdFsm@isCmdSuccessfull,fsr2l
 24388  0044AC  C10A  FFDA         	movff	delCmdFsm@isCmdSuccessfull+1,fsr2h
 24389  0044B0  0E01               	movlw	1
 24390  0044B2  6EDF               	movwf	indf2,c
 24391                           
 24392                           ;cmd_del.c: 112: }
 24393  0044B4  D018               	goto	l2691
 24394  0044B6                     l2693:
 24395                           
 24396                           ; BSR set to: 1
 24397                           ;cmd_del.c: 113: else if (searchNumber == SEARCH_FSM_NOT_FOUND || searchNumber == SEARCH
      +                          _FSM_ERROR)
 24398                           
 24399                           ; BSR set to: 1
 24400  0044B6  0E04               	movlw	4
 24401  0044B8  190E               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 24402  0044BA  B4D8               	btfsc	status,2,c
 24403  0044BC  D004               	goto	u16430
 24404                           
 24405                           ; BSR set to: 1
 24406  0044BE  0E02               	movlw	2
 24407  0044C0  190E               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 24408  0044C2                     L101:
 24409  0044C2  A4D8               	btfss	status,2,c
 24410  0044C4  D010               	goto	l2691
 24411  0044C6                     u16430:
 24412                           
 24413                           ; BSR set to: 1
 24414                           ;cmd_del.c: 114: {
 24415                           ;cmd_del.c: 115: currentState = DEL_FSM_COMPLETE;
 24416                           
 24417                           ; BSR set to: 1
 24418  0044C6  0E02               	movlw	2
 24419  0044C8  D7CF               	goto	L44
 24420  0044CA                     
 24421                           ; BSR set to: 1
 24422                           ;cmd_del.c: 120: isComplete = 1;
 24423                           
 24424                           ; BSR set to: 1
 24425  0044CA  0E01               	movlw	1
 24426  0044CC  6F0B               	movwf	delCmdFsm@isComplete& (0+255),b
 24427                           
 24428                           ;cmd_del.c: 121: currentState = DEL_FSM_CHECK_MASTER;
 24429  0044CE  0E00               	movlw	0
 24430  0044D0  D7CB               	goto	L44
 24431  0044D2                     l2686:
 24432                           
 24433                           ; BSR set to: 1
 24434                           
 24435                           ; BSR set to: 1
 24436  0044D2  51D8               	movf	delCmdFsm@currentState& (0+255),w,b
 24437                           
 24438                           ; Switch size 1, requested type "space"
 24439                           ; Number of cases is 3, Range of values is 0 to 2
 24440                           ; switch strategies available:
 24441                           ; Name         Instructions Cycles
 24442                           ; simple_byte           10     6 (average)
 24443                           ;	Chosen strategy is simple_byte
 24444  0044D4  0A00               	xorlw	0	; case 0
 24445  0044D6  B4D8               	btfsc	status,2,c
 24446  0044D8  D7B2               	goto	l2687
 24447  0044DA  0A01               	xorlw	1	; case 1
 24448  0044DC  B4D8               	btfsc	status,2,c
 24449  0044DE  D7C6               	goto	l2692
 24450  0044E0  0A03               	xorlw	3	; case 2
 24451  0044E2  B4D8               	btfsc	status,2,c
 24452  0044E4  D7F2               	goto	l2698
 24453  0044E6                     l2691:
 24454                           
 24455                           ; BSR set to: 1
 24456                           ;cmd_del.c: 127: return isComplete;
 24457                           
 24458                           ; BSR set to: 1
 24459  0044E6  510B               	movf	delCmdFsm@isComplete& (0+255),w,b
 24460  0044E8  0012               	return	
 24461  0044EA                     __end_of_delCmdFsm:
 24462                           	opt stack 0
 24463                           tosu	equ	0xFFF
 24464                           tosh	equ	0xFFE
 24465                           tosl	equ	0xFFD
 24466                           pclath	equ	0xFFA
 24467                           tblptru	equ	0xFF8
 24468                           tblptrh	equ	0xFF7
 24469                           tblptrl	equ	0xFF6
 24470                           tablat	equ	0xFF5
 24471                           prodh	equ	0xFF4
 24472                           prodl	equ	0xFF3
 24473                           intcon	equ	0xFF2
 24474                           intcon2	equ	0xFF1
 24475                           intcon3	equ	0xFF0
 24476                           indf0	equ	0xFEF
 24477                           postinc0	equ	0xFEE
 24478                           plusw0	equ	0xFEB
 24479                           fsr0h	equ	0xFEA
 24480                           fsr0l	equ	0xFE9
 24481                           wreg	equ	0xFE8
 24482                           indf1	equ	0xFE7
 24483                           postinc1	equ	0xFE6
 24484                           postdec1	equ	0xFE5
 24485                           fsr1h	equ	0xFE2
 24486                           fsr1l	equ	0xFE1
 24487                           indf2	equ	0xFDF
 24488                           postinc2	equ	0xFDE
 24489                           postdec2	equ	0xFDD
 24490                           plusw2	equ	0xFDB
 24491                           fsr2h	equ	0xFDA
 24492                           fsr2l	equ	0xFD9
 24493                           status	equ	0xFD8
 24494                           
 24495 ;; *************** function _cmdVisualEffet *****************
 24496 ;; Defined at:
 24497 ;;		line 117 in file "../Source/c/04_App/utils.c"
 24498 ;; Parameters:    Size  Location     Type
 24499 ;;  isCmdSuccess    1    wreg     unsigned char 
 24500 ;; Auto vars:     Size  Location     Type
 24501 ;;  isCmdSuccess    1   51[BANK0 ] unsigned char 
 24502 ;;  seconds         1   52[BANK0 ] unsigned char 
 24503 ;; Return value:  Size  Location     Type
 24504 ;;                  1    wreg      void 
 24505 ;; Registers used:
 24506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24507 ;; Tracked objects:
 24508 ;;		On entry : 0/0
 24509 ;;		On exit  : 0/0
 24510 ;;		Unchanged: 0/0
 24511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24513 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24515 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24516 ;;Total ram usage:        2 bytes
 24517 ;; Hardware stack levels used:    1
 24518 ;; Hardware stack levels required when called:   13
 24519 ;; This function calls:
 24520 ;;		_Led_SetLedStatus
 24521 ;;		_secondsAppTimer
 24522 ;; This function is called by:
 24523 ;;		_MyApp_Task
 24524 ;; This function uses a non-reentrant model
 24525 ;;
 24526                           
 24527                           	psect	text115
 24528  0061FC                     __ptext115:
 24529                           	opt stack 0
 24530  0061FC                     _cmdVisualEffet:
 24531                           	opt stack 14
 24532                           
 24533                           ; BSR set to: 1
 24534                           ;incstack = 0
 24535                           ;cmdVisualEffet@isCmdSuccessfull stored from wreg
 24536  0061FC  0100               	movlb	0	; () banked
 24537  0061FE  6F93               	movwf	cmdVisualEffet@isCmdSuccessfull& (0+255),b
 24538                           
 24539                           ;utils.c: 119: uint8_t seconds = 7;
 24540  006200  0E07               	movlw	7
 24541  006202  0100               	movlb	0	; () banked
 24542  006204  6F94               	movwf	cmdVisualEffet@seconds& (0+255),b
 24543                           
 24544                           ; BSR set to: 0
 24545                           ;utils.c: 120: if (isCmdSuccessfull)
 24546  006206  5193               	movf	cmdVisualEffet@isCmdSuccessfull& (0+255),w,b
 24547  006208  B4D8               	btfsc	status,2,c
 24548  00620A  D002               	goto	l2912
 24549                           
 24550                           ; BSR set to: 0
 24551                           ;utils.c: 121: {
 24552                           ;utils.c: 122: seconds = 3;
 24553  00620C  0E03               	movlw	3
 24554  00620E  6F94               	movwf	cmdVisualEffet@seconds& (0+255),b
 24555  006210                     l2912:
 24556                           
 24557                           ; BSR set to: 0
 24558                           ;utils.c: 123: }
 24559                           ;utils.c: 124: if (secondsAppTimer(seconds, &blinkInSeconds, 0))
 24560                           
 24561                           ; BSR set to: 0
 24562  006210  0EFD               	movlw	low _blinkInSeconds
 24563  006212  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 24564  006214  0E03               	movlw	high _blinkInSeconds
 24565  006216  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 24566  006218  0E00               	movlw	0
 24567  00621A  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 24568  00621C  5194               	movf	cmdVisualEffet@seconds& (0+255),w,b
 24569  00621E  EC35  F025         	call	_secondsAppTimer
 24570  006222  0900               	iorlw	0
 24571  006224  B4D8               	btfsc	status,2,c
 24572  006226  D007               	goto	l2913
 24573                           
 24574                           ;utils.c: 125: {
 24575                           ;utils.c: 126: Led_SetLedStatus(2u, LED_STS_OFF);
 24576  006228  0E00               	movlw	0
 24577  00622A  0100               	movlb	0	; () banked
 24578  00622C  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 24579  00622E  0E02               	movlw	2
 24580  006230  EC05  F034         	call	_Led_SetLedStatus
 24581                           
 24582                           ;utils.c: 127: }
 24583  006234  0012               	return	
 24584  006236                     l2913:
 24585                           
 24586                           ;utils.c: 128: else
 24587                           ;utils.c: 129: {
 24588                           ;utils.c: 130: Led_SetLedStatus(2u, LED_STS_BLINK);
 24589  006236  0E03               	movlw	3
 24590  006238  0100               	movlb	0	; () banked
 24591  00623A  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 24592  00623C  0E02               	movlw	2
 24593  00623E  EC05  F034         	call	_Led_SetLedStatus
 24594  006242  0012               	return	
 24595  006244                     __end_of_cmdVisualEffet:
 24596                           	opt stack 0
 24597                           tosu	equ	0xFFF
 24598                           tosh	equ	0xFFE
 24599                           tosl	equ	0xFFD
 24600                           pclath	equ	0xFFA
 24601                           tblptru	equ	0xFF8
 24602                           tblptrh	equ	0xFF7
 24603                           tblptrl	equ	0xFF6
 24604                           tablat	equ	0xFF5
 24605                           prodh	equ	0xFF4
 24606                           prodl	equ	0xFF3
 24607                           intcon	equ	0xFF2
 24608                           intcon2	equ	0xFF1
 24609                           intcon3	equ	0xFF0
 24610                           indf0	equ	0xFEF
 24611                           postinc0	equ	0xFEE
 24612                           plusw0	equ	0xFEB
 24613                           fsr0h	equ	0xFEA
 24614                           fsr0l	equ	0xFE9
 24615                           wreg	equ	0xFE8
 24616                           indf1	equ	0xFE7
 24617                           postinc1	equ	0xFE6
 24618                           postdec1	equ	0xFE5
 24619                           fsr1h	equ	0xFE2
 24620                           fsr1l	equ	0xFE1
 24621                           indf2	equ	0xFDF
 24622                           postinc2	equ	0xFDE
 24623                           postdec2	equ	0xFDD
 24624                           plusw2	equ	0xFDB
 24625                           fsr2h	equ	0xFDA
 24626                           fsr2l	equ	0xFD9
 24627                           status	equ	0xFD8
 24628                           
 24629 ;; *************** function _secondsAppTimer *****************
 24630 ;; Defined at:
 24631 ;;		line 80 in file "../Source/c/04_App/utils.c"
 24632 ;; Parameters:    Size  Location     Type
 24633 ;;  seconds         1    wreg     unsigned char 
 24634 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 24635 ;;		 -> blinkInSeconds(2), secondCounter(2), setupCallTicks(2), initGprsModem@modemCounter(2), 
 24636 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 24637 ;; Auto vars:     Size  Location     Type
 24638 ;;  seconds         1   47[BANK0 ] unsigned char 
 24639 ;;  destinationT    2   49[BANK0 ] unsigned int 
 24640 ;;  isExpired       1   48[BANK0 ] unsigned char 
 24641 ;; Return value:  Size  Location     Type
 24642 ;;                  1    wreg      unsigned char 
 24643 ;; Registers used:
 24644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24645 ;; Tracked objects:
 24646 ;;		On entry : 0/0
 24647 ;;		On exit  : 0/0
 24648 ;;		Unchanged: 0/0
 24649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24650 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24651 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24652 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24653 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24654 ;;Total ram usage:        9 bytes
 24655 ;; Hardware stack levels used:    1
 24656 ;; Hardware stack levels required when called:   12
 24657 ;; This function calls:
 24658 ;;		___lwdiv
 24659 ;;		___wmul
 24660 ;; This function is called by:
 24661 ;;		_initGprsModem
 24662 ;;		_waitSetupCall
 24663 ;;		_triggerCmdFsm
 24664 ;;		_cmdVisualEffet
 24665 ;; This function uses a non-reentrant model
 24666 ;;
 24667                           
 24668                           	psect	text116
 24669  004A6A                     __ptext116:
 24670                           	opt stack 0
 24671  004A6A                     _secondsAppTimer:
 24672                           	opt stack 14
 24673                           
 24674                           ;incstack = 0
 24675                           ;secondsAppTimer@seconds stored from wreg
 24676  004A6A  0100               	movlb	0	; () banked
 24677  004A6C  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 24678                           
 24679                           ;utils.c: 82: bool isExpired = 1;
 24680  004A6E  0E01               	movlw	1
 24681  004A70  0100               	movlb	0	; () banked
 24682  004A72  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 24683                           
 24684                           ; BSR set to: 0
 24685                           ;utils.c: 83: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(100));
 24686  004A74  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 24687  004A78  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 24688  004A7A  0E03               	movlw	3
 24689  004A7C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24690  004A7E  0EE8               	movlw	232
 24691  004A80  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 24692  004A82  EC8B  F034         	call	___wmul	;wreg free
 24693  004A86  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 24694  004A8A  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 24695  004A8E  0E00               	movlw	0
 24696  004A90  0100               	movlb	0	; () banked
 24697  004A92  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24698  004A94  0E64               	movlw	100
 24699  004A96  6F85               	movwf	___lwdiv@divisor& (0+255),b
 24700  004A98  ECFC  F02E         	call	___lwdiv	;wreg free
 24701  004A9C  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 24702  004AA0  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 24703                           
 24704                           ;utils.c: 85: if (*counter < destinationTicks)
 24705  004AA4  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24706  004AA8  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24707  004AAC  0100               	movlb	0	; () banked
 24708  004AAE  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 24709  004AB0  5CDE               	subwf	postinc2,w,c
 24710  004AB2  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 24711  004AB4  58DE               	subwfb	postinc2,w,c
 24712  004AB6  B0D8               	btfsc	status,0,c
 24713  004AB8  D009               	goto	l2902
 24714                           
 24715                           ; BSR set to: 0
 24716                           ;utils.c: 86: {
 24717                           ;utils.c: 87: *counter += 1;
 24718  004ABA  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24719  004ABE  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24720  004AC2  2ADE               	incf	postinc2,f,c
 24721  004AC4  0E00               	movlw	0
 24722  004AC6  22DD               	addwfc	postdec2,f,c
 24723                           
 24724                           ; BSR set to: 0
 24725                           ;utils.c: 88: isExpired = 0;
 24726  004AC8  0E00               	movlw	0
 24727  004ACA  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 24728  004ACC                     l2902:
 24729                           
 24730                           ; BSR set to: 0
 24731                           ;utils.c: 89: }
 24732                           ;utils.c: 90: if (*counter == destinationTicks)
 24733                           
 24734                           ; BSR set to: 0
 24735  004ACC  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24736  004AD0  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24737  004AD4  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 24738  004AD6  18DE               	xorwf	postinc2,w,c
 24739  004AD8  E117               	bnz	l14503
 24740  004ADA  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 24741  004ADC  18DE               	xorwf	postinc2,w,c
 24742  004ADE  A4D8               	btfss	status,2,c
 24743  004AE0  D013               	goto	l2905
 24744                           
 24745                           ; BSR set to: 0
 24746                           ;utils.c: 91: {
 24747                           ;utils.c: 92: if (isCyclic)
 24748  004AE2  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 24749  004AE4  B4D8               	btfsc	status,2,c
 24750  004AE6  D008               	goto	l2904
 24751                           
 24752                           ; BSR set to: 0
 24753                           ;utils.c: 93: {
 24754                           ;utils.c: 94: *counter = 0;
 24755  004AE8  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24756  004AEC  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24757  004AF0  0E00               	movlw	0
 24758  004AF2  6EDE               	movwf	postinc2,c
 24759  004AF4  0E00               	movlw	0
 24760  004AF6  D007               	goto	L45
 24761  004AF8                     l2904:
 24762                           
 24763                           ; BSR set to: 0
 24764                           ;utils.c: 96: else
 24765                           ;utils.c: 97: {
 24766                           ;utils.c: 98: *counter = 0xFFFF;
 24767                           
 24768                           ; BSR set to: 0
 24769  004AF8  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24770  004AFC  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24771  004B00  0EFF               	movlw	255
 24772  004B02  6EDE               	movwf	postinc2,c
 24773  004B04  0EFF               	movlw	255
 24774  004B06                     L45:
 24775  004B06  6EDD               	movwf	postdec2,c
 24776  004B08                     l2905:
 24777  004B08                     l14503:
 24778                           
 24779                           ; BSR set to: 0
 24780                           ;utils.c: 99: }
 24781                           ;utils.c: 100: }
 24782                           ;utils.c: 101: return isExpired;
 24783  004B08  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 24784  004B0A  0012               	return	
 24785  004B0C                     __end_of_secondsAppTimer:
 24786                           	opt stack 0
 24787                           tosu	equ	0xFFF
 24788                           tosh	equ	0xFFE
 24789                           tosl	equ	0xFFD
 24790                           pclath	equ	0xFFA
 24791                           tblptru	equ	0xFF8
 24792                           tblptrh	equ	0xFF7
 24793                           tblptrl	equ	0xFF6
 24794                           tablat	equ	0xFF5
 24795                           prodh	equ	0xFF4
 24796                           prodl	equ	0xFF3
 24797                           intcon	equ	0xFF2
 24798                           intcon2	equ	0xFF1
 24799                           intcon3	equ	0xFF0
 24800                           indf0	equ	0xFEF
 24801                           postinc0	equ	0xFEE
 24802                           plusw0	equ	0xFEB
 24803                           fsr0h	equ	0xFEA
 24804                           fsr0l	equ	0xFE9
 24805                           wreg	equ	0xFE8
 24806                           indf1	equ	0xFE7
 24807                           postinc1	equ	0xFE6
 24808                           postdec1	equ	0xFE5
 24809                           fsr1h	equ	0xFE2
 24810                           fsr1l	equ	0xFE1
 24811                           indf2	equ	0xFDF
 24812                           postinc2	equ	0xFDE
 24813                           postdec2	equ	0xFDD
 24814                           plusw2	equ	0xFDB
 24815                           fsr2h	equ	0xFDA
 24816                           fsr2l	equ	0xFD9
 24817                           status	equ	0xFD8
 24818                           
 24819 ;; *************** function _addCmdFsm *****************
 24820 ;; Defined at:
 24821 ;;		line 79 in file "../Source/c/04_App/cmd_add.c"
 24822 ;; Parameters:    Size  Location     Type
 24823 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 24824 ;;		 -> receivedNumber(13), 
 24825 ;;  smsText         2    7[BANK1 ] PTR unsigned char 
 24826 ;;		 -> smsText(20), 
 24827 ;;  isCmdSuccess    2    9[BANK1 ] PTR unsigned char 
 24828 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 24829 ;; Auto vars:     Size  Location     Type
 24830 ;;  searchNumber    1   14[BANK1 ] unsigned char 
 24831 ;;  numberInMemo    1   13[BANK1 ] unsigned char 
 24832 ;;  masterOpResu    1   12[BANK1 ] unsigned char 
 24833 ;;  isComplete      1   11[BANK1 ] unsigned char 
 24834 ;; Return value:  Size  Location     Type
 24835 ;;                  1    wreg      unsigned char 
 24836 ;; Registers used:
 24837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24838 ;; Tracked objects:
 24839 ;;		On entry : 0/0
 24840 ;;		On exit  : 0/0
 24841 ;;		Unchanged: 0/0
 24842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24843 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24844 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24846 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24847 ;;Total ram usage:       10 bytes
 24848 ;; Hardware stack levels used:    1
 24849 ;; Hardware stack levels required when called:   18
 24850 ;; This function calls:
 24851 ;;		_findEmptySpot
 24852 ;;		_isMasterNumber
 24853 ;;		_isNumberInMemory
 24854 ;;		_saveNumberInMemory
 24855 ;; This function is called by:
 24856 ;;		_MyApp_Task
 24857 ;; This function uses a non-reentrant model
 24858 ;;
 24859                           
 24860                           	psect	text117
 24861  0033A8                     __ptext117:
 24862                           	opt stack 0
 24863  0033A8                     _addCmdFsm:
 24864                           	opt stack 9
 24865                           
 24866                           ;cmd_add.c: 81: static addFsmStates currentState = ADD_FSM_CHECK_MASTER;
 24867                           ;cmd_add.c: 82: bool isComplete = 0;
 24868                           
 24869                           ; BSR set to: 0
 24870                           ;incstack = 0
 24871  0033A8  0E00               	movlw	0
 24872  0033AA  0101               	movlb	1	; () banked
 24873  0033AC  6F0B               	movwf	addCmdFsm@isComplete& (0+255),b
 24874                           
 24875                           ;cmd_add.c: 83: uint8_t numberInMemory = 0;
 24876  0033AE  0E00               	movlw	0
 24877  0033B0  6F0D               	movwf	addCmdFsm@numberInMemory& (0+255),b
 24878                           
 24879                           ;cmd_add.c: 84: uint8_t masterOpResult = OP_FAILED;
 24880  0033B2  0E01               	movlw	1
 24881  0033B4  6F0C               	movwf	addCmdFsm@masterOpResult& (0+255),b
 24882                           
 24883                           ;cmd_add.c: 85: uint8_t searchNumber = OP_FAILED;
 24884  0033B6  0E01               	movlw	1
 24885  0033B8  6F0E               	movwf	addCmdFsm@searchNumber& (0+255),b
 24886                           
 24887                           ;cmd_add.c: 87: switch (currentState)
 24888  0033BA  D05E               	goto	l2647
 24889  0033BC                     
 24890                           ; BSR set to: 1
 24891                           ;cmd_add.c: 90: *isCmdSuccessfull = 0;
 24892                           
 24893                           ; BSR set to: 1
 24894  0033BC  C109  FFD9         	movff	addCmdFsm@isCmdSuccessfull,fsr2l
 24895  0033C0  C10A  FFDA         	movff	addCmdFsm@isCmdSuccessfull+1,fsr2h
 24896  0033C4  0E00               	movlw	0
 24897  0033C6  6EDF               	movwf	indf2,c
 24898                           
 24899                           ; BSR set to: 1
 24900                           ;cmd_add.c: 91: masterOpResult = isMasterNumber(receivedNumber);
 24901  0033C8  C105  F100         	movff	addCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 24902  0033CC  C106  F101         	movff	addCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 24903  0033D0  EC4C  F02B         	call	_isMasterNumber	;wreg free
 24904  0033D4  0101               	movlb	1	; () banked
 24905  0033D6  6F0C               	movwf	addCmdFsm@masterOpResult& (0+255),b
 24906                           
 24907                           ; BSR set to: 1
 24908                           ;cmd_add.c: 92: if (masterOpResult == OP_SUCCESS)
 24909  0033D8  510C               	movf	addCmdFsm@masterOpResult& (0+255),w,b
 24910  0033DA  A4D8               	btfss	status,2,c
 24911  0033DC  D002               	goto	l2649
 24912                           
 24913                           ; BSR set to: 1
 24914                           ;cmd_add.c: 93: {
 24915                           ;cmd_add.c: 94: currentState = ADD_FSM_CHECK_DUPLICATED;
 24916  0033DE  0E01               	movlw	1
 24917  0033E0  D01F               	goto	L48
 24918  0033E2                     l2649:
 24919                           
 24920                           ; BSR set to: 1
 24921                           ;cmd_add.c: 96: else if (masterOpResult == OP_FAILED)
 24922                           
 24923                           ; BSR set to: 1
 24924  0033E2  050C               	decf	addCmdFsm@masterOpResult& (0+255),w,b
 24925  0033E4                     L49:
 24926  0033E4  A4D8               	btfss	status,2,c
 24927  0033E6  D055               	goto	l2652
 24928  0033E8  D040               	goto	u16380
 24929  0033EA                     
 24930                           ; BSR set to: 1
 24931                           ;cmd_add.c: 103: searchNumber = isNumberInMemory(smsText + 4, &numberInMemory);
 24932                           
 24933                           ; BSR set to: 1
 24934  0033EA  0E04               	movlw	4
 24935  0033EC  2507               	addwf	addCmdFsm@smsText& (0+255),w,b
 24936  0033EE  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 24937  0033F0  0E00               	movlw	0
 24938  0033F2  2108               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 24939  0033F4  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 24940  0033F6  0E0D               	movlw	low addCmdFsm@numberInMemory
 24941  0033F8  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 24942  0033FA  0E01               	movlw	high addCmdFsm@numberInMemory
 24943  0033FC  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 24944  0033FE  ECD4  F022         	call	_isNumberInMemory	;wreg free
 24945  003402  0101               	movlb	1	; () banked
 24946  003404  6F0E               	movwf	addCmdFsm@searchNumber& (0+255),b
 24947                           
 24948                           ; BSR set to: 1
 24949                           ;cmd_add.c: 104: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 24950  003406  0E04               	movlw	4
 24951  003408  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24952  00340A  A4D8               	btfss	status,2,c
 24953  00340C  D002               	goto	l2654
 24954                           
 24955                           ; BSR set to: 1
 24956                           ;cmd_add.c: 105: {
 24957                           ;cmd_add.c: 106: currentState = ADD_FSM_SAVE_NEW;
 24958  00340E  0E02               	movlw	2
 24959  003410  D007               	goto	L48
 24960  003412                     l2654:
 24961                           
 24962                           ; BSR set to: 1
 24963                           ;cmd_add.c: 108: else if (searchNumber == SEARCH_FSM_FOUND || searchNumber == SEARCH_FSM
      +                          _ERROR)
 24964                           
 24965                           ; BSR set to: 1
 24966  003412  0E03               	movlw	3
 24967  003414  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24968  003416  B4D8               	btfsc	status,2,c
 24969  003418  D028               	goto	u16380
 24970                           
 24971                           ; BSR set to: 1
 24972  00341A  0E02               	movlw	2
 24973  00341C  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24974  00341E  D7E2               	goto	L49
 24975  003420                     L48:
 24976  003420  6FD9               	movwf	addCmdFsm@currentState& (0+255),b
 24977                           
 24978                           ; BSR set to: 1
 24979                           ;cmd_add.c: 111: }
 24980                           ;cmd_add.c: 112: break;
 24981                           
 24982                           ; BSR set to: 1
 24983  003422  D037               	goto	l2652
 24984  003424                     
 24985                           ; BSR set to: 1
 24986                           ;cmd_add.c: 115: searchNumber = findEmptySpot(&numberInMemory);
 24987                           
 24988                           ; BSR set to: 1
 24989  003424  0E0D               	movlw	low addCmdFsm@numberInMemory
 24990  003426  6F00               	movwf	findEmptySpot@positionInMemory& (0+255),b
 24991  003428  0E01               	movlw	high addCmdFsm@numberInMemory
 24992  00342A  6F01               	movwf	(findEmptySpot@positionInMemory+1)& (0+255),b
 24993  00342C  EC55  F027         	call	_findEmptySpot	;wreg free
 24994  003430  0101               	movlb	1	; () banked
 24995  003432  6F0E               	movwf	addCmdFsm@searchNumber& (0+255),b
 24996                           
 24997                           ; BSR set to: 1
 24998                           ;cmd_add.c: 116: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 24999  003434  0E04               	movlw	4
 25000  003436  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 25001  003438  A4D8               	btfss	status,2,c
 25002  00343A  D7EB               	goto	l2654
 25003                           
 25004                           ; BSR set to: 1
 25005                           ;cmd_add.c: 117: {
 25006                           ;cmd_add.c: 118: saveNumberInMemory(numberInMemory, smsText + 4);
 25007  00343C  0E04               	movlw	4
 25008  00343E  2507               	addwf	addCmdFsm@smsText& (0+255),w,b
 25009  003440  0100               	movlb	0	; () banked
 25010  003442  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 25011  003444  0E00               	movlw	0
 25012  003446  0101               	movlb	1	; () banked
 25013  003448  2108               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 25014  00344A  0100               	movlb	0	; () banked
 25015  00344C  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 25016  00344E  0101               	movlb	1	; () banked
 25017  003450  510D               	movf	addCmdFsm@numberInMemory& (0+255),w,b
 25018  003452  EC00  F036         	call	_saveNumberInMemory
 25019                           
 25020                           ;cmd_add.c: 119: currentState = ADD_FSM_COMPLETE;
 25021  003456  0E03               	movlw	3
 25022  003458  0101               	movlb	1	; () banked
 25023  00345A  6FD9               	movwf	addCmdFsm@currentState& (0+255),b
 25024                           
 25025                           ; BSR set to: 1
 25026                           ;cmd_add.c: 120: *isCmdSuccessfull = 1;
 25027  00345C  C109  FFD9         	movff	addCmdFsm@isCmdSuccessfull,fsr2l
 25028  003460  C10A  FFDA         	movff	addCmdFsm@isCmdSuccessfull+1,fsr2h
 25029  003464  0E01               	movlw	1
 25030  003466  6EDF               	movwf	indf2,c
 25031                           
 25032                           ;cmd_add.c: 121: }
 25033  003468  D014               	goto	l2652
 25034  00346A                     u16380:
 25035                           
 25036                           ; BSR set to: 1
 25037                           ;cmd_add.c: 123: {
 25038                           ;cmd_add.c: 124: currentState = ADD_FSM_COMPLETE;
 25039                           
 25040                           ; BSR set to: 1
 25041  00346A  0E03               	movlw	3
 25042  00346C  D7D9               	goto	L48
 25043  00346E                     
 25044                           ; BSR set to: 1
 25045                           ;cmd_add.c: 129: currentState = ADD_FSM_CHECK_MASTER;
 25046                           
 25047                           ; BSR set to: 1
 25048  00346E  0E00               	movlw	0
 25049  003470  6FD9               	movwf	addCmdFsm@currentState& (0+255),b
 25050                           
 25051                           ;cmd_add.c: 130: isComplete = 1;
 25052  003472  0E01               	movlw	1
 25053  003474  6F0B               	movwf	addCmdFsm@isComplete& (0+255),b
 25054                           
 25055                           ; BSR set to: 1
 25056                           ;cmd_add.c: 135: }
 25057                           
 25058                           ; BSR set to: 1
 25059                           ;cmd_add.c: 134: break;
 25060                           
 25061                           ;cmd_add.c: 133: default:
 25062                           
 25063                           ;cmd_add.c: 131: break;
 25064  003476  D00D               	goto	l2652
 25065  003478                     l2647:
 25066                           
 25067                           ; BSR set to: 1
 25068                           
 25069                           ; BSR set to: 1
 25070  003478  51D9               	movf	addCmdFsm@currentState& (0+255),w,b
 25071                           
 25072                           ; Switch size 1, requested type "space"
 25073                           ; Number of cases is 4, Range of values is 0 to 3
 25074                           ; switch strategies available:
 25075                           ; Name         Instructions Cycles
 25076                           ; simple_byte           13     7 (average)
 25077                           ;	Chosen strategy is simple_byte
 25078  00347A  0A00               	xorlw	0	; case 0
 25079  00347C  B4D8               	btfsc	status,2,c
 25080  00347E  D79E               	goto	l2648
 25081  003480  0A01               	xorlw	1	; case 1
 25082  003482  B4D8               	btfsc	status,2,c
 25083  003484  D7B2               	goto	l2653
 25084  003486  0A03               	xorlw	3	; case 2
 25085  003488  B4D8               	btfsc	status,2,c
 25086  00348A  D7CC               	goto	l2659
 25087  00348C  0A01               	xorlw	1	; case 3
 25088  00348E  B4D8               	btfsc	status,2,c
 25089  003490  D7EE               	goto	l2665
 25090  003492                     l2652:
 25091                           
 25092                           ; BSR set to: 1
 25093                           ;cmd_add.c: 136: return isComplete;
 25094                           
 25095                           ; BSR set to: 1
 25096  003492  510B               	movf	addCmdFsm@isComplete& (0+255),w,b
 25097  003494  0012               	return	
 25098  003496                     __end_of_addCmdFsm:
 25099                           	opt stack 0
 25100                           tosu	equ	0xFFF
 25101                           tosh	equ	0xFFE
 25102                           tosl	equ	0xFFD
 25103                           pclath	equ	0xFFA
 25104                           tblptru	equ	0xFF8
 25105                           tblptrh	equ	0xFF7
 25106                           tblptrl	equ	0xFF6
 25107                           tablat	equ	0xFF5
 25108                           prodh	equ	0xFF4
 25109                           prodl	equ	0xFF3
 25110                           intcon	equ	0xFF2
 25111                           intcon2	equ	0xFF1
 25112                           intcon3	equ	0xFF0
 25113                           indf0	equ	0xFEF
 25114                           postinc0	equ	0xFEE
 25115                           plusw0	equ	0xFEB
 25116                           fsr0h	equ	0xFEA
 25117                           fsr0l	equ	0xFE9
 25118                           wreg	equ	0xFE8
 25119                           indf1	equ	0xFE7
 25120                           postinc1	equ	0xFE6
 25121                           postdec1	equ	0xFE5
 25122                           fsr1h	equ	0xFE2
 25123                           fsr1l	equ	0xFE1
 25124                           indf2	equ	0xFDF
 25125                           postinc2	equ	0xFDE
 25126                           postdec2	equ	0xFDD
 25127                           plusw2	equ	0xFDB
 25128                           fsr2h	equ	0xFDA
 25129                           fsr2l	equ	0xFD9
 25130                           status	equ	0xFD8
 25131                           
 25132 ;; *************** function _saveNumberInMemory *****************
 25133 ;; Defined at:
 25134 ;;		line 140 in file "../Source/c/04_App/utils.c"
 25135 ;; Parameters:    Size  Location     Type
 25136 ;;  address         1    wreg     unsigned char 
 25137 ;;  phoneNumber     2   54[BANK0 ] PTR unsigned char 
 25138 ;;		 -> emptyNumber(13), smsText(20), UsbMasterPhoneNumber(15), callerNumber(13), 
 25139 ;; Auto vars:     Size  Location     Type
 25140 ;;  address         1   56[BANK0 ] unsigned char 
 25141 ;; Return value:  Size  Location     Type
 25142 ;;                  1    wreg      void 
 25143 ;; Registers used:
 25144 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25145 ;; Tracked objects:
 25146 ;;		On entry : 0/0
 25147 ;;		On exit  : 0/0
 25148 ;;		Unchanged: 0/0
 25149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25150 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25153 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25154 ;;Total ram usage:        3 bytes
 25155 ;; Hardware stack levels used:    1
 25156 ;; Hardware stack levels required when called:   14
 25157 ;; This function calls:
 25158 ;;		_Eeprom_Write
 25159 ;; This function is called by:
 25160 ;;		_addCmdFsm
 25161 ;;		_delCmdFsm
 25162 ;;		_initFsm
 25163 ;;		_detectUsbNumber
 25164 ;; This function uses a non-reentrant model
 25165 ;;
 25166                           
 25167                           	psect	text118
 25168  006C00                     __ptext118:
 25169                           	opt stack 0
 25170  006C00                     _saveNumberInMemory:
 25171                           	opt stack 12
 25172                           
 25173                           ; BSR set to: 1
 25174                           ;incstack = 0
 25175                           ;saveNumberInMemory@address stored from wreg
 25176  006C00  0100               	movlb	0	; () banked
 25177  006C02  6F98               	movwf	saveNumberInMemory@address& (0+255),b
 25178                           
 25179                           ;utils.c: 142: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 25180  006C04  C096  F08F         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 25181  006C08  C097  F090         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 25182  006C0C  0E0D               	movlw	13
 25183  006C0E  0100               	movlb	0	; () banked
 25184  006C10  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 25185  006C12  5198               	movf	saveNumberInMemory@address& (0+255),w,b
 25186  006C14  EC4F  F02F         	call	_Eeprom_Write
 25187  006C18  0012               	return		;funcret
 25188  006C1A                     __end_of_saveNumberInMemory:
 25189                           	opt stack 0
 25190                           tosu	equ	0xFFF
 25191                           tosh	equ	0xFFE
 25192                           tosl	equ	0xFFD
 25193                           pclath	equ	0xFFA
 25194                           tblptru	equ	0xFF8
 25195                           tblptrh	equ	0xFF7
 25196                           tblptrl	equ	0xFF6
 25197                           tablat	equ	0xFF5
 25198                           prodh	equ	0xFF4
 25199                           prodl	equ	0xFF3
 25200                           intcon	equ	0xFF2
 25201                           intcon2	equ	0xFF1
 25202                           intcon3	equ	0xFF0
 25203                           indf0	equ	0xFEF
 25204                           postinc0	equ	0xFEE
 25205                           plusw0	equ	0xFEB
 25206                           fsr0h	equ	0xFEA
 25207                           fsr0l	equ	0xFE9
 25208                           wreg	equ	0xFE8
 25209                           indf1	equ	0xFE7
 25210                           postinc1	equ	0xFE6
 25211                           postdec1	equ	0xFE5
 25212                           fsr1h	equ	0xFE2
 25213                           fsr1l	equ	0xFE1
 25214                           indf2	equ	0xFDF
 25215                           postinc2	equ	0xFDE
 25216                           postdec2	equ	0xFDD
 25217                           plusw2	equ	0xFDB
 25218                           fsr2h	equ	0xFDA
 25219                           fsr2l	equ	0xFD9
 25220                           status	equ	0xFD8
 25221                           
 25222 ;; *************** function _Eeprom_Write *****************
 25223 ;; Defined at:
 25224 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 25225 ;; Parameters:    Size  Location     Type
 25226 ;;  MemoryAddres    1    wreg     unsigned char 
 25227 ;;  WriteBuffer     2   47[BANK0 ] PTR unsigned char 
 25228 ;;		 -> memoryPreamble(4), emptyNumber(13), smsText(20), UsbMasterPhoneNumber(15), 
 25229 ;;		 -> callerNumber(13), 
 25230 ;;  DataLength      1   49[BANK0 ] unsigned char 
 25231 ;; Auto vars:     Size  Location     Type
 25232 ;;  MemoryAddres    1   51[BANK0 ] unsigned char 
 25233 ;;  CommandLengt    1   53[BANK0 ] const unsigned char 
 25234 ;;  SlaveAddress    1   52[BANK0 ] const unsigned char 
 25235 ;;  WriteSts        1   50[BANK0 ] unsigned char 
 25236 ;; Return value:  Size  Location     Type
 25237 ;;                  1    wreg      unsigned char 
 25238 ;; Registers used:
 25239 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25240 ;; Tracked objects:
 25241 ;;		On entry : 0/0
 25242 ;;		On exit  : 0/0
 25243 ;;		Unchanged: 0/0
 25244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25245 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25246 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25248 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25249 ;;Total ram usage:        7 bytes
 25250 ;; Hardware stack levels used:    1
 25251 ;; Hardware stack levels required when called:   13
 25252 ;; This function calls:
 25253 ;;		_I2cSlv_SendI2cMsg
 25254 ;;		_StringCopy
 25255 ;; This function is called by:
 25256 ;;		_savePreamble
 25257 ;;		_saveNumberInMemory
 25258 ;; This function uses a non-reentrant model
 25259 ;;
 25260                           
 25261                           	psect	text119
 25262  005E9E                     __ptext119:
 25263                           	opt stack 0
 25264  005E9E                     _Eeprom_Write:
 25265                           	opt stack 12
 25266                           
 25267                           ;incstack = 0
 25268                           ;Eeprom_Write@MemoryAddress stored from wreg
 25269  005E9E  0100               	movlb	0	; () banked
 25270  005EA0  6F93               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 25271                           
 25272                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 25273  005EA2  0E50               	movlw	80
 25274  005EA4  0100               	movlb	0	; () banked
 25275  005EA6  6F94               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 25276                           
 25277                           ; BSR set to: 0
 25278                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 25279  005EA8  2991               	incf	Eeprom_Write@DataLength& (0+255),w,b
 25280  005EAA  6F95               	movwf	Eeprom_Write@CommandLength& (0+255),b
 25281                           
 25282                           ; BSR set to: 0
 25283                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 25284  005EAC  0E00               	movlw	0
 25285  005EAE  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 25286                           
 25287                           ; BSR set to: 0
 25288                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 25289  005EB0  0E10               	movlw	16
 25290  005EB2  6195               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 25291  005EB4  0012               	return	
 25292                           
 25293                           ; BSR set to: 0
 25294                           ;eeprom_if.c: 85: {
 25295                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 25296  005EB6  C093  F4A7         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 25297                           
 25298                           ; BSR set to: 0
 25299                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 25300  005EBA  C08F  F085         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 25301  005EBE  C090  F086         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 25302  005EC2  0EA8               	movlw	low (_EepromBuffer+1)
 25303  005EC4  6F87               	movwf	StringCopy@DestStr& (0+255),b
 25304  005EC6  0E04               	movlw	high (_EepromBuffer+1)
 25305  005EC8  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25306  005ECA  C091  F089         	movff	Eeprom_Write@DataLength,StringCopy@Len
 25307  005ECE  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 25308  005ED0  ECBC  F02C         	call	_StringCopy	;wreg free
 25309                           
 25310                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 25311  005ED4  0EA7               	movlw	low _EepromBuffer
 25312  005ED6  0100               	movlb	0	; () banked
 25313  005ED8  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 25314  005EDA  0E04               	movlw	high _EepromBuffer
 25315  005EDC  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 25316  005EDE  C094  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 25317  005EE2  C095  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 25318  005EE6  EC4E  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 25319  005EEA  0100               	movlb	0	; () banked
 25320  005EEC  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 25321                           
 25322                           ; BSR set to: 0
 25323  005EEE  0012               	return	
 25324  005EF0                     __end_of_Eeprom_Write:
 25325                           	opt stack 0
 25326                           tosu	equ	0xFFF
 25327                           tosh	equ	0xFFE
 25328                           tosl	equ	0xFFD
 25329                           pclath	equ	0xFFA
 25330                           tblptru	equ	0xFF8
 25331                           tblptrh	equ	0xFF7
 25332                           tblptrl	equ	0xFF6
 25333                           tablat	equ	0xFF5
 25334                           prodh	equ	0xFF4
 25335                           prodl	equ	0xFF3
 25336                           intcon	equ	0xFF2
 25337                           intcon2	equ	0xFF1
 25338                           intcon3	equ	0xFF0
 25339                           indf0	equ	0xFEF
 25340                           postinc0	equ	0xFEE
 25341                           plusw0	equ	0xFEB
 25342                           fsr0h	equ	0xFEA
 25343                           fsr0l	equ	0xFE9
 25344                           wreg	equ	0xFE8
 25345                           indf1	equ	0xFE7
 25346                           postinc1	equ	0xFE6
 25347                           postdec1	equ	0xFE5
 25348                           fsr1h	equ	0xFE2
 25349                           fsr1l	equ	0xFE1
 25350                           indf2	equ	0xFDF
 25351                           postinc2	equ	0xFDE
 25352                           postdec2	equ	0xFDD
 25353                           plusw2	equ	0xFDB
 25354                           fsr2h	equ	0xFDA
 25355                           fsr2l	equ	0xFD9
 25356                           status	equ	0xFD8
 25357                           
 25358 ;; *************** function _isNumberInMemory *****************
 25359 ;; Defined at:
 25360 ;;		line 181 in file "../Source/c/04_App/utils.c"
 25361 ;; Parameters:    Size  Location     Type
 25362 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 25363 ;;		 -> receivedNumber(13), smsText(20), 
 25364 ;;  positionInMe    2    2[BANK1 ] PTR unsigned char 
 25365 ;;		 -> triggerCmdFsm@numberInMemory(1), delCmdFsm@numberInMemory(1), addCmdFsm@numberInMemory(1), 
 25366 ;; Auto vars:     Size  Location     Type
 25367 ;;  memoryOpResu    1    4[BANK1 ] enum E8246
 25368 ;; Return value:  Size  Location     Type
 25369 ;;                  1    wreg      enum E8978
 25370 ;; Registers used:
 25371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25372 ;; Tracked objects:
 25373 ;;		On entry : 0/0
 25374 ;;		On exit  : 0/0
 25375 ;;		Unchanged: 0/0
 25376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25377 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25378 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25380 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25381 ;;Total ram usage:        5 bytes
 25382 ;; Hardware stack levels used:    1
 25383 ;; Hardware stack levels required when called:   17
 25384 ;; This function calls:
 25385 ;;		_Eeprom_Read
 25386 ;;		_StringCompare
 25387 ;;		_isNumberValid
 25388 ;; This function is called by:
 25389 ;;		_addCmdFsm
 25390 ;;		_delCmdFsm
 25391 ;;		_triggerCmdFsm
 25392 ;; This function uses a non-reentrant model
 25393 ;;
 25394                           
 25395                           	psect	text120
 25396  0045A8                     __ptext120:
 25397                           	opt stack 0
 25398  0045A8                     _isNumberInMemory:
 25399                           	opt stack 9
 25400                           
 25401                           ;utils.c: 183: static searchFsmStates currentState = SEARCH_FSM_START;
 25402                           ;utils.c: 184: static uint8_t currentPosition = 32;
 25403                           ;utils.c: 185: EepromStsType memoryOpResult = OP_PENDING;
 25404                           
 25405                           ; BSR set to: 0
 25406                           ;incstack = 0
 25407  0045A8  0E02               	movlw	2
 25408  0045AA  0101               	movlb	1	; () banked
 25409  0045AC  6F04               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 25410                           
 25411                           ; BSR set to: 1
 25412                           ;utils.c: 187: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 25413  0045AE  0E01               	movlw	1
 25414  0045B0  0100               	movlb	0	; () banked
 25415  0045B2  65C5               	cpfsgt	isNumberInMemory@currentState& (0+255),b
 25416  0045B4  D004               	goto	l2933
 25417                           
 25418                           ; BSR set to: 0
 25419                           ;utils.c: 188: {
 25420                           ;utils.c: 189: currentState = SEARCH_FSM_START;
 25421  0045B6  0E00               	movlw	0
 25422  0045B8  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25423                           
 25424                           ;utils.c: 190: currentPosition = 32;
 25425  0045BA  0E20               	movlw	32
 25426  0045BC  6FE1               	movwf	isNumberInMemory@currentPosition& (0+255),b
 25427  0045BE                     l2933:
 25428                           
 25429                           ; BSR set to: 0
 25430                           ;utils.c: 191: }
 25431                           ;utils.c: 192: if (currentPosition >= (32 + (16 * 10)))
 25432                           
 25433                           ; BSR set to: 0
 25434  0045BE  0EBF               	movlw	191
 25435  0045C0  65E1               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 25436  0045C2  D045               	goto	l2935
 25437                           
 25438                           ; BSR set to: 0
 25439                           ;utils.c: 193: {
 25440                           ;utils.c: 194: currentState = SEARCH_FSM_NOT_FOUND;
 25441  0045C4  0E04               	movlw	4
 25442  0045C6  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25443                           
 25444                           ; BSR set to: 0
 25445                           ;utils.c: 195: }
 25446                           ;utils.c: 197: switch (currentState)
 25447  0045C8  D042               	goto	l2935
 25448  0045CA                     
 25449                           ; BSR set to: 0
 25450                           ;utils.c: 200: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13)));
 25451                           
 25452                           ; BSR set to: 0
 25453  0045CA  0E37               	movlw	low _readBuffer
 25454  0045CC  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 25455  0045CE  0E03               	movlw	high _readBuffer
 25456  0045D0  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 25457  0045D2  0E0D               	movlw	13
 25458  0045D4  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 25459  0045D6  51E1               	movf	isNumberInMemory@currentPosition& (0+255),w,b
 25460  0045D8  ECA8  F02E         	call	_Eeprom_Read
 25461  0045DC  0101               	movlb	1	; () banked
 25462  0045DE  6F04               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 25463                           
 25464                           ; BSR set to: 1
 25465                           ;utils.c: 201: if (memoryOpResult == OP_FAILED)
 25466  0045E0  0504               	decf	isNumberInMemory@memoryOpResult& (0+255),w,b
 25467  0045E2  A4D8               	btfss	status,2,c
 25468  0045E4  D002               	goto	l2937
 25469                           
 25470                           ; BSR set to: 1
 25471                           ;utils.c: 202: {
 25472                           ;utils.c: 203: currentState = SEARCH_FSM_ERROR;
 25473  0045E6  0E02               	movlw	2
 25474  0045E8  D005               	goto	L50
 25475  0045EA                     l2937:
 25476                           
 25477                           ;utils.c: 205: else if (memoryOpResult == OP_SUCCESS)
 25478                           
 25479                           ; BSR set to: 0
 25480  0045EA  0101               	movlb	1	; () banked
 25481  0045EC  5104               	movf	isNumberInMemory@memoryOpResult& (0+255),w,b
 25482  0045EE  A4D8               	btfss	status,2,c
 25483  0045F0  D035               	goto	l2940
 25484                           
 25485                           ; BSR set to: 1
 25486                           ;utils.c: 206: {
 25487                           ;utils.c: 207: currentState = SEARCH_FSM_CHECK_NUMBER;
 25488  0045F2  0E01               	movlw	1
 25489  0045F4                     L50:
 25490  0045F4  0100               	movlb	0	; () banked
 25491  0045F6  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25492                           
 25493                           ; BSR set to: 0
 25494                           ;utils.c: 208: }
 25495                           ;utils.c: 209: break;
 25496                           
 25497                           ; BSR set to: 0
 25498  0045F8  D031               	goto	l2940
 25499  0045FA                     
 25500                           ; BSR set to: 0
 25501                           ;utils.c: 212: currentState = SEARCH_FSM_START;
 25502                           
 25503                           ; BSR set to: 0
 25504  0045FA  0E00               	movlw	0
 25505  0045FC  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25506                           
 25507                           ; BSR set to: 0
 25508                           ;utils.c: 213: if (isNumberValid(readBuffer))
 25509  0045FE  0E37               	movlw	low _readBuffer
 25510  004600  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 25511  004602  0E03               	movlw	high _readBuffer
 25512  004604  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 25513  004606  EC89  F02C         	call	_isNumberValid	;wreg free
 25514  00460A  0900               	iorlw	0
 25515  00460C  B4D8               	btfsc	status,2,c
 25516  00460E  D01B               	goto	l2943
 25517                           
 25518                           ;utils.c: 214: {
 25519                           ;utils.c: 215: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 25520  004610  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 25521  004614  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 25522  004618  0E37               	movlw	low _readBuffer
 25523  00461A  0100               	movlb	0	; () banked
 25524  00461C  6F7F               	movwf	StringCompare@String2& (0+255),b
 25525  00461E  0E03               	movlw	high _readBuffer
 25526  004620  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25527  004622  0E00               	movlw	0
 25528  004624  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25529  004626  0E0D               	movlw	13
 25530  004628  6F81               	movwf	StringCompare@Len& (0+255),b
 25531  00462A  EC78  F02F         	call	_StringCompare	;wreg free
 25532  00462E  0900               	iorlw	0
 25533  004630  B4D8               	btfsc	status,2,c
 25534  004632  D009               	goto	l2943
 25535                           
 25536                           ;utils.c: 216: {
 25537                           ;utils.c: 217: *positionInMemory = currentPosition;
 25538  004634  C102  FFD9         	movff	isNumberInMemory@positionInMemory,fsr2l
 25539  004638  C103  FFDA         	movff	isNumberInMemory@positionInMemory+1,fsr2h
 25540  00463C  C0E1  FFDF         	movff	isNumberInMemory@currentPosition,indf2
 25541                           
 25542                           ;utils.c: 218: currentState = SEARCH_FSM_FOUND;
 25543  004640  0E03               	movlw	3
 25544  004642  0100               	movlb	0	; () banked
 25545  004644  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25546  004646                     l2943:
 25547                           
 25548                           ;utils.c: 223: }
 25549                           ;utils.c: 224: }
 25550                           ;utils.c: 225: currentPosition += 16;
 25551                           
 25552                           ; BSR set to: 0
 25553                           
 25554                           ; BSR set to: 0
 25555                           
 25556                           ;utils.c: 220: else
 25557                           ;utils.c: 221: {
 25558                           
 25559                           ; BSR set to: 0
 25560  004646  0E10               	movlw	16
 25561  004648  0100               	movlb	0	; () banked
 25562  00464A  27E1               	addwf	isNumberInMemory@currentPosition& (0+255),f,b
 25563                           
 25564                           ; BSR set to: 0
 25565                           ;utils.c: 230: }
 25566                           
 25567                           ; BSR set to: 0
 25568                           ;utils.c: 229: break;
 25569                           
 25570                           ;utils.c: 228: default:
 25571                           
 25572                           ;utils.c: 226: break;
 25573  00464C  D007               	goto	l2940
 25574  00464E                     l2935:
 25575                           
 25576                           ; BSR set to: 0
 25577                           
 25578                           ; BSR set to: 0
 25579  00464E  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 25580                           
 25581                           ; Switch size 1, requested type "space"
 25582                           ; Number of cases is 2, Range of values is 0 to 1
 25583                           ; switch strategies available:
 25584                           ; Name         Instructions Cycles
 25585                           ; simple_byte            7     4 (average)
 25586                           ;	Chosen strategy is simple_byte
 25587  004650  0A00               	xorlw	0	; case 0
 25588  004652  B4D8               	btfsc	status,2,c
 25589  004654  D7BA               	goto	l2936
 25590  004656  0A01               	xorlw	1	; case 1
 25591  004658  B4D8               	btfsc	status,2,c
 25592  00465A  D7CF               	goto	l2941
 25593  00465C                     l2940:
 25594                           
 25595                           ;utils.c: 231: return currentState;
 25596                           
 25597                           ; BSR set to: 0
 25598  00465C  0100               	movlb	0	; () banked
 25599  00465E  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 25600  004660  0012               	return	
 25601  004662                     __end_of_isNumberInMemory:
 25602                           	opt stack 0
 25603                           tosu	equ	0xFFF
 25604                           tosh	equ	0xFFE
 25605                           tosl	equ	0xFFD
 25606                           pclath	equ	0xFFA
 25607                           tblptru	equ	0xFF8
 25608                           tblptrh	equ	0xFF7
 25609                           tblptrl	equ	0xFF6
 25610                           tablat	equ	0xFF5
 25611                           prodh	equ	0xFF4
 25612                           prodl	equ	0xFF3
 25613                           intcon	equ	0xFF2
 25614                           intcon2	equ	0xFF1
 25615                           intcon3	equ	0xFF0
 25616                           indf0	equ	0xFEF
 25617                           postinc0	equ	0xFEE
 25618                           plusw0	equ	0xFEB
 25619                           fsr0h	equ	0xFEA
 25620                           fsr0l	equ	0xFE9
 25621                           wreg	equ	0xFE8
 25622                           indf1	equ	0xFE7
 25623                           postinc1	equ	0xFE6
 25624                           postdec1	equ	0xFE5
 25625                           fsr1h	equ	0xFE2
 25626                           fsr1l	equ	0xFE1
 25627                           indf2	equ	0xFDF
 25628                           postinc2	equ	0xFDE
 25629                           postdec2	equ	0xFDD
 25630                           plusw2	equ	0xFDB
 25631                           fsr2h	equ	0xFDA
 25632                           fsr2l	equ	0xFD9
 25633                           status	equ	0xFD8
 25634                           
 25635 ;; *************** function _isMasterNumber *****************
 25636 ;; Defined at:
 25637 ;;		line 240 in file "../Source/c/04_App/utils.c"
 25638 ;; Parameters:    Size  Location     Type
 25639 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 25640 ;;		 -> receivedNumber(13), 
 25641 ;; Auto vars:     Size  Location     Type
 25642 ;;  memoryOpResu    1    2[BANK1 ] enum E8246
 25643 ;; Return value:  Size  Location     Type
 25644 ;;                  1    wreg      unsigned char 
 25645 ;; Registers used:
 25646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25647 ;; Tracked objects:
 25648 ;;		On entry : 0/0
 25649 ;;		On exit  : 0/0
 25650 ;;		Unchanged: 0/0
 25651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25652 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25653 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25655 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25656 ;;Total ram usage:        3 bytes
 25657 ;; Hardware stack levels used:    1
 25658 ;; Hardware stack levels required when called:   17
 25659 ;; This function calls:
 25660 ;;		_Eeprom_Read
 25661 ;;		_StringCompare
 25662 ;;		_isNumberValid
 25663 ;; This function is called by:
 25664 ;;		_addCmdFsm
 25665 ;;		_delCmdFsm
 25666 ;;		_resCmdFsm
 25667 ;;		_triggerCmdFsm
 25668 ;; This function uses a non-reentrant model
 25669 ;;
 25670                           
 25671                           	psect	text121
 25672  005698                     __ptext121:
 25673                           	opt stack 0
 25674  005698                     _isMasterNumber:
 25675                           	opt stack 9
 25676                           
 25677                           ;utils.c: 242: EepromStsType memoryOpResult = OP_PENDING;
 25678                           
 25679                           ; BSR set to: 0
 25680                           ;incstack = 0
 25681  005698  0E02               	movlw	2
 25682  00569A  0101               	movlb	1	; () banked
 25683  00569C  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 25684                           
 25685                           ; BSR set to: 1
 25686                           ;utils.c: 244: memoryOpResult = Eeprom_Read(16, readBuffer, ((UINT8)(13)));
 25687  00569E  0E37               	movlw	low _readBuffer
 25688  0056A0  0100               	movlb	0	; () banked
 25689  0056A2  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 25690  0056A4  0E03               	movlw	high _readBuffer
 25691  0056A6  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 25692  0056A8  0E0D               	movlw	13
 25693  0056AA  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 25694  0056AC  0E10               	movlw	16
 25695  0056AE  ECA8  F02E         	call	_Eeprom_Read
 25696  0056B2  0101               	movlb	1	; () banked
 25697  0056B4  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 25698                           
 25699                           ; BSR set to: 1
 25700                           ;utils.c: 245: if (memoryOpResult != OP_PENDING)
 25701  0056B6  0E02               	movlw	2
 25702  0056B8  1902               	xorwf	isMasterNumber@memoryOpResult& (0+255),w,b
 25703  0056BA  B4D8               	btfsc	status,2,c
 25704  0056BC  D021               	goto	l2951
 25705                           
 25706                           ; BSR set to: 1
 25707                           ;utils.c: 246: {
 25708                           ;utils.c: 247: memoryOpResult = OP_FAILED;
 25709  0056BE  0E01               	movlw	1
 25710  0056C0  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 25711                           
 25712                           ; BSR set to: 1
 25713                           ;utils.c: 248: if (isNumberValid(readBuffer))
 25714  0056C2  0E37               	movlw	low _readBuffer
 25715  0056C4  0100               	movlb	0	; () banked
 25716  0056C6  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 25717  0056C8  0E03               	movlw	high _readBuffer
 25718  0056CA  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 25719  0056CC  EC89  F02C         	call	_isNumberValid	;wreg free
 25720  0056D0  0900               	iorlw	0
 25721  0056D2  B4D8               	btfsc	status,2,c
 25722  0056D4  D015               	goto	l2951
 25723                           
 25724                           ;utils.c: 249: {
 25725                           ;utils.c: 250: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 25726  0056D6  C100  F07D         	movff	isMasterNumber@phoneNumber,StringCompare@String1
 25727  0056DA  C101  F07E         	movff	isMasterNumber@phoneNumber+1,StringCompare@String1+1
 25728  0056DE  0E37               	movlw	low _readBuffer
 25729  0056E0  0100               	movlb	0	; () banked
 25730  0056E2  6F7F               	movwf	StringCompare@String2& (0+255),b
 25731  0056E4  0E03               	movlw	high _readBuffer
 25732  0056E6  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25733  0056E8  0E00               	movlw	0
 25734  0056EA  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25735  0056EC  0E0D               	movlw	13
 25736  0056EE  6F81               	movwf	StringCompare@Len& (0+255),b
 25737  0056F0  EC78  F02F         	call	_StringCompare	;wreg free
 25738  0056F4  0900               	iorlw	0
 25739  0056F6  B4D8               	btfsc	status,2,c
 25740  0056F8  D003               	goto	l2951
 25741                           
 25742                           ;utils.c: 251: {
 25743                           ;utils.c: 252: memoryOpResult = OP_SUCCESS;
 25744  0056FA  0E00               	movlw	0
 25745  0056FC  0101               	movlb	1	; () banked
 25746  0056FE  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 25747  005700                     l2951:
 25748                           
 25749                           ;utils.c: 253: }
 25750                           ;utils.c: 254: }
 25751                           ;utils.c: 255: }
 25752                           ;utils.c: 256: return memoryOpResult;
 25753                           
 25754                           ; BSR set to: 1
 25755                           
 25756                           ; BSR set to: 1
 25757  005700  0101               	movlb	1	; () banked
 25758  005702  5102               	movf	isMasterNumber@memoryOpResult& (0+255),w,b
 25759  005704  0012               	return	
 25760  005706                     __end_of_isMasterNumber:
 25761                           	opt stack 0
 25762                           tosu	equ	0xFFF
 25763                           tosh	equ	0xFFE
 25764                           tosl	equ	0xFFD
 25765                           pclath	equ	0xFFA
 25766                           tblptru	equ	0xFF8
 25767                           tblptrh	equ	0xFF7
 25768                           tblptrl	equ	0xFF6
 25769                           tablat	equ	0xFF5
 25770                           prodh	equ	0xFF4
 25771                           prodl	equ	0xFF3
 25772                           intcon	equ	0xFF2
 25773                           intcon2	equ	0xFF1
 25774                           intcon3	equ	0xFF0
 25775                           indf0	equ	0xFEF
 25776                           postinc0	equ	0xFEE
 25777                           plusw0	equ	0xFEB
 25778                           fsr0h	equ	0xFEA
 25779                           fsr0l	equ	0xFE9
 25780                           wreg	equ	0xFE8
 25781                           indf1	equ	0xFE7
 25782                           postinc1	equ	0xFE6
 25783                           postdec1	equ	0xFE5
 25784                           fsr1h	equ	0xFE2
 25785                           fsr1l	equ	0xFE1
 25786                           indf2	equ	0xFDF
 25787                           postinc2	equ	0xFDE
 25788                           postdec2	equ	0xFDD
 25789                           plusw2	equ	0xFDB
 25790                           fsr2h	equ	0xFDA
 25791                           fsr2l	equ	0xFD9
 25792                           status	equ	0xFD8
 25793                           
 25794 ;; *************** function _findEmptySpot *****************
 25795 ;; Defined at:
 25796 ;;		line 265 in file "../Source/c/04_App/utils.c"
 25797 ;; Parameters:    Size  Location     Type
 25798 ;;  positionInMe    2    0[BANK1 ] PTR unsigned char 
 25799 ;;		 -> addCmdFsm@numberInMemory(1), 
 25800 ;; Auto vars:     Size  Location     Type
 25801 ;;  memoryOpResu    1    2[BANK1 ] enum E8246
 25802 ;; Return value:  Size  Location     Type
 25803 ;;                  1    wreg      enum E8978
 25804 ;; Registers used:
 25805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25806 ;; Tracked objects:
 25807 ;;		On entry : 0/0
 25808 ;;		On exit  : 0/0
 25809 ;;		Unchanged: 0/0
 25810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25811 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25812 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25814 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25815 ;;Total ram usage:        3 bytes
 25816 ;; Hardware stack levels used:    1
 25817 ;; Hardware stack levels required when called:   17
 25818 ;; This function calls:
 25819 ;;		_Eeprom_Read
 25820 ;;		_isNumberValid
 25821 ;; This function is called by:
 25822 ;;		_addCmdFsm
 25823 ;; This function uses a non-reentrant model
 25824 ;;
 25825                           
 25826                           	psect	text122
 25827  004EAA                     __ptext122:
 25828                           	opt stack 0
 25829  004EAA                     _findEmptySpot:
 25830                           	opt stack 9
 25831                           
 25832                           ;utils.c: 267: static searchFsmStates currentState = SEARCH_FSM_START;
 25833                           ;utils.c: 268: static uint8_t currentPosition = 32;
 25834                           ;utils.c: 269: EepromStsType memoryOpResult = OP_PENDING;
 25835                           
 25836                           ; BSR set to: 1
 25837                           ;incstack = 0
 25838  004EAA  0E02               	movlw	2
 25839  004EAC  0101               	movlb	1	; () banked
 25840  004EAE  6F02               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 25841                           
 25842                           ; BSR set to: 1
 25843                           ;utils.c: 271: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 25844  004EB0  0E01               	movlw	1
 25845  004EB2  0100               	movlb	0	; () banked
 25846  004EB4  65C4               	cpfsgt	findEmptySpot@currentState& (0+255),b
 25847  004EB6  D004               	goto	l2959
 25848                           
 25849                           ; BSR set to: 0
 25850                           ;utils.c: 272: {
 25851                           ;utils.c: 273: currentState = SEARCH_FSM_START;
 25852  004EB8  0E00               	movlw	0
 25853  004EBA  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25854                           
 25855                           ;utils.c: 274: currentPosition = 32;
 25856  004EBC  0E20               	movlw	32
 25857  004EBE  6FE0               	movwf	findEmptySpot@currentPosition& (0+255),b
 25858  004EC0                     l2959:
 25859                           
 25860                           ; BSR set to: 0
 25861                           ;utils.c: 275: }
 25862                           ;utils.c: 276: if (currentPosition >= (32 + (16 * 10)))
 25863                           
 25864                           ; BSR set to: 0
 25865  004EC0  0EBF               	movlw	191
 25866  004EC2  65E0               	cpfsgt	findEmptySpot@currentPosition& (0+255),b
 25867  004EC4  D033               	goto	l2961
 25868                           
 25869                           ; BSR set to: 0
 25870                           ;utils.c: 277: {
 25871                           ;utils.c: 278: currentState = SEARCH_FSM_NOT_FOUND;
 25872  004EC6  0E04               	movlw	4
 25873  004EC8  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25874                           
 25875                           ; BSR set to: 0
 25876                           ;utils.c: 279: }
 25877                           ;utils.c: 281: switch (currentState)
 25878  004ECA  D030               	goto	l2961
 25879  004ECC                     
 25880                           ; BSR set to: 0
 25881                           ;utils.c: 284: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13)));
 25882                           
 25883                           ; BSR set to: 0
 25884  004ECC  0E37               	movlw	low _readBuffer
 25885  004ECE  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 25886  004ED0  0E03               	movlw	high _readBuffer
 25887  004ED2  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 25888  004ED4  0E0D               	movlw	13
 25889  004ED6  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 25890  004ED8  51E0               	movf	findEmptySpot@currentPosition& (0+255),w,b
 25891  004EDA  ECA8  F02E         	call	_Eeprom_Read
 25892  004EDE  0101               	movlb	1	; () banked
 25893  004EE0  6F02               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 25894                           
 25895                           ; BSR set to: 1
 25896                           ;utils.c: 285: if (memoryOpResult == OP_FAILED)
 25897  004EE2  0502               	decf	findEmptySpot@memoryOpResult& (0+255),w,b
 25898  004EE4  A4D8               	btfss	status,2,c
 25899  004EE6  D002               	goto	l2963
 25900                           
 25901                           ; BSR set to: 1
 25902                           ;utils.c: 286: {
 25903                           ;utils.c: 287: currentState = SEARCH_FSM_ERROR;
 25904  004EE8  0E02               	movlw	2
 25905  004EEA  D005               	goto	L51
 25906  004EEC                     l2963:
 25907                           
 25908                           ;utils.c: 289: else if (memoryOpResult == OP_SUCCESS)
 25909                           
 25910                           ; BSR set to: 0
 25911  004EEC  0101               	movlb	1	; () banked
 25912  004EEE  5102               	movf	findEmptySpot@memoryOpResult& (0+255),w,b
 25913  004EF0  A4D8               	btfss	status,2,c
 25914  004EF2  D023               	goto	l2966
 25915                           
 25916                           ; BSR set to: 1
 25917                           ;utils.c: 290: {
 25918                           ;utils.c: 291: currentState = SEARCH_FSM_CHECK_NUMBER;
 25919  004EF4  0E01               	movlw	1
 25920  004EF6                     L51:
 25921  004EF6  0100               	movlb	0	; () banked
 25922  004EF8  D00D               	goto	L52
 25923  004EFA                     
 25924                           ; BSR set to: 0
 25925                           ;utils.c: 296: if (isNumberValid(readBuffer))
 25926                           
 25927                           ; BSR set to: 0
 25928  004EFA  0E37               	movlw	low _readBuffer
 25929  004EFC  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 25930  004EFE  0E03               	movlw	high _readBuffer
 25931  004F00  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 25932  004F02  EC89  F02C         	call	_isNumberValid	;wreg free
 25933  004F06  0900               	iorlw	0
 25934  004F08  B4D8               	btfsc	status,2,c
 25935  004F0A  D006               	goto	l2968
 25936                           
 25937                           ;utils.c: 297: {
 25938                           ;utils.c: 298: currentPosition += 16;
 25939  004F0C  0E10               	movlw	16
 25940  004F0E  0100               	movlb	0	; () banked
 25941  004F10  27E0               	addwf	findEmptySpot@currentPosition& (0+255),f,b
 25942                           
 25943                           ; BSR set to: 0
 25944                           ;utils.c: 299: currentState = SEARCH_FSM_START;
 25945  004F12  0E00               	movlw	0
 25946  004F14                     L52:
 25947  004F14  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25948                           
 25949                           ;utils.c: 300: }
 25950  004F16  D011               	goto	l2966
 25951  004F18                     l2968:
 25952                           
 25953                           ;utils.c: 301: else
 25954                           ;utils.c: 302: {
 25955                           ;utils.c: 303: currentState = SEARCH_FSM_NOT_FOUND;
 25956                           
 25957                           ; BSR set to: 0
 25958  004F18  0E04               	movlw	4
 25959  004F1A  0100               	movlb	0	; () banked
 25960  004F1C  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25961                           
 25962                           ; BSR set to: 0
 25963                           ;utils.c: 304: *positionInMemory = currentPosition;
 25964  004F1E  C100  FFD9         	movff	findEmptySpot@positionInMemory,fsr2l
 25965  004F22  C101  FFDA         	movff	findEmptySpot@positionInMemory+1,fsr2h
 25966  004F26  C0E0  FFDF         	movff	findEmptySpot@currentPosition,indf2
 25967                           
 25968                           ; BSR set to: 0
 25969                           ;utils.c: 310: }
 25970                           
 25971                           ; BSR set to: 0
 25972                           ;utils.c: 309: break;
 25973                           
 25974                           ;utils.c: 308: default:
 25975                           
 25976                           ; BSR set to: 0
 25977                           ;utils.c: 305: }
 25978                           ;utils.c: 306: break;
 25979  004F2A  D007               	goto	l2966
 25980  004F2C                     l2961:
 25981                           
 25982                           ; BSR set to: 0
 25983                           
 25984                           ; BSR set to: 0
 25985  004F2C  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 25986                           
 25987                           ; Switch size 1, requested type "space"
 25988                           ; Number of cases is 2, Range of values is 0 to 1
 25989                           ; switch strategies available:
 25990                           ; Name         Instructions Cycles
 25991                           ; simple_byte            7     4 (average)
 25992                           ;	Chosen strategy is simple_byte
 25993  004F2E  0A00               	xorlw	0	; case 0
 25994  004F30  B4D8               	btfsc	status,2,c
 25995  004F32  D7CC               	goto	l2962
 25996  004F34  0A01               	xorlw	1	; case 1
 25997  004F36  B4D8               	btfsc	status,2,c
 25998  004F38  D7E0               	goto	l2967
 25999  004F3A                     l2966:
 26000                           
 26001                           ;utils.c: 311: return currentState;
 26002                           
 26003                           ; BSR set to: 0
 26004  004F3A  0100               	movlb	0	; () banked
 26005  004F3C  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 26006  004F3E  0012               	return	
 26007  004F40                     __end_of_findEmptySpot:
 26008                           	opt stack 0
 26009                           tosu	equ	0xFFF
 26010                           tosh	equ	0xFFE
 26011                           tosl	equ	0xFFD
 26012                           pclath	equ	0xFFA
 26013                           tblptru	equ	0xFF8
 26014                           tblptrh	equ	0xFF7
 26015                           tblptrl	equ	0xFF6
 26016                           tablat	equ	0xFF5
 26017                           prodh	equ	0xFF4
 26018                           prodl	equ	0xFF3
 26019                           intcon	equ	0xFF2
 26020                           intcon2	equ	0xFF1
 26021                           intcon3	equ	0xFF0
 26022                           indf0	equ	0xFEF
 26023                           postinc0	equ	0xFEE
 26024                           plusw0	equ	0xFEB
 26025                           fsr0h	equ	0xFEA
 26026                           fsr0l	equ	0xFE9
 26027                           wreg	equ	0xFE8
 26028                           indf1	equ	0xFE7
 26029                           postinc1	equ	0xFE6
 26030                           postdec1	equ	0xFE5
 26031                           fsr1h	equ	0xFE2
 26032                           fsr1l	equ	0xFE1
 26033                           indf2	equ	0xFDF
 26034                           postinc2	equ	0xFDE
 26035                           postdec2	equ	0xFDD
 26036                           plusw2	equ	0xFDB
 26037                           fsr2h	equ	0xFDA
 26038                           fsr2l	equ	0xFD9
 26039                           status	equ	0xFD8
 26040                           
 26041 ;; *************** function _isNumberValid *****************
 26042 ;; Defined at:
 26043 ;;		line 152 in file "../Source/c/04_App/utils.c"
 26044 ;; Parameters:    Size  Location     Type
 26045 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 26046 ;;		 -> readBuffer(13), smsText(20), 
 26047 ;; Auto vars:     Size  Location     Type
 26048 ;;  i               1   33[BANK0 ] unsigned char 
 26049 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 26050 ;; Return value:  Size  Location     Type
 26051 ;;                  1    wreg      unsigned char 
 26052 ;; Registers used:
 26053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26054 ;; Tracked objects:
 26055 ;;		On entry : 0/0
 26056 ;;		On exit  : 0/0
 26057 ;;		Unchanged: 0/0
 26058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26059 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26060 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26061 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26062 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26063 ;;Total ram usage:        5 bytes
 26064 ;; Hardware stack levels used:    1
 26065 ;; Hardware stack levels required when called:   11
 26066 ;; This function calls:
 26067 ;;		Nothing
 26068 ;; This function is called by:
 26069 ;;		_parseCommand
 26070 ;;		_isNumberInMemory
 26071 ;;		_isMasterNumber
 26072 ;;		_findEmptySpot
 26073 ;; This function uses a non-reentrant model
 26074 ;;
 26075                           
 26076                           	psect	text123
 26077  005912                     __ptext123:
 26078                           	opt stack 0
 26079  005912                     _isNumberValid:
 26080                           	opt stack 14
 26081                           
 26082                           ;utils.c: 154: bool isNumberOk = 0;
 26083                           
 26084                           ; BSR set to: 0
 26085                           ;incstack = 0
 26086  005912  0E00               	movlw	0
 26087  005914  0100               	movlb	0	; () banked
 26088  005916  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 26089                           
 26090                           ;utils.c: 155: uint8_t i = 0;
 26091  005918  0E00               	movlw	0
 26092  00591A  6F81               	movwf	isNumberValid@i& (0+255),b
 26093                           
 26094                           ; BSR set to: 0
 26095                           ;utils.c: 156: if (phoneNumber[0] == '+')
 26096  00591C  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 26097  005920  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 26098  005924  0E2B               	movlw	43
 26099  005926  18DE               	xorwf	postinc2,w,c
 26100  005928  A4D8               	btfss	status,2,c
 26101  00592A  D024               	goto	u13550
 26102                           
 26103                           ; BSR set to: 0
 26104                           ;utils.c: 157: {
 26105                           ;utils.c: 158: for (i = 1; i < ((UINT8)(13)); i++)
 26106  00592C  0E01               	movlw	1
 26107  00592E  6F81               	movwf	isNumberValid@i& (0+255),b
 26108  005930                     l14457:
 26109                           
 26110                           ; BSR set to: 0
 26111  005930  0E0C               	movlw	12
 26112  005932  6581               	cpfsgt	isNumberValid@i& (0+255),b
 26113  005934  D001               	goto	l2922
 26114  005936  D01E               	goto	u13550
 26115  005938                     l2922:
 26116                           
 26117                           ; BSR set to: 0
 26118                           ;utils.c: 159: {
 26119                           ;utils.c: 160: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 26120                           
 26121                           ; BSR set to: 0
 26122  005938  5181               	movf	isNumberValid@i& (0+255),w,b
 26123  00593A  0D01               	mullw	1
 26124  00593C  50F3               	movf	prodl,w,c
 26125  00593E  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 26126  005940  6ED9               	movwf	fsr2l,c
 26127  005942  50F4               	movf	prodh,w,c
 26128  005944  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 26129  005946  6EDA               	movwf	fsr2h,c
 26130  005948  0E2F               	movlw	47
 26131  00594A  64DF               	cpfsgt	indf2,c
 26132  00594C  D00E               	goto	l2924
 26133                           
 26134                           ; BSR set to: 0
 26135  00594E  5181               	movf	isNumberValid@i& (0+255),w,b
 26136  005950  0D01               	mullw	1
 26137  005952  50F3               	movf	prodl,w,c
 26138  005954  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 26139  005956  6ED9               	movwf	fsr2l,c
 26140  005958  50F4               	movf	prodh,w,c
 26141  00595A  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 26142  00595C  6EDA               	movwf	fsr2h,c
 26143  00595E  0E3A               	movlw	58
 26144  005960  60DF               	cpfslt	indf2,c
 26145  005962  D003               	goto	l2924
 26146                           
 26147                           ; BSR set to: 0
 26148                           ;utils.c: 161: {
 26149                           ;utils.c: 162: isNumberOk = 1;
 26150  005964  0E01               	movlw	1
 26151  005966  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 26152                           
 26153                           ;utils.c: 163: }
 26154  005968  D003               	goto	l2925
 26155  00596A                     l2924:
 26156                           
 26157                           ; BSR set to: 0
 26158                           ;utils.c: 164: else
 26159                           ;utils.c: 165: {
 26160                           ;utils.c: 166: isNumberOk = 0;
 26161                           
 26162                           ; BSR set to: 0
 26163  00596A  0E00               	movlw	0
 26164  00596C  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 26165                           
 26166                           ;utils.c: 167: break;
 26167  00596E  D002               	goto	u13550
 26168  005970                     l2925:
 26169                           
 26170                           ; BSR set to: 0
 26171                           
 26172                           ; BSR set to: 0
 26173  005970  2B81               	incf	isNumberValid@i& (0+255),f,b
 26174  005972  D7DE               	goto	l14457
 26175  005974                     u13550:
 26176                           
 26177                           ; BSR set to: 0
 26178                           ;utils.c: 168: }
 26179                           ;utils.c: 169: }
 26180                           ;utils.c: 170: }
 26181                           ;utils.c: 171: return isNumberOk;
 26182                           
 26183                           ; BSR set to: 0
 26184                           
 26185                           ; BSR set to: 0
 26186  005974  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 26187  005976  0012               	return	
 26188  005978                     __end_of_isNumberValid:
 26189                           	opt stack 0
 26190                           tosu	equ	0xFFF
 26191                           tosh	equ	0xFFE
 26192                           tosl	equ	0xFFD
 26193                           pclath	equ	0xFFA
 26194                           tblptru	equ	0xFF8
 26195                           tblptrh	equ	0xFF7
 26196                           tblptrl	equ	0xFF6
 26197                           tablat	equ	0xFF5
 26198                           prodh	equ	0xFF4
 26199                           prodl	equ	0xFF3
 26200                           intcon	equ	0xFF2
 26201                           intcon2	equ	0xFF1
 26202                           intcon3	equ	0xFF0
 26203                           indf0	equ	0xFEF
 26204                           postinc0	equ	0xFEE
 26205                           plusw0	equ	0xFEB
 26206                           fsr0h	equ	0xFEA
 26207                           fsr0l	equ	0xFE9
 26208                           wreg	equ	0xFE8
 26209                           indf1	equ	0xFE7
 26210                           postinc1	equ	0xFE6
 26211                           postdec1	equ	0xFE5
 26212                           fsr1h	equ	0xFE2
 26213                           fsr1l	equ	0xFE1
 26214                           indf2	equ	0xFDF
 26215                           postinc2	equ	0xFDE
 26216                           postdec2	equ	0xFDD
 26217                           plusw2	equ	0xFDB
 26218                           fsr2h	equ	0xFDA
 26219                           fsr2l	equ	0xFD9
 26220                           status	equ	0xFD8
 26221                           
 26222 ;; *************** function _Eeprom_Read *****************
 26223 ;; Defined at:
 26224 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 26225 ;; Parameters:    Size  Location     Type
 26226 ;;  MemoryAddres    1    wreg     unsigned char 
 26227 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 26228 ;;		 -> readBuffer(13), memoryPreamble(4), 
 26229 ;;  DataLength      1   75[BANK0 ] unsigned char 
 26230 ;; Auto vars:     Size  Location     Type
 26231 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 26232 ;;  QuerySts        1   79[BANK0 ] enum E8937
 26233 ;;  ReadSts         1   78[BANK0 ] enum E8963
 26234 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 26235 ;; Return value:  Size  Location     Type
 26236 ;;                  1    wreg      enum E8963
 26237 ;; Registers used:
 26238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26239 ;; Tracked objects:
 26240 ;;		On entry : 0/0
 26241 ;;		On exit  : 0/0
 26242 ;;		Unchanged: 0/0
 26243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26244 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26245 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26247 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26248 ;;Total ram usage:        7 bytes
 26249 ;; Hardware stack levels used:    1
 26250 ;; Hardware stack levels required when called:   16
 26251 ;; This function calls:
 26252 ;;		_I2cSlv_QueryI2cData
 26253 ;; This function is called by:
 26254 ;;		_initEeprom
 26255 ;;		_isNumberInMemory
 26256 ;;		_isMasterNumber
 26257 ;;		_findEmptySpot
 26258 ;; This function uses a non-reentrant model
 26259 ;;
 26260                           
 26261                           	psect	text124
 26262  005D50                     __ptext124:
 26263                           	opt stack 0
 26264  005D50                     _Eeprom_Read:
 26265                           	opt stack 9
 26266                           
 26267                           ; BSR set to: 0
 26268                           ;incstack = 0
 26269                           ;Eeprom_Read@MemoryAddress stored from wreg
 26270  005D50  0100               	movlb	0	; () banked
 26271  005D52  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 26272                           
 26273                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 26274  005D54  0E50               	movlw	80
 26275  005D56  0100               	movlb	0	; () banked
 26276  005D58  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 26277                           
 26278                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 26279  005D5A  0E00               	movlw	0
 26280  005D5C  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 26281                           
 26282                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 26283  005D5E  0E02               	movlw	2
 26284  005D60  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 26285                           
 26286                           ; BSR set to: 0
 26287                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 26288  005D62  C0AC  F1FA         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 26289                           
 26290                           ; BSR set to: 0
 26291                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 26292  005D66  0EFA               	movlw	low _ReadAddress
 26293  005D68  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 26294  005D6A  0E01               	movlw	high _ReadAddress
 26295  005D6C  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 26296  005D6E  0E01               	movlw	1
 26297  005D70  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 26298  005D72  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 26299  005D76  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 26300  005D7A  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 26301  005D7E  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 26302  005D82  ECC5  F01D         	call	_I2cSlv_QueryI2cData	;wreg free
 26303  005D86  0100               	movlb	0	; () banked
 26304  005D88  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 26305                           
 26306                           ; BSR set to: 0
 26307                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 26308  005D8A  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 26309  005D8C  A4D8               	btfss	status,2,c
 26310  005D8E  D002               	goto	l2037
 26311                           
 26312                           ; BSR set to: 0
 26313                           ;eeprom_if.c: 114: {
 26314                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 26315  005D90  0E00               	movlw	0
 26316  005D92  D005               	goto	L53
 26317  005D94                     l2037:
 26318                           
 26319                           ; BSR set to: 0
 26320                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 26321                           
 26322                           ; BSR set to: 0
 26323  005D94  0E02               	movlw	2
 26324  005D96  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 26325  005D98  A4D8               	btfss	status,2,c
 26326  005D9A  D002               	goto	l2039
 26327                           
 26328                           ; BSR set to: 0
 26329                           ;eeprom_if.c: 118: {
 26330                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 26331  005D9C  0E01               	movlw	1
 26332  005D9E                     L53:
 26333  005D9E  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 26334  005DA0                     l2039:
 26335                           
 26336                           ; BSR set to: 0
 26337                           ;eeprom_if.c: 120: }
 26338                           ;eeprom_if.c: 121: return ReadSts;
 26339                           
 26340                           ; BSR set to: 0
 26341  005DA0  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 26342  005DA2  0012               	return	
 26343  005DA4                     __end_of_Eeprom_Read:
 26344                           	opt stack 0
 26345                           tosu	equ	0xFFF
 26346                           tosh	equ	0xFFE
 26347                           tosl	equ	0xFFD
 26348                           pclath	equ	0xFFA
 26349                           tblptru	equ	0xFF8
 26350                           tblptrh	equ	0xFF7
 26351                           tblptrl	equ	0xFF6
 26352                           tablat	equ	0xFF5
 26353                           prodh	equ	0xFF4
 26354                           prodl	equ	0xFF3
 26355                           intcon	equ	0xFF2
 26356                           intcon2	equ	0xFF1
 26357                           intcon3	equ	0xFF0
 26358                           indf0	equ	0xFEF
 26359                           postinc0	equ	0xFEE
 26360                           plusw0	equ	0xFEB
 26361                           fsr0h	equ	0xFEA
 26362                           fsr0l	equ	0xFE9
 26363                           wreg	equ	0xFE8
 26364                           indf1	equ	0xFE7
 26365                           postinc1	equ	0xFE6
 26366                           postdec1	equ	0xFE5
 26367                           fsr1h	equ	0xFE2
 26368                           fsr1l	equ	0xFE1
 26369                           indf2	equ	0xFDF
 26370                           postinc2	equ	0xFDE
 26371                           postdec2	equ	0xFDD
 26372                           plusw2	equ	0xFDB
 26373                           fsr2h	equ	0xFDA
 26374                           fsr2l	equ	0xFD9
 26375                           status	equ	0xFD8
 26376                           
 26377 ;; *************** function _I2cSlv_QueryI2cData *****************
 26378 ;; Defined at:
 26379 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26380 ;; Parameters:    Size  Location     Type
 26381 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 26382 ;;		 -> ReadAddress(1), 
 26383 ;;  TxLen           1   68[BANK0 ] unsigned char 
 26384 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 26385 ;;		 -> readBuffer(13), memoryPreamble(4), 
 26386 ;;  RxLen           1   71[BANK0 ] unsigned char 
 26387 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 26388 ;; Auto vars:     Size  Location     Type
 26389 ;;		None
 26390 ;; Return value:  Size  Location     Type
 26391 ;;                  1    wreg      enum E8952
 26392 ;; Registers used:
 26393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26394 ;; Tracked objects:
 26395 ;;		On entry : 0/0
 26396 ;;		On exit  : 0/0
 26397 ;;		Unchanged: 0/0
 26398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26399 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26402 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26403 ;;Total ram usage:        7 bytes
 26404 ;; Hardware stack levels used:    1
 26405 ;; Hardware stack levels required when called:   15
 26406 ;; This function calls:
 26407 ;;		_I2cSlv_I2cReadMsgSts
 26408 ;;		_I2cSlv_ReceiveI2cMsg
 26409 ;;		_I2cSlv_SendI2cMsg
 26410 ;;		_OsTmr_GetTimerStatus
 26411 ;;		_OsTmr_StartTimer
 26412 ;;		_OsTmr_Wait
 26413 ;; This function is called by:
 26414 ;;		_Eeprom_Read
 26415 ;; This function uses a non-reentrant model
 26416 ;;
 26417                           
 26418                           	psect	text125
 26419  003B8A                     __ptext125:
 26420                           	opt stack 0
 26421  003B8A                     _I2cSlv_QueryI2cData:
 26422                           	opt stack 9
 26423                           
 26424                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 26425                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 26426                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 26427                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 26428                           ;i2c_slv.c: 388: switch(I2cOpState)
 26429                           
 26430                           ; BSR set to: 0
 26431                           ;incstack = 0
 26432  003B8A  D05B               	goto	l1440
 26433  003B8C                     
 26434                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 26435  003B8C  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 26436  003B90  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 26437  003B94  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 26438  003B98  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 26439  003B9C  EC4E  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 26440                           
 26441                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 26442  003BA0  0E01               	movlw	1
 26443  003BA2  0101               	movlb	1	; () banked
 26444  003BA4  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 26445                           
 26446                           ; BSR set to: 1
 26447                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 26448  003BA6  0E00               	movlw	0
 26449  003BA8  D04A               	goto	L57
 26450  003BAA                     
 26451                           ; BSR set to: 1
 26452                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 26453                           
 26454                           ; BSR set to: 1
 26455  003BAA  0EDB               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 26456  003BAC  0100               	movlb	0	; () banked
 26457  003BAE  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 26458  003BB0  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 26459  003BB2  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 26460  003BB4  0EF4               	movlw	244
 26461  003BB6  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 26462  003BB8  0E01               	movlw	1
 26463  003BBA  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 26464  003BBC  0E00               	movlw	0
 26465  003BBE  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 26466  003BC0  0E00               	movlw	0
 26467  003BC2  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 26468  003BC4  EC20  F02A         	call	_OsTmr_Wait	;wreg free
 26469  003BC8  06E8               	decf	wreg,f,c
 26470  003BCA  A4D8               	btfss	status,2,c
 26471  003BCC  D036               	goto	l1448
 26472                           
 26473                           ;i2c_slv.c: 402: {
 26474                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 26475  003BCE  0E51               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 26476  003BD0  0100               	movlb	0	; () banked
 26477  003BD2  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26478  003BD4  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 26479  003BD6  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26480  003BD8  0EC4               	movlw	196
 26481  003BDA  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26482  003BDC  0E09               	movlw	9
 26483  003BDE  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26484  003BE0  0E00               	movlw	0
 26485  003BE2  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26486  003BE4  0E00               	movlw	0
 26487  003BE6  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26488  003BE8  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 26489                           
 26490                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 26491  003BEC  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 26492  003BF0  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 26493  003BF4  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 26494  003BF8  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 26495  003BFC  ECEF  F031         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 26496                           
 26497                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 26498  003C00  0E02               	movlw	2
 26499  003C02  0101               	movlb	1	; () banked
 26500  003C04  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 26501  003C06  D019               	goto	l1448
 26502  003C08                     
 26503                           ; BSR set to: 1
 26504                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 26505                           
 26506                           ; BSR set to: 1
 26507  003C08  EC4F  F035         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 26508  003C0C  06E8               	decf	wreg,f,c
 26509  003C0E  A4D8               	btfss	status,2,c
 26510  003C10  D005               	goto	l1446
 26511                           
 26512                           ;i2c_slv.c: 414: {
 26513                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 26514  003C12  0E00               	movlw	0
 26515  003C14  0101               	movlb	1	; () banked
 26516  003C16  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 26517                           
 26518                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 26519  003C18  0E01               	movlw	1
 26520  003C1A  D011               	goto	L57
 26521  003C1C                     l1446:
 26522                           
 26523                           ;i2c_slv.c: 420: else
 26524                           ;i2c_slv.c: 421: {
 26525                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 26526                           
 26527                           ; BSR set to: 1
 26528  003C1C  0E51               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 26529  003C1E  0100               	movlb	0	; () banked
 26530  003C20  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26531  003C22  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 26532  003C24  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26533  003C26  ECC6  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 26534  003C2A  06E8               	decf	wreg,f,c
 26535  003C2C  A4D8               	btfss	status,2,c
 26536  003C2E  D005               	goto	l1448
 26537                           
 26538                           ;i2c_slv.c: 423: {
 26539                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 26540  003C30  0E00               	movlw	0
 26541  003C32  0101               	movlb	1	; () banked
 26542  003C34  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 26543                           
 26544                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 26545  003C36  0E02               	movlw	2
 26546  003C38  D002               	goto	L57
 26547  003C3A                     l1448:
 26548                           
 26549                           ;i2c_slv.c: 429: else
 26550                           ;i2c_slv.c: 430: {
 26551                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 26552                           
 26553                           ; BSR set to: 1
 26554  003C3A  0E00               	movlw	0
 26555  003C3C  0101               	movlb	1	; () banked
 26556  003C3E                     L57:
 26557  003C3E  6FE1               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 26558                           
 26559                           ; BSR set to: 1
 26560                           ;i2c_slv.c: 439: }
 26561                           
 26562                           ; BSR set to: 1
 26563                           ;i2c_slv.c: 438: break;
 26564                           
 26565                           ;i2c_slv.c: 437: default:
 26566                           
 26567                           ; BSR set to: 1
 26568                           ;i2c_slv.c: 433: }
 26569                           ;i2c_slv.c: 434: }
 26570                           ;i2c_slv.c: 435: break;
 26571                           
 26572                           ; BSR set to: 1
 26573  003C40  D00B               	goto	l1442
 26574  003C42                     l1440:
 26575                           
 26576                           ; BSR set to: 1
 26577  003C42  0101               	movlb	1	; () banked
 26578  003C44  51E2               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 26579                           
 26580                           ; Switch size 1, requested type "space"
 26581                           ; Number of cases is 3, Range of values is 0 to 2
 26582                           ; switch strategies available:
 26583                           ; Name         Instructions Cycles
 26584                           ; simple_byte           10     6 (average)
 26585                           ;	Chosen strategy is simple_byte
 26586  003C46  0A00               	xorlw	0	; case 0
 26587  003C48  B4D8               	btfsc	status,2,c
 26588  003C4A  D7A0               	goto	l1441
 26589  003C4C  0A01               	xorlw	1	; case 1
 26590  003C4E  B4D8               	btfsc	status,2,c
 26591  003C50  D7AC               	goto	l1443
 26592  003C52  0A03               	xorlw	3	; case 2
 26593  003C54  B4D8               	btfsc	status,2,c
 26594  003C56  D7D8               	goto	l1445
 26595  003C58                     l1442:
 26596                           
 26597                           ; BSR set to: 1
 26598                           ;i2c_slv.c: 441: return Ret;
 26599                           
 26600                           ; BSR set to: 1
 26601  003C58  51E1               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 26602  003C5A  0012               	return	
 26603  003C5C                     __end_of_I2cSlv_QueryI2cData:
 26604                           	opt stack 0
 26605                           tosu	equ	0xFFF
 26606                           tosh	equ	0xFFE
 26607                           tosl	equ	0xFFD
 26608                           pclath	equ	0xFFA
 26609                           tblptru	equ	0xFF8
 26610                           tblptrh	equ	0xFF7
 26611                           tblptrl	equ	0xFF6
 26612                           tablat	equ	0xFF5
 26613                           prodh	equ	0xFF4
 26614                           prodl	equ	0xFF3
 26615                           intcon	equ	0xFF2
 26616                           intcon2	equ	0xFF1
 26617                           intcon3	equ	0xFF0
 26618                           indf0	equ	0xFEF
 26619                           postinc0	equ	0xFEE
 26620                           plusw0	equ	0xFEB
 26621                           fsr0h	equ	0xFEA
 26622                           fsr0l	equ	0xFE9
 26623                           wreg	equ	0xFE8
 26624                           indf1	equ	0xFE7
 26625                           postinc1	equ	0xFE6
 26626                           postdec1	equ	0xFE5
 26627                           fsr1h	equ	0xFE2
 26628                           fsr1l	equ	0xFE1
 26629                           indf2	equ	0xFDF
 26630                           postinc2	equ	0xFDE
 26631                           postdec2	equ	0xFDD
 26632                           plusw2	equ	0xFDB
 26633                           fsr2h	equ	0xFDA
 26634                           fsr2l	equ	0xFD9
 26635                           status	equ	0xFD8
 26636                           
 26637 ;; *************** function _OsTmr_Wait *****************
 26638 ;; Defined at:
 26639 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 26640 ;; Parameters:    Size  Location     Type
 26641 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 26642 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 26643 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 26644 ;; Auto vars:     Size  Location     Type
 26645 ;;  Ret             1   65[BANK0 ] enum E7749
 26646 ;; Return value:  Size  Location     Type
 26647 ;;                  1    wreg      enum E7749
 26648 ;; Registers used:
 26649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26650 ;; Tracked objects:
 26651 ;;		On entry : 0/0
 26652 ;;		On exit  : 0/0
 26653 ;;		Unchanged: 0/0
 26654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26655 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26658 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26659 ;;Total ram usage:        7 bytes
 26660 ;; Hardware stack levels used:    1
 26661 ;; Hardware stack levels required when called:   14
 26662 ;; This function calls:
 26663 ;;		_OsTmr_GetTimerStatus
 26664 ;;		_OsTmr_StartTimer
 26665 ;; This function is called by:
 26666 ;;		_I2cSlv_QueryI2cData
 26667 ;;		_Terminal
 26668 ;; This function uses a non-reentrant model
 26669 ;;
 26670                           
 26671                           	psect	text126
 26672  005440                     __ptext126:
 26673                           	opt stack 0
 26674  005440                     _OsTmr_Wait:
 26675                           	opt stack 11
 26676                           
 26677                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 26678                           
 26679                           ; BSR set to: 1
 26680                           ;incstack = 0
 26681  005440  0E00               	movlw	0
 26682  005442  0100               	movlb	0	; () banked
 26683  005444  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 26684                           
 26685                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 26686  005446  D02D               	goto	l855
 26687  005448                     
 26688                           ; BSR set to: 0
 26689                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 26690                           
 26691                           ; BSR set to: 0
 26692  005448  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 26693  00544C  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 26694  005450  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 26695  005454  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 26696  005458  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 26697  00545C  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 26698  005460  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 26699                           
 26700                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 26701  005464  0100               	movlb	0	; () banked
 26702  005466  EE20 F00A          	lfsr	2,10
 26703  00546A  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 26704  00546C  26D9               	addwf	fsr2l,f,c
 26705  00546E  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 26706  005470  22DA               	addwfc	fsr2h,f,c
 26707  005472  0E01               	movlw	1
 26708  005474  6EDF               	movwf	indf2,c
 26709                           
 26710                           ;os_timers.c: 165: break;
 26711  005476  D022               	goto	l857
 26712  005478                     
 26713                           ; BSR set to: 0
 26714                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 26715                           
 26716                           ; BSR set to: 0
 26717  005478  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 26718  00547C  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 26719  005480  ECC6  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 26720  005484  06E8               	decf	wreg,f,c
 26721  005486  A4D8               	btfss	status,2,c
 26722  005488  D019               	goto	l857
 26723                           
 26724                           ;os_timers.c: 170: {
 26725                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 26726  00548A  0100               	movlb	0	; () banked
 26727  00548C  EE20 F00A          	lfsr	2,10
 26728  005490  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 26729  005492  26D9               	addwf	fsr2l,f,c
 26730  005494  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 26731  005496  22DA               	addwfc	fsr2h,f,c
 26732  005498  0E00               	movlw	0
 26733  00549A  6EDF               	movwf	indf2,c
 26734                           
 26735                           ; BSR set to: 0
 26736                           ;os_timers.c: 174: Ret = DelayExpired;
 26737  00549C  0E01               	movlw	1
 26738  00549E  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 26739                           
 26740                           ; BSR set to: 0
 26741                           ;os_timers.c: 180: }
 26742                           
 26743                           ; BSR set to: 0
 26744                           ;os_timers.c: 179: break;
 26745                           
 26746                           ;os_timers.c: 178: default:
 26747                           
 26748                           ; BSR set to: 0
 26749                           ;os_timers.c: 175: }
 26750                           ;os_timers.c: 176: break;
 26751  0054A0  D00D               	goto	l857
 26752  0054A2                     l855:
 26753                           
 26754                           ; BSR set to: 0
 26755                           
 26756                           ; BSR set to: 0
 26757  0054A2  EE20 F00A          	lfsr	2,10
 26758  0054A6  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 26759  0054A8  26D9               	addwf	fsr2l,f,c
 26760  0054AA  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 26761  0054AC  22DA               	addwfc	fsr2h,f,c
 26762  0054AE  50DF               	movf	indf2,w,c
 26763                           
 26764                           ; Switch size 1, requested type "space"
 26765                           ; Number of cases is 2, Range of values is 0 to 1
 26766                           ; switch strategies available:
 26767                           ; Name         Instructions Cycles
 26768                           ; simple_byte            7     4 (average)
 26769                           ;	Chosen strategy is simple_byte
 26770  0054B0  0A00               	xorlw	0	; case 0
 26771  0054B2  B4D8               	btfsc	status,2,c
 26772  0054B4  D7C9               	goto	l856
 26773  0054B6  0A01               	xorlw	1	; case 1
 26774  0054B8  B4D8               	btfsc	status,2,c
 26775  0054BA  D7DE               	goto	l858
 26776  0054BC                     l857:
 26777                           
 26778                           ;os_timers.c: 182: return Ret;
 26779                           
 26780                           ; BSR set to: 0
 26781  0054BC  0100               	movlb	0	; () banked
 26782  0054BE  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 26783  0054C0  0012               	return	
 26784  0054C2                     __end_of_OsTmr_Wait:
 26785                           	opt stack 0
 26786                           tosu	equ	0xFFF
 26787                           tosh	equ	0xFFE
 26788                           tosl	equ	0xFFD
 26789                           pclath	equ	0xFFA
 26790                           tblptru	equ	0xFF8
 26791                           tblptrh	equ	0xFF7
 26792                           tblptrl	equ	0xFF6
 26793                           tablat	equ	0xFF5
 26794                           prodh	equ	0xFF4
 26795                           prodl	equ	0xFF3
 26796                           intcon	equ	0xFF2
 26797                           intcon2	equ	0xFF1
 26798                           intcon3	equ	0xFF0
 26799                           indf0	equ	0xFEF
 26800                           postinc0	equ	0xFEE
 26801                           plusw0	equ	0xFEB
 26802                           fsr0h	equ	0xFEA
 26803                           fsr0l	equ	0xFE9
 26804                           wreg	equ	0xFE8
 26805                           indf1	equ	0xFE7
 26806                           postinc1	equ	0xFE6
 26807                           postdec1	equ	0xFE5
 26808                           fsr1h	equ	0xFE2
 26809                           fsr1l	equ	0xFE1
 26810                           indf2	equ	0xFDF
 26811                           postinc2	equ	0xFDE
 26812                           postdec2	equ	0xFDD
 26813                           plusw2	equ	0xFDB
 26814                           fsr2h	equ	0xFDA
 26815                           fsr2l	equ	0xFD9
 26816                           status	equ	0xFD8
 26817                           
 26818 ;; *************** function _I2cSlv_SendI2cMsg *****************
 26819 ;; Defined at:
 26820 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26821 ;; Parameters:    Size  Location     Type
 26822 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 26823 ;;		 -> relayBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 26824 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 26825 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 26826 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 26827 ;; Auto vars:     Size  Location     Type
 26828 ;;  TxSts           1   36[BANK0 ] unsigned char 
 26829 ;; Return value:  Size  Location     Type
 26830 ;;                  1    wreg      unsigned char 
 26831 ;; Registers used:
 26832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26833 ;; Tracked objects:
 26834 ;;		On entry : 0/0
 26835 ;;		On exit  : 0/0
 26836 ;;		Unchanged: 0/0
 26837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26838 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26839 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26841 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26842 ;;Total ram usage:        5 bytes
 26843 ;; Hardware stack levels used:    1
 26844 ;; Hardware stack levels required when called:   12
 26845 ;; This function calls:
 26846 ;;		_GenerateEvt
 26847 ;; This function is called by:
 26848 ;;		_I2cSlv_QueryI2cData
 26849 ;;		_Eeprom_Write
 26850 ;;		_Eeprom_Reset
 26851 ;;		_Terminal
 26852 ;;		_triggerRelay
 26853 ;; This function uses a non-reentrant model
 26854 ;;
 26855                           
 26856                           	psect	text127
 26857  00649C                     __ptext127:
 26858                           	opt stack 0
 26859  00649C                     _I2cSlv_SendI2cMsg:
 26860                           	opt stack 13
 26861                           
 26862                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 26863                           
 26864                           ; BSR set to: 0
 26865                           ;incstack = 0
 26866  00649C  0E00               	movlw	0
 26867  00649E  0100               	movlb	0	; () banked
 26868  0064A0  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26869                           
 26870                           ; BSR set to: 0
 26871                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 26872  0064A2  05CF               	decf	_I2cComSts& (0+255),w,b
 26873  0064A4  B4D8               	btfsc	status,2,c
 26874  0064A6  D015               	goto	l1412
 26875                           
 26876                           ; BSR set to: 0
 26877                           ;i2c_slv.c: 257: {
 26878                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 26879  0064A8  C082  F39F         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 26880                           
 26881                           ; BSR set to: 0
 26882                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 26883  0064AC  0E00               	movlw	0
 26884  0064AE  0103               	movlb	3	; () banked
 26885  0064B0  6FA0               	movwf	(_I2cTxPacket+1)& (0+255),b
 26886                           
 26887                           ; BSR set to: 3
 26888                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 26889  0064B2  C083  F3A3         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 26890                           
 26891                           ; BSR set to: 3
 26892                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 26893  0064B6  C080  F3A1         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 26894  0064BA  C081  F3A2         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 26895                           
 26896                           ; BSR set to: 3
 26897                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 26898  0064BE  0ED7               	movlw	low _I2cWriteDataEvt
 26899  0064C0  0100               	movlb	0	; () banked
 26900  0064C2  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26901  0064C4  0E00               	movlw	high _I2cWriteDataEvt
 26902  0064C6  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26903  0064C8  EC25  F036         	call	_GenerateEvt	;wreg free
 26904                           
 26905                           ;i2c_slv.c: 267: TxSts = 1u;
 26906  0064CC  0E01               	movlw	1
 26907  0064CE  0100               	movlb	0	; () banked
 26908  0064D0  D001               	goto	L58
 26909  0064D2                     l1412:
 26910                           
 26911                           ; BSR set to: 0
 26912                           ;i2c_slv.c: 269: else
 26913                           ;i2c_slv.c: 270: {
 26914                           ;i2c_slv.c: 272: TxSts = 0u;
 26915                           
 26916                           ; BSR set to: 0
 26917  0064D2  0E00               	movlw	0
 26918  0064D4                     L58:
 26919  0064D4  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26920                           
 26921                           ; BSR set to: 0
 26922                           ;i2c_slv.c: 273: }
 26923                           ;i2c_slv.c: 275: return TxSts;
 26924  0064D6  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 26925  0064D8  0012               	return	
 26926  0064DA                     __end_of_I2cSlv_SendI2cMsg:
 26927                           	opt stack 0
 26928                           tosu	equ	0xFFF
 26929                           tosh	equ	0xFFE
 26930                           tosl	equ	0xFFD
 26931                           pclath	equ	0xFFA
 26932                           tblptru	equ	0xFF8
 26933                           tblptrh	equ	0xFF7
 26934                           tblptrl	equ	0xFF6
 26935                           tablat	equ	0xFF5
 26936                           prodh	equ	0xFF4
 26937                           prodl	equ	0xFF3
 26938                           intcon	equ	0xFF2
 26939                           intcon2	equ	0xFF1
 26940                           intcon3	equ	0xFF0
 26941                           indf0	equ	0xFEF
 26942                           postinc0	equ	0xFEE
 26943                           plusw0	equ	0xFEB
 26944                           fsr0h	equ	0xFEA
 26945                           fsr0l	equ	0xFE9
 26946                           wreg	equ	0xFE8
 26947                           indf1	equ	0xFE7
 26948                           postinc1	equ	0xFE6
 26949                           postdec1	equ	0xFE5
 26950                           fsr1h	equ	0xFE2
 26951                           fsr1l	equ	0xFE1
 26952                           indf2	equ	0xFDF
 26953                           postinc2	equ	0xFDE
 26954                           postdec2	equ	0xFDD
 26955                           plusw2	equ	0xFDB
 26956                           fsr2h	equ	0xFDA
 26957                           fsr2l	equ	0xFD9
 26958                           status	equ	0xFD8
 26959                           
 26960 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 26961 ;; Defined at:
 26962 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26963 ;; Parameters:    Size  Location     Type
 26964 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 26965 ;;		 -> readBuffer(13), memoryPreamble(4), Terminal@TermRxBuffer(50), 
 26966 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 26967 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 26968 ;; Auto vars:     Size  Location     Type
 26969 ;;  RxSts           1   36[BANK0 ] unsigned char 
 26970 ;; Return value:  Size  Location     Type
 26971 ;;                  1    wreg      unsigned char 
 26972 ;; Registers used:
 26973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26974 ;; Tracked objects:
 26975 ;;		On entry : 0/0
 26976 ;;		On exit  : 0/0
 26977 ;;		Unchanged: 0/0
 26978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26979 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26982 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26983 ;;Total ram usage:        5 bytes
 26984 ;; Hardware stack levels used:    1
 26985 ;; Hardware stack levels required when called:   12
 26986 ;; This function calls:
 26987 ;;		_GenerateEvt
 26988 ;; This function is called by:
 26989 ;;		_I2cSlv_QueryI2cData
 26990 ;;		_Terminal
 26991 ;; This function uses a non-reentrant model
 26992 ;;
 26993                           
 26994                           	psect	text128
 26995  0063DE                     __ptext128:
 26996                           	opt stack 0
 26997  0063DE                     _I2cSlv_ReceiveI2cMsg:
 26998                           	opt stack 13
 26999                           
 27000                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 27001                           
 27002                           ; BSR set to: 0
 27003                           ;incstack = 0
 27004  0063DE  0E00               	movlw	0
 27005  0063E0  0100               	movlb	0	; () banked
 27006  0063E2  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 27007                           
 27008                           ; BSR set to: 0
 27009                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 27010  0063E4  0E02               	movlw	2
 27011  0063E6  19CF               	xorwf	_I2cComSts& (0+255),w,b
 27012  0063E8  B4D8               	btfsc	status,2,c
 27013  0063EA  D016               	goto	l1417
 27014                           
 27015                           ; BSR set to: 0
 27016                           ;i2c_slv.c: 294: {
 27017                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 27018  0063EC  C082  F399         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 27019                           
 27020                           ; BSR set to: 0
 27021                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 27022  0063F0  0E01               	movlw	1
 27023  0063F2  0103               	movlb	3	; () banked
 27024  0063F4  6F9A               	movwf	(_I2cRxPacket+1)& (0+255),b
 27025                           
 27026                           ; BSR set to: 3
 27027                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 27028  0063F6  C083  F39D         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 27029                           
 27030                           ; BSR set to: 3
 27031                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 27032  0063FA  C080  F39B         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 27033  0063FE  C081  F39C         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 27034                           
 27035                           ; BSR set to: 3
 27036                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 27037  006402  0E39               	movlw	low _I2cReadDataEvt
 27038  006404  0100               	movlb	0	; () banked
 27039  006406  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27040  006408  0E00               	movlw	high _I2cReadDataEvt
 27041  00640A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27042  00640C  EC25  F036         	call	_GenerateEvt	;wreg free
 27043                           
 27044                           ;i2c_slv.c: 304: RxSts = 1u;
 27045  006410  0E01               	movlw	1
 27046  006412  0100               	movlb	0	; () banked
 27047  006414  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 27048                           
 27049                           ;i2c_slv.c: 305: }
 27050  006416  0012               	return	
 27051  006418                     l1417:
 27052                           
 27053                           ; BSR set to: 0
 27054                           ;i2c_slv.c: 306: else
 27055                           ;i2c_slv.c: 307: {
 27056                           ;i2c_slv.c: 309: RxSts = 0u;
 27057                           
 27058                           ; BSR set to: 0
 27059  006418  0E00               	movlw	0
 27060  00641A  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 27061                           
 27062                           ; BSR set to: 0
 27063  00641C  0012               	return	
 27064  00641E                     __end_of_I2cSlv_ReceiveI2cMsg:
 27065                           	opt stack 0
 27066                           tosu	equ	0xFFF
 27067                           tosh	equ	0xFFE
 27068                           tosl	equ	0xFFD
 27069                           pclath	equ	0xFFA
 27070                           tblptru	equ	0xFF8
 27071                           tblptrh	equ	0xFF7
 27072                           tblptrl	equ	0xFF6
 27073                           tablat	equ	0xFF5
 27074                           prodh	equ	0xFF4
 27075                           prodl	equ	0xFF3
 27076                           intcon	equ	0xFF2
 27077                           intcon2	equ	0xFF1
 27078                           intcon3	equ	0xFF0
 27079                           indf0	equ	0xFEF
 27080                           postinc0	equ	0xFEE
 27081                           plusw0	equ	0xFEB
 27082                           fsr0h	equ	0xFEA
 27083                           fsr0l	equ	0xFE9
 27084                           wreg	equ	0xFE8
 27085                           indf1	equ	0xFE7
 27086                           postinc1	equ	0xFE6
 27087                           postdec1	equ	0xFE5
 27088                           fsr1h	equ	0xFE2
 27089                           fsr1l	equ	0xFE1
 27090                           indf2	equ	0xFDF
 27091                           postinc2	equ	0xFDE
 27092                           postdec2	equ	0xFDD
 27093                           plusw2	equ	0xFDB
 27094                           fsr2h	equ	0xFDA
 27095                           fsr2l	equ	0xFD9
 27096                           status	equ	0xFD8
 27097                           
 27098 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 27099 ;; Defined at:
 27100 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 27101 ;; Parameters:    Size  Location     Type
 27102 ;;		None
 27103 ;; Auto vars:     Size  Location     Type
 27104 ;;  Result          1   33[BANK0 ] enum E8940
 27105 ;; Return value:  Size  Location     Type
 27106 ;;                  1    wreg      enum E8940
 27107 ;; Registers used:
 27108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27109 ;; Tracked objects:
 27110 ;;		On entry : 0/0
 27111 ;;		On exit  : 0/0
 27112 ;;		Unchanged: 0/0
 27113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27117 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27118 ;;Total ram usage:        1 bytes
 27119 ;; Hardware stack levels used:    1
 27120 ;; Hardware stack levels required when called:   12
 27121 ;; This function calls:
 27122 ;;		_ReceiveEvt
 27123 ;; This function is called by:
 27124 ;;		_I2cSlv_QueryI2cData
 27125 ;;		_Terminal
 27126 ;; This function uses a non-reentrant model
 27127 ;;
 27128                           
 27129                           	psect	text129
 27130  006A9E                     __ptext129:
 27131                           	opt stack 0
 27132  006A9E                     _I2cSlv_I2cReadMsgSts:
 27133                           	opt stack 13
 27134                           
 27135                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 27136                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 27137                           
 27138                           ; BSR set to: 0
 27139                           ;incstack = 0
 27140  006A9E  0E9E               	movlw	low (_I2cRxPacket+5)
 27141  006AA0  0100               	movlb	0	; () banked
 27142  006AA2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27143  006AA4  0E03               	movlw	high (_I2cRxPacket+5)
 27144  006AA6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27145  006AA8  EC34  F034         	call	_ReceiveEvt	;wreg free
 27146  006AAC  0900               	iorlw	0
 27147  006AAE  B4D8               	btfsc	status,2,c
 27148  006AB0  D002               	goto	l1422
 27149                           
 27150                           ;i2c_slv.c: 331: {
 27151                           ;i2c_slv.c: 332: Result = MessageReceived;
 27152  006AB2  0E01               	movlw	1
 27153  006AB4  D001               	goto	L59
 27154  006AB6                     l1422:
 27155                           
 27156                           ;i2c_slv.c: 334: else
 27157                           ;i2c_slv.c: 335: {
 27158                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 27159                           
 27160                           ; BSR set to: 0
 27161  006AB6  0E00               	movlw	0
 27162  006AB8                     L59:
 27163  006AB8  0100               	movlb	0	; () banked
 27164  006ABA  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 27165                           
 27166                           ; BSR set to: 0
 27167                           ;i2c_slv.c: 337: }
 27168                           ;i2c_slv.c: 339: return Result;
 27169  006ABC  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 27170  006ABE  0012               	return	
 27171  006AC0                     __end_of_I2cSlv_I2cReadMsgSts:
 27172                           	opt stack 0
 27173                           tosu	equ	0xFFF
 27174                           tosh	equ	0xFFE
 27175                           tosl	equ	0xFFD
 27176                           pclath	equ	0xFFA
 27177                           tblptru	equ	0xFF8
 27178                           tblptrh	equ	0xFF7
 27179                           tblptrl	equ	0xFF6
 27180                           tablat	equ	0xFF5
 27181                           prodh	equ	0xFF4
 27182                           prodl	equ	0xFF3
 27183                           intcon	equ	0xFF2
 27184                           intcon2	equ	0xFF1
 27185                           intcon3	equ	0xFF0
 27186                           indf0	equ	0xFEF
 27187                           postinc0	equ	0xFEE
 27188                           plusw0	equ	0xFEB
 27189                           fsr0h	equ	0xFEA
 27190                           fsr0l	equ	0xFE9
 27191                           wreg	equ	0xFE8
 27192                           indf1	equ	0xFE7
 27193                           postinc1	equ	0xFE6
 27194                           postdec1	equ	0xFE5
 27195                           fsr1h	equ	0xFE2
 27196                           fsr1l	equ	0xFE1
 27197                           indf2	equ	0xFDF
 27198                           postinc2	equ	0xFDE
 27199                           postdec2	equ	0xFDD
 27200                           plusw2	equ	0xFDB
 27201                           fsr2h	equ	0xFDA
 27202                           fsr2l	equ	0xFD9
 27203                           status	equ	0xFD8
 27204                           
 27205 ;; *************** function _Led_SetLedBlinkTime *****************
 27206 ;; Defined at:
 27207 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 27208 ;; Parameters:    Size  Location     Type
 27209 ;;  Led             1    wreg     unsigned char 
 27210 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 27211 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 27212 ;; Auto vars:     Size  Location     Type
 27213 ;;  Led             1   33[BANK0 ] unsigned char 
 27214 ;; Return value:  Size  Location     Type
 27215 ;;                  1    wreg      void 
 27216 ;; Registers used:
 27217 ;;		wreg, status,2, status,0
 27218 ;; Tracked objects:
 27219 ;;		On entry : 0/0
 27220 ;;		On exit  : 0/0
 27221 ;;		Unchanged: 0/0
 27222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27223 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27226 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27227 ;;Total ram usage:        5 bytes
 27228 ;; Hardware stack levels used:    1
 27229 ;; Hardware stack levels required when called:   11
 27230 ;; This function calls:
 27231 ;;		Nothing
 27232 ;; This function is called by:
 27233 ;;		_MyApp_Task
 27234 ;; This function uses a non-reentrant model
 27235 ;;
 27236                           
 27237                           	psect	text130
 27238  005DA4                     __ptext130:
 27239                           	opt stack 0
 27240  005DA4                     _Led_SetLedBlinkTime:
 27241                           	opt stack 16
 27242                           
 27243                           ; BSR set to: 0
 27244                           ;incstack = 0
 27245                           ;Led_SetLedBlinkTime@Led stored from wreg
 27246  005DA4  0100               	movlb	0	; () banked
 27247  005DA6  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 27248                           
 27249                           ;led.c: 374: switch (Led)
 27250  005DA8  D01B               	goto	l2151
 27251  005DAA                     l2152:
 27252                           
 27253                           ; BSR set to: 0
 27254                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 27255  005DAA  C07D  F373         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 27256  005DAE  C07E  F374         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 27257                           
 27258                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 27259  005DB2  C07F  F375         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 27260  005DB6  C080  F376         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 27261                           
 27262                           ;led.c: 379: break;
 27263  005DBA  0012               	return	
 27264  005DBC                     l2154:
 27265                           
 27266                           ; BSR set to: 0
 27267                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 27268  005DBC  C07D  F36A         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 27269  005DC0  C07E  F36B         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 27270                           
 27271                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 27272  005DC4  C07F  F36C         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 27273  005DC8  C080  F36D         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 27274                           
 27275                           ;led.c: 384: break;
 27276  005DCC  0012               	return	
 27277  005DCE                     l2155:
 27278                           
 27279                           ; BSR set to: 0
 27280                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 27281  005DCE  C07D  F36A         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 27282  005DD2  C07E  F36B         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 27283                           
 27284                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 27285  005DD6  C07F  F36C         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 27286  005DDA  C080  F36D         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 27287                           
 27288                           ; BSR set to: 0
 27289                           ;led.c: 393: }
 27290                           
 27291                           ; BSR set to: 0
 27292                           ;led.c: 392: break;
 27293                           
 27294                           ;led.c: 391: default:
 27295                           
 27296                           ;led.c: 389: break;
 27297  005DDE  0012               	return	
 27298  005DE0                     l2151:
 27299                           
 27300                           ; BSR set to: 0
 27301  005DE0  0100               	movlb	0	; () banked
 27302  005DE2  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 27303                           
 27304                           ; Switch size 1, requested type "space"
 27305                           ; Number of cases is 3, Range of values is 1 to 3
 27306                           ; switch strategies available:
 27307                           ; Name         Instructions Cycles
 27308                           ; simple_byte           10     6 (average)
 27309                           ;	Chosen strategy is simple_byte
 27310  005DE4  0A01               	xorlw	1	; case 1
 27311  005DE6  B4D8               	btfsc	status,2,c
 27312  005DE8  D7E0               	goto	l2152
 27313  005DEA  0A03               	xorlw	3	; case 2
 27314  005DEC  B4D8               	btfsc	status,2,c
 27315  005DEE  D7E6               	goto	l2154
 27316  005DF0  0A01               	xorlw	1	; case 3
 27317  005DF2  A4D8               	btfss	status,2,c
 27318  005DF4  0012               	return	
 27319  005DF6  D7EB               	goto	l2155
 27320  005DF8                     __end_of_Led_SetLedBlinkTime:
 27321                           	opt stack 0
 27322                           tosu	equ	0xFFF
 27323                           tosh	equ	0xFFE
 27324                           tosl	equ	0xFFD
 27325                           pclath	equ	0xFFA
 27326                           tblptru	equ	0xFF8
 27327                           tblptrh	equ	0xFF7
 27328                           tblptrl	equ	0xFF6
 27329                           tablat	equ	0xFF5
 27330                           prodh	equ	0xFF4
 27331                           prodl	equ	0xFF3
 27332                           intcon	equ	0xFF2
 27333                           intcon2	equ	0xFF1
 27334                           intcon3	equ	0xFF0
 27335                           indf0	equ	0xFEF
 27336                           postinc0	equ	0xFEE
 27337                           plusw0	equ	0xFEB
 27338                           fsr0h	equ	0xFEA
 27339                           fsr0l	equ	0xFE9
 27340                           wreg	equ	0xFE8
 27341                           indf1	equ	0xFE7
 27342                           postinc1	equ	0xFE6
 27343                           postdec1	equ	0xFE5
 27344                           fsr1h	equ	0xFE2
 27345                           fsr1l	equ	0xFE1
 27346                           indf2	equ	0xFDF
 27347                           postinc2	equ	0xFDE
 27348                           postdec2	equ	0xFDD
 27349                           plusw2	equ	0xFDB
 27350                           fsr2h	equ	0xFDA
 27351                           fsr2l	equ	0xFD9
 27352                           status	equ	0xFD8
 27353                           
 27354 ;; *************** function _UartSetConfig *****************
 27355 ;; Defined at:
 27356 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27357 ;; Parameters:    Size  Location     Type
 27358 ;;		None
 27359 ;; Auto vars:     Size  Location     Type
 27360 ;;		None
 27361 ;; Return value:  Size  Location     Type
 27362 ;;                  1    wreg      void 
 27363 ;; Registers used:
 27364 ;;		wreg, status,2
 27365 ;; Tracked objects:
 27366 ;;		On entry : 0/0
 27367 ;;		On exit  : 0/0
 27368 ;;		Unchanged: 0/0
 27369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27374 ;;Total ram usage:        0 bytes
 27375 ;; Hardware stack levels used:    1
 27376 ;; Hardware stack levels required when called:   11
 27377 ;; This function calls:
 27378 ;;		Nothing
 27379 ;; This function is called by:
 27380 ;;		_Mdm_MainTask
 27381 ;; This function uses a non-reentrant model
 27382 ;;
 27383                           
 27384                           	psect	text131
 27385  005AF2                     __ptext131:
 27386                           	opt stack 0
 27387  005AF2                     _UartSetConfig:
 27388                           	opt stack 16
 27389                           
 27390                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 27391                           
 27392                           ; BSR set to: 0
 27393                           ;incstack = 0
 27394  005AF2  0E01               	movlw	1
 27395  005AF4  0103               	movlb	3	; () banked
 27396  005AF6  6F22               	movwf	_UartConfig& (0+255),b
 27397                           
 27398                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 27399  005AF8  0E00               	movlw	0
 27400  005AFA  6F23               	movwf	(_UartConfig+1)& (0+255),b
 27401                           
 27402                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 27403  005AFC  0E00               	movlw	0
 27404  005AFE  6F24               	movwf	(_UartConfig+2)& (0+255),b
 27405                           
 27406                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 27407  005B00  0E00               	movlw	0
 27408  005B02  6F25               	movwf	(_UartConfig+3)& (0+255),b
 27409                           
 27410                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 27411  005B04  0E00               	movlw	0
 27412  005B06  6F26               	movwf	(_UartConfig+4)& (0+255),b
 27413                           
 27414                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 27415  005B08  0E00               	movlw	0
 27416  005B0A  6F27               	movwf	(_UartConfig+5)& (0+255),b
 27417                           
 27418                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 27419  005B0C  0E01               	movlw	1
 27420  005B0E  6F28               	movwf	(_UartConfig+6)& (0+255),b
 27421                           
 27422                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 27423  005B10  0E01               	movlw	1
 27424  005B12  6F29               	movwf	(_UartConfig+7)& (0+255),b
 27425                           
 27426                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 27427  005B14  0E00               	movlw	0
 27428  005B16  6F2A               	movwf	(_UartConfig+8)& (0+255),b
 27429                           
 27430                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 27431  005B18  0E00               	movlw	0
 27432  005B1A  6F2B               	movwf	(_UartConfig+9)& (0+255),b
 27433                           
 27434                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 27435  005B1C  0E00               	movlw	0
 27436  005B1E  6F2C               	movwf	(_UartConfig+10)& (0+255),b
 27437                           
 27438                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 27439  005B20  0E00               	movlw	0
 27440  005B22  6F2D               	movwf	(_UartConfig+11)& (0+255),b
 27441                           
 27442                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 27443  005B24  0E01               	movlw	1
 27444  005B26  6F2E               	movwf	(_UartConfig+12)& (0+255),b
 27445                           
 27446                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 27447  005B28  0E00               	movlw	0
 27448  005B2A  6F2F               	movwf	(_UartConfig+13)& (0+255),b
 27449  005B2C  0E6C               	movlw	108
 27450  005B2E  6F30               	movwf	(_UartConfig+14)& (0+255),b
 27451  005B30  0EDC               	movlw	220
 27452  005B32  6F31               	movwf	(_UartConfig+15)& (0+255),b
 27453  005B34  0E02               	movlw	2
 27454  005B36  6F32               	movwf	(_UartConfig+16)& (0+255),b
 27455                           
 27456                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 27457  005B38  0E80               	movlw	128
 27458  005B3A  6F33               	movwf	(_UartConfig+17)& (0+255),b
 27459  005B3C  0E25               	movlw	37
 27460  005B3E  6F34               	movwf	(_UartConfig+18)& (0+255),b
 27461  005B40  0E00               	movlw	0
 27462  005B42  6F35               	movwf	(_UartConfig+19)& (0+255),b
 27463  005B44  0E00               	movlw	0
 27464  005B46  6F36               	movwf	(_UartConfig+20)& (0+255),b
 27465                           
 27466                           ; BSR set to: 3
 27467  005B48  0012               	return		;funcret
 27468  005B4A                     __end_of_UartSetConfig:
 27469                           	opt stack 0
 27470                           tosu	equ	0xFFF
 27471                           tosh	equ	0xFFE
 27472                           tosl	equ	0xFFD
 27473                           pclath	equ	0xFFA
 27474                           tblptru	equ	0xFF8
 27475                           tblptrh	equ	0xFF7
 27476                           tblptrl	equ	0xFF6
 27477                           tablat	equ	0xFF5
 27478                           prodh	equ	0xFF4
 27479                           prodl	equ	0xFF3
 27480                           intcon	equ	0xFF2
 27481                           intcon2	equ	0xFF1
 27482                           intcon3	equ	0xFF0
 27483                           indf0	equ	0xFEF
 27484                           postinc0	equ	0xFEE
 27485                           plusw0	equ	0xFEB
 27486                           fsr0h	equ	0xFEA
 27487                           fsr0l	equ	0xFE9
 27488                           wreg	equ	0xFE8
 27489                           indf1	equ	0xFE7
 27490                           postinc1	equ	0xFE6
 27491                           postdec1	equ	0xFE5
 27492                           fsr1h	equ	0xFE2
 27493                           fsr1l	equ	0xFE1
 27494                           indf2	equ	0xFDF
 27495                           postinc2	equ	0xFDE
 27496                           postdec2	equ	0xFDD
 27497                           plusw2	equ	0xFDB
 27498                           fsr2h	equ	0xFDA
 27499                           fsr2l	equ	0xFD9
 27500                           status	equ	0xFD8
 27501                           
 27502 ;; *************** function _TurnOnModem *****************
 27503 ;; Defined at:
 27504 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27505 ;; Parameters:    Size  Location     Type
 27506 ;;		None
 27507 ;; Auto vars:     Size  Location     Type
 27508 ;;		None
 27509 ;; Return value:  Size  Location     Type
 27510 ;;                  1    wreg      void 
 27511 ;; Registers used:
 27512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27513 ;; Tracked objects:
 27514 ;;		On entry : 0/0
 27515 ;;		On exit  : 0/0
 27516 ;;		Unchanged: 0/0
 27517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27522 ;;Total ram usage:        0 bytes
 27523 ;; Hardware stack levels used:    1
 27524 ;; Hardware stack levels required when called:   12
 27525 ;; This function calls:
 27526 ;;		_GenerateEvt
 27527 ;; This function is called by:
 27528 ;;		_Mdm_MainTask
 27529 ;; This function uses a non-reentrant model
 27530 ;;
 27531                           
 27532                           	psect	text132
 27533  006168                     __ptext132:
 27534                           	opt stack 0
 27535  006168                     _TurnOnModem:
 27536                           	opt stack 15
 27537                           
 27538                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 27539                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 27540                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 27541                           
 27542                           ; BSR set to: 3
 27543                           ;incstack = 0
 27544  006168  D01B               	goto	l1009
 27545  00616A                     
 27546                           ;mdm_gsm_gprs.c: 385: Counter++;
 27547  00616A  0103               	movlb	3	; () banked
 27548  00616C  4B20               	infsnz	TurnOnModem@Counter& (0+255),f,b
 27549  00616E  2B21               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 27550                           
 27551                           ; BSR set to: 3
 27552                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 27553  006170  0EB8               	movlw	184
 27554  006172  5D20               	subwf	TurnOnModem@Counter& (0+255),w,b
 27555  006174  0E0B               	movlw	11
 27556  006176  5921               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 27557  006178  A0D8               	btfss	status,0,c
 27558  00617A  0012               	return	
 27559                           
 27560                           ; BSR set to: 3
 27561                           ;mdm_gsm_gprs.c: 388: {
 27562                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 27563  00617C  0E01               	movlw	1
 27564  00617E  0101               	movlb	1	; () banked
 27565  006180  6FF1               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 27566                           
 27567                           ; BSR set to: 1
 27568                           ;mdm_gsm_gprs.c: 391: }
 27569                           ;mdm_gsm_gprs.c: 392: break;
 27570  006182  0012               	return	
 27571  006184                     
 27572                           ; BSR set to: 1
 27573                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 27574                           
 27575                           ; BSR set to: 1
 27576  006184  0EDF               	movlw	low _MdmOnOffPulseRequest
 27577  006186  0100               	movlb	0	; () banked
 27578  006188  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27579  00618A  0E00               	movlw	high _MdmOnOffPulseRequest
 27580  00618C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27581  00618E  EC25  F036         	call	_GenerateEvt	;wreg free
 27582                           
 27583                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 27584  006192  0E01               	movlw	1
 27585  006194  0100               	movlb	0	; () banked
 27586  006196  6FD1               	movwf	_MdmStatus& (0+255),b
 27587                           
 27588                           ; BSR set to: 0
 27589                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 27590  006198  0E02               	movlw	2
 27591  00619A  0101               	movlb	1	; () banked
 27592  00619C  6FF1               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 27593                           
 27594                           ; BSR set to: 1
 27595                           ;mdm_gsm_gprs.c: 408: }
 27596                           
 27597                           ; BSR set to: 1
 27598                           ;mdm_gsm_gprs.c: 407: break;
 27599                           
 27600                           ;mdm_gsm_gprs.c: 406: default:
 27601                           
 27602                           ; BSR set to: 1
 27603                           ;mdm_gsm_gprs.c: 404: break;
 27604                           
 27605                           ;mdm_gsm_gprs.c: 403: case Stop:
 27606                           
 27607                           ;mdm_gsm_gprs.c: 401: break;
 27608  00619E  0012               	return	
 27609  0061A0                     l1009:
 27610                           
 27611                           ; BSR set to: 1
 27612  0061A0  0101               	movlb	1	; () banked
 27613  0061A2  51F1               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 27614                           
 27615                           ; Switch size 1, requested type "space"
 27616                           ; Number of cases is 3, Range of values is 0 to 2
 27617                           ; switch strategies available:
 27618                           ; Name         Instructions Cycles
 27619                           ; simple_byte           10     6 (average)
 27620                           ;	Chosen strategy is simple_byte
 27621  0061A4  0A00               	xorlw	0	; case 0
 27622  0061A6  B4D8               	btfsc	status,2,c
 27623  0061A8  D7E0               	goto	l1010
 27624  0061AA  0A01               	xorlw	1	; case 1
 27625  0061AC  B4D8               	btfsc	status,2,c
 27626  0061AE  D7EA               	goto	l1013
 27627  0061B0  0A03               	xorlw	3	; case 2
 27628  0061B2  0012               	return	
 27629  0061B4                     __end_of_TurnOnModem:
 27630                           	opt stack 0
 27631                           tosu	equ	0xFFF
 27632                           tosh	equ	0xFFE
 27633                           tosl	equ	0xFFD
 27634                           pclath	equ	0xFFA
 27635                           tblptru	equ	0xFF8
 27636                           tblptrh	equ	0xFF7
 27637                           tblptrl	equ	0xFF6
 27638                           tablat	equ	0xFF5
 27639                           prodh	equ	0xFF4
 27640                           prodl	equ	0xFF3
 27641                           intcon	equ	0xFF2
 27642                           intcon2	equ	0xFF1
 27643                           intcon3	equ	0xFF0
 27644                           indf0	equ	0xFEF
 27645                           postinc0	equ	0xFEE
 27646                           plusw0	equ	0xFEB
 27647                           fsr0h	equ	0xFEA
 27648                           fsr0l	equ	0xFE9
 27649                           wreg	equ	0xFE8
 27650                           indf1	equ	0xFE7
 27651                           postinc1	equ	0xFE6
 27652                           postdec1	equ	0xFE5
 27653                           fsr1h	equ	0xFE2
 27654                           fsr1l	equ	0xFE1
 27655                           indf2	equ	0xFDF
 27656                           postinc2	equ	0xFDE
 27657                           postdec2	equ	0xFDD
 27658                           plusw2	equ	0xFDB
 27659                           fsr2h	equ	0xFDA
 27660                           fsr2l	equ	0xFD9
 27661                           status	equ	0xFD8
 27662                           
 27663 ;; *************** function _SendSmsSm *****************
 27664 ;; Defined at:
 27665 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27666 ;; Parameters:    Size  Location     Type
 27667 ;;		None
 27668 ;; Auto vars:     Size  Location     Type
 27669 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 27670 ;; Return value:  Size  Location     Type
 27671 ;;                  1    wreg      void 
 27672 ;; Registers used:
 27673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27674 ;; Tracked objects:
 27675 ;;		On entry : 0/0
 27676 ;;		On exit  : 0/0
 27677 ;;		Unchanged: 0/0
 27678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27680 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27681 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27682 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27683 ;;Total ram usage:       52 bytes
 27684 ;; Hardware stack levels used:    1
 27685 ;; Hardware stack levels required when called:   14
 27686 ;; This function calls:
 27687 ;;		_OsTmr_GetTimerStatus
 27688 ;;		_OsTmr_StartTimer
 27689 ;;		_ReceiveEvt
 27690 ;;		_StringCopy
 27691 ;;		_Uart_WriteStringLen
 27692 ;; This function is called by:
 27693 ;;		_Mdm_MainTask
 27694 ;; This function uses a non-reentrant model
 27695 ;;
 27696                           
 27697                           	psect	text133
 27698  0019F8                     __ptext133:
 27699                           	opt stack 0
 27700  0019F8                     _SendSmsSm:
 27701                           	opt stack 13
 27702                           
 27703                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 27704                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 27705                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 27706                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 27707                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 27708                           
 27709                           ;incstack = 0
 27710  0019F8  0E03               	movlw	3
 27711  0019FA  0100               	movlb	0	; () banked
 27712  0019FC  19D1               	xorwf	_MdmStatus& (0+255),w,b
 27713  0019FE  A4D8               	btfss	status,2,c
 27714  001A00  0012               	return	
 27715  001A02  D0C1               	goto	l1091
 27716  001A04                     
 27717                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 27718                           
 27719                           ; BSR set to: 0
 27720  001A04  0EDE               	movlw	low _SendSmsEvent
 27721  001A06  0100               	movlb	0	; () banked
 27722  001A08  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27723  001A0A  0E00               	movlw	high _SendSmsEvent
 27724  001A0C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27725  001A0E  EC34  F034         	call	_ReceiveEvt	;wreg free
 27726  001A12  0900               	iorlw	0
 27727  001A14  B4D8               	btfsc	status,2,c
 27728  001A16  0012               	return	
 27729                           
 27730                           ;mdm_gsm_gprs.c: 671: {
 27731                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 27732  001A18  0E01               	movlw	1
 27733  001A1A  0101               	movlb	1	; () banked
 27734  001A1C  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27735                           
 27736                           ; BSR set to: 1
 27737                           ;mdm_gsm_gprs.c: 674: }
 27738                           ;mdm_gsm_gprs.c: 675: break;
 27739  001A1E  0012               	return	
 27740  001A20                     
 27741                           ; BSR set to: 1
 27742                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 27743                           
 27744                           ; BSR set to: 1
 27745  001A20  0ECD               	movlw	low STR_5
 27746  001A22  0100               	movlb	0	; () banked
 27747  001A24  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27748  001A26  0EFF               	movlw	high STR_5
 27749  001A28  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27750  001A2A  0E00               	movlw	low SendSmsSm@UartMessage
 27751  001A2C  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27752  001A2E  0E01               	movlw	high SendSmsSm@UartMessage
 27753  001A30  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27754  001A32  0E00               	movlw	0
 27755  001A34  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 27756  001A36  0E09               	movlw	9
 27757  001A38  6F89               	movwf	StringCopy@Len& (0+255),b
 27758  001A3A  ECBC  F02C         	call	_StringCopy	;wreg free
 27759                           
 27760                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 27761  001A3E  0E72               	movlw	low _PhoneNumber
 27762  001A40  0100               	movlb	0	; () banked
 27763  001A42  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27764  001A44  0E05               	movlw	high _PhoneNumber
 27765  001A46  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27766  001A48  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 27767  001A4A  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27768  001A4C  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 27769  001A4E  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27770  001A50  C0D2  F089         	movff	_PhoneNumbLen,StringCopy@Len
 27771  001A54  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 27772  001A56  ECBC  F02C         	call	_StringCopy	;wreg free
 27773                           
 27774                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 27775  001A5A  0100               	movlb	0	; () banked
 27776  001A5C  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 27777  001A5E  6F9B               	movwf	??_SendSmsSm& (0+255),b
 27778  001A60  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 27779  001A62  0E09               	movlw	9
 27780  001A64  279B               	addwf	??_SendSmsSm& (0+255),f,b
 27781  001A66  0E00               	movlw	0
 27782  001A68  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 27783  001A6A  0E00               	movlw	low SendSmsSm@UartMessage
 27784  001A6C  259B               	addwf	??_SendSmsSm& (0+255),w,b
 27785  001A6E  6ED9               	movwf	fsr2l,c
 27786  001A70  0E01               	movlw	high SendSmsSm@UartMessage
 27787  001A72  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 27788  001A74  6EDA               	movwf	fsr2h,c
 27789  001A76  0E22               	movlw	34
 27790  001A78  6EDF               	movwf	indf2,c
 27791                           
 27792                           ; BSR set to: 0
 27793                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 27794  001A7A  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 27795  001A7C  6F9B               	movwf	??_SendSmsSm& (0+255),b
 27796  001A7E  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 27797  001A80  0E0A               	movlw	10
 27798  001A82  279B               	addwf	??_SendSmsSm& (0+255),f,b
 27799  001A84  0E00               	movlw	0
 27800  001A86  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 27801  001A88  0E00               	movlw	low SendSmsSm@UartMessage
 27802  001A8A  259B               	addwf	??_SendSmsSm& (0+255),w,b
 27803  001A8C  6ED9               	movwf	fsr2l,c
 27804  001A8E  0E01               	movlw	high SendSmsSm@UartMessage
 27805  001A90  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 27806  001A92  6EDA               	movwf	fsr2h,c
 27807  001A94  0E0D               	movlw	13
 27808  001A96  6EDF               	movwf	indf2,c
 27809                           
 27810                           ; BSR set to: 0
 27811                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 27812  001A98  0E00               	movlw	low SendSmsSm@UartMessage
 27813  001A9A  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 27814  001A9C  0E01               	movlw	high SendSmsSm@UartMessage
 27815  001A9E  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 27816  001AA0  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 27817  001AA2  0F0B               	addlw	11
 27818  001AA4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 27819  001AA6  0E01               	movlw	1
 27820  001AA8  EC0F  F032         	call	_Uart_WriteStringLen
 27821                           
 27822                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 27823  001AAC  0EE7               	movlw	low SendSmsSm@SwTimer
 27824  001AAE  0100               	movlb	0	; () banked
 27825  001AB0  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27826  001AB2  0E03               	movlw	high SendSmsSm@SwTimer
 27827  001AB4  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27828  001AB6  0EC4               	movlw	196
 27829  001AB8  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27830  001ABA  0E09               	movlw	9
 27831  001ABC  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27832  001ABE  0E00               	movlw	0
 27833  001AC0  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27834  001AC2  0E00               	movlw	0
 27835  001AC4  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27836  001AC6  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 27837                           
 27838                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 27839  001ACA  0E05               	movlw	5
 27840  001ACC  0101               	movlb	1	; () banked
 27841  001ACE  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27842                           
 27843                           ; BSR set to: 1
 27844                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 27845  001AD0  0E02               	movlw	2
 27846  001AD2  6FEC               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 27847                           
 27848                           ;mdm_gsm_gprs.c: 691: break;
 27849  001AD4  0012               	return	
 27850  001AD6                     
 27851                           ; BSR set to: 1
 27852                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 27853                           
 27854                           ; BSR set to: 1
 27855  001AD6  0E0A               	movlw	10
 27856  001AD8  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 27857                           
 27858                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 27859  001ADA  0E0D               	movlw	13
 27860  001ADC  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 27861                           
 27862                           ; BSR set to: 1
 27863                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 27864  001ADE  0E00               	movlw	low SendSmsSm@UartMessage
 27865  001AE0  0100               	movlb	0	; () banked
 27866  001AE2  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 27867  001AE4  0E01               	movlw	high SendSmsSm@UartMessage
 27868  001AE6  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 27869  001AE8  0E02               	movlw	2
 27870  001AEA  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 27871  001AEC  0E01               	movlw	1
 27872  001AEE  EC0F  F032         	call	_Uart_WriteStringLen
 27873                           
 27874                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 27875  001AF2  0E03               	movlw	3
 27876  001AF4  0101               	movlb	1	; () banked
 27877  001AF6  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27878                           
 27879                           ;mdm_gsm_gprs.c: 701: break;
 27880  001AF8  0012               	return	
 27881  001AFA                     
 27882                           ; BSR set to: 1
 27883                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 27884                           
 27885                           ; BSR set to: 1
 27886  001AFA  0E3C               	movlw	low _NewStringReceived
 27887  001AFC  0100               	movlb	0	; () banked
 27888  001AFE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27889  001B00  0E00               	movlw	high _NewStringReceived
 27890  001B02  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27891  001B04  EC34  F034         	call	_ReceiveEvt	;wreg free
 27892  001B08  0900               	iorlw	0
 27893  001B0A  B4D8               	btfsc	status,2,c
 27894  001B0C  0012               	return	
 27895                           
 27896                           ;mdm_gsm_gprs.c: 706: {
 27897                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 27898  001B0E  CC58  FFE8         	movff	_RxBuffer,wreg
 27899  001B12  0A3E               	xorlw	62
 27900  001B14  A4D8               	btfss	status,2,c
 27901  001B16  0012               	return	
 27902                           
 27903                           ;mdm_gsm_gprs.c: 709: {
 27904                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 27905  001B18  0E04               	movlw	4
 27906  001B1A  0101               	movlb	1	; () banked
 27907  001B1C  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27908                           
 27909                           ; BSR set to: 1
 27910                           ;mdm_gsm_gprs.c: 712: }
 27911                           ;mdm_gsm_gprs.c: 713: }
 27912                           ;mdm_gsm_gprs.c: 714: break;
 27913                           
 27914                           ; BSR set to: 1
 27915  001B1E  0012               	return	
 27916  001B20                     
 27917                           ; BSR set to: 1
 27918                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 27919                           
 27920                           ; BSR set to: 1
 27921  001B20  0EC8               	movlw	low _MessageText
 27922  001B22  0100               	movlb	0	; () banked
 27923  001B24  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27924  001B26  0E08               	movlw	high _MessageText
 27925  001B28  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27926  001B2A  0E00               	movlw	low SendSmsSm@UartMessage
 27927  001B2C  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27928  001B2E  0E01               	movlw	high SendSmsSm@UartMessage
 27929  001B30  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27930  001B32  C0D3  F089         	movff	_SmsLen,StringCopy@Len
 27931  001B36  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 27932  001B38  ECBC  F02C         	call	_StringCopy	;wreg free
 27933                           
 27934                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 27935  001B3C  0100               	movlb	0	; () banked
 27936  001B3E  51D3               	movf	_SmsLen& (0+255),w,b
 27937  001B40  0D01               	mullw	1
 27938  001B42  0E00               	movlw	low SendSmsSm@UartMessage
 27939  001B44  24F3               	addwf	prodl,w,c
 27940  001B46  6ED9               	movwf	fsr2l,c
 27941  001B48  0E01               	movlw	high SendSmsSm@UartMessage
 27942  001B4A  20F4               	addwfc	prodh,w,c
 27943  001B4C  6EDA               	movwf	fsr2h,c
 27944  001B4E  0E1A               	movlw	26
 27945  001B50  6EDF               	movwf	indf2,c
 27946                           
 27947                           ; BSR set to: 0
 27948                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 27949  001B52  0E00               	movlw	low SendSmsSm@UartMessage
 27950  001B54  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 27951  001B56  0E01               	movlw	high SendSmsSm@UartMessage
 27952  001B58  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 27953  001B5A  29D3               	incf	_SmsLen& (0+255),w,b
 27954  001B5C  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 27955  001B5E  0E01               	movlw	1
 27956  001B60  EC0F  F032         	call	_Uart_WriteStringLen
 27957                           
 27958                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 27959  001B64  0E00               	movlw	0
 27960  001B66  0101               	movlb	1	; () banked
 27961  001B68  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27962                           
 27963                           ;mdm_gsm_gprs.c: 725: break;
 27964  001B6A  0012               	return	
 27965  001B6C                     
 27966                           ; BSR set to: 1
 27967                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 27968                           
 27969                           ; BSR set to: 1
 27970  001B6C  0EE7               	movlw	low SendSmsSm@SwTimer
 27971  001B6E  0100               	movlb	0	; () banked
 27972  001B70  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27973  001B72  0E03               	movlw	high SendSmsSm@SwTimer
 27974  001B74  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27975  001B76  ECC6  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 27976  001B7A  06E8               	decf	wreg,f,c
 27977  001B7C  A4D8               	btfss	status,2,c
 27978  001B7E  0012               	return	
 27979                           
 27980                           ;mdm_gsm_gprs.c: 730: {
 27981                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 27982  001B80  C1EC  F1ED         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 27983                           
 27984                           ;mdm_gsm_gprs.c: 738: }
 27985                           
 27986                           ;mdm_gsm_gprs.c: 737: break;
 27987                           
 27988                           ;mdm_gsm_gprs.c: 736: default:
 27989                           
 27990                           ;mdm_gsm_gprs.c: 733: }
 27991                           ;mdm_gsm_gprs.c: 734: break;
 27992  001B84  0012               	return	
 27993  001B86                     l1091:
 27994  001B86  0101               	movlb	1	; () banked
 27995  001B88  51ED               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 27996                           
 27997                           ; Switch size 1, requested type "space"
 27998                           ; Number of cases is 6, Range of values is 0 to 5
 27999                           ; switch strategies available:
 28000                           ; Name         Instructions Cycles
 28001                           ; simple_byte           19    10 (average)
 28002                           ;	Chosen strategy is simple_byte
 28003  001B8A  0A00               	xorlw	0	; case 0
 28004  001B8C  B4D8               	btfsc	status,2,c
 28005  001B8E  D73A               	goto	l1092
 28006  001B90  0A01               	xorlw	1	; case 1
 28007  001B92  B4D8               	btfsc	status,2,c
 28008  001B94  D745               	goto	l1095
 28009  001B96  0A03               	xorlw	3	; case 2
 28010  001B98  B4D8               	btfsc	status,2,c
 28011  001B9A  D79D               	goto	l1096
 28012  001B9C  0A01               	xorlw	1	; case 3
 28013  001B9E  B4D8               	btfsc	status,2,c
 28014  001BA0  D7AC               	goto	l1097
 28015  001BA2  0A07               	xorlw	7	; case 4
 28016  001BA4  B4D8               	btfsc	status,2,c
 28017  001BA6  D7BC               	goto	l1100
 28018  001BA8  0A01               	xorlw	1	; case 5
 28019  001BAA  A4D8               	btfss	status,2,c
 28020                           
 28021                           ; BSR set to: 1
 28022  001BAC  0012               	return	
 28023  001BAE  D7DE               	goto	l1101
 28024  001BB0                     __end_of_SendSmsSm:
 28025                           	opt stack 0
 28026                           tosu	equ	0xFFF
 28027                           tosh	equ	0xFFE
 28028                           tosl	equ	0xFFD
 28029                           pclath	equ	0xFFA
 28030                           tblptru	equ	0xFF8
 28031                           tblptrh	equ	0xFF7
 28032                           tblptrl	equ	0xFF6
 28033                           tablat	equ	0xFF5
 28034                           prodh	equ	0xFF4
 28035                           prodl	equ	0xFF3
 28036                           intcon	equ	0xFF2
 28037                           intcon2	equ	0xFF1
 28038                           intcon3	equ	0xFF0
 28039                           indf0	equ	0xFEF
 28040                           postinc0	equ	0xFEE
 28041                           plusw0	equ	0xFEB
 28042                           fsr0h	equ	0xFEA
 28043                           fsr0l	equ	0xFE9
 28044                           wreg	equ	0xFE8
 28045                           indf1	equ	0xFE7
 28046                           postinc1	equ	0xFE6
 28047                           postdec1	equ	0xFE5
 28048                           fsr1h	equ	0xFE2
 28049                           fsr1l	equ	0xFE1
 28050                           indf2	equ	0xFDF
 28051                           postinc2	equ	0xFDE
 28052                           postdec2	equ	0xFDD
 28053                           plusw2	equ	0xFDB
 28054                           fsr2h	equ	0xFDA
 28055                           fsr2l	equ	0xFD9
 28056                           status	equ	0xFD8
 28057                           
 28058 ;; *************** function _Uart_WriteStringLen *****************
 28059 ;; Defined at:
 28060 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28061 ;; Parameters:    Size  Location     Type
 28062 ;;  Module          1    wreg     unsigned char 
 28063 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 28064 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 28065 ;;  Len             1   34[BANK0 ] unsigned char 
 28066 ;; Auto vars:     Size  Location     Type
 28067 ;;  Module          1   36[BANK0 ] unsigned char 
 28068 ;;  Index           1   35[BANK0 ] unsigned char 
 28069 ;; Return value:  Size  Location     Type
 28070 ;;                  1    wreg      void 
 28071 ;; Registers used:
 28072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28073 ;; Tracked objects:
 28074 ;;		On entry : 0/0
 28075 ;;		On exit  : 0/0
 28076 ;;		Unchanged: 0/0
 28077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28078 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28079 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28081 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28082 ;;Total ram usage:        5 bytes
 28083 ;; Hardware stack levels used:    1
 28084 ;; Hardware stack levels required when called:   12
 28085 ;; This function calls:
 28086 ;;		_UartTxBufferStatus
 28087 ;;		_UartWriteByte
 28088 ;; This function is called by:
 28089 ;;		_SendSmsSm
 28090 ;;		_GsmGprsTerminal
 28091 ;; This function uses a non-reentrant model
 28092 ;;
 28093                           
 28094                           	psect	text134
 28095  00641E                     __ptext134:
 28096                           	opt stack 0
 28097  00641E                     _Uart_WriteStringLen:
 28098                           	opt stack 14
 28099                           
 28100                           ;incstack = 0
 28101                           ;Uart_WriteStringLen@Module stored from wreg
 28102  00641E  0100               	movlb	0	; () banked
 28103  006420  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 28104                           
 28105                           ;uart_drv.c: 544: UINT8 Index;
 28106                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 28107  006422  0E00               	movlw	0
 28108  006424  0100               	movlb	0	; () banked
 28109  006426  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 28110  006428  D015               	goto	l715
 28111  00642A                     
 28112                           ; BSR set to: 0
 28113                           ;uart_drv.c: 547: {
 28114                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 28115                           
 28116                           ; BSR set to: 0
 28117  00642A  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 28118  00642E  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 28119  006432  50DF               	movf	indf2,w,c
 28120  006434  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 28121  006436  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 28122  006438  EC80  F035         	call	_UartWriteByte
 28123                           
 28124                           ;uart_drv.c: 551: StringToWrite++;
 28125  00643C  0100               	movlb	0	; () banked
 28126  00643E  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 28127  006440  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 28128  006442                     
 28129                           ; BSR set to: 0
 28130                           
 28131                           ; BSR set to: 0
 28132  006442  0100               	movlb	0	; () banked
 28133  006444  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 28134  006446  EC40  F030         	call	_UartTxBufferStatus
 28135  00644A  06E8               	decf	wreg,f,c
 28136  00644C  B4D8               	btfsc	status,2,c
 28137  00644E  D7F9               	goto	l718
 28138  006450  0100               	movlb	0	; () banked
 28139  006452  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 28140  006454                     l715:
 28141                           
 28142                           ; BSR set to: 0
 28143                           
 28144                           ; BSR set to: 0
 28145  006454  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 28146  006456  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 28147  006458  B0D8               	btfsc	status,0,c
 28148  00645A  0012               	return	
 28149  00645C  D7E6               	goto	l716
 28150  00645E                     __end_of_Uart_WriteStringLen:
 28151                           	opt stack 0
 28152                           tosu	equ	0xFFF
 28153                           tosh	equ	0xFFE
 28154                           tosl	equ	0xFFD
 28155                           pclath	equ	0xFFA
 28156                           tblptru	equ	0xFF8
 28157                           tblptrh	equ	0xFF7
 28158                           tblptrl	equ	0xFF6
 28159                           tablat	equ	0xFF5
 28160                           prodh	equ	0xFF4
 28161                           prodl	equ	0xFF3
 28162                           intcon	equ	0xFF2
 28163                           intcon2	equ	0xFF1
 28164                           intcon3	equ	0xFF0
 28165                           indf0	equ	0xFEF
 28166                           postinc0	equ	0xFEE
 28167                           plusw0	equ	0xFEB
 28168                           fsr0h	equ	0xFEA
 28169                           fsr0l	equ	0xFE9
 28170                           wreg	equ	0xFE8
 28171                           indf1	equ	0xFE7
 28172                           postinc1	equ	0xFE6
 28173                           postdec1	equ	0xFE5
 28174                           fsr1h	equ	0xFE2
 28175                           fsr1l	equ	0xFE1
 28176                           indf2	equ	0xFDF
 28177                           postinc2	equ	0xFDE
 28178                           postdec2	equ	0xFDD
 28179                           plusw2	equ	0xFDB
 28180                           fsr2h	equ	0xFDA
 28181                           fsr2l	equ	0xFD9
 28182                           status	equ	0xFD8
 28183                           
 28184 ;; *************** function _ModemEvtParser *****************
 28185 ;; Defined at:
 28186 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28187 ;; Parameters:    Size  Location     Type
 28188 ;;		None
 28189 ;; Auto vars:     Size  Location     Type
 28190 ;;  CallReadyStr   10   47[BANK0 ] unsigned char [10]
 28191 ;;  SmsString       5   62[BANK0 ] unsigned char [5]
 28192 ;;  ClipString      5   57[BANK0 ] unsigned char [5]
 28193 ;;  RingString      4   67[BANK0 ] unsigned char [4]
 28194 ;;  CompareIdx      1   72[BANK0 ] unsigned char 
 28195 ;;  Match           1   71[BANK0 ] unsigned char 
 28196 ;; Return value:  Size  Location     Type
 28197 ;;                  1    wreg      void 
 28198 ;; Registers used:
 28199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28200 ;; Tracked objects:
 28201 ;;		On entry : 0/0
 28202 ;;		On exit  : 0/0
 28203 ;;		Unchanged: 0/0
 28204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28206 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28208 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28209 ;;Total ram usage:       26 bytes
 28210 ;; Hardware stack levels used:    1
 28211 ;; Hardware stack levels required when called:   12
 28212 ;; This function calls:
 28213 ;;		_GenerateEvt
 28214 ;;		_ReceiveEvt
 28215 ;;		_StringCompare
 28216 ;;		_StringCopy
 28217 ;;		_Uart_ClearRxBuffer
 28218 ;; This function is called by:
 28219 ;;		_Mdm_MainTask
 28220 ;; This function uses a non-reentrant model
 28221 ;;
 28222                           
 28223                           	psect	text135
 28224  001D36                     __ptext135:
 28225                           	opt stack 0
 28226  001D36                     _ModemEvtParser:
 28227                           	opt stack 15
 28228                           
 28229                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 28230                           
 28231                           ; BSR set to: 0
 28232                           ;incstack = 0
 28233  001D36  C3CD  F0A3         	movff	ModemEvtParser@F9115,ModemEvtParser@RingString
 28234  001D3A  C3CE  F0A4         	movff	ModemEvtParser@F9115+1,ModemEvtParser@RingString+1
 28235  001D3E  C3CF  F0A5         	movff	ModemEvtParser@F9115+2,ModemEvtParser@RingString+2
 28236  001D42  C3D0  F0A6         	movff	ModemEvtParser@F9115+3,ModemEvtParser@RingString+3
 28237                           
 28238                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 28239  001D46  EE23  F0C8         	lfsr	2,ModemEvtParser@F9117
 28240  001D4A  EE10  F099         	lfsr	1,ModemEvtParser@ClipString
 28241  001D4E  0E04               	movlw	4
 28242  001D50                     u15191:
 28243  001D50  CFDB FFE3          	movff	plusw2,plusw1
 28244  001D54  06E8               	decf	wreg,f,c
 28245  001D56  E2FC               	bc	u15191
 28246                           
 28247                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 28248  001D58  EE23  F0C3         	lfsr	2,ModemEvtParser@F9119
 28249  001D5C  EE10  F09E         	lfsr	1,ModemEvtParser@SmsString
 28250  001D60  0E04               	movlw	4
 28251  001D62                     u15201:
 28252  001D62  CFDB FFE3          	movff	plusw2,plusw1
 28253  001D66  06E8               	decf	wreg,f,c
 28254  001D68  E2FC               	bc	u15201
 28255                           
 28256                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 28257  001D6A  EE24  F0EF         	lfsr	2,ModemEvtParser@F9121
 28258  001D6E  EE10  F08F         	lfsr	1,ModemEvtParser@CallReadyString
 28259  001D72  0E09               	movlw	9
 28260  001D74                     u15211:
 28261  001D74  CFDB FFE3          	movff	plusw2,plusw1
 28262  001D78  06E8               	decf	wreg,f,c
 28263  001D7A  E2FC               	bc	u15211
 28264                           
 28265                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 28266  001D7C  0E00               	movlw	0
 28267  001D7E  0100               	movlb	0	; () banked
 28268  001D80  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 28269                           
 28270                           ; BSR set to: 0
 28271                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 28272  001D82  0E00               	movlw	0
 28273  001D84  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 28274                           
 28275                           ; BSR set to: 0
 28276                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 28277  001D86  0E3B               	movlw	low _NewMdmEvtParserRequest
 28278  001D88  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28279  001D8A  0E00               	movlw	high _NewMdmEvtParserRequest
 28280  001D8C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28281  001D8E  EC34  F034         	call	_ReceiveEvt	;wreg free
 28282  001D92  0900               	iorlw	0
 28283  001D94  B4D8               	btfsc	status,2,c
 28284  001D96  0012               	return	
 28285                           
 28286                           ;mdm_gsm_gprs.c: 510: {
 28287                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 28288  001D98  0E00               	movlw	0
 28289  001D9A  0100               	movlb	0	; () banked
 28290  001D9C  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 28291  001D9E                     l15803:
 28292                           
 28293                           ; BSR set to: 0
 28294  001D9E  0E03               	movlw	3
 28295  001DA0  65A8               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 28296  001DA2  D074               	goto	l1052
 28297  001DA4  D083               	goto	u15280
 28298  001DA6                     
 28299                           ; BSR set to: 0
 28300                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 28301                           
 28302                           ; BSR set to: 0
 28303  001DA6  0EA3               	movlw	low ModemEvtParser@RingString
 28304  001DA8  6F7D               	movwf	StringCompare@String1& (0+255),b
 28305  001DAA  0E00               	movlw	high ModemEvtParser@RingString
 28306  001DAC  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 28307  001DAE  0E58               	movlw	low _RxBuffer
 28308  001DB0  6F7F               	movwf	StringCompare@String2& (0+255),b
 28309  001DB2  0E0C               	movlw	high _RxBuffer
 28310  001DB4  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 28311  001DB6  0E00               	movlw	0
 28312  001DB8  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 28313  001DBA  0E04               	movlw	4
 28314  001DBC  6F81               	movwf	StringCompare@Len& (0+255),b
 28315  001DBE  EC78  F02F         	call	_StringCompare	;wreg free
 28316  001DC2  0900               	iorlw	0
 28317  001DC4  B4D8               	btfsc	status,2,c
 28318  001DC6  D06F               	goto	l1055
 28319                           
 28320                           ;mdm_gsm_gprs.c: 518: {
 28321                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 28322  001DC8  0EDD               	movlw	low _RingEvent
 28323  001DCA  0100               	movlb	0	; () banked
 28324  001DCC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28325  001DCE  0E00               	movlw	high _RingEvent
 28326  001DD0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28327  001DD2  EC25  F036         	call	_GenerateEvt	;wreg free
 28328  001DD6  D040               	goto	l15825
 28329  001DD8                     
 28330                           ; BSR set to: 0
 28331                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 28332                           
 28333                           ; BSR set to: 0
 28334  001DD8  0E99               	movlw	low ModemEvtParser@ClipString
 28335  001DDA  6F7D               	movwf	StringCompare@String1& (0+255),b
 28336  001DDC  0E00               	movlw	high ModemEvtParser@ClipString
 28337  001DDE  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 28338  001DE0  0E58               	movlw	low _RxBuffer
 28339  001DE2  6F7F               	movwf	StringCompare@String2& (0+255),b
 28340  001DE4  0E0C               	movlw	high _RxBuffer
 28341  001DE6  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 28342  001DE8  0E00               	movlw	0
 28343  001DEA  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 28344  001DEC  0E05               	movlw	5
 28345  001DEE  6F81               	movwf	StringCompare@Len& (0+255),b
 28346  001DF0  EC78  F02F         	call	_StringCompare	;wreg free
 28347  001DF4  0900               	iorlw	0
 28348  001DF6  B4D8               	btfsc	status,2,c
 28349  001DF8  D056               	goto	l1055
 28350                           
 28351                           ;mdm_gsm_gprs.c: 529: {
 28352                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 28353  001DFA  0E60               	movlw	low (_RxBuffer+8)
 28354  001DFC  0100               	movlb	0	; () banked
 28355  001DFE  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 28356  001E00  0E0C               	movlw	high (_RxBuffer+8)
 28357  001E02  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28358  001E04  0EC3               	movlw	low _callerNumber
 28359  001E06  6F87               	movwf	StringCopy@DestStr& (0+255),b
 28360  001E08  0E04               	movlw	high _callerNumber
 28361  001E0A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28362  001E0C  0E00               	movlw	0
 28363  001E0E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 28364  001E10  0E0D               	movlw	13
 28365  001E12  6F89               	movwf	StringCopy@Len& (0+255),b
 28366  001E14  ECBC  F02C         	call	_StringCopy	;wreg free
 28367                           
 28368                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 28369  001E18  0EDC               	movlw	low _ClipEvent
 28370  001E1A  0100               	movlb	0	; () banked
 28371  001E1C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28372  001E1E  0E00               	movlw	high _ClipEvent
 28373  001E20  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28374  001E22  EC25  F036         	call	_GenerateEvt	;wreg free
 28375  001E26  D018               	goto	l15825
 28376  001E28                     
 28377                           ; BSR set to: 0
 28378                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 28379                           
 28380                           ; BSR set to: 0
 28381  001E28  0E9E               	movlw	low ModemEvtParser@SmsString
 28382  001E2A  6F7D               	movwf	StringCompare@String1& (0+255),b
 28383  001E2C  0E00               	movlw	high ModemEvtParser@SmsString
 28384  001E2E  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 28385  001E30  0E58               	movlw	low _RxBuffer
 28386  001E32  6F7F               	movwf	StringCompare@String2& (0+255),b
 28387  001E34  0E0C               	movlw	high _RxBuffer
 28388  001E36  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 28389  001E38  0E00               	movlw	0
 28390  001E3A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 28391  001E3C  0E05               	movlw	5
 28392  001E3E  6F81               	movwf	StringCompare@Len& (0+255),b
 28393  001E40  EC78  F02F         	call	_StringCompare	;wreg free
 28394  001E44  0900               	iorlw	0
 28395  001E46  B4D8               	btfsc	status,2,c
 28396  001E48  D02E               	goto	l1055
 28397                           
 28398                           ;mdm_gsm_gprs.c: 541: {
 28399                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 28400  001E4A  0EDB               	movlw	low _SmsEvent
 28401  001E4C  0100               	movlb	0	; () banked
 28402  001E4E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28403  001E50  0E00               	movlw	high _SmsEvent
 28404  001E52  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28405  001E54  EC25  F036         	call	_GenerateEvt	;wreg free
 28406  001E58                     l15825:
 28407                           
 28408                           ;mdm_gsm_gprs.c: 545: Match = 1;
 28409  001E58  0E01               	movlw	1
 28410  001E5A  0100               	movlb	0	; () banked
 28411  001E5C  D015               	goto	L60
 28412  001E5E                     
 28413                           ; BSR set to: 0
 28414                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 28415                           
 28416                           ; BSR set to: 0
 28417  001E5E  0E8F               	movlw	low ModemEvtParser@CallReadyString
 28418  001E60  6F7D               	movwf	StringCompare@String1& (0+255),b
 28419  001E62  0E00               	movlw	high ModemEvtParser@CallReadyString
 28420  001E64  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 28421  001E66  0E58               	movlw	low _RxBuffer
 28422  001E68  6F7F               	movwf	StringCompare@String2& (0+255),b
 28423  001E6A  0E0C               	movlw	high _RxBuffer
 28424  001E6C  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 28425  001E6E  0E00               	movlw	0
 28426  001E70  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 28427  001E72  0E0A               	movlw	10
 28428  001E74  6F81               	movwf	StringCompare@Len& (0+255),b
 28429  001E76  EC78  F02F         	call	_StringCompare	;wreg free
 28430  001E7A  0900               	iorlw	0
 28431  001E7C  B4D8               	btfsc	status,2,c
 28432  001E7E  D013               	goto	l1055
 28433                           
 28434                           ;mdm_gsm_gprs.c: 552: {
 28435                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 28436  001E80  0E02               	movlw	2
 28437  001E82  0100               	movlb	0	; () banked
 28438  001E84  6FD1               	movwf	_MdmStatus& (0+255),b
 28439                           
 28440                           ;mdm_gsm_gprs.c: 556: Match = 1;
 28441  001E86  0E01               	movlw	1
 28442  001E88                     L60:
 28443  001E88  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 28444                           
 28445                           ; BSR set to: 0
 28446                           ;mdm_gsm_gprs.c: 562: }
 28447                           
 28448                           ; BSR set to: 0
 28449                           ;mdm_gsm_gprs.c: 561: break;
 28450                           
 28451                           ;mdm_gsm_gprs.c: 560: default:
 28452                           
 28453                           ; BSR set to: 0
 28454                           ;mdm_gsm_gprs.c: 557: }
 28455                           ;mdm_gsm_gprs.c: 558: break;
 28456  001E8A  D00D               	goto	l1055
 28457  001E8C                     l1052:
 28458                           
 28459                           ; BSR set to: 0
 28460                           
 28461                           ; BSR set to: 0
 28462  001E8C  51A8               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 28463                           
 28464                           ; Switch size 1, requested type "space"
 28465                           ; Number of cases is 4, Range of values is 0 to 3
 28466                           ; switch strategies available:
 28467                           ; Name         Instructions Cycles
 28468                           ; simple_byte           13     7 (average)
 28469                           ;	Chosen strategy is simple_byte
 28470  001E8E  0A00               	xorlw	0	; case 0
 28471  001E90  B4D8               	btfsc	status,2,c
 28472  001E92  D789               	goto	l1053
 28473  001E94  0A01               	xorlw	1	; case 1
 28474  001E96  B4D8               	btfsc	status,2,c
 28475  001E98  D7C7               	goto	l1058
 28476  001E9A  0A03               	xorlw	3	; case 2
 28477  001E9C  B4D8               	btfsc	status,2,c
 28478  001E9E  D7DF               	goto	l1060
 28479  001EA0  0A01               	xorlw	1	; case 3
 28480  001EA2  B4D8               	btfsc	status,2,c
 28481  001EA4  D799               	goto	l1056
 28482  001EA6                     l1055:
 28483                           
 28484                           ; BSR set to: 0
 28485  001EA6  0100               	movlb	0	; () banked
 28486  001EA8  2BA8               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 28487  001EAA  D779               	goto	l15803
 28488  001EAC                     u15280:
 28489                           
 28490                           ; BSR set to: 0
 28491                           ;mdm_gsm_gprs.c: 563: }
 28492                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 28493                           
 28494                           ; BSR set to: 0
 28495  001EAC  05A7               	decf	ModemEvtParser@Match& (0+255),w,b
 28496  001EAE  A4D8               	btfss	status,2,c
 28497  001EB0  0012               	return	
 28498                           
 28499                           ; BSR set to: 0
 28500                           ;mdm_gsm_gprs.c: 567: {
 28501                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 28502  001EB2  EC71  F033         	call	_Uart_ClearRxBuffer	;wreg free
 28503  001EB6  0012               	return	
 28504  001EB8                     __end_of_ModemEvtParser:
 28505                           	opt stack 0
 28506                           tosu	equ	0xFFF
 28507                           tosh	equ	0xFFE
 28508                           tosl	equ	0xFFD
 28509                           pclath	equ	0xFFA
 28510                           tblptru	equ	0xFF8
 28511                           tblptrh	equ	0xFF7
 28512                           tblptrl	equ	0xFF6
 28513                           tablat	equ	0xFF5
 28514                           prodh	equ	0xFF4
 28515                           prodl	equ	0xFF3
 28516                           intcon	equ	0xFF2
 28517                           intcon2	equ	0xFF1
 28518                           intcon3	equ	0xFF0
 28519                           indf0	equ	0xFEF
 28520                           postinc0	equ	0xFEE
 28521                           plusw0	equ	0xFEB
 28522                           fsr0h	equ	0xFEA
 28523                           fsr0l	equ	0xFE9
 28524                           wreg	equ	0xFE8
 28525                           indf1	equ	0xFE7
 28526                           postinc1	equ	0xFE6
 28527                           postdec1	equ	0xFE5
 28528                           plusw1	equ	0xFE3
 28529                           fsr1h	equ	0xFE2
 28530                           fsr1l	equ	0xFE1
 28531                           indf2	equ	0xFDF
 28532                           postinc2	equ	0xFDE
 28533                           postdec2	equ	0xFDD
 28534                           plusw2	equ	0xFDB
 28535                           fsr2h	equ	0xFDA
 28536                           fsr2l	equ	0xFD9
 28537                           status	equ	0xFD8
 28538                           
 28539 ;; *************** function _Uart_ClearRxBuffer *****************
 28540 ;; Defined at:
 28541 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28542 ;; Parameters:    Size  Location     Type
 28543 ;;		None
 28544 ;; Auto vars:     Size  Location     Type
 28545 ;;  Index           2   29[BANK0 ] unsigned short 
 28546 ;; Return value:  Size  Location     Type
 28547 ;;                  1    wreg      void 
 28548 ;; Registers used:
 28549 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28550 ;; Tracked objects:
 28551 ;;		On entry : 0/0
 28552 ;;		On exit  : 0/0
 28553 ;;		Unchanged: 0/0
 28554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28556 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28558 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28559 ;;Total ram usage:        2 bytes
 28560 ;; Hardware stack levels used:    1
 28561 ;; Hardware stack levels required when called:   11
 28562 ;; This function calls:
 28563 ;;		Nothing
 28564 ;; This function is called by:
 28565 ;;		_ModemEvtParser
 28566 ;; This function uses a non-reentrant model
 28567 ;;
 28568                           
 28569                           	psect	text136
 28570  0066E2                     __ptext136:
 28571                           	opt stack 0
 28572  0066E2                     _Uart_ClearRxBuffer:
 28573                           	opt stack 15
 28574                           
 28575                           ;uart_drv.c: 567: UINT16 Index = 0;
 28576                           
 28577                           ;incstack = 0
 28578  0066E2  0E00               	movlw	0
 28579  0066E4  0100               	movlb	0	; () banked
 28580  0066E6  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 28581  0066E8  0E00               	movlw	0
 28582  0066EA  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 28583                           
 28584                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 28585  0066EC  0E00               	movlw	0
 28586  0066EE  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 28587  0066F0  0E00               	movlw	0
 28588  0066F2  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 28589  0066F4                     l14879:
 28590                           
 28591                           ; BSR set to: 0
 28592  0066F4  0E90               	movlw	144
 28593  0066F6  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 28594  0066F8  0E01               	movlw	1
 28595  0066FA  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 28596  0066FC  B0D8               	btfsc	status,0,c
 28597  0066FE  0012               	return	
 28598                           
 28599                           ; BSR set to: 0
 28600                           ;uart_drv.c: 571: {
 28601                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 28602                           
 28603                           ; BSR set to: 0
 28604                           
 28605                           ; BSR set to: 0
 28606  006700  0E58               	movlw	low _RxBuffer
 28607  006702  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 28608  006704  6ED9               	movwf	fsr2l,c
 28609  006706  0E0C               	movlw	high _RxBuffer
 28610  006708  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 28611  00670A  6EDA               	movwf	fsr2h,c
 28612  00670C  0E00               	movlw	0
 28613  00670E  6EDF               	movwf	indf2,c
 28614                           
 28615                           ; BSR set to: 0
 28616  006710  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 28617  006712  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 28618  006714  D7EF               	goto	l14879
 28619  006716                     __end_of_Uart_ClearRxBuffer:
 28620                           	opt stack 0
 28621                           tosu	equ	0xFFF
 28622                           tosh	equ	0xFFE
 28623                           tosl	equ	0xFFD
 28624                           pclath	equ	0xFFA
 28625                           tblptru	equ	0xFF8
 28626                           tblptrh	equ	0xFF7
 28627                           tblptrl	equ	0xFF6
 28628                           tablat	equ	0xFF5
 28629                           prodh	equ	0xFF4
 28630                           prodl	equ	0xFF3
 28631                           intcon	equ	0xFF2
 28632                           intcon2	equ	0xFF1
 28633                           intcon3	equ	0xFF0
 28634                           indf0	equ	0xFEF
 28635                           postinc0	equ	0xFEE
 28636                           plusw0	equ	0xFEB
 28637                           fsr0h	equ	0xFEA
 28638                           fsr0l	equ	0xFE9
 28639                           wreg	equ	0xFE8
 28640                           indf1	equ	0xFE7
 28641                           postinc1	equ	0xFE6
 28642                           postdec1	equ	0xFE5
 28643                           plusw1	equ	0xFE3
 28644                           fsr1h	equ	0xFE2
 28645                           fsr1l	equ	0xFE1
 28646                           indf2	equ	0xFDF
 28647                           postinc2	equ	0xFDE
 28648                           postdec2	equ	0xFDD
 28649                           plusw2	equ	0xFDB
 28650                           fsr2h	equ	0xFDA
 28651                           fsr2l	equ	0xFD9
 28652                           status	equ	0xFD8
 28653                           
 28654 ;; *************** function _StringCompare *****************
 28655 ;; Defined at:
 28656 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28657 ;; Parameters:    Size  Location     Type
 28658 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 28659 ;;		 -> receivedNumber(13), smsText(20), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 28660 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 28661 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 28662 ;;		 -> readBuffer(13), RxBuffer(400), 
 28663 ;;  Len             2   33[BANK0 ] unsigned short 
 28664 ;; Auto vars:     Size  Location     Type
 28665 ;;  Index           2   38[BANK0 ] unsigned short 
 28666 ;;  Result          1   37[BANK0 ] unsigned char 
 28667 ;; Return value:  Size  Location     Type
 28668 ;;                  1    wreg      unsigned char 
 28669 ;; Registers used:
 28670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 28671 ;; Tracked objects:
 28672 ;;		On entry : 0/0
 28673 ;;		On exit  : 0/0
 28674 ;;		Unchanged: 0/0
 28675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28676 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28677 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28678 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28679 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28680 ;;Total ram usage:       11 bytes
 28681 ;; Hardware stack levels used:    1
 28682 ;; Hardware stack levels required when called:   11
 28683 ;; This function calls:
 28684 ;;		Nothing
 28685 ;; This function is called by:
 28686 ;;		_ModemEvtParser
 28687 ;;		_isNumberInMemory
 28688 ;;		_isMasterNumber
 28689 ;; This function uses a non-reentrant model
 28690 ;;
 28691                           
 28692                           	psect	text137
 28693  005EF0                     __ptext137:
 28694                           	opt stack 0
 28695  005EF0                     _StringCompare:
 28696                           	opt stack 14
 28697                           
 28698                           ;sf.c: 106: UINT16 Index = 0;
 28699                           
 28700                           ; BSR set to: 0
 28701                           ;incstack = 0
 28702  005EF0  0E00               	movlw	0
 28703  005EF2  0100               	movlb	0	; () banked
 28704  005EF4  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 28705  005EF6  0E00               	movlw	0
 28706  005EF8  6F86               	movwf	StringCompare@Index& (0+255),b
 28707                           
 28708                           ;sf.c: 107: UINT8 Result = 1;
 28709  005EFA  0E01               	movlw	1
 28710  005EFC  6F85               	movwf	StringCompare@Result& (0+255),b
 28711                           
 28712                           ;sf.c: 110: for (Index = 0; Index < Len; Index++)
 28713  005EFE  0E00               	movlw	0
 28714  005F00  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 28715  005F02  0E00               	movlw	0
 28716  005F04  6F86               	movwf	StringCompare@Index& (0+255),b
 28717  005F06  D015               	goto	l2256
 28718  005F08                     
 28719                           ; BSR set to: 0
 28720                           ;sf.c: 111: {
 28721                           ;sf.c: 112: if (String1[Index] != String2[Index])
 28722                           
 28723                           ; BSR set to: 0
 28724  005F08  5186               	movf	StringCompare@Index& (0+255),w,b
 28725  005F0A  257F               	addwf	StringCompare@String2& (0+255),w,b
 28726  005F0C  6ED9               	movwf	fsr2l,c
 28727  005F0E  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 28728  005F10  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 28729  005F12  6EDA               	movwf	fsr2h,c
 28730  005F14  5186               	movf	StringCompare@Index& (0+255),w,b
 28731  005F16  257D               	addwf	StringCompare@String1& (0+255),w,b
 28732  005F18  6EE1               	movwf	fsr1l,c
 28733  005F1A  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 28734  005F1C  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 28735  005F1E  6EE2               	movwf	fsr1h,c
 28736  005F20  50DE               	movf	postinc2,w,c
 28737  005F22  18E6               	xorwf	postinc1,w,c
 28738  005F24  B4D8               	btfsc	status,2,c
 28739  005F26  D003               	goto	l2258
 28740                           
 28741                           ; BSR set to: 0
 28742                           ;sf.c: 113: {
 28743                           ;sf.c: 114: Result = 0;
 28744  005F28  0E00               	movlw	0
 28745  005F2A  6F85               	movwf	StringCompare@Result& (0+255),b
 28746                           
 28747                           ;sf.c: 115: break;
 28748  005F2C  D008               	goto	u13000
 28749  005F2E                     l2258:
 28750                           
 28751                           ; BSR set to: 0
 28752                           
 28753                           ; BSR set to: 0
 28754  005F2E  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 28755  005F30  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 28756  005F32                     l2256:
 28757                           
 28758                           ; BSR set to: 0
 28759                           
 28760                           ; BSR set to: 0
 28761  005F32  5181               	movf	StringCompare@Len& (0+255),w,b
 28762  005F34  5D86               	subwf	StringCompare@Index& (0+255),w,b
 28763  005F36  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 28764  005F38  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 28765  005F3A  A0D8               	btfss	status,0,c
 28766  005F3C  D7E5               	goto	l2257
 28767  005F3E                     u13000:
 28768                           
 28769                           ; BSR set to: 0
 28770                           ;sf.c: 116: }
 28771                           ;sf.c: 117: }
 28772                           ;sf.c: 120: return Result;
 28773                           
 28774                           ; BSR set to: 0
 28775  005F3E  5185               	movf	StringCompare@Result& (0+255),w,b
 28776  005F40  0012               	return	
 28777  005F42                     __end_of_StringCompare:
 28778                           	opt stack 0
 28779                           tosu	equ	0xFFF
 28780                           tosh	equ	0xFFE
 28781                           tosl	equ	0xFFD
 28782                           pclath	equ	0xFFA
 28783                           tblptru	equ	0xFF8
 28784                           tblptrh	equ	0xFF7
 28785                           tblptrl	equ	0xFF6
 28786                           tablat	equ	0xFF5
 28787                           prodh	equ	0xFF4
 28788                           prodl	equ	0xFF3
 28789                           intcon	equ	0xFF2
 28790                           intcon2	equ	0xFF1
 28791                           intcon3	equ	0xFF0
 28792                           indf0	equ	0xFEF
 28793                           postinc0	equ	0xFEE
 28794                           plusw0	equ	0xFEB
 28795                           fsr0h	equ	0xFEA
 28796                           fsr0l	equ	0xFE9
 28797                           wreg	equ	0xFE8
 28798                           indf1	equ	0xFE7
 28799                           postinc1	equ	0xFE6
 28800                           postdec1	equ	0xFE5
 28801                           plusw1	equ	0xFE3
 28802                           fsr1h	equ	0xFE2
 28803                           fsr1l	equ	0xFE1
 28804                           indf2	equ	0xFDF
 28805                           postinc2	equ	0xFDE
 28806                           postdec2	equ	0xFDD
 28807                           plusw2	equ	0xFDB
 28808                           fsr2h	equ	0xFDA
 28809                           fsr2l	equ	0xFD9
 28810                           status	equ	0xFD8
 28811                           
 28812 ;; *************** function _GetSmsSm *****************
 28813 ;; Defined at:
 28814 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28815 ;; Parameters:    Size  Location     Type
 28816 ;;		None
 28817 ;; Auto vars:     Size  Location     Type
 28818 ;;		None
 28819 ;; Return value:  Size  Location     Type
 28820 ;;                  1    wreg      void 
 28821 ;; Registers used:
 28822 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28823 ;; Tracked objects:
 28824 ;;		On entry : 0/0
 28825 ;;		On exit  : 0/0
 28826 ;;		Unchanged: 0/0
 28827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28832 ;;Total ram usage:        0 bytes
 28833 ;; Hardware stack levels used:    1
 28834 ;; Hardware stack levels required when called:   13
 28835 ;; This function calls:
 28836 ;;		_ClearBuffer
 28837 ;;		_GenerateEvt
 28838 ;;		_ReceiveEvt
 28839 ;;		_StringCopy
 28840 ;;		_Uart_WriteConstString
 28841 ;; This function is called by:
 28842 ;;		_Mdm_MainTask
 28843 ;; This function uses a non-reentrant model
 28844 ;;
 28845                           
 28846                           	psect	text138
 28847  002C02                     __ptext138:
 28848                           	opt stack 0
 28849  002C02                     _GetSmsSm:
 28850                           	opt stack 14
 28851                           
 28852                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 28853                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 28854                           
 28855                           ; BSR set to: 0
 28856                           ;incstack = 0
 28857  002C02  0E03               	movlw	3
 28858  002C04  0100               	movlb	0	; () banked
 28859  002C06  19D1               	xorwf	_MdmStatus& (0+255),w,b
 28860  002C08  A4D8               	btfss	status,2,c
 28861  002C0A  0012               	return	
 28862  002C0C  D084               	goto	l1070
 28863  002C0E                     
 28864                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 28865                           
 28866                           ; BSR set to: 0
 28867  002C0E  0EDA               	movlw	low _GetSmsText
 28868  002C10  0100               	movlb	0	; () banked
 28869  002C12  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28870  002C14  0E00               	movlw	high _GetSmsText
 28871  002C16  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28872  002C18  EC34  F034         	call	_ReceiveEvt	;wreg free
 28873  002C1C  0900               	iorlw	0
 28874  002C1E  B4D8               	btfsc	status,2,c
 28875  002C20  0012               	return	
 28876                           
 28877                           ;mdm_gsm_gprs.c: 596: {
 28878                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 28879  002C22  0E01               	movlw	1
 28880  002C24  0101               	movlb	1	; () banked
 28881  002C26  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28882                           
 28883                           ; BSR set to: 1
 28884                           ;mdm_gsm_gprs.c: 599: }
 28885                           ;mdm_gsm_gprs.c: 600: break;
 28886  002C28  0012               	return	
 28887  002C2A                     
 28888                           ; BSR set to: 1
 28889                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 28890                           
 28891                           ; BSR set to: 1
 28892  002C2A  0EC1               	movlw	low STR_4
 28893  002C2C  0100               	movlb	0	; () banked
 28894  002C2E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28895  002C30  0EFF               	movlw	high STR_4
 28896  002C32  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28897  002C34  0E01               	movlw	1
 28898  002C36  ECCD  F031         	call	_Uart_WriteConstString
 28899                           
 28900                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 28901  002C3A  0E02               	movlw	2
 28902  002C3C  0101               	movlb	1	; () banked
 28903  002C3E  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28904                           
 28905                           ;mdm_gsm_gprs.c: 607: break;
 28906  002C40  0012               	return	
 28907  002C42                     
 28908                           ; BSR set to: 1
 28909                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 28910                           
 28911                           ; BSR set to: 1
 28912  002C42  0E3C               	movlw	low _NewStringReceived
 28913  002C44  0100               	movlb	0	; () banked
 28914  002C46  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28915  002C48  0E00               	movlw	high _NewStringReceived
 28916  002C4A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28917  002C4C  EC34  F034         	call	_ReceiveEvt	;wreg free
 28918  002C50  0900               	iorlw	0
 28919  002C52  B4D8               	btfsc	status,2,c
 28920  002C54  0012               	return	
 28921                           
 28922                           ;mdm_gsm_gprs.c: 612: {
 28923                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 28924  002C56  CC58  FFE8         	movff	_RxBuffer,wreg
 28925  002C5A  0A2B               	xorlw	43
 28926  002C5C  A4D8               	btfss	status,2,c
 28927  002C5E  0012               	return	
 28928  002C60  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28929  002C64  0A43               	xorlw	67
 28930  002C66  A4D8               	btfss	status,2,c
 28931  002C68  0012               	return	
 28932  002C6A  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 28933  002C6E  0A4D               	xorlw	77
 28934  002C70  A4D8               	btfss	status,2,c
 28935  002C72  0012               	return	
 28936                           
 28937                           ;mdm_gsm_gprs.c: 614: {
 28938                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 28939  002C74  0E00               	movlw	low _Mdm_SmsRx
 28940  002C76  0100               	movlb	0	; () banked
 28941  002C78  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28942  002C7A  0E07               	movlw	high _Mdm_SmsRx
 28943  002C7C  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28944  002C7E  0E00               	movlw	0
 28945  002C80  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28946  002C82  0E50               	movlw	80
 28947  002C84  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28948  002C86  EC56  F033         	call	_ClearBuffer	;wreg free
 28949                           
 28950                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 28951  002C8A  0E58               	movlw	low _RxBuffer
 28952  002C8C  0100               	movlb	0	; () banked
 28953  002C8E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 28954  002C90  0E0C               	movlw	high _RxBuffer
 28955  002C92  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28956  002C94  0E00               	movlw	low _Mdm_SmsRx
 28957  002C96  6F87               	movwf	StringCopy@DestStr& (0+255),b
 28958  002C98  0E07               	movlw	high _Mdm_SmsRx
 28959  002C9A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28960  002C9C  C0C2  F089         	movff	_RxLen,StringCopy@Len
 28961  002CA0  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 28962  002CA4  ECBC  F02C         	call	_StringCopy	;wreg free
 28963                           
 28964                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 28965  002CA8  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 28966                           
 28967                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 28968  002CAC  0E03               	movlw	3
 28969  002CAE  0101               	movlb	1	; () banked
 28970  002CB0  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28971                           
 28972                           ; BSR set to: 1
 28973                           ;mdm_gsm_gprs.c: 622: }
 28974                           ;mdm_gsm_gprs.c: 623: }
 28975                           ;mdm_gsm_gprs.c: 624: break;
 28976                           
 28977                           ; BSR set to: 1
 28978  002CB2  0012               	return	
 28979  002CB4                     
 28980                           ; BSR set to: 1
 28981                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 28982                           
 28983                           ; BSR set to: 1
 28984  002CB4  0E3C               	movlw	low _NewStringReceived
 28985  002CB6  0100               	movlb	0	; () banked
 28986  002CB8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28987  002CBA  0E00               	movlw	high _NewStringReceived
 28988  002CBC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28989  002CBE  EC34  F034         	call	_ReceiveEvt	;wreg free
 28990  002CC2  0900               	iorlw	0
 28991  002CC4  B4D8               	btfsc	status,2,c
 28992  002CC6  0012               	return	
 28993                           
 28994                           ;mdm_gsm_gprs.c: 629: {
 28995                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 28996  002CC8  0E50               	movlw	low (_Mdm_SmsRx+80)
 28997  002CCA  0100               	movlb	0	; () banked
 28998  002CCC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28999  002CCE  0E07               	movlw	high (_Mdm_SmsRx+80)
 29000  002CD0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29001  002CD2  0E00               	movlw	0
 29002  002CD4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29003  002CD6  0E14               	movlw	20
 29004  002CD8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29005  002CDA  EC56  F033         	call	_ClearBuffer	;wreg free
 29006                           
 29007                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 29008  002CDE  0E58               	movlw	low _RxBuffer
 29009  002CE0  0100               	movlb	0	; () banked
 29010  002CE2  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 29011  002CE4  0E0C               	movlw	high _RxBuffer
 29012  002CE6  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 29013  002CE8  0E50               	movlw	low (_Mdm_SmsRx+80)
 29014  002CEA  6F87               	movwf	StringCopy@DestStr& (0+255),b
 29015  002CEC  0E07               	movlw	high (_Mdm_SmsRx+80)
 29016  002CEE  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 29017  002CF0  C0C2  F089         	movff	_RxLen,StringCopy@Len
 29018  002CF4  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 29019  002CF8  ECBC  F02C         	call	_StringCopy	;wreg free
 29020                           
 29021                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 29022  002CFC  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 29023                           
 29024                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 29025  002D00  0E00               	movlw	0
 29026  002D02  0101               	movlb	1	; () banked
 29027  002D04  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 29028                           
 29029                           ; BSR set to: 1
 29030                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 29031  002D06  0ED9               	movlw	low _SmsTxtReady
 29032  002D08  0100               	movlb	0	; () banked
 29033  002D0A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 29034  002D0C  0E00               	movlw	high _SmsTxtReady
 29035  002D0E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 29036  002D10  EC25  F036         	call	_GenerateEvt	;wreg free
 29037                           
 29038                           ;mdm_gsm_gprs.c: 644: }
 29039                           
 29040                           ;mdm_gsm_gprs.c: 643: break;
 29041                           
 29042                           ;mdm_gsm_gprs.c: 642: default:
 29043                           
 29044                           ;mdm_gsm_gprs.c: 639: }
 29045                           ;mdm_gsm_gprs.c: 640: break;
 29046  002D14  0012               	return	
 29047  002D16                     l1070:
 29048  002D16  0101               	movlb	1	; () banked
 29049  002D18  51EE               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 29050                           
 29051                           ; Switch size 1, requested type "space"
 29052                           ; Number of cases is 4, Range of values is 0 to 3
 29053                           ; switch strategies available:
 29054                           ; Name         Instructions Cycles
 29055                           ; simple_byte           13     7 (average)
 29056                           ;	Chosen strategy is simple_byte
 29057  002D1A  0A00               	xorlw	0	; case 0
 29058  002D1C  B4D8               	btfsc	status,2,c
 29059  002D1E  D777               	goto	l1071
 29060  002D20  0A01               	xorlw	1	; case 1
 29061  002D22  B4D8               	btfsc	status,2,c
 29062  002D24  D782               	goto	l1074
 29063  002D26  0A03               	xorlw	3	; case 2
 29064  002D28  B4D8               	btfsc	status,2,c
 29065  002D2A  D78B               	goto	l1075
 29066  002D2C  0A01               	xorlw	1	; case 3
 29067  002D2E  A4D8               	btfss	status,2,c
 29068                           
 29069                           ; BSR set to: 1
 29070  002D30  0012               	return	
 29071  002D32  D7C0               	goto	l1078
 29072  002D34                     __end_of_GetSmsSm:
 29073                           	opt stack 0
 29074                           tosu	equ	0xFFF
 29075                           tosh	equ	0xFFE
 29076                           tosl	equ	0xFFD
 29077                           pclath	equ	0xFFA
 29078                           tblptru	equ	0xFF8
 29079                           tblptrh	equ	0xFF7
 29080                           tblptrl	equ	0xFF6
 29081                           tablat	equ	0xFF5
 29082                           prodh	equ	0xFF4
 29083                           prodl	equ	0xFF3
 29084                           intcon	equ	0xFF2
 29085                           intcon2	equ	0xFF1
 29086                           intcon3	equ	0xFF0
 29087                           indf0	equ	0xFEF
 29088                           postinc0	equ	0xFEE
 29089                           plusw0	equ	0xFEB
 29090                           fsr0h	equ	0xFEA
 29091                           fsr0l	equ	0xFE9
 29092                           wreg	equ	0xFE8
 29093                           indf1	equ	0xFE7
 29094                           postinc1	equ	0xFE6
 29095                           postdec1	equ	0xFE5
 29096                           plusw1	equ	0xFE3
 29097                           fsr1h	equ	0xFE2
 29098                           fsr1l	equ	0xFE1
 29099                           indf2	equ	0xFDF
 29100                           postinc2	equ	0xFDE
 29101                           postdec2	equ	0xFDD
 29102                           plusw2	equ	0xFDB
 29103                           fsr2h	equ	0xFDA
 29104                           fsr2l	equ	0xFD9
 29105                           status	equ	0xFD8
 29106                           
 29107 ;; *************** function _ConfigureModem *****************
 29108 ;; Defined at:
 29109 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29110 ;; Parameters:    Size  Location     Type
 29111 ;;		None
 29112 ;; Auto vars:     Size  Location     Type
 29113 ;;		None
 29114 ;; Return value:  Size  Location     Type
 29115 ;;                  1    wreg      void 
 29116 ;; Registers used:
 29117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29118 ;; Tracked objects:
 29119 ;;		On entry : 0/0
 29120 ;;		On exit  : 0/0
 29121 ;;		Unchanged: 0/0
 29122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29127 ;;Total ram usage:        0 bytes
 29128 ;; Hardware stack levels used:    1
 29129 ;; Hardware stack levels required when called:   14
 29130 ;; This function calls:
 29131 ;;		_GenerateEvt
 29132 ;;		_UartSetConfigLow
 29133 ;;		_Uart_InitUartModule
 29134 ;;		_Uart_WriteConstString
 29135 ;; This function is called by:
 29136 ;;		_Mdm_MainTask
 29137 ;; This function uses a non-reentrant model
 29138 ;;
 29139                           
 29140                           	psect	text139
 29141  003AB6                     __ptext139:
 29142                           	opt stack 0
 29143  003AB6                     _ConfigureModem:
 29144                           	opt stack 13
 29145                           
 29146                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 29147                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 29148                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 29149                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 29150                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 29151                           
 29152                           ;incstack = 0
 29153  003AB6  D056               	goto	l1027
 29154  003AB8                     
 29155                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 29156  003AB8  0E02               	movlw	2
 29157  003ABA  0100               	movlb	0	; () banked
 29158  003ABC  19D1               	xorwf	_MdmStatus& (0+255),w,b
 29159  003ABE  A4D8               	btfss	status,2,c
 29160  003AC0  0012               	return	
 29161                           
 29162                           ; BSR set to: 0
 29163                           ;mdm_gsm_gprs.c: 431: {
 29164                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 29165  003AC2  0E01               	movlw	1
 29166  003AC4  0101               	movlb	1	; () banked
 29167  003AC6  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 29168                           
 29169                           ; BSR set to: 1
 29170                           ;mdm_gsm_gprs.c: 434: }
 29171                           ;mdm_gsm_gprs.c: 435: break;
 29172  003AC8  0012               	return	
 29173  003ACA                     
 29174                           ; BSR set to: 1
 29175                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 29176                           
 29177                           ; BSR set to: 1
 29178  003ACA  0E74               	movlw	low STR_2
 29179  003ACC  0100               	movlb	0	; () banked
 29180  003ACE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29181  003AD0  0EFF               	movlw	high STR_2
 29182  003AD2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29183  003AD4  0E01               	movlw	1
 29184  003AD6  ECCD  F031         	call	_Uart_WriteConstString
 29185                           
 29186                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 29187  003ADA  ECD1  F02D         	call	_UartSetConfigLow	;wreg free
 29188                           
 29189                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 29190  003ADE  0E22               	movlw	low _UartConfig
 29191  003AE0  0100               	movlb	0	; () banked
 29192  003AE2  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 29193  003AE4  0E03               	movlw	high _UartConfig
 29194  003AE6  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 29195  003AE8  0E01               	movlw	1
 29196  003AEA  EC61  F005         	call	_Uart_InitUartModule
 29197                           
 29198                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 29199  003AEE  0E03               	movlw	3
 29200  003AF0  0103               	movlb	3	; () banked
 29201  003AF2  6F1F               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 29202  003AF4  0EE8               	movlw	232
 29203  003AF6  6F1E               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 29204                           
 29205                           ; BSR set to: 3
 29206                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 29207  003AF8  0E02               	movlw	2
 29208  003AFA  0101               	movlb	1	; () banked
 29209  003AFC  6FEF               	movwf	ConfigureModem@NextState& (0+255),b
 29210                           
 29211                           ; BSR set to: 1
 29212                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 29213  003AFE  0E04               	movlw	4
 29214  003B00  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 29215                           
 29216                           ;mdm_gsm_gprs.c: 449: break;
 29217  003B02  0012               	return	
 29218  003B04                     
 29219                           ; BSR set to: 1
 29220                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 29221                           
 29222                           ; BSR set to: 1
 29223  003B04  0EDE               	movlw	low STR_3
 29224  003B06  0100               	movlb	0	; () banked
 29225  003B08  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29226  003B0A  0EFF               	movlw	high STR_3
 29227  003B0C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29228  003B0E  0E01               	movlw	1
 29229  003B10  ECCD  F031         	call	_Uart_WriteConstString
 29230                           
 29231                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 29232  003B14  0E03               	movlw	3
 29233  003B16  0103               	movlb	3	; () banked
 29234  003B18  6F1F               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 29235  003B1A  0EE8               	movlw	232
 29236  003B1C  6F1E               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 29237                           
 29238                           ; BSR set to: 3
 29239                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 29240  003B1E  0E05               	movlw	5
 29241  003B20  0101               	movlb	1	; () banked
 29242  003B22  6FEF               	movwf	ConfigureModem@NextState& (0+255),b
 29243                           
 29244                           ; BSR set to: 1
 29245                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 29246  003B24  0E04               	movlw	4
 29247  003B26  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 29248                           
 29249                           ;mdm_gsm_gprs.c: 459: break;
 29250  003B28  0012               	return	
 29251  003B2A                     
 29252                           ; BSR set to: 1
 29253                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 29254                           
 29255                           ; BSR set to: 1
 29256  003B2A  0103               	movlb	3	; () banked
 29257  003B2C  4B1C               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 29258  003B2E  2B1D               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 29259                           
 29260                           ; BSR set to: 3
 29261                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 29262  003B30  511E               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 29263  003B32  5D1C               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 29264  003B34  511F               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 29265  003B36  591D               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 29266  003B38  A0D8               	btfss	status,0,c
 29267  003B3A  0012               	return	
 29268                           
 29269                           ; BSR set to: 3
 29270                           ;mdm_gsm_gprs.c: 466: {
 29271                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 29272  003B3C  0E00               	movlw	0
 29273  003B3E  6F1D               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 29274  003B40  0E00               	movlw	0
 29275  003B42  6F1C               	movwf	ConfigureModem@DelayCounter& (0+255),b
 29276                           
 29277                           ; BSR set to: 3
 29278                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 29279  003B44  C1EF  F1F0         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 29280                           
 29281                           ; BSR set to: 3
 29282                           ;mdm_gsm_gprs.c: 471: }
 29283                           ;mdm_gsm_gprs.c: 472: break;
 29284  003B48  0012               	return	
 29285  003B4A                     
 29286                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 29287                           
 29288                           ; BSR set to: 3
 29289  003B4A  0E03               	movlw	3
 29290  003B4C  0100               	movlb	0	; () banked
 29291  003B4E  6FD1               	movwf	_MdmStatus& (0+255),b
 29292                           
 29293                           ; BSR set to: 0
 29294                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 29295  003B50  0EFD               	movlw	low _MdmStsReady
 29296  003B52  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 29297  003B54  0E01               	movlw	high _MdmStsReady
 29298  003B56  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 29299  003B58  EC25  F036         	call	_GenerateEvt	;wreg free
 29300                           
 29301                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 29302  003B5C  0E06               	movlw	6
 29303  003B5E  0101               	movlb	1	; () banked
 29304  003B60  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 29305                           
 29306                           ; BSR set to: 1
 29307                           ;mdm_gsm_gprs.c: 488: }
 29308                           
 29309                           ; BSR set to: 1
 29310                           ;mdm_gsm_gprs.c: 487: break;
 29311                           
 29312                           ;mdm_gsm_gprs.c: 486: default:
 29313                           
 29314                           ; BSR set to: 1
 29315                           ;mdm_gsm_gprs.c: 484: break;
 29316                           
 29317                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 29318                           
 29319                           ;mdm_gsm_gprs.c: 481: break;
 29320  003B62  0012               	return	
 29321  003B64                     l1027:
 29322                           
 29323                           ; BSR set to: 1
 29324  003B64  0101               	movlb	1	; () banked
 29325  003B66  51F0               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 29326                           
 29327                           ; Switch size 1, requested type "space"
 29328                           ; Number of cases is 6, Range of values is 0 to 6
 29329                           ; switch strategies available:
 29330                           ; Name         Instructions Cycles
 29331                           ; simple_byte           19    10 (average)
 29332                           ;	Chosen strategy is simple_byte
 29333  003B68  0A00               	xorlw	0	; case 0
 29334  003B6A  B4D8               	btfsc	status,2,c
 29335  003B6C  D7A5               	goto	l1028
 29336  003B6E  0A01               	xorlw	1	; case 1
 29337  003B70  B4D8               	btfsc	status,2,c
 29338  003B72  D7AB               	goto	l1031
 29339  003B74  0A03               	xorlw	3	; case 2
 29340  003B76  B4D8               	btfsc	status,2,c
 29341  003B78  D7C5               	goto	l1032
 29342  003B7A  0A06               	xorlw	6	; case 4
 29343  003B7C  B4D8               	btfsc	status,2,c
 29344  003B7E  D7D5               	goto	l1033
 29345  003B80  0A01               	xorlw	1	; case 5
 29346  003B82  B4D8               	btfsc	status,2,c
 29347  003B84  D7E2               	goto	l1035
 29348  003B86  0A03               	xorlw	3	; case 6
 29349  003B88  0012               	return	
 29350  003B8A                     __end_of_ConfigureModem:
 29351                           	opt stack 0
 29352                           tosu	equ	0xFFF
 29353                           tosh	equ	0xFFE
 29354                           tosl	equ	0xFFD
 29355                           pclath	equ	0xFFA
 29356                           tblptru	equ	0xFF8
 29357                           tblptrh	equ	0xFF7
 29358                           tblptrl	equ	0xFF6
 29359                           tablat	equ	0xFF5
 29360                           prodh	equ	0xFF4
 29361                           prodl	equ	0xFF3
 29362                           intcon	equ	0xFF2
 29363                           intcon2	equ	0xFF1
 29364                           intcon3	equ	0xFF0
 29365                           indf0	equ	0xFEF
 29366                           postinc0	equ	0xFEE
 29367                           plusw0	equ	0xFEB
 29368                           fsr0h	equ	0xFEA
 29369                           fsr0l	equ	0xFE9
 29370                           wreg	equ	0xFE8
 29371                           indf1	equ	0xFE7
 29372                           postinc1	equ	0xFE6
 29373                           postdec1	equ	0xFE5
 29374                           plusw1	equ	0xFE3
 29375                           fsr1h	equ	0xFE2
 29376                           fsr1l	equ	0xFE1
 29377                           indf2	equ	0xFDF
 29378                           postinc2	equ	0xFDE
 29379                           postdec2	equ	0xFDD
 29380                           plusw2	equ	0xFDB
 29381                           fsr2h	equ	0xFDA
 29382                           fsr2l	equ	0xFD9
 29383                           status	equ	0xFD8
 29384                           
 29385 ;; *************** function _Uart_InitUartModule *****************
 29386 ;; Defined at:
 29387 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 29388 ;; Parameters:    Size  Location     Type
 29389 ;;  Module          1    wreg     unsigned char 
 29390 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 29391 ;;		 -> UartConfig(21), 
 29392 ;; Auto vars:     Size  Location     Type
 29393 ;;  Module          1   65[BANK0 ] unsigned char 
 29394 ;; Return value:  Size  Location     Type
 29395 ;;                  1    wreg      void 
 29396 ;; Registers used:
 29397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29398 ;; Tracked objects:
 29399 ;;		On entry : 0/0
 29400 ;;		On exit  : 0/0
 29401 ;;		Unchanged: 0/0
 29402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29403 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29404 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29405 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29406 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29407 ;;Total ram usage:        5 bytes
 29408 ;; Hardware stack levels used:    1
 29409 ;; Hardware stack levels required when called:   13
 29410 ;; This function calls:
 29411 ;;		_SetUartBaudRate
 29412 ;; This function is called by:
 29413 ;;		_ConfigureModem
 29414 ;;		_Mdm_MainTask
 29415 ;; This function uses a non-reentrant model
 29416 ;;
 29417                           
 29418                           	psect	text140
 29419  000AC2                     __ptext140:
 29420                           	opt stack 0
 29421  000AC2                     _Uart_InitUartModule:
 29422                           	opt stack 14
 29423                           
 29424                           ;incstack = 0
 29425                           ;Uart_InitUartModule@Module stored from wreg
 29426  000AC2  0100               	movlb	0	; () banked
 29427  000AC4  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 29428                           
 29429                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 29430  000AC6  0100               	movlb	0	; () banked
 29431  000AC8  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 29432  000ACA  A4D8               	btfss	status,2,c
 29433  000ACC  D0BE               	goto	l668
 29434                           
 29435                           ; BSR set to: 0
 29436                           ;uart_drv.c: 291: {
 29437                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 29438  000ACE  9C94               	bcf	3988,6,c	;volatile
 29439                           
 29440                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 29441  000AD0  8E94               	bsf	3988,7,c	;volatile
 29442                           
 29443                           ; BSR set to: 0
 29444                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 29445  000AD2  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 29446  000AD6  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 29447  000ADA  0E01               	movlw	1
 29448  000ADC  EC65  F015         	call	_SetUartBaudRate
 29449                           
 29450                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 29451  000AE0  0E00               	movlw	0
 29452  000AE2  6EAD               	movwf	4013,c	;volatile
 29453                           
 29454                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 29455  000AE4  0100               	movlb	0	; () banked
 29456  000AE6  EE20 F004          	lfsr	2,4
 29457  000AEA  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29458  000AEC  26D9               	addwf	fsr2l,f,c
 29459  000AEE  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29460  000AF0  22DA               	addwfc	fsr2h,f,c
 29461  000AF2  50DF               	movf	indf2,w,c
 29462  000AF4  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29463  000AF6  0E06               	movlw	6
 29464  000AF8  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29465  000AFA                     u13865:
 29466  000AFA  90D8               	bcf	status,0,c
 29467  000AFC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29468  000AFE  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29469  000B00  D7FC               	goto	u13865
 29470  000B02  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29471  000B04  12AD               	iorwf	4013,f,c	;volatile
 29472                           
 29473                           ; BSR set to: 0
 29474                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 29475  000B06  EE20 F006          	lfsr	2,6
 29476  000B0A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29477  000B0C  26D9               	addwf	fsr2l,f,c
 29478  000B0E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29479  000B10  22DA               	addwfc	fsr2h,f,c
 29480  000B12  50DF               	movf	indf2,w,c
 29481  000B14  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29482  000B16  0E05               	movlw	5
 29483  000B18  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29484  000B1A                     u13875:
 29485  000B1A  90D8               	bcf	status,0,c
 29486  000B1C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29487  000B1E  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29488  000B20  D7FC               	goto	u13875
 29489  000B22  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29490  000B24  12AD               	iorwf	4013,f,c	;volatile
 29491                           
 29492                           ; BSR set to: 0
 29493                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 29494  000B26  EE20 F001          	lfsr	2,1
 29495  000B2A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29496  000B2C  26D9               	addwf	fsr2l,f,c
 29497  000B2E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29498  000B30  22DA               	addwfc	fsr2h,f,c
 29499  000B32  50DF               	movf	indf2,w,c
 29500  000B34  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29501  000B36  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29502  000B38  0BF0               	andlw	240
 29503  000B3A  12AD               	iorwf	4013,f,c	;volatile
 29504                           
 29505                           ; BSR set to: 0
 29506                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 29507  000B3C  EE20 F008          	lfsr	2,8
 29508  000B40  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29509  000B42  26D9               	addwf	fsr2l,f,c
 29510  000B44  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29511  000B46  22DA               	addwfc	fsr2h,f,c
 29512  000B48  50DF               	movf	indf2,w,c
 29513  000B4A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29514  000B4C  90D8               	bcf	status,0,c
 29515  000B4E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29516  000B50  90D8               	bcf	status,0,c
 29517  000B52  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29518  000B54  90D8               	bcf	status,0,c
 29519  000B56  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29520  000B58  12AD               	iorwf	4013,f,c	;volatile
 29521                           
 29522                           ; BSR set to: 0
 29523                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 29524  000B5A  EE20 F003          	lfsr	2,3
 29525  000B5E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29526  000B60  26D9               	addwf	fsr2l,f,c
 29527  000B62  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29528  000B64  22DA               	addwfc	fsr2h,f,c
 29529  000B66  50DF               	movf	indf2,w,c
 29530  000B68  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29531  000B6A  90D8               	bcf	status,0,c
 29532  000B6C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29533  000B6E  90D8               	bcf	status,0,c
 29534  000B70  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29535  000B72  12AD               	iorwf	4013,f,c	;volatile
 29536                           
 29537                           ; BSR set to: 0
 29538                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 29539  000B74  0E00               	movlw	0
 29540  000B76  6EAC               	movwf	4012,c	;volatile
 29541                           
 29542                           ; BSR set to: 0
 29543                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 29544  000B78  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 29545  000B7C  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 29546  000B80  50DF               	movf	indf2,w,c
 29547  000B82  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29548  000B84  0E00               	movlw	0
 29549  000B86  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 29550  000B88  0E80               	movlw	128
 29551  000B8A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29552  000B8C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29553  000B8E  12AC               	iorwf	4012,f,c	;volatile
 29554                           
 29555                           ; BSR set to: 0
 29556                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 29557  000B90  EE20 F005          	lfsr	2,5
 29558  000B94  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29559  000B96  26D9               	addwf	fsr2l,f,c
 29560  000B98  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29561  000B9A  22DA               	addwfc	fsr2h,f,c
 29562  000B9C  50DF               	movf	indf2,w,c
 29563  000B9E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29564  000BA0  0E06               	movlw	6
 29565  000BA2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29566  000BA4                     u13885:
 29567  000BA4  90D8               	bcf	status,0,c
 29568  000BA6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29569  000BA8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29570  000BAA  D7FC               	goto	u13885
 29571  000BAC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29572  000BAE  12AC               	iorwf	4012,f,c	;volatile
 29573                           
 29574                           ; BSR set to: 0
 29575                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 29576  000BB0  EE20 F007          	lfsr	2,7
 29577  000BB4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29578  000BB6  26D9               	addwf	fsr2l,f,c
 29579  000BB8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29580  000BBA  22DA               	addwfc	fsr2h,f,c
 29581  000BBC  50DF               	movf	indf2,w,c
 29582  000BBE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29583  000BC0  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29584  000BC2  0BF0               	andlw	240
 29585  000BC4  12AC               	iorwf	4012,f,c	;volatile
 29586                           
 29587                           ; BSR set to: 0
 29588                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 29589  000BC6  0E00               	movlw	0
 29590  000BC8  6E7E               	movwf	3966,c	;volatile
 29591                           
 29592                           ; BSR set to: 0
 29593                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 29594  000BCA  EE20 F002          	lfsr	2,2
 29595  000BCE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29596  000BD0  26D9               	addwf	fsr2l,f,c
 29597  000BD2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29598  000BD4  22DA               	addwfc	fsr2h,f,c
 29599  000BD6  50DF               	movf	indf2,w,c
 29600  000BD8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29601  000BDA  90D8               	bcf	status,0,c
 29602  000BDC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29603  000BDE  90D8               	bcf	status,0,c
 29604  000BE0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29605  000BE2  90D8               	bcf	status,0,c
 29606  000BE4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29607  000BE6  127E               	iorwf	3966,f,c	;volatile
 29608                           
 29609                           ; BSR set to: 0
 29610                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 29611  000BE8  EE20 F00A          	lfsr	2,10
 29612  000BEC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29613  000BEE  26D9               	addwf	fsr2l,f,c
 29614  000BF0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29615  000BF2  22DA               	addwfc	fsr2h,f,c
 29616  000BF4  50DF               	movf	indf2,w,c
 29617  000BF6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29618  000BF8  90D8               	bcf	status,0,c
 29619  000BFA  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29620  000BFC  127E               	iorwf	3966,f,c	;volatile
 29621                           
 29622                           ; BSR set to: 0
 29623                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 29624  000BFE  EE20 F009          	lfsr	2,9
 29625  000C02  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29626  000C04  26D9               	addwf	fsr2l,f,c
 29627  000C06  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29628  000C08  22DA               	addwfc	fsr2h,f,c
 29629  000C0A  50DF               	movf	indf2,w,c
 29630  000C0C  127E               	iorwf	3966,f,c	;volatile
 29631                           
 29632                           ; BSR set to: 0
 29633                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 29634  000C0E  EE20 F00B          	lfsr	2,11
 29635  000C12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29636  000C14  26D9               	addwf	fsr2l,f,c
 29637  000C16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29638  000C18  22DA               	addwfc	fsr2h,f,c
 29639  000C1A  50DF               	movf	indf2,w,c
 29640  000C1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29641  000C1E  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29642  000C20  509D               	movf	3997,w,c	;volatile
 29643  000C22  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29644  000C24  0BEF               	andlw	-17
 29645  000C26  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29646  000C28  6E9D               	movwf	3997,c	;volatile
 29647                           
 29648                           ; BSR set to: 0
 29649                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 29650  000C2A  EE20 F00C          	lfsr	2,12
 29651  000C2E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29652  000C30  26D9               	addwf	fsr2l,f,c
 29653  000C32  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29654  000C34  22DA               	addwfc	fsr2h,f,c
 29655  000C36  50DF               	movf	indf2,w,c
 29656  000C38  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29657  000C3A  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29658  000C3C  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 29659  000C3E  509D               	movf	3997,w,c	;volatile
 29660  000C40  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29661  000C42  0BDF               	andlw	-33
 29662  000C44  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29663  000C46  6E9D               	movwf	3997,c	;volatile
 29664                           
 29665                           ;uart_drv.c: 326: }
 29666  000C48  0012               	return	
 29667  000C4A                     l668:
 29668                           
 29669                           ; BSR set to: 0
 29670                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 29671                           
 29672                           ; BSR set to: 0
 29673  000C4A  0E02               	movlw	2
 29674  000C4C  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 29675  000C4E  A4D8               	btfss	status,2,c
 29676  000C50  0012               	return	
 29677                           
 29678                           ; BSR set to: 0
 29679                           ;uart_drv.c: 328: {
 29680                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 29681  000C52  9094               	bcf	3988,0,c	;volatile
 29682                           
 29683                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 29684  000C54  8294               	bsf	3988,1,c	;volatile
 29685                           
 29686                           ; BSR set to: 0
 29687                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 29688  000C56  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 29689  000C5A  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 29690  000C5E  0E02               	movlw	2
 29691  000C60  EC65  F015         	call	_SetUartBaudRate
 29692                           
 29693                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 29694  000C64  0E00               	movlw	0
 29695  000C66  6EA8               	movwf	4008,c	;volatile
 29696                           
 29697                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 29698  000C68  0100               	movlb	0	; () banked
 29699  000C6A  EE20 F004          	lfsr	2,4
 29700  000C6E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29701  000C70  26D9               	addwf	fsr2l,f,c
 29702  000C72  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29703  000C74  22DA               	addwfc	fsr2h,f,c
 29704  000C76  50DF               	movf	indf2,w,c
 29705  000C78  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29706  000C7A  0E06               	movlw	6
 29707  000C7C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29708  000C7E                     u13905:
 29709  000C7E  90D8               	bcf	status,0,c
 29710  000C80  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29711  000C82  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29712  000C84  D7FC               	goto	u13905
 29713  000C86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29714  000C88  12A8               	iorwf	4008,f,c	;volatile
 29715                           
 29716                           ; BSR set to: 0
 29717                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 29718  000C8A  EE20 F006          	lfsr	2,6
 29719  000C8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29720  000C90  26D9               	addwf	fsr2l,f,c
 29721  000C92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29722  000C94  22DA               	addwfc	fsr2h,f,c
 29723  000C96  50DF               	movf	indf2,w,c
 29724  000C98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29725  000C9A  0E05               	movlw	5
 29726  000C9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29727  000C9E                     u13915:
 29728  000C9E  90D8               	bcf	status,0,c
 29729  000CA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29730  000CA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29731  000CA4  D7FC               	goto	u13915
 29732  000CA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29733  000CA8  12A8               	iorwf	4008,f,c	;volatile
 29734                           
 29735                           ; BSR set to: 0
 29736                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 29737  000CAA  EE20 F001          	lfsr	2,1
 29738  000CAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29739  000CB0  26D9               	addwf	fsr2l,f,c
 29740  000CB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29741  000CB4  22DA               	addwfc	fsr2h,f,c
 29742  000CB6  50DF               	movf	indf2,w,c
 29743  000CB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29744  000CBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29745  000CBC  0BF0               	andlw	240
 29746  000CBE  12A8               	iorwf	4008,f,c	;volatile
 29747                           
 29748                           ; BSR set to: 0
 29749                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 29750  000CC0  EE20 F008          	lfsr	2,8
 29751  000CC4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29752  000CC6  26D9               	addwf	fsr2l,f,c
 29753  000CC8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29754  000CCA  22DA               	addwfc	fsr2h,f,c
 29755  000CCC  50DF               	movf	indf2,w,c
 29756  000CCE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29757  000CD0  90D8               	bcf	status,0,c
 29758  000CD2  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29759  000CD4  90D8               	bcf	status,0,c
 29760  000CD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29761  000CD8  90D8               	bcf	status,0,c
 29762  000CDA  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29763  000CDC  12A8               	iorwf	4008,f,c	;volatile
 29764                           
 29765                           ; BSR set to: 0
 29766                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 29767  000CDE  EE20 F003          	lfsr	2,3
 29768  000CE2  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29769  000CE4  26D9               	addwf	fsr2l,f,c
 29770  000CE6  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29771  000CE8  22DA               	addwfc	fsr2h,f,c
 29772  000CEA  50DF               	movf	indf2,w,c
 29773  000CEC  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29774  000CEE  90D8               	bcf	status,0,c
 29775  000CF0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29776  000CF2  90D8               	bcf	status,0,c
 29777  000CF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29778  000CF6  12A8               	iorwf	4008,f,c	;volatile
 29779                           
 29780                           ; BSR set to: 0
 29781                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 29782  000CF8  0E00               	movlw	0
 29783  000CFA  6E9C               	movwf	3996,c	;volatile
 29784                           
 29785                           ; BSR set to: 0
 29786                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 29787  000CFC  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 29788  000D00  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 29789  000D04  50DF               	movf	indf2,w,c
 29790  000D06  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29791  000D08  0E00               	movlw	0
 29792  000D0A  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 29793  000D0C  0E80               	movlw	128
 29794  000D0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29795  000D10  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29796  000D12  129C               	iorwf	3996,f,c	;volatile
 29797                           
 29798                           ; BSR set to: 0
 29799                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 29800  000D14  EE20 F005          	lfsr	2,5
 29801  000D18  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29802  000D1A  26D9               	addwf	fsr2l,f,c
 29803  000D1C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29804  000D1E  22DA               	addwfc	fsr2h,f,c
 29805  000D20  50DF               	movf	indf2,w,c
 29806  000D22  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29807  000D24  0E06               	movlw	6
 29808  000D26  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29809  000D28                     u13925:
 29810  000D28  90D8               	bcf	status,0,c
 29811  000D2A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29812  000D2C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29813  000D2E  D7FC               	goto	u13925
 29814  000D30  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29815  000D32  129C               	iorwf	3996,f,c	;volatile
 29816                           
 29817                           ; BSR set to: 0
 29818                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 29819  000D34  EE20 F007          	lfsr	2,7
 29820  000D38  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29821  000D3A  26D9               	addwf	fsr2l,f,c
 29822  000D3C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29823  000D3E  22DA               	addwfc	fsr2h,f,c
 29824  000D40  50DF               	movf	indf2,w,c
 29825  000D42  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29826  000D44  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29827  000D46  0BF0               	andlw	240
 29828  000D48  129C               	iorwf	3996,f,c	;volatile
 29829                           
 29830                           ; BSR set to: 0
 29831                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 29832  000D4A  0E00               	movlw	0
 29833  000D4C  6E7C               	movwf	3964,c	;volatile
 29834                           
 29835                           ; BSR set to: 0
 29836                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 29837  000D4E  EE20 F002          	lfsr	2,2
 29838  000D52  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29839  000D54  26D9               	addwf	fsr2l,f,c
 29840  000D56  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29841  000D58  22DA               	addwfc	fsr2h,f,c
 29842  000D5A  50DF               	movf	indf2,w,c
 29843  000D5C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29844  000D5E  90D8               	bcf	status,0,c
 29845  000D60  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29846  000D62  90D8               	bcf	status,0,c
 29847  000D64  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29848  000D66  90D8               	bcf	status,0,c
 29849  000D68  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29850  000D6A  127C               	iorwf	3964,f,c	;volatile
 29851                           
 29852                           ; BSR set to: 0
 29853                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 29854  000D6C  EE20 F00A          	lfsr	2,10
 29855  000D70  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29856  000D72  26D9               	addwf	fsr2l,f,c
 29857  000D74  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29858  000D76  22DA               	addwfc	fsr2h,f,c
 29859  000D78  50DF               	movf	indf2,w,c
 29860  000D7A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29861  000D7C  90D8               	bcf	status,0,c
 29862  000D7E  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29863  000D80  127C               	iorwf	3964,f,c	;volatile
 29864                           
 29865                           ; BSR set to: 0
 29866                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 29867  000D82  EE20 F009          	lfsr	2,9
 29868  000D86  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29869  000D88  26D9               	addwf	fsr2l,f,c
 29870  000D8A  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29871  000D8C  22DA               	addwfc	fsr2h,f,c
 29872  000D8E  50DF               	movf	indf2,w,c
 29873  000D90  127C               	iorwf	3964,f,c	;volatile
 29874                           
 29875                           ; BSR set to: 0
 29876                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 29877  000D92  EE20 F00B          	lfsr	2,11
 29878  000D96  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29879  000D98  26D9               	addwf	fsr2l,f,c
 29880  000D9A  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29881  000D9C  22DA               	addwfc	fsr2h,f,c
 29882  000D9E  50DF               	movf	indf2,w,c
 29883  000DA0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29884  000DA2  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29885  000DA4  50A3               	movf	4003,w,c	;volatile
 29886  000DA6  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29887  000DA8  0BEF               	andlw	-17
 29888  000DAA  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29889  000DAC  6EA3               	movwf	4003,c	;volatile
 29890                           
 29891                           ; BSR set to: 0
 29892                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 29893  000DAE  EE20 F00C          	lfsr	2,12
 29894  000DB2  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29895  000DB4  26D9               	addwf	fsr2l,f,c
 29896  000DB6  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29897  000DB8  22DA               	addwfc	fsr2h,f,c
 29898  000DBA  50DF               	movf	indf2,w,c
 29899  000DBC  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29900  000DBE  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29901  000DC0  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 29902  000DC2  50A3               	movf	4003,w,c	;volatile
 29903  000DC4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29904  000DC6  0BDF               	andlw	-33
 29905  000DC8  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29906  000DCA  6EA3               	movwf	4003,c	;volatile
 29907                           
 29908                           ; BSR set to: 0
 29909  000DCC  0012               	return	
 29910  000DCE                     __end_of_Uart_InitUartModule:
 29911                           	opt stack 0
 29912                           tosu	equ	0xFFF
 29913                           tosh	equ	0xFFE
 29914                           tosl	equ	0xFFD
 29915                           pclath	equ	0xFFA
 29916                           tblptru	equ	0xFF8
 29917                           tblptrh	equ	0xFF7
 29918                           tblptrl	equ	0xFF6
 29919                           tablat	equ	0xFF5
 29920                           prodh	equ	0xFF4
 29921                           prodl	equ	0xFF3
 29922                           intcon	equ	0xFF2
 29923                           intcon2	equ	0xFF1
 29924                           intcon3	equ	0xFF0
 29925                           indf0	equ	0xFEF
 29926                           postinc0	equ	0xFEE
 29927                           plusw0	equ	0xFEB
 29928                           fsr0h	equ	0xFEA
 29929                           fsr0l	equ	0xFE9
 29930                           wreg	equ	0xFE8
 29931                           indf1	equ	0xFE7
 29932                           postinc1	equ	0xFE6
 29933                           postdec1	equ	0xFE5
 29934                           plusw1	equ	0xFE3
 29935                           fsr1h	equ	0xFE2
 29936                           fsr1l	equ	0xFE1
 29937                           indf2	equ	0xFDF
 29938                           postinc2	equ	0xFDE
 29939                           postdec2	equ	0xFDD
 29940                           plusw2	equ	0xFDB
 29941                           fsr2h	equ	0xFDA
 29942                           fsr2l	equ	0xFD9
 29943                           status	equ	0xFD8
 29944                           
 29945 ;; *************** function _SetUartBaudRate *****************
 29946 ;; Defined at:
 29947 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 29948 ;; Parameters:    Size  Location     Type
 29949 ;;  Module          1    wreg     unsigned char 
 29950 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 29951 ;;		 -> UartConfig(21), 
 29952 ;; Auto vars:     Size  Location     Type
 29953 ;;  Module          1   57[BANK0 ] unsigned char 
 29954 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 29955 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 29956 ;; Return value:  Size  Location     Type
 29957 ;;                  1    wreg      void 
 29958 ;; Registers used:
 29959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29960 ;; Tracked objects:
 29961 ;;		On entry : 0/0
 29962 ;;		On exit  : 0/0
 29963 ;;		Unchanged: 0/0
 29964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29965 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29966 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29967 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29968 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29969 ;;Total ram usage:        7 bytes
 29970 ;; Hardware stack levels used:    1
 29971 ;; Hardware stack levels required when called:   12
 29972 ;; This function calls:
 29973 ;;		___lldiv
 29974 ;;		___lmul
 29975 ;; This function is called by:
 29976 ;;		_Uart_InitUartModule
 29977 ;; This function uses a non-reentrant model
 29978 ;;
 29979                           
 29980                           	psect	text141
 29981  002ACA                     __ptext141:
 29982                           	opt stack 0
 29983  002ACA                     _SetUartBaudRate:
 29984                           	opt stack 14
 29985                           
 29986                           ; BSR set to: 0
 29987                           ;incstack = 0
 29988                           ;SetUartBaudRate@Module stored from wreg
 29989  002ACA  0100               	movlb	0	; () banked
 29990  002ACC  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 29991                           
 29992                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 29993  002ACE  0E00               	movlw	0
 29994  002AD0  0100               	movlb	0	; () banked
 29995  002AD2  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 29996  002AD4  0E00               	movlw	0
 29997  002AD6  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 29998                           
 29999                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 30000  002AD8  0E00               	movlw	0
 30001  002ADA  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 30002                           
 30003                           ; BSR set to: 0
 30004                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 30005  002ADC  EE20 F002          	lfsr	2,2
 30006  002AE0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 30007  002AE2  26D9               	addwf	fsr2l,f,c
 30008  002AE4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 30009  002AE6  22DA               	addwfc	fsr2h,f,c
 30010  002AE8  50DF               	movf	indf2,w,c
 30011  002AEA  A4D8               	btfss	status,2,c
 30012  002AEC  D00B               	goto	l625
 30013                           
 30014                           ; BSR set to: 0
 30015  002AEE  EE20 F002          	lfsr	2,2
 30016  002AF2  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 30017  002AF4  26D9               	addwf	fsr2l,f,c
 30018  002AF6  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 30019  002AF8  22DA               	addwfc	fsr2h,f,c
 30020  002AFA  50DF               	movf	indf2,w,c
 30021  002AFC  A4D8               	btfss	status,2,c
 30022  002AFE  D002               	goto	l625
 30023                           
 30024                           ; BSR set to: 0
 30025                           ;uart_drv.c: 128: {
 30026                           ;uart_drv.c: 129: DivisionFactor = 64;
 30027  002B00  0E40               	movlw	64
 30028  002B02  D039               	goto	L62
 30029  002B04                     l625:
 30030                           
 30031                           ; BSR set to: 0
 30032                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 30033                           
 30034                           ; BSR set to: 0
 30035  002B04  EE20 F002          	lfsr	2,2
 30036  002B08  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 30037  002B0A  26D9               	addwf	fsr2l,f,c
 30038  002B0C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 30039  002B0E  22DA               	addwfc	fsr2h,f,c
 30040  002B10  04DE               	decf	postinc2,w,c
 30041  002B12  A4D8               	btfss	status,2,c
 30042  002B14  D009               	goto	l627
 30043                           
 30044                           ; BSR set to: 0
 30045  002B16  EE20 F002          	lfsr	2,2
 30046  002B1A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 30047  002B1C  26D9               	addwf	fsr2l,f,c
 30048  002B1E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 30049  002B20  22DA               	addwfc	fsr2h,f,c
 30050  002B22  50DF               	movf	indf2,w,c
 30051  002B24  B4D8               	btfsc	status,2,c
 30052  002B26  D012               	goto	u12940
 30053  002B28                     l627:
 30054                           
 30055                           ; BSR set to: 0
 30056                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 30057                           
 30058                           ; BSR set to: 0
 30059  002B28  EE20 F002          	lfsr	2,2
 30060  002B2C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 30061  002B2E  26D9               	addwf	fsr2l,f,c
 30062  002B30  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 30063  002B32  22DA               	addwfc	fsr2h,f,c
 30064  002B34  50DF               	movf	indf2,w,c
 30065  002B36  A4D8               	btfss	status,2,c
 30066  002B38  D00B               	goto	l629
 30067                           
 30068                           ; BSR set to: 0
 30069  002B3A  EE20 F002          	lfsr	2,2
 30070  002B3E  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 30071  002B40  26D9               	addwf	fsr2l,f,c
 30072  002B42  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 30073  002B44  22DA               	addwfc	fsr2h,f,c
 30074  002B46  04DE               	decf	postinc2,w,c
 30075  002B48  A4D8               	btfss	status,2,c
 30076  002B4A  D002               	goto	l629
 30077  002B4C                     u12940:
 30078                           
 30079                           ; BSR set to: 0
 30080                           ;uart_drv.c: 136: {
 30081                           ;uart_drv.c: 137: DivisionFactor = 16;
 30082  002B4C  0E10               	movlw	16
 30083  002B4E  D013               	goto	L62
 30084  002B50                     l629:
 30085                           
 30086                           ; BSR set to: 0
 30087                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 30088                           
 30089                           ; BSR set to: 0
 30090  002B50  EE20 F002          	lfsr	2,2
 30091  002B54  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 30092  002B56  26D9               	addwf	fsr2l,f,c
 30093  002B58  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 30094  002B5A  22DA               	addwfc	fsr2h,f,c
 30095  002B5C  04DE               	decf	postinc2,w,c
 30096  002B5E  A4D8               	btfss	status,2,c
 30097  002B60  D00B               	goto	l631
 30098                           
 30099                           ; BSR set to: 0
 30100  002B62  EE20 F002          	lfsr	2,2
 30101  002B66  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 30102  002B68  26D9               	addwf	fsr2l,f,c
 30103  002B6A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 30104  002B6C  22DA               	addwfc	fsr2h,f,c
 30105  002B6E  04DE               	decf	postinc2,w,c
 30106  002B70  A4D8               	btfss	status,2,c
 30107  002B72  D002               	goto	l631
 30108                           
 30109                           ; BSR set to: 0
 30110                           ;uart_drv.c: 140: {
 30111                           ;uart_drv.c: 141: DivisionFactor = 4;
 30112  002B74  0E04               	movlw	4
 30113  002B76                     L62:
 30114  002B76  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 30115  002B78                     l631:
 30116                           
 30117                           ; BSR set to: 0
 30118                           ;uart_drv.c: 146: }
 30119                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 30120                           
 30121                           ; BSR set to: 0
 30122                           
 30123                           ; BSR set to: 0
 30124                           
 30125                           ; BSR set to: 0
 30126                           
 30127                           ; BSR set to: 0
 30128                           
 30129                           ;uart_drv.c: 143: else
 30130                           ;uart_drv.c: 144: {
 30131                           
 30132                           ; BSR set to: 0
 30133  002B78  EE20 F00D          	lfsr	2,13
 30134  002B7C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 30135  002B7E  26D9               	addwf	fsr2l,f,c
 30136  002B80  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 30137  002B82  22DA               	addwfc	fsr2h,f,c
 30138  002B84  CFDE F089          	movff	postinc2,___lldiv@dividend
 30139  002B88  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 30140  002B8C  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 30141  002B90  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 30142  002B94  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 30143  002B96  6F7D               	movwf	___lmul@multiplier& (0+255),b
 30144  002B98  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 30145  002B9A  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 30146  002B9C  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 30147  002B9E  EE20 F011          	lfsr	2,17
 30148  002BA2  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 30149  002BA4  26D9               	addwf	fsr2l,f,c
 30150  002BA6  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 30151  002BA8  22DA               	addwfc	fsr2h,f,c
 30152  002BAA  CFDE F081          	movff	postinc2,___lmul@multiplicand
 30153  002BAE  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 30154  002BB2  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 30155  002BB6  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 30156  002BBA  ECA5  F02D         	call	___lmul	;wreg free
 30157  002BBE  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 30158  002BC2  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 30159  002BC6  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 30160  002BCA  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 30161  002BCE  ECDE  F029         	call	___lldiv	;wreg free
 30162  002BD2  0EFF               	movlw	255
 30163  002BD4  0100               	movlb	0	; () banked
 30164  002BD6  2589               	addwf	?___lldiv& (0+255),w,b
 30165  002BD8  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 30166  002BDA  0EFF               	movlw	255
 30167  002BDC  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 30168  002BDE  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 30169                           
 30170                           ; BSR set to: 0
 30171                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 30172  002BE0  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 30173  002BE2  A4D8               	btfss	status,2,c
 30174  002BE4  D005               	goto	l633
 30175                           
 30176                           ; BSR set to: 0
 30177                           ;uart_drv.c: 152: {
 30178                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 30179  002BE6  0E00               	movlw	0
 30180  002BE8  6E7F               	movwf	3967,c	;volatile
 30181                           
 30182                           ; BSR set to: 0
 30183                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 30184  002BEA  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 30185                           
 30186                           ;uart_drv.c: 156: }
 30187  002BEE  0012               	return	
 30188  002BF0                     l633:
 30189                           
 30190                           ; BSR set to: 0
 30191                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 30192                           
 30193                           ; BSR set to: 0
 30194  002BF0  0E02               	movlw	2
 30195  002BF2  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 30196  002BF4  A4D8               	btfss	status,2,c
 30197  002BF6  0012               	return	
 30198                           
 30199                           ; BSR set to: 0
 30200                           ;uart_drv.c: 158: {
 30201                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 30202  002BF8  0E00               	movlw	0
 30203  002BFA  6E7D               	movwf	3965,c	;volatile
 30204                           
 30205                           ; BSR set to: 0
 30206                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 30207  002BFC  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 30208                           
 30209                           ; BSR set to: 0
 30210  002C00  0012               	return	
 30211  002C02                     __end_of_SetUartBaudRate:
 30212                           	opt stack 0
 30213                           tosu	equ	0xFFF
 30214                           tosh	equ	0xFFE
 30215                           tosl	equ	0xFFD
 30216                           pclath	equ	0xFFA
 30217                           tblptru	equ	0xFF8
 30218                           tblptrh	equ	0xFF7
 30219                           tblptrl	equ	0xFF6
 30220                           tablat	equ	0xFF5
 30221                           prodh	equ	0xFF4
 30222                           prodl	equ	0xFF3
 30223                           intcon	equ	0xFF2
 30224                           intcon2	equ	0xFF1
 30225                           intcon3	equ	0xFF0
 30226                           indf0	equ	0xFEF
 30227                           postinc0	equ	0xFEE
 30228                           plusw0	equ	0xFEB
 30229                           fsr0h	equ	0xFEA
 30230                           fsr0l	equ	0xFE9
 30231                           wreg	equ	0xFE8
 30232                           indf1	equ	0xFE7
 30233                           postinc1	equ	0xFE6
 30234                           postdec1	equ	0xFE5
 30235                           plusw1	equ	0xFE3
 30236                           fsr1h	equ	0xFE2
 30237                           fsr1l	equ	0xFE1
 30238                           indf2	equ	0xFDF
 30239                           postinc2	equ	0xFDE
 30240                           postdec2	equ	0xFDD
 30241                           plusw2	equ	0xFDB
 30242                           fsr2h	equ	0xFDA
 30243                           fsr2l	equ	0xFD9
 30244                           status	equ	0xFD8
 30245                           
 30246 ;; *************** function ___lmul *****************
 30247 ;; Defined at:
 30248 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 30249 ;; Parameters:    Size  Location     Type
 30250 ;;  multiplier      4   29[BANK0 ] unsigned long 
 30251 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 30252 ;; Auto vars:     Size  Location     Type
 30253 ;;  product         4   37[BANK0 ] unsigned long 
 30254 ;; Return value:  Size  Location     Type
 30255 ;;                  4   29[BANK0 ] unsigned long 
 30256 ;; Registers used:
 30257 ;;		wreg, status,2, status,0
 30258 ;; Tracked objects:
 30259 ;;		On entry : 0/0
 30260 ;;		On exit  : 0/0
 30261 ;;		Unchanged: 0/0
 30262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30263 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30264 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30266 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30267 ;;Total ram usage:       12 bytes
 30268 ;; Hardware stack levels used:    1
 30269 ;; Hardware stack levels required when called:   11
 30270 ;; This function calls:
 30271 ;;		Nothing
 30272 ;; This function is called by:
 30273 ;;		_Tmr_TmrBPrSet
 30274 ;;		_SetUartBaudRate
 30275 ;;		_strtol
 30276 ;; This function uses a non-reentrant model
 30277 ;;
 30278                           
 30279                           	psect	text142
 30280  005B4A                     __ptext142:
 30281                           	opt stack 0
 30282  005B4A                     ___lmul:
 30283                           	opt stack 15
 30284                           
 30285                           ; BSR set to: 0
 30286                           ;incstack = 0
 30287  005B4A  0E00               	movlw	0
 30288  005B4C  0100               	movlb	0	; () banked
 30289  005B4E  6F85               	movwf	___lmul@product& (0+255),b
 30290  005B50  0E00               	movlw	0
 30291  005B52  6F86               	movwf	(___lmul@product+1)& (0+255),b
 30292  005B54  0E00               	movlw	0
 30293  005B56  6F87               	movwf	(___lmul@product+2)& (0+255),b
 30294  005B58  0E00               	movlw	0
 30295  005B5A  6F88               	movwf	(___lmul@product+3)& (0+255),b
 30296  005B5C                     
 30297                           ; BSR set to: 0
 30298                           
 30299                           ; BSR set to: 0
 30300  005B5C  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 30301  005B5E  D008               	goto	l3005
 30302                           
 30303                           ; BSR set to: 0
 30304  005B60  5181               	movf	___lmul@multiplicand& (0+255),w,b
 30305  005B62  2785               	addwf	___lmul@product& (0+255),f,b
 30306  005B64  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 30307  005B66  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 30308  005B68  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 30309  005B6A  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 30310  005B6C  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 30311  005B6E  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 30312  005B70                     l3005:
 30313                           
 30314                           ; BSR set to: 0
 30315                           
 30316                           ; BSR set to: 0
 30317  005B70  90D8               	bcf	status,0,c
 30318  005B72  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 30319  005B74  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 30320  005B76  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 30321  005B78  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 30322                           
 30323                           ; BSR set to: 0
 30324  005B7A  90D8               	bcf	status,0,c
 30325  005B7C  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 30326  005B7E  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 30327  005B80  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 30328  005B82  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 30329  005B84  517D               	movf	___lmul@multiplier& (0+255),w,b
 30330  005B86  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 30331  005B88  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 30332  005B8A  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 30333  005B8C  A4D8               	btfss	status,2,c
 30334  005B8E  D7E6               	goto	l3004
 30335                           
 30336                           ; BSR set to: 0
 30337  005B90  C085  F07D         	movff	___lmul@product,?___lmul
 30338  005B94  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 30339  005B98  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 30340  005B9C  C088  F080         	movff	___lmul@product+3,?___lmul+3
 30341                           
 30342                           ; BSR set to: 0
 30343  005BA0  0012               	return		;funcret
 30344  005BA2                     __end_of___lmul:
 30345                           	opt stack 0
 30346                           tosu	equ	0xFFF
 30347                           tosh	equ	0xFFE
 30348                           tosl	equ	0xFFD
 30349                           pclath	equ	0xFFA
 30350                           tblptru	equ	0xFF8
 30351                           tblptrh	equ	0xFF7
 30352                           tblptrl	equ	0xFF6
 30353                           tablat	equ	0xFF5
 30354                           prodh	equ	0xFF4
 30355                           prodl	equ	0xFF3
 30356                           intcon	equ	0xFF2
 30357                           intcon2	equ	0xFF1
 30358                           intcon3	equ	0xFF0
 30359                           indf0	equ	0xFEF
 30360                           postinc0	equ	0xFEE
 30361                           plusw0	equ	0xFEB
 30362                           fsr0h	equ	0xFEA
 30363                           fsr0l	equ	0xFE9
 30364                           wreg	equ	0xFE8
 30365                           indf1	equ	0xFE7
 30366                           postinc1	equ	0xFE6
 30367                           postdec1	equ	0xFE5
 30368                           plusw1	equ	0xFE3
 30369                           fsr1h	equ	0xFE2
 30370                           fsr1l	equ	0xFE1
 30371                           indf2	equ	0xFDF
 30372                           postinc2	equ	0xFDE
 30373                           postdec2	equ	0xFDD
 30374                           plusw2	equ	0xFDB
 30375                           fsr2h	equ	0xFDA
 30376                           fsr2l	equ	0xFD9
 30377                           status	equ	0xFD8
 30378                           
 30379 ;; *************** function _UartSetConfigLow *****************
 30380 ;; Defined at:
 30381 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 30382 ;; Parameters:    Size  Location     Type
 30383 ;;		None
 30384 ;; Auto vars:     Size  Location     Type
 30385 ;;		None
 30386 ;; Return value:  Size  Location     Type
 30387 ;;                  1    wreg      void 
 30388 ;; Registers used:
 30389 ;;		wreg, status,2
 30390 ;; Tracked objects:
 30391 ;;		On entry : 0/0
 30392 ;;		On exit  : 0/0
 30393 ;;		Unchanged: 0/0
 30394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30399 ;;Total ram usage:        0 bytes
 30400 ;; Hardware stack levels used:    1
 30401 ;; Hardware stack levels required when called:   11
 30402 ;; This function calls:
 30403 ;;		Nothing
 30404 ;; This function is called by:
 30405 ;;		_ConfigureModem
 30406 ;; This function uses a non-reentrant model
 30407 ;;
 30408                           
 30409                           	psect	text143
 30410  005BA2                     __ptext143:
 30411                           	opt stack 0
 30412  005BA2                     _UartSetConfigLow:
 30413                           	opt stack 15
 30414                           
 30415                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 30416                           
 30417                           ; BSR set to: 0
 30418                           ;incstack = 0
 30419  005BA2  0E01               	movlw	1
 30420  005BA4  0103               	movlb	3	; () banked
 30421  005BA6  6F22               	movwf	_UartConfig& (0+255),b
 30422                           
 30423                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 30424  005BA8  0E00               	movlw	0
 30425  005BAA  6F23               	movwf	(_UartConfig+1)& (0+255),b
 30426                           
 30427                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 30428  005BAC  0E00               	movlw	0
 30429  005BAE  6F24               	movwf	(_UartConfig+2)& (0+255),b
 30430                           
 30431                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 30432  005BB0  0E00               	movlw	0
 30433  005BB2  6F25               	movwf	(_UartConfig+3)& (0+255),b
 30434                           
 30435                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 30436  005BB4  0E00               	movlw	0
 30437  005BB6  6F26               	movwf	(_UartConfig+4)& (0+255),b
 30438                           
 30439                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 30440  005BB8  0E00               	movlw	0
 30441  005BBA  6F27               	movwf	(_UartConfig+5)& (0+255),b
 30442                           
 30443                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 30444  005BBC  0E01               	movlw	1
 30445  005BBE  6F28               	movwf	(_UartConfig+6)& (0+255),b
 30446                           
 30447                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 30448  005BC0  0E01               	movlw	1
 30449  005BC2  6F29               	movwf	(_UartConfig+7)& (0+255),b
 30450                           
 30451                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 30452  005BC4  0E00               	movlw	0
 30453  005BC6  6F2A               	movwf	(_UartConfig+8)& (0+255),b
 30454                           
 30455                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 30456  005BC8  0E00               	movlw	0
 30457  005BCA  6F2B               	movwf	(_UartConfig+9)& (0+255),b
 30458                           
 30459                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 30460  005BCC  0E00               	movlw	0
 30461  005BCE  6F2C               	movwf	(_UartConfig+10)& (0+255),b
 30462                           
 30463                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 30464  005BD0  0E00               	movlw	0
 30465  005BD2  6F2D               	movwf	(_UartConfig+11)& (0+255),b
 30466                           
 30467                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 30468  005BD4  0E01               	movlw	1
 30469  005BD6  6F2E               	movwf	(_UartConfig+12)& (0+255),b
 30470                           
 30471                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 30472  005BD8  0E00               	movlw	0
 30473  005BDA  6F2F               	movwf	(_UartConfig+13)& (0+255),b
 30474  005BDC  0E6C               	movlw	108
 30475  005BDE  6F30               	movwf	(_UartConfig+14)& (0+255),b
 30476  005BE0  0EDC               	movlw	220
 30477  005BE2  6F31               	movwf	(_UartConfig+15)& (0+255),b
 30478  005BE4  0E02               	movlw	2
 30479  005BE6  6F32               	movwf	(_UartConfig+16)& (0+255),b
 30480                           
 30481                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 30482  005BE8  0E80               	movlw	128
 30483  005BEA  6F33               	movwf	(_UartConfig+17)& (0+255),b
 30484  005BEC  0E25               	movlw	37
 30485  005BEE  6F34               	movwf	(_UartConfig+18)& (0+255),b
 30486  005BF0  0E00               	movlw	0
 30487  005BF2  6F35               	movwf	(_UartConfig+19)& (0+255),b
 30488  005BF4  0E00               	movlw	0
 30489  005BF6  6F36               	movwf	(_UartConfig+20)& (0+255),b
 30490                           
 30491                           ; BSR set to: 3
 30492  005BF8  0012               	return		;funcret
 30493  005BFA                     __end_of_UartSetConfigLow:
 30494                           	opt stack 0
 30495                           tosu	equ	0xFFF
 30496                           tosh	equ	0xFFE
 30497                           tosl	equ	0xFFD
 30498                           pclath	equ	0xFFA
 30499                           tblptru	equ	0xFF8
 30500                           tblptrh	equ	0xFF7
 30501                           tblptrl	equ	0xFF6
 30502                           tablat	equ	0xFF5
 30503                           prodh	equ	0xFF4
 30504                           prodl	equ	0xFF3
 30505                           intcon	equ	0xFF2
 30506                           intcon2	equ	0xFF1
 30507                           intcon3	equ	0xFF0
 30508                           indf0	equ	0xFEF
 30509                           postinc0	equ	0xFEE
 30510                           plusw0	equ	0xFEB
 30511                           fsr0h	equ	0xFEA
 30512                           fsr0l	equ	0xFE9
 30513                           wreg	equ	0xFE8
 30514                           indf1	equ	0xFE7
 30515                           postinc1	equ	0xFE6
 30516                           postdec1	equ	0xFE5
 30517                           plusw1	equ	0xFE3
 30518                           fsr1h	equ	0xFE2
 30519                           fsr1l	equ	0xFE1
 30520                           indf2	equ	0xFDF
 30521                           postinc2	equ	0xFDE
 30522                           postdec2	equ	0xFDD
 30523                           plusw2	equ	0xFDB
 30524                           fsr2h	equ	0xFDA
 30525                           fsr2l	equ	0xFD9
 30526                           status	equ	0xFD8
 30527                           
 30528 ;; *************** function _CheckModem *****************
 30529 ;; Defined at:
 30530 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 30531 ;; Parameters:    Size  Location     Type
 30532 ;;		None
 30533 ;; Auto vars:     Size  Location     Type
 30534 ;;		None
 30535 ;; Return value:  Size  Location     Type
 30536 ;;                  1    wreg      void 
 30537 ;; Registers used:
 30538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30539 ;; Tracked objects:
 30540 ;;		On entry : 0/0
 30541 ;;		On exit  : 0/0
 30542 ;;		Unchanged: 0/0
 30543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30548 ;;Total ram usage:        0 bytes
 30549 ;; Hardware stack levels used:    1
 30550 ;; Hardware stack levels required when called:   14
 30551 ;; This function calls:
 30552 ;;		_GenerateEvt
 30553 ;;		_OsTmr_GetTimerStatus
 30554 ;;		_OsTmr_StartTimer
 30555 ;;		_ReceiveEvt
 30556 ;;		_Uart_WriteConstString
 30557 ;; This function is called by:
 30558 ;;		_Mdm_MainTask
 30559 ;; This function uses a non-reentrant model
 30560 ;;
 30561                           
 30562                           	psect	text144
 30563  002026                     __ptext144:
 30564                           	opt stack 0
 30565  002026                     _CheckModem:
 30566                           	opt stack 13
 30567                           
 30568                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 30569                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 30570                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 30571                           
 30572                           ; BSR set to: 3
 30573                           ;incstack = 0
 30574  002026  D09C               	goto	l982
 30575  002028                     
 30576                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 30577  002028  0EF2               	movlw	low CheckModem@Timeout
 30578  00202A  0100               	movlb	0	; () banked
 30579  00202C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30580  00202E  0E03               	movlw	high CheckModem@Timeout
 30581  002030  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30582  002032  0ED0               	movlw	208
 30583  002034  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30584  002036  0E07               	movlw	7
 30585  002038  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30586  00203A  0E00               	movlw	0
 30587  00203C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30588  00203E  0E00               	movlw	0
 30589  002040  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30590  002042  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 30591                           
 30592                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 30593  002046  0E01               	movlw	1
 30594  002048  0101               	movlb	1	; () banked
 30595  00204A  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30596                           
 30597                           ;mdm_gsm_gprs.c: 295: break;
 30598  00204C  0012               	return	
 30599  00204E                     
 30600                           ; BSR set to: 1
 30601                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 30602                           
 30603                           ; BSR set to: 1
 30604  00204E  0EF2               	movlw	low CheckModem@Timeout
 30605  002050  0100               	movlb	0	; () banked
 30606  002052  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30607  002054  0E03               	movlw	high CheckModem@Timeout
 30608  002056  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30609  002058  ECC6  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 30610  00205C  06E8               	decf	wreg,f,c
 30611  00205E  A4D8               	btfss	status,2,c
 30612  002060  0012               	return	
 30613                           
 30614                           ;mdm_gsm_gprs.c: 300: {
 30615                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 30616  002062  0E02               	movlw	2
 30617  002064  0101               	movlb	1	; () banked
 30618  002066  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30619                           
 30620                           ; BSR set to: 1
 30621                           ;mdm_gsm_gprs.c: 303: }
 30622                           ;mdm_gsm_gprs.c: 304: break;
 30623  002068  0012               	return	
 30624  00206A                     
 30625                           ; BSR set to: 1
 30626                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 30627                           
 30628                           ; BSR set to: 1
 30629  00206A  0EE5               	movlw	low STR_1
 30630  00206C  0100               	movlb	0	; () banked
 30631  00206E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30632  002070  0EFF               	movlw	high STR_1
 30633  002072  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30634  002074  0E01               	movlw	1
 30635  002076  ECCD  F031         	call	_Uart_WriteConstString
 30636                           
 30637                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 30638  00207A  0EF2               	movlw	low CheckModem@Timeout
 30639  00207C  0100               	movlb	0	; () banked
 30640  00207E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30641  002080  0E03               	movlw	high CheckModem@Timeout
 30642  002082  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30643  002084  0ED0               	movlw	208
 30644  002086  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30645  002088  0E07               	movlw	7
 30646  00208A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30647  00208C  0E00               	movlw	0
 30648  00208E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30649  002090  0E00               	movlw	0
 30650  002092  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30651  002094  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 30652                           
 30653                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 30654  002098  0E03               	movlw	3
 30655  00209A  0101               	movlb	1	; () banked
 30656  00209C  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30657                           
 30658                           ;mdm_gsm_gprs.c: 313: break;
 30659  00209E  0012               	return	
 30660  0020A0                     
 30661                           ; BSR set to: 1
 30662                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 30663                           
 30664                           ; BSR set to: 1
 30665  0020A0  0E3C               	movlw	low _NewStringReceived
 30666  0020A2  0100               	movlb	0	; () banked
 30667  0020A4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30668  0020A6  0E00               	movlw	high _NewStringReceived
 30669  0020A8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30670  0020AA  EC34  F034         	call	_ReceiveEvt	;wreg free
 30671  0020AE  0900               	iorlw	0
 30672  0020B0  B4D8               	btfsc	status,2,c
 30673  0020B2  D030               	goto	l989
 30674                           
 30675                           ;mdm_gsm_gprs.c: 318: {
 30676                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 30677  0020B4  CC58  FFE8         	movff	_RxBuffer,wreg
 30678  0020B8  0A4F               	xorlw	79
 30679  0020BA  A4D8               	btfss	status,2,c
 30680  0020BC  D005               	goto	u15110
 30681  0020BE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30682  0020C2  0A4B               	xorlw	75
 30683  0020C4  B4D8               	btfsc	status,2,c
 30684  0020C6  D00A               	goto	u15130
 30685  0020C8                     u15110:
 30686  0020C8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30687  0020CC  0A4F               	xorlw	79
 30688  0020CE  A4D8               	btfss	status,2,c
 30689  0020D0  0012               	return	
 30690  0020D2  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 30691  0020D6  0A4B               	xorlw	75
 30692  0020D8  A4D8               	btfss	status,2,c
 30693  0020DA  0012               	return	
 30694  0020DC                     u15130:
 30695                           
 30696                           ;mdm_gsm_gprs.c: 321: {
 30697                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 30698  0020DC  0E02               	movlw	2
 30699  0020DE  0100               	movlb	0	; () banked
 30700  0020E0  6FD1               	movwf	_MdmStatus& (0+255),b
 30701                           
 30702                           ; BSR set to: 0
 30703                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 30704  0020E2  0EDF               	movlw	low _MdmOnOffPulseRequest
 30705  0020E4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 30706  0020E6  0E00               	movlw	high _MdmOnOffPulseRequest
 30707  0020E8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 30708  0020EA  EC25  F036         	call	_GenerateEvt	;wreg free
 30709                           
 30710                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 30711  0020EE  0EF2               	movlw	low CheckModem@Timeout
 30712  0020F0  0100               	movlb	0	; () banked
 30713  0020F2  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30714  0020F4  0E03               	movlw	high CheckModem@Timeout
 30715  0020F6  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30716  0020F8  0EE8               	movlw	232
 30717  0020FA  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30718  0020FC  0E03               	movlw	3
 30719  0020FE  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30720  002100  0E00               	movlw	0
 30721  002102  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30722  002104  0E00               	movlw	0
 30723  002106  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30724  002108  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 30725                           
 30726                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 30727  00210C  0E04               	movlw	4
 30728  00210E  0101               	movlb	1	; () banked
 30729  002110  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30730                           
 30731                           ; BSR set to: 1
 30732                           ;mdm_gsm_gprs.c: 329: }
 30733                           ;mdm_gsm_gprs.c: 330: }
 30734  002112  0012               	return	
 30735  002114                     l989:
 30736                           
 30737                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 30738                           
 30739                           ; BSR set to: 1
 30740  002114  0EF2               	movlw	low CheckModem@Timeout
 30741  002116  0100               	movlb	0	; () banked
 30742  002118  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30743  00211A  0E03               	movlw	high CheckModem@Timeout
 30744  00211C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30745  00211E  ECC6  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 30746  002122  06E8               	decf	wreg,f,c
 30747  002124  A4D8               	btfss	status,2,c
 30748  002126  0012               	return	
 30749                           
 30750                           ;mdm_gsm_gprs.c: 332: {
 30751                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 30752  002128  0E00               	movlw	0
 30753  00212A  0100               	movlb	0	; () banked
 30754  00212C  6FD1               	movwf	_MdmStatus& (0+255),b
 30755                           
 30756                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 30757  00212E  0E01               	movlw	1
 30758  002130  6E2B               	movwf	_ComChecCompleted,c
 30759                           
 30760                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 30761  002132  0E05               	movlw	5
 30762  002134  0101               	movlb	1	; () banked
 30763  002136  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30764                           
 30765                           ; BSR set to: 1
 30766                           ;mdm_gsm_gprs.c: 343: }
 30767                           ;mdm_gsm_gprs.c: 344: break;
 30768                           
 30769                           ; BSR set to: 1
 30770                           
 30771                           ;mdm_gsm_gprs.c: 340: else
 30772                           ;mdm_gsm_gprs.c: 341: {
 30773                           
 30774                           ; BSR set to: 1
 30775                           
 30776                           ;mdm_gsm_gprs.c: 339: }
 30777  002138  0012               	return	
 30778  00213A                     
 30779                           ; BSR set to: 1
 30780                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 30781                           
 30782                           ; BSR set to: 1
 30783  00213A  0EF2               	movlw	low CheckModem@Timeout
 30784  00213C  0100               	movlb	0	; () banked
 30785  00213E  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30786  002140  0E03               	movlw	high CheckModem@Timeout
 30787  002142  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30788  002144  ECC6  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 30789  002148  06E8               	decf	wreg,f,c
 30790  00214A  A4D8               	btfss	status,2,c
 30791  00214C  0012               	return	
 30792                           
 30793                           ;mdm_gsm_gprs.c: 349: {
 30794                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 30795  00214E  0E00               	movlw	0
 30796  002150  0100               	movlb	0	; () banked
 30797  002152  6FD1               	movwf	_MdmStatus& (0+255),b
 30798                           
 30799                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 30800  002154  0E01               	movlw	1
 30801  002156  6E2B               	movwf	_ComChecCompleted,c
 30802                           
 30803                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 30804  002158  0E05               	movlw	5
 30805  00215A  0101               	movlb	1	; () banked
 30806  00215C  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30807                           
 30808                           ; BSR set to: 1
 30809                           ;mdm_gsm_gprs.c: 365: }
 30810                           
 30811                           ; BSR set to: 1
 30812                           ;mdm_gsm_gprs.c: 364: break;
 30813                           
 30814                           ;mdm_gsm_gprs.c: 363: default:
 30815                           
 30816                           ; BSR set to: 1
 30817                           ;mdm_gsm_gprs.c: 361: break;
 30818                           
 30819                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 30820                           
 30821                           ; BSR set to: 1
 30822                           ;mdm_gsm_gprs.c: 356: }
 30823                           ;mdm_gsm_gprs.c: 357: break;
 30824  00215E  0012               	return	
 30825  002160                     l982:
 30826                           
 30827                           ; BSR set to: 1
 30828  002160  0101               	movlb	1	; () banked
 30829  002162  51F2               	movf	CheckModem@CheckMdmSts& (0+255),w,b
 30830                           
 30831                           ; Switch size 1, requested type "space"
 30832                           ; Number of cases is 6, Range of values is 0 to 5
 30833                           ; switch strategies available:
 30834                           ; Name         Instructions Cycles
 30835                           ; simple_byte           19    10 (average)
 30836                           ;	Chosen strategy is simple_byte
 30837  002164  0A00               	xorlw	0	; case 0
 30838  002166  B4D8               	btfsc	status,2,c
 30839  002168  D75F               	goto	l983
 30840  00216A  0A01               	xorlw	1	; case 1
 30841  00216C  B4D8               	btfsc	status,2,c
 30842  00216E  D76F               	goto	l985
 30843  002170  0A03               	xorlw	3	; case 2
 30844  002172  B4D8               	btfsc	status,2,c
 30845  002174  D77A               	goto	l987
 30846  002176  0A01               	xorlw	1	; case 3
 30847  002178  B4D8               	btfsc	status,2,c
 30848  00217A  D792               	goto	l988
 30849  00217C  0A07               	xorlw	7	; case 4
 30850  00217E  B4D8               	btfsc	status,2,c
 30851  002180  D7DC               	goto	l998
 30852  002182  0A01               	xorlw	1	; case 5
 30853  002184  0012               	return	
 30854  002186                     __end_of_CheckModem:
 30855                           	opt stack 0
 30856                           tosu	equ	0xFFF
 30857                           tosh	equ	0xFFE
 30858                           tosl	equ	0xFFD
 30859                           pclath	equ	0xFFA
 30860                           tblptru	equ	0xFF8
 30861                           tblptrh	equ	0xFF7
 30862                           tblptrl	equ	0xFF6
 30863                           tablat	equ	0xFF5
 30864                           prodh	equ	0xFF4
 30865                           prodl	equ	0xFF3
 30866                           intcon	equ	0xFF2
 30867                           intcon2	equ	0xFF1
 30868                           intcon3	equ	0xFF0
 30869                           indf0	equ	0xFEF
 30870                           postinc0	equ	0xFEE
 30871                           plusw0	equ	0xFEB
 30872                           fsr0h	equ	0xFEA
 30873                           fsr0l	equ	0xFE9
 30874                           wreg	equ	0xFE8
 30875                           indf1	equ	0xFE7
 30876                           postinc1	equ	0xFE6
 30877                           postdec1	equ	0xFE5
 30878                           plusw1	equ	0xFE3
 30879                           fsr1h	equ	0xFE2
 30880                           fsr1l	equ	0xFE1
 30881                           indf2	equ	0xFDF
 30882                           postinc2	equ	0xFDE
 30883                           postdec2	equ	0xFDD
 30884                           plusw2	equ	0xFDB
 30885                           fsr2h	equ	0xFDA
 30886                           fsr2l	equ	0xFD9
 30887                           status	equ	0xFD8
 30888                           
 30889 ;; *************** function _MdmCntSm *****************
 30890 ;; Defined at:
 30891 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 30892 ;; Parameters:    Size  Location     Type
 30893 ;;		None
 30894 ;; Auto vars:     Size  Location     Type
 30895 ;;		None
 30896 ;; Return value:  Size  Location     Type
 30897 ;;                  1    wreg      void 
 30898 ;; Registers used:
 30899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30900 ;; Tracked objects:
 30901 ;;		On entry : 0/0
 30902 ;;		On exit  : 0/0
 30903 ;;		Unchanged: 0/0
 30904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30909 ;;Total ram usage:        0 bytes
 30910 ;; Hardware stack levels used:    1
 30911 ;; Hardware stack levels required when called:   12
 30912 ;; This function calls:
 30913 ;;		_InitModemInterface
 30914 ;;		_ReceiveEvt
 30915 ;; This function is called by:
 30916 ;;		_Mdm_DrvMainFn
 30917 ;; This function uses a non-reentrant model
 30918 ;;
 30919                           
 30920                           	psect	text145
 30921  00491A                     __ptext145:
 30922                           	opt stack 0
 30923  00491A                     _MdmCntSm:
 30924                           	opt stack 15
 30925                           
 30926                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 30927                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 30928                           ;mdm_drv.c: 204: switch (MdmCntState)
 30929                           
 30930                           ;incstack = 0
 30931  00491A  D045               	goto	l315
 30932  00491C                     
 30933                           ;mdm_drv.c: 208: InitModemInterface();
 30934  00491C  ECE9  F036         	call	_InitModemInterface	;wreg free
 30935                           
 30936                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 30937  004920  0E01               	movlw	1
 30938  004922  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30939                           
 30940                           ;mdm_drv.c: 211: break;
 30941  004924  0012               	return	
 30942  004926                     
 30943                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 30944  004926  0EDF               	movlw	low _MdmOnOffPulseRequest
 30945  004928  0100               	movlb	0	; () banked
 30946  00492A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30947  00492C  0E00               	movlw	high _MdmOnOffPulseRequest
 30948  00492E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30949  004930  EC34  F034         	call	_ReceiveEvt	;wreg free
 30950  004934  0900               	iorlw	0
 30951  004936  B4D8               	btfsc	status,2,c
 30952  004938  D009               	goto	l319
 30953                           
 30954                           ;mdm_drv.c: 216: {
 30955                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 30956  00493A  0E02               	movlw	2
 30957  00493C  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30958                           
 30959                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 30960  00493E  8284               	bsf	3972,1,c	;volatile
 30961                           
 30962                           ;mdm_drv.c: 222: Counter = 0;
 30963  004940  0E00               	movlw	0
 30964  004942  0102               	movlb	2	; () banked
 30965  004944  6FDA               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 30966  004946  0E00               	movlw	0
 30967  004948  6FD9               	movwf	MdmCntSm@Counter& (0+255),b
 30968                           
 30969                           ;mdm_drv.c: 223: }
 30970  00494A  0012               	return	
 30971  00494C                     l319:
 30972                           
 30973                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 30974                           
 30975                           ; BSR set to: 2
 30976  00494C  0E3D               	movlw	low _MdmResetRequest
 30977  00494E  0100               	movlb	0	; () banked
 30978  004950  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30979  004952  0E00               	movlw	high _MdmResetRequest
 30980  004954  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30981  004956  EC34  F034         	call	_ReceiveEvt	;wreg free
 30982  00495A  0900               	iorlw	0
 30983  00495C  B4D8               	btfsc	status,2,c
 30984  00495E  0012               	return	
 30985                           
 30986                           ;mdm_drv.c: 225: {
 30987                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 30988  004960  0E03               	movlw	3
 30989  004962  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30990                           
 30991                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 30992  004964  8084               	bsf	3972,0,c	;volatile
 30993                           
 30994                           ;mdm_drv.c: 231: Counter = 0;
 30995  004966  0E00               	movlw	0
 30996  004968  0102               	movlb	2	; () banked
 30997  00496A  6FDA               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 30998  00496C  0E00               	movlw	0
 30999  00496E  6FD9               	movwf	MdmCntSm@Counter& (0+255),b
 31000                           
 31001                           ; BSR set to: 2
 31002                           ;mdm_drv.c: 236: }
 31003                           ;mdm_drv.c: 237: break;
 31004                           
 31005                           ; BSR set to: 2
 31006                           
 31007                           ;mdm_drv.c: 233: else
 31008                           ;mdm_drv.c: 234: {
 31009                           
 31010                           ; BSR set to: 2
 31011                           
 31012                           ;mdm_drv.c: 232: }
 31013  004970  0012               	return	
 31014  004972                     
 31015                           ;mdm_drv.c: 241: Counter++;
 31016                           
 31017                           ; BSR set to: 2
 31018  004972  0102               	movlb	2	; () banked
 31019  004974  4BD9               	infsnz	MdmCntSm@Counter& (0+255),f,b
 31020  004976  2BDA               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 31021                           
 31022                           ; BSR set to: 2
 31023                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 31024  004978  51DA               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 31025  00497A  E104               	bnz	u15030
 31026  00497C  0E96               	movlw	150
 31027  00497E  5DD9               	subwf	MdmCntSm@Counter& (0+255),w,b
 31028  004980  A0D8               	btfss	status,0,c
 31029  004982  0012               	return	
 31030  004984                     u15030:
 31031                           
 31032                           ; BSR set to: 2
 31033                           ;mdm_drv.c: 244: {
 31034                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 31035  004984  9284               	bcf	3972,1,c	;volatile
 31036                           
 31037                           ; BSR set to: 2
 31038                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 31039  004986  0E01               	movlw	1
 31040  004988  6E2E               	movwf	MdmCntSm@MdmCntState,c
 31041                           
 31042                           ; BSR set to: 2
 31043                           ;mdm_drv.c: 249: }
 31044                           ;mdm_drv.c: 250: break;
 31045  00498A  0012               	return	
 31046  00498C                     
 31047                           ;mdm_drv.c: 254: Counter++;
 31048                           
 31049                           ; BSR set to: 2
 31050  00498C  0102               	movlb	2	; () banked
 31051  00498E  4BD9               	infsnz	MdmCntSm@Counter& (0+255),f,b
 31052  004990  2BDA               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 31053                           
 31054                           ; BSR set to: 2
 31055                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 31056  004992  51DA               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 31057  004994  E104               	bnz	u15040
 31058  004996  0E0A               	movlw	10
 31059  004998  5DD9               	subwf	MdmCntSm@Counter& (0+255),w,b
 31060  00499A  A0D8               	btfss	status,0,c
 31061  00499C  0012               	return	
 31062  00499E                     u15040:
 31063                           
 31064                           ; BSR set to: 2
 31065                           ;mdm_drv.c: 257: {
 31066                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 31067  00499E  9084               	bcf	3972,0,c	;volatile
 31068                           
 31069                           ; BSR set to: 2
 31070                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 31071  0049A0  0E01               	movlw	1
 31072  0049A2  6E2E               	movwf	MdmCntSm@MdmCntState,c
 31073                           
 31074                           ; BSR set to: 2
 31075                           ;mdm_drv.c: 267: }
 31076                           
 31077                           ; BSR set to: 2
 31078                           ;mdm_drv.c: 266: break;
 31079                           
 31080                           ;mdm_drv.c: 265: default:
 31081                           
 31082                           ; BSR set to: 2
 31083                           ;mdm_drv.c: 262: }
 31084                           ;mdm_drv.c: 263: break;
 31085  0049A4  0012               	return	
 31086  0049A6                     l315:
 31087                           
 31088                           ; BSR set to: 2
 31089  0049A6  502E               	movf	MdmCntSm@MdmCntState,w,c
 31090                           
 31091                           ; Switch size 1, requested type "space"
 31092                           ; Number of cases is 4, Range of values is 0 to 3
 31093                           ; switch strategies available:
 31094                           ; Name         Instructions Cycles
 31095                           ; simple_byte           13     7 (average)
 31096                           ;	Chosen strategy is simple_byte
 31097  0049A8  0A00               	xorlw	0	; case 0
 31098  0049AA  B4D8               	btfsc	status,2,c
 31099  0049AC  D7B7               	goto	l316
 31100  0049AE  0A01               	xorlw	1	; case 1
 31101  0049B0  B4D8               	btfsc	status,2,c
 31102  0049B2  D7B9               	goto	l318
 31103  0049B4  0A03               	xorlw	3	; case 2
 31104  0049B6  B4D8               	btfsc	status,2,c
 31105  0049B8  D7DC               	goto	l323
 31106  0049BA  0A01               	xorlw	1	; case 3
 31107  0049BC  A4D8               	btfss	status,2,c
 31108  0049BE  0012               	return	
 31109  0049C0  D7E5               	goto	l325
 31110  0049C2                     __end_of_MdmCntSm:
 31111                           	opt stack 0
 31112                           tosu	equ	0xFFF
 31113                           tosh	equ	0xFFE
 31114                           tosl	equ	0xFFD
 31115                           pclath	equ	0xFFA
 31116                           tblptru	equ	0xFF8
 31117                           tblptrh	equ	0xFF7
 31118                           tblptrl	equ	0xFF6
 31119                           tablat	equ	0xFF5
 31120                           prodh	equ	0xFF4
 31121                           prodl	equ	0xFF3
 31122                           intcon	equ	0xFF2
 31123                           intcon2	equ	0xFF1
 31124                           intcon3	equ	0xFF0
 31125                           indf0	equ	0xFEF
 31126                           postinc0	equ	0xFEE
 31127                           plusw0	equ	0xFEB
 31128                           fsr0h	equ	0xFEA
 31129                           fsr0l	equ	0xFE9
 31130                           wreg	equ	0xFE8
 31131                           indf1	equ	0xFE7
 31132                           postinc1	equ	0xFE6
 31133                           postdec1	equ	0xFE5
 31134                           plusw1	equ	0xFE3
 31135                           fsr1h	equ	0xFE2
 31136                           fsr1l	equ	0xFE1
 31137                           indf2	equ	0xFDF
 31138                           postinc2	equ	0xFDE
 31139                           postdec2	equ	0xFDD
 31140                           plusw2	equ	0xFDB
 31141                           fsr2h	equ	0xFDA
 31142                           fsr2l	equ	0xFD9
 31143                           status	equ	0xFD8
 31144                           
 31145 ;; *************** function _InitModemInterface *****************
 31146 ;; Defined at:
 31147 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 31148 ;; Parameters:    Size  Location     Type
 31149 ;;		None
 31150 ;; Auto vars:     Size  Location     Type
 31151 ;;		None
 31152 ;; Return value:  Size  Location     Type
 31153 ;;                  1    wreg      void 
 31154 ;; Registers used:
 31155 ;;		None
 31156 ;; Tracked objects:
 31157 ;;		On entry : 0/0
 31158 ;;		On exit  : 0/0
 31159 ;;		Unchanged: 0/0
 31160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31165 ;;Total ram usage:        0 bytes
 31166 ;; Hardware stack levels used:    1
 31167 ;; Hardware stack levels required when called:   11
 31168 ;; This function calls:
 31169 ;;		Nothing
 31170 ;; This function is called by:
 31171 ;;		_MdmCntSm
 31172 ;; This function uses a non-reentrant model
 31173 ;;
 31174                           
 31175                           	psect	text146
 31176  006DD2                     __ptext146:
 31177                           	opt stack 0
 31178  006DD2                     _InitModemInterface:
 31179                           	opt stack 15
 31180                           
 31181                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 31182                           
 31183                           ;incstack = 0
 31184  006DD2  9096               	bcf	3990,0,c	;volatile
 31185                           
 31186                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 31187  006DD4  9296               	bcf	3990,1,c	;volatile
 31188                           
 31189                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 31190  006DD6  8496               	bsf	3990,2,c	;volatile
 31191  006DD8  0012               	return		;funcret
 31192  006DDA                     __end_of_InitModemInterface:
 31193                           	opt stack 0
 31194                           tosu	equ	0xFFF
 31195                           tosh	equ	0xFFE
 31196                           tosl	equ	0xFFD
 31197                           pclath	equ	0xFFA
 31198                           tblptru	equ	0xFF8
 31199                           tblptrh	equ	0xFF7
 31200                           tblptrl	equ	0xFF6
 31201                           tablat	equ	0xFF5
 31202                           prodh	equ	0xFF4
 31203                           prodl	equ	0xFF3
 31204                           intcon	equ	0xFF2
 31205                           intcon2	equ	0xFF1
 31206                           intcon3	equ	0xFF0
 31207                           indf0	equ	0xFEF
 31208                           postinc0	equ	0xFEE
 31209                           plusw0	equ	0xFEB
 31210                           fsr0h	equ	0xFEA
 31211                           fsr0l	equ	0xFE9
 31212                           wreg	equ	0xFE8
 31213                           indf1	equ	0xFE7
 31214                           postinc1	equ	0xFE6
 31215                           postdec1	equ	0xFE5
 31216                           plusw1	equ	0xFE3
 31217                           fsr1h	equ	0xFE2
 31218                           fsr1l	equ	0xFE1
 31219                           indf2	equ	0xFDF
 31220                           postinc2	equ	0xFDE
 31221                           postdec2	equ	0xFDD
 31222                           plusw2	equ	0xFDB
 31223                           fsr2h	equ	0xFDA
 31224                           fsr2l	equ	0xFD9
 31225                           status	equ	0xFD8
 31226                           
 31227 ;; *************** function _InitGprsNetwork *****************
 31228 ;; Defined at:
 31229 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 31230 ;; Parameters:    Size  Location     Type
 31231 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 31232 ;;		 -> NULL(0), 
 31233 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 31234 ;; Auto vars:     Size  Location     Type
 31235 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 31236 ;;  Index           1   50[BANK1 ] unsigned char 
 31237 ;; Return value:  Size  Location     Type
 31238 ;;                  1    wreg      enum E8930
 31239 ;; Registers used:
 31240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31241 ;; Tracked objects:
 31242 ;;		On entry : 0/0
 31243 ;;		On exit  : 0/0
 31244 ;;		Unchanged: 0/0
 31245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31246 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31247 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31248 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31249 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31250 ;;Total ram usage:       56 bytes
 31251 ;; Hardware stack levels used:    1
 31252 ;; Hardware stack levels required when called:   14
 31253 ;; This function calls:
 31254 ;;		_ClearBuffer
 31255 ;;		_OsTmr_GetTimerStatus
 31256 ;;		_OsTmr_StartTimer
 31257 ;;		_ReceiveEvt
 31258 ;;		_StringCopy
 31259 ;;		_Uart_WriteConstString
 31260 ;;		_Uart_WriteString
 31261 ;; This function is called by:
 31262 ;;		_MdmHttp_MainTask
 31263 ;; This function uses a non-reentrant model
 31264 ;;
 31265                           
 31266                           	psect	text147
 31267  000DCE                     __ptext147:
 31268                           	opt stack 0
 31269  000DCE                     _InitGprsNetwork:
 31270                           	opt stack 13
 31271                           
 31272                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 31273                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 31274                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 31275                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 31276                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 31277                           
 31278                           ;incstack = 0
 31279  000DCE  0E00               	movlw	0
 31280  000DD0  0101               	movlb	1	; () banked
 31281  000DD2  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 31282                           
 31283                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 31284  000DD4  D154               	goto	l1219
 31285  000DD6                     
 31286                           ; BSR set to: 1
 31287                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 31288                           
 31289                           ; BSR set to: 1
 31290  000DD6  0ED8               	movlw	low _InitNetwork
 31291  000DD8  0100               	movlb	0	; () banked
 31292  000DDA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31293  000DDC  0E00               	movlw	high _InitNetwork
 31294  000DDE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31295  000DE0  EC34  F034         	call	_ReceiveEvt	;wreg free
 31296  000DE4  0900               	iorlw	0
 31297  000DE6  B4D8               	btfsc	status,2,c
 31298  000DE8  D166               	goto	l1222
 31299                           
 31300                           ;mdm_gsm_gprs_http.c: 137: {
 31301                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 31302  000DEA  0E01               	movlw	1
 31303  000DEC  D141               	goto	L103
 31304  000DEE                     
 31305                           ; BSR set to: 1
 31306                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 31307                           
 31308                           ; BSR set to: 1
 31309  000DEE  0E88               	movlw	low STR_8
 31310  000DF0  0100               	movlb	0	; () banked
 31311  000DF2  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31312  000DF4  0EFE               	movlw	high STR_8
 31313  000DF6  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31314  000DF8  0E01               	movlw	1
 31315  000DFA  ECCD  F031         	call	_Uart_WriteConstString
 31316                           
 31317                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 31318  000DFE  0E07               	movlw	7
 31319  000E00  0101               	movlb	1	; () banked
 31320  000E02  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31321                           
 31322                           ; BSR set to: 1
 31323                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 31324  000E04  0E02               	movlw	2
 31325  000E06  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 31326                           
 31327                           ; BSR set to: 1
 31328                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 31329  000E08  0EF3               	movlw	low _ConnTimeout
 31330  000E0A  0100               	movlb	0	; () banked
 31331  000E0C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31332  000E0E  0E02               	movlw	high _ConnTimeout
 31333  000E10  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31334  000E12  0E20               	movlw	32
 31335  000E14  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31336  000E16  0E4E               	movlw	78
 31337  000E18  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31338  000E1A  0E00               	movlw	0
 31339  000E1C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31340  000E1E  0E00               	movlw	0
 31341  000E20  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31342  000E22  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 31343  000E26  D0C7               	goto	l15995
 31344  000E28                     
 31345                           ; BSR set to: 1
 31346                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 31347                           
 31348                           ; BSR set to: 1
 31349  000E28  0E00               	movlw	low InitGprsNetwork@UartMessage
 31350  000E2A  0100               	movlb	0	; () banked
 31351  000E2C  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31352  000E2E  0E01               	movlw	high InitGprsNetwork@UartMessage
 31353  000E30  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31354  000E32  0E00               	movlw	0
 31355  000E34  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31356  000E36  0E32               	movlw	50
 31357  000E38  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31358  000E3A  EC56  F033         	call	_ClearBuffer	;wreg free
 31359                           
 31360                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 31361  000E3E  0EBC               	movlw	low STR_9
 31362  000E40  0100               	movlb	0	; () banked
 31363  000E42  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31364  000E44  0EFE               	movlw	high STR_9
 31365  000E46  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31366  000E48  0E00               	movlw	low InitGprsNetwork@UartMessage
 31367  000E4A  6F87               	movwf	StringCopy@DestStr& (0+255),b
 31368  000E4C  0E01               	movlw	high InitGprsNetwork@UartMessage
 31369  000E4E  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 31370  000E50  0E00               	movlw	0
 31371  000E52  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31372  000E54  0E14               	movlw	20
 31373  000E56  6F89               	movwf	StringCopy@Len& (0+255),b
 31374  000E58  ECBC  F02C         	call	_StringCopy	;wreg free
 31375                           
 31376                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 31377  000E5C  0E00               	movlw	0
 31378  000E5E  0101               	movlb	1	; () banked
 31379  000E60  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 31380  000E62  D01C               	goto	l1225
 31381  000E64                     
 31382                           ; BSR set to: 1
 31383                           ;mdm_gsm_gprs_http.c: 161: {
 31384                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 31385                           
 31386                           ; BSR set to: 1
 31387  000E64  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31388  000E66  0D01               	mullw	1
 31389  000E68  50F3               	movf	prodl,w,c
 31390  000E6A  0100               	movlb	0	; () banked
 31391  000E6C  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 31392  000E6E  6ED9               	movwf	fsr2l,c
 31393  000E70  50F4               	movf	prodh,w,c
 31394  000E72  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 31395  000E74  6EDA               	movwf	fsr2h,c
 31396  000E76  0101               	movlb	1	; () banked
 31397  000E78  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31398  000E7A  0100               	movlb	0	; () banked
 31399  000E7C  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 31400  000E7E  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 31401  000E80  0E14               	movlw	20
 31402  000E82  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 31403  000E84  0E00               	movlw	0
 31404  000E86  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 31405  000E88  0E00               	movlw	low InitGprsNetwork@UartMessage
 31406  000E8A  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 31407  000E8C  6EE1               	movwf	fsr1l,c
 31408  000E8E  0E01               	movlw	high InitGprsNetwork@UartMessage
 31409  000E90  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 31410  000E92  6EE2               	movwf	fsr1h,c
 31411  000E94  CFDF FFE7          	movff	indf2,indf1
 31412                           
 31413                           ; BSR set to: 0
 31414  000E98  0101               	movlb	1	; () banked
 31415  000E9A  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 31416  000E9C                     l1225:
 31417                           
 31418                           ; BSR set to: 1
 31419                           
 31420                           ; BSR set to: 1
 31421  000E9C  0100               	movlb	0	; () banked
 31422  000E9E  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 31423  000EA0  0101               	movlb	1	; () banked
 31424  000EA2  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 31425  000EA4  A0D8               	btfss	status,0,c
 31426  000EA6  D7DE               	goto	l1226
 31427                           
 31428                           ; BSR set to: 1
 31429                           ;mdm_gsm_gprs_http.c: 163: }
 31430                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 31431                           
 31432                           ; BSR set to: 1
 31433  000EA8  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31434  000EAA  0100               	movlb	0	; () banked
 31435  000EAC  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 31436  000EAE  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 31437  000EB0  0E14               	movlw	20
 31438  000EB2  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 31439  000EB4  0E00               	movlw	0
 31440  000EB6  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 31441  000EB8  0E00               	movlw	low InitGprsNetwork@UartMessage
 31442  000EBA  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 31443  000EBC  6ED9               	movwf	fsr2l,c
 31444  000EBE  0E01               	movlw	high InitGprsNetwork@UartMessage
 31445  000EC0  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 31446  000EC2  6EDA               	movwf	fsr2h,c
 31447  000EC4  0E22               	movlw	34
 31448  000EC6  6EDF               	movwf	indf2,c
 31449                           
 31450                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 31451  000EC8  0101               	movlb	1	; () banked
 31452  000ECA  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31453  000ECC  0100               	movlb	0	; () banked
 31454  000ECE  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 31455  000ED0  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 31456  000ED2  0E15               	movlw	21
 31457  000ED4  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 31458  000ED6  0E00               	movlw	0
 31459  000ED8  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 31460  000EDA  0E00               	movlw	low InitGprsNetwork@UartMessage
 31461  000EDC  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 31462  000EDE  6ED9               	movwf	fsr2l,c
 31463  000EE0  0E01               	movlw	high InitGprsNetwork@UartMessage
 31464  000EE2  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 31465  000EE4  6EDA               	movwf	fsr2h,c
 31466  000EE6  0E0D               	movlw	13
 31467  000EE8  6EDF               	movwf	indf2,c
 31468                           
 31469                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 31470  000EEA  0101               	movlb	1	; () banked
 31471  000EEC  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31472  000EEE  0100               	movlb	0	; () banked
 31473  000EF0  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 31474  000EF2  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 31475  000EF4  0E16               	movlw	22
 31476  000EF6  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 31477  000EF8  0E00               	movlw	0
 31478  000EFA  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 31479  000EFC  0E00               	movlw	low InitGprsNetwork@UartMessage
 31480  000EFE  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 31481  000F00  6ED9               	movwf	fsr2l,c
 31482  000F02  0E01               	movlw	high InitGprsNetwork@UartMessage
 31483  000F04  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 31484  000F06  6EDA               	movwf	fsr2h,c
 31485  000F08  0E00               	movlw	0
 31486  000F0A  6EDF               	movwf	indf2,c
 31487                           
 31488                           ; BSR set to: 0
 31489                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 31490  000F0C  0E00               	movlw	low InitGprsNetwork@UartMessage
 31491  000F0E  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 31492  000F10  0E01               	movlw	high InitGprsNetwork@UartMessage
 31493  000F12  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 31494  000F14  0E01               	movlw	1
 31495  000F16  EC6D  F032         	call	_Uart_WriteString
 31496                           
 31497                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 31498  000F1A  0E07               	movlw	7
 31499  000F1C  0101               	movlb	1	; () banked
 31500  000F1E  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31501                           
 31502                           ; BSR set to: 1
 31503                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 31504  000F20  0E03               	movlw	3
 31505  000F22  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 31506                           
 31507                           ; BSR set to: 1
 31508                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 31509  000F24  0EF3               	movlw	low _ConnTimeout
 31510  000F26  0100               	movlb	0	; () banked
 31511  000F28  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31512  000F2A  0E02               	movlw	high _ConnTimeout
 31513  000F2C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31514  000F2E  0E20               	movlw	32
 31515  000F30  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31516  000F32  0E4E               	movlw	78
 31517  000F34  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31518  000F36  0E00               	movlw	0
 31519  000F38  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31520  000F3A  0E00               	movlw	0
 31521  000F3C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31522  000F3E  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 31523  000F42  D039               	goto	l15995
 31524  000F44                     
 31525                           ; BSR set to: 1
 31526                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 31527                           
 31528                           ; BSR set to: 1
 31529  000F44  0E4A               	movlw	low STR_10
 31530  000F46  0100               	movlb	0	; () banked
 31531  000F48  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31532  000F4A  0EFF               	movlw	high STR_10
 31533  000F4C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31534  000F4E  0E01               	movlw	1
 31535  000F50  ECCD  F031         	call	_Uart_WriteConstString
 31536                           
 31537                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 31538  000F54  0E07               	movlw	7
 31539  000F56  0101               	movlb	1	; () banked
 31540  000F58  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31541                           
 31542                           ; BSR set to: 1
 31543                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 31544  000F5A  0E05               	movlw	5
 31545  000F5C  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 31546                           
 31547                           ; BSR set to: 1
 31548                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 31549  000F5E  0EF3               	movlw	low _ConnTimeout
 31550  000F60  0100               	movlb	0	; () banked
 31551  000F62  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31552  000F64  0E02               	movlw	high _ConnTimeout
 31553  000F66  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31554  000F68  0E20               	movlw	32
 31555  000F6A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31556  000F6C  0E4E               	movlw	78
 31557  000F6E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31558  000F70  0E00               	movlw	0
 31559  000F72  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31560  000F74  0E00               	movlw	0
 31561  000F76  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31562  000F78  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 31563  000F7C  D01C               	goto	l15995
 31564  000F7E                     
 31565                           ; BSR set to: 1
 31566                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 31567                           
 31568                           ; BSR set to: 1
 31569  000F7E  0E58               	movlw	low STR_11
 31570  000F80  0100               	movlb	0	; () banked
 31571  000F82  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31572  000F84  0EFF               	movlw	high STR_11
 31573  000F86  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31574  000F88  0E01               	movlw	1
 31575  000F8A  ECCD  F031         	call	_Uart_WriteConstString
 31576                           
 31577                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 31578  000F8E  0E08               	movlw	8
 31579  000F90  0101               	movlb	1	; () banked
 31580  000F92  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31581                           
 31582                           ; BSR set to: 1
 31583                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 31584  000F94  0E05               	movlw	5
 31585  000F96  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 31586                           
 31587                           ; BSR set to: 1
 31588                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 31589  000F98  0EF3               	movlw	low _ConnTimeout
 31590  000F9A  0100               	movlb	0	; () banked
 31591  000F9C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31592  000F9E  0E02               	movlw	high _ConnTimeout
 31593  000FA0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31594  000FA2  0E20               	movlw	32
 31595  000FA4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31596  000FA6  0E4E               	movlw	78
 31597  000FA8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31598  000FAA  0E00               	movlw	0
 31599  000FAC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31600  000FAE  0E00               	movlw	0
 31601  000FB0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31602  000FB2  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 31603  000FB6                     l15995:
 31604                           
 31605                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 31606  000FB6  0E01               	movlw	1
 31607  000FB8  0101               	movlb	1	; () banked
 31608  000FBA  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 31609                           
 31610                           ;mdm_gsm_gprs_http.c: 201: break;
 31611  000FBC  D07C               	goto	l1222
 31612  000FBE                     
 31613                           ; BSR set to: 1
 31614                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 31615                           
 31616                           ; BSR set to: 1
 31617  000FBE  0E02               	movlw	2
 31618  000FC0  D05A               	goto	L102
 31619  000FC2                     
 31620                           ; BSR set to: 1
 31621                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 31622                           
 31623                           ; BSR set to: 1
 31624  000FC2  0E3C               	movlw	low _NewStringReceived
 31625  000FC4  0100               	movlb	0	; () banked
 31626  000FC6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31627  000FC8  0E00               	movlw	high _NewStringReceived
 31628  000FCA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31629  000FCC  EC34  F034         	call	_ReceiveEvt	;wreg free
 31630  000FD0  0900               	iorlw	0
 31631  000FD2  B4D8               	btfsc	status,2,c
 31632  000FD4  D018               	goto	l1232
 31633                           
 31634                           ;mdm_gsm_gprs_http.c: 212: {
 31635                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 31636  000FD6  CC58  FFE8         	movff	_RxBuffer,wreg
 31637  000FDA  0A4F               	xorlw	79
 31638  000FDC  A4D8               	btfss	status,2,c
 31639  000FDE  D06B               	goto	l1222
 31640  000FE0  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31641  000FE4  0A4B               	xorlw	75
 31642  000FE6  A4D8               	btfss	status,2,c
 31643  000FE8  D066               	goto	l1222
 31644                           
 31645                           ;mdm_gsm_gprs_http.c: 215: {
 31646                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 31647  000FEA  C02A  F1E7         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 31648                           
 31649                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 31650  000FEE  0E58               	movlw	low _RxBuffer
 31651  000FF0  0100               	movlb	0	; () banked
 31652  000FF2  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31653  000FF4  0E0C               	movlw	high _RxBuffer
 31654  000FF6  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31655  000FF8  0E01               	movlw	1
 31656  000FFA  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31657  000FFC  0E90               	movlw	144
 31658  000FFE  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31659  001000  EC56  F033         	call	_ClearBuffer	;wreg free
 31660                           
 31661                           ;mdm_gsm_gprs_http.c: 220: }
 31662                           ;mdm_gsm_gprs_http.c: 221: }
 31663  001004  D058               	goto	l1222
 31664  001006                     l1232:
 31665                           
 31666                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31667  001006  0EF3               	movlw	low _ConnTimeout
 31668  001008  0100               	movlb	0	; () banked
 31669  00100A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31670  00100C  0E02               	movlw	high _ConnTimeout
 31671  00100E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31672  001010  ECC6  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31673  001014  D029               	goto	L66
 31674  001016                     
 31675                           ; BSR set to: 1
 31676                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 31677                           
 31678                           ; BSR set to: 1
 31679  001016  0E3C               	movlw	low _NewStringReceived
 31680  001018  0100               	movlb	0	; () banked
 31681  00101A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31682  00101C  0E00               	movlw	high _NewStringReceived
 31683  00101E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31684  001020  EC34  F034         	call	_ReceiveEvt	;wreg free
 31685  001024  0900               	iorlw	0
 31686  001026  B4D8               	btfsc	status,2,c
 31687  001028  D018               	goto	l1237
 31688                           
 31689                           ;mdm_gsm_gprs_http.c: 232: {
 31690                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 31691  00102A  CC58  FFE8         	movff	_RxBuffer,wreg
 31692  00102E  0A2B               	xorlw	43
 31693  001030  A4D8               	btfss	status,2,c
 31694  001032  D041               	goto	l1222
 31695  001034  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31696  001038  0A53               	xorlw	83
 31697  00103A  A4D8               	btfss	status,2,c
 31698  00103C  D03C               	goto	l1222
 31699                           
 31700                           ;mdm_gsm_gprs_http.c: 235: {
 31701                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 31702  00103E  C02A  F1E7         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 31703                           
 31704                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 31705  001042  0E58               	movlw	low _RxBuffer
 31706  001044  0100               	movlb	0	; () banked
 31707  001046  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31708  001048  0E0C               	movlw	high _RxBuffer
 31709  00104A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31710  00104C  0E01               	movlw	1
 31711  00104E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31712  001050  0E90               	movlw	144
 31713  001052  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31714  001054  EC56  F033         	call	_ClearBuffer	;wreg free
 31715                           
 31716                           ;mdm_gsm_gprs_http.c: 240: }
 31717                           ;mdm_gsm_gprs_http.c: 241: }
 31718  001058  D02E               	goto	l1222
 31719  00105A                     l1237:
 31720                           
 31721                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31722  00105A  0EF3               	movlw	low _ConnTimeout
 31723  00105C  0100               	movlb	0	; () banked
 31724  00105E  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31725  001060  0E02               	movlw	high _ConnTimeout
 31726  001062  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31727  001064  ECC6  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31728  001068                     L66:
 31729  001068  06E8               	decf	wreg,f,c
 31730  00106A  A4D8               	btfss	status,2,c
 31731  00106C  D024               	goto	l1222
 31732                           
 31733                           ;mdm_gsm_gprs_http.c: 243: {
 31734                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 31735  00106E  0E06               	movlw	6
 31736  001070                     L103:
 31737  001070  0101               	movlb	1	; () banked
 31738  001072  D003               	goto	L65
 31739  001074                     
 31740                           ; BSR set to: 1
 31741                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 31742                           
 31743                           ; BSR set to: 1
 31744  001074  0E03               	movlw	3
 31745  001076                     L102:
 31746  001076  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 31747                           
 31748                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 31749  001078  0E00               	movlw	0
 31750  00107A                     L65:
 31751  00107A  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31752                           
 31753                           ; BSR set to: 1
 31754                           ;mdm_gsm_gprs_http.c: 257: }
 31755                           
 31756                           ; BSR set to: 1
 31757                           ;mdm_gsm_gprs_http.c: 256: break;
 31758                           
 31759                           ;mdm_gsm_gprs_http.c: 255: default:
 31760                           
 31761                           ;mdm_gsm_gprs_http.c: 253: break;
 31762  00107C  D01C               	goto	l1222
 31763  00107E                     l1219:
 31764                           
 31765                           ; BSR set to: 1
 31766                           
 31767                           ; BSR set to: 1
 31768  00107E  51E7               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 31769                           
 31770                           ; Switch size 1, requested type "space"
 31771                           ; Number of cases is 9, Range of values is 0 to 8
 31772                           ; switch strategies available:
 31773                           ; Name         Instructions Cycles
 31774                           ; simple_byte           28    15 (average)
 31775                           ;	Chosen strategy is simple_byte
 31776  001080  0A00               	xorlw	0	; case 0
 31777  001082  B4D8               	btfsc	status,2,c
 31778  001084  D6A8               	goto	l1220
 31779  001086  0A01               	xorlw	1	; case 1
 31780  001088  B4D8               	btfsc	status,2,c
 31781  00108A  D6B1               	goto	l1223
 31782  00108C  0A03               	xorlw	3	; case 2
 31783  00108E  B4D8               	btfsc	status,2,c
 31784  001090  D6CB               	goto	l1224
 31785  001092  0A01               	xorlw	1	; case 3
 31786  001094  B4D8               	btfsc	status,2,c
 31787  001096  D756               	goto	l1228
 31788  001098  0A07               	xorlw	7	; case 4
 31789  00109A  B4D8               	btfsc	status,2,c
 31790  00109C  D770               	goto	l1229
 31791  00109E  0A01               	xorlw	1	; case 5
 31792  0010A0  B4D8               	btfsc	status,2,c
 31793  0010A2  D78D               	goto	l1230
 31794  0010A4  0A03               	xorlw	3	; case 6
 31795  0010A6  B4D8               	btfsc	status,2,c
 31796  0010A8  D7E5               	goto	l1241
 31797  0010AA  0A01               	xorlw	1	; case 7
 31798  0010AC  B4D8               	btfsc	status,2,c
 31799  0010AE  D789               	goto	l1231
 31800  0010B0  0A0F               	xorlw	15	; case 8
 31801  0010B2  B4D8               	btfsc	status,2,c
 31802  0010B4  D7B0               	goto	l1236
 31803  0010B6                     l1222:
 31804                           
 31805                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 31806                           
 31807                           ; BSR set to: 1
 31808  0010B6  0101               	movlb	1	; () banked
 31809  0010B8  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 31810  0010BA  0012               	return	
 31811  0010BC                     __end_of_InitGprsNetwork:
 31812                           	opt stack 0
 31813                           tosu	equ	0xFFF
 31814                           tosh	equ	0xFFE
 31815                           tosl	equ	0xFFD
 31816                           pclath	equ	0xFFA
 31817                           tblptru	equ	0xFF8
 31818                           tblptrh	equ	0xFF7
 31819                           tblptrl	equ	0xFF6
 31820                           tablat	equ	0xFF5
 31821                           prodh	equ	0xFF4
 31822                           prodl	equ	0xFF3
 31823                           intcon	equ	0xFF2
 31824                           intcon2	equ	0xFF1
 31825                           intcon3	equ	0xFF0
 31826                           indf0	equ	0xFEF
 31827                           postinc0	equ	0xFEE
 31828                           plusw0	equ	0xFEB
 31829                           fsr0h	equ	0xFEA
 31830                           fsr0l	equ	0xFE9
 31831                           wreg	equ	0xFE8
 31832                           indf1	equ	0xFE7
 31833                           postinc1	equ	0xFE6
 31834                           postdec1	equ	0xFE5
 31835                           plusw1	equ	0xFE3
 31836                           fsr1h	equ	0xFE2
 31837                           fsr1l	equ	0xFE1
 31838                           indf2	equ	0xFDF
 31839                           postinc2	equ	0xFDE
 31840                           postdec2	equ	0xFDD
 31841                           plusw2	equ	0xFDB
 31842                           fsr2h	equ	0xFDA
 31843                           fsr2l	equ	0xFD9
 31844                           status	equ	0xFD8
 31845                           
 31846 ;; *************** function _HttpGetMethod *****************
 31847 ;; Defined at:
 31848 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 31849 ;; Parameters:    Size  Location     Type
 31850 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 31851 ;;		 -> HttpGetDataLocal(5), 
 31852 ;; Auto vars:     Size  Location     Type
 31853 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 31854 ;;  Index           1  200[BANK1 ] unsigned char 
 31855 ;; Return value:  Size  Location     Type
 31856 ;;                  1    wreg      enum E8930
 31857 ;; Registers used:
 31858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31859 ;; Tracked objects:
 31860 ;;		On entry : 0/0
 31861 ;;		On exit  : 0/0
 31862 ;;		Unchanged: 0/0
 31863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31864 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31865 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31866 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31867 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31868 ;;Total ram usage:      207 bytes
 31869 ;; Hardware stack levels used:    1
 31870 ;; Hardware stack levels required when called:   14
 31871 ;; This function calls:
 31872 ;;		_ClearBuffer
 31873 ;;		_OsTmr_GetTimerStatus
 31874 ;;		_OsTmr_StartTimer
 31875 ;;		_ReceiveEvt
 31876 ;;		_StringCopy
 31877 ;;		_Uart_WriteConstString
 31878 ;;		_Uart_WriteString
 31879 ;; This function is called by:
 31880 ;;		_MdmHttp_MainTask
 31881 ;; This function uses a non-reentrant model
 31882 ;;
 31883                           
 31884                           	psect	text148
 31885  0005F2                     __ptext148:
 31886                           	opt stack 0
 31887  0005F2                     _HttpGetMethod:
 31888                           	opt stack 13
 31889                           
 31890                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 31891                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 31892                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 31893                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 31894                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 31895                           
 31896                           ; BSR set to: 1
 31897                           ;incstack = 0
 31898  0005F2  0E00               	movlw	0
 31899  0005F4  0101               	movlb	1	; () banked
 31900  0005F6  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 31901                           
 31902                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 31903  0005F8  D230               	goto	l1252
 31904  0005FA                     
 31905                           ; BSR set to: 1
 31906                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 31907                           
 31908                           ; BSR set to: 1
 31909  0005FA  0EFC               	movlw	low _GetMethod
 31910  0005FC  0100               	movlb	0	; () banked
 31911  0005FE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31912  000600  0E01               	movlw	high _GetMethod
 31913  000602  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31914  000604  EC34  F034         	call	_ReceiveEvt	;wreg free
 31915  000608  0900               	iorlw	0
 31916  00060A  B4D8               	btfsc	status,2,c
 31917  00060C  D257               	goto	l1255
 31918                           
 31919                           ;mdm_gsm_gprs_http.c: 284: {
 31920                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 31921  00060E  0E01               	movlw	1
 31922  000610  D18C               	goto	L68
 31923  000612                     
 31924                           ; BSR set to: 1
 31925                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 31926                           
 31927                           ; BSR set to: 1
 31928  000612  0E9C               	movlw	low STR_12
 31929  000614  0100               	movlb	0	; () banked
 31930  000616  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31931  000618  0EFF               	movlw	high STR_12
 31932  00061A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31933  00061C  0E01               	movlw	1
 31934  00061E  ECCD  F031         	call	_Uart_WriteConstString
 31935                           
 31936                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 31937  000622  0E0A               	movlw	10
 31938  000624  0101               	movlb	1	; () banked
 31939  000626  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31940                           
 31941                           ; BSR set to: 1
 31942                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 31943  000628  0E02               	movlw	2
 31944  00062A  0100               	movlb	0	; () banked
 31945  00062C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31946                           
 31947                           ; BSR set to: 0
 31948                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 31949  00062E  0EF3               	movlw	low _ConnTimeout
 31950  000630  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31951  000632  0E02               	movlw	high _ConnTimeout
 31952  000634  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31953  000636  0E20               	movlw	32
 31954  000638  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31955  00063A  0E4E               	movlw	78
 31956  00063C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31957  00063E  0E00               	movlw	0
 31958  000640  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31959  000642  0E00               	movlw	0
 31960  000644  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31961  000646  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 31962  00064A  D1AF               	goto	l16161
 31963  00064C                     
 31964                           ; BSR set to: 1
 31965                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 31966                           
 31967                           ; BSR set to: 1
 31968  00064C  0E66               	movlw	low STR_13
 31969  00064E  0100               	movlb	0	; () banked
 31970  000650  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31971  000652  0EFF               	movlw	high STR_13
 31972  000654  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31973  000656  0E01               	movlw	1
 31974  000658  ECCD  F031         	call	_Uart_WriteConstString
 31975                           
 31976                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 31977  00065C  0E0A               	movlw	10
 31978  00065E  0101               	movlb	1	; () banked
 31979  000660  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31980                           
 31981                           ; BSR set to: 1
 31982                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 31983  000662  0E03               	movlw	3
 31984  000664  0100               	movlb	0	; () banked
 31985  000666  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31986                           
 31987                           ; BSR set to: 0
 31988                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 31989  000668  0EF3               	movlw	low _ConnTimeout
 31990  00066A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31991  00066C  0E02               	movlw	high _ConnTimeout
 31992  00066E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31993  000670  0E20               	movlw	32
 31994  000672  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31995  000674  0E4E               	movlw	78
 31996  000676  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31997  000678  0E00               	movlw	0
 31998  00067A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31999  00067C  0E00               	movlw	0
 32000  00067E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32001  000680  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 32002  000684  D192               	goto	l16161
 32003  000686                     
 32004                           ; BSR set to: 1
 32005                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 32006                           
 32007                           ; BSR set to: 1
 32008  000686  0EA7               	movlw	low STR_14
 32009  000688  0100               	movlb	0	; () banked
 32010  00068A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 32011  00068C  0EFE               	movlw	high STR_14
 32012  00068E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 32013  000690  0E01               	movlw	1
 32014  000692  ECCD  F031         	call	_Uart_WriteConstString
 32015                           
 32016                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 32017  000696  0E0A               	movlw	10
 32018  000698  0101               	movlb	1	; () banked
 32019  00069A  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32020                           
 32021                           ; BSR set to: 1
 32022                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 32023  00069C  0E04               	movlw	4
 32024  00069E  0100               	movlb	0	; () banked
 32025  0006A0  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32026                           
 32027                           ; BSR set to: 0
 32028                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 32029  0006A2  0EF3               	movlw	low _ConnTimeout
 32030  0006A4  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32031  0006A6  0E02               	movlw	high _ConnTimeout
 32032  0006A8  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32033  0006AA  0E20               	movlw	32
 32034  0006AC  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32035  0006AE  0E4E               	movlw	78
 32036  0006B0  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32037  0006B2  0E00               	movlw	0
 32038  0006B4  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32039  0006B6  0E00               	movlw	0
 32040  0006B8  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32041  0006BA  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 32042  0006BE  D175               	goto	l16161
 32043  0006C0                     
 32044                           ; BSR set to: 1
 32045                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 32046                           
 32047                           ; BSR set to: 1
 32048  0006C0  0E00               	movlw	low HttpGetMethod@UartMessage
 32049  0006C2  0100               	movlb	0	; () banked
 32050  0006C4  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 32051  0006C6  0E01               	movlw	high HttpGetMethod@UartMessage
 32052  0006C8  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 32053  0006CA  0E00               	movlw	0
 32054  0006CC  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 32055  0006CE  0EC8               	movlw	200
 32056  0006D0  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 32057  0006D2  EC56  F033         	call	_ClearBuffer	;wreg free
 32058                           
 32059                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 32060  0006D6  0EE5               	movlw	low STR_15
 32061  0006D8  0100               	movlb	0	; () banked
 32062  0006DA  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 32063  0006DC  0EFE               	movlw	high STR_15
 32064  0006DE  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 32065  0006E0  0E00               	movlw	low HttpGetMethod@UartMessage
 32066  0006E2  6F87               	movwf	StringCopy@DestStr& (0+255),b
 32067  0006E4  0E01               	movlw	high HttpGetMethod@UartMessage
 32068  0006E6  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 32069  0006E8  0E00               	movlw	0
 32070  0006EA  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 32071  0006EC  0E13               	movlw	19
 32072  0006EE  6F89               	movwf	StringCopy@Len& (0+255),b
 32073  0006F0  ECBC  F02C         	call	_StringCopy	;wreg free
 32074                           
 32075                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 32076  0006F4  0E00               	movlw	0
 32077  0006F6  0101               	movlb	1	; () banked
 32078  0006F8  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 32079  0006FA  D024               	goto	l1260
 32080  0006FC                     
 32081                           ; BSR set to: 1
 32082                           ;mdm_gsm_gprs_http.c: 332: {
 32083                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 32084                           
 32085                           ; BSR set to: 1
 32086  0006FC  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 32087  0006FE  0D01               	mullw	1
 32088  000700  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 32089  000704  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 32090  000708  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 32091  00070C  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 32092  000710  50F3               	movf	prodl,w,c
 32093  000712  0100               	movlb	0	; () banked
 32094  000714  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 32095  000716  6ED9               	movwf	fsr2l,c
 32096  000718  50F4               	movf	prodh,w,c
 32097  00071A  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 32098  00071C  6EDA               	movwf	fsr2h,c
 32099  00071E  0101               	movlb	1	; () banked
 32100  000720  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 32101  000722  0100               	movlb	0	; () banked
 32102  000724  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 32103  000726  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 32104  000728  0E13               	movlw	19
 32105  00072A  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 32106  00072C  0E00               	movlw	0
 32107  00072E  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 32108  000730  0E00               	movlw	low HttpGetMethod@UartMessage
 32109  000732  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 32110  000734  6EE1               	movwf	fsr1l,c
 32111  000736  0E01               	movlw	high HttpGetMethod@UartMessage
 32112  000738  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 32113  00073A  6EE2               	movwf	fsr1h,c
 32114  00073C  CFDF FFE7          	movff	indf2,indf1
 32115                           
 32116                           ; BSR set to: 0
 32117  000740  0101               	movlb	1	; () banked
 32118  000742  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 32119  000744                     l1260:
 32120                           
 32121                           ; BSR set to: 1
 32122                           
 32123                           ; BSR set to: 1
 32124  000744  0100               	movlb	0	; () banked
 32125  000746  EE20 F002          	lfsr	2,2
 32126  00074A  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 32127  00074C  26D9               	addwf	fsr2l,f,c
 32128  00074E  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 32129  000750  22DA               	addwfc	fsr2h,f,c
 32130  000752  50DE               	movf	postinc2,w,c
 32131  000754  0101               	movlb	1	; () banked
 32132  000756  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 32133  000758  A0D8               	btfss	status,0,c
 32134  00075A  D7D0               	goto	l1261
 32135                           
 32136                           ; BSR set to: 1
 32137                           ;mdm_gsm_gprs_http.c: 334: }
 32138                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 32139                           
 32140                           ; BSR set to: 1
 32141  00075C  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 32142  00075E  0100               	movlb	0	; () banked
 32143  000760  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 32144  000762  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 32145  000764  0E13               	movlw	19
 32146  000766  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 32147  000768  0E00               	movlw	0
 32148  00076A  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 32149  00076C  0E00               	movlw	low HttpGetMethod@UartMessage
 32150  00076E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 32151  000770  6ED9               	movwf	fsr2l,c
 32152  000772  0E01               	movlw	high HttpGetMethod@UartMessage
 32153  000774  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 32154  000776  6EDA               	movwf	fsr2h,c
 32155  000778  0E22               	movlw	34
 32156  00077A  6EDF               	movwf	indf2,c
 32157                           
 32158                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 32159  00077C  0101               	movlb	1	; () banked
 32160  00077E  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 32161  000780  0100               	movlb	0	; () banked
 32162  000782  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 32163  000784  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 32164  000786  0E14               	movlw	20
 32165  000788  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 32166  00078A  0E00               	movlw	0
 32167  00078C  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 32168  00078E  0E00               	movlw	low HttpGetMethod@UartMessage
 32169  000790  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 32170  000792  6ED9               	movwf	fsr2l,c
 32171  000794  0E01               	movlw	high HttpGetMethod@UartMessage
 32172  000796  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 32173  000798  6EDA               	movwf	fsr2h,c
 32174  00079A  0E0D               	movlw	13
 32175  00079C  6EDF               	movwf	indf2,c
 32176                           
 32177                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 32178  00079E  0101               	movlb	1	; () banked
 32179  0007A0  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 32180  0007A2  0100               	movlb	0	; () banked
 32181  0007A4  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 32182  0007A6  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 32183  0007A8  0E15               	movlw	21
 32184  0007AA  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 32185  0007AC  0E00               	movlw	0
 32186  0007AE  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 32187  0007B0  0E00               	movlw	low HttpGetMethod@UartMessage
 32188  0007B2  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 32189  0007B4  6ED9               	movwf	fsr2l,c
 32190  0007B6  0E01               	movlw	high HttpGetMethod@UartMessage
 32191  0007B8  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 32192  0007BA  6EDA               	movwf	fsr2h,c
 32193  0007BC  0E00               	movlw	0
 32194  0007BE  6EDF               	movwf	indf2,c
 32195                           
 32196                           ; BSR set to: 0
 32197                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 32198  0007C0  0E00               	movlw	low HttpGetMethod@UartMessage
 32199  0007C2  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 32200  0007C4  0E01               	movlw	high HttpGetMethod@UartMessage
 32201  0007C6  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 32202  0007C8  0E01               	movlw	1
 32203  0007CA  EC6D  F032         	call	_Uart_WriteString
 32204                           
 32205                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 32206  0007CE  0E0A               	movlw	10
 32207  0007D0  0101               	movlb	1	; () banked
 32208  0007D2  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32209                           
 32210                           ; BSR set to: 1
 32211                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 32212  0007D4  0E05               	movlw	5
 32213  0007D6  0100               	movlb	0	; () banked
 32214  0007D8  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32215                           
 32216                           ; BSR set to: 0
 32217                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 32218  0007DA  0EF3               	movlw	low _ConnTimeout
 32219  0007DC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32220  0007DE  0E02               	movlw	high _ConnTimeout
 32221  0007E0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32222  0007E2  0E20               	movlw	32
 32223  0007E4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32224  0007E6  0E4E               	movlw	78
 32225  0007E8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32226  0007EA  0E00               	movlw	0
 32227  0007EC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32228  0007EE  0E00               	movlw	0
 32229  0007F0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32230  0007F2  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 32231  0007F6  D0D9               	goto	l16161
 32232  0007F8                     
 32233                           ; BSR set to: 1
 32234                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 32235                           
 32236                           ; BSR set to: 1
 32237  0007F8  0E1D               	movlw	low STR_16
 32238  0007FA  0100               	movlb	0	; () banked
 32239  0007FC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 32240  0007FE  0EFF               	movlw	high STR_16
 32241  000800  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 32242  000802  0E01               	movlw	1
 32243  000804  ECCD  F031         	call	_Uart_WriteConstString
 32244                           
 32245                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 32246  000808  0E0A               	movlw	10
 32247  00080A  0101               	movlb	1	; () banked
 32248  00080C  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32249                           
 32250                           ; BSR set to: 1
 32251                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 32252  00080E  0E06               	movlw	6
 32253  000810  0100               	movlb	0	; () banked
 32254  000812  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32255                           
 32256                           ; BSR set to: 0
 32257                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 32258  000814  0EF3               	movlw	low _ConnTimeout
 32259  000816  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32260  000818  0E02               	movlw	high _ConnTimeout
 32261  00081A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32262  00081C  0E20               	movlw	32
 32263  00081E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32264  000820  0E4E               	movlw	78
 32265  000822  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32266  000824  0E00               	movlw	0
 32267  000826  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32268  000828  0E00               	movlw	0
 32269  00082A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32270  00082C  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 32271                           
 32272                           ;mdm_gsm_gprs_http.c: 358: break;
 32273  000830  D145               	goto	l1255
 32274  000832                     
 32275                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 32276  000832  0E07               	movlw	7
 32277  000834  0101               	movlb	1	; () banked
 32278  000836  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32279                           
 32280                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 32281  000838  0E09               	movlw	9
 32282  00083A  0100               	movlb	0	; () banked
 32283  00083C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32284                           
 32285                           ; BSR set to: 0
 32286                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 32287  00083E  0EF3               	movlw	low _ConnTimeout
 32288  000840  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32289  000842  0E02               	movlw	high _ConnTimeout
 32290  000844  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32291  000846  0E20               	movlw	32
 32292  000848  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32293  00084A  0E4E               	movlw	78
 32294  00084C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32295  00084E  0E00               	movlw	0
 32296  000850  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32297  000852  0E00               	movlw	0
 32298  000854  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32299  000856  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 32300                           
 32301                           ;mdm_gsm_gprs_http.c: 371: break;
 32302  00085A  D130               	goto	l1255
 32303  00085C                     
 32304                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 32305  00085C  0E82               	movlw	low STR_17
 32306  00085E  0100               	movlb	0	; () banked
 32307  000860  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 32308  000862  0EFF               	movlw	high STR_17
 32309  000864  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 32310  000866  0E01               	movlw	1
 32311  000868  ECCD  F031         	call	_Uart_WriteConstString
 32312                           
 32313                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 32314  00086C  0E0D               	movlw	13
 32315  00086E  0101               	movlb	1	; () banked
 32316  000870  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32317                           
 32318                           ; BSR set to: 1
 32319                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 32320  000872  0E09               	movlw	9
 32321  000874  0100               	movlb	0	; () banked
 32322  000876  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32323                           
 32324                           ; BSR set to: 0
 32325                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 32326  000878  0EF3               	movlw	low _ConnTimeout
 32327  00087A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32328  00087C  0E02               	movlw	high _ConnTimeout
 32329  00087E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32330  000880  0E20               	movlw	32
 32331  000882  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32332  000884  0E4E               	movlw	78
 32333  000886  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32334  000888  0E00               	movlw	0
 32335  00088A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32336  00088C  0E00               	movlw	0
 32337  00088E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32338  000890  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 32339  000894  D08A               	goto	l16161
 32340  000896                     
 32341                           ; BSR set to: 1
 32342                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 32343                           
 32344                           ; BSR set to: 1
 32345  000896  0E8F               	movlw	low STR_18
 32346  000898  0100               	movlb	0	; () banked
 32347  00089A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 32348  00089C  0EFF               	movlw	high STR_18
 32349  00089E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 32350  0008A0  0E01               	movlw	1
 32351  0008A2  ECCD  F031         	call	_Uart_WriteConstString
 32352                           
 32353                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 32354  0008A6  0E0A               	movlw	10
 32355  0008A8  0101               	movlb	1	; () banked
 32356  0008AA  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32357                           
 32358                           ; BSR set to: 1
 32359                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 32360  0008AC  0E0E               	movlw	14
 32361  0008AE  0100               	movlb	0	; () banked
 32362  0008B0  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32363                           
 32364                           ; BSR set to: 0
 32365                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 32366  0008B2  0EF3               	movlw	low _ConnTimeout
 32367  0008B4  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32368  0008B6  0E02               	movlw	high _ConnTimeout
 32369  0008B8  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32370  0008BA  0E20               	movlw	32
 32371  0008BC  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32372  0008BE  0E4E               	movlw	78
 32373  0008C0  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32374  0008C2  0E00               	movlw	0
 32375  0008C4  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32376  0008C6  0E00               	movlw	0
 32377  0008C8  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32378  0008CA  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 32379  0008CE  D06D               	goto	l16161
 32380  0008D0                     
 32381                           ; BSR set to: 1
 32382                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 32383                           
 32384                           ; BSR set to: 1
 32385  0008D0  0E3C               	movlw	low _NewStringReceived
 32386  0008D2  0100               	movlb	0	; () banked
 32387  0008D4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 32388  0008D6  0E00               	movlw	high _NewStringReceived
 32389  0008D8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 32390  0008DA  EC34  F034         	call	_ReceiveEvt	;wreg free
 32391  0008DE  0900               	iorlw	0
 32392  0008E0  B4D8               	btfsc	status,2,c
 32393  0008E2  D018               	goto	l1268
 32394                           
 32395                           ;mdm_gsm_gprs_http.c: 400: {
 32396                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 32397  0008E4  CC58  FFE8         	movff	_RxBuffer,wreg
 32398  0008E8  0A4F               	xorlw	79
 32399  0008EA  A4D8               	btfss	status,2,c
 32400  0008EC  D0E7               	goto	l1255
 32401  0008EE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 32402  0008F2  0A4B               	xorlw	75
 32403  0008F4  A4D8               	btfss	status,2,c
 32404  0008F6  D0E2               	goto	l1255
 32405                           
 32406                           ;mdm_gsm_gprs_http.c: 403: {
 32407                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 32408  0008F8  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 32409                           
 32410                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 32411  0008FC  0E58               	movlw	low _RxBuffer
 32412  0008FE  0100               	movlb	0	; () banked
 32413  000900  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 32414  000902  0E0C               	movlw	high _RxBuffer
 32415  000904  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 32416  000906  0E01               	movlw	1
 32417  000908  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 32418  00090A  0E90               	movlw	144
 32419  00090C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 32420  00090E  EC56  F033         	call	_ClearBuffer	;wreg free
 32421                           
 32422                           ;mdm_gsm_gprs_http.c: 408: }
 32423                           ;mdm_gsm_gprs_http.c: 409: }
 32424  000912  D0D4               	goto	l1255
 32425  000914                     l1268:
 32426                           
 32427                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 32428  000914  0EF3               	movlw	low _ConnTimeout
 32429  000916  0100               	movlb	0	; () banked
 32430  000918  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 32431  00091A  0E02               	movlw	high _ConnTimeout
 32432  00091C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 32433  00091E  ECC6  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 32434  000922                     L69:
 32435  000922  06E8               	decf	wreg,f,c
 32436  000924  A4D8               	btfss	status,2,c
 32437  000926  D0CA               	goto	l1255
 32438                           
 32439                           ;mdm_gsm_gprs_http.c: 411: {
 32440                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 32441  000928  0E0F               	movlw	15
 32442  00092A                     L68:
 32443  00092A  0101               	movlb	1	; () banked
 32444  00092C  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32445                           
 32446                           ; BSR set to: 1
 32447                           ;mdm_gsm_gprs_http.c: 414: }
 32448                           ;mdm_gsm_gprs_http.c: 415: break;
 32449                           
 32450                           ; BSR set to: 1
 32451  00092E  D0C6               	goto	l1255
 32452  000930                     
 32453                           ; BSR set to: 1
 32454                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 32455                           
 32456                           ; BSR set to: 1
 32457  000930  0E3C               	movlw	low _NewStringReceived
 32458  000932  0100               	movlb	0	; () banked
 32459  000934  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 32460  000936  0E00               	movlw	high _NewStringReceived
 32461  000938  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 32462  00093A  EC34  F034         	call	_ReceiveEvt	;wreg free
 32463  00093E  0900               	iorlw	0
 32464  000940  B4D8               	btfsc	status,2,c
 32465  000942  D018               	goto	l1273
 32466                           
 32467                           ;mdm_gsm_gprs_http.c: 420: {
 32468                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 32469  000944  CC58  FFE8         	movff	_RxBuffer,wreg
 32470  000948  0A2B               	xorlw	43
 32471  00094A  A4D8               	btfss	status,2,c
 32472  00094C  D0B7               	goto	l1255
 32473  00094E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 32474  000952  0A48               	xorlw	72
 32475  000954  A4D8               	btfss	status,2,c
 32476  000956  D0B2               	goto	l1255
 32477                           
 32478                           ;mdm_gsm_gprs_http.c: 423: {
 32479                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 32480  000958  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 32481                           
 32482                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 32483  00095C  0E58               	movlw	low _RxBuffer
 32484  00095E  0100               	movlb	0	; () banked
 32485  000960  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 32486  000962  0E0C               	movlw	high _RxBuffer
 32487  000964  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 32488  000966  0E01               	movlw	1
 32489  000968  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 32490  00096A  0E90               	movlw	144
 32491  00096C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 32492  00096E  EC56  F033         	call	_ClearBuffer	;wreg free
 32493                           
 32494                           ;mdm_gsm_gprs_http.c: 428: }
 32495                           ;mdm_gsm_gprs_http.c: 429: }
 32496  000972  D0A4               	goto	l1255
 32497  000974                     l1273:
 32498                           
 32499                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 32500  000974  0EF3               	movlw	low _ConnTimeout
 32501  000976  0100               	movlb	0	; () banked
 32502  000978  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 32503  00097A  0E02               	movlw	high _ConnTimeout
 32504  00097C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 32505  00097E  ECC6  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 32506  000982  D7CF               	goto	L69
 32507  000984                     
 32508                           ; BSR set to: 1
 32509                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 32510                           
 32511                           ; BSR set to: 1
 32512  000984  0E0C               	movlw	12
 32513  000986  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32514                           
 32515                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 32516  000988  0E05               	movlw	5
 32517  00098A  0100               	movlb	0	; () banked
 32518  00098C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32519                           
 32520                           ; BSR set to: 0
 32521                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 32522  00098E  0EDC               	movlw	low _ConnWait
 32523  000990  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32524  000992  0E03               	movlw	high _ConnWait
 32525  000994  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32526  000996  0EE8               	movlw	232
 32527  000998  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32528  00099A  0E03               	movlw	3
 32529  00099C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32530  00099E  0E00               	movlw	0
 32531  0009A0  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32532  0009A2  0E00               	movlw	0
 32533  0009A4  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32534  0009A6  EC1C  F02D         	call	_OsTmr_StartTimer	;wreg free
 32535  0009AA                     l16161:
 32536                           
 32537                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 32538  0009AA  0E01               	movlw	1
 32539  0009AC  0101               	movlb	1	; () banked
 32540  0009AE  D053               	goto	L71
 32541  0009B0                     
 32542                           ; BSR set to: 1
 32543                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 32544                           
 32545                           ; BSR set to: 1
 32546  0009B0  0EDC               	movlw	low _ConnWait
 32547  0009B2  0100               	movlb	0	; () banked
 32548  0009B4  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 32549  0009B6  0E03               	movlw	high _ConnWait
 32550  0009B8  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 32551  0009BA  ECC6  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 32552  0009BE  06E8               	decf	wreg,f,c
 32553  0009C0  A4D8               	btfss	status,2,c
 32554  0009C2  D07C               	goto	l1255
 32555                           
 32556                           ;mdm_gsm_gprs_http.c: 450: {
 32557                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 32558  0009C4  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 32559                           
 32560                           ;mdm_gsm_gprs_http.c: 453: }
 32561                           ;mdm_gsm_gprs_http.c: 454: break;
 32562  0009C8  D079               	goto	l1255
 32563  0009CA                     
 32564                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 32565  0009CA  0E3C               	movlw	low _NewStringReceived
 32566  0009CC  0100               	movlb	0	; () banked
 32567  0009CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 32568  0009D0  0E00               	movlw	high _NewStringReceived
 32569  0009D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 32570  0009D4  EC34  F034         	call	_ReceiveEvt	;wreg free
 32571  0009D8  0900               	iorlw	0
 32572  0009DA  B4D8               	btfsc	status,2,c
 32573  0009DC  D02D               	goto	l1281
 32574                           
 32575                           ;mdm_gsm_gprs_http.c: 459: {
 32576                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 32577  0009DE  CC58  FFE8         	movff	_RxBuffer,wreg
 32578  0009E2  0A2B               	xorlw	43
 32579  0009E4  A4D8               	btfss	status,2,c
 32580  0009E6  D06A               	goto	l1255
 32581  0009E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 32582  0009EC  0A48               	xorlw	72
 32583  0009EE  A4D8               	btfss	status,2,c
 32584  0009F0  D065               	goto	l1255
 32585                           
 32586                           ;mdm_gsm_gprs_http.c: 462: {
 32587                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 32588  0009F2  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 32589                           
 32590                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 32591  0009F6  0E58               	movlw	low _RxBuffer
 32592  0009F8  0100               	movlb	0	; () banked
 32593  0009FA  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 32594  0009FC  0E0C               	movlw	high _RxBuffer
 32595  0009FE  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 32596  000A00  EE20 F003          	lfsr	2,3
 32597  000A04  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 32598  000A06  26D9               	addwf	fsr2l,f,c
 32599  000A08  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 32600  000A0A  22DA               	addwfc	fsr2h,f,c
 32601  000A0C  CFDE F087          	movff	postinc2,StringCopy@DestStr
 32602  000A10  CFDD F088          	movff	postdec2,StringCopy@DestStr+1
 32603  000A14  0E01               	movlw	1
 32604  000A16  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 32605  000A18  0E90               	movlw	144
 32606  000A1A  6F89               	movwf	StringCopy@Len& (0+255),b
 32607  000A1C  ECBC  F02C         	call	_StringCopy	;wreg free
 32608                           
 32609                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 32610  000A20  0E58               	movlw	low _RxBuffer
 32611  000A22  0100               	movlb	0	; () banked
 32612  000A24  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 32613  000A26  0E0C               	movlw	high _RxBuffer
 32614  000A28  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 32615  000A2A  0E01               	movlw	1
 32616  000A2C  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 32617  000A2E  0E90               	movlw	144
 32618  000A30  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 32619  000A32  EC56  F033         	call	_ClearBuffer	;wreg free
 32620                           
 32621                           ;mdm_gsm_gprs_http.c: 469: }
 32622                           ;mdm_gsm_gprs_http.c: 470: }
 32623  000A36  D042               	goto	l1255
 32624  000A38                     l1281:
 32625                           
 32626                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 32627  000A38  0EF3               	movlw	low _ConnTimeout
 32628  000A3A  0100               	movlb	0	; () banked
 32629  000A3C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 32630  000A3E  0E02               	movlw	high _ConnTimeout
 32631  000A40  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 32632  000A42  ECC6  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 32633  000A46  D76D               	goto	L69
 32634  000A48                     
 32635                           ; BSR set to: 1
 32636                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 32637                           
 32638                           ; BSR set to: 1
 32639  000A48  0E00               	movlw	0
 32640  000A4A  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32641                           
 32642                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 32643  000A4C  0E02               	movlw	2
 32644  000A4E  D003               	goto	L71
 32645  000A50                     
 32646                           ; BSR set to: 1
 32647                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 32648                           
 32649                           ; BSR set to: 1
 32650  000A50  0E00               	movlw	0
 32651  000A52  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32652                           
 32653                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 32654  000A54  0E03               	movlw	3
 32655  000A56                     L71:
 32656  000A56  6FE5               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 32657                           
 32658                           ; BSR set to: 1
 32659                           ;mdm_gsm_gprs_http.c: 494: }
 32660                           
 32661                           ; BSR set to: 1
 32662                           ;mdm_gsm_gprs_http.c: 493: break;
 32663                           
 32664                           ;mdm_gsm_gprs_http.c: 492: default:
 32665                           
 32666                           ;mdm_gsm_gprs_http.c: 490: break;
 32667  000A58  D031               	goto	l1255
 32668  000A5A                     l1252:
 32669                           
 32670                           ; BSR set to: 1
 32671                           
 32672                           ; BSR set to: 1
 32673  000A5A  51E6               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 32674                           
 32675                           ; Switch size 1, requested type "space"
 32676                           ; Number of cases is 16, Range of values is 0 to 15
 32677                           ; switch strategies available:
 32678                           ; Name         Instructions Cycles
 32679                           ; simple_byte           49    25 (average)
 32680                           ;	Chosen strategy is simple_byte
 32681  000A5C  0A00               	xorlw	0	; case 0
 32682  000A5E  B4D8               	btfsc	status,2,c
 32683  000A60  D5CC               	goto	l1253
 32684  000A62  0A01               	xorlw	1	; case 1
 32685  000A64  B4D8               	btfsc	status,2,c
 32686  000A66  D5D5               	goto	l1256
 32687  000A68  0A03               	xorlw	3	; case 2
 32688  000A6A  B4D8               	btfsc	status,2,c
 32689  000A6C  D5EF               	goto	l1257
 32690  000A6E  0A01               	xorlw	1	; case 3
 32691  000A70  B4D8               	btfsc	status,2,c
 32692  000A72  D609               	goto	l1258
 32693  000A74  0A07               	xorlw	7	; case 4
 32694  000A76  B4D8               	btfsc	status,2,c
 32695  000A78  D623               	goto	l1259
 32696  000A7A  0A01               	xorlw	1	; case 5
 32697  000A7C  B4D8               	btfsc	status,2,c
 32698  000A7E  D6BC               	goto	l1263
 32699  000A80  0A03               	xorlw	3	; case 6
 32700  000A82  B4D8               	btfsc	status,2,c
 32701  000A84  D6D6               	goto	l1264
 32702  000A86  0A01               	xorlw	1	; case 7
 32703  000A88  B4D8               	btfsc	status,2,c
 32704  000A8A  D752               	goto	l1272
 32705  000A8C  0A0F               	xorlw	15	; case 8
 32706  000A8E  B4D8               	btfsc	status,2,c
 32707  000A90  D6E5               	goto	l1265
 32708  000A92  0A01               	xorlw	1	; case 9
 32709  000A94  B4D8               	btfsc	status,2,c
 32710  000A96  D6FF               	goto	l1266
 32711  000A98  0A03               	xorlw	3	; case 10
 32712  000A9A  B4D8               	btfsc	status,2,c
 32713  000A9C  D719               	goto	l1267
 32714  000A9E  0A01               	xorlw	1	; case 11
 32715  000AA0  B4D8               	btfsc	status,2,c
 32716  000AA2  D770               	goto	l1277
 32717  000AA4  0A07               	xorlw	7	; case 12
 32718  000AA6  B4D8               	btfsc	status,2,c
 32719  000AA8  D783               	goto	l1278
 32720  000AAA  0A01               	xorlw	1	; case 13
 32721  000AAC  B4D8               	btfsc	status,2,c
 32722  000AAE  D78D               	goto	l1280
 32723  000AB0  0A03               	xorlw	3	; case 14
 32724  000AB2  B4D8               	btfsc	status,2,c
 32725  000AB4  D7C9               	goto	l1285
 32726  000AB6  0A01               	xorlw	1	; case 15
 32727  000AB8  B4D8               	btfsc	status,2,c
 32728  000ABA  D7CA               	goto	l1286
 32729  000ABC                     l1255:
 32730                           
 32731                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 32732                           
 32733                           ; BSR set to: 1
 32734  000ABC  0101               	movlb	1	; () banked
 32735  000ABE  51E5               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 32736  000AC0  0012               	return	
 32737  000AC2                     __end_of_HttpGetMethod:
 32738                           	opt stack 0
 32739                           tosu	equ	0xFFF
 32740                           tosh	equ	0xFFE
 32741                           tosl	equ	0xFFD
 32742                           pclath	equ	0xFFA
 32743                           tblptru	equ	0xFF8
 32744                           tblptrh	equ	0xFF7
 32745                           tblptrl	equ	0xFF6
 32746                           tablat	equ	0xFF5
 32747                           prodh	equ	0xFF4
 32748                           prodl	equ	0xFF3
 32749                           intcon	equ	0xFF2
 32750                           intcon2	equ	0xFF1
 32751                           intcon3	equ	0xFF0
 32752                           indf0	equ	0xFEF
 32753                           postinc0	equ	0xFEE
 32754                           plusw0	equ	0xFEB
 32755                           fsr0h	equ	0xFEA
 32756                           fsr0l	equ	0xFE9
 32757                           wreg	equ	0xFE8
 32758                           indf1	equ	0xFE7
 32759                           postinc1	equ	0xFE6
 32760                           postdec1	equ	0xFE5
 32761                           plusw1	equ	0xFE3
 32762                           fsr1h	equ	0xFE2
 32763                           fsr1l	equ	0xFE1
 32764                           indf2	equ	0xFDF
 32765                           postinc2	equ	0xFDE
 32766                           postdec2	equ	0xFDD
 32767                           plusw2	equ	0xFDB
 32768                           fsr2h	equ	0xFDA
 32769                           fsr2l	equ	0xFD9
 32770                           status	equ	0xFD8
 32771                           
 32772 ;; *************** function _Uart_WriteString *****************
 32773 ;; Defined at:
 32774 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32775 ;; Parameters:    Size  Location     Type
 32776 ;;  Module          1    wreg     unsigned char 
 32777 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 32778 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 32779 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 32780 ;; Auto vars:     Size  Location     Type
 32781 ;;  Module          1   34[BANK0 ] unsigned char 
 32782 ;; Return value:  Size  Location     Type
 32783 ;;                  1    wreg      void 
 32784 ;; Registers used:
 32785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32786 ;; Tracked objects:
 32787 ;;		On entry : 0/0
 32788 ;;		On exit  : 0/0
 32789 ;;		Unchanged: 0/0
 32790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32791 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32794 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32795 ;;Total ram usage:        3 bytes
 32796 ;; Hardware stack levels used:    1
 32797 ;; Hardware stack levels required when called:   12
 32798 ;; This function calls:
 32799 ;;		_UartTxBufferStatus
 32800 ;;		_UartWriteByte
 32801 ;; This function is called by:
 32802 ;;		_Mdm_SetSmsFormat
 32803 ;;		_InitGprsNetwork
 32804 ;;		_HttpGetMethod
 32805 ;;		_Mdm_PinUnlock
 32806 ;;		_Mdm_MakePhoneCall
 32807 ;; This function uses a non-reentrant model
 32808 ;;
 32809                           
 32810                           	psect	text149
 32811  0064DA                     __ptext149:
 32812                           	opt stack 0
 32813  0064DA                     _Uart_WriteString:
 32814                           	opt stack 12
 32815                           
 32816                           ; BSR set to: 1
 32817                           ;incstack = 0
 32818                           ;Uart_WriteString@Module stored from wreg
 32819  0064DA  0100               	movlb	0	; () banked
 32820  0064DC  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 32821                           
 32822                           ;uart_drv.c: 521: while (*StringToWrite)
 32823  0064DE  D014               	goto	u12450
 32824  0064E0                     
 32825                           ;uart_drv.c: 522: {
 32826                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 32827  0064E0  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 32828  0064E4  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 32829  0064E8  50DF               	movf	indf2,w,c
 32830  0064EA  0100               	movlb	0	; () banked
 32831  0064EC  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 32832  0064EE  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 32833  0064F0  EC80  F035         	call	_UartWriteByte
 32834                           
 32835                           ;uart_drv.c: 526: StringToWrite++;
 32836  0064F4  0100               	movlb	0	; () banked
 32837  0064F6  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 32838  0064F8  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 32839  0064FA                     
 32840                           ; BSR set to: 0
 32841                           
 32842                           ; BSR set to: 0
 32843  0064FA  0100               	movlb	0	; () banked
 32844  0064FC  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 32845  0064FE  EC40  F030         	call	_UartTxBufferStatus
 32846  006502  06E8               	decf	wreg,f,c
 32847  006504  B4D8               	btfsc	status,2,c
 32848  006506  D7F9               	goto	l709
 32849  006508                     u12450:
 32850  006508  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 32851  00650C  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 32852  006510  50DF               	movf	indf2,w,c
 32853  006512  B4D8               	btfsc	status,2,c
 32854  006514  0012               	return	
 32855  006516  D7E4               	goto	l707
 32856  006518                     __end_of_Uart_WriteString:
 32857                           	opt stack 0
 32858                           tosu	equ	0xFFF
 32859                           tosh	equ	0xFFE
 32860                           tosl	equ	0xFFD
 32861                           pclath	equ	0xFFA
 32862                           tblptru	equ	0xFF8
 32863                           tblptrh	equ	0xFF7
 32864                           tblptrl	equ	0xFF6
 32865                           tablat	equ	0xFF5
 32866                           prodh	equ	0xFF4
 32867                           prodl	equ	0xFF3
 32868                           intcon	equ	0xFF2
 32869                           intcon2	equ	0xFF1
 32870                           intcon3	equ	0xFF0
 32871                           indf0	equ	0xFEF
 32872                           postinc0	equ	0xFEE
 32873                           plusw0	equ	0xFEB
 32874                           fsr0h	equ	0xFEA
 32875                           fsr0l	equ	0xFE9
 32876                           wreg	equ	0xFE8
 32877                           indf1	equ	0xFE7
 32878                           postinc1	equ	0xFE6
 32879                           postdec1	equ	0xFE5
 32880                           plusw1	equ	0xFE3
 32881                           fsr1h	equ	0xFE2
 32882                           fsr1l	equ	0xFE1
 32883                           indf2	equ	0xFDF
 32884                           postinc2	equ	0xFDE
 32885                           postdec2	equ	0xFDD
 32886                           plusw2	equ	0xFDB
 32887                           fsr2h	equ	0xFDA
 32888                           fsr2l	equ	0xFD9
 32889                           status	equ	0xFD8
 32890                           
 32891 ;; *************** function _Uart_WriteConstString *****************
 32892 ;; Defined at:
 32893 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32894 ;; Parameters:    Size  Location     Type
 32895 ;;  Module          1    wreg     unsigned char 
 32896 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 32897 ;;		 -> STR_31(12), STR_30(19), STR_29(14), STR_20(14), 
 32898 ;;		 -> STR_19(14), STR_18(13), STR_17(13), STR_16(17), 
 32899 ;;		 -> STR_14(21), STR_13(14), STR_12(13), STR_11(14), 
 32900 ;;		 -> STR_10(14), STR_8(31), STR_7(5), STR_6(5), 
 32901 ;;		 -> STR_4(12), STR_3(7), STR_2(14), STR_1(5), 
 32902 ;; Auto vars:     Size  Location     Type
 32903 ;;  Module          1   34[BANK0 ] unsigned char 
 32904 ;; Return value:  Size  Location     Type
 32905 ;;                  1    wreg      void 
 32906 ;; Registers used:
 32907 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32908 ;; Tracked objects:
 32909 ;;		On entry : 0/0
 32910 ;;		On exit  : 0/0
 32911 ;;		Unchanged: 0/0
 32912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32916 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32917 ;;Total ram usage:        3 bytes
 32918 ;; Hardware stack levels used:    1
 32919 ;; Hardware stack levels required when called:   12
 32920 ;; This function calls:
 32921 ;;		_UartTxBufferStatus
 32922 ;;		_UartWriteByte
 32923 ;; This function is called by:
 32924 ;;		_CheckModem
 32925 ;;		_ConfigureModem
 32926 ;;		_GetSmsSm
 32927 ;;		_Mdm_HangPhoneCall
 32928 ;;		_InitGprsNetwork
 32929 ;;		_HttpGetMethod
 32930 ;;		_detectCmd
 32931 ;;		_initGprsModem
 32932 ;;		_Mdm_GetPhoneCall
 32933 ;;		_MdmHttp_SetSsl
 32934 ;; This function uses a non-reentrant model
 32935 ;;
 32936                           
 32937                           	psect	text150
 32938  00639A                     __ptext150:
 32939                           	opt stack 0
 32940  00639A                     _Uart_WriteConstString:
 32941                           	opt stack 11
 32942                           
 32943                           ;incstack = 0
 32944                           ;Uart_WriteConstString@Module stored from wreg
 32945  00639A  0100               	movlb	0	; () banked
 32946  00639C  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 32947                           
 32948                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 32949  00639E  D015               	goto	u11890
 32950  0063A0                     
 32951                           ;uart_drv.c: 500: {
 32952                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 32953  0063A0  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 32954  0063A4  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 32955  0063A8                     	if	0	;tblptru may be non-zero
 32956  0063A8                     	endif
 32957  0063A8                     	if	0	;tblptru may be non-zero
 32958  0063A8                     	endif
 32959  0063A8  0008               	tblrd		*
 32960  0063AA  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 32961  0063AE  0100               	movlb	0	; () banked
 32962  0063B0  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 32963  0063B2  EC80  F035         	call	_UartWriteByte
 32964                           
 32965                           ;uart_drv.c: 504: ConstStringToWrite++;
 32966  0063B6  0100               	movlb	0	; () banked
 32967  0063B8  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 32968  0063BA  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 32969  0063BC                     
 32970                           ; BSR set to: 0
 32971                           
 32972                           ; BSR set to: 0
 32973  0063BC  0100               	movlb	0	; () banked
 32974  0063BE  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 32975  0063C0  EC40  F030         	call	_UartTxBufferStatus
 32976  0063C4  06E8               	decf	wreg,f,c
 32977  0063C6  B4D8               	btfsc	status,2,c
 32978  0063C8  D7F9               	goto	l700
 32979  0063CA                     u11890:
 32980  0063CA  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 32981  0063CE  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 32982  0063D2                     	if	0	;tblptru may be non-zero
 32983  0063D2                     	endif
 32984  0063D2                     	if	0	;tblptru may be non-zero
 32985  0063D2                     	endif
 32986  0063D2  0008               	tblrd		*
 32987  0063D4  50F5               	movf	tablat,w,c
 32988  0063D6  0900               	iorlw	0
 32989  0063D8  B4D8               	btfsc	status,2,c
 32990  0063DA  0012               	return	
 32991  0063DC  D7E1               	goto	l698
 32992  0063DE                     __end_of_Uart_WriteConstString:
 32993                           	opt stack 0
 32994                           tosu	equ	0xFFF
 32995                           tosh	equ	0xFFE
 32996                           tosl	equ	0xFFD
 32997                           pclath	equ	0xFFA
 32998                           tblptru	equ	0xFF8
 32999                           tblptrh	equ	0xFF7
 33000                           tblptrl	equ	0xFF6
 33001                           tablat	equ	0xFF5
 33002                           prodh	equ	0xFF4
 33003                           prodl	equ	0xFF3
 33004                           intcon	equ	0xFF2
 33005                           intcon2	equ	0xFF1
 33006                           intcon3	equ	0xFF0
 33007                           indf0	equ	0xFEF
 33008                           postinc0	equ	0xFEE
 33009                           plusw0	equ	0xFEB
 33010                           fsr0h	equ	0xFEA
 33011                           fsr0l	equ	0xFE9
 33012                           wreg	equ	0xFE8
 33013                           indf1	equ	0xFE7
 33014                           postinc1	equ	0xFE6
 33015                           postdec1	equ	0xFE5
 33016                           plusw1	equ	0xFE3
 33017                           fsr1h	equ	0xFE2
 33018                           fsr1l	equ	0xFE1
 33019                           indf2	equ	0xFDF
 33020                           postinc2	equ	0xFDE
 33021                           postdec2	equ	0xFDD
 33022                           plusw2	equ	0xFDB
 33023                           fsr2h	equ	0xFDA
 33024                           fsr2l	equ	0xFD9
 33025                           status	equ	0xFD8
 33026                           
 33027 ;; *************** function _UartWriteByte *****************
 33028 ;; Defined at:
 33029 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 33030 ;; Parameters:    Size  Location     Type
 33031 ;;  Module          1    wreg     unsigned char 
 33032 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 33033 ;; Auto vars:     Size  Location     Type
 33034 ;;  Module          1   30[BANK0 ] unsigned char 
 33035 ;; Return value:  Size  Location     Type
 33036 ;;                  1    wreg      void 
 33037 ;; Registers used:
 33038 ;;		wreg, status,2, status,0
 33039 ;; Tracked objects:
 33040 ;;		On entry : 0/0
 33041 ;;		On exit  : 0/0
 33042 ;;		Unchanged: 0/0
 33043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33044 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33045 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33047 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33048 ;;Total ram usage:        2 bytes
 33049 ;; Hardware stack levels used:    1
 33050 ;; Hardware stack levels required when called:   11
 33051 ;; This function calls:
 33052 ;;		Nothing
 33053 ;; This function is called by:
 33054 ;;		_Uart_WriteConstString
 33055 ;;		_Uart_WriteString
 33056 ;;		_Uart_WriteStringLen
 33057 ;; This function uses a non-reentrant model
 33058 ;;
 33059                           
 33060                           	psect	text151
 33061  006B00                     __ptext151:
 33062                           	opt stack 0
 33063  006B00                     _UartWriteByte:
 33064                           	opt stack 11
 33065                           
 33066                           ;incstack = 0
 33067                           ;UartWriteByte@Module stored from wreg
 33068  006B00  0100               	movlb	0	; () banked
 33069  006B02  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 33070                           
 33071                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 33072  006B04  0100               	movlb	0	; () banked
 33073  006B06  057E               	decf	UartWriteByte@Module& (0+255),w,b
 33074  006B08  A4D8               	btfss	status,2,c
 33075  006B0A  D003               	goto	l639
 33076                           
 33077                           ; BSR set to: 0
 33078                           ;uart_drv.c: 176: {
 33079                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 33080  006B0C  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 33081                           
 33082                           ;uart_drv.c: 179: }
 33083  006B10  0012               	return	
 33084  006B12                     l639:
 33085                           
 33086                           ; BSR set to: 0
 33087                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 33088                           
 33089                           ; BSR set to: 0
 33090  006B12  0E02               	movlw	2
 33091  006B14  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 33092  006B16  A4D8               	btfss	status,2,c
 33093  006B18  0012               	return	
 33094                           
 33095                           ; BSR set to: 0
 33096                           ;uart_drv.c: 181: {
 33097                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 33098  006B1A  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 33099                           
 33100                           ; BSR set to: 0
 33101  006B1E  0012               	return	
 33102  006B20                     __end_of_UartWriteByte:
 33103                           	opt stack 0
 33104                           tosu	equ	0xFFF
 33105                           tosh	equ	0xFFE
 33106                           tosl	equ	0xFFD
 33107                           pclath	equ	0xFFA
 33108                           tblptru	equ	0xFF8
 33109                           tblptrh	equ	0xFF7
 33110                           tblptrl	equ	0xFF6
 33111                           tablat	equ	0xFF5
 33112                           prodh	equ	0xFF4
 33113                           prodl	equ	0xFF3
 33114                           intcon	equ	0xFF2
 33115                           intcon2	equ	0xFF1
 33116                           intcon3	equ	0xFF0
 33117                           indf0	equ	0xFEF
 33118                           postinc0	equ	0xFEE
 33119                           plusw0	equ	0xFEB
 33120                           fsr0h	equ	0xFEA
 33121                           fsr0l	equ	0xFE9
 33122                           wreg	equ	0xFE8
 33123                           indf1	equ	0xFE7
 33124                           postinc1	equ	0xFE6
 33125                           postdec1	equ	0xFE5
 33126                           plusw1	equ	0xFE3
 33127                           fsr1h	equ	0xFE2
 33128                           fsr1l	equ	0xFE1
 33129                           indf2	equ	0xFDF
 33130                           postinc2	equ	0xFDE
 33131                           postdec2	equ	0xFDD
 33132                           plusw2	equ	0xFDB
 33133                           fsr2h	equ	0xFDA
 33134                           fsr2l	equ	0xFD9
 33135                           status	equ	0xFD8
 33136                           
 33137 ;; *************** function _UartTxBufferStatus *****************
 33138 ;; Defined at:
 33139 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 33140 ;; Parameters:    Size  Location     Type
 33141 ;;  Module          1    wreg     unsigned char 
 33142 ;; Auto vars:     Size  Location     Type
 33143 ;;  Module          1   30[BANK0 ] unsigned char 
 33144 ;;  TxBufferStat    1   31[BANK0 ] enum E9042
 33145 ;; Return value:  Size  Location     Type
 33146 ;;                  1    wreg      enum E9042
 33147 ;; Registers used:
 33148 ;;		wreg, status,2, status,0
 33149 ;; Tracked objects:
 33150 ;;		On entry : 0/0
 33151 ;;		On exit  : 0/0
 33152 ;;		Unchanged: 0/0
 33153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33155 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33156 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33157 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33158 ;;Total ram usage:        3 bytes
 33159 ;; Hardware stack levels used:    1
 33160 ;; Hardware stack levels required when called:   11
 33161 ;; This function calls:
 33162 ;;		Nothing
 33163 ;; This function is called by:
 33164 ;;		_Uart_WriteConstString
 33165 ;;		_Uart_WriteString
 33166 ;;		_Uart_WriteStringLen
 33167 ;; This function uses a non-reentrant model
 33168 ;;
 33169                           
 33170                           	psect	text152
 33171  006080                     __ptext152:
 33172                           	opt stack 0
 33173  006080                     _UartTxBufferStatus:
 33174                           	opt stack 11
 33175                           
 33176                           ; BSR set to: 0
 33177                           ;incstack = 0
 33178                           ;UartTxBufferStatus@Module stored from wreg
 33179  006080  0100               	movlb	0	; () banked
 33180  006082  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 33181                           
 33182                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 33183  006084  0E00               	movlw	0
 33184  006086  0100               	movlb	0	; () banked
 33185  006088  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 33186                           
 33187                           ; BSR set to: 0
 33188                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 33189  00608A  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 33190  00608C  A4D8               	btfss	status,2,c
 33191  00608E  D00B               	goto	l651
 33192                           
 33193                           ; BSR set to: 0
 33194                           ;uart_drv.c: 228: {
 33195                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 33196  006090  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 33197  006094  90D8               	bcf	status,0,c
 33198  006096  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 33199  006098  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 33200  00609A  D002               	goto	l652
 33201  00609C                     u11730:
 33202                           
 33203                           ; BSR set to: 0
 33204                           ;uart_drv.c: 231: {
 33205                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 33206  00609C  0E01               	movlw	1
 33207  00609E  D014               	goto	L74
 33208  0060A0                     l652:
 33209                           
 33210                           ; BSR set to: 0
 33211                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 33212                           
 33213                           ; BSR set to: 0
 33214  0060A0  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 33215  0060A4  D00C               	goto	L104
 33216  0060A6                     l651:
 33217                           
 33218                           ; BSR set to: 0
 33219                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 33220                           
 33221                           ; BSR set to: 0
 33222  0060A6  0E02               	movlw	2
 33223  0060A8  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 33224  0060AA  A4D8               	btfss	status,2,c
 33225  0060AC  D00E               	goto	l660
 33226                           
 33227                           ; BSR set to: 0
 33228                           ;uart_drv.c: 244: {
 33229                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 33230  0060AE  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 33231  0060B2  90D8               	bcf	status,0,c
 33232  0060B4  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 33233  0060B6  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 33234  0060B8  D7F1               	goto	u11730
 33235                           
 33236                           ; BSR set to: 0
 33237                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 33238                           
 33239                           ; BSR set to: 0
 33240                           
 33241                           ;uart_drv.c: 249: }
 33242                           
 33243                           ; BSR set to: 0
 33244                           ;uart_drv.c: 247: {
 33245                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 33246  0060BA  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 33247  0060BE                     L104:
 33248  0060BE  90D8               	bcf	status,0,c
 33249  0060C0  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 33250  0060C2  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 33251  0060C4  D002               	goto	l660
 33252                           
 33253                           ; BSR set to: 0
 33254                           ;uart_drv.c: 251: {
 33255                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 33256  0060C6  0E02               	movlw	2
 33257  0060C8                     L74:
 33258  0060C8  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 33259  0060CA                     l660:
 33260                           
 33261                           ; BSR set to: 0
 33262                           ;uart_drv.c: 257: }
 33263                           ;uart_drv.c: 258: }
 33264                           ;uart_drv.c: 260: return TxBufferStatus;
 33265                           
 33266                           ; BSR set to: 0
 33267                           
 33268                           ; BSR set to: 0
 33269                           
 33270                           ; BSR set to: 0
 33271                           
 33272                           ; BSR set to: 0
 33273                           
 33274                           ;uart_drv.c: 254: else
 33275                           ;uart_drv.c: 255: {
 33276                           
 33277                           ; BSR set to: 0
 33278  0060CA  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 33279  0060CC  0012               	return	
 33280  0060CE                     __end_of_UartTxBufferStatus:
 33281                           	opt stack 0
 33282                           tosu	equ	0xFFF
 33283                           tosh	equ	0xFFE
 33284                           tosl	equ	0xFFD
 33285                           pclath	equ	0xFFA
 33286                           tblptru	equ	0xFF8
 33287                           tblptrh	equ	0xFF7
 33288                           tblptrl	equ	0xFF6
 33289                           tablat	equ	0xFF5
 33290                           prodh	equ	0xFF4
 33291                           prodl	equ	0xFF3
 33292                           intcon	equ	0xFF2
 33293                           intcon2	equ	0xFF1
 33294                           intcon3	equ	0xFF0
 33295                           indf0	equ	0xFEF
 33296                           postinc0	equ	0xFEE
 33297                           plusw0	equ	0xFEB
 33298                           fsr0h	equ	0xFEA
 33299                           fsr0l	equ	0xFE9
 33300                           wreg	equ	0xFE8
 33301                           indf1	equ	0xFE7
 33302                           postinc1	equ	0xFE6
 33303                           postdec1	equ	0xFE5
 33304                           plusw1	equ	0xFE3
 33305                           fsr1h	equ	0xFE2
 33306                           fsr1l	equ	0xFE1
 33307                           indf2	equ	0xFDF
 33308                           postinc2	equ	0xFDE
 33309                           postdec2	equ	0xFDD
 33310                           plusw2	equ	0xFDB
 33311                           fsr2h	equ	0xFDA
 33312                           fsr2l	equ	0xFD9
 33313                           status	equ	0xFD8
 33314                           
 33315 ;; *************** function _StringCopy *****************
 33316 ;; Defined at:
 33317 ;;		line 133 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 33318 ;; Parameters:    Size  Location     Type
 33319 ;;  SourceStr       2   37[BANK0 ] PTR unsigned char 
 33320 ;;		 -> memoryPreamble(4), emptyNumber(13), smsText(20), UsbMasterPhoneNumber(15), 
 33321 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 33322 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), 
 33323 ;;		 -> RxBuffer(400), 
 33324 ;;  DestStr         2   39[BANK0 ] PTR unsigned char 
 33325 ;;		 -> receivedNumber(13), smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), 
 33326 ;;		 -> InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), 
 33327 ;;		 -> Mdm_SmsRx(102), callerNumber(13), 
 33328 ;;  Len             2   41[BANK0 ] unsigned short 
 33329 ;; Auto vars:     Size  Location     Type
 33330 ;;  Index           2   45[BANK0 ] unsigned short 
 33331 ;; Return value:  Size  Location     Type
 33332 ;;                  1    wreg      void 
 33333 ;; Registers used:
 33334 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 33335 ;; Tracked objects:
 33336 ;;		On entry : 0/0
 33337 ;;		On exit  : 0/0
 33338 ;;		Unchanged: 0/0
 33339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33340 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33341 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33342 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33343 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33344 ;;Total ram usage:       10 bytes
 33345 ;; Hardware stack levels used:    1
 33346 ;; Hardware stack levels required when called:   11
 33347 ;; This function calls:
 33348 ;;		Nothing
 33349 ;; This function is called by:
 33350 ;;		_ModemEvtParser
 33351 ;;		_GetSmsSm
 33352 ;;		_SendSmsSm
 33353 ;;		_Mdm_GetSmsData
 33354 ;;		_InitGprsNetwork
 33355 ;;		_HttpGetMethod
 33356 ;;		_Eeprom_Write
 33357 ;;		_detectCmd
 33358 ;;		_Mdm_SendSmsData
 33359 ;; This function uses a non-reentrant model
 33360 ;;
 33361                           
 33362                           	psect	text153
 33363  005978                     __ptext153:
 33364                           	opt stack 0
 33365  005978                     _StringCopy:
 33366                           	opt stack 13
 33367                           
 33368                           ;sf.c: 135: UINT16 Index = 0;
 33369                           
 33370                           ; BSR set to: 0
 33371                           ;incstack = 0
 33372  005978  0E00               	movlw	0
 33373  00597A  0100               	movlb	0	; () banked
 33374  00597C  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 33375  00597E  0E00               	movlw	0
 33376  005980  6F8D               	movwf	StringCopy@Index& (0+255),b
 33377                           
 33378                           ;sf.c: 138: for (Index = 0; Index < Len; Index++)
 33379  005982  0E00               	movlw	0
 33380  005984  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 33381  005986  0E00               	movlw	0
 33382  005988  6F8D               	movwf	StringCopy@Index& (0+255),b
 33383  00598A  D020               	goto	l2263
 33384  00598C                     
 33385                           ; BSR set to: 0
 33386                           ;sf.c: 139: {
 33387                           ;sf.c: 140: DestStr[Index] = SourceStr[Index];
 33388                           
 33389                           ; BSR set to: 0
 33390  00598C  518D               	movf	StringCopy@Index& (0+255),w,b
 33391  00598E  2585               	addwf	StringCopy@SourceStr& (0+255),w,b
 33392  005990  6F8B               	movwf	??_StringCopy& (0+255),b
 33393  005992  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 33394  005994  2186               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 33395  005996  6F8C               	movwf	(??_StringCopy+1)& (0+255),b
 33396  005998  C08B  FFF6         	movff	??_StringCopy,tblptrl
 33397  00599C  C08C  FFF7         	movff	??_StringCopy+1,tblptrh
 33398  0059A0  6AF8               	clrf	tblptru,c
 33399  0059A2  518D               	movf	StringCopy@Index& (0+255),w,b
 33400  0059A4  2587               	addwf	StringCopy@DestStr& (0+255),w,b
 33401  0059A6  6ED9               	movwf	fsr2l,c
 33402  0059A8  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 33403  0059AA  2188               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 33404  0059AC  6EDA               	movwf	fsr2h,c
 33405  0059AE  0E0E               	movlw	(high __ramtop+-1)
 33406  0059B0  64F7               	cpfsgt	tblptrh,c
 33407  0059B2  D003               	bra	u11927
 33408  0059B4  0008               	tblrd		*
 33409  0059B6  50F5               	movf	tablat,w,c
 33410  0059B8  D005               	bra	u11920
 33411  0059BA                     u11927:
 33412  0059BA  CFF6 FFE9          	movff	tblptrl,fsr0l
 33413  0059BE  CFF7 FFEA          	movff	tblptrh,fsr0h
 33414  0059C2  50EF               	movf	indf0,w,c
 33415  0059C4                     u11920:
 33416  0059C4  6EDF               	movwf	indf2,c
 33417  0059C6  0100               	movlb	0	; () banked
 33418  0059C8  4B8D               	infsnz	StringCopy@Index& (0+255),f,b
 33419  0059CA  2B8E               	incf	(StringCopy@Index+1)& (0+255),f,b
 33420  0059CC                     l2263:
 33421                           
 33422                           ; BSR set to: 0
 33423                           
 33424                           ; BSR set to: 0
 33425  0059CC  5189               	movf	StringCopy@Len& (0+255),w,b
 33426  0059CE  5D8D               	subwf	StringCopy@Index& (0+255),w,b
 33427  0059D0  518A               	movf	(StringCopy@Len+1)& (0+255),w,b
 33428  0059D2  598E               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 33429  0059D4  B0D8               	btfsc	status,0,c
 33430  0059D6  0012               	return	
 33431  0059D8  D7D9               	goto	l2264
 33432  0059DA                     __end_of_StringCopy:
 33433                           	opt stack 0
 33434                           tosu	equ	0xFFF
 33435                           tosh	equ	0xFFE
 33436                           tosl	equ	0xFFD
 33437                           pclath	equ	0xFFA
 33438                           tblptru	equ	0xFF8
 33439                           tblptrh	equ	0xFF7
 33440                           tblptrl	equ	0xFF6
 33441                           tablat	equ	0xFF5
 33442                           prodh	equ	0xFF4
 33443                           prodl	equ	0xFF3
 33444                           intcon	equ	0xFF2
 33445                           intcon2	equ	0xFF1
 33446                           intcon3	equ	0xFF0
 33447                           indf0	equ	0xFEF
 33448                           postinc0	equ	0xFEE
 33449                           plusw0	equ	0xFEB
 33450                           fsr0h	equ	0xFEA
 33451                           fsr0l	equ	0xFE9
 33452                           wreg	equ	0xFE8
 33453                           indf1	equ	0xFE7
 33454                           postinc1	equ	0xFE6
 33455                           postdec1	equ	0xFE5
 33456                           plusw1	equ	0xFE3
 33457                           fsr1h	equ	0xFE2
 33458                           fsr1l	equ	0xFE1
 33459                           indf2	equ	0xFDF
 33460                           postinc2	equ	0xFDE
 33461                           postdec2	equ	0xFDD
 33462                           plusw2	equ	0xFDB
 33463                           fsr2h	equ	0xFDA
 33464                           fsr2l	equ	0xFD9
 33465                           status	equ	0xFD8
 33466                           
 33467 ;; *************** function _OsTmr_StartTimer *****************
 33468 ;; Defined at:
 33469 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33470 ;; Parameters:    Size  Location     Type
 33471 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 33472 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 33473 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 33474 ;;  Timeout         4   35[BANK0 ] unsigned long 
 33475 ;; Auto vars:     Size  Location     Type
 33476 ;;		None
 33477 ;; Return value:  Size  Location     Type
 33478 ;;                  1    wreg      void 
 33479 ;; Registers used:
 33480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33481 ;; Tracked objects:
 33482 ;;		On entry : 0/0
 33483 ;;		On exit  : 0/0
 33484 ;;		Unchanged: 0/0
 33485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33486 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33489 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33490 ;;Total ram usage:        6 bytes
 33491 ;; Hardware stack levels used:    1
 33492 ;; Hardware stack levels required when called:   12
 33493 ;; This function calls:
 33494 ;;		_GetOsTickCounter
 33495 ;; This function is called by:
 33496 ;;		_OsTmr_Wait
 33497 ;;		_CheckModem
 33498 ;;		_SendSmsSm
 33499 ;;		_InitGprsNetwork
 33500 ;;		_HttpGetMethod
 33501 ;;		_I2cSlv_QueryI2cData
 33502 ;;		_Term_MainSm
 33503 ;; This function uses a non-reentrant model
 33504 ;;
 33505                           
 33506                           	psect	text154
 33507  005A38                     __ptext154:
 33508                           	opt stack 0
 33509  005A38                     _OsTmr_StartTimer:
 33510                           	opt stack 12
 33511                           
 33512                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 33513                           
 33514                           ; BSR set to: 0
 33515                           ;incstack = 0
 33516  005A38  0100               	movlb	0	; () banked
 33517  005A3A  EE20 F001          	lfsr	2,1
 33518  005A3E  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 33519  005A40  26D9               	addwf	fsr2l,f,c
 33520  005A42  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 33521  005A44  22DA               	addwfc	fsr2h,f,c
 33522  005A46  0E00               	movlw	0
 33523  005A48  6EDF               	movwf	indf2,c
 33524                           
 33525                           ; BSR set to: 0
 33526                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 33527  005A4A  EC79  F036         	call	_GetOsTickCounter	;wreg free
 33528  005A4E  0100               	movlb	0	; () banked
 33529  005A50  EE20 F002          	lfsr	2,2
 33530  005A54  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 33531  005A56  26D9               	addwf	fsr2l,f,c
 33532  005A58  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 33533  005A5A  22DA               	addwfc	fsr2h,f,c
 33534  005A5C  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 33535  005A60  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 33536  005A64  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 33537  005A68  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 33538                           
 33539                           ; BSR set to: 0
 33540                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 33541  005A6C  EE20 F006          	lfsr	2,6
 33542  005A70  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 33543  005A72  26D9               	addwf	fsr2l,f,c
 33544  005A74  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 33545  005A76  22DA               	addwfc	fsr2h,f,c
 33546  005A78  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 33547  005A7C  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 33548  005A80  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 33549  005A84  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 33550                           
 33551                           ; BSR set to: 0
 33552                           ;os_timers.c: 127: Timer->Enabled = 1u;
 33553  005A88  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 33554  005A8C  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 33555  005A90  0E01               	movlw	1
 33556  005A92  6EDF               	movwf	indf2,c
 33557                           
 33558                           ; BSR set to: 0
 33559  005A94  0012               	return		;funcret
 33560  005A96                     __end_of_OsTmr_StartTimer:
 33561                           	opt stack 0
 33562                           tosu	equ	0xFFF
 33563                           tosh	equ	0xFFE
 33564                           tosl	equ	0xFFD
 33565                           pclath	equ	0xFFA
 33566                           tblptru	equ	0xFF8
 33567                           tblptrh	equ	0xFF7
 33568                           tblptrl	equ	0xFF6
 33569                           tablat	equ	0xFF5
 33570                           prodh	equ	0xFF4
 33571                           prodl	equ	0xFF3
 33572                           intcon	equ	0xFF2
 33573                           intcon2	equ	0xFF1
 33574                           intcon3	equ	0xFF0
 33575                           indf0	equ	0xFEF
 33576                           postinc0	equ	0xFEE
 33577                           plusw0	equ	0xFEB
 33578                           fsr0h	equ	0xFEA
 33579                           fsr0l	equ	0xFE9
 33580                           wreg	equ	0xFE8
 33581                           indf1	equ	0xFE7
 33582                           postinc1	equ	0xFE6
 33583                           postdec1	equ	0xFE5
 33584                           plusw1	equ	0xFE3
 33585                           fsr1h	equ	0xFE2
 33586                           fsr1l	equ	0xFE1
 33587                           indf2	equ	0xFDF
 33588                           postinc2	equ	0xFDE
 33589                           postdec2	equ	0xFDD
 33590                           plusw2	equ	0xFDB
 33591                           fsr2h	equ	0xFDA
 33592                           fsr2l	equ	0xFD9
 33593                           status	equ	0xFD8
 33594                           
 33595 ;; *************** function _OsTmr_GetTimerStatus *****************
 33596 ;; Defined at:
 33597 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33598 ;; Parameters:    Size  Location     Type
 33599 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 33600 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 33601 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 33602 ;; Auto vars:     Size  Location     Type
 33603 ;;		None
 33604 ;; Return value:  Size  Location     Type
 33605 ;;                  1    wreg      enum E7740
 33606 ;; Registers used:
 33607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33608 ;; Tracked objects:
 33609 ;;		On entry : 0/0
 33610 ;;		On exit  : 0/0
 33611 ;;		Unchanged: 0/0
 33612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33613 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33615 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33616 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33617 ;;Total ram usage:        6 bytes
 33618 ;; Hardware stack levels used:    1
 33619 ;; Hardware stack levels required when called:   13
 33620 ;; This function calls:
 33621 ;;		_GetElapsedTime
 33622 ;; This function is called by:
 33623 ;;		_OsTmr_Wait
 33624 ;;		_CheckModem
 33625 ;;		_SendSmsSm
 33626 ;;		_InitGprsNetwork
 33627 ;;		_HttpGetMethod
 33628 ;;		_I2cSlv_QueryI2cData
 33629 ;;		_Term_MainSm
 33630 ;; This function uses a non-reentrant model
 33631 ;;
 33632                           
 33633                           	psect	text155
 33634  00518C                     __ptext155:
 33635                           	opt stack 0
 33636  00518C                     _OsTmr_GetTimerStatus:
 33637                           	opt stack 11
 33638                           
 33639                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 33640                           
 33641                           ; BSR set to: 0
 33642                           ;incstack = 0
 33643  00518C  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 33644  005190  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 33645  005194  04DE               	decf	postinc2,w,c
 33646  005196  A4D8               	btfss	status,2,c
 33647  005198  D030               	goto	l864
 33648                           
 33649                           ;os_timers.c: 197: {
 33650                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 33651  00519A  0100               	movlb	0	; () banked
 33652  00519C  EE20 F006          	lfsr	2,6
 33653  0051A0  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33654  0051A2  26D9               	addwf	fsr2l,f,c
 33655  0051A4  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33656  0051A6  22DA               	addwfc	fsr2h,f,c
 33657  0051A8  EE10 F002          	lfsr	1,2
 33658  0051AC  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33659  0051AE  26E1               	addwf	fsr1l,f,c
 33660  0051B0  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33661  0051B2  22E2               	addwfc	fsr1h,f,c
 33662  0051B4  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 33663  0051B8  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 33664  0051BC  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 33665  0051C0  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 33666  0051C4  EC2A  F020         	call	_GetElapsedTime	;wreg free
 33667  0051C8  50DE               	movf	postinc2,w,c
 33668  0051CA  0100               	movlb	0	; () banked
 33669  0051CC  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 33670  0051CE  50DE               	movf	postinc2,w,c
 33671  0051D0  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 33672  0051D2  50DE               	movf	postinc2,w,c
 33673  0051D4  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 33674  0051D6  50DE               	movf	postinc2,w,c
 33675  0051D8  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 33676  0051DA  A0D8               	btfss	status,0,c
 33677  0051DC  D017               	goto	l867
 33678                           
 33679                           ; BSR set to: 0
 33680                           ;os_timers.c: 200: {
 33681                           ;os_timers.c: 202: Timer->Enabled = 0u;
 33682  0051DE  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 33683  0051E2  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 33684  0051E6  0E00               	movlw	0
 33685  0051E8  6EDF               	movwf	indf2,c
 33686                           
 33687                           ; BSR set to: 0
 33688                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 33689  0051EA  EE20 F001          	lfsr	2,1
 33690  0051EE  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33691  0051F0  26D9               	addwf	fsr2l,f,c
 33692  0051F2  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33693  0051F4  22DA               	addwfc	fsr2h,f,c
 33694  0051F6  0E01               	movlw	1
 33695  0051F8  D008               	goto	L105
 33696  0051FA                     l864:
 33697                           
 33698                           ;os_timers.c: 211: else
 33699                           ;os_timers.c: 212: {
 33700                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 33701                           
 33702                           ; BSR set to: 0
 33703  0051FA  0100               	movlb	0	; () banked
 33704  0051FC  EE20 F001          	lfsr	2,1
 33705  005200  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33706  005202  26D9               	addwf	fsr2l,f,c
 33707  005204  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33708  005206  22DA               	addwfc	fsr2h,f,c
 33709  005208  0E02               	movlw	2
 33710  00520A                     L105:
 33711  00520A  6EDF               	movwf	indf2,c
 33712  00520C                     l867:
 33713                           
 33714                           ; BSR set to: 0
 33715                           ;os_timers.c: 215: }
 33716                           ;os_timers.c: 218: return Timer->Status;
 33717  00520C  EE20 F001          	lfsr	2,1
 33718  005210  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33719  005212  26D9               	addwf	fsr2l,f,c
 33720  005214  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33721  005216  22DA               	addwfc	fsr2h,f,c
 33722  005218  50DF               	movf	indf2,w,c
 33723  00521A  0012               	return	
 33724  00521C                     __end_of_OsTmr_GetTimerStatus:
 33725                           	opt stack 0
 33726                           tosu	equ	0xFFF
 33727                           tosh	equ	0xFFE
 33728                           tosl	equ	0xFFD
 33729                           pclath	equ	0xFFA
 33730                           tblptru	equ	0xFF8
 33731                           tblptrh	equ	0xFF7
 33732                           tblptrl	equ	0xFF6
 33733                           tablat	equ	0xFF5
 33734                           prodh	equ	0xFF4
 33735                           prodl	equ	0xFF3
 33736                           intcon	equ	0xFF2
 33737                           intcon2	equ	0xFF1
 33738                           intcon3	equ	0xFF0
 33739                           indf0	equ	0xFEF
 33740                           postinc0	equ	0xFEE
 33741                           plusw0	equ	0xFEB
 33742                           fsr0h	equ	0xFEA
 33743                           fsr0l	equ	0xFE9
 33744                           wreg	equ	0xFE8
 33745                           indf1	equ	0xFE7
 33746                           postinc1	equ	0xFE6
 33747                           postdec1	equ	0xFE5
 33748                           plusw1	equ	0xFE3
 33749                           fsr1h	equ	0xFE2
 33750                           fsr1l	equ	0xFE1
 33751                           indf2	equ	0xFDF
 33752                           postinc2	equ	0xFDE
 33753                           postdec2	equ	0xFDD
 33754                           plusw2	equ	0xFDB
 33755                           fsr2h	equ	0xFDA
 33756                           fsr2l	equ	0xFD9
 33757                           status	equ	0xFD8
 33758                           
 33759 ;; *************** function _GetElapsedTime *****************
 33760 ;; Defined at:
 33761 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33762 ;; Parameters:    Size  Location     Type
 33763 ;;  StartTime       4   33[BANK0 ] unsigned long 
 33764 ;; Auto vars:     Size  Location     Type
 33765 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 33766 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 33767 ;; Return value:  Size  Location     Type
 33768 ;;                  4   33[BANK0 ] unsigned long 
 33769 ;; Registers used:
 33770 ;;		wreg, status,2, status,0, cstack
 33771 ;; Tracked objects:
 33772 ;;		On entry : 0/0
 33773 ;;		On exit  : 0/0
 33774 ;;		Unchanged: 0/0
 33775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33776 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33777 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33778 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33779 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33780 ;;Total ram usage:       20 bytes
 33781 ;; Hardware stack levels used:    1
 33782 ;; Hardware stack levels required when called:   12
 33783 ;; This function calls:
 33784 ;;		_GetOsTickCounter
 33785 ;; This function is called by:
 33786 ;;		_OsTmr_GetTimerStatus
 33787 ;;		_OsTmr_GetRemainingTime
 33788 ;; This function uses a non-reentrant model
 33789 ;;
 33790                           
 33791                           	psect	text156
 33792  004054                     __ptext156:
 33793                           	opt stack 0
 33794  004054                     _GetElapsedTime:
 33795                           	opt stack 11
 33796                           
 33797                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 33798                           ;os_timers.c: 87: UINT32 TimeValue;
 33799                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 33800                           
 33801                           ; BSR set to: 0
 33802                           ;incstack = 0
 33803  004054  EC79  F036         	call	_GetOsTickCounter	;wreg free
 33804  004058  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 33805  00405C  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 33806  004060  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 33807  004064  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 33808                           
 33809                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 33810  004068  0100               	movlb	0	; () banked
 33811  00406A  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 33812  00406C  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 33813  00406E  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 33814  004070  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 33815  004072  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 33816  004074  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 33817  004076  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 33818  004078  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 33819  00407A  A0D8               	btfss	status,0,c
 33820  00407C  D01D               	goto	l844
 33821                           
 33822                           ; BSR set to: 0
 33823                           ;os_timers.c: 94: {
 33824                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 33825  00407E  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 33826  004082  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 33827  004086  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 33828  00408A  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 33829  00408E  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 33830  004090  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 33831  004092  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 33832  004094  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 33833  004096  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 33834  004098  0E00               	movlw	0
 33835  00409A  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 33836  00409C  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 33837  00409E  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 33838  0040A0  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 33839  0040A2  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 33840  0040A4  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 33841  0040A6  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 33842  0040A8  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 33843  0040AA  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 33844  0040AC  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 33845  0040AE  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 33846  0040B0  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 33847  0040B2  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 33848  0040B4  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 33849  0040B6  D028               	goto	L75
 33850  0040B8                     l844:
 33851                           
 33852                           ; BSR set to: 0
 33853                           ;os_timers.c: 97: else
 33854                           ;os_timers.c: 98: {
 33855                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 33856                           
 33857                           ; BSR set to: 0
 33858  0040B8  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 33859  0040BC  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 33860  0040C0  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 33861  0040C4  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 33862  0040C8  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 33863  0040CA  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 33864  0040CC  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 33865  0040CE  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 33866  0040D0  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 33867  0040D2  0E00               	movlw	0
 33868  0040D4  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 33869  0040D6  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 33870  0040D8  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 33871  0040DA  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 33872  0040DC  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 33873  0040DE  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 33874  0040E0  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 33875  0040E2  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 33876  0040E4  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 33877  0040E6  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 33878  0040E8  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 33879  0040EA  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 33880  0040EC  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 33881  0040EE  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 33882  0040F0  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 33883  0040F2  0EFF               	movlw	255
 33884  0040F4  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 33885  0040F6  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 33886  0040F8  0EFF               	movlw	255
 33887  0040FA  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 33888  0040FC  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 33889  0040FE  0EFF               	movlw	255
 33890  004100  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 33891  004102  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 33892  004104  0EFF               	movlw	255
 33893  004106  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 33894  004108                     L75:
 33895  004108  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 33896                           
 33897                           ; BSR set to: 0
 33898                           ;os_timers.c: 100: }
 33899                           ;os_timers.c: 102: return TimeValue;
 33900                           
 33901                           ; BSR set to: 0
 33902  00410A  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 33903  00410E  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 33904  004112  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 33905  004116  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 33906  00411A  0012               	return	
 33907  00411C                     __end_of_GetElapsedTime:
 33908                           	opt stack 0
 33909                           tosu	equ	0xFFF
 33910                           tosh	equ	0xFFE
 33911                           tosl	equ	0xFFD
 33912                           pclath	equ	0xFFA
 33913                           tblptru	equ	0xFF8
 33914                           tblptrh	equ	0xFF7
 33915                           tblptrl	equ	0xFF6
 33916                           tablat	equ	0xFF5
 33917                           prodh	equ	0xFF4
 33918                           prodl	equ	0xFF3
 33919                           intcon	equ	0xFF2
 33920                           intcon2	equ	0xFF1
 33921                           intcon3	equ	0xFF0
 33922                           indf0	equ	0xFEF
 33923                           postinc0	equ	0xFEE
 33924                           plusw0	equ	0xFEB
 33925                           fsr0h	equ	0xFEA
 33926                           fsr0l	equ	0xFE9
 33927                           wreg	equ	0xFE8
 33928                           indf1	equ	0xFE7
 33929                           postinc1	equ	0xFE6
 33930                           postdec1	equ	0xFE5
 33931                           plusw1	equ	0xFE3
 33932                           fsr1h	equ	0xFE2
 33933                           fsr1l	equ	0xFE1
 33934                           indf2	equ	0xFDF
 33935                           postinc2	equ	0xFDE
 33936                           postdec2	equ	0xFDD
 33937                           plusw2	equ	0xFDB
 33938                           fsr2h	equ	0xFDA
 33939                           fsr2l	equ	0xFD9
 33940                           status	equ	0xFD8
 33941                           
 33942 ;; *************** function _GetOsTickCounter *****************
 33943 ;; Defined at:
 33944 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33945 ;; Parameters:    Size  Location     Type
 33946 ;;		None
 33947 ;; Auto vars:     Size  Location     Type
 33948 ;;		None
 33949 ;; Return value:  Size  Location     Type
 33950 ;;                  4   29[BANK0 ] unsigned long 
 33951 ;; Registers used:
 33952 ;;		None
 33953 ;; Tracked objects:
 33954 ;;		On entry : 0/0
 33955 ;;		On exit  : 0/0
 33956 ;;		Unchanged: 0/0
 33957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33958 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33961 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33962 ;;Total ram usage:        4 bytes
 33963 ;; Hardware stack levels used:    1
 33964 ;; Hardware stack levels required when called:   11
 33965 ;; This function calls:
 33966 ;;		Nothing
 33967 ;; This function is called by:
 33968 ;;		_GetElapsedTime
 33969 ;;		_OsTmr_StartTimer
 33970 ;;		_OsTmr_GetElapsedTime
 33971 ;; This function uses a non-reentrant model
 33972 ;;
 33973                           
 33974                           	psect	text157
 33975  006CF2                     __ptext157:
 33976                           	opt stack 0
 33977  006CF2                     _GetOsTickCounter:
 33978                           	opt stack 12
 33979                           
 33980                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 33981                           
 33982                           ; BSR set to: 0
 33983                           ;incstack = 0
 33984  006CF2  C314  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 33985  006CF6  C315  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 33986  006CFA  C316  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 33987  006CFE  C317  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 33988  006D02  0012               	return		;funcret
 33989  006D04                     __end_of_GetOsTickCounter:
 33990                           	opt stack 0
 33991                           tosu	equ	0xFFF
 33992                           tosh	equ	0xFFE
 33993                           tosl	equ	0xFFD
 33994                           pclath	equ	0xFFA
 33995                           tblptru	equ	0xFF8
 33996                           tblptrh	equ	0xFF7
 33997                           tblptrl	equ	0xFF6
 33998                           tablat	equ	0xFF5
 33999                           prodh	equ	0xFF4
 34000                           prodl	equ	0xFF3
 34001                           intcon	equ	0xFF2
 34002                           intcon2	equ	0xFF1
 34003                           intcon3	equ	0xFF0
 34004                           indf0	equ	0xFEF
 34005                           postinc0	equ	0xFEE
 34006                           plusw0	equ	0xFEB
 34007                           fsr0h	equ	0xFEA
 34008                           fsr0l	equ	0xFE9
 34009                           wreg	equ	0xFE8
 34010                           indf1	equ	0xFE7
 34011                           postinc1	equ	0xFE6
 34012                           postdec1	equ	0xFE5
 34013                           plusw1	equ	0xFE3
 34014                           fsr1h	equ	0xFE2
 34015                           fsr1l	equ	0xFE1
 34016                           indf2	equ	0xFDF
 34017                           postinc2	equ	0xFDE
 34018                           postdec2	equ	0xFDD
 34019                           plusw2	equ	0xFDB
 34020                           fsr2h	equ	0xFDA
 34021                           fsr2l	equ	0xFD9
 34022                           status	equ	0xFD8
 34023                           
 34024 ;; *************** function _ClearBuffer *****************
 34025 ;; Defined at:
 34026 ;;		line 153 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 34027 ;; Parameters:    Size  Location     Type
 34028 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 34029 ;;		 -> GsmGprsTerminal@UartBuffer(200), EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(5
      +0), 
 34030 ;;		 -> Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 34031 ;;  Len             2   31[BANK0 ] unsigned short 
 34032 ;; Auto vars:     Size  Location     Type
 34033 ;;  Index           2   33[BANK0 ] unsigned short 
 34034 ;; Return value:  Size  Location     Type
 34035 ;;                  1    wreg      void 
 34036 ;; Registers used:
 34037 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34038 ;; Tracked objects:
 34039 ;;		On entry : 0/0
 34040 ;;		On exit  : 0/0
 34041 ;;		Unchanged: 0/0
 34042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34043 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34044 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34046 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34047 ;;Total ram usage:        6 bytes
 34048 ;; Hardware stack levels used:    1
 34049 ;; Hardware stack levels required when called:   11
 34050 ;; This function calls:
 34051 ;;		Nothing
 34052 ;; This function is called by:
 34053 ;;		_GetSmsSm
 34054 ;;		_GetCallerNumber
 34055 ;;		_InitGprsNetwork
 34056 ;;		_HttpGetMethod
 34057 ;;		_Eeprom_Reset
 34058 ;;		_GsmGprsTerminal
 34059 ;; This function uses a non-reentrant model
 34060 ;;
 34061                           
 34062                           	psect	text158
 34063  0066AC                     __ptext158:
 34064                           	opt stack 0
 34065  0066AC                     _ClearBuffer:
 34066                           	opt stack 14
 34067                           
 34068                           ;sf.c: 155: UINT16 Index = 0;
 34069                           
 34070                           ;incstack = 0
 34071  0066AC  0E00               	movlw	0
 34072  0066AE  0100               	movlb	0	; () banked
 34073  0066B0  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 34074  0066B2  0E00               	movlw	0
 34075  0066B4  6F81               	movwf	ClearBuffer@Index& (0+255),b
 34076                           
 34077                           ;sf.c: 158: for (Index = 0; Index <= Len; Index++)
 34078  0066B6  0E00               	movlw	0
 34079  0066B8  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 34080  0066BA  0E00               	movlw	0
 34081  0066BC  6F81               	movwf	ClearBuffer@Index& (0+255),b
 34082  0066BE  D00A               	goto	l2269
 34083  0066C0                     
 34084                           ; BSR set to: 0
 34085                           ;sf.c: 159: {
 34086                           ;sf.c: 160: *(Buffer + Index) = 0;
 34087                           
 34088                           ; BSR set to: 0
 34089  0066C0  5181               	movf	ClearBuffer@Index& (0+255),w,b
 34090  0066C2  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 34091  0066C4  6ED9               	movwf	fsr2l,c
 34092  0066C6  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 34093  0066C8  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 34094  0066CA  6EDA               	movwf	fsr2h,c
 34095  0066CC  0E00               	movlw	0
 34096  0066CE  6EDF               	movwf	indf2,c
 34097                           
 34098                           ; BSR set to: 0
 34099  0066D0  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 34100  0066D2  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 34101  0066D4                     l2269:
 34102                           
 34103                           ; BSR set to: 0
 34104                           
 34105                           ; BSR set to: 0
 34106  0066D4  5181               	movf	ClearBuffer@Index& (0+255),w,b
 34107  0066D6  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 34108  0066D8  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 34109  0066DA  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 34110  0066DC  A0D8               	btfss	status,0,c
 34111  0066DE  0012               	return	
 34112  0066E0  D7EF               	goto	l2270
 34113  0066E2                     __end_of_ClearBuffer:
 34114                           	opt stack 0
 34115                           tosu	equ	0xFFF
 34116                           tosh	equ	0xFFE
 34117                           tosl	equ	0xFFD
 34118                           pclath	equ	0xFFA
 34119                           tblptru	equ	0xFF8
 34120                           tblptrh	equ	0xFF7
 34121                           tblptrl	equ	0xFF6
 34122                           tablat	equ	0xFF5
 34123                           prodh	equ	0xFF4
 34124                           prodl	equ	0xFF3
 34125                           intcon	equ	0xFF2
 34126                           intcon2	equ	0xFF1
 34127                           intcon3	equ	0xFF0
 34128                           indf0	equ	0xFEF
 34129                           postinc0	equ	0xFEE
 34130                           plusw0	equ	0xFEB
 34131                           fsr0h	equ	0xFEA
 34132                           fsr0l	equ	0xFE9
 34133                           wreg	equ	0xFE8
 34134                           indf1	equ	0xFE7
 34135                           postinc1	equ	0xFE6
 34136                           postdec1	equ	0xFE5
 34137                           plusw1	equ	0xFE3
 34138                           fsr1h	equ	0xFE2
 34139                           fsr1l	equ	0xFE1
 34140                           indf2	equ	0xFDF
 34141                           postinc2	equ	0xFDE
 34142                           postdec2	equ	0xFDD
 34143                           plusw2	equ	0xFDB
 34144                           fsr2h	equ	0xFDA
 34145                           fsr2l	equ	0xFD9
 34146                           status	equ	0xFD8
 34147                           
 34148 ;; *************** function _LedStateMachine *****************
 34149 ;; Defined at:
 34150 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 34151 ;; Parameters:    Size  Location     Type
 34152 ;;  Led             1    wreg     unsigned char 
 34153 ;;  LedSts          2   47[BANK0 ] PTR enum E8959
 34154 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 34155 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 34156 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 34157 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 34158 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 34159 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 34160 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 34161 ;; Auto vars:     Size  Location     Type
 34162 ;;  Led             1   57[BANK0 ] unsigned char 
 34163 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 34164 ;; Return value:  Size  Location     Type
 34165 ;;                  1    wreg      unsigned char 
 34166 ;; Registers used:
 34167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34168 ;; Tracked objects:
 34169 ;;		On entry : 0/0
 34170 ;;		On exit  : 0/0
 34171 ;;		Unchanged: 0/0
 34172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34173 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34174 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34175 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34176 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34177 ;;Total ram usage:       11 bytes
 34178 ;; Hardware stack levels used:    1
 34179 ;; Hardware stack levels required when called:   13
 34180 ;; This function calls:
 34181 ;;		_LedBlinkStateMachine
 34182 ;;		_LedPulseStateMachine
 34183 ;;		_Led_SetLedStatus
 34184 ;; This function is called by:
 34185 ;;		_Led_MainTask
 34186 ;; This function uses a non-reentrant model
 34187 ;;
 34188                           
 34189                           	psect	text159
 34190  0049C2                     __ptext159:
 34191                           	opt stack 0
 34192  0049C2                     _LedStateMachine:
 34193                           	opt stack 14
 34194                           
 34195                           ; BSR set to: 0
 34196                           ;incstack = 0
 34197                           ;LedStateMachine@Led stored from wreg
 34198  0049C2  0100               	movlb	0	; () banked
 34199  0049C4  6F99               	movwf	LedStateMachine@Led& (0+255),b
 34200                           
 34201                           ;led.c: 238: UINT8 LedOutSts = 0u;
 34202  0049C6  0E00               	movlw	0
 34203  0049C8  0100               	movlb	0	; () banked
 34204  0049CA  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 34205                           
 34206                           ;led.c: 241: switch (*LedSts)
 34207  0049CC  D037               	goto	l2121
 34208  0049CE                     
 34209                           ; BSR set to: 0
 34210                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 34211                           
 34212                           ; BSR set to: 0
 34213  0049CE  0E00               	movlw	0
 34214  0049D0  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 34215                           
 34216                           ; BSR set to: 0
 34217                           ;led.c: 246: *LedOut = ((UINT8)(0));
 34218  0049D2  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 34219  0049D6  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 34220  0049DA  0E00               	movlw	0
 34221  0049DC  D007               	goto	L76
 34222  0049DE                     
 34223                           ; BSR set to: 0
 34224                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 34225                           
 34226                           ; BSR set to: 0
 34227  0049DE  0E01               	movlw	1
 34228  0049E0  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 34229                           
 34230                           ; BSR set to: 0
 34231                           ;led.c: 252: *LedOut = ((UINT8)(1));
 34232  0049E2  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 34233  0049E6  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 34234  0049EA  0E01               	movlw	1
 34235  0049EC                     L76:
 34236  0049EC  6EDF               	movwf	indf2,c
 34237                           
 34238                           ;led.c: 253: break;
 34239  0049EE  D03A               	goto	l2123
 34240  0049F0                     
 34241                           ; BSR set to: 0
 34242                           ;led.c: 257: if (*LedOut == 1)
 34243                           
 34244                           ; BSR set to: 0
 34245  0049F0  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 34246  0049F4  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 34247  0049F8  04DE               	decf	postinc2,w,c
 34248  0049FA  A4D8               	btfss	status,2,c
 34249  0049FC  D006               	goto	l2126
 34250                           
 34251                           ; BSR set to: 0
 34252                           ;led.c: 258: {
 34253                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 34254  0049FE  0E00               	movlw	0
 34255  004A00  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 34256  004A02  5199               	movf	LedStateMachine@Led& (0+255),w,b
 34257  004A04  EC05  F034         	call	_Led_SetLedStatus
 34258                           
 34259                           ;led.c: 261: }
 34260  004A08  D02D               	goto	l2123
 34261  004A0A                     l2126:
 34262                           
 34263                           ;led.c: 262: else
 34264                           ;led.c: 263: {
 34265                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 34266  004A0A  0E01               	movlw	1
 34267  004A0C  0100               	movlb	0	; () banked
 34268  004A0E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 34269  004A10  5199               	movf	LedStateMachine@Led& (0+255),w,b
 34270  004A12  EC05  F034         	call	_Led_SetLedStatus
 34271                           
 34272                           ;led.c: 266: }
 34273                           ;led.c: 267: break;
 34274  004A16  D026               	goto	l2123
 34275  004A18                     
 34276                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 34277  004A18  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 34278  004A1C  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 34279  004A20  EC1E  F014         	call	_LedBlinkStateMachine	;wreg free
 34280  004A24  D008               	goto	L77
 34281  004A26                     
 34282                           ; BSR set to: 0
 34283                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 34284                           
 34285                           ; BSR set to: 0
 34286  004A26  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 34287  004A2A  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 34288  004A2E  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 34289  004A32  EC4B  F01A         	call	_LedPulseStateMachine	;wreg free
 34290  004A36                     L77:
 34291  004A36  0100               	movlb	0	; () banked
 34292  004A38  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 34293                           
 34294                           ; BSR set to: 0
 34295                           ;led.c: 281: }
 34296                           
 34297                           ; BSR set to: 0
 34298                           ;led.c: 280: break;
 34299                           
 34300                           ;led.c: 279: default:
 34301                           
 34302                           ;led.c: 277: break;
 34303  004A3A  D014               	goto	l2123
 34304  004A3C                     l2121:
 34305                           
 34306                           ; BSR set to: 0
 34307                           
 34308                           ; BSR set to: 0
 34309  004A3C  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 34310  004A40  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 34311  004A44  50DF               	movf	indf2,w,c
 34312                           
 34313                           ; Switch size 1, requested type "space"
 34314                           ; Number of cases is 5, Range of values is 0 to 4
 34315                           ; switch strategies available:
 34316                           ; Name         Instructions Cycles
 34317                           ; simple_byte           16     9 (average)
 34318                           ;	Chosen strategy is simple_byte
 34319  004A46  0A00               	xorlw	0	; case 0
 34320  004A48  B4D8               	btfsc	status,2,c
 34321  004A4A  D7C1               	goto	l2122
 34322  004A4C  0A01               	xorlw	1	; case 1
 34323  004A4E  B4D8               	btfsc	status,2,c
 34324  004A50  D7C6               	goto	l2124
 34325  004A52  0A03               	xorlw	3	; case 2
 34326  004A54  B4D8               	btfsc	status,2,c
 34327  004A56  D7CC               	goto	l2125
 34328  004A58  0A01               	xorlw	1	; case 3
 34329  004A5A  B4D8               	btfsc	status,2,c
 34330  004A5C  D7DD               	goto	l2128
 34331  004A5E  0A07               	xorlw	7	; case 4
 34332  004A60  B4D8               	btfsc	status,2,c
 34333  004A62  D7E1               	goto	l2129
 34334  004A64                     l2123:
 34335                           
 34336                           ;led.c: 283: return LedOutSts;
 34337                           
 34338                           ; BSR set to: 0
 34339  004A64  0100               	movlb	0	; () banked
 34340  004A66  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 34341  004A68  0012               	return	
 34342  004A6A                     __end_of_LedStateMachine:
 34343                           	opt stack 0
 34344                           tosu	equ	0xFFF
 34345                           tosh	equ	0xFFE
 34346                           tosl	equ	0xFFD
 34347                           pclath	equ	0xFFA
 34348                           tblptru	equ	0xFF8
 34349                           tblptrh	equ	0xFF7
 34350                           tblptrl	equ	0xFF6
 34351                           tablat	equ	0xFF5
 34352                           prodh	equ	0xFF4
 34353                           prodl	equ	0xFF3
 34354                           intcon	equ	0xFF2
 34355                           intcon2	equ	0xFF1
 34356                           intcon3	equ	0xFF0
 34357                           indf0	equ	0xFEF
 34358                           postinc0	equ	0xFEE
 34359                           plusw0	equ	0xFEB
 34360                           fsr0h	equ	0xFEA
 34361                           fsr0l	equ	0xFE9
 34362                           wreg	equ	0xFE8
 34363                           indf1	equ	0xFE7
 34364                           postinc1	equ	0xFE6
 34365                           postdec1	equ	0xFE5
 34366                           plusw1	equ	0xFE3
 34367                           fsr1h	equ	0xFE2
 34368                           fsr1l	equ	0xFE1
 34369                           indf2	equ	0xFDF
 34370                           postinc2	equ	0xFDE
 34371                           postdec2	equ	0xFDD
 34372                           plusw2	equ	0xFDB
 34373                           fsr2h	equ	0xFDA
 34374                           fsr2l	equ	0xFD9
 34375                           status	equ	0xFD8
 34376                           
 34377 ;; *************** function _LedPulseStateMachine *****************
 34378 ;; Defined at:
 34379 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 34380 ;; Parameters:    Size  Location     Type
 34381 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 34382 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 34383 ;;  Led             1   44[BANK0 ] unsigned char 
 34384 ;; Auto vars:     Size  Location     Type
 34385 ;;		None
 34386 ;; Return value:  Size  Location     Type
 34387 ;;                  1    wreg      unsigned char 
 34388 ;; Registers used:
 34389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34390 ;; Tracked objects:
 34391 ;;		On entry : 0/0
 34392 ;;		On exit  : 0/0
 34393 ;;		Unchanged: 0/0
 34394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34395 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34397 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34398 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34399 ;;Total ram usage:        5 bytes
 34400 ;; Hardware stack levels used:    1
 34401 ;; Hardware stack levels required when called:   12
 34402 ;; This function calls:
 34403 ;;		_Led_SetLedStatus
 34404 ;;		___lwdiv
 34405 ;; This function is called by:
 34406 ;;		_LedStateMachine
 34407 ;; This function uses a non-reentrant model
 34408 ;;
 34409                           
 34410                           	psect	text160
 34411  003496                     __ptext160:
 34412                           	opt stack 0
 34413  003496                     _LedPulseStateMachine:
 34414                           	opt stack 14
 34415                           
 34416                           ;led.c: 185: switch (LedPulse->LedPulseState)
 34417                           
 34418                           ; BSR set to: 0
 34419                           ;incstack = 0
 34420  003496  D05C               	goto	l2111
 34421  003498                     
 34422                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 34423  003498  0100               	movlb	0	; () banked
 34424  00349A  EE20 F001          	lfsr	2,1
 34425  00349E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34426  0034A0  26D9               	addwf	fsr2l,f,c
 34427  0034A2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34428  0034A4  22DA               	addwfc	fsr2h,f,c
 34429  0034A6  0E01               	movlw	1
 34430  0034A8  6EDF               	movwf	indf2,c
 34431                           
 34432                           ; BSR set to: 0
 34433                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 34434  0034AA  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 34435  0034AE  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 34436  0034B2  0E01               	movlw	1
 34437  0034B4  D036               	goto	L78
 34438  0034B6                     
 34439                           ;led.c: 196: LedPulse->LedPulseCounter++;
 34440                           
 34441                           ; BSR set to: 0
 34442  0034B6  0100               	movlb	0	; () banked
 34443  0034B8  EE20 F002          	lfsr	2,2
 34444  0034BC  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34445  0034BE  26D9               	addwf	fsr2l,f,c
 34446  0034C0  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34447  0034C2  22DA               	addwfc	fsr2h,f,c
 34448  0034C4  2ADE               	incf	postinc2,f,c
 34449  0034C6  0E00               	movlw	0
 34450  0034C8  22DD               	addwfc	postdec2,f,c
 34451                           
 34452                           ; BSR set to: 0
 34453                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 34454  0034CA  EE20 F004          	lfsr	2,4
 34455  0034CE  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34456  0034D0  26D9               	addwf	fsr2l,f,c
 34457  0034D2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34458  0034D4  22DA               	addwfc	fsr2h,f,c
 34459  0034D6  CFDE F083          	movff	postinc2,___lwdiv@dividend
 34460  0034DA  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 34461  0034DE  0E00               	movlw	0
 34462  0034E0  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 34463  0034E2  0E32               	movlw	50
 34464  0034E4  6F85               	movwf	___lwdiv@divisor& (0+255),b
 34465  0034E6  ECFC  F02E         	call	___lwdiv	;wreg free
 34466  0034EA  0100               	movlb	0	; () banked
 34467  0034EC  EE20 F002          	lfsr	2,2
 34468  0034F0  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34469  0034F2  26D9               	addwf	fsr2l,f,c
 34470  0034F4  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34471  0034F6  22DA               	addwfc	fsr2h,f,c
 34472  0034F8  5183               	movf	?___lwdiv& (0+255),w,b
 34473  0034FA  5CDE               	subwf	postinc2,w,c
 34474  0034FC  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 34475  0034FE  58DE               	subwfb	postinc2,w,c
 34476  003500  A0D8               	btfss	status,0,c
 34477  003502  D034               	goto	l2113
 34478                           
 34479                           ; BSR set to: 0
 34480                           ;led.c: 199: {
 34481                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 34482  003504  EE20 F002          	lfsr	2,2
 34483  003508  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34484  00350A  26D9               	addwf	fsr2l,f,c
 34485  00350C  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34486  00350E  22DA               	addwfc	fsr2h,f,c
 34487  003510  0E00               	movlw	0
 34488  003512  6EDE               	movwf	postinc2,c
 34489  003514  0E00               	movlw	0
 34490  003516  6EDD               	movwf	postdec2,c
 34491                           
 34492                           ; BSR set to: 0
 34493                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 34494  003518  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 34495  00351C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 34496  003520  0E02               	movlw	2
 34497  003522                     L78:
 34498  003522  6EDF               	movwf	indf2,c
 34499                           
 34500                           ; BSR set to: 0
 34501                           ;led.c: 204: }
 34502                           ;led.c: 205: break;
 34503  003524  D023               	goto	l2113
 34504  003526                     
 34505                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 34506                           
 34507                           ; BSR set to: 0
 34508  003526  0100               	movlb	0	; () banked
 34509  003528  EE20 F001          	lfsr	2,1
 34510  00352C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34511  00352E  26D9               	addwf	fsr2l,f,c
 34512  003530  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34513  003532  22DA               	addwfc	fsr2h,f,c
 34514  003534  0E00               	movlw	0
 34515  003536  6EDF               	movwf	indf2,c
 34516                           
 34517                           ; BSR set to: 0
 34518                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 34519  003538  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 34520  00353C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 34521  003540  0E00               	movlw	0
 34522  003542  6EDF               	movwf	indf2,c
 34523                           
 34524                           ; BSR set to: 0
 34525                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 34526  003544  0E00               	movlw	0
 34527  003546  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 34528  003548  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 34529  00354A  EC05  F034         	call	_Led_SetLedStatus
 34530                           
 34531                           ;led.c: 218: }
 34532                           
 34533                           ;led.c: 217: break;
 34534                           
 34535                           ;led.c: 216: default:
 34536                           
 34537                           ;led.c: 214: break;
 34538  00354E  D00E               	goto	l2113
 34539  003550                     l2111:
 34540  003550  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 34541  003554  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 34542  003558  50DF               	movf	indf2,w,c
 34543                           
 34544                           ; Switch size 1, requested type "space"
 34545                           ; Number of cases is 3, Range of values is 0 to 2
 34546                           ; switch strategies available:
 34547                           ; Name         Instructions Cycles
 34548                           ; simple_byte           10     6 (average)
 34549                           ;	Chosen strategy is simple_byte
 34550  00355A  0A00               	xorlw	0	; case 0
 34551  00355C  B4D8               	btfsc	status,2,c
 34552  00355E  D79C               	goto	l2112
 34553  003560  0A01               	xorlw	1	; case 1
 34554  003562  B4D8               	btfsc	status,2,c
 34555  003564  D7A8               	goto	l2114
 34556  003566  0A03               	xorlw	3	; case 2
 34557  003568  B4D8               	btfsc	status,2,c
 34558  00356A  D7DD               	goto	l2116
 34559  00356C                     l2113:
 34560                           
 34561                           ;led.c: 221: return (LedPulse->LedOutState);
 34562  00356C  0100               	movlb	0	; () banked
 34563  00356E  EE20 F001          	lfsr	2,1
 34564  003572  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34565  003574  26D9               	addwf	fsr2l,f,c
 34566  003576  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34567  003578  22DA               	addwfc	fsr2h,f,c
 34568  00357A  50DF               	movf	indf2,w,c
 34569  00357C  0012               	return	
 34570  00357E                     __end_of_LedPulseStateMachine:
 34571                           	opt stack 0
 34572                           tosu	equ	0xFFF
 34573                           tosh	equ	0xFFE
 34574                           tosl	equ	0xFFD
 34575                           pclath	equ	0xFFA
 34576                           tblptru	equ	0xFF8
 34577                           tblptrh	equ	0xFF7
 34578                           tblptrl	equ	0xFF6
 34579                           tablat	equ	0xFF5
 34580                           prodh	equ	0xFF4
 34581                           prodl	equ	0xFF3
 34582                           intcon	equ	0xFF2
 34583                           intcon2	equ	0xFF1
 34584                           intcon3	equ	0xFF0
 34585                           indf0	equ	0xFEF
 34586                           postinc0	equ	0xFEE
 34587                           plusw0	equ	0xFEB
 34588                           fsr0h	equ	0xFEA
 34589                           fsr0l	equ	0xFE9
 34590                           wreg	equ	0xFE8
 34591                           indf1	equ	0xFE7
 34592                           postinc1	equ	0xFE6
 34593                           postdec1	equ	0xFE5
 34594                           plusw1	equ	0xFE3
 34595                           fsr1h	equ	0xFE2
 34596                           fsr1l	equ	0xFE1
 34597                           indf2	equ	0xFDF
 34598                           postinc2	equ	0xFDE
 34599                           postdec2	equ	0xFDD
 34600                           plusw2	equ	0xFDB
 34601                           fsr2h	equ	0xFDA
 34602                           fsr2l	equ	0xFD9
 34603                           status	equ	0xFD8
 34604                           
 34605 ;; *************** function _Led_SetLedStatus *****************
 34606 ;; Defined at:
 34607 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 34608 ;; Parameters:    Size  Location     Type
 34609 ;;  Led             1    wreg     unsigned char 
 34610 ;;  LedSts          1   29[BANK0 ] enum E8959
 34611 ;; Auto vars:     Size  Location     Type
 34612 ;;  Led             1   30[BANK0 ] unsigned char 
 34613 ;; Return value:  Size  Location     Type
 34614 ;;                  1    wreg      void 
 34615 ;; Registers used:
 34616 ;;		wreg, status,2, status,0
 34617 ;; Tracked objects:
 34618 ;;		On entry : 0/0
 34619 ;;		On exit  : 0/0
 34620 ;;		Unchanged: 0/0
 34621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34622 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34625 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34626 ;;Total ram usage:        2 bytes
 34627 ;; Hardware stack levels used:    1
 34628 ;; Hardware stack levels required when called:   11
 34629 ;; This function calls:
 34630 ;;		Nothing
 34631 ;; This function is called by:
 34632 ;;		_LedPulseStateMachine
 34633 ;;		_LedStateMachine
 34634 ;;		_waitSetupCall
 34635 ;;		_initFsm
 34636 ;;		_cmdVisualEffet
 34637 ;; This function uses a non-reentrant model
 34638 ;;
 34639                           
 34640                           	psect	text161
 34641  00680A                     __ptext161:
 34642                           	opt stack 0
 34643  00680A                     _Led_SetLedStatus:
 34644                           	opt stack 14
 34645                           
 34646                           ; BSR set to: 0
 34647                           ;incstack = 0
 34648                           ;Led_SetLedStatus@Led stored from wreg
 34649  00680A  0100               	movlb	0	; () banked
 34650  00680C  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 34651                           
 34652                           ;led.c: 341: switch (Led)
 34653  00680E  D009               	goto	l2142
 34654  006810                     l2143:
 34655                           
 34656                           ; BSR set to: 0
 34657                           ;led.c: 344: Led1Sts = LedSts;
 34658  006810  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 34659                           
 34660                           ;led.c: 345: break;
 34661  006814  0012               	return	
 34662  006816                     l2145:
 34663                           
 34664                           ; BSR set to: 0
 34665                           ;led.c: 348: Led2Sts = LedSts;
 34666  006816  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 34667                           
 34668                           ;led.c: 349: break;
 34669  00681A  0012               	return	
 34670  00681C                     l2146:
 34671                           
 34672                           ; BSR set to: 0
 34673                           ;led.c: 352: Led3Sts = LedSts;
 34674  00681C  C07D  F1F5         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 34675                           
 34676                           ; BSR set to: 0
 34677                           ;led.c: 357: }
 34678                           
 34679                           ; BSR set to: 0
 34680                           ;led.c: 356: break;
 34681                           
 34682                           ;led.c: 355: default:
 34683                           
 34684                           ;led.c: 353: break;
 34685  006820  0012               	return	
 34686  006822                     l2142:
 34687                           
 34688                           ; BSR set to: 0
 34689  006822  0100               	movlb	0	; () banked
 34690  006824  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 34691                           
 34692                           ; Switch size 1, requested type "space"
 34693                           ; Number of cases is 3, Range of values is 1 to 3
 34694                           ; switch strategies available:
 34695                           ; Name         Instructions Cycles
 34696                           ; simple_byte           10     6 (average)
 34697                           ;	Chosen strategy is simple_byte
 34698  006826  0A01               	xorlw	1	; case 1
 34699  006828  B4D8               	btfsc	status,2,c
 34700  00682A  D7F2               	goto	l2143
 34701  00682C  0A03               	xorlw	3	; case 2
 34702  00682E  B4D8               	btfsc	status,2,c
 34703  006830  D7F2               	goto	l2145
 34704  006832  0A01               	xorlw	1	; case 3
 34705  006834  A4D8               	btfss	status,2,c
 34706  006836  0012               	return	
 34707  006838  D7F1               	goto	l2146
 34708  00683A                     __end_of_Led_SetLedStatus:
 34709                           	opt stack 0
 34710                           tosu	equ	0xFFF
 34711                           tosh	equ	0xFFE
 34712                           tosl	equ	0xFFD
 34713                           pclath	equ	0xFFA
 34714                           tblptru	equ	0xFF8
 34715                           tblptrh	equ	0xFF7
 34716                           tblptrl	equ	0xFF6
 34717                           tablat	equ	0xFF5
 34718                           prodh	equ	0xFF4
 34719                           prodl	equ	0xFF3
 34720                           intcon	equ	0xFF2
 34721                           intcon2	equ	0xFF1
 34722                           intcon3	equ	0xFF0
 34723                           indf0	equ	0xFEF
 34724                           postinc0	equ	0xFEE
 34725                           plusw0	equ	0xFEB
 34726                           fsr0h	equ	0xFEA
 34727                           fsr0l	equ	0xFE9
 34728                           wreg	equ	0xFE8
 34729                           indf1	equ	0xFE7
 34730                           postinc1	equ	0xFE6
 34731                           postdec1	equ	0xFE5
 34732                           plusw1	equ	0xFE3
 34733                           fsr1h	equ	0xFE2
 34734                           fsr1l	equ	0xFE1
 34735                           indf2	equ	0xFDF
 34736                           postinc2	equ	0xFDE
 34737                           postdec2	equ	0xFDD
 34738                           plusw2	equ	0xFDB
 34739                           fsr2h	equ	0xFDA
 34740                           fsr2l	equ	0xFD9
 34741                           status	equ	0xFD8
 34742                           
 34743 ;; *************** function _LedBlinkStateMachine *****************
 34744 ;; Defined at:
 34745 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 34746 ;; Parameters:    Size  Location     Type
 34747 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 34748 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 34749 ;; Auto vars:     Size  Location     Type
 34750 ;;		None
 34751 ;; Return value:  Size  Location     Type
 34752 ;;                  1    wreg      unsigned char 
 34753 ;; Registers used:
 34754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34755 ;; Tracked objects:
 34756 ;;		On entry : 0/0
 34757 ;;		On exit  : 0/0
 34758 ;;		Unchanged: 0/0
 34759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34760 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34762 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34763 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34764 ;;Total ram usage:        4 bytes
 34765 ;; Hardware stack levels used:    1
 34766 ;; Hardware stack levels required when called:   12
 34767 ;; This function calls:
 34768 ;;		___lwdiv
 34769 ;; This function is called by:
 34770 ;;		_LedStateMachine
 34771 ;; This function uses a non-reentrant model
 34772 ;;
 34773                           
 34774                           	psect	text162
 34775  00283C                     __ptext162:
 34776                           	opt stack 0
 34777  00283C                     _LedBlinkStateMachine:
 34778                           	opt stack 14
 34779                           
 34780                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 34781                           
 34782                           ; BSR set to: 0
 34783                           ;incstack = 0
 34784  00283C  D08F               	goto	l2098
 34785  00283E                     
 34786                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 34787  00283E  0100               	movlb	0	; () banked
 34788  002840  EE20 F008          	lfsr	2,8
 34789  002844  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34790  002846  26D9               	addwf	fsr2l,f,c
 34791  002848  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34792  00284A  22DA               	addwfc	fsr2h,f,c
 34793  00284C  EE10 F001          	lfsr	1,1
 34794  002850  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34795  002852  26E1               	addwf	fsr1l,f,c
 34796  002854  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34797  002856  22E2               	addwfc	fsr1h,f,c
 34798  002858  CFDF FFE7          	movff	indf2,indf1
 34799                           
 34800                           ; BSR set to: 0
 34801                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 34802  00285C  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 34803  002860  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 34804  002864  D040               	goto	L79
 34805  002866                     
 34806                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 34807                           
 34808                           ; BSR set to: 0
 34809  002866  0100               	movlb	0	; () banked
 34810  002868  EE20 F002          	lfsr	2,2
 34811  00286C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34812  00286E  26D9               	addwf	fsr2l,f,c
 34813  002870  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34814  002872  22DA               	addwfc	fsr2h,f,c
 34815  002874  2ADE               	incf	postinc2,f,c
 34816  002876  0E00               	movlw	0
 34817  002878  22DD               	addwfc	postdec2,f,c
 34818                           
 34819                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 34820  00287A  EE20 F001          	lfsr	2,1
 34821  00287E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34822  002880  26D9               	addwf	fsr2l,f,c
 34823  002882  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34824  002884  22DA               	addwfc	fsr2h,f,c
 34825  002886  50DF               	movf	indf2,w,c
 34826  002888  A4D8               	btfss	status,2,c
 34827  00288A  D02F               	goto	l2102
 34828                           
 34829                           ; BSR set to: 0
 34830                           ;led.c: 142: {
 34831                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 34832  00288C  EE20 F006          	lfsr	2,6
 34833  002890  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34834  002892  26D9               	addwf	fsr2l,f,c
 34835  002894  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34836  002896  22DA               	addwfc	fsr2h,f,c
 34837  002898  CFDE F083          	movff	postinc2,___lwdiv@dividend
 34838  00289C  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 34839  0028A0  0E00               	movlw	0
 34840  0028A2  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 34841  0028A4  0E32               	movlw	50
 34842  0028A6  6F85               	movwf	___lwdiv@divisor& (0+255),b
 34843  0028A8  ECFC  F02E         	call	___lwdiv	;wreg free
 34844  0028AC  0100               	movlb	0	; () banked
 34845  0028AE  EE20 F002          	lfsr	2,2
 34846  0028B2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34847  0028B4  26D9               	addwf	fsr2l,f,c
 34848  0028B6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34849  0028B8  22DA               	addwfc	fsr2h,f,c
 34850  0028BA  5183               	movf	?___lwdiv& (0+255),w,b
 34851  0028BC  5CDE               	subwf	postinc2,w,c
 34852  0028BE  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 34853  0028C0  58DE               	subwfb	postinc2,w,c
 34854  0028C2  A0D8               	btfss	status,0,c
 34855  0028C4  D056               	goto	l2100
 34856                           
 34857                           ; BSR set to: 0
 34858                           ;led.c: 145: {
 34859                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 34860  0028C6  EE20 F002          	lfsr	2,2
 34861  0028CA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34862  0028CC  26D9               	addwf	fsr2l,f,c
 34863  0028CE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34864  0028D0  22DA               	addwfc	fsr2h,f,c
 34865  0028D2  0E00               	movlw	0
 34866  0028D4  6EDE               	movwf	postinc2,c
 34867  0028D6  0E00               	movlw	0
 34868  0028D8  6EDD               	movwf	postdec2,c
 34869                           
 34870                           ;led.c: 149: LedBlink->LedOutState = OnState;
 34871  0028DA  EE20 F001          	lfsr	2,1
 34872  0028DE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34873  0028E0  26D9               	addwf	fsr2l,f,c
 34874  0028E2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34875  0028E4  22DA               	addwfc	fsr2h,f,c
 34876  0028E6                     L79:
 34877  0028E6  0E01               	movlw	1
 34878  0028E8  D037               	goto	L80
 34879  0028EA                     l2102:
 34880                           
 34881                           ; BSR set to: 0
 34882                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 34883                           
 34884                           ; BSR set to: 0
 34885  0028EA  EE20 F001          	lfsr	2,1
 34886  0028EE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34887  0028F0  26D9               	addwf	fsr2l,f,c
 34888  0028F2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34889  0028F4  22DA               	addwfc	fsr2h,f,c
 34890  0028F6  04DE               	decf	postinc2,w,c
 34891  0028F8  A4D8               	btfss	status,2,c
 34892  0028FA  D03B               	goto	l2100
 34893                           
 34894                           ; BSR set to: 0
 34895                           ;led.c: 153: {
 34896                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 34897  0028FC  EE20 F004          	lfsr	2,4
 34898  002900  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34899  002902  26D9               	addwf	fsr2l,f,c
 34900  002904  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34901  002906  22DA               	addwfc	fsr2h,f,c
 34902  002908  CFDE F083          	movff	postinc2,___lwdiv@dividend
 34903  00290C  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 34904  002910  0E00               	movlw	0
 34905  002912  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 34906  002914  0E32               	movlw	50
 34907  002916  6F85               	movwf	___lwdiv@divisor& (0+255),b
 34908  002918  ECFC  F02E         	call	___lwdiv	;wreg free
 34909  00291C  0100               	movlb	0	; () banked
 34910  00291E  EE20 F002          	lfsr	2,2
 34911  002922  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34912  002924  26D9               	addwf	fsr2l,f,c
 34913  002926  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34914  002928  22DA               	addwfc	fsr2h,f,c
 34915  00292A  5183               	movf	?___lwdiv& (0+255),w,b
 34916  00292C  5CDE               	subwf	postinc2,w,c
 34917  00292E  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 34918  002930  58DE               	subwfb	postinc2,w,c
 34919  002932  A0D8               	btfss	status,0,c
 34920  002934  D01E               	goto	l2100
 34921                           
 34922                           ; BSR set to: 0
 34923                           ;led.c: 156: {
 34924                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 34925  002936  EE20 F002          	lfsr	2,2
 34926  00293A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34927  00293C  26D9               	addwf	fsr2l,f,c
 34928  00293E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34929  002940  22DA               	addwfc	fsr2h,f,c
 34930  002942  0E00               	movlw	0
 34931  002944  6EDE               	movwf	postinc2,c
 34932  002946  0E00               	movlw	0
 34933  002948  6EDD               	movwf	postdec2,c
 34934                           
 34935                           ;led.c: 160: LedBlink->LedOutState = OffState;
 34936  00294A  EE20 F001          	lfsr	2,1
 34937  00294E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34938  002950  26D9               	addwf	fsr2l,f,c
 34939  002952  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34940  002954  22DA               	addwfc	fsr2h,f,c
 34941  002956  0E00               	movlw	0
 34942  002958                     L80:
 34943  002958  6EDF               	movwf	indf2,c
 34944                           
 34945                           ; BSR set to: 0
 34946                           ;led.c: 167: }
 34947                           
 34948                           ; BSR set to: 0
 34949                           ;led.c: 166: break;
 34950                           
 34951                           ;led.c: 165: default:
 34952                           
 34953                           ; BSR set to: 0
 34954                           ;led.c: 161: }
 34955                           ;led.c: 162: }
 34956                           ;led.c: 163: break;
 34957                           
 34958                           ; BSR set to: 0
 34959                           
 34960                           ; BSR set to: 0
 34961  00295A  D00B               	goto	l2100
 34962  00295C                     l2098:
 34963                           
 34964                           ; BSR set to: 0
 34965  00295C  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 34966  002960  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 34967  002964  50DF               	movf	indf2,w,c
 34968                           
 34969                           ; Switch size 1, requested type "space"
 34970                           ; Number of cases is 2, Range of values is 0 to 1
 34971                           ; switch strategies available:
 34972                           ; Name         Instructions Cycles
 34973                           ; simple_byte            7     4 (average)
 34974                           ;	Chosen strategy is simple_byte
 34975  002966  0A00               	xorlw	0	; case 0
 34976  002968  B4D8               	btfsc	status,2,c
 34977  00296A  D769               	goto	l2099
 34978  00296C  0A01               	xorlw	1	; case 1
 34979  00296E  B4D8               	btfsc	status,2,c
 34980  002970  D77A               	goto	l2101
 34981  002972                     l2100:
 34982                           
 34983                           ;led.c: 170: return (LedBlink->LedOutState);
 34984  002972  0100               	movlb	0	; () banked
 34985  002974  EE20 F001          	lfsr	2,1
 34986  002978  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34987  00297A  26D9               	addwf	fsr2l,f,c
 34988  00297C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34989  00297E  22DA               	addwfc	fsr2h,f,c
 34990  002980  50DF               	movf	indf2,w,c
 34991  002982  0012               	return	
 34992  002984                     __end_of_LedBlinkStateMachine:
 34993                           	opt stack 0
 34994                           tosu	equ	0xFFF
 34995                           tosh	equ	0xFFE
 34996                           tosl	equ	0xFFD
 34997                           pclath	equ	0xFFA
 34998                           tblptru	equ	0xFF8
 34999                           tblptrh	equ	0xFF7
 35000                           tblptrl	equ	0xFF6
 35001                           tablat	equ	0xFF5
 35002                           prodh	equ	0xFF4
 35003                           prodl	equ	0xFF3
 35004                           intcon	equ	0xFF2
 35005                           intcon2	equ	0xFF1
 35006                           intcon3	equ	0xFF0
 35007                           indf0	equ	0xFEF
 35008                           postinc0	equ	0xFEE
 35009                           plusw0	equ	0xFEB
 35010                           fsr0h	equ	0xFEA
 35011                           fsr0l	equ	0xFE9
 35012                           wreg	equ	0xFE8
 35013                           indf1	equ	0xFE7
 35014                           postinc1	equ	0xFE6
 35015                           postdec1	equ	0xFE5
 35016                           plusw1	equ	0xFE3
 35017                           fsr1h	equ	0xFE2
 35018                           fsr1l	equ	0xFE1
 35019                           indf2	equ	0xFDF
 35020                           postinc2	equ	0xFDE
 35021                           postdec2	equ	0xFDD
 35022                           plusw2	equ	0xFDB
 35023                           fsr2h	equ	0xFDA
 35024                           fsr2l	equ	0xFD9
 35025                           status	equ	0xFD8
 35026                           
 35027 ;; *************** function ___lwdiv *****************
 35028 ;; Defined at:
 35029 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 35030 ;; Parameters:    Size  Location     Type
 35031 ;;  dividend        2   35[BANK0 ] unsigned int 
 35032 ;;  divisor         2   37[BANK0 ] unsigned int 
 35033 ;; Auto vars:     Size  Location     Type
 35034 ;;  quotient        2   40[BANK0 ] unsigned int 
 35035 ;;  counter         1   39[BANK0 ] unsigned char 
 35036 ;; Return value:  Size  Location     Type
 35037 ;;                  2   35[BANK0 ] unsigned int 
 35038 ;; Registers used:
 35039 ;;		wreg, status,2, status,0
 35040 ;; Tracked objects:
 35041 ;;		On entry : 0/0
 35042 ;;		On exit  : 0/0
 35043 ;;		Unchanged: 0/0
 35044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35045 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35046 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35048 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35049 ;;Total ram usage:        7 bytes
 35050 ;; Hardware stack levels used:    1
 35051 ;; Hardware stack levels required when called:   11
 35052 ;; This function calls:
 35053 ;;		Nothing
 35054 ;; This function is called by:
 35055 ;;		_LedBlinkStateMachine
 35056 ;;		_LedPulseStateMachine
 35057 ;;		_secondsAppTimer
 35058 ;;		_utoa
 35059 ;; This function uses a non-reentrant model
 35060 ;;
 35061                           
 35062                           	psect	text163
 35063  005DF8                     __ptext163:
 35064                           	opt stack 0
 35065  005DF8                     ___lwdiv:
 35066                           	opt stack 14
 35067                           
 35068                           ; BSR set to: 0
 35069                           ;incstack = 0
 35070  005DF8  0E00               	movlw	0
 35071  005DFA  0100               	movlb	0	; () banked
 35072  005DFC  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 35073  005DFE  0E00               	movlw	0
 35074  005E00  6F88               	movwf	___lwdiv@quotient& (0+255),b
 35075                           
 35076                           ; BSR set to: 0
 35077  005E02  5185               	movf	___lwdiv@divisor& (0+255),w,b
 35078  005E04  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 35079  005E06  B4D8               	btfsc	status,2,c
 35080  005E08  D01C               	goto	l3435
 35081                           
 35082                           ; BSR set to: 0
 35083  005E0A  0E01               	movlw	1
 35084  005E0C  6F87               	movwf	___lwdiv@counter& (0+255),b
 35085  005E0E  D004               	goto	l3430
 35086  005E10                     
 35087                           ; BSR set to: 0
 35088                           
 35089                           ; BSR set to: 0
 35090  005E10  90D8               	bcf	status,0,c
 35091  005E12  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 35092  005E14  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 35093  005E16  2B87               	incf	___lwdiv@counter& (0+255),f,b
 35094  005E18                     l3430:
 35095                           
 35096                           ; BSR set to: 0
 35097                           
 35098                           ; BSR set to: 0
 35099  005E18  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 35100  005E1A  D7FA               	goto	l3431
 35101  005E1C                     u12380:
 35102                           
 35103                           ; BSR set to: 0
 35104                           
 35105                           ; BSR set to: 0
 35106                           
 35107                           ; BSR set to: 0
 35108  005E1C  90D8               	bcf	status,0,c
 35109  005E1E  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 35110  005E20  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 35111                           
 35112                           ; BSR set to: 0
 35113  005E22  5185               	movf	___lwdiv@divisor& (0+255),w,b
 35114  005E24  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 35115  005E26  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 35116  005E28  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 35117  005E2A  A0D8               	btfss	status,0,c
 35118  005E2C  D005               	goto	l3434
 35119                           
 35120                           ; BSR set to: 0
 35121  005E2E  5185               	movf	___lwdiv@divisor& (0+255),w,b
 35122  005E30  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 35123  005E32  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 35124  005E34  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 35125                           
 35126                           ; BSR set to: 0
 35127  005E36  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 35128  005E38                     l3434:
 35129                           
 35130                           ; BSR set to: 0
 35131                           
 35132                           ; BSR set to: 0
 35133  005E38  90D8               	bcf	status,0,c
 35134  005E3A  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 35135  005E3C  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 35136                           
 35137                           ; BSR set to: 0
 35138  005E3E  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 35139  005E40  D7ED               	goto	u12380
 35140  005E42                     l3435:
 35141                           
 35142                           ; BSR set to: 0
 35143                           
 35144                           ; BSR set to: 0
 35145  005E42  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 35146  005E46  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 35147                           
 35148                           ; BSR set to: 0
 35149  005E4A  0012               	return		;funcret
 35150  005E4C                     __end_of___lwdiv:
 35151                           	opt stack 0
 35152                           tosu	equ	0xFFF
 35153                           tosh	equ	0xFFE
 35154                           tosl	equ	0xFFD
 35155                           pclath	equ	0xFFA
 35156                           tblptru	equ	0xFF8
 35157                           tblptrh	equ	0xFF7
 35158                           tblptrl	equ	0xFF6
 35159                           tablat	equ	0xFF5
 35160                           prodh	equ	0xFF4
 35161                           prodl	equ	0xFF3
 35162                           intcon	equ	0xFF2
 35163                           intcon2	equ	0xFF1
 35164                           intcon3	equ	0xFF0
 35165                           indf0	equ	0xFEF
 35166                           postinc0	equ	0xFEE
 35167                           plusw0	equ	0xFEB
 35168                           fsr0h	equ	0xFEA
 35169                           fsr0l	equ	0xFE9
 35170                           wreg	equ	0xFE8
 35171                           indf1	equ	0xFE7
 35172                           postinc1	equ	0xFE6
 35173                           postdec1	equ	0xFE5
 35174                           plusw1	equ	0xFE3
 35175                           fsr1h	equ	0xFE2
 35176                           fsr1l	equ	0xFE1
 35177                           indf2	equ	0xFDF
 35178                           postinc2	equ	0xFDE
 35179                           postdec2	equ	0xFDD
 35180                           plusw2	equ	0xFDB
 35181                           fsr2h	equ	0xFDA
 35182                           fsr2l	equ	0xFD9
 35183                           status	equ	0xFD8
 35184                           
 35185 ;; *************** function _OsAlrm_SetOsAlarm *****************
 35186 ;; Defined at:
 35187 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 35188 ;; Parameters:    Size  Location     Type
 35189 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 35190 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 35191 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 35192 ;;		 -> I2cDummyTx(1), 
 35193 ;; Auto vars:     Size  Location     Type
 35194 ;;		None
 35195 ;; Return value:  Size  Location     Type
 35196 ;;                  1    wreg      void 
 35197 ;; Registers used:
 35198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35199 ;; Tracked objects:
 35200 ;;		On entry : 0/0
 35201 ;;		On exit  : 0/0
 35202 ;;		Unchanged: 0/0
 35203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35204 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35207 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35208 ;;Total ram usage:        8 bytes
 35209 ;; Hardware stack levels used:    1
 35210 ;; Hardware stack levels required when called:   12
 35211 ;; This function calls:
 35212 ;;		___wmul
 35213 ;; This function is called by:
 35214 ;;		_I2cSlv_MainTask
 35215 ;; This function uses a non-reentrant model
 35216 ;;
 35217                           
 35218                           	psect	text164
 35219  00411C                     __ptext164:
 35220                           	opt stack 0
 35221  00411C                     _OsAlrm_SetOsAlarm:
 35222                           	opt stack 15
 35223                           
 35224                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 35225                           
 35226                           ; BSR set to: 0
 35227                           ;incstack = 0
 35228  00411C  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 35229  004120  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 35230  004124  0E00               	movlw	0
 35231  004126  0100               	movlb	0	; () banked
 35232  004128  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35233  00412A  0E0B               	movlw	11
 35234  00412C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 35235  00412E  EC8B  F034         	call	___wmul	;wreg free
 35236  004132  0E00               	movlw	low _OsAlarms
 35237  004134  0100               	movlb	0	; () banked
 35238  004136  257D               	addwf	?___wmul& (0+255),w,b
 35239  004138  6ED9               	movwf	fsr2l,c
 35240  00413A  0E06               	movlw	high _OsAlarms
 35241  00413C  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 35242  00413E  6EDA               	movwf	fsr2h,c
 35243  004140  0E01               	movlw	1
 35244  004142  6EDF               	movwf	indf2,c
 35245                           
 35246                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 35247  004144  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 35248  004148  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 35249  00414C  0E00               	movlw	0
 35250  00414E  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35251  004150  0E0B               	movlw	11
 35252  004152  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 35253  004154  EC8B  F034         	call	___wmul	;wreg free
 35254  004158  0E01               	movlw	1
 35255  00415A  0100               	movlb	0	; () banked
 35256  00415C  277D               	addwf	?___wmul& (0+255),f,b
 35257  00415E  0E00               	movlw	0
 35258  004160  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 35259  004162  0E00               	movlw	low _OsAlarms
 35260  004164  257D               	addwf	?___wmul& (0+255),w,b
 35261  004166  6ED9               	movwf	fsr2l,c
 35262  004168  0E06               	movlw	high _OsAlarms
 35263  00416A  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 35264  00416C  6EDA               	movwf	fsr2h,c
 35265  00416E  6ADE               	clrf	postinc2,c
 35266  004170  6ADE               	clrf	postinc2,c
 35267  004172  6ADE               	clrf	postinc2,c
 35268  004174  6ADD               	clrf	postdec2,c
 35269                           
 35270                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 35271  004176  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 35272  00417A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 35273  00417E  0E00               	movlw	0
 35274  004180  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35275  004182  0E0B               	movlw	11
 35276  004184  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 35277  004186  EC8B  F034         	call	___wmul	;wreg free
 35278  00418A  0E05               	movlw	5
 35279  00418C  0100               	movlb	0	; () banked
 35280  00418E  277D               	addwf	?___wmul& (0+255),f,b
 35281  004190  0E00               	movlw	0
 35282  004192  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 35283  004194  0E00               	movlw	low _OsAlarms
 35284  004196  257D               	addwf	?___wmul& (0+255),w,b
 35285  004198  6ED9               	movwf	fsr2l,c
 35286  00419A  0E06               	movlw	high _OsAlarms
 35287  00419C  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 35288  00419E  6EDA               	movwf	fsr2h,c
 35289  0041A0  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 35290  0041A4  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 35291  0041A8  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 35292  0041AC  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 35293                           
 35294                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 35295  0041B0  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 35296  0041B4  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 35297  0041B8  0E00               	movlw	0
 35298  0041BA  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35299  0041BC  0E0B               	movlw	11
 35300  0041BE  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 35301  0041C0  EC8B  F034         	call	___wmul	;wreg free
 35302  0041C4  0E09               	movlw	9
 35303  0041C6  0100               	movlb	0	; () banked
 35304  0041C8  277D               	addwf	?___wmul& (0+255),f,b
 35305  0041CA  0E00               	movlw	0
 35306  0041CC  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 35307  0041CE  0E00               	movlw	low _OsAlarms
 35308  0041D0  257D               	addwf	?___wmul& (0+255),w,b
 35309  0041D2  6ED9               	movwf	fsr2l,c
 35310  0041D4  0E06               	movlw	high _OsAlarms
 35311  0041D6  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 35312  0041D8  6EDA               	movwf	fsr2h,c
 35313  0041DA  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 35314  0041DE  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 35315                           
 35316                           ; BSR set to: 0
 35317  0041E2  0012               	return		;funcret
 35318  0041E4                     __end_of_OsAlrm_SetOsAlarm:
 35319                           	opt stack 0
 35320                           tosu	equ	0xFFF
 35321                           tosh	equ	0xFFE
 35322                           tosl	equ	0xFFD
 35323                           pclath	equ	0xFFA
 35324                           tblptru	equ	0xFF8
 35325                           tblptrh	equ	0xFF7
 35326                           tblptrl	equ	0xFF6
 35327                           tablat	equ	0xFF5
 35328                           prodh	equ	0xFF4
 35329                           prodl	equ	0xFF3
 35330                           intcon	equ	0xFF2
 35331                           intcon2	equ	0xFF1
 35332                           intcon3	equ	0xFF0
 35333                           indf0	equ	0xFEF
 35334                           postinc0	equ	0xFEE
 35335                           plusw0	equ	0xFEB
 35336                           fsr0h	equ	0xFEA
 35337                           fsr0l	equ	0xFE9
 35338                           wreg	equ	0xFE8
 35339                           indf1	equ	0xFE7
 35340                           postinc1	equ	0xFE6
 35341                           postdec1	equ	0xFE5
 35342                           plusw1	equ	0xFE3
 35343                           fsr1h	equ	0xFE2
 35344                           fsr1l	equ	0xFE1
 35345                           indf2	equ	0xFDF
 35346                           postinc2	equ	0xFDE
 35347                           postdec2	equ	0xFDD
 35348                           plusw2	equ	0xFDB
 35349                           fsr2h	equ	0xFDA
 35350                           fsr2l	equ	0xFD9
 35351                           status	equ	0xFD8
 35352                           
 35353 ;; *************** function ___wmul *****************
 35354 ;; Defined at:
 35355 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 35356 ;; Parameters:    Size  Location     Type
 35357 ;;  multiplier      2   29[BANK0 ] unsigned int 
 35358 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 35359 ;; Auto vars:     Size  Location     Type
 35360 ;;  product         2   33[BANK0 ] unsigned int 
 35361 ;; Return value:  Size  Location     Type
 35362 ;;                  2   29[BANK0 ] unsigned int 
 35363 ;; Registers used:
 35364 ;;		wreg, status,2, status,0, prodl, prodh
 35365 ;; Tracked objects:
 35366 ;;		On entry : 0/0
 35367 ;;		On exit  : 0/0
 35368 ;;		Unchanged: 0/0
 35369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35370 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35371 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35373 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35374 ;;Total ram usage:        6 bytes
 35375 ;; Hardware stack levels used:    1
 35376 ;; Hardware stack levels required when called:   11
 35377 ;; This function calls:
 35378 ;;		Nothing
 35379 ;; This function is called by:
 35380 ;;		_OsAlrm_SetOsAlarm
 35381 ;;		_secondsAppTimer
 35382 ;;		_atoi
 35383 ;; This function uses a non-reentrant model
 35384 ;;
 35385                           
 35386                           	psect	text165
 35387  006916                     __ptext165:
 35388                           	opt stack 0
 35389  006916                     ___wmul:
 35390                           	opt stack 13
 35391                           
 35392                           ; BSR set to: 0
 35393                           ;incstack = 0
 35394  006916  0100               	movlb	0	; () banked
 35395  006918  517D               	movf	___wmul@multiplier& (0+255),w,b
 35396  00691A  037F               	mulwf	___wmul@multiplicand& (0+255),b
 35397  00691C  CFF3 F081          	movff	prodl,___wmul@product
 35398  006920  CFF4 F082          	movff	prodh,___wmul@product+1
 35399  006924  517D               	movf	___wmul@multiplier& (0+255),w,b
 35400  006926  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 35401  006928  50F3               	movf	prodl,w,c
 35402  00692A  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 35403  00692C  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 35404  00692E  037F               	mulwf	___wmul@multiplicand& (0+255),b
 35405  006930  50F3               	movf	prodl,w,c
 35406  006932  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 35407                           
 35408                           ; BSR set to: 0
 35409  006934  C081  F07D         	movff	___wmul@product,?___wmul
 35410  006938  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 35411  00693C  0012               	return	
 35412  00693E                     __end_of___wmul:
 35413                           	opt stack 0
 35414                           tosu	equ	0xFFF
 35415                           tosh	equ	0xFFE
 35416                           tosl	equ	0xFFD
 35417                           pclath	equ	0xFFA
 35418                           tblptru	equ	0xFF8
 35419                           tblptrh	equ	0xFF7
 35420                           tblptrl	equ	0xFF6
 35421                           tablat	equ	0xFF5
 35422                           prodh	equ	0xFF4
 35423                           prodl	equ	0xFF3
 35424                           intcon	equ	0xFF2
 35425                           intcon2	equ	0xFF1
 35426                           intcon3	equ	0xFF0
 35427                           indf0	equ	0xFEF
 35428                           postinc0	equ	0xFEE
 35429                           plusw0	equ	0xFEB
 35430                           fsr0h	equ	0xFEA
 35431                           fsr0l	equ	0xFE9
 35432                           wreg	equ	0xFE8
 35433                           indf1	equ	0xFE7
 35434                           postinc1	equ	0xFE6
 35435                           postdec1	equ	0xFE5
 35436                           plusw1	equ	0xFE3
 35437                           fsr1h	equ	0xFE2
 35438                           fsr1l	equ	0xFE1
 35439                           indf2	equ	0xFDF
 35440                           postinc2	equ	0xFDE
 35441                           postdec2	equ	0xFDD
 35442                           plusw2	equ	0xFDB
 35443                           fsr2h	equ	0xFDA
 35444                           fsr2l	equ	0xFD9
 35445                           status	equ	0xFD8
 35446                           
 35447 ;; *************** function _I2c_InitI2cModule *****************
 35448 ;; Defined at:
 35449 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35450 ;; Parameters:    Size  Location     Type
 35451 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 35452 ;;		 -> I2cConfig(10), 
 35453 ;; Auto vars:     Size  Location     Type
 35454 ;;		None
 35455 ;; Return value:  Size  Location     Type
 35456 ;;                  1    wreg      void 
 35457 ;; Registers used:
 35458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35459 ;; Tracked objects:
 35460 ;;		On entry : 0/0
 35461 ;;		On exit  : 0/0
 35462 ;;		Unchanged: 0/0
 35463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35464 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35466 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35467 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35468 ;;Total ram usage:        4 bytes
 35469 ;; Hardware stack levels used:    1
 35470 ;; Hardware stack levels required when called:   13
 35471 ;; This function calls:
 35472 ;;		_SetBaudRate
 35473 ;; This function is called by:
 35474 ;;		_I2cSlv_MainTask
 35475 ;; This function uses a non-reentrant model
 35476 ;;
 35477                           
 35478                           	psect	text166
 35479  005626                     __ptext166:
 35480                           	opt stack 0
 35481  005626                     _I2c_InitI2cModule:
 35482                           	opt stack 14
 35483                           
 35484                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 35485                           
 35486                           ; BSR set to: 0
 35487                           ;incstack = 0
 35488  005626  8295               	bsf	3989,1,c	;volatile
 35489                           
 35490                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 35491  005628  8095               	bsf	3989,0,c	;volatile
 35492                           
 35493                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 35494  00562A  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 35495  00562E  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 35496  005632  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 35497  005636  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 35498  00563A  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 35499  00563E  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 35500  005642  0100               	movlb	0	; () banked
 35501  005644  EE20 F004          	lfsr	2,4
 35502  005648  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 35503  00564A  26D9               	addwf	fsr2l,f,c
 35504  00564C  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 35505  00564E  22DA               	addwfc	fsr2h,f,c
 35506  005650  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 35507  005654  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 35508  005658  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 35509  00565C  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 35510  005660  EC67  F030         	call	_SetBaudRate	;wreg free
 35511                           
 35512                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 35513  005664  0100               	movlb	0	; () banked
 35514  005666  EE20 F008          	lfsr	2,8
 35515  00566A  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 35516  00566C  26D9               	addwf	fsr2l,f,c
 35517  00566E  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 35518  005670  22DA               	addwfc	fsr2h,f,c
 35519  005672  50DF               	movf	indf2,w,c
 35520  005674  1272               	iorwf	3954,f,c	;volatile
 35521                           
 35522                           ; BSR set to: 0
 35523                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 35524  005676  EE20 F009          	lfsr	2,9
 35525  00567A  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 35526  00567C  26D9               	addwf	fsr2l,f,c
 35527  00567E  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 35528  005680  22DA               	addwfc	fsr2h,f,c
 35529  005682  50DF               	movf	indf2,w,c
 35530  005684  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 35531  005686  0E05               	movlw	5
 35532  005688  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 35533  00568A                     u14995:
 35534  00568A  90D8               	bcf	status,0,c
 35535  00568C  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 35536  00568E  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 35537  005690  D7FC               	goto	u14995
 35538  005692  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 35539  005694  1272               	iorwf	3954,f,c	;volatile
 35540                           
 35541                           ; BSR set to: 0
 35542  005696  0012               	return		;funcret
 35543  005698                     __end_of_I2c_InitI2cModule:
 35544                           	opt stack 0
 35545                           tosu	equ	0xFFF
 35546                           tosh	equ	0xFFE
 35547                           tosl	equ	0xFFD
 35548                           pclath	equ	0xFFA
 35549                           tblptru	equ	0xFF8
 35550                           tblptrh	equ	0xFF7
 35551                           tblptrl	equ	0xFF6
 35552                           tablat	equ	0xFF5
 35553                           prodh	equ	0xFF4
 35554                           prodl	equ	0xFF3
 35555                           intcon	equ	0xFF2
 35556                           intcon2	equ	0xFF1
 35557                           intcon3	equ	0xFF0
 35558                           indf0	equ	0xFEF
 35559                           postinc0	equ	0xFEE
 35560                           plusw0	equ	0xFEB
 35561                           fsr0h	equ	0xFEA
 35562                           fsr0l	equ	0xFE9
 35563                           wreg	equ	0xFE8
 35564                           indf1	equ	0xFE7
 35565                           postinc1	equ	0xFE6
 35566                           postdec1	equ	0xFE5
 35567                           plusw1	equ	0xFE3
 35568                           fsr1h	equ	0xFE2
 35569                           fsr1l	equ	0xFE1
 35570                           indf2	equ	0xFDF
 35571                           postinc2	equ	0xFDE
 35572                           postdec2	equ	0xFDD
 35573                           plusw2	equ	0xFDB
 35574                           fsr2h	equ	0xFDA
 35575                           fsr2l	equ	0xFD9
 35576                           status	equ	0xFD8
 35577                           
 35578 ;; *************** function _SetBaudRate *****************
 35579 ;; Defined at:
 35580 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35581 ;; Parameters:    Size  Location     Type
 35582 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 35583 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 35584 ;; Auto vars:     Size  Location     Type
 35585 ;;		None
 35586 ;; Return value:  Size  Location     Type
 35587 ;;                  1    wreg      void 
 35588 ;; Registers used:
 35589 ;;		wreg, status,2, status,0, cstack
 35590 ;; Tracked objects:
 35591 ;;		On entry : 0/0
 35592 ;;		On exit  : 0/0
 35593 ;;		Unchanged: 0/0
 35594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35595 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35597 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35598 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35599 ;;Total ram usage:       12 bytes
 35600 ;; Hardware stack levels used:    1
 35601 ;; Hardware stack levels required when called:   12
 35602 ;; This function calls:
 35603 ;;		___lldiv
 35604 ;; This function is called by:
 35605 ;;		_I2c_InitI2cModule
 35606 ;; This function uses a non-reentrant model
 35607 ;;
 35608                           
 35609                           	psect	text167
 35610  0060CE                     __ptext167:
 35611                           	opt stack 0
 35612  0060CE                     _SetBaudRate:
 35613                           	opt stack 14
 35614                           
 35615                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 35616                           
 35617                           ; BSR set to: 0
 35618                           ;incstack = 0
 35619  0060CE  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 35620  0060D2  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 35621  0060D6  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 35622  0060DA  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 35623  0060DE  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 35624  0060E2  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 35625  0060E6  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 35626  0060EA  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 35627  0060EE  0E02               	movlw	2
 35628  0060F0                     u13725:
 35629  0060F0  90D8               	bcf	status,0,c
 35630  0060F2  0100               	movlb	0	; () banked
 35631  0060F4  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 35632  0060F6  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 35633  0060F8  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 35634  0060FA  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 35635  0060FC  2EE8               	decfsz	wreg,f,c
 35636  0060FE  D7F8               	goto	u13725
 35637  006100  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 35638  006104  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 35639  006108  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 35640  00610C  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 35641  006110  ECDE  F029         	call	___lldiv	;wreg free
 35642  006114  0100               	movlb	0	; () banked
 35643  006116  0589               	decf	?___lldiv& (0+255),w,b
 35644  006118  6E74               	movwf	3956,c	;volatile
 35645                           
 35646                           ; BSR set to: 0
 35647  00611A  0012               	return		;funcret
 35648  00611C                     __end_of_SetBaudRate:
 35649                           	opt stack 0
 35650                           tosu	equ	0xFFF
 35651                           tosh	equ	0xFFE
 35652                           tosl	equ	0xFFD
 35653                           pclath	equ	0xFFA
 35654                           tblptru	equ	0xFF8
 35655                           tblptrh	equ	0xFF7
 35656                           tblptrl	equ	0xFF6
 35657                           tablat	equ	0xFF5
 35658                           prodh	equ	0xFF4
 35659                           prodl	equ	0xFF3
 35660                           intcon	equ	0xFF2
 35661                           intcon2	equ	0xFF1
 35662                           intcon3	equ	0xFF0
 35663                           indf0	equ	0xFEF
 35664                           postinc0	equ	0xFEE
 35665                           plusw0	equ	0xFEB
 35666                           fsr0h	equ	0xFEA
 35667                           fsr0l	equ	0xFE9
 35668                           wreg	equ	0xFE8
 35669                           indf1	equ	0xFE7
 35670                           postinc1	equ	0xFE6
 35671                           postdec1	equ	0xFE5
 35672                           plusw1	equ	0xFE3
 35673                           fsr1h	equ	0xFE2
 35674                           fsr1l	equ	0xFE1
 35675                           indf2	equ	0xFDF
 35676                           postinc2	equ	0xFDE
 35677                           postdec2	equ	0xFDD
 35678                           plusw2	equ	0xFDB
 35679                           fsr2h	equ	0xFDA
 35680                           fsr2l	equ	0xFD9
 35681                           status	equ	0xFD8
 35682                           
 35683 ;; *************** function ___lldiv *****************
 35684 ;; Defined at:
 35685 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 35686 ;; Parameters:    Size  Location     Type
 35687 ;;  dividend        4   41[BANK0 ] unsigned long 
 35688 ;;  divisor         4   45[BANK0 ] unsigned long 
 35689 ;; Auto vars:     Size  Location     Type
 35690 ;;  quotient        4   49[BANK0 ] unsigned long 
 35691 ;;  counter         1   53[BANK0 ] unsigned char 
 35692 ;; Return value:  Size  Location     Type
 35693 ;;                  4   41[BANK0 ] unsigned long 
 35694 ;; Registers used:
 35695 ;;		wreg, status,2, status,0
 35696 ;; Tracked objects:
 35697 ;;		On entry : 0/0
 35698 ;;		On exit  : 0/0
 35699 ;;		Unchanged: 0/0
 35700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35701 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35702 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35704 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35705 ;;Total ram usage:       13 bytes
 35706 ;; Hardware stack levels used:    1
 35707 ;; Hardware stack levels required when called:   11
 35708 ;; This function calls:
 35709 ;;		Nothing
 35710 ;; This function is called by:
 35711 ;;		_SetBaudRate
 35712 ;;		_Tmr_TmrBPrSet
 35713 ;;		_SetUartBaudRate
 35714 ;; This function uses a non-reentrant model
 35715 ;;
 35716                           
 35717                           	psect	text168
 35718  0053BC                     __ptext168:
 35719                           	opt stack 0
 35720  0053BC                     ___lldiv:
 35721                           	opt stack 15
 35722                           
 35723                           ; BSR set to: 0
 35724                           ;incstack = 0
 35725  0053BC  0E00               	movlw	0
 35726  0053BE  0100               	movlb	0	; () banked
 35727  0053C0  6F91               	movwf	___lldiv@quotient& (0+255),b
 35728  0053C2  0E00               	movlw	0
 35729  0053C4  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 35730  0053C6  0E00               	movlw	0
 35731  0053C8  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 35732  0053CA  0E00               	movlw	0
 35733  0053CC  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 35734                           
 35735                           ; BSR set to: 0
 35736  0053CE  518D               	movf	___lldiv@divisor& (0+255),w,b
 35737  0053D0  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35738  0053D2  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35739  0053D4  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35740  0053D6  B4D8               	btfsc	status,2,c
 35741  0053D8  D02A               	goto	l3382
 35742                           
 35743                           ; BSR set to: 0
 35744  0053DA  0E01               	movlw	1
 35745  0053DC  6F95               	movwf	___lldiv@counter& (0+255),b
 35746  0053DE  D006               	goto	l3377
 35747  0053E0                     
 35748                           ; BSR set to: 0
 35749                           
 35750                           ; BSR set to: 0
 35751  0053E0  90D8               	bcf	status,0,c
 35752  0053E2  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 35753  0053E4  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35754  0053E6  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35755  0053E8  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35756  0053EA  2B95               	incf	___lldiv@counter& (0+255),f,b
 35757  0053EC                     l3377:
 35758                           
 35759                           ; BSR set to: 0
 35760                           
 35761                           ; BSR set to: 0
 35762  0053EC  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35763  0053EE  D7F8               	goto	l3378
 35764  0053F0                     u12710:
 35765                           
 35766                           ; BSR set to: 0
 35767                           
 35768                           ; BSR set to: 0
 35769                           
 35770                           ; BSR set to: 0
 35771  0053F0  90D8               	bcf	status,0,c
 35772  0053F2  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 35773  0053F4  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35774  0053F6  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35775  0053F8  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35776                           
 35777                           ; BSR set to: 0
 35778  0053FA  518D               	movf	___lldiv@divisor& (0+255),w,b
 35779  0053FC  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 35780  0053FE  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35781  005400  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35782  005402  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35783  005404  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35784  005406  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35785  005408  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35786  00540A  A0D8               	btfss	status,0,c
 35787  00540C  D009               	goto	l3381
 35788                           
 35789                           ; BSR set to: 0
 35790  00540E  518D               	movf	___lldiv@divisor& (0+255),w,b
 35791  005410  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 35792  005412  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35793  005414  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35794  005416  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35795  005418  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35796  00541A  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35797  00541C  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35798                           
 35799                           ; BSR set to: 0
 35800  00541E  8191               	bsf	___lldiv@quotient& (0+255),0,b
 35801  005420                     l3381:
 35802                           
 35803                           ; BSR set to: 0
 35804                           
 35805                           ; BSR set to: 0
 35806  005420  90D8               	bcf	status,0,c
 35807  005422  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35808  005424  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35809  005426  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35810  005428  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 35811                           
 35812                           ; BSR set to: 0
 35813  00542A  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 35814  00542C  D7E1               	goto	u12710
 35815  00542E                     l3382:
 35816                           
 35817                           ; BSR set to: 0
 35818                           
 35819                           ; BSR set to: 0
 35820  00542E  C091  F089         	movff	___lldiv@quotient,?___lldiv
 35821  005432  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 35822  005436  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 35823  00543A  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 35824                           
 35825                           ; BSR set to: 0
 35826  00543E  0012               	return		;funcret
 35827  005440                     __end_of___lldiv:
 35828                           	opt stack 0
 35829                           tosu	equ	0xFFF
 35830                           tosh	equ	0xFFE
 35831                           tosl	equ	0xFFD
 35832                           pclath	equ	0xFFA
 35833                           tblptru	equ	0xFF8
 35834                           tblptrh	equ	0xFF7
 35835                           tblptrl	equ	0xFF6
 35836                           tablat	equ	0xFF5
 35837                           prodh	equ	0xFF4
 35838                           prodl	equ	0xFF3
 35839                           intcon	equ	0xFF2
 35840                           intcon2	equ	0xFF1
 35841                           intcon3	equ	0xFF0
 35842                           indf0	equ	0xFEF
 35843                           postinc0	equ	0xFEE
 35844                           plusw0	equ	0xFEB
 35845                           fsr0h	equ	0xFEA
 35846                           fsr0l	equ	0xFE9
 35847                           wreg	equ	0xFE8
 35848                           indf1	equ	0xFE7
 35849                           postinc1	equ	0xFE6
 35850                           postdec1	equ	0xFE5
 35851                           plusw1	equ	0xFE3
 35852                           fsr1h	equ	0xFE2
 35853                           fsr1l	equ	0xFE1
 35854                           indf2	equ	0xFDF
 35855                           postinc2	equ	0xFDE
 35856                           postdec2	equ	0xFDD
 35857                           plusw2	equ	0xFDB
 35858                           fsr2h	equ	0xFDA
 35859                           fsr2l	equ	0xFD9
 35860                           status	equ	0xFD8
 35861                           
 35862 ;; *************** function _I2cSetConfig *****************
 35863 ;; Defined at:
 35864 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 35865 ;; Parameters:    Size  Location     Type
 35866 ;;		None
 35867 ;; Auto vars:     Size  Location     Type
 35868 ;;		None
 35869 ;; Return value:  Size  Location     Type
 35870 ;;                  1    wreg      void 
 35871 ;; Registers used:
 35872 ;;		wreg, status,2
 35873 ;; Tracked objects:
 35874 ;;		On entry : 0/0
 35875 ;;		On exit  : 0/0
 35876 ;;		Unchanged: 0/0
 35877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35882 ;;Total ram usage:        0 bytes
 35883 ;; Hardware stack levels used:    1
 35884 ;; Hardware stack levels required when called:   11
 35885 ;; This function calls:
 35886 ;;		Nothing
 35887 ;; This function is called by:
 35888 ;;		_I2cSlv_MainTask
 35889 ;; This function uses a non-reentrant model
 35890 ;;
 35891                           
 35892                           	psect	text169
 35893  006896                     __ptext169:
 35894                           	opt stack 0
 35895  006896                     _I2cSetConfig:
 35896                           	opt stack 16
 35897                           
 35898                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 35899                           
 35900                           ; BSR set to: 0
 35901                           ;incstack = 0
 35902  006896  0E80               	movlw	128
 35903  006898  0103               	movlb	3	; () banked
 35904  00689A  6F5C               	movwf	_I2cConfig& (0+255),b
 35905  00689C  0E1A               	movlw	26
 35906  00689E  6F5D               	movwf	(_I2cConfig+1)& (0+255),b
 35907  0068A0  0E06               	movlw	6
 35908  0068A2  6F5E               	movwf	(_I2cConfig+2)& (0+255),b
 35909  0068A4  0E00               	movlw	0
 35910  0068A6  6F5F               	movwf	(_I2cConfig+3)& (0+255),b
 35911                           
 35912                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 35913  0068A8  0E00               	movlw	0
 35914  0068AA  6F60               	movwf	(_I2cConfig+4)& (0+255),b
 35915  0068AC  0E6C               	movlw	108
 35916  0068AE  6F61               	movwf	(_I2cConfig+5)& (0+255),b
 35917  0068B0  0EDC               	movlw	220
 35918  0068B2  6F62               	movwf	(_I2cConfig+6)& (0+255),b
 35919  0068B4  0E02               	movlw	2
 35920  0068B6  6F63               	movwf	(_I2cConfig+7)& (0+255),b
 35921                           
 35922                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 35923  0068B8  0E08               	movlw	8
 35924  0068BA  6F64               	movwf	(_I2cConfig+8)& (0+255),b
 35925                           
 35926                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 35927  0068BC  0E01               	movlw	1
 35928  0068BE  6F65               	movwf	(_I2cConfig+9)& (0+255),b
 35929                           
 35930                           ; BSR set to: 3
 35931  0068C0  0012               	return		;funcret
 35932  0068C2                     __end_of_I2cSetConfig:
 35933                           	opt stack 0
 35934                           tosu	equ	0xFFF
 35935                           tosh	equ	0xFFE
 35936                           tosl	equ	0xFFD
 35937                           pclath	equ	0xFFA
 35938                           tblptru	equ	0xFF8
 35939                           tblptrh	equ	0xFF7
 35940                           tblptrl	equ	0xFF6
 35941                           tablat	equ	0xFF5
 35942                           prodh	equ	0xFF4
 35943                           prodl	equ	0xFF3
 35944                           intcon	equ	0xFF2
 35945                           intcon2	equ	0xFF1
 35946                           intcon3	equ	0xFF0
 35947                           indf0	equ	0xFEF
 35948                           postinc0	equ	0xFEE
 35949                           plusw0	equ	0xFEB
 35950                           fsr0h	equ	0xFEA
 35951                           fsr0l	equ	0xFE9
 35952                           wreg	equ	0xFE8
 35953                           indf1	equ	0xFE7
 35954                           postinc1	equ	0xFE6
 35955                           postdec1	equ	0xFE5
 35956                           plusw1	equ	0xFE3
 35957                           fsr1h	equ	0xFE2
 35958                           fsr1l	equ	0xFE1
 35959                           indf2	equ	0xFDF
 35960                           postinc2	equ	0xFDE
 35961                           postdec2	equ	0xFDD
 35962                           plusw2	equ	0xFDB
 35963                           fsr2h	equ	0xFDA
 35964                           fsr2l	equ	0xFD9
 35965                           status	equ	0xFD8
 35966                           
 35967 ;; *************** function _I2cSendMsgSm *****************
 35968 ;; Defined at:
 35969 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 35970 ;; Parameters:    Size  Location     Type
 35971 ;;		None
 35972 ;; Auto vars:     Size  Location     Type
 35973 ;;		None
 35974 ;; Return value:  Size  Location     Type
 35975 ;;                  1    wreg      void 
 35976 ;; Registers used:
 35977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35978 ;; Tracked objects:
 35979 ;;		On entry : 0/0
 35980 ;;		On exit  : 0/0
 35981 ;;		Unchanged: 0/0
 35982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35987 ;;Total ram usage:        0 bytes
 35988 ;; Hardware stack levels used:    1
 35989 ;; Hardware stack levels required when called:   13
 35990 ;; This function calls:
 35991 ;;		_I2c_ReadData
 35992 ;;		_I2c_WriteData
 35993 ;;		_ReceiveEvt
 35994 ;; This function is called by:
 35995 ;;		_I2cSlv_MainTask
 35996 ;; This function uses a non-reentrant model
 35997 ;;
 35998                           
 35999                           	psect	text170
 36000  0041E4                     __ptext170:
 36001                           	opt stack 0
 36002  0041E4                     _I2cSendMsgSm:
 36003                           	opt stack 14
 36004                           
 36005                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 36006                           ;i2c_slv.c: 122: switch(I2cComState)
 36007                           
 36008                           ; BSR set to: 3
 36009                           ;incstack = 0
 36010  0041E4  D04F               	goto	l1382
 36011  0041E6                     
 36012                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 36013  0041E6  0ED7               	movlw	low _I2cWriteDataEvt
 36014  0041E8  0100               	movlb	0	; () banked
 36015  0041EA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 36016  0041EC  0E00               	movlw	high _I2cWriteDataEvt
 36017  0041EE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 36018  0041F0  EC34  F034         	call	_ReceiveEvt	;wreg free
 36019  0041F4  0900               	iorlw	0
 36020  0041F6  B4D8               	btfsc	status,2,c
 36021  0041F8  D007               	goto	l1384
 36022                           
 36023                           ;i2c_slv.c: 127: {
 36024                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 36025  0041FA  0E01               	movlw	1
 36026  0041FC  0101               	movlb	1	; () banked
 36027  0041FE  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 36028                           
 36029                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 36030  004200  0E01               	movlw	1
 36031  004202  0100               	movlb	0	; () banked
 36032  004204  6FCF               	movwf	_I2cComSts& (0+255),b
 36033                           
 36034                           ;i2c_slv.c: 132: }
 36035  004206  0012               	return	
 36036  004208                     l1384:
 36037                           
 36038                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 36039                           
 36040                           ; BSR set to: 0
 36041  004208  0E39               	movlw	low _I2cReadDataEvt
 36042  00420A  0100               	movlb	0	; () banked
 36043  00420C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 36044  00420E  0E00               	movlw	high _I2cReadDataEvt
 36045  004210  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 36046  004212  EC34  F034         	call	_ReceiveEvt	;wreg free
 36047  004216  0900               	iorlw	0
 36048  004218  B4D8               	btfsc	status,2,c
 36049  00421A  D007               	goto	l1386
 36050                           
 36051                           ;i2c_slv.c: 134: {
 36052                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 36053  00421C  0E02               	movlw	2
 36054  00421E  0101               	movlb	1	; () banked
 36055  004220  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 36056                           
 36057                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 36058  004222  0E02               	movlw	2
 36059  004224  0100               	movlb	0	; () banked
 36060  004226  6FCF               	movwf	_I2cComSts& (0+255),b
 36061                           
 36062                           ;i2c_slv.c: 139: }
 36063  004228  0012               	return	
 36064  00422A                     l1386:
 36065                           
 36066                           ;i2c_slv.c: 140: else
 36067                           ;i2c_slv.c: 141: {
 36068                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 36069                           
 36070                           ; BSR set to: 0
 36071  00422A  0E00               	movlw	0
 36072  00422C  0100               	movlb	0	; () banked
 36073  00422E  6FCF               	movwf	_I2cComSts& (0+255),b
 36074                           
 36075                           ; BSR set to: 0
 36076                           ;i2c_slv.c: 144: }
 36077                           ;i2c_slv.c: 145: break;
 36078                           
 36079                           ; BSR set to: 0
 36080  004230  0012               	return	
 36081  004232                     
 36082                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 36083                           
 36084                           ; BSR set to: 0
 36085  004232  0E9F               	movlw	low _I2cTxPacket
 36086  004234  0100               	movlb	0	; () banked
 36087  004236  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 36088  004238  0E03               	movlw	high _I2cTxPacket
 36089  00423A  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 36090  00423C  EC5C  F00F         	call	_I2c_WriteData	;wreg free
 36091  004240  0900               	iorlw	0
 36092  004242  B4D8               	btfsc	status,2,c
 36093  004244  0012               	return	
 36094                           
 36095                           ;i2c_slv.c: 150: {
 36096                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 36097  004246  0E03               	movlw	3
 36098  004248  0101               	movlb	1	; () banked
 36099  00424A  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 36100                           
 36101                           ; BSR set to: 1
 36102                           ;i2c_slv.c: 153: }
 36103                           ;i2c_slv.c: 154: break;
 36104  00424C  0012               	return	
 36105  00424E                     
 36106                           ; BSR set to: 1
 36107                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 36108                           
 36109                           ; BSR set to: 1
 36110  00424E  0E99               	movlw	low _I2cRxPacket
 36111  004250  0100               	movlb	0	; () banked
 36112  004252  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 36113  004254  0E03               	movlw	high _I2cRxPacket
 36114  004256  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 36115  004258  ECC3  F010         	call	_I2c_ReadData	;wreg free
 36116  00425C  0900               	iorlw	0
 36117  00425E  B4D8               	btfsc	status,2,c
 36118  004260  0012               	return	
 36119                           
 36120                           ;i2c_slv.c: 159: {
 36121                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 36122  004262  0E04               	movlw	4
 36123  004264  0101               	movlb	1	; () banked
 36124  004266  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 36125                           
 36126                           ; BSR set to: 1
 36127                           ;i2c_slv.c: 162: }
 36128                           ;i2c_slv.c: 164: break;
 36129  004268  0012               	return	
 36130  00426A                     
 36131                           ; BSR set to: 1
 36132                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 36133                           
 36134                           ; BSR set to: 1
 36135  00426A  0E00               	movlw	0
 36136  00426C  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 36137                           
 36138                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 36139  00426E  0E00               	movlw	0
 36140  004270  0100               	movlb	0	; () banked
 36141  004272  6FCF               	movwf	_I2cComSts& (0+255),b
 36142                           
 36143                           ;i2c_slv.c: 171: break;
 36144  004274  0012               	return	
 36145  004276                     
 36146                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 36147                           
 36148                           ; BSR set to: 0
 36149  004276  0E00               	movlw	0
 36150  004278  0101               	movlb	1	; () banked
 36151  00427A  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 36152                           
 36153                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 36154  00427C  0E00               	movlw	0
 36155  00427E  0100               	movlb	0	; () banked
 36156  004280  6FCF               	movwf	_I2cComSts& (0+255),b
 36157                           
 36158                           ; BSR set to: 0
 36159                           ;i2c_slv.c: 182: }
 36160                           
 36161                           ; BSR set to: 0
 36162                           ;i2c_slv.c: 181: break;
 36163                           
 36164                           ;i2c_slv.c: 180: default:
 36165                           
 36166                           ;i2c_slv.c: 178: break;
 36167  004282  0012               	return	
 36168  004284                     l1382:
 36169                           
 36170                           ; BSR set to: 0
 36171  004284  0101               	movlb	1	; () banked
 36172  004286  51E3               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 36173                           
 36174                           ; Switch size 1, requested type "space"
 36175                           ; Number of cases is 5, Range of values is 0 to 4
 36176                           ; switch strategies available:
 36177                           ; Name         Instructions Cycles
 36178                           ; simple_byte           16     9 (average)
 36179                           ;	Chosen strategy is simple_byte
 36180  004288  0A00               	xorlw	0	; case 0
 36181  00428A  B4D8               	btfsc	status,2,c
 36182  00428C  D7AC               	goto	l1383
 36183  00428E  0A01               	xorlw	1	; case 1
 36184  004290  B4D8               	btfsc	status,2,c
 36185  004292  D7CF               	goto	l1389
 36186  004294  0A03               	xorlw	3	; case 2
 36187  004296  B4D8               	btfsc	status,2,c
 36188  004298  D7DA               	goto	l1391
 36189  00429A  0A01               	xorlw	1	; case 3
 36190  00429C  B4D8               	btfsc	status,2,c
 36191  00429E  D7E5               	goto	l1393
 36192  0042A0  0A07               	xorlw	7	; case 4
 36193  0042A2  A4D8               	btfss	status,2,c
 36194  0042A4  0012               	return	
 36195  0042A6  D7E7               	goto	l1394
 36196  0042A8                     __end_of_I2cSendMsgSm:
 36197                           	opt stack 0
 36198                           tosu	equ	0xFFF
 36199                           tosh	equ	0xFFE
 36200                           tosl	equ	0xFFD
 36201                           pclath	equ	0xFFA
 36202                           tblptru	equ	0xFF8
 36203                           tblptrh	equ	0xFF7
 36204                           tblptrl	equ	0xFF6
 36205                           tablat	equ	0xFF5
 36206                           prodh	equ	0xFF4
 36207                           prodl	equ	0xFF3
 36208                           intcon	equ	0xFF2
 36209                           intcon2	equ	0xFF1
 36210                           intcon3	equ	0xFF0
 36211                           indf0	equ	0xFEF
 36212                           postinc0	equ	0xFEE
 36213                           plusw0	equ	0xFEB
 36214                           fsr0h	equ	0xFEA
 36215                           fsr0l	equ	0xFE9
 36216                           wreg	equ	0xFE8
 36217                           indf1	equ	0xFE7
 36218                           postinc1	equ	0xFE6
 36219                           postdec1	equ	0xFE5
 36220                           plusw1	equ	0xFE3
 36221                           fsr1h	equ	0xFE2
 36222                           fsr1l	equ	0xFE1
 36223                           indf2	equ	0xFDF
 36224                           postinc2	equ	0xFDE
 36225                           postdec2	equ	0xFDD
 36226                           plusw2	equ	0xFDB
 36227                           fsr2h	equ	0xFDA
 36228                           fsr2l	equ	0xFD9
 36229                           status	equ	0xFD8
 36230                           
 36231 ;; *************** function _ReceiveEvt *****************
 36232 ;; Defined at:
 36233 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36234 ;; Parameters:    Size  Location     Type
 36235 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 36236 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 36237 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 36238 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 36239 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 36240 ;;		 -> ActivateRiDetection(1), 
 36241 ;; Auto vars:     Size  Location     Type
 36242 ;;  EventStatus     1   32[BANK0 ] enum E7727
 36243 ;; Return value:  Size  Location     Type
 36244 ;;                  1    wreg      enum E7699
 36245 ;; Registers used:
 36246 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36247 ;; Tracked objects:
 36248 ;;		On entry : 0/0
 36249 ;;		On exit  : 0/0
 36250 ;;		Unchanged: 0/0
 36251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36252 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36253 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36254 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36255 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36256 ;;Total ram usage:        4 bytes
 36257 ;; Hardware stack levels used:    1
 36258 ;; Hardware stack levels required when called:   11
 36259 ;; This function calls:
 36260 ;;		Nothing
 36261 ;; This function is called by:
 36262 ;;		_MdmCntSm
 36263 ;;		_CheckModem
 36264 ;;		_ModemEvtParser
 36265 ;;		_GetSmsSm
 36266 ;;		_SendSmsSm
 36267 ;;		_Mdm_GetSmsData
 36268 ;;		_Mdm_IsSmsReceived
 36269 ;;		_Mdm_IsRinging
 36270 ;;		_GetCallerNumber
 36271 ;;		_InitGprsNetwork
 36272 ;;		_HttpGetMethod
 36273 ;;		_I2cSendMsgSm
 36274 ;;		_I2cSlv_I2cReadMsgSts
 36275 ;;		_RiSm
 36276 ;;		_GsmGprsTerminal
 36277 ;; This function uses a non-reentrant model
 36278 ;;
 36279                           
 36280                           	psect	text171
 36281  006868                     __ptext171:
 36282                           	opt stack 0
 36283  006868                     _ReceiveEvt:
 36284                           	opt stack 13
 36285                           
 36286                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 36287                           
 36288                           ;incstack = 0
 36289  006868  0E00               	movlw	0
 36290  00686A  0100               	movlb	0	; () banked
 36291  00686C  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 36292                           
 36293                           ; BSR set to: 0
 36294                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 36295  00686E  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 36296  006872  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 36297  006876  0E02               	movlw	2
 36298  006878  18DE               	xorwf	postinc2,w,c
 36299  00687A  A4D8               	btfss	status,2,c
 36300  00687C  D008               	goto	l832
 36301                           
 36302                           ; BSR set to: 0
 36303                           ;os_ser.c: 106: {
 36304                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 36305  00687E  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 36306  006882  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 36307  006886  0E01               	movlw	1
 36308  006888  6EDF               	movwf	indf2,c
 36309                           
 36310                           ; BSR set to: 0
 36311                           ;os_ser.c: 110: EventStatus = EventReceived;
 36312  00688A  0E01               	movlw	1
 36313  00688C  D001               	goto	L81
 36314  00688E                     l832:
 36315                           
 36316                           ; BSR set to: 0
 36317                           ;os_ser.c: 112: else
 36318                           ;os_ser.c: 113: {
 36319                           ;os_ser.c: 115: EventStatus = EventIdle;
 36320                           
 36321                           ; BSR set to: 0
 36322  00688E  0E00               	movlw	0
 36323  006890                     L81:
 36324  006890  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 36325                           
 36326                           ; BSR set to: 0
 36327                           ;os_ser.c: 116: }
 36328                           ;os_ser.c: 119: return(EventStatus);
 36329  006892  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 36330  006894  0012               	return	
 36331  006896                     __end_of_ReceiveEvt:
 36332                           	opt stack 0
 36333                           tosu	equ	0xFFF
 36334                           tosh	equ	0xFFE
 36335                           tosl	equ	0xFFD
 36336                           pclath	equ	0xFFA
 36337                           tblptru	equ	0xFF8
 36338                           tblptrh	equ	0xFF7
 36339                           tblptrl	equ	0xFF6
 36340                           tablat	equ	0xFF5
 36341                           prodh	equ	0xFF4
 36342                           prodl	equ	0xFF3
 36343                           intcon	equ	0xFF2
 36344                           intcon2	equ	0xFF1
 36345                           intcon3	equ	0xFF0
 36346                           indf0	equ	0xFEF
 36347                           postinc0	equ	0xFEE
 36348                           plusw0	equ	0xFEB
 36349                           fsr0h	equ	0xFEA
 36350                           fsr0l	equ	0xFE9
 36351                           wreg	equ	0xFE8
 36352                           indf1	equ	0xFE7
 36353                           postinc1	equ	0xFE6
 36354                           postdec1	equ	0xFE5
 36355                           plusw1	equ	0xFE3
 36356                           fsr1h	equ	0xFE2
 36357                           fsr1l	equ	0xFE1
 36358                           indf2	equ	0xFDF
 36359                           postinc2	equ	0xFDE
 36360                           postdec2	equ	0xFDD
 36361                           plusw2	equ	0xFDB
 36362                           fsr2h	equ	0xFDA
 36363                           fsr2l	equ	0xFD9
 36364                           status	equ	0xFD8
 36365                           
 36366 ;; *************** function _I2c_WriteData *****************
 36367 ;; Defined at:
 36368 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36369 ;; Parameters:    Size  Location     Type
 36370 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 36371 ;;		 -> I2cTxPacket(5), 
 36372 ;; Auto vars:     Size  Location     Type
 36373 ;;		None
 36374 ;; Return value:  Size  Location     Type
 36375 ;;                  1    wreg      enum E7740
 36376 ;; Registers used:
 36377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36378 ;; Tracked objects:
 36379 ;;		On entry : 0/0
 36380 ;;		On exit  : 0/0
 36381 ;;		Unchanged: 0/0
 36382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36383 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36385 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36386 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36387 ;;Total ram usage:        4 bytes
 36388 ;; Hardware stack levels used:    1
 36389 ;; Hardware stack levels required when called:   12
 36390 ;; This function calls:
 36391 ;;		_CheckAckStatus
 36392 ;;		_CheckTxStatus
 36393 ;;		_StartCondition
 36394 ;;		_StopCondition
 36395 ;;		_WriteByte
 36396 ;; This function is called by:
 36397 ;;		_I2cSendMsgSm
 36398 ;; This function uses a non-reentrant model
 36399 ;;
 36400                           
 36401                           	psect	text172
 36402  001EB8                     __ptext172:
 36403                           	opt stack 0
 36404  001EB8                     _I2c_WriteData:
 36405                           	opt stack 14
 36406                           
 36407                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 36408                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 36409                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 36410                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 36411                           ;i2c_drv.c: 260: switch (I2cWriteState)
 36412                           
 36413                           ; BSR set to: 0
 36414                           ;incstack = 0
 36415  001EB8  D095               	goto	l160
 36416  001EBA                     
 36417                           ;i2c_drv.c: 264: StartCondition();
 36418  001EBA  ECF7  F036         	call	_StartCondition	;wreg free
 36419                           
 36420                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 36421  001EBE  0E00               	movlw	0
 36422  001EC0  6E35               	movwf	I2c_WriteData@WriteStatus,c
 36423                           
 36424                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 36425  001EC2  0E01               	movlw	1
 36426  001EC4  D084               	goto	L88
 36427  001EC6                     
 36428                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 36429  001EC6  0100               	movlb	0	; () banked
 36430  001EC8  EE20 F001          	lfsr	2,1
 36431  001ECC  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36432  001ECE  26D9               	addwf	fsr2l,f,c
 36433  001ED0  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36434  001ED2  22DA               	addwfc	fsr2h,f,c
 36435  001ED4  50DF               	movf	indf2,w,c
 36436  001ED6  6F80               	movwf	??_I2c_WriteData& (0+255),b
 36437  001ED8  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 36438  001EDC  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 36439  001EE0  50DF               	movf	indf2,w,c
 36440  001EE2  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 36441  001EE4  90D8               	bcf	status,0,c
 36442  001EE6  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 36443  001EE8  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 36444  001EEA  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 36445  001EEE  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 36446  001EF2  6EDF               	movwf	indf2,c
 36447                           
 36448                           ; BSR set to: 0
 36449                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 36450  001EF4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 36451  001EF8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 36452  001EFC  50DF               	movf	indf2,w,c
 36453  001EFE  ECD5  F036         	call	_WriteByte
 36454                           
 36455                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 36456  001F02  0E02               	movlw	2
 36457  001F04  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36458  001F06                     
 36459                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 36460  001F06  ECDF  F036         	call	_CheckTxStatus	;wreg free
 36461  001F0A  0900               	iorlw	0
 36462  001F0C  A4D8               	btfss	status,2,c
 36463  001F0E  D089               	goto	l162
 36464                           
 36465                           ;i2c_drv.c: 282: {
 36466                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 36467  001F10  0E03               	movlw	3
 36468  001F12  D01A               	goto	L90
 36469  001F14                     
 36470                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 36471  001F14  0100               	movlb	0	; () banked
 36472  001F16  EE20 F002          	lfsr	2,2
 36473  001F1A  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36474  001F1C  26D9               	addwf	fsr2l,f,c
 36475  001F1E  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36476  001F20  22DA               	addwfc	fsr2h,f,c
 36477  001F22  CFDE F080          	movff	postinc2,??_I2c_WriteData
 36478  001F26  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 36479  001F2A  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 36480  001F2E  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 36481  001F32  50DF               	movf	indf2,w,c
 36482  001F34  ECD5  F036         	call	_WriteByte
 36483                           
 36484                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 36485  001F38  0E04               	movlw	4
 36486  001F3A  D049               	goto	L88
 36487  001F3C                     
 36488                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 36489  001F3C  ECDF  F036         	call	_CheckTxStatus	;wreg free
 36490  001F40  0900               	iorlw	0
 36491  001F42  A4D8               	btfss	status,2,c
 36492  001F44  D06E               	goto	l162
 36493                           
 36494                           ;i2c_drv.c: 300: {
 36495                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 36496  001F46  0E05               	movlw	5
 36497  001F48                     L90:
 36498  001F48  6E37               	movwf	I2c_WriteData@I2cNextState,c
 36499                           
 36500                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 36501  001F4A  0E08               	movlw	8
 36502  001F4C  D040               	goto	L88
 36503  001F4E                     
 36504                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 36505  001F4E  0100               	movlb	0	; () banked
 36506  001F50  EE20 F004          	lfsr	2,4
 36507  001F54  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36508  001F56  26D9               	addwf	fsr2l,f,c
 36509  001F58  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36510  001F5A  22DA               	addwfc	fsr2h,f,c
 36511  001F5C  50DF               	movf	indf2,w,c
 36512  001F5E  B4D8               	btfsc	status,2,c
 36513  001F60  D010               	goto	l170
 36514                           
 36515                           ; BSR set to: 0
 36516                           ;i2c_drv.c: 310: {
 36517                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 36518  001F62  EE20 F004          	lfsr	2,4
 36519  001F66  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36520  001F68  26D9               	addwf	fsr2l,f,c
 36521  001F6A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36522  001F6C  22DA               	addwfc	fsr2h,f,c
 36523  001F6E  06DF               	decf	indf2,f,c
 36524                           
 36525                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 36526  001F70  EE20 F002          	lfsr	2,2
 36527  001F74  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36528  001F76  26D9               	addwf	fsr2l,f,c
 36529  001F78  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36530  001F7A  22DA               	addwfc	fsr2h,f,c
 36531  001F7C  2ADE               	incf	postinc2,f,c
 36532  001F7E  0E00               	movlw	0
 36533  001F80  22DD               	addwfc	postdec2,f,c
 36534  001F82                     l170:
 36535                           
 36536                           ; BSR set to: 0
 36537                           ;i2c_drv.c: 315: }
 36538                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 36539  001F82  EE20 F004          	lfsr	2,4
 36540  001F86  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36541  001F88  26D9               	addwf	fsr2l,f,c
 36542  001F8A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36543  001F8C  22DA               	addwfc	fsr2h,f,c
 36544  001F8E  50DF               	movf	indf2,w,c
 36545  001F90  A4D8               	btfss	status,2,c
 36546  001F92  D002               	goto	l171
 36547                           
 36548                           ; BSR set to: 0
 36549                           ;i2c_drv.c: 319: {
 36550                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 36551  001F94  0E06               	movlw	6
 36552  001F96  D01B               	goto	L88
 36553  001F98                     l171:
 36554                           
 36555                           ; BSR set to: 0
 36556                           ;i2c_drv.c: 323: else
 36557                           ;i2c_drv.c: 324: {
 36558                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 36559                           
 36560                           ; BSR set to: 0
 36561  001F98  0E03               	movlw	3
 36562  001F9A  D019               	goto	L88
 36563  001F9C                     
 36564                           ;i2c_drv.c: 332: StopCondition();
 36565                           
 36566                           ; BSR set to: 0
 36567  001F9C  ECF5  F036         	call	_StopCondition	;wreg free
 36568                           
 36569                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 36570  001FA0  0E07               	movlw	7
 36571  001FA2  D015               	goto	L88
 36572  001FA4                     
 36573                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 36574  001FA4  0E00               	movlw	0
 36575  001FA6  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36576                           
 36577                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 36578  001FA8  0E00               	movlw	0
 36579  001FAA  6E37               	movwf	I2c_WriteData@I2cNextState,c
 36580                           
 36581                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 36582  001FAC  0E02               	movlw	2
 36583  001FAE  D018               	goto	L89
 36584  001FB0                     
 36585                           ;i2c_drv.c: 347: TentativeCounter++;
 36586  001FB0  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 36587                           
 36588                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 36589  001FB2  ECE4  F036         	call	_CheckAckStatus	;wreg free
 36590  001FB6  0900               	iorlw	0
 36591  001FB8  A4D8               	btfss	status,2,c
 36592  001FBA  D005               	goto	l176
 36593                           
 36594                           ;i2c_drv.c: 350: {
 36595                           ;i2c_drv.c: 352: TentativeCounter = 0;
 36596  001FBC  0E00               	movlw	0
 36597  001FBE  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 36598                           
 36599                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 36600  001FC0  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 36601                           
 36602                           ;i2c_drv.c: 355: }
 36603  001FC4  D02E               	goto	l162
 36604  001FC6                     l176:
 36605                           
 36606                           ;i2c_drv.c: 356: else
 36607                           ;i2c_drv.c: 357: {
 36608                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 36609  001FC6  0E02               	movlw	2
 36610  001FC8  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 36611  001FCA  D02B               	goto	l162
 36612                           
 36613                           ;i2c_drv.c: 360: {
 36614                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 36615  001FCC  0E09               	movlw	9
 36616  001FCE                     L88:
 36617  001FCE  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36618                           
 36619                           ;i2c_drv.c: 363: }
 36620                           ;i2c_drv.c: 364: }
 36621                           ;i2c_drv.c: 365: break;
 36622  001FD0  D028               	goto	l162
 36623  001FD2                     
 36624                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 36625  001FD2  0E00               	movlw	0
 36626  001FD4  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36627                           
 36628                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 36629  001FD6  0E00               	movlw	0
 36630  001FD8  6E37               	movwf	I2c_WriteData@I2cNextState,c
 36631                           
 36632                           ;i2c_drv.c: 372: TentativeCounter = 0;
 36633  001FDA  0E00               	movlw	0
 36634  001FDC  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 36635                           
 36636                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 36637  001FDE  0E01               	movlw	1
 36638  001FE0                     L89:
 36639  001FE0  6E35               	movwf	I2c_WriteData@WriteStatus,c
 36640                           
 36641                           ;i2c_drv.c: 379: }
 36642                           
 36643                           ;i2c_drv.c: 378: break;
 36644                           
 36645                           ;i2c_drv.c: 377: default:
 36646                           
 36647                           ;i2c_drv.c: 375: break;
 36648  001FE2  D01F               	goto	l162
 36649  001FE4                     l160:
 36650  001FE4  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 36651                           
 36652                           ; Switch size 1, requested type "space"
 36653                           ; Number of cases is 10, Range of values is 0 to 9
 36654                           ; switch strategies available:
 36655                           ; Name         Instructions Cycles
 36656                           ; simple_byte           31    16 (average)
 36657                           ;	Chosen strategy is simple_byte
 36658  001FE6  0A00               	xorlw	0	; case 0
 36659  001FE8  B4D8               	btfsc	status,2,c
 36660  001FEA  D767               	goto	l161
 36661  001FEC  0A01               	xorlw	1	; case 1
 36662  001FEE  B4D8               	btfsc	status,2,c
 36663  001FF0  D76A               	goto	l163
 36664  001FF2  0A03               	xorlw	3	; case 2
 36665  001FF4  B4D8               	btfsc	status,2,c
 36666  001FF6  D787               	goto	l164
 36667  001FF8  0A01               	xorlw	1	; case 3
 36668  001FFA  B4D8               	btfsc	status,2,c
 36669  001FFC  D78B               	goto	l166
 36670  001FFE  0A07               	xorlw	7	; case 4
 36671  002000  B4D8               	btfsc	status,2,c
 36672  002002  D79C               	goto	l167
 36673  002004  0A01               	xorlw	1	; case 5
 36674  002006  B4D8               	btfsc	status,2,c
 36675  002008  D7A2               	goto	l169
 36676  00200A  0A03               	xorlw	3	; case 6
 36677  00200C  B4D8               	btfsc	status,2,c
 36678  00200E  D7C6               	goto	l173
 36679  002010  0A01               	xorlw	1	; case 7
 36680  002012  B4D8               	btfsc	status,2,c
 36681  002014  D7C7               	goto	l174
 36682  002016  0A0F               	xorlw	15	; case 8
 36683  002018  B4D8               	btfsc	status,2,c
 36684  00201A  D7CA               	goto	l175
 36685  00201C  0A01               	xorlw	1	; case 9
 36686  00201E  B4D8               	btfsc	status,2,c
 36687  002020  D7D8               	goto	l179
 36688  002022                     l162:
 36689                           
 36690                           ;i2c_drv.c: 382: return WriteStatus;
 36691  002022  5035               	movf	I2c_WriteData@WriteStatus,w,c
 36692  002024  0012               	return	
 36693  002026                     __end_of_I2c_WriteData:
 36694                           	opt stack 0
 36695                           tosu	equ	0xFFF
 36696                           tosh	equ	0xFFE
 36697                           tosl	equ	0xFFD
 36698                           pclath	equ	0xFFA
 36699                           tblptru	equ	0xFF8
 36700                           tblptrh	equ	0xFF7
 36701                           tblptrl	equ	0xFF6
 36702                           tablat	equ	0xFF5
 36703                           prodh	equ	0xFF4
 36704                           prodl	equ	0xFF3
 36705                           intcon	equ	0xFF2
 36706                           intcon2	equ	0xFF1
 36707                           intcon3	equ	0xFF0
 36708                           indf0	equ	0xFEF
 36709                           postinc0	equ	0xFEE
 36710                           plusw0	equ	0xFEB
 36711                           fsr0h	equ	0xFEA
 36712                           fsr0l	equ	0xFE9
 36713                           wreg	equ	0xFE8
 36714                           indf1	equ	0xFE7
 36715                           postinc1	equ	0xFE6
 36716                           postdec1	equ	0xFE5
 36717                           plusw1	equ	0xFE3
 36718                           fsr1h	equ	0xFE2
 36719                           fsr1l	equ	0xFE1
 36720                           indf2	equ	0xFDF
 36721                           postinc2	equ	0xFDE
 36722                           postdec2	equ	0xFDD
 36723                           plusw2	equ	0xFDB
 36724                           fsr2h	equ	0xFDA
 36725                           fsr2l	equ	0xFD9
 36726                           status	equ	0xFD8
 36727                           
 36728 ;; *************** function _I2c_ReadData *****************
 36729 ;; Defined at:
 36730 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36731 ;; Parameters:    Size  Location     Type
 36732 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 36733 ;;		 -> I2cRxPacket(6), 
 36734 ;; Auto vars:     Size  Location     Type
 36735 ;;		None
 36736 ;; Return value:  Size  Location     Type
 36737 ;;                  1    wreg      enum E7787
 36738 ;; Registers used:
 36739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36740 ;; Tracked objects:
 36741 ;;		On entry : 0/0
 36742 ;;		On exit  : 0/0
 36743 ;;		Unchanged: 0/0
 36744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36745 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36747 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36748 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36749 ;;Total ram usage:        4 bytes
 36750 ;; Hardware stack levels used:    1
 36751 ;; Hardware stack levels required when called:   12
 36752 ;; This function calls:
 36753 ;;		_CheckAckStatus
 36754 ;;		_CheckTxStatus
 36755 ;;		_EnableReceiver
 36756 ;;		_GenerateEvt
 36757 ;;		_ReadByte
 36758 ;;		_SetAckStatus
 36759 ;;		_StartCondition
 36760 ;;		_StopCondition
 36761 ;;		_WriteByte
 36762 ;; This function is called by:
 36763 ;;		_I2cSendMsgSm
 36764 ;; This function uses a non-reentrant model
 36765 ;;
 36766                           
 36767                           	psect	text173
 36768  002186                     __ptext173:
 36769                           	opt stack 0
 36770  002186                     _I2c_ReadData:
 36771                           	opt stack 14
 36772                           
 36773                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 36774                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 36775                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 36776                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 36777                           ;i2c_drv.c: 402: switch (I2cReadState)
 36778                           
 36779                           ;incstack = 0
 36780  002186  D090               	goto	l192
 36781  002188                     
 36782                           ;i2c_drv.c: 406: StartCondition();
 36783  002188  ECF7  F036         	call	_StartCondition	;wreg free
 36784                           
 36785                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 36786  00218C  0E00               	movlw	0
 36787  00218E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36788                           
 36789                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 36790  002190  0E01               	movlw	1
 36791  002192  D083               	goto	L98
 36792  002194                     
 36793                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 36794  002194  0100               	movlb	0	; () banked
 36795  002196  EE20 F001          	lfsr	2,1
 36796  00219A  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36797  00219C  26D9               	addwf	fsr2l,f,c
 36798  00219E  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36799  0021A0  22DA               	addwfc	fsr2h,f,c
 36800  0021A2  50DF               	movf	indf2,w,c
 36801  0021A4  6F82               	movwf	??_I2c_ReadData& (0+255),b
 36802  0021A6  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 36803  0021AA  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 36804  0021AE  50DF               	movf	indf2,w,c
 36805  0021B0  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 36806  0021B2  90D8               	bcf	status,0,c
 36807  0021B4  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 36808  0021B6  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 36809  0021B8  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 36810  0021BC  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 36811  0021C0  6EDF               	movwf	indf2,c
 36812                           
 36813                           ; BSR set to: 0
 36814                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 36815  0021C2  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 36816  0021C6  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 36817  0021CA  50DF               	movf	indf2,w,c
 36818  0021CC  ECD5  F036         	call	_WriteByte
 36819                           
 36820                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 36821  0021D0  0E02               	movlw	2
 36822  0021D2  D063               	goto	L98
 36823  0021D4                     
 36824                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 36825  0021D4  ECDF  F036         	call	_CheckTxStatus	;wreg free
 36826  0021D8  0900               	iorlw	0
 36827  0021DA  A4D8               	btfss	status,2,c
 36828  0021DC  D081               	goto	l194
 36829                           
 36830                           ;i2c_drv.c: 425: {
 36831                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 36832  0021DE  0E03               	movlw	3
 36833  0021E0  D05C               	goto	L98
 36834  0021E2                     
 36835                           ;i2c_drv.c: 433: TentativeCounter++;
 36836  0021E2  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 36837                           
 36838                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 36839  0021E4  ECE4  F036         	call	_CheckAckStatus	;wreg free
 36840  0021E8  0900               	iorlw	0
 36841  0021EA  A4D8               	btfss	status,2,c
 36842  0021EC  D004               	goto	l199
 36843                           
 36844                           ;i2c_drv.c: 436: {
 36845                           ;i2c_drv.c: 438: TentativeCounter = 0;
 36846  0021EE  0E00               	movlw	0
 36847  0021F0  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 36848  0021F2                     
 36849                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 36850  0021F2  0E04               	movlw	4
 36851  0021F4  D052               	goto	L98
 36852  0021F6                     l199:
 36853                           
 36854                           ;i2c_drv.c: 442: else
 36855                           ;i2c_drv.c: 443: {
 36856                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 36857  0021F6  0E02               	movlw	2
 36858  0021F8  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 36859  0021FA  D072               	goto	l194
 36860                           
 36861                           ;i2c_drv.c: 446: {
 36862                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 36863  0021FC  0E08               	movlw	8
 36864  0021FE  D04D               	goto	L98
 36865  002200                     
 36866                           ;i2c_drv.c: 455: EnableReceiver();
 36867  002200  ECF9  F036         	call	_EnableReceiver	;wreg free
 36868                           
 36869                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 36870  002204  0E05               	movlw	5
 36871  002206  D049               	goto	L98
 36872  002208                     
 36873                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 36874  002208  ECDF  F036         	call	_CheckTxStatus	;wreg free
 36875  00220C  0900               	iorlw	0
 36876  00220E  A4D8               	btfss	status,2,c
 36877  002210  D067               	goto	l194
 36878                           
 36879                           ;i2c_drv.c: 463: {
 36880                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 36881  002212  0100               	movlb	0	; () banked
 36882  002214  EE20 F002          	lfsr	2,2
 36883  002218  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36884  00221A  26D9               	addwf	fsr2l,f,c
 36885  00221C  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36886  00221E  22DA               	addwfc	fsr2h,f,c
 36887  002220  CFDE F082          	movff	postinc2,??_I2c_ReadData
 36888  002224  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 36889  002228  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 36890  00222C  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 36891  002230  ECDA  F036         	call	_ReadByte	;wreg free
 36892  002234  6EDF               	movwf	indf2,c
 36893                           
 36894                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 36895  002236  0100               	movlb	0	; () banked
 36896  002238  EE20 F002          	lfsr	2,2
 36897  00223C  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36898  00223E  26D9               	addwf	fsr2l,f,c
 36899  002240  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36900  002242  22DA               	addwfc	fsr2h,f,c
 36901  002244  2ADE               	incf	postinc2,f,c
 36902  002246  0E00               	movlw	0
 36903  002248  22DD               	addwfc	postdec2,f,c
 36904                           
 36905                           ; BSR set to: 0
 36906                           ;i2c_drv.c: 469: DataCounter++;
 36907  00224A  2A33               	incf	I2c_ReadData@DataCounter,f,c
 36908                           
 36909                           ; BSR set to: 0
 36910                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 36911  00224C  0E06               	movlw	6
 36912  00224E  D025               	goto	L98
 36913  002250                     
 36914                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 36915                           
 36916                           ; BSR set to: 0
 36917  002250  0100               	movlb	0	; () banked
 36918  002252  EE20 F004          	lfsr	2,4
 36919  002256  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36920  002258  26D9               	addwf	fsr2l,f,c
 36921  00225A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36922  00225C  22DA               	addwfc	fsr2h,f,c
 36923  00225E  50DE               	movf	postinc2,w,c
 36924  002260  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 36925  002262  A0D8               	btfss	status,0,c
 36926  002264  D008               	goto	l206
 36927                           
 36928                           ; BSR set to: 0
 36929                           ;i2c_drv.c: 478: {
 36930                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 36931  002266  0E01               	movlw	1
 36932  002268  EC5D  F036         	call	_SetAckStatus
 36933                           
 36934                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 36935  00226C  0E07               	movlw	7
 36936  00226E  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36937                           
 36938                           ;i2c_drv.c: 484: DataCounter = 0;
 36939  002270  0E00               	movlw	0
 36940  002272  6E33               	movwf	I2c_ReadData@DataCounter,c
 36941                           
 36942                           ;i2c_drv.c: 485: }
 36943  002274  D035               	goto	l194
 36944  002276                     l206:
 36945                           
 36946                           ;i2c_drv.c: 486: else
 36947                           ;i2c_drv.c: 487: {
 36948                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 36949  002276  0E00               	movlw	0
 36950  002278  EC5D  F036         	call	_SetAckStatus
 36951  00227C  D7BA               	goto	L99
 36952  00227E                     
 36953                           ;i2c_drv.c: 497: StopCondition();
 36954  00227E  ECF5  F036         	call	_StopCondition	;wreg free
 36955                           
 36956                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 36957  002282  0E02               	movlw	2
 36958  002284  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36959                           
 36960                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 36961  002286  0E05               	movlw	5
 36962  002288  0100               	movlb	0	; () banked
 36963  00228A  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 36964  00228C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 36965  00228E  0E00               	movlw	0
 36966  002290  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36967  002292  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 36968  002294  EC25  F036         	call	_GenerateEvt	;wreg free
 36969                           
 36970                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 36971  002298  0E00               	movlw	0
 36972  00229A                     L98:
 36973  00229A  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36974                           
 36975                           ;i2c_drv.c: 504: break;
 36976  00229C  D021               	goto	l194
 36977  00229E                     
 36978                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 36979  00229E  0E00               	movlw	0
 36980  0022A0  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36981                           
 36982                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 36983  0022A2  0E01               	movlw	1
 36984  0022A4  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36985                           
 36986                           ;i2c_drv.c: 515: }
 36987                           
 36988                           ;i2c_drv.c: 514: break;
 36989                           
 36990                           ;i2c_drv.c: 513: default:
 36991                           
 36992                           ;i2c_drv.c: 511: break;
 36993  0022A6  D01C               	goto	l194
 36994  0022A8                     l192:
 36995  0022A8  5034               	movf	I2c_ReadData@I2cReadState,w,c
 36996                           
 36997                           ; Switch size 1, requested type "space"
 36998                           ; Number of cases is 9, Range of values is 0 to 8
 36999                           ; switch strategies available:
 37000                           ; Name         Instructions Cycles
 37001                           ; simple_byte           28    15 (average)
 37002                           ;	Chosen strategy is simple_byte
 37003  0022AA  0A00               	xorlw	0	; case 0
 37004  0022AC  B4D8               	btfsc	status,2,c
 37005  0022AE  D76C               	goto	l193
 37006  0022B0  0A01               	xorlw	1	; case 1
 37007  0022B2  B4D8               	btfsc	status,2,c
 37008  0022B4  D76F               	goto	l195
 37009  0022B6  0A03               	xorlw	3	; case 2
 37010  0022B8  B4D8               	btfsc	status,2,c
 37011  0022BA  D78C               	goto	l196
 37012  0022BC  0A01               	xorlw	1	; case 3
 37013  0022BE  B4D8               	btfsc	status,2,c
 37014  0022C0  D790               	goto	l198
 37015  0022C2  0A07               	xorlw	7	; case 4
 37016  0022C4  B4D8               	btfsc	status,2,c
 37017  0022C6  D79C               	goto	l202
 37018  0022C8  0A01               	xorlw	1	; case 5
 37019  0022CA  B4D8               	btfsc	status,2,c
 37020  0022CC  D79D               	goto	l203
 37021  0022CE  0A03               	xorlw	3	; case 6
 37022  0022D0  B4D8               	btfsc	status,2,c
 37023  0022D2  D7BE               	goto	l205
 37024  0022D4  0A01               	xorlw	1	; case 7
 37025  0022D6  B4D8               	btfsc	status,2,c
 37026  0022D8  D7D2               	goto	l208
 37027  0022DA  0A0F               	xorlw	15	; case 8
 37028  0022DC  B4D8               	btfsc	status,2,c
 37029  0022DE  D7DF               	goto	l209
 37030  0022E0                     l194:
 37031                           
 37032                           ;i2c_drv.c: 518: return ReadStatus;
 37033  0022E0  5031               	movf	I2c_ReadData@ReadStatus,w,c
 37034  0022E2  0012               	return	
 37035  0022E4                     __end_of_I2c_ReadData:
 37036                           	opt stack 0
 37037                           tosu	equ	0xFFF
 37038                           tosh	equ	0xFFE
 37039                           tosl	equ	0xFFD
 37040                           pclath	equ	0xFFA
 37041                           tblptru	equ	0xFF8
 37042                           tblptrh	equ	0xFF7
 37043                           tblptrl	equ	0xFF6
 37044                           tablat	equ	0xFF5
 37045                           prodh	equ	0xFF4
 37046                           prodl	equ	0xFF3
 37047                           intcon	equ	0xFF2
 37048                           intcon2	equ	0xFF1
 37049                           intcon3	equ	0xFF0
 37050                           indf0	equ	0xFEF
 37051                           postinc0	equ	0xFEE
 37052                           plusw0	equ	0xFEB
 37053                           fsr0h	equ	0xFEA
 37054                           fsr0l	equ	0xFE9
 37055                           wreg	equ	0xFE8
 37056                           indf1	equ	0xFE7
 37057                           postinc1	equ	0xFE6
 37058                           postdec1	equ	0xFE5
 37059                           plusw1	equ	0xFE3
 37060                           fsr1h	equ	0xFE2
 37061                           fsr1l	equ	0xFE1
 37062                           indf2	equ	0xFDF
 37063                           postinc2	equ	0xFDE
 37064                           postdec2	equ	0xFDD
 37065                           plusw2	equ	0xFDB
 37066                           fsr2h	equ	0xFDA
 37067                           fsr2l	equ	0xFD9
 37068                           status	equ	0xFD8
 37069                           
 37070 ;; *************** function _WriteByte *****************
 37071 ;; Defined at:
 37072 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37073 ;; Parameters:    Size  Location     Type
 37074 ;;  Byte            1    wreg     unsigned char 
 37075 ;; Auto vars:     Size  Location     Type
 37076 ;;  Byte            1   29[BANK0 ] unsigned char 
 37077 ;; Return value:  Size  Location     Type
 37078 ;;                  1    wreg      void 
 37079 ;; Registers used:
 37080 ;;		wreg
 37081 ;; Tracked objects:
 37082 ;;		On entry : 0/0
 37083 ;;		On exit  : 0/0
 37084 ;;		Unchanged: 0/0
 37085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37089 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37090 ;;Total ram usage:        1 bytes
 37091 ;; Hardware stack levels used:    1
 37092 ;; Hardware stack levels required when called:   11
 37093 ;; This function calls:
 37094 ;;		Nothing
 37095 ;; This function is called by:
 37096 ;;		_I2c_WriteData
 37097 ;;		_I2c_ReadData
 37098 ;; This function uses a non-reentrant model
 37099 ;;
 37100                           
 37101                           	psect	text174
 37102  006DAA                     __ptext174:
 37103                           	opt stack 0
 37104  006DAA                     _WriteByte:
 37105                           	opt stack 14
 37106                           
 37107                           ;incstack = 0
 37108                           ;WriteByte@Byte stored from wreg
 37109  006DAA  0100               	movlb	0	; () banked
 37110  006DAC  6F7D               	movwf	WriteByte@Byte& (0+255),b
 37111                           
 37112                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 37113  006DAE  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 37114  006DB2  0012               	return		;funcret
 37115  006DB4                     __end_of_WriteByte:
 37116                           	opt stack 0
 37117                           tosu	equ	0xFFF
 37118                           tosh	equ	0xFFE
 37119                           tosl	equ	0xFFD
 37120                           pclath	equ	0xFFA
 37121                           tblptru	equ	0xFF8
 37122                           tblptrh	equ	0xFF7
 37123                           tblptrl	equ	0xFF6
 37124                           tablat	equ	0xFF5
 37125                           prodh	equ	0xFF4
 37126                           prodl	equ	0xFF3
 37127                           intcon	equ	0xFF2
 37128                           intcon2	equ	0xFF1
 37129                           intcon3	equ	0xFF0
 37130                           indf0	equ	0xFEF
 37131                           postinc0	equ	0xFEE
 37132                           plusw0	equ	0xFEB
 37133                           fsr0h	equ	0xFEA
 37134                           fsr0l	equ	0xFE9
 37135                           wreg	equ	0xFE8
 37136                           indf1	equ	0xFE7
 37137                           postinc1	equ	0xFE6
 37138                           postdec1	equ	0xFE5
 37139                           plusw1	equ	0xFE3
 37140                           fsr1h	equ	0xFE2
 37141                           fsr1l	equ	0xFE1
 37142                           indf2	equ	0xFDF
 37143                           postinc2	equ	0xFDE
 37144                           postdec2	equ	0xFDD
 37145                           plusw2	equ	0xFDB
 37146                           fsr2h	equ	0xFDA
 37147                           fsr2l	equ	0xFD9
 37148                           status	equ	0xFD8
 37149                           
 37150 ;; *************** function _StopCondition *****************
 37151 ;; Defined at:
 37152 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37153 ;; Parameters:    Size  Location     Type
 37154 ;;		None
 37155 ;; Auto vars:     Size  Location     Type
 37156 ;;		None
 37157 ;; Return value:  Size  Location     Type
 37158 ;;                  1    wreg      void 
 37159 ;; Registers used:
 37160 ;;		status,2, status,0
 37161 ;; Tracked objects:
 37162 ;;		On entry : 0/0
 37163 ;;		On exit  : 0/0
 37164 ;;		Unchanged: 0/0
 37165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37170 ;;Total ram usage:        0 bytes
 37171 ;; Hardware stack levels used:    1
 37172 ;; Hardware stack levels required when called:   11
 37173 ;; This function calls:
 37174 ;;		Nothing
 37175 ;; This function is called by:
 37176 ;;		_I2c_WriteData
 37177 ;;		_I2c_ReadData
 37178 ;; This function uses a non-reentrant model
 37179 ;;
 37180                           
 37181                           	psect	text175
 37182  006DEA                     __ptext175:
 37183                           	opt stack 0
 37184  006DEA                     _StopCondition:
 37185                           	opt stack 14
 37186                           
 37187                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 37188                           
 37189                           ;incstack = 0
 37190  006DEA  8471               	bsf	3953,2,c	;volatile
 37191  006DEC  0012               	return		;funcret
 37192  006DEE                     __end_of_StopCondition:
 37193                           	opt stack 0
 37194                           tosu	equ	0xFFF
 37195                           tosh	equ	0xFFE
 37196                           tosl	equ	0xFFD
 37197                           pclath	equ	0xFFA
 37198                           tblptru	equ	0xFF8
 37199                           tblptrh	equ	0xFF7
 37200                           tblptrl	equ	0xFF6
 37201                           tablat	equ	0xFF5
 37202                           prodh	equ	0xFF4
 37203                           prodl	equ	0xFF3
 37204                           intcon	equ	0xFF2
 37205                           intcon2	equ	0xFF1
 37206                           intcon3	equ	0xFF0
 37207                           indf0	equ	0xFEF
 37208                           postinc0	equ	0xFEE
 37209                           plusw0	equ	0xFEB
 37210                           fsr0h	equ	0xFEA
 37211                           fsr0l	equ	0xFE9
 37212                           wreg	equ	0xFE8
 37213                           indf1	equ	0xFE7
 37214                           postinc1	equ	0xFE6
 37215                           postdec1	equ	0xFE5
 37216                           plusw1	equ	0xFE3
 37217                           fsr1h	equ	0xFE2
 37218                           fsr1l	equ	0xFE1
 37219                           indf2	equ	0xFDF
 37220                           postinc2	equ	0xFDE
 37221                           postdec2	equ	0xFDD
 37222                           plusw2	equ	0xFDB
 37223                           fsr2h	equ	0xFDA
 37224                           fsr2l	equ	0xFD9
 37225                           status	equ	0xFD8
 37226                           
 37227 ;; *************** function _StartCondition *****************
 37228 ;; Defined at:
 37229 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37230 ;; Parameters:    Size  Location     Type
 37231 ;;		None
 37232 ;; Auto vars:     Size  Location     Type
 37233 ;;		None
 37234 ;; Return value:  Size  Location     Type
 37235 ;;                  1    wreg      void 
 37236 ;; Registers used:
 37237 ;;		status,2, status,0
 37238 ;; Tracked objects:
 37239 ;;		On entry : 0/0
 37240 ;;		On exit  : 0/0
 37241 ;;		Unchanged: 0/0
 37242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37247 ;;Total ram usage:        0 bytes
 37248 ;; Hardware stack levels used:    1
 37249 ;; Hardware stack levels required when called:   11
 37250 ;; This function calls:
 37251 ;;		Nothing
 37252 ;; This function is called by:
 37253 ;;		_I2c_WriteData
 37254 ;;		_I2c_ReadData
 37255 ;; This function uses a non-reentrant model
 37256 ;;
 37257                           
 37258                           	psect	text176
 37259  006DEE                     __ptext176:
 37260                           	opt stack 0
 37261  006DEE                     _StartCondition:
 37262                           	opt stack 14
 37263                           
 37264                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 37265                           
 37266                           ;incstack = 0
 37267  006DEE  8071               	bsf	3953,0,c	;volatile
 37268  006DF0  0012               	return		;funcret
 37269  006DF2                     __end_of_StartCondition:
 37270                           	opt stack 0
 37271                           tosu	equ	0xFFF
 37272                           tosh	equ	0xFFE
 37273                           tosl	equ	0xFFD
 37274                           pclath	equ	0xFFA
 37275                           tblptru	equ	0xFF8
 37276                           tblptrh	equ	0xFF7
 37277                           tblptrl	equ	0xFF6
 37278                           tablat	equ	0xFF5
 37279                           prodh	equ	0xFF4
 37280                           prodl	equ	0xFF3
 37281                           intcon	equ	0xFF2
 37282                           intcon2	equ	0xFF1
 37283                           intcon3	equ	0xFF0
 37284                           indf0	equ	0xFEF
 37285                           postinc0	equ	0xFEE
 37286                           plusw0	equ	0xFEB
 37287                           fsr0h	equ	0xFEA
 37288                           fsr0l	equ	0xFE9
 37289                           wreg	equ	0xFE8
 37290                           indf1	equ	0xFE7
 37291                           postinc1	equ	0xFE6
 37292                           postdec1	equ	0xFE5
 37293                           plusw1	equ	0xFE3
 37294                           fsr1h	equ	0xFE2
 37295                           fsr1l	equ	0xFE1
 37296                           indf2	equ	0xFDF
 37297                           postinc2	equ	0xFDE
 37298                           postdec2	equ	0xFDD
 37299                           plusw2	equ	0xFDB
 37300                           fsr2h	equ	0xFDA
 37301                           fsr2l	equ	0xFD9
 37302                           status	equ	0xFD8
 37303                           
 37304 ;; *************** function _SetAckStatus *****************
 37305 ;; Defined at:
 37306 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37307 ;; Parameters:    Size  Location     Type
 37308 ;;  AckSts          1    wreg     unsigned char 
 37309 ;; Auto vars:     Size  Location     Type
 37310 ;;  AckSts          1   29[BANK0 ] unsigned char 
 37311 ;; Return value:  Size  Location     Type
 37312 ;;                  1    wreg      void 
 37313 ;; Registers used:
 37314 ;;		wreg
 37315 ;; Tracked objects:
 37316 ;;		On entry : 0/0
 37317 ;;		On exit  : 0/0
 37318 ;;		Unchanged: 0/0
 37319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37323 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37324 ;;Total ram usage:        1 bytes
 37325 ;; Hardware stack levels used:    1
 37326 ;; Hardware stack levels required when called:   11
 37327 ;; This function calls:
 37328 ;;		Nothing
 37329 ;; This function is called by:
 37330 ;;		_I2c_ReadData
 37331 ;; This function uses a non-reentrant model
 37332 ;;
 37333                           
 37334                           	psect	text177
 37335  006CBA                     __ptext177:
 37336                           	opt stack 0
 37337  006CBA                     _SetAckStatus:
 37338                           	opt stack 14
 37339                           
 37340                           ;incstack = 0
 37341                           ;SetAckStatus@AckSts stored from wreg
 37342  006CBA  0100               	movlb	0	; () banked
 37343  006CBC  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 37344                           
 37345                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 37346  006CBE  0100               	movlb	0	; () banked
 37347  006CC0  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 37348  006CC2  D002               	bra	u12885
 37349  006CC4  9A71               	bcf	3953,5,c	;volatile
 37350  006CC6  D001               	bra	u12886
 37351  006CC8                     u12885:
 37352  006CC8  8A71               	bsf	3953,5,c	;volatile
 37353  006CCA                     u12886:
 37354                           
 37355                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 37356  006CCA  8871               	bsf	3953,4,c	;volatile
 37357  006CCC  0012               	return		;funcret
 37358  006CCE                     __end_of_SetAckStatus:
 37359                           	opt stack 0
 37360                           tosu	equ	0xFFF
 37361                           tosh	equ	0xFFE
 37362                           tosl	equ	0xFFD
 37363                           pclath	equ	0xFFA
 37364                           tblptru	equ	0xFF8
 37365                           tblptrh	equ	0xFF7
 37366                           tblptrl	equ	0xFF6
 37367                           tablat	equ	0xFF5
 37368                           prodh	equ	0xFF4
 37369                           prodl	equ	0xFF3
 37370                           intcon	equ	0xFF2
 37371                           intcon2	equ	0xFF1
 37372                           intcon3	equ	0xFF0
 37373                           indf0	equ	0xFEF
 37374                           postinc0	equ	0xFEE
 37375                           plusw0	equ	0xFEB
 37376                           fsr0h	equ	0xFEA
 37377                           fsr0l	equ	0xFE9
 37378                           wreg	equ	0xFE8
 37379                           indf1	equ	0xFE7
 37380                           postinc1	equ	0xFE6
 37381                           postdec1	equ	0xFE5
 37382                           plusw1	equ	0xFE3
 37383                           fsr1h	equ	0xFE2
 37384                           fsr1l	equ	0xFE1
 37385                           indf2	equ	0xFDF
 37386                           postinc2	equ	0xFDE
 37387                           postdec2	equ	0xFDD
 37388                           plusw2	equ	0xFDB
 37389                           fsr2h	equ	0xFDA
 37390                           fsr2l	equ	0xFD9
 37391                           status	equ	0xFD8
 37392                           
 37393 ;; *************** function _ReadByte *****************
 37394 ;; Defined at:
 37395 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37396 ;; Parameters:    Size  Location     Type
 37397 ;;		None
 37398 ;; Auto vars:     Size  Location     Type
 37399 ;;  Byte            1   29[BANK0 ] unsigned char 
 37400 ;; Return value:  Size  Location     Type
 37401 ;;                  1    wreg      unsigned char 
 37402 ;; Registers used:
 37403 ;;		wreg, status,2
 37404 ;; Tracked objects:
 37405 ;;		On entry : 0/0
 37406 ;;		On exit  : 0/0
 37407 ;;		Unchanged: 0/0
 37408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37412 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37413 ;;Total ram usage:        1 bytes
 37414 ;; Hardware stack levels used:    1
 37415 ;; Hardware stack levels required when called:   11
 37416 ;; This function calls:
 37417 ;;		Nothing
 37418 ;; This function is called by:
 37419 ;;		_I2c_ReadData
 37420 ;; This function uses a non-reentrant model
 37421 ;;
 37422                           
 37423                           	psect	text178
 37424  006DB4                     __ptext178:
 37425                           	opt stack 0
 37426  006DB4                     _ReadByte:
 37427                           	opt stack 14
 37428                           
 37429                           ;i2c_drv.c: 207: UINT8 Byte;
 37430                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 37431                           
 37432                           ;incstack = 0
 37433  006DB4  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 37434                           
 37435                           ;i2c_drv.c: 213: return Byte;
 37436  006DB8  0100               	movlb	0	; () banked
 37437  006DBA  517D               	movf	ReadByte@Byte& (0+255),w,b
 37438  006DBC  0012               	return	
 37439  006DBE                     __end_of_ReadByte:
 37440                           	opt stack 0
 37441                           tosu	equ	0xFFF
 37442                           tosh	equ	0xFFE
 37443                           tosl	equ	0xFFD
 37444                           pclath	equ	0xFFA
 37445                           tblptru	equ	0xFF8
 37446                           tblptrh	equ	0xFF7
 37447                           tblptrl	equ	0xFF6
 37448                           tablat	equ	0xFF5
 37449                           prodh	equ	0xFF4
 37450                           prodl	equ	0xFF3
 37451                           intcon	equ	0xFF2
 37452                           intcon2	equ	0xFF1
 37453                           intcon3	equ	0xFF0
 37454                           indf0	equ	0xFEF
 37455                           postinc0	equ	0xFEE
 37456                           plusw0	equ	0xFEB
 37457                           fsr0h	equ	0xFEA
 37458                           fsr0l	equ	0xFE9
 37459                           wreg	equ	0xFE8
 37460                           indf1	equ	0xFE7
 37461                           postinc1	equ	0xFE6
 37462                           postdec1	equ	0xFE5
 37463                           plusw1	equ	0xFE3
 37464                           fsr1h	equ	0xFE2
 37465                           fsr1l	equ	0xFE1
 37466                           indf2	equ	0xFDF
 37467                           postinc2	equ	0xFDE
 37468                           postdec2	equ	0xFDD
 37469                           plusw2	equ	0xFDB
 37470                           fsr2h	equ	0xFDA
 37471                           fsr2l	equ	0xFD9
 37472                           status	equ	0xFD8
 37473                           
 37474 ;; *************** function _GenerateEvt *****************
 37475 ;; Defined at:
 37476 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 37477 ;; Parameters:    Size  Location     Type
 37478 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 37479 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 37480 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 37481 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 37482 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 37483 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 37484 ;; Auto vars:     Size  Location     Type
 37485 ;;  EventStatus     1   31[BANK0 ] enum E7727
 37486 ;; Return value:  Size  Location     Type
 37487 ;;                  1    wreg      enum E7699
 37488 ;; Registers used:
 37489 ;;		wreg, fsr2l, fsr2h, status,2
 37490 ;; Tracked objects:
 37491 ;;		On entry : 0/0
 37492 ;;		On exit  : 0/0
 37493 ;;		Unchanged: 0/0
 37494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37495 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37498 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37499 ;;Total ram usage:        3 bytes
 37500 ;; Hardware stack levels used:    1
 37501 ;; Hardware stack levels required when called:   11
 37502 ;; This function calls:
 37503 ;;		Nothing
 37504 ;; This function is called by:
 37505 ;;		_I2c_ReadData
 37506 ;;		_CheckModem
 37507 ;;		_TurnOnModem
 37508 ;;		_ConfigureModem
 37509 ;;		_ModemEvtParser
 37510 ;;		_GetSmsSm
 37511 ;;		_Mdm_RequestSmsData
 37512 ;;		_I2cSlv_SendI2cMsg
 37513 ;;		_I2cSlv_ReceiveI2cMsg
 37514 ;;		_RiSm
 37515 ;;		_Mdm_SendSmsData
 37516 ;;		_MdmHttp_InitGprsNetwork
 37517 ;;		_MdmHttp_GetMethod
 37518 ;;		_Alarm
 37519 ;; This function uses a non-reentrant model
 37520 ;;
 37521                           
 37522                           	psect	text179
 37523  006C4A                     __ptext179:
 37524                           	opt stack 0
 37525  006C4A                     _GenerateEvt:
 37526                           	opt stack 13
 37527                           
 37528                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 37529                           
 37530                           ; BSR set to: 0
 37531                           ;incstack = 0
 37532  006C4A  0E00               	movlw	0
 37533  006C4C  0100               	movlb	0	; () banked
 37534  006C4E  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 37535                           
 37536                           ; BSR set to: 0
 37537                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 37538  006C50  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 37539  006C54  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 37540  006C58  0E02               	movlw	2
 37541  006C5A  6EDF               	movwf	indf2,c
 37542                           
 37543                           ; BSR set to: 0
 37544                           ;os_ser.c: 83: EventStatus = EventSent;
 37545  006C5C  0E02               	movlw	2
 37546  006C5E  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 37547  006C60  0012               	return	
 37548  006C62                     __end_of_GenerateEvt:
 37549                           	opt stack 0
 37550                           tosu	equ	0xFFF
 37551                           tosh	equ	0xFFE
 37552                           tosl	equ	0xFFD
 37553                           pclath	equ	0xFFA
 37554                           tblptru	equ	0xFF8
 37555                           tblptrh	equ	0xFF7
 37556                           tblptrl	equ	0xFF6
 37557                           tablat	equ	0xFF5
 37558                           prodh	equ	0xFF4
 37559                           prodl	equ	0xFF3
 37560                           intcon	equ	0xFF2
 37561                           intcon2	equ	0xFF1
 37562                           intcon3	equ	0xFF0
 37563                           indf0	equ	0xFEF
 37564                           postinc0	equ	0xFEE
 37565                           plusw0	equ	0xFEB
 37566                           fsr0h	equ	0xFEA
 37567                           fsr0l	equ	0xFE9
 37568                           wreg	equ	0xFE8
 37569                           indf1	equ	0xFE7
 37570                           postinc1	equ	0xFE6
 37571                           postdec1	equ	0xFE5
 37572                           plusw1	equ	0xFE3
 37573                           fsr1h	equ	0xFE2
 37574                           fsr1l	equ	0xFE1
 37575                           indf2	equ	0xFDF
 37576                           postinc2	equ	0xFDE
 37577                           postdec2	equ	0xFDD
 37578                           plusw2	equ	0xFDB
 37579                           fsr2h	equ	0xFDA
 37580                           fsr2l	equ	0xFD9
 37581                           status	equ	0xFD8
 37582                           
 37583 ;; *************** function _EnableReceiver *****************
 37584 ;; Defined at:
 37585 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37586 ;; Parameters:    Size  Location     Type
 37587 ;;		None
 37588 ;; Auto vars:     Size  Location     Type
 37589 ;;		None
 37590 ;; Return value:  Size  Location     Type
 37591 ;;                  1    wreg      void 
 37592 ;; Registers used:
 37593 ;;		status,2, status,0
 37594 ;; Tracked objects:
 37595 ;;		On entry : 0/0
 37596 ;;		On exit  : 0/0
 37597 ;;		Unchanged: 0/0
 37598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37603 ;;Total ram usage:        0 bytes
 37604 ;; Hardware stack levels used:    1
 37605 ;; Hardware stack levels required when called:   11
 37606 ;; This function calls:
 37607 ;;		Nothing
 37608 ;; This function is called by:
 37609 ;;		_I2c_ReadData
 37610 ;; This function uses a non-reentrant model
 37611 ;;
 37612                           
 37613                           	psect	text180
 37614  006DF2                     __ptext180:
 37615                           	opt stack 0
 37616  006DF2                     _EnableReceiver:
 37617                           	opt stack 14
 37618                           
 37619                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 37620                           
 37621                           ; BSR set to: 0
 37622                           ;incstack = 0
 37623  006DF2  8671               	bsf	3953,3,c	;volatile
 37624  006DF4  0012               	return		;funcret
 37625  006DF6                     __end_of_EnableReceiver:
 37626                           	opt stack 0
 37627                           tosu	equ	0xFFF
 37628                           tosh	equ	0xFFE
 37629                           tosl	equ	0xFFD
 37630                           pclath	equ	0xFFA
 37631                           tblptru	equ	0xFF8
 37632                           tblptrh	equ	0xFF7
 37633                           tblptrl	equ	0xFF6
 37634                           tablat	equ	0xFF5
 37635                           prodh	equ	0xFF4
 37636                           prodl	equ	0xFF3
 37637                           intcon	equ	0xFF2
 37638                           intcon2	equ	0xFF1
 37639                           intcon3	equ	0xFF0
 37640                           indf0	equ	0xFEF
 37641                           postinc0	equ	0xFEE
 37642                           plusw0	equ	0xFEB
 37643                           fsr0h	equ	0xFEA
 37644                           fsr0l	equ	0xFE9
 37645                           wreg	equ	0xFE8
 37646                           indf1	equ	0xFE7
 37647                           postinc1	equ	0xFE6
 37648                           postdec1	equ	0xFE5
 37649                           plusw1	equ	0xFE3
 37650                           fsr1h	equ	0xFE2
 37651                           fsr1l	equ	0xFE1
 37652                           indf2	equ	0xFDF
 37653                           postinc2	equ	0xFDE
 37654                           postdec2	equ	0xFDD
 37655                           plusw2	equ	0xFDB
 37656                           fsr2h	equ	0xFDA
 37657                           fsr2l	equ	0xFD9
 37658                           status	equ	0xFD8
 37659                           
 37660 ;; *************** function _CheckTxStatus *****************
 37661 ;; Defined at:
 37662 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37663 ;; Parameters:    Size  Location     Type
 37664 ;;		None
 37665 ;; Auto vars:     Size  Location     Type
 37666 ;;		None
 37667 ;; Return value:  Size  Location     Type
 37668 ;;                  1    wreg      unsigned char 
 37669 ;; Registers used:
 37670 ;;		wreg, status,2, status,0
 37671 ;; Tracked objects:
 37672 ;;		On entry : 0/0
 37673 ;;		On exit  : 0/0
 37674 ;;		Unchanged: 0/0
 37675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37680 ;;Total ram usage:        0 bytes
 37681 ;; Hardware stack levels used:    1
 37682 ;; Hardware stack levels required when called:   11
 37683 ;; This function calls:
 37684 ;;		Nothing
 37685 ;; This function is called by:
 37686 ;;		_I2c_WriteData
 37687 ;;		_I2c_ReadData
 37688 ;; This function uses a non-reentrant model
 37689 ;;
 37690                           
 37691                           	psect	text181
 37692  006DBE                     __ptext181:
 37693                           	opt stack 0
 37694  006DBE                     _CheckTxStatus:
 37695                           	opt stack 14
 37696                           
 37697                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 37698                           
 37699                           ;incstack = 0
 37700  006DBE  4073               	rrncf	3955,w,c	;volatile
 37701  006DC0  42E8               	rrncf	wreg,f,c
 37702  006DC2  0B3F               	andlw	63
 37703  006DC4  0B01               	andlw	1
 37704  006DC6  0012               	return	
 37705  006DC8                     __end_of_CheckTxStatus:
 37706                           	opt stack 0
 37707                           tosu	equ	0xFFF
 37708                           tosh	equ	0xFFE
 37709                           tosl	equ	0xFFD
 37710                           pclath	equ	0xFFA
 37711                           tblptru	equ	0xFF8
 37712                           tblptrh	equ	0xFF7
 37713                           tblptrl	equ	0xFF6
 37714                           tablat	equ	0xFF5
 37715                           prodh	equ	0xFF4
 37716                           prodl	equ	0xFF3
 37717                           intcon	equ	0xFF2
 37718                           intcon2	equ	0xFF1
 37719                           intcon3	equ	0xFF0
 37720                           indf0	equ	0xFEF
 37721                           postinc0	equ	0xFEE
 37722                           plusw0	equ	0xFEB
 37723                           fsr0h	equ	0xFEA
 37724                           fsr0l	equ	0xFE9
 37725                           wreg	equ	0xFE8
 37726                           indf1	equ	0xFE7
 37727                           postinc1	equ	0xFE6
 37728                           postdec1	equ	0xFE5
 37729                           plusw1	equ	0xFE3
 37730                           fsr1h	equ	0xFE2
 37731                           fsr1l	equ	0xFE1
 37732                           indf2	equ	0xFDF
 37733                           postinc2	equ	0xFDE
 37734                           postdec2	equ	0xFDD
 37735                           plusw2	equ	0xFDB
 37736                           fsr2h	equ	0xFDA
 37737                           fsr2l	equ	0xFD9
 37738                           status	equ	0xFD8
 37739                           
 37740 ;; *************** function _CheckAckStatus *****************
 37741 ;; Defined at:
 37742 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37743 ;; Parameters:    Size  Location     Type
 37744 ;;		None
 37745 ;; Auto vars:     Size  Location     Type
 37746 ;;		None
 37747 ;; Return value:  Size  Location     Type
 37748 ;;                  1    wreg      unsigned char 
 37749 ;; Registers used:
 37750 ;;		wreg, status,2, status,0
 37751 ;; Tracked objects:
 37752 ;;		On entry : 0/0
 37753 ;;		On exit  : 0/0
 37754 ;;		Unchanged: 0/0
 37755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37760 ;;Total ram usage:        0 bytes
 37761 ;; Hardware stack levels used:    1
 37762 ;; Hardware stack levels required when called:   11
 37763 ;; This function calls:
 37764 ;;		Nothing
 37765 ;; This function is called by:
 37766 ;;		_I2c_WriteData
 37767 ;;		_I2c_ReadData
 37768 ;; This function uses a non-reentrant model
 37769 ;;
 37770                           
 37771                           	psect	text182
 37772  006DC8                     __ptext182:
 37773                           	opt stack 0
 37774  006DC8                     _CheckAckStatus:
 37775                           	opt stack 14
 37776                           
 37777                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 37778                           
 37779                           ;incstack = 0
 37780  006DC8  4471               	rlncf	3953,w,c	;volatile
 37781  006DCA  46E8               	rlncf	wreg,f,c
 37782  006DCC  0B03               	andlw	3
 37783  006DCE  0B01               	andlw	1
 37784  006DD0  0012               	return	
 37785  006DD2                     __end_of_CheckAckStatus:
 37786                           	opt stack 0
 37787                           tosu	equ	0xFFF
 37788                           tosh	equ	0xFFE
 37789                           tosl	equ	0xFFD
 37790                           pclath	equ	0xFFA
 37791                           tblptru	equ	0xFF8
 37792                           tblptrh	equ	0xFF7
 37793                           tblptrl	equ	0xFF6
 37794                           tablat	equ	0xFF5
 37795                           prodh	equ	0xFF4
 37796                           prodl	equ	0xFF3
 37797                           intcon	equ	0xFF2
 37798                           intcon2	equ	0xFF1
 37799                           intcon3	equ	0xFF0
 37800                           indf0	equ	0xFEF
 37801                           postinc0	equ	0xFEE
 37802                           plusw0	equ	0xFEB
 37803                           fsr0h	equ	0xFEA
 37804                           fsr0l	equ	0xFE9
 37805                           wreg	equ	0xFE8
 37806                           indf1	equ	0xFE7
 37807                           postinc1	equ	0xFE6
 37808                           postdec1	equ	0xFE5
 37809                           plusw1	equ	0xFE3
 37810                           fsr1h	equ	0xFE2
 37811                           fsr1l	equ	0xFE1
 37812                           indf2	equ	0xFDF
 37813                           postinc2	equ	0xFDE
 37814                           postdec2	equ	0xFDD
 37815                           plusw2	equ	0xFDB
 37816                           fsr2h	equ	0xFDA
 37817                           fsr2l	equ	0xFD9
 37818                           status	equ	0xFD8
 37819                           
 37820 ;; *************** function _LowPriorityIsr *****************
 37821 ;; Defined at:
 37822 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 37823 ;; Parameters:    Size  Location     Type
 37824 ;;		None
 37825 ;; Auto vars:     Size  Location     Type
 37826 ;;		None
 37827 ;; Return value:  Size  Location     Type
 37828 ;;                  1    wreg      void 
 37829 ;; Registers used:
 37830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37831 ;; Tracked objects:
 37832 ;;		On entry : 0/0
 37833 ;;		On exit  : 0/0
 37834 ;;		Unchanged: 0/0
 37835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37838 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37839 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37840 ;;Total ram usage:       21 bytes
 37841 ;; Hardware stack levels used:    1
 37842 ;; Hardware stack levels required when called:   10
 37843 ;; This function calls:
 37844 ;;		_Tmr_Tmr2Isr
 37845 ;; This function is called by:
 37846 ;;		Interrupt level 1
 37847 ;; This function uses a non-reentrant model
 37848 ;;
 37849                           
 37850                           	psect	intcodelo
 37851  000018                     __pintcodelo:
 37852                           	opt stack 0
 37853  000018                     _LowPriorityIsr:
 37854                           	opt stack 8
 37855                           
 37856                           ;incstack = 0
 37857  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 37858  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 37859  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 37860  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 37861  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 37862  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 37863  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 37864  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 37865  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 37866  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 37867  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 37868  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 37869  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 37870  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 37871  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 37872  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 37873  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 37874  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 37875  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 37876  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 37877  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 37878  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 37879                           
 37880                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 37881  00006E  B29E               	btfsc	3998,1,c	;volatile
 37882                           
 37883                           ;irq.c: 259: {
 37884                           ;irq.c: 261: Tmr_Tmr2Isr();
 37885  000070  ECE8  F034         	call	_Tmr_Tmr2Isr	;wreg free
 37886  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 37887  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 37888  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 37889  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 37890  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 37891  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 37892  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 37893  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 37894  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 37895  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 37896  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 37897  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 37898  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 37899  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 37900  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 37901  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 37902  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 37903  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 37904  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 37905  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 37906  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 37907  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 37908  0000CA  0010               	retfie	
 37909  0000CC                     __end_of_LowPriorityIsr:
 37910                           	opt stack 0
 37911                           tosu	equ	0xFFF
 37912                           tosh	equ	0xFFE
 37913                           tosl	equ	0xFFD
 37914                           pclatu	equ	0xFFB
 37915                           pclath	equ	0xFFA
 37916                           tblptru	equ	0xFF8
 37917                           tblptrh	equ	0xFF7
 37918                           tblptrl	equ	0xFF6
 37919                           tablat	equ	0xFF5
 37920                           prodh	equ	0xFF4
 37921                           prodl	equ	0xFF3
 37922                           intcon	equ	0xFF2
 37923                           intcon2	equ	0xFF1
 37924                           intcon3	equ	0xFF0
 37925                           indf0	equ	0xFEF
 37926                           postinc0	equ	0xFEE
 37927                           plusw0	equ	0xFEB
 37928                           fsr0h	equ	0xFEA
 37929                           fsr0l	equ	0xFE9
 37930                           wreg	equ	0xFE8
 37931                           indf1	equ	0xFE7
 37932                           postinc1	equ	0xFE6
 37933                           postdec1	equ	0xFE5
 37934                           plusw1	equ	0xFE3
 37935                           fsr1h	equ	0xFE2
 37936                           fsr1l	equ	0xFE1
 37937                           bsr	equ	0xFE0
 37938                           indf2	equ	0xFDF
 37939                           postinc2	equ	0xFDE
 37940                           postdec2	equ	0xFDD
 37941                           plusw2	equ	0xFDB
 37942                           fsr2h	equ	0xFDA
 37943                           fsr2l	equ	0xFD9
 37944                           status	equ	0xFD8
 37945                           
 37946 ;; *************** function _Tmr_Tmr2Isr *****************
 37947 ;; Defined at:
 37948 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 37949 ;; Parameters:    Size  Location     Type
 37950 ;;		None
 37951 ;; Auto vars:     Size  Location     Type
 37952 ;;		None
 37953 ;; Return value:  Size  Location     Type
 37954 ;;                  1    wreg      void 
 37955 ;; Registers used:
 37956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37957 ;; Tracked objects:
 37958 ;;		On entry : 0/0
 37959 ;;		On exit  : 0/0
 37960 ;;		Unchanged: 0/0
 37961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37966 ;;Total ram usage:        0 bytes
 37967 ;; Hardware stack levels used:    1
 37968 ;; Hardware stack levels required when called:    9
 37969 ;; This function calls:
 37970 ;;		Absolute function
 37971 ;;		_Sch_SchmIntService
 37972 ;; This function is called by:
 37973 ;;		_LowPriorityIsr
 37974 ;; This function uses a non-reentrant model
 37975 ;;
 37976                           
 37977                           	psect	text184
 37978  0069D0                     __ptext184:
 37979                           	opt stack 0
 37980  0069D0                     _Tmr_Tmr2Isr:
 37981                           	opt stack 8
 37982                           
 37983                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 37984                           
 37985                           ;incstack = 0
 37986  0069D0  929E               	bcf	3998,1,c	;volatile
 37987                           
 37988                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 37989  0069D2  0102               	movlb	2	; () banked
 37990  0069D4  51E5               	movf	_Tmr2IsrCallback& (0+255),w,b
 37991  0069D6  11E6               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 37992  0069D8  B4D8               	btfsc	status,2,c
 37993  0069DA  0012               	return	
 37994                           
 37995                           ; BSR set to: 2
 37996                           ;tmr_drv.c: 315: {
 37997                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 37998  0069DC  D801               	call	i1u1681_28
 37999  0069DE  0012               	return	
 38000  0069E0                     i1u1681_28:
 38001  0069E0  0005               	push	
 38002  0069E2  6EFA               	movwf	pclath,c
 38003  0069E4  51E5               	movf	_Tmr2IsrCallback& (0+255),w,b
 38004  0069E6  6EFD               	movwf	tosl,c
 38005  0069E8  51E6               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 38006  0069EA  6EFE               	movwf	tosh,c
 38007  0069EC  50F8               	movf	tblptru,w,c
 38008  0069EE  6EFF               	movwf	tosu,c
 38009  0069F0  50FA               	movf	pclath,w,c
 38010  0069F2  0012               	return		;indir
 38011  0069F4                     __end_of_Tmr_Tmr2Isr:
 38012                           	opt stack 0
 38013                           tosu	equ	0xFFF
 38014                           tosh	equ	0xFFE
 38015                           tosl	equ	0xFFD
 38016                           pclatu	equ	0xFFB
 38017                           pclath	equ	0xFFA
 38018                           tblptru	equ	0xFF8
 38019                           tblptrh	equ	0xFF7
 38020                           tblptrl	equ	0xFF6
 38021                           tablat	equ	0xFF5
 38022                           prodh	equ	0xFF4
 38023                           prodl	equ	0xFF3
 38024                           intcon	equ	0xFF2
 38025                           intcon2	equ	0xFF1
 38026                           intcon3	equ	0xFF0
 38027                           indf0	equ	0xFEF
 38028                           postinc0	equ	0xFEE
 38029                           plusw0	equ	0xFEB
 38030                           fsr0h	equ	0xFEA
 38031                           fsr0l	equ	0xFE9
 38032                           wreg	equ	0xFE8
 38033                           indf1	equ	0xFE7
 38034                           postinc1	equ	0xFE6
 38035                           postdec1	equ	0xFE5
 38036                           plusw1	equ	0xFE3
 38037                           fsr1h	equ	0xFE2
 38038                           fsr1l	equ	0xFE1
 38039                           bsr	equ	0xFE0
 38040                           indf2	equ	0xFDF
 38041                           postinc2	equ	0xFDE
 38042                           postdec2	equ	0xFDD
 38043                           plusw2	equ	0xFDB
 38044                           fsr2h	equ	0xFDA
 38045                           fsr2l	equ	0xFD9
 38046                           status	equ	0xFD8
 38047                           
 38048 ;; *************** function _Sch_SchmIntService *****************
 38049 ;; Defined at:
 38050 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 38051 ;; Parameters:    Size  Location     Type
 38052 ;;		None
 38053 ;; Auto vars:     Size  Location     Type
 38054 ;;		None
 38055 ;; Return value:  Size  Location     Type
 38056 ;;                  1    wreg      void 
 38057 ;; Registers used:
 38058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 38059 ;; Tracked objects:
 38060 ;;		On entry : 0/0
 38061 ;;		On exit  : 0/0
 38062 ;;		Unchanged: 0/0
 38063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38068 ;;Total ram usage:        0 bytes
 38069 ;; Hardware stack levels used:    1
 38070 ;; Hardware stack levels required when called:    8
 38071 ;; This function calls:
 38072 ;;		_OsAlrm_ProcessOsAlarms
 38073 ;;		_UpdateOsCounters
 38074 ;;		_UpdateSchFlag
 38075 ;; This function is called by:
 38076 ;;		_SystemInit
 38077 ;;		_Tmr_Tmr2Isr
 38078 ;; This function uses a non-reentrant model
 38079 ;;
 38080                           
 38081                           	psect	text185
 38082  006D64                     __ptext185:
 38083                           	opt stack 0
 38084  006D64                     _Sch_SchmIntService:
 38085                           	opt stack 8
 38086                           
 38087                           ;os_sched.c: 217: UpdateSchFlag();
 38088                           
 38089                           ;incstack = 0
 38090  006D64  ECBD  F035         	call	_UpdateSchFlag	;wreg free
 38091                           
 38092                           ;os_sched.c: 219: UpdateOsCounters();
 38093  006D68  EC9A  F036         	call	_UpdateOsCounters	;wreg free
 38094                           
 38095                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 38096  006D6C  EC20  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 38097  006D70  0012               	return		;funcret
 38098  006D72                     __end_of_Sch_SchmIntService:
 38099                           	opt stack 0
 38100                           tosu	equ	0xFFF
 38101                           tosh	equ	0xFFE
 38102                           tosl	equ	0xFFD
 38103                           pclatu	equ	0xFFB
 38104                           pclath	equ	0xFFA
 38105                           tblptru	equ	0xFF8
 38106                           tblptrh	equ	0xFF7
 38107                           tblptrl	equ	0xFF6
 38108                           tablat	equ	0xFF5
 38109                           prodh	equ	0xFF4
 38110                           prodl	equ	0xFF3
 38111                           intcon	equ	0xFF2
 38112                           intcon2	equ	0xFF1
 38113                           intcon3	equ	0xFF0
 38114                           indf0	equ	0xFEF
 38115                           postinc0	equ	0xFEE
 38116                           plusw0	equ	0xFEB
 38117                           fsr0h	equ	0xFEA
 38118                           fsr0l	equ	0xFE9
 38119                           wreg	equ	0xFE8
 38120                           indf1	equ	0xFE7
 38121                           postinc1	equ	0xFE6
 38122                           postdec1	equ	0xFE5
 38123                           plusw1	equ	0xFE3
 38124                           fsr1h	equ	0xFE2
 38125                           fsr1l	equ	0xFE1
 38126                           bsr	equ	0xFE0
 38127                           indf2	equ	0xFDF
 38128                           postinc2	equ	0xFDE
 38129                           postdec2	equ	0xFDD
 38130                           plusw2	equ	0xFDB
 38131                           fsr2h	equ	0xFDA
 38132                           fsr2l	equ	0xFD9
 38133                           status	equ	0xFD8
 38134                           
 38135 ;; *************** function _UpdateSchFlag *****************
 38136 ;; Defined at:
 38137 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 38138 ;; Parameters:    Size  Location     Type
 38139 ;;		None
 38140 ;; Auto vars:     Size  Location     Type
 38141 ;;		None
 38142 ;; Return value:  Size  Location     Type
 38143 ;;                  1    wreg      void 
 38144 ;; Registers used:
 38145 ;;		wreg, status,2, status,0
 38146 ;; Tracked objects:
 38147 ;;		On entry : 0/0
 38148 ;;		On exit  : 0/0
 38149 ;;		Unchanged: 0/0
 38150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38155 ;;Total ram usage:        0 bytes
 38156 ;; Hardware stack levels used:    1
 38157 ;; Hardware stack levels required when called:    4
 38158 ;; This function calls:
 38159 ;;		Nothing
 38160 ;; This function is called by:
 38161 ;;		_Sch_SchmIntService
 38162 ;; This function uses a non-reentrant model
 38163 ;;
 38164                           
 38165                           	psect	text186
 38166  006B7A                     __ptext186:
 38167                           	opt stack 0
 38168  006B7A                     _UpdateSchFlag:
 38169                           	opt stack 11
 38170                           
 38171                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 38172                           ;os_sched.c: 138: InterruptCounter++;
 38173                           
 38174                           ;incstack = 0
 38175  006B7A  0102               	movlb	2	; () banked
 38176  006B7C  4BD7               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 38177  006B7E  2BD8               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 38178                           
 38179                           ; BSR set to: 2
 38180                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 38181  006B80  51D7               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 38182  006B82  11D8               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 38183  006B84  B4D8               	btfsc	status,2,c
 38184  006B86  0012               	return	
 38185                           
 38186                           ; BSR set to: 2
 38187                           ;os_sched.c: 141: {
 38188                           ;os_sched.c: 143: InterruptCounter = 0;
 38189  006B88  0E00               	movlw	0
 38190  006B8A  6FD8               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 38191  006B8C  0E00               	movlw	0
 38192  006B8E  6FD7               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 38193                           
 38194                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 38195  006B90  0E00               	movlw	0
 38196  006B92  6FF2               	movwf	_MainSystemTimebaseFlag& (0+255),b
 38197  006B94  0012               	return	
 38198  006B96                     __end_of_UpdateSchFlag:
 38199                           	opt stack 0
 38200                           tosu	equ	0xFFF
 38201                           tosh	equ	0xFFE
 38202                           tosl	equ	0xFFD
 38203                           pclatu	equ	0xFFB
 38204                           pclath	equ	0xFFA
 38205                           tblptru	equ	0xFF8
 38206                           tblptrh	equ	0xFF7
 38207                           tblptrl	equ	0xFF6
 38208                           tablat	equ	0xFF5
 38209                           prodh	equ	0xFF4
 38210                           prodl	equ	0xFF3
 38211                           intcon	equ	0xFF2
 38212                           intcon2	equ	0xFF1
 38213                           intcon3	equ	0xFF0
 38214                           indf0	equ	0xFEF
 38215                           postinc0	equ	0xFEE
 38216                           plusw0	equ	0xFEB
 38217                           fsr0h	equ	0xFEA
 38218                           fsr0l	equ	0xFE9
 38219                           wreg	equ	0xFE8
 38220                           indf1	equ	0xFE7
 38221                           postinc1	equ	0xFE6
 38222                           postdec1	equ	0xFE5
 38223                           plusw1	equ	0xFE3
 38224                           fsr1h	equ	0xFE2
 38225                           fsr1l	equ	0xFE1
 38226                           bsr	equ	0xFE0
 38227                           indf2	equ	0xFDF
 38228                           postinc2	equ	0xFDE
 38229                           postdec2	equ	0xFDD
 38230                           plusw2	equ	0xFDB
 38231                           fsr2h	equ	0xFDA
 38232                           fsr2l	equ	0xFD9
 38233                           status	equ	0xFD8
 38234                           
 38235 ;; *************** function _UpdateOsCounters *****************
 38236 ;; Defined at:
 38237 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 38238 ;; Parameters:    Size  Location     Type
 38239 ;;		None
 38240 ;; Auto vars:     Size  Location     Type
 38241 ;;		None
 38242 ;; Return value:  Size  Location     Type
 38243 ;;                  1    wreg      void 
 38244 ;; Registers used:
 38245 ;;		wreg, status,2, status,0
 38246 ;; Tracked objects:
 38247 ;;		On entry : 0/0
 38248 ;;		On exit  : 0/0
 38249 ;;		Unchanged: 0/0
 38250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38255 ;;Total ram usage:        0 bytes
 38256 ;; Hardware stack levels used:    1
 38257 ;; Hardware stack levels required when called:    4
 38258 ;; This function calls:
 38259 ;;		Nothing
 38260 ;; This function is called by:
 38261 ;;		_Sch_SchmIntService
 38262 ;; This function uses a non-reentrant model
 38263 ;;
 38264                           
 38265                           	psect	text187
 38266  006D34                     __ptext187:
 38267                           	opt stack 0
 38268  006D34                     _UpdateOsCounters:
 38269                           	opt stack 11
 38270                           
 38271                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 38272                           
 38273                           ; BSR set to: 2
 38274                           ;incstack = 0
 38275  006D34  0E01               	movlw	1
 38276  006D36  0103               	movlb	3	; () banked
 38277  006D38  2714               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 38278  006D3A  0E00               	movlw	0
 38279  006D3C  2315               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 38280  006D3E  2316               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 38281  006D40  2317               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 38282                           
 38283                           ; BSR set to: 3
 38284  006D42  0012               	return		;funcret
 38285  006D44                     __end_of_UpdateOsCounters:
 38286                           	opt stack 0
 38287                           tosu	equ	0xFFF
 38288                           tosh	equ	0xFFE
 38289                           tosl	equ	0xFFD
 38290                           pclatu	equ	0xFFB
 38291                           pclath	equ	0xFFA
 38292                           tblptru	equ	0xFF8
 38293                           tblptrh	equ	0xFF7
 38294                           tblptrl	equ	0xFF6
 38295                           tablat	equ	0xFF5
 38296                           prodh	equ	0xFF4
 38297                           prodl	equ	0xFF3
 38298                           intcon	equ	0xFF2
 38299                           intcon2	equ	0xFF1
 38300                           intcon3	equ	0xFF0
 38301                           indf0	equ	0xFEF
 38302                           postinc0	equ	0xFEE
 38303                           plusw0	equ	0xFEB
 38304                           fsr0h	equ	0xFEA
 38305                           fsr0l	equ	0xFE9
 38306                           wreg	equ	0xFE8
 38307                           indf1	equ	0xFE7
 38308                           postinc1	equ	0xFE6
 38309                           postdec1	equ	0xFE5
 38310                           plusw1	equ	0xFE3
 38311                           fsr1h	equ	0xFE2
 38312                           fsr1l	equ	0xFE1
 38313                           bsr	equ	0xFE0
 38314                           indf2	equ	0xFDF
 38315                           postinc2	equ	0xFDE
 38316                           postdec2	equ	0xFDD
 38317                           plusw2	equ	0xFDB
 38318                           fsr2h	equ	0xFDA
 38319                           fsr2l	equ	0xFD9
 38320                           status	equ	0xFD8
 38321                           
 38322 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 38323 ;; Defined at:
 38324 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 38325 ;; Parameters:    Size  Location     Type
 38326 ;;		None
 38327 ;; Auto vars:     Size  Location     Type
 38328 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 38329 ;; Return value:  Size  Location     Type
 38330 ;;                  1    wreg      void 
 38331 ;; Registers used:
 38332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 38333 ;; Tracked objects:
 38334 ;;		On entry : 0/0
 38335 ;;		On exit  : 0/0
 38336 ;;		Unchanged: 0/0
 38337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38340 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38341 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38342 ;;Total ram usage:       10 bytes
 38343 ;; Hardware stack levels used:    1
 38344 ;; Hardware stack levels required when called:    7
 38345 ;; This function calls:
 38346 ;;		_I2cDummyTx
 38347 ;;		_OsAlrm_ClearOsAlarm
 38348 ;;		i1___wmul
 38349 ;; This function is called by:
 38350 ;;		_Sch_SchmIntService
 38351 ;; This function uses a non-reentrant model
 38352 ;;
 38353                           
 38354                           	psect	text188
 38355  002440                     __ptext188:
 38356                           	opt stack 0
 38357  002440                     _OsAlrm_ProcessOsAlarms:
 38358                           	opt stack 8
 38359                           
 38360                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 38361                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 38362                           
 38363                           ; BSR set to: 3
 38364                           ;incstack = 0
 38365  002440  0E00               	movlw	0
 38366  002442  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 38367  002444  0E00               	movlw	0
 38368  002446  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 38369  002448  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 38370  00244A  E105               	bnz	i1u1655_20
 38371  00244C  0E14               	movlw	20
 38372  00244E  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 38373  002450  B0D8               	btfsc	status,0,c
 38374  002452  0012               	return	
 38375  002454  D001               	goto	i1l742
 38376  002456                     i1u1655_20:
 38377  002456  0012               	return	
 38378  002458                     i1l742:
 38379                           
 38380                           ;os_alarms.c: 121: {
 38381                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 38382  002458  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38383  00245C  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38384  002460  0E00               	movlw	0
 38385  002462  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38386  002464  0E0B               	movlw	11
 38387  002466  6E1B               	movwf	i1___wmul@multiplicand,c
 38388  002468  EC9F  F034         	call	i1___wmul	;wreg free
 38389  00246C  0E00               	movlw	low _OsAlarms
 38390  00246E  2419               	addwf	?i1___wmul,w,c
 38391  002470  6ED9               	movwf	fsr2l,c
 38392  002472  0E06               	movlw	high _OsAlarms
 38393  002474  201A               	addwfc	?i1___wmul+1,w,c
 38394  002476  6EDA               	movwf	fsr2h,c
 38395  002478  04DE               	decf	postinc2,w,c
 38396  00247A  A4D8               	btfss	status,2,c
 38397  00247C  D086               	goto	i1u1659_29
 38398                           
 38399                           ;os_alarms.c: 124: {
 38400                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 38401  00247E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38402  002482  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38403  002486  0E00               	movlw	0
 38404  002488  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38405  00248A  0E0B               	movlw	11
 38406  00248C  6E1B               	movwf	i1___wmul@multiplicand,c
 38407  00248E  EC9F  F034         	call	i1___wmul	;wreg free
 38408  002492  0E01               	movlw	1
 38409  002494  2619               	addwf	?i1___wmul,f,c
 38410  002496  0E00               	movlw	0
 38411  002498  221A               	addwfc	?i1___wmul+1,f,c
 38412  00249A  0E00               	movlw	low _OsAlarms
 38413  00249C  2419               	addwf	?i1___wmul,w,c
 38414  00249E  6ED9               	movwf	fsr2l,c
 38415  0024A0  0E06               	movlw	high _OsAlarms
 38416  0024A2  201A               	addwfc	?i1___wmul+1,w,c
 38417  0024A4  6EDA               	movwf	fsr2h,c
 38418  0024A6  2ADE               	incf	postinc2,f,c
 38419  0024A8  0E00               	movlw	0
 38420  0024AA  22DE               	addwfc	postinc2,f,c
 38421  0024AC  22DE               	addwfc	postinc2,f,c
 38422  0024AE  22DE               	addwfc	postinc2,f,c
 38423                           
 38424                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 38425  0024B0  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38426  0024B4  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38427  0024B8  0E00               	movlw	0
 38428  0024BA  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38429  0024BC  0E0B               	movlw	11
 38430  0024BE  6E1B               	movwf	i1___wmul@multiplicand,c
 38431  0024C0  EC9F  F034         	call	i1___wmul	;wreg free
 38432  0024C4  0E05               	movlw	5
 38433  0024C6  2619               	addwf	?i1___wmul,f,c
 38434  0024C8  0E00               	movlw	0
 38435  0024CA  221A               	addwfc	?i1___wmul+1,f,c
 38436  0024CC  0E00               	movlw	low _OsAlarms
 38437  0024CE  2419               	addwf	?i1___wmul,w,c
 38438  0024D0  6ED9               	movwf	fsr2l,c
 38439  0024D2  0E06               	movlw	high _OsAlarms
 38440  0024D4  201A               	addwfc	?i1___wmul+1,w,c
 38441  0024D6  6EDA               	movwf	fsr2h,c
 38442  0024D8  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38443  0024DC  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38444  0024E0  0E00               	movlw	0
 38445  0024E2  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38446  0024E4  0E0B               	movlw	11
 38447  0024E6  6E1B               	movwf	i1___wmul@multiplicand,c
 38448  0024E8  EC9F  F034         	call	i1___wmul	;wreg free
 38449  0024EC  0E01               	movlw	1
 38450  0024EE  2619               	addwf	?i1___wmul,f,c
 38451  0024F0  0E00               	movlw	0
 38452  0024F2  221A               	addwfc	?i1___wmul+1,f,c
 38453  0024F4  0E00               	movlw	low _OsAlarms
 38454  0024F6  2419               	addwf	?i1___wmul,w,c
 38455  0024F8  6EE1               	movwf	fsr1l,c
 38456  0024FA  0E06               	movlw	high _OsAlarms
 38457  0024FC  201A               	addwfc	?i1___wmul+1,w,c
 38458  0024FE  6EE2               	movwf	fsr1h,c
 38459  002500  50DE               	movf	postinc2,w,c
 38460  002502  5CE6               	subwf	postinc1,w,c
 38461  002504  50DE               	movf	postinc2,w,c
 38462  002506  58E6               	subwfb	postinc1,w,c
 38463  002508  50DE               	movf	postinc2,w,c
 38464  00250A  58E6               	subwfb	postinc1,w,c
 38465  00250C  50DE               	movf	postinc2,w,c
 38466  00250E  58E6               	subwfb	postinc1,w,c
 38467  002510  A0D8               	btfss	status,0,c
 38468  002512  D03B               	goto	i1u1659_29
 38469                           
 38470                           ;os_alarms.c: 129: {
 38471                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 38472  002514  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 38473  002516  ECFD  F02D         	call	_OsAlrm_ClearOsAlarm
 38474                           
 38475                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 38476  00251A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38477  00251E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38478  002522  0E00               	movlw	0
 38479  002524  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38480  002526  0E0B               	movlw	11
 38481  002528  6E1B               	movwf	i1___wmul@multiplicand,c
 38482  00252A  EC9F  F034         	call	i1___wmul	;wreg free
 38483  00252E  0E09               	movlw	9
 38484  002530  2619               	addwf	?i1___wmul,f,c
 38485  002532  0E00               	movlw	0
 38486  002534  221A               	addwfc	?i1___wmul+1,f,c
 38487  002536  0E00               	movlw	low _OsAlarms
 38488  002538  2419               	addwf	?i1___wmul,w,c
 38489  00253A  6ED9               	movwf	fsr2l,c
 38490  00253C  0E06               	movlw	high _OsAlarms
 38491  00253E  201A               	addwfc	?i1___wmul+1,w,c
 38492  002540  6EDA               	movwf	fsr2h,c
 38493  002542  50DE               	movf	postinc2,w,c
 38494  002544  10DE               	iorwf	postinc2,w,c
 38495  002546  B4D8               	btfsc	status,2,c
 38496  002548  D020               	goto	i1u1659_29
 38497                           
 38498                           ;os_alarms.c: 134: {
 38499                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 38500  00254A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38501  00254E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38502  002552  0E00               	movlw	0
 38503  002554  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38504  002556  0E0B               	movlw	11
 38505  002558  6E1B               	movwf	i1___wmul@multiplicand,c
 38506  00255A  EC9F  F034         	call	i1___wmul	;wreg free
 38507  00255E  0E09               	movlw	9
 38508  002560  2619               	addwf	?i1___wmul,f,c
 38509  002562  0E00               	movlw	0
 38510  002564  221A               	addwfc	?i1___wmul+1,f,c
 38511  002566  0E00               	movlw	low _OsAlarms
 38512  002568  2419               	addwf	?i1___wmul,w,c
 38513  00256A  6ED9               	movwf	fsr2l,c
 38514  00256C  0E06               	movlw	high _OsAlarms
 38515  00256E  201A               	addwfc	?i1___wmul+1,w,c
 38516  002570  6EDA               	movwf	fsr2h,c
 38517  002572  D801               	call	i1u1659_28
 38518  002574  D00A               	goto	i1u1659_29
 38519  002576                     i1u1659_28:
 38520  002576  0005               	push	
 38521  002578  6EFA               	movwf	pclath,c
 38522  00257A  50DE               	movf	postinc2,w,c
 38523  00257C  6EFD               	movwf	tosl,c
 38524  00257E  50DE               	movf	postinc2,w,c
 38525  002580  6EFE               	movwf	tosh,c
 38526  002582  50F8               	movf	tblptru,w,c
 38527  002584  6EFF               	movwf	tosu,c
 38528  002586  50FA               	movf	pclath,w,c
 38529  002588  0012               	return		;indir
 38530  00258A                     i1u1659_29:
 38531  00258A  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 38532  00258C  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 38533  00258E  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 38534  002590  E101               	bnz	i1l747
 38535  002592  D75C               	goto	L100
 38536  002594                     i1l747:
 38537  002594  0012               	return		;funcret
 38538  002596                     __end_of_OsAlrm_ProcessOsAlarms:
 38539                           	opt stack 0
 38540                           tosu	equ	0xFFF
 38541                           tosh	equ	0xFFE
 38542                           tosl	equ	0xFFD
 38543                           pclatu	equ	0xFFB
 38544                           pclath	equ	0xFFA
 38545                           tblptru	equ	0xFF8
 38546                           tblptrh	equ	0xFF7
 38547                           tblptrl	equ	0xFF6
 38548                           tablat	equ	0xFF5
 38549                           prodh	equ	0xFF4
 38550                           prodl	equ	0xFF3
 38551                           intcon	equ	0xFF2
 38552                           intcon2	equ	0xFF1
 38553                           intcon3	equ	0xFF0
 38554                           indf0	equ	0xFEF
 38555                           postinc0	equ	0xFEE
 38556                           plusw0	equ	0xFEB
 38557                           fsr0h	equ	0xFEA
 38558                           fsr0l	equ	0xFE9
 38559                           wreg	equ	0xFE8
 38560                           indf1	equ	0xFE7
 38561                           postinc1	equ	0xFE6
 38562                           postdec1	equ	0xFE5
 38563                           plusw1	equ	0xFE3
 38564                           fsr1h	equ	0xFE2
 38565                           fsr1l	equ	0xFE1
 38566                           bsr	equ	0xFE0
 38567                           indf2	equ	0xFDF
 38568                           postinc2	equ	0xFDE
 38569                           postdec2	equ	0xFDD
 38570                           plusw2	equ	0xFDB
 38571                           fsr2h	equ	0xFDA
 38572                           fsr2l	equ	0xFD9
 38573                           status	equ	0xFD8
 38574                           
 38575 ;; *************** function i1___wmul *****************
 38576 ;; Defined at:
 38577 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 38578 ;; Parameters:    Size  Location     Type
 38579 ;;  multiplier      2   24[COMRAM] unsigned int 
 38580 ;;  multiplicand    2   26[COMRAM] unsigned int 
 38581 ;; Auto vars:     Size  Location     Type
 38582 ;;  __wmul          2   28[COMRAM] unsigned int 
 38583 ;; Return value:  Size  Location     Type
 38584 ;;                  2   24[COMRAM] unsigned int 
 38585 ;; Registers used:
 38586 ;;		wreg, status,2, status,0, prodl, prodh
 38587 ;; Tracked objects:
 38588 ;;		On entry : 0/0
 38589 ;;		On exit  : 0/0
 38590 ;;		Unchanged: 0/0
 38591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38592 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38593 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38595 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38596 ;;Total ram usage:        6 bytes
 38597 ;; Hardware stack levels used:    1
 38598 ;; Hardware stack levels required when called:    4
 38599 ;; This function calls:
 38600 ;;		Nothing
 38601 ;; This function is called by:
 38602 ;;		_OsAlrm_ProcessOsAlarms
 38603 ;; This function uses a non-reentrant model
 38604 ;;
 38605                           
 38606                           	psect	text189
 38607  00693E                     __ptext189:
 38608                           	opt stack 0
 38609  00693E                     i1___wmul:
 38610                           	opt stack 10
 38611                           
 38612                           ;incstack = 0
 38613  00693E  5019               	movf	i1___wmul@multiplier,w,c
 38614  006940  021B               	mulwf	i1___wmul@multiplicand,c
 38615  006942  CFF3 F01D          	movff	prodl,i1___wmul@product
 38616  006946  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 38617  00694A  5019               	movf	i1___wmul@multiplier,w,c
 38618  00694C  021C               	mulwf	i1___wmul@multiplicand+1,c
 38619  00694E  50F3               	movf	prodl,w,c
 38620  006950  261E               	addwf	i1___wmul@product+1,f,c
 38621  006952  501A               	movf	i1___wmul@multiplier+1,w,c
 38622  006954  021B               	mulwf	i1___wmul@multiplicand,c
 38623  006956  50F3               	movf	prodl,w,c
 38624  006958  261E               	addwf	i1___wmul@product+1,f,c
 38625  00695A  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 38626  00695E  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 38627  006962  0012               	return	
 38628  006964                     __end_ofi1___wmul:
 38629                           	opt stack 0
 38630                           tosu	equ	0xFFF
 38631                           tosh	equ	0xFFE
 38632                           tosl	equ	0xFFD
 38633                           pclatu	equ	0xFFB
 38634                           pclath	equ	0xFFA
 38635                           tblptru	equ	0xFF8
 38636                           tblptrh	equ	0xFF7
 38637                           tblptrl	equ	0xFF6
 38638                           tablat	equ	0xFF5
 38639                           prodh	equ	0xFF4
 38640                           prodl	equ	0xFF3
 38641                           intcon	equ	0xFF2
 38642                           intcon2	equ	0xFF1
 38643                           intcon3	equ	0xFF0
 38644                           indf0	equ	0xFEF
 38645                           postinc0	equ	0xFEE
 38646                           plusw0	equ	0xFEB
 38647                           fsr0h	equ	0xFEA
 38648                           fsr0l	equ	0xFE9
 38649                           wreg	equ	0xFE8
 38650                           indf1	equ	0xFE7
 38651                           postinc1	equ	0xFE6
 38652                           postdec1	equ	0xFE5
 38653                           plusw1	equ	0xFE3
 38654                           fsr1h	equ	0xFE2
 38655                           fsr1l	equ	0xFE1
 38656                           bsr	equ	0xFE0
 38657                           indf2	equ	0xFDF
 38658                           postinc2	equ	0xFDE
 38659                           postdec2	equ	0xFDD
 38660                           plusw2	equ	0xFDB
 38661                           fsr2h	equ	0xFDA
 38662                           fsr2l	equ	0xFD9
 38663                           status	equ	0xFD8
 38664                           
 38665 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 38666 ;; Defined at:
 38667 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 38668 ;; Parameters:    Size  Location     Type
 38669 ;;  OsAlarmId       1    wreg     unsigned char 
 38670 ;; Auto vars:     Size  Location     Type
 38671 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 38672 ;; Return value:  Size  Location     Type
 38673 ;;                  1    wreg      void 
 38674 ;; Registers used:
 38675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38676 ;; Tracked objects:
 38677 ;;		On entry : 0/0
 38678 ;;		On exit  : 0/0
 38679 ;;		Unchanged: 0/0
 38680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38684 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38685 ;;Total ram usage:        1 bytes
 38686 ;; Hardware stack levels used:    1
 38687 ;; Hardware stack levels required when called:    4
 38688 ;; This function calls:
 38689 ;;		Nothing
 38690 ;; This function is called by:
 38691 ;;		_OsAlrm_ProcessOsAlarms
 38692 ;; This function uses a non-reentrant model
 38693 ;;
 38694                           
 38695                           	psect	text190
 38696  005BFA                     __ptext190:
 38697                           	opt stack 0
 38698  005BFA                     _OsAlrm_ClearOsAlarm:
 38699                           	opt stack 10
 38700                           
 38701                           ;incstack = 0
 38702                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 38703  005BFA  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 38704                           
 38705                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 38706  005BFC  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 38707  005BFE  0D0B               	mullw	11
 38708  005C00  0E00               	movlw	low _OsAlarms
 38709  005C02  24F3               	addwf	prodl,w,c
 38710  005C04  6ED9               	movwf	fsr2l,c
 38711  005C06  0E06               	movlw	high _OsAlarms
 38712  005C08  20F4               	addwfc	prodh,w,c
 38713  005C0A  6EDA               	movwf	fsr2h,c
 38714  005C0C  0E00               	movlw	0
 38715  005C0E  6EDF               	movwf	indf2,c
 38716                           
 38717                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 38718  005C10  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 38719  005C12  0D0B               	mullw	11
 38720  005C14  0E01               	movlw	1
 38721  005C16  26F3               	addwf	prodl,f,c
 38722  005C18  0E00               	movlw	0
 38723  005C1A  22F4               	addwfc	prodh,f,c
 38724  005C1C  0E00               	movlw	low _OsAlarms
 38725  005C1E  24F3               	addwf	prodl,w,c
 38726  005C20  6ED9               	movwf	fsr2l,c
 38727  005C22  0E06               	movlw	high _OsAlarms
 38728  005C24  20F4               	addwfc	prodh,w,c
 38729  005C26  6EDA               	movwf	fsr2h,c
 38730  005C28  6ADE               	clrf	postinc2,c
 38731  005C2A  6ADE               	clrf	postinc2,c
 38732  005C2C  6ADE               	clrf	postinc2,c
 38733  005C2E  6ADD               	clrf	postdec2,c
 38734                           
 38735                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 38736  005C30  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 38737  005C32  0D0B               	mullw	11
 38738  005C34  0E05               	movlw	5
 38739  005C36  26F3               	addwf	prodl,f,c
 38740  005C38  0E00               	movlw	0
 38741  005C3A  22F4               	addwfc	prodh,f,c
 38742  005C3C  0E00               	movlw	low _OsAlarms
 38743  005C3E  24F3               	addwf	prodl,w,c
 38744  005C40  6ED9               	movwf	fsr2l,c
 38745  005C42  0E06               	movlw	high _OsAlarms
 38746  005C44  20F4               	addwfc	prodh,w,c
 38747  005C46  6EDA               	movwf	fsr2h,c
 38748  005C48  6ADE               	clrf	postinc2,c
 38749  005C4A  6ADE               	clrf	postinc2,c
 38750  005C4C  6ADE               	clrf	postinc2,c
 38751  005C4E  6ADD               	clrf	postdec2,c
 38752  005C50  0012               	return		;funcret
 38753  005C52                     __end_of_OsAlrm_ClearOsAlarm:
 38754                           	opt stack 0
 38755                           tosu	equ	0xFFF
 38756                           tosh	equ	0xFFE
 38757                           tosl	equ	0xFFD
 38758                           pclatu	equ	0xFFB
 38759                           pclath	equ	0xFFA
 38760                           tblptru	equ	0xFF8
 38761                           tblptrh	equ	0xFF7
 38762                           tblptrl	equ	0xFF6
 38763                           tablat	equ	0xFF5
 38764                           prodh	equ	0xFF4
 38765                           prodl	equ	0xFF3
 38766                           intcon	equ	0xFF2
 38767                           intcon2	equ	0xFF1
 38768                           intcon3	equ	0xFF0
 38769                           indf0	equ	0xFEF
 38770                           postinc0	equ	0xFEE
 38771                           plusw0	equ	0xFEB
 38772                           fsr0h	equ	0xFEA
 38773                           fsr0l	equ	0xFE9
 38774                           wreg	equ	0xFE8
 38775                           indf1	equ	0xFE7
 38776                           postinc1	equ	0xFE6
 38777                           postdec1	equ	0xFE5
 38778                           plusw1	equ	0xFE3
 38779                           fsr1h	equ	0xFE2
 38780                           fsr1l	equ	0xFE1
 38781                           bsr	equ	0xFE0
 38782                           indf2	equ	0xFDF
 38783                           postinc2	equ	0xFDE
 38784                           postdec2	equ	0xFDD
 38785                           plusw2	equ	0xFDB
 38786                           fsr2h	equ	0xFDA
 38787                           fsr2l	equ	0xFD9
 38788                           status	equ	0xFD8
 38789                           
 38790 ;; *************** function _I2cDummyTx *****************
 38791 ;; Defined at:
 38792 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 38793 ;; Parameters:    Size  Location     Type
 38794 ;;		None
 38795 ;; Auto vars:     Size  Location     Type
 38796 ;;		None
 38797 ;; Return value:  Size  Location     Type
 38798 ;;                  1    wreg      void 
 38799 ;; Registers used:
 38800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38801 ;; Tracked objects:
 38802 ;;		On entry : 0/0
 38803 ;;		On exit  : 0/0
 38804 ;;		Unchanged: 0/0
 38805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38810 ;;Total ram usage:        0 bytes
 38811 ;; Hardware stack levels used:    1
 38812 ;; Hardware stack levels required when called:    6
 38813 ;; This function calls:
 38814 ;;		i1_I2cSlv_SendI2cMsg
 38815 ;; This function is called by:
 38816 ;;		_I2cSlv_MainTask
 38817 ;;		_OsAlrm_ProcessOsAlarms
 38818 ;; This function uses a non-reentrant model
 38819 ;;
 38820                           
 38821                           	psect	text191
 38822  006B96                     __ptext191:
 38823                           	opt stack 0
 38824  006B96                     _I2cDummyTx:
 38825                           	opt stack 8
 38826                           
 38827                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 38828                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 38829                           
 38830                           ;incstack = 0
 38831  006B96  0EFB               	movlw	low I2cDummyTx@DummyBuffer
 38832  006B98  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 38833  006B9A  0E01               	movlw	high I2cDummyTx@DummyBuffer
 38834  006B9C  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 38835  006B9E  0E00               	movlw	0
 38836  006BA0  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 38837  006BA2  0E01               	movlw	1
 38838  006BA4  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 38839  006BA6  EC03  F033         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 38840                           
 38841                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 38842  006BAA  0E01               	movlw	1
 38843  006BAC  0101               	movlb	1	; () banked
 38844  006BAE  6FE4               	movwf	_I2cBusStatus& (0+255),b
 38845                           
 38846                           ; BSR set to: 1
 38847  006BB0  0012               	return		;funcret
 38848  006BB2                     __end_of_I2cDummyTx:
 38849                           	opt stack 0
 38850                           tosu	equ	0xFFF
 38851                           tosh	equ	0xFFE
 38852                           tosl	equ	0xFFD
 38853                           pclatu	equ	0xFFB
 38854                           pclath	equ	0xFFA
 38855                           tblptru	equ	0xFF8
 38856                           tblptrh	equ	0xFF7
 38857                           tblptrl	equ	0xFF6
 38858                           tablat	equ	0xFF5
 38859                           prodh	equ	0xFF4
 38860                           prodl	equ	0xFF3
 38861                           intcon	equ	0xFF2
 38862                           intcon2	equ	0xFF1
 38863                           intcon3	equ	0xFF0
 38864                           indf0	equ	0xFEF
 38865                           postinc0	equ	0xFEE
 38866                           plusw0	equ	0xFEB
 38867                           fsr0h	equ	0xFEA
 38868                           fsr0l	equ	0xFE9
 38869                           wreg	equ	0xFE8
 38870                           indf1	equ	0xFE7
 38871                           postinc1	equ	0xFE6
 38872                           postdec1	equ	0xFE5
 38873                           plusw1	equ	0xFE3
 38874                           fsr1h	equ	0xFE2
 38875                           fsr1l	equ	0xFE1
 38876                           bsr	equ	0xFE0
 38877                           indf2	equ	0xFDF
 38878                           postinc2	equ	0xFDE
 38879                           postdec2	equ	0xFDD
 38880                           plusw2	equ	0xFDB
 38881                           fsr2h	equ	0xFDA
 38882                           fsr2l	equ	0xFD9
 38883                           status	equ	0xFD8
 38884                           
 38885 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 38886 ;; Defined at:
 38887 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 38888 ;; Parameters:    Size  Location     Type
 38889 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 38890 ;;		 -> relayBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 38891 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 38892 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 38893 ;;  DataLenght      1   30[COMRAM] unsigned char 
 38894 ;; Auto vars:     Size  Location     Type
 38895 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 38896 ;; Return value:  Size  Location     Type
 38897 ;;                  1    wreg      unsigned char 
 38898 ;; Registers used:
 38899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38900 ;; Tracked objects:
 38901 ;;		On entry : 0/0
 38902 ;;		On exit  : 0/0
 38903 ;;		Unchanged: 0/0
 38904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38905 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38908 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38909 ;;Total ram usage:        5 bytes
 38910 ;; Hardware stack levels used:    1
 38911 ;; Hardware stack levels required when called:    5
 38912 ;; This function calls:
 38913 ;;		i1_GenerateEvt
 38914 ;; This function is called by:
 38915 ;;		_I2cDummyTx
 38916 ;; This function uses a non-reentrant model
 38917 ;;
 38918                           
 38919                           	psect	text192
 38920  006606                     __ptext192:
 38921                           	opt stack 0
 38922  006606                     i1_I2cSlv_SendI2cMsg:
 38923                           	opt stack 8
 38924                           
 38925                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 38926                           
 38927                           ; BSR set to: 1
 38928                           ;incstack = 0
 38929  006606  0E00               	movlw	0
 38930  006608  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38931                           
 38932                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 38933  00660A  0100               	movlb	0	; () banked
 38934  00660C  05CF               	decf	_I2cComSts& (0+255),w,b
 38935  00660E  B4D8               	btfsc	status,2,c
 38936  006610  D014               	goto	i1l1412
 38937                           
 38938                           ; BSR set to: 0
 38939                           ;i2c_slv.c: 257: {
 38940                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 38941  006612  C01E  F39F         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 38942                           
 38943                           ; BSR set to: 0
 38944                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 38945  006616  0E00               	movlw	0
 38946  006618  0103               	movlb	3	; () banked
 38947  00661A  6FA0               	movwf	(_I2cTxPacket+1)& (0+255),b
 38948                           
 38949                           ; BSR set to: 3
 38950                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 38951  00661C  C01F  F3A3         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 38952                           
 38953                           ; BSR set to: 3
 38954                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 38955  006620  C01C  F3A1         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 38956  006624  C01D  F3A2         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 38957                           
 38958                           ; BSR set to: 3
 38959                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 38960  006628  0ED7               	movlw	low _I2cWriteDataEvt
 38961  00662A  6E19               	movwf	i1GenerateEvt@Event,c
 38962  00662C  0E00               	movlw	high _I2cWriteDataEvt
 38963  00662E  6E1A               	movwf	i1GenerateEvt@Event+1,c
 38964  006630  EC47  F036         	call	i1_GenerateEvt	;wreg free
 38965                           
 38966                           ;i2c_slv.c: 267: TxSts = 1u;
 38967  006634  0E01               	movlw	1
 38968  006636  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38969                           
 38970                           ;i2c_slv.c: 268: }
 38971  006638  0012               	return	
 38972  00663A                     i1l1412:
 38973                           
 38974                           ;i2c_slv.c: 269: else
 38975                           ;i2c_slv.c: 270: {
 38976                           ;i2c_slv.c: 272: TxSts = 0u;
 38977  00663A  0E00               	movlw	0
 38978  00663C  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38979  00663E  0012               	return	
 38980  006640                     __end_ofi1_I2cSlv_SendI2cMsg:
 38981                           	opt stack 0
 38982                           tosu	equ	0xFFF
 38983                           tosh	equ	0xFFE
 38984                           tosl	equ	0xFFD
 38985                           pclatu	equ	0xFFB
 38986                           pclath	equ	0xFFA
 38987                           tblptru	equ	0xFF8
 38988                           tblptrh	equ	0xFF7
 38989                           tblptrl	equ	0xFF6
 38990                           tablat	equ	0xFF5
 38991                           prodh	equ	0xFF4
 38992                           prodl	equ	0xFF3
 38993                           intcon	equ	0xFF2
 38994                           intcon2	equ	0xFF1
 38995                           intcon3	equ	0xFF0
 38996                           indf0	equ	0xFEF
 38997                           postinc0	equ	0xFEE
 38998                           plusw0	equ	0xFEB
 38999                           fsr0h	equ	0xFEA
 39000                           fsr0l	equ	0xFE9
 39001                           wreg	equ	0xFE8
 39002                           indf1	equ	0xFE7
 39003                           postinc1	equ	0xFE6
 39004                           postdec1	equ	0xFE5
 39005                           plusw1	equ	0xFE3
 39006                           fsr1h	equ	0xFE2
 39007                           fsr1l	equ	0xFE1
 39008                           bsr	equ	0xFE0
 39009                           indf2	equ	0xFDF
 39010                           postinc2	equ	0xFDE
 39011                           postdec2	equ	0xFDD
 39012                           plusw2	equ	0xFDB
 39013                           fsr2h	equ	0xFDA
 39014                           fsr2l	equ	0xFD9
 39015                           status	equ	0xFD8
 39016                           
 39017 ;; *************** function i1_GenerateEvt *****************
 39018 ;; Defined at:
 39019 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 39020 ;; Parameters:    Size  Location     Type
 39021 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 39022 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 39023 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 39024 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 39025 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 39026 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 39027 ;; Auto vars:     Size  Location     Type
 39028 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 39029 ;; Return value:  Size  Location     Type
 39030 ;;                  1    wreg      enum E7699
 39031 ;; Registers used:
 39032 ;;		wreg, fsr2l, fsr2h, status,2
 39033 ;; Tracked objects:
 39034 ;;		On entry : 0/0
 39035 ;;		On exit  : 0/0
 39036 ;;		Unchanged: 0/0
 39037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39041 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39042 ;;Total ram usage:        3 bytes
 39043 ;; Hardware stack levels used:    1
 39044 ;; Hardware stack levels required when called:    4
 39045 ;; This function calls:
 39046 ;;		Nothing
 39047 ;; This function is called by:
 39048 ;;		i1_I2cSlv_SendI2cMsg
 39049 ;; This function uses a non-reentrant model
 39050 ;;
 39051                           
 39052                           	psect	text193
 39053  006C8E                     __ptext193:
 39054                           	opt stack 0
 39055  006C8E                     i1_GenerateEvt:
 39056                           	opt stack 8
 39057                           
 39058                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 39059                           
 39060                           ;incstack = 0
 39061  006C8E  0E00               	movlw	0
 39062  006C90  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 39063                           
 39064                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 39065  006C92  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 39066  006C96  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 39067  006C9A  0E02               	movlw	2
 39068  006C9C  6EDF               	movwf	indf2,c
 39069                           
 39070                           ;os_ser.c: 83: EventStatus = EventSent;
 39071  006C9E  0E02               	movlw	2
 39072  006CA0  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 39073  006CA2  0012               	return	
 39074  006CA4                     __end_ofi1_GenerateEvt:
 39075                           	opt stack 0
 39076                           tosu	equ	0xFFF
 39077                           tosh	equ	0xFFE
 39078                           tosl	equ	0xFFD
 39079                           pclatu	equ	0xFFB
 39080                           pclath	equ	0xFFA
 39081                           tblptru	equ	0xFF8
 39082                           tblptrh	equ	0xFF7
 39083                           tblptrl	equ	0xFF6
 39084                           tablat	equ	0xFF5
 39085                           prodh	equ	0xFF4
 39086                           prodl	equ	0xFF3
 39087                           intcon	equ	0xFF2
 39088                           intcon2	equ	0xFF1
 39089                           intcon3	equ	0xFF0
 39090                           indf0	equ	0xFEF
 39091                           postinc0	equ	0xFEE
 39092                           plusw0	equ	0xFEB
 39093                           fsr0h	equ	0xFEA
 39094                           fsr0l	equ	0xFE9
 39095                           wreg	equ	0xFE8
 39096                           indf1	equ	0xFE7
 39097                           postinc1	equ	0xFE6
 39098                           postdec1	equ	0xFE5
 39099                           plusw1	equ	0xFE3
 39100                           fsr1h	equ	0xFE2
 39101                           fsr1l	equ	0xFE1
 39102                           bsr	equ	0xFE0
 39103                           indf2	equ	0xFDF
 39104                           postinc2	equ	0xFDE
 39105                           postdec2	equ	0xFDD
 39106                           plusw2	equ	0xFDB
 39107                           fsr2h	equ	0xFDA
 39108                           fsr2l	equ	0xFD9
 39109                           status	equ	0xFD8
 39110                           
 39111 ;; *************** function _HighPriorityIsr *****************
 39112 ;; Defined at:
 39113 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 39114 ;; Parameters:    Size  Location     Type
 39115 ;;		None
 39116 ;; Auto vars:     Size  Location     Type
 39117 ;;		None
 39118 ;; Return value:  Size  Location     Type
 39119 ;;                  1    wreg      void 
 39120 ;; Registers used:
 39121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39122 ;; Tracked objects:
 39123 ;;		On entry : 0/0
 39124 ;;		On exit  : 0/0
 39125 ;;		Unchanged: 0/0
 39126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39129 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39130 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39131 ;;Total ram usage:       18 bytes
 39132 ;; Hardware stack levels used:    1
 39133 ;; Hardware stack levels required when called:    3
 39134 ;; This function calls:
 39135 ;;		_Mcu_Int0Isr
 39136 ;;		_Mcu_Int1Isr
 39137 ;;		_Rtcc_RtcIsr
 39138 ;;		_Uart_Uart1RxIsr
 39139 ;; This function is called by:
 39140 ;;		Interrupt level 2
 39141 ;; This function uses a non-reentrant model
 39142 ;;
 39143                           
 39144                           	psect	intcode
 39145  000008                     __pintcode:
 39146                           	opt stack 0
 39147  000008                     _HighPriorityIsr:
 39148                           	opt stack 8
 39149                           
 39150                           ;incstack = 0
 39151  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 39152  00000A  EFE2  F023         	goto	int_func
 39153                           tosu	equ	0xFFF
 39154                           tosh	equ	0xFFE
 39155                           tosl	equ	0xFFD
 39156                           pclatu	equ	0xFFB
 39157                           pclath	equ	0xFFA
 39158                           tblptru	equ	0xFF8
 39159                           tblptrh	equ	0xFF7
 39160                           tblptrl	equ	0xFF6
 39161                           tablat	equ	0xFF5
 39162                           prodh	equ	0xFF4
 39163                           prodl	equ	0xFF3
 39164                           intcon	equ	0xFF2
 39165                           intcon2	equ	0xFF1
 39166                           intcon3	equ	0xFF0
 39167                           indf0	equ	0xFEF
 39168                           postinc0	equ	0xFEE
 39169                           plusw0	equ	0xFEB
 39170                           fsr0h	equ	0xFEA
 39171                           fsr0l	equ	0xFE9
 39172                           wreg	equ	0xFE8
 39173                           indf1	equ	0xFE7
 39174                           postinc1	equ	0xFE6
 39175                           postdec1	equ	0xFE5
 39176                           plusw1	equ	0xFE3
 39177                           fsr1h	equ	0xFE2
 39178                           fsr1l	equ	0xFE1
 39179                           bsr	equ	0xFE0
 39180                           indf2	equ	0xFDF
 39181                           postinc2	equ	0xFDE
 39182                           postdec2	equ	0xFDD
 39183                           plusw2	equ	0xFDB
 39184                           fsr2h	equ	0xFDA
 39185                           fsr2l	equ	0xFD9
 39186                           status	equ	0xFD8
 39187                           
 39188                           	psect	intcode_body
 39189  0047C4                     __pintcode_body:
 39190                           	opt stack 8
 39191  0047C4                     int_func:
 39192                           	opt stack 8
 39193  0047C4  CFFA F007          	movff	pclath,??_HighPriorityIsr
 39194  0047C8  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 39195  0047CC  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 39196  0047D0  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 39197  0047D4  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 39198  0047D8  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 39199  0047DC  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 39200  0047E0  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 39201  0047E4  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 39202  0047E8  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 39203  0047EC  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 39204  0047F0  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 39205  0047F4  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 39206  0047F8  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 39207  0047FC  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 39208  004800  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 39209  004804  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 39210  004808  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 39211                           
 39212                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 39213  00480C  B2F2               	btfsc	intcon,1,c	;volatile
 39214                           
 39215                           ;irq.c: 158: {
 39216                           ;irq.c: 160: Mcu_Int0Isr();
 39217  00480E  ECFF  F036         	call	_Mcu_Int0Isr	;wreg free
 39218                           
 39219                           ;irq.c: 161: }
 39220                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 39221  004812  B0F0               	btfsc	intcon3,0,c	;volatile
 39222                           
 39223                           ;irq.c: 167: {
 39224                           ;irq.c: 169: Mcu_Int1Isr();
 39225  004814  ECFD  F036         	call	_Mcu_Int1Isr	;wreg free
 39226                           
 39227                           ;irq.c: 170: }
 39228                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 39229  004818  B0A4               	btfsc	4004,0,c	;volatile
 39230                           
 39231                           ;irq.c: 203: {
 39232                           ;irq.c: 205: Rtcc_RtcIsr();
 39233  00481A  ECFB  F036         	call	_Rtcc_RtcIsr	;wreg free
 39234                           
 39235                           ;irq.c: 206: }
 39236                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 39237  00481E  BA9E               	btfsc	3998,5,c	;volatile
 39238                           
 39239                           ;irq.c: 212: {
 39240                           ;irq.c: 214: Uart_Uart1RxIsr();
 39241  004820  ECA2  F036         	call	_Uart_Uart1RxIsr	;wreg free
 39242  004824  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 39243  004828  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 39244  00482C  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 39245  004830  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 39246  004834  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 39247  004838  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 39248  00483C  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 39249  004840  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 39250  004844  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 39251  004848  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 39252  00484C  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 39253  004850  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 39254  004854  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 39255  004858  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 39256  00485C  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 39257  004860  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 39258  004864  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 39259  004868  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 39260  00486C  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 39261  00486E  0011               	retfie		f
 39262  004870                     __end_of_HighPriorityIsr:
 39263                           	opt stack 0
 39264                           tosu	equ	0xFFF
 39265                           tosh	equ	0xFFE
 39266                           tosl	equ	0xFFD
 39267                           pclatu	equ	0xFFB
 39268                           pclath	equ	0xFFA
 39269                           tblptru	equ	0xFF8
 39270                           tblptrh	equ	0xFF7
 39271                           tblptrl	equ	0xFF6
 39272                           tablat	equ	0xFF5
 39273                           prodh	equ	0xFF4
 39274                           prodl	equ	0xFF3
 39275                           intcon	equ	0xFF2
 39276                           intcon2	equ	0xFF1
 39277                           intcon3	equ	0xFF0
 39278                           indf0	equ	0xFEF
 39279                           postinc0	equ	0xFEE
 39280                           plusw0	equ	0xFEB
 39281                           fsr0h	equ	0xFEA
 39282                           fsr0l	equ	0xFE9
 39283                           wreg	equ	0xFE8
 39284                           indf1	equ	0xFE7
 39285                           postinc1	equ	0xFE6
 39286                           postdec1	equ	0xFE5
 39287                           plusw1	equ	0xFE3
 39288                           fsr1h	equ	0xFE2
 39289                           fsr1l	equ	0xFE1
 39290                           bsr	equ	0xFE0
 39291                           indf2	equ	0xFDF
 39292                           postinc2	equ	0xFDE
 39293                           postdec2	equ	0xFDD
 39294                           plusw2	equ	0xFDB
 39295                           fsr2h	equ	0xFDA
 39296                           fsr2l	equ	0xFD9
 39297                           status	equ	0xFD8
 39298                           
 39299 ;; *************** function _Uart_Uart1RxIsr *****************
 39300 ;; Defined at:
 39301 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 39302 ;; Parameters:    Size  Location     Type
 39303 ;;		None
 39304 ;; Auto vars:     Size  Location     Type
 39305 ;;		None
 39306 ;; Return value:  Size  Location     Type
 39307 ;;                  1    wreg      void 
 39308 ;; Registers used:
 39309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39310 ;; Tracked objects:
 39311 ;;		On entry : 0/0
 39312 ;;		On exit  : 0/0
 39313 ;;		Unchanged: 0/0
 39314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39319 ;;Total ram usage:        0 bytes
 39320 ;; Hardware stack levels used:    1
 39321 ;; Hardware stack levels required when called:    2
 39322 ;; This function calls:
 39323 ;;		_Uart_MdmGsmGprsReadService
 39324 ;; This function is called by:
 39325 ;;		_HighPriorityIsr
 39326 ;; This function uses a non-reentrant model
 39327 ;;
 39328                           
 39329                           	psect	text195
 39330  006D44                     __ptext195:
 39331                           	opt stack 0
 39332  006D44                     _Uart_Uart1RxIsr:
 39333                           	opt stack 8
 39334                           
 39335                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 39336                           ;uart_drv.c: 590: UartRxData = RCREG1;
 39337                           
 39338                           ;incstack = 0
 39339  006D44  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 39340                           
 39341                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 39342  006D48  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 39343  006D4C  0E01               	movlw	1
 39344  006D4E  EC61  F01F         	call	_Uart_MdmGsmGprsReadService
 39345  006D52  0012               	return		;funcret
 39346  006D54                     __end_of_Uart_Uart1RxIsr:
 39347                           	opt stack 0
 39348                           tosu	equ	0xFFF
 39349                           tosh	equ	0xFFE
 39350                           tosl	equ	0xFFD
 39351                           pclatu	equ	0xFFB
 39352                           pclath	equ	0xFFA
 39353                           tblptru	equ	0xFF8
 39354                           tblptrh	equ	0xFF7
 39355                           tblptrl	equ	0xFF6
 39356                           tablat	equ	0xFF5
 39357                           prodh	equ	0xFF4
 39358                           prodl	equ	0xFF3
 39359                           intcon	equ	0xFF2
 39360                           intcon2	equ	0xFF1
 39361                           intcon3	equ	0xFF0
 39362                           indf0	equ	0xFEF
 39363                           postinc0	equ	0xFEE
 39364                           plusw0	equ	0xFEB
 39365                           fsr0h	equ	0xFEA
 39366                           fsr0l	equ	0xFE9
 39367                           wreg	equ	0xFE8
 39368                           indf1	equ	0xFE7
 39369                           postinc1	equ	0xFE6
 39370                           postdec1	equ	0xFE5
 39371                           plusw1	equ	0xFE3
 39372                           fsr1h	equ	0xFE2
 39373                           fsr1l	equ	0xFE1
 39374                           bsr	equ	0xFE0
 39375                           indf2	equ	0xFDF
 39376                           postinc2	equ	0xFDE
 39377                           postdec2	equ	0xFDD
 39378                           plusw2	equ	0xFDB
 39379                           fsr2h	equ	0xFDA
 39380                           fsr2l	equ	0xFD9
 39381                           status	equ	0xFD8
 39382                           
 39383 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 39384 ;; Defined at:
 39385 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 39386 ;; Parameters:    Size  Location     Type
 39387 ;;  Module          1    wreg     unsigned char 
 39388 ;;  UartData        1    3[COMRAM] unsigned char 
 39389 ;; Auto vars:     Size  Location     Type
 39390 ;;  Module          1    0[COMRAM] unsigned char 
 39391 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 39392 ;; Return value:  Size  Location     Type
 39393 ;;                  1    wreg      void 
 39394 ;; Registers used:
 39395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39396 ;; Tracked objects:
 39397 ;;		On entry : 0/0
 39398 ;;		On exit  : 0/0
 39399 ;;		Unchanged: 0/0
 39400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39401 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39402 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39404 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39405 ;;Total ram usage:        3 bytes
 39406 ;; Hardware stack levels used:    1
 39407 ;; Hardware stack levels required when called:    1
 39408 ;; This function calls:
 39409 ;;		i2_GenerateEvt
 39410 ;; This function is called by:
 39411 ;;		_Uart_Uart1RxIsr
 39412 ;; This function uses a non-reentrant model
 39413 ;;
 39414                           
 39415                           	psect	text196
 39416  003EC2                     __ptext196:
 39417                           	opt stack 0
 39418  003EC2                     _Uart_MdmGsmGprsReadService:
 39419                           	opt stack 8
 39420                           
 39421                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 39422                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 39423                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 39424                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 39425                           
 39426                           ;incstack = 0
 39427  003EC2  0E00               	movlw	0
 39428  003EC4  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 39429  003EC6  0E00               	movlw	0
 39430  003EC8  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 39431                           
 39432                           ;uart_drv.c: 383: switch (RxState)
 39433  003ECA  D058               	goto	i2l680
 39434  003ECC                     
 39435                           ;uart_drv.c: 387: if (UartData == '\r')
 39436  003ECC  0E0D               	movlw	13
 39437  003ECE  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 39438  003ED0  A4D8               	btfss	status,2,c
 39439  003ED2  D003               	goto	i2l682
 39440                           
 39441                           ;uart_drv.c: 388: {
 39442                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 39443  003ED4  0E01               	movlw	1
 39444  003ED6  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 39445                           
 39446                           ;uart_drv.c: 391: }
 39447  003ED8  0012               	return	
 39448  003EDA                     i2l682:
 39449                           
 39450                           ;uart_drv.c: 392: else
 39451                           ;uart_drv.c: 393: {
 39452                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 39453  003EDA  0E90               	movlw	144
 39454  003EDC  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 39455  003EDE  0E01               	movlw	1
 39456  003EE0  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 39457  003EE2  B0D8               	btfsc	status,0,c
 39458  003EE4  0012               	return	
 39459                           
 39460                           ;uart_drv.c: 395: {
 39461                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 39462  003EE6  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 39463  003EE8  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 39464  003EEA  6ED9               	movwf	fsr2l,c
 39465  003EEC  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 39466  003EEE  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 39467  003EF0  6EDA               	movwf	fsr2h,c
 39468  003EF2  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 39469                           
 39470                           ;uart_drv.c: 399: RxCounter++;
 39471  003EF6  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 39472  003EF8  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 39473                           
 39474                           ;uart_drv.c: 400: }
 39475                           ;uart_drv.c: 401: }
 39476                           ;uart_drv.c: 402: break;
 39477  003EFA  0012               	return	
 39478  003EFC                     
 39479                           ;uart_drv.c: 406: if (UartData == '\n')
 39480  003EFC  0E0A               	movlw	10
 39481  003EFE  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 39482  003F00  A4D8               	btfss	status,2,c
 39483  003F02  D035               	goto	i2l688
 39484                           
 39485                           ;uart_drv.c: 407: {
 39486                           ;uart_drv.c: 409: if (RxCounter > 0)
 39487  003F04  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 39488  003F06  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 39489  003F08  B4D8               	btfsc	status,2,c
 39490  003F0A  D031               	goto	i2l688
 39491                           
 39492                           ;uart_drv.c: 410: {
 39493                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 39494  003F0C  0E00               	movlw	0
 39495  003F0E  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 39496  003F10  0E00               	movlw	0
 39497  003F12  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 39498  003F14  D010               	goto	i2l689
 39499  003F16                     
 39500                           ;uart_drv.c: 413: {
 39501                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 39502  003F16  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 39503  003F18  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 39504  003F1A  6ED9               	movwf	fsr2l,c
 39505  003F1C  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 39506  003F1E  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 39507  003F20  6EDA               	movwf	fsr2h,c
 39508  003F22  0E58               	movlw	low _RxBuffer
 39509  003F24  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 39510  003F26  6EE1               	movwf	fsr1l,c
 39511  003F28  0E0C               	movlw	high _RxBuffer
 39512  003F2A  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 39513  003F2C  6EE2               	movwf	fsr1h,c
 39514  003F2E  CFDF FFE7          	movff	indf2,indf1
 39515  003F32  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 39516  003F34  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 39517  003F36                     i2l689:
 39518  003F36  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 39519  003F38  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 39520  003F3A  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 39521  003F3C  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 39522  003F3E  A0D8               	btfss	status,0,c
 39523  003F40  D7EA               	goto	i2l690
 39524                           
 39525                           ;uart_drv.c: 415: }
 39526                           ;uart_drv.c: 417: RxLen = RxCounter;
 39527  003F42  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 39528  003F46  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 39529                           
 39530                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 39531  003F4A  0E3C               	movlw	low _NewStringReceived
 39532  003F4C  6E01               	movwf	i2GenerateEvt@Event,c
 39533  003F4E  0E00               	movlw	high _NewStringReceived
 39534  003F50  6E02               	movwf	i2GenerateEvt@Event+1,c
 39535  003F52  EC52  F036         	call	i2_GenerateEvt	;wreg free
 39536                           
 39537                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 39538  003F56  0E3B               	movlw	low _NewMdmEvtParserRequest
 39539  003F58  6E01               	movwf	i2GenerateEvt@Event,c
 39540  003F5A  0E00               	movlw	high _NewMdmEvtParserRequest
 39541  003F5C  6E02               	movwf	i2GenerateEvt@Event+1,c
 39542  003F5E  EC52  F036         	call	i2_GenerateEvt	;wreg free
 39543                           
 39544                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 39545  003F62  0E3A               	movlw	low _NewStringMdmTerminal
 39546  003F64  6E01               	movwf	i2GenerateEvt@Event,c
 39547  003F66  0E00               	movlw	high _NewStringMdmTerminal
 39548  003F68  6E02               	movwf	i2GenerateEvt@Event+1,c
 39549  003F6A  EC52  F036         	call	i2_GenerateEvt	;wreg free
 39550  003F6E                     i2l688:
 39551                           
 39552                           ;uart_drv.c: 427: }
 39553                           ;uart_drv.c: 429: RxState = ReadData;
 39554                           
 39555                           ;uart_drv.c: 424: else
 39556                           ;uart_drv.c: 425: {
 39557                           
 39558                           ;uart_drv.c: 422: }
 39559                           ;uart_drv.c: 423: }
 39560  003F6E  0E00               	movlw	0
 39561  003F70  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 39562                           
 39563                           ;uart_drv.c: 431: RxCounter = 0;
 39564  003F72  0E00               	movlw	0
 39565  003F74  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 39566  003F76  0E00               	movlw	0
 39567  003F78  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 39568                           
 39569                           ;uart_drv.c: 436: }
 39570                           
 39571                           ;uart_drv.c: 435: break;
 39572                           
 39573                           ;uart_drv.c: 434: default:
 39574                           
 39575                           ;uart_drv.c: 432: break;
 39576  003F7A  0012               	return	
 39577  003F7C                     i2l680:
 39578  003F7C  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 39579                           
 39580                           ; Switch size 1, requested type "space"
 39581                           ; Number of cases is 2, Range of values is 0 to 1
 39582                           ; switch strategies available:
 39583                           ; Name         Instructions Cycles
 39584                           ; simple_byte            7     4 (average)
 39585                           ;	Chosen strategy is simple_byte
 39586  003F7E  0A00               	xorlw	0	; case 0
 39587  003F80  B4D8               	btfsc	status,2,c
 39588  003F82  D7A4               	goto	i2l681
 39589  003F84  0A01               	xorlw	1	; case 1
 39590  003F86  A4D8               	btfss	status,2,c
 39591  003F88  0012               	return	
 39592  003F8A  D7B8               	goto	i2l686
 39593  003F8C                     __end_of_Uart_MdmGsmGprsReadService:
 39594                           	opt stack 0
 39595                           tosu	equ	0xFFF
 39596                           tosh	equ	0xFFE
 39597                           tosl	equ	0xFFD
 39598                           pclatu	equ	0xFFB
 39599                           pclath	equ	0xFFA
 39600                           tblptru	equ	0xFF8
 39601                           tblptrh	equ	0xFF7
 39602                           tblptrl	equ	0xFF6
 39603                           tablat	equ	0xFF5
 39604                           prodh	equ	0xFF4
 39605                           prodl	equ	0xFF3
 39606                           intcon	equ	0xFF2
 39607                           intcon2	equ	0xFF1
 39608                           intcon3	equ	0xFF0
 39609                           indf0	equ	0xFEF
 39610                           postinc0	equ	0xFEE
 39611                           plusw0	equ	0xFEB
 39612                           fsr0h	equ	0xFEA
 39613                           fsr0l	equ	0xFE9
 39614                           wreg	equ	0xFE8
 39615                           indf1	equ	0xFE7
 39616                           postinc1	equ	0xFE6
 39617                           postdec1	equ	0xFE5
 39618                           plusw1	equ	0xFE3
 39619                           fsr1h	equ	0xFE2
 39620                           fsr1l	equ	0xFE1
 39621                           bsr	equ	0xFE0
 39622                           indf2	equ	0xFDF
 39623                           postinc2	equ	0xFDE
 39624                           postdec2	equ	0xFDD
 39625                           plusw2	equ	0xFDB
 39626                           fsr2h	equ	0xFDA
 39627                           fsr2l	equ	0xFD9
 39628                           status	equ	0xFD8
 39629                           
 39630 ;; *************** function i2_GenerateEvt *****************
 39631 ;; Defined at:
 39632 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 39633 ;; Parameters:    Size  Location     Type
 39634 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 39635 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 39636 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 39637 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 39638 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 39639 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 39640 ;; Auto vars:     Size  Location     Type
 39641 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 39642 ;; Return value:  Size  Location     Type
 39643 ;;                  1    wreg      enum E7699
 39644 ;; Registers used:
 39645 ;;		wreg, fsr2l, fsr2h, status,2
 39646 ;; Tracked objects:
 39647 ;;		On entry : 0/0
 39648 ;;		On exit  : 0/0
 39649 ;;		Unchanged: 0/0
 39650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39654 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39655 ;;Total ram usage:        3 bytes
 39656 ;; Hardware stack levels used:    1
 39657 ;; This function calls:
 39658 ;;		Nothing
 39659 ;; This function is called by:
 39660 ;;		_Uart_MdmGsmGprsReadService
 39661 ;; This function uses a non-reentrant model
 39662 ;;
 39663                           
 39664                           	psect	text197
 39665  006CA4                     __ptext197:
 39666                           	opt stack 0
 39667  006CA4                     i2_GenerateEvt:
 39668                           	opt stack 8
 39669                           
 39670                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 39671                           
 39672                           ;incstack = 0
 39673  006CA4  0E00               	movlw	0
 39674  006CA6  6E03               	movwf	i2GenerateEvt@EventStatus,c
 39675                           
 39676                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 39677  006CA8  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 39678  006CAC  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 39679  006CB0  0E02               	movlw	2
 39680  006CB2  6EDF               	movwf	indf2,c
 39681                           
 39682                           ;os_ser.c: 83: EventStatus = EventSent;
 39683  006CB4  0E02               	movlw	2
 39684  006CB6  6E03               	movwf	i2GenerateEvt@EventStatus,c
 39685  006CB8  0012               	return	
 39686  006CBA                     __end_ofi2_GenerateEvt:
 39687                           	opt stack 0
 39688                           tosu	equ	0xFFF
 39689                           tosh	equ	0xFFE
 39690                           tosl	equ	0xFFD
 39691                           pclatu	equ	0xFFB
 39692                           pclath	equ	0xFFA
 39693                           tblptru	equ	0xFF8
 39694                           tblptrh	equ	0xFF7
 39695                           tblptrl	equ	0xFF6
 39696                           tablat	equ	0xFF5
 39697                           prodh	equ	0xFF4
 39698                           prodl	equ	0xFF3
 39699                           intcon	equ	0xFF2
 39700                           intcon2	equ	0xFF1
 39701                           intcon3	equ	0xFF0
 39702                           indf0	equ	0xFEF
 39703                           postinc0	equ	0xFEE
 39704                           plusw0	equ	0xFEB
 39705                           fsr0h	equ	0xFEA
 39706                           fsr0l	equ	0xFE9
 39707                           wreg	equ	0xFE8
 39708                           indf1	equ	0xFE7
 39709                           postinc1	equ	0xFE6
 39710                           postdec1	equ	0xFE5
 39711                           plusw1	equ	0xFE3
 39712                           fsr1h	equ	0xFE2
 39713                           fsr1l	equ	0xFE1
 39714                           bsr	equ	0xFE0
 39715                           indf2	equ	0xFDF
 39716                           postinc2	equ	0xFDE
 39717                           postdec2	equ	0xFDD
 39718                           plusw2	equ	0xFDB
 39719                           fsr2h	equ	0xFDA
 39720                           fsr2l	equ	0xFD9
 39721                           status	equ	0xFD8
 39722                           
 39723 ;; *************** function _Rtcc_RtcIsr *****************
 39724 ;; Defined at:
 39725 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 39726 ;; Parameters:    Size  Location     Type
 39727 ;;		None
 39728 ;; Auto vars:     Size  Location     Type
 39729 ;;		None
 39730 ;; Return value:  Size  Location     Type
 39731 ;;                  1    wreg      void 
 39732 ;; Registers used:
 39733 ;;		wreg, status,2, status,0
 39734 ;; Tracked objects:
 39735 ;;		On entry : 0/0
 39736 ;;		On exit  : 0/0
 39737 ;;		Unchanged: 0/0
 39738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39743 ;;Total ram usage:        0 bytes
 39744 ;; Hardware stack levels used:    1
 39745 ;; This function calls:
 39746 ;;		Nothing
 39747 ;; This function is called by:
 39748 ;;		_HighPriorityIsr
 39749 ;; This function uses a non-reentrant model
 39750 ;;
 39751                           
 39752                           	psect	text198
 39753  006DF6                     __ptext198:
 39754                           	opt stack 0
 39755  006DF6                     _Rtcc_RtcIsr:
 39756                           	opt stack 10
 39757                           
 39758                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 39759                           
 39760                           ;incstack = 0
 39761  006DF6  90A4               	bcf	4004,0,c	;volatile
 39762  006DF8  0012               	return	
 39763  006DFA                     __end_of_Rtcc_RtcIsr:
 39764                           	opt stack 0
 39765                           tosu	equ	0xFFF
 39766                           tosh	equ	0xFFE
 39767                           tosl	equ	0xFFD
 39768                           pclatu	equ	0xFFB
 39769                           pclath	equ	0xFFA
 39770                           tblptru	equ	0xFF8
 39771                           tblptrh	equ	0xFF7
 39772                           tblptrl	equ	0xFF6
 39773                           tablat	equ	0xFF5
 39774                           prodh	equ	0xFF4
 39775                           prodl	equ	0xFF3
 39776                           intcon	equ	0xFF2
 39777                           intcon2	equ	0xFF1
 39778                           intcon3	equ	0xFF0
 39779                           indf0	equ	0xFEF
 39780                           postinc0	equ	0xFEE
 39781                           plusw0	equ	0xFEB
 39782                           fsr0h	equ	0xFEA
 39783                           fsr0l	equ	0xFE9
 39784                           wreg	equ	0xFE8
 39785                           indf1	equ	0xFE7
 39786                           postinc1	equ	0xFE6
 39787                           postdec1	equ	0xFE5
 39788                           plusw1	equ	0xFE3
 39789                           fsr1h	equ	0xFE2
 39790                           fsr1l	equ	0xFE1
 39791                           bsr	equ	0xFE0
 39792                           indf2	equ	0xFDF
 39793                           postinc2	equ	0xFDE
 39794                           postdec2	equ	0xFDD
 39795                           plusw2	equ	0xFDB
 39796                           fsr2h	equ	0xFDA
 39797                           fsr2l	equ	0xFD9
 39798                           status	equ	0xFD8
 39799                           
 39800 ;; *************** function _Mcu_Int1Isr *****************
 39801 ;; Defined at:
 39802 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 39803 ;; Parameters:    Size  Location     Type
 39804 ;;		None
 39805 ;; Auto vars:     Size  Location     Type
 39806 ;;		None
 39807 ;; Return value:  Size  Location     Type
 39808 ;;                  1    wreg      void 
 39809 ;; Registers used:
 39810 ;;		wreg, status,2, status,0
 39811 ;; Tracked objects:
 39812 ;;		On entry : 0/0
 39813 ;;		On exit  : 0/0
 39814 ;;		Unchanged: 0/0
 39815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39820 ;;Total ram usage:        0 bytes
 39821 ;; Hardware stack levels used:    1
 39822 ;; This function calls:
 39823 ;;		Nothing
 39824 ;; This function is called by:
 39825 ;;		_HighPriorityIsr
 39826 ;; This function uses a non-reentrant model
 39827 ;;
 39828                           
 39829                           	psect	text199
 39830  006DFA                     __ptext199:
 39831                           	opt stack 0
 39832  006DFA                     _Mcu_Int1Isr:
 39833                           	opt stack 10
 39834                           
 39835                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 39836                           
 39837                           ;incstack = 0
 39838  006DFA  90F0               	bcf	intcon3,0,c	;volatile
 39839  006DFC  0012               	return	
 39840  006DFE                     __end_of_Mcu_Int1Isr:
 39841                           	opt stack 0
 39842                           tosu	equ	0xFFF
 39843                           tosh	equ	0xFFE
 39844                           tosl	equ	0xFFD
 39845                           pclatu	equ	0xFFB
 39846                           pclath	equ	0xFFA
 39847                           tblptru	equ	0xFF8
 39848                           tblptrh	equ	0xFF7
 39849                           tblptrl	equ	0xFF6
 39850                           tablat	equ	0xFF5
 39851                           prodh	equ	0xFF4
 39852                           prodl	equ	0xFF3
 39853                           intcon	equ	0xFF2
 39854                           intcon2	equ	0xFF1
 39855                           intcon3	equ	0xFF0
 39856                           indf0	equ	0xFEF
 39857                           postinc0	equ	0xFEE
 39858                           plusw0	equ	0xFEB
 39859                           fsr0h	equ	0xFEA
 39860                           fsr0l	equ	0xFE9
 39861                           wreg	equ	0xFE8
 39862                           indf1	equ	0xFE7
 39863                           postinc1	equ	0xFE6
 39864                           postdec1	equ	0xFE5
 39865                           plusw1	equ	0xFE3
 39866                           fsr1h	equ	0xFE2
 39867                           fsr1l	equ	0xFE1
 39868                           bsr	equ	0xFE0
 39869                           indf2	equ	0xFDF
 39870                           postinc2	equ	0xFDE
 39871                           postdec2	equ	0xFDD
 39872                           plusw2	equ	0xFDB
 39873                           fsr2h	equ	0xFDA
 39874                           fsr2l	equ	0xFD9
 39875                           status	equ	0xFD8
 39876                           
 39877 ;; *************** function _Mcu_Int0Isr *****************
 39878 ;; Defined at:
 39879 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 39880 ;; Parameters:    Size  Location     Type
 39881 ;;		None
 39882 ;; Auto vars:     Size  Location     Type
 39883 ;;		None
 39884 ;; Return value:  Size  Location     Type
 39885 ;;                  1    wreg      void 
 39886 ;; Registers used:
 39887 ;;		wreg, status,2, status,0
 39888 ;; Tracked objects:
 39889 ;;		On entry : 0/0
 39890 ;;		On exit  : 0/0
 39891 ;;		Unchanged: 0/0
 39892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39897 ;;Total ram usage:        0 bytes
 39898 ;; Hardware stack levels used:    1
 39899 ;; This function calls:
 39900 ;;		Nothing
 39901 ;; This function is called by:
 39902 ;;		_HighPriorityIsr
 39903 ;; This function uses a non-reentrant model
 39904 ;;
 39905                           
 39906                           	psect	text200
 39907  006DFE                     __ptext200:
 39908                           	opt stack 0
 39909  006DFE                     _Mcu_Int0Isr:
 39910                           	opt stack 10
 39911                           
 39912                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 39913                           
 39914                           ;incstack = 0
 39915  006DFE  92F2               	bcf	intcon,1,c	;volatile
 39916  006E00  0012               	return	
 39917  006E02                     __end_of_Mcu_Int0Isr:
 39918                           	opt stack 0
 39919                           tosu	equ	0xFFF
 39920                           tosh	equ	0xFFE
 39921                           tosl	equ	0xFFD
 39922                           pclatu	equ	0xFFB
 39923                           pclath	equ	0xFFA
 39924                           tblptru	equ	0xFF8
 39925                           tblptrh	equ	0xFF7
 39926                           tblptrl	equ	0xFF6
 39927                           tablat	equ	0xFF5
 39928                           prodh	equ	0xFF4
 39929                           prodl	equ	0xFF3
 39930                           intcon	equ	0xFF2
 39931                           intcon2	equ	0xFF1
 39932                           intcon3	equ	0xFF0
 39933                           indf0	equ	0xFEF
 39934                           postinc0	equ	0xFEE
 39935                           plusw0	equ	0xFEB
 39936                           fsr0h	equ	0xFEA
 39937                           fsr0l	equ	0xFE9
 39938                           wreg	equ	0xFE8
 39939                           indf1	equ	0xFE7
 39940                           postinc1	equ	0xFE6
 39941                           postdec1	equ	0xFE5
 39942                           plusw1	equ	0xFE3
 39943                           fsr1h	equ	0xFE2
 39944                           fsr1l	equ	0xFE1
 39945                           bsr	equ	0xFE0
 39946                           indf2	equ	0xFDF
 39947                           postinc2	equ	0xFDE
 39948                           postdec2	equ	0xFDD
 39949                           plusw2	equ	0xFDB
 39950                           fsr2h	equ	0xFDA
 39951                           fsr2l	equ	0xFD9
 39952                           status	equ	0xFD8
 39953                           tosu	equ	0xFFF
 39954                           tosh	equ	0xFFE
 39955                           tosl	equ	0xFFD
 39956                           pclatu	equ	0xFFB
 39957                           pclath	equ	0xFFA
 39958                           tblptru	equ	0xFF8
 39959                           tblptrh	equ	0xFF7
 39960                           tblptrl	equ	0xFF6
 39961                           tablat	equ	0xFF5
 39962                           prodh	equ	0xFF4
 39963                           prodl	equ	0xFF3
 39964                           intcon	equ	0xFF2
 39965                           intcon2	equ	0xFF1
 39966                           intcon3	equ	0xFF0
 39967                           indf0	equ	0xFEF
 39968                           postinc0	equ	0xFEE
 39969                           plusw0	equ	0xFEB
 39970                           fsr0h	equ	0xFEA
 39971                           fsr0l	equ	0xFE9
 39972                           wreg	equ	0xFE8
 39973                           indf1	equ	0xFE7
 39974                           postinc1	equ	0xFE6
 39975                           postdec1	equ	0xFE5
 39976                           plusw1	equ	0xFE3
 39977                           fsr1h	equ	0xFE2
 39978                           fsr1l	equ	0xFE1
 39979                           bsr	equ	0xFE0
 39980                           indf2	equ	0xFDF
 39981                           postinc2	equ	0xFDE
 39982                           postdec2	equ	0xFDD
 39983                           plusw2	equ	0xFDB
 39984                           fsr2h	equ	0xFDA
 39985                           fsr2l	equ	0xFD9
 39986                           status	equ	0xFD8
 39987                           
 39988                           	psect	text201
 39989  000000                     __ptext201:
 39990                           	opt stack 0
 39991                           tosu	equ	0xFFF
 39992                           tosh	equ	0xFFE
 39993                           tosl	equ	0xFFD
 39994                           pclatu	equ	0xFFB
 39995                           pclath	equ	0xFFA
 39996                           tblptru	equ	0xFF8
 39997                           tblptrh	equ	0xFF7
 39998                           tblptrl	equ	0xFF6
 39999                           tablat	equ	0xFF5
 40000                           prodh	equ	0xFF4
 40001                           prodl	equ	0xFF3
 40002                           intcon	equ	0xFF2
 40003                           intcon2	equ	0xFF1
 40004                           intcon3	equ	0xFF0
 40005                           indf0	equ	0xFEF
 40006                           postinc0	equ	0xFEE
 40007                           plusw0	equ	0xFEB
 40008                           fsr0h	equ	0xFEA
 40009                           fsr0l	equ	0xFE9
 40010                           wreg	equ	0xFE8
 40011                           indf1	equ	0xFE7
 40012                           postinc1	equ	0xFE6
 40013                           postdec1	equ	0xFE5
 40014                           plusw1	equ	0xFE3
 40015                           fsr1h	equ	0xFE2
 40016                           fsr1l	equ	0xFE1
 40017                           bsr	equ	0xFE0
 40018                           indf2	equ	0xFDF
 40019                           postinc2	equ	0xFDE
 40020                           postdec2	equ	0xFDD
 40021                           plusw2	equ	0xFDB
 40022                           fsr2h	equ	0xFDA
 40023                           fsr2l	equ	0xFD9
 40024                           status	equ	0xFD8
 40025                           
 40026                           	psect	rparam
 40027  0000                     tosu	equ	0xFFF
 40028                           tosh	equ	0xFFE
 40029                           tosl	equ	0xFFD
 40030                           pclatu	equ	0xFFB
 40031                           pclath	equ	0xFFA
 40032                           tblptru	equ	0xFF8
 40033                           tblptrh	equ	0xFF7
 40034                           tblptrl	equ	0xFF6
 40035                           tablat	equ	0xFF5
 40036                           prodh	equ	0xFF4
 40037                           prodl	equ	0xFF3
 40038                           intcon	equ	0xFF2
 40039                           intcon2	equ	0xFF1
 40040                           intcon3	equ	0xFF0
 40041                           indf0	equ	0xFEF
 40042                           postinc0	equ	0xFEE
 40043                           plusw0	equ	0xFEB
 40044                           fsr0h	equ	0xFEA
 40045                           fsr0l	equ	0xFE9
 40046                           wreg	equ	0xFE8
 40047                           indf1	equ	0xFE7
 40048                           postinc1	equ	0xFE6
 40049                           postdec1	equ	0xFE5
 40050                           plusw1	equ	0xFE3
 40051                           fsr1h	equ	0xFE2
 40052                           fsr1l	equ	0xFE1
 40053                           bsr	equ	0xFE0
 40054                           indf2	equ	0xFDF
 40055                           postinc2	equ	0xFDE
 40056                           postdec2	equ	0xFDD
 40057                           plusw2	equ	0xFDB
 40058                           fsr2h	equ	0xFDA
 40059                           fsr2l	equ	0xFD9
 40060                           status	equ	0xFD8
 40061                           
 40062                           	psect	temp
 40063  000042                     btemp:
 40064                           	opt stack 0
 40065  000042                     	ds	1
 40066  0000                     int$flags	set	btemp
 40067  0000                     wtemp6	set	btemp+1
 40068                           tosu	equ	0xFFF
 40069                           tosh	equ	0xFFE
 40070                           tosl	equ	0xFFD
 40071                           pclatu	equ	0xFFB
 40072                           pclath	equ	0xFFA
 40073                           tblptru	equ	0xFF8
 40074                           tblptrh	equ	0xFF7
 40075                           tblptrl	equ	0xFF6
 40076                           tablat	equ	0xFF5
 40077                           prodh	equ	0xFF4
 40078                           prodl	equ	0xFF3
 40079                           intcon	equ	0xFF2
 40080                           intcon2	equ	0xFF1
 40081                           intcon3	equ	0xFF0
 40082                           indf0	equ	0xFEF
 40083                           postinc0	equ	0xFEE
 40084                           plusw0	equ	0xFEB
 40085                           fsr0h	equ	0xFEA
 40086                           fsr0l	equ	0xFE9
 40087                           wreg	equ	0xFE8
 40088                           indf1	equ	0xFE7
 40089                           postinc1	equ	0xFE6
 40090                           postdec1	equ	0xFE5
 40091                           plusw1	equ	0xFE3
 40092                           fsr1h	equ	0xFE2
 40093                           fsr1l	equ	0xFE1
 40094                           bsr	equ	0xFE0
 40095                           indf2	equ	0xFDF
 40096                           postinc2	equ	0xFDE
 40097                           postdec2	equ	0xFDD
 40098                           plusw2	equ	0xFDB
 40099                           fsr2h	equ	0xFDA
 40100                           fsr2l	equ	0xFD9
 40101                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    579
    Data        170
    BSS         2392
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    201     256
    BANK3           256      0     255
    BANK4           192      4     189
    BANK5           256      0     214
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     250
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_32(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    findEmptySpot@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> addCmdFsm@numberInMemory(BANK1[1]), 

    isMasterNumber@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    isNumberInMemory@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> triggerCmdFsm@numberInMemory(BANK1[1]), delCmdFsm@numberInMemory(BANK1[1]), addCmdFsm@numberInMemory(BANK1[1]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> readBuffer(BANK3[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> emptyNumber(BANK4[13]), smsText(BANK4[20]), UsbMasterPhoneNumber(BANK4[15]), callerNumber(BANK4[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> blinkInSeconds(BANK3[2]), secondCounter(BANK3[2]), setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    triggerCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    resCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    resCmdFsm@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    detectUsbNumber@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    initFsm@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 4
		 -> memoryPreamble(BANK3[4]), 

    delCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    delCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    delCmdFsm@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    addCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    addCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    addCmdFsm@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> memoryPreamble(BANK3[4]), emptyNumber(BANK4[13]), smsText(BANK4[20]), UsbMasterPhoneNumber(BANK4[15]), 
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK8[50]), PhoneNumber(BANK5[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK8[50]), PhoneNumber(BANK5[20]), SendSmsSm@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> readBuffer(BANK3[13]), RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    StringCompare2Const@String2	PTR const unsigned char  size(2) Largest target is 4
		 -> parseCommand@resetCmd(BANK0[4]), parseCommand@deleteNumberCmd(BANK0[4]), parseCommand@addNumberCmd(BANK0[4]), 

    StringCompare2Const@String1	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    LedStateMachine@LedSts	PTR enum E8959 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK4[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK4[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 20
		 -> memoryPreamble(BANK3[4]), emptyNumber(BANK4[13]), smsText(BANK4[20]), UsbMasterPhoneNumber(BANK4[15]), 
		 -> callerNumber(BANK4[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4616$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4616$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4616$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4616$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3069$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3059$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3059$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3035$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3035$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3035$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3035$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2536_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2536_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetLastInteractionNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK1[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK1[1]), InitNetwork(BANK0[1]), MdmStsReady(BANK1[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_31(CODE[12]), STR_30(CODE[19]), STR_29(CODE[14]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), 
		 -> STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), 
		 -> STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _triggerRelay->_I2cSlv_SendI2cMsg
    _Eeprom_Reset->_I2cSlv_SendI2cMsg
    _waitSetupCall->_secondsAppTimer
    _savePreamble->_Eeprom_Write
    _initGprsModem->_Mdm_SetSmsFormat
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _detectUsbNumber->_saveNumberInMemory
    _detectCmd->_parseCommand
    _parseCommand->_StringCompare2Const
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _cmdVisualEffet->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _saveNumberInMemory->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _isNumberInMemory->_Eeprom_Read
    _isMasterNumber->_Eeprom_Read
    _findEmptySpot->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCopy
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _StringCopy->_GetCallerNumber
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_addCmdFsm
    _MyApp_Task->_delCmdFsm
    _triggerCmdFsm->_isNumberInMemory
    _resCmdFsm->_isMasterNumber
    _initFsm->_initEeprom
    _delCmdFsm->_isNumberInMemory
    _addCmdFsm->_isNumberInMemory
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Sch_MainScheduler->_InitializeTasks
    _Sch_MainScheduler->_ScheduleTasks
    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1380545
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0 1375914
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  688050
                                            200 BANK2      1     1      0
                                              0 BANK4      4     4      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  687864
                                            200 BANK2      1     1      0
                                              0 BANK4      2     2      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59354
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59354
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   42144
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                           1     1      0  423016
                _Led_SetLedBlinkTime
                          _addCmdFsm
                     _cmdVisualEffet
                          _delCmdFsm
                          _detectCmd
                    _detectUsbNumber
                            _initFsm
                          _resCmdFsm
                      _triggerCmdFsm
                _triggerVisualEffect
 ---------------------------------------------------------------------------------
 (4) _triggerVisualEffect                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _triggerCmdFsm                                        6     4      2   72606
                                              5 BANK1      6     4      2
                     _isMasterNumber
                   _isNumberInMemory
                    _secondsAppTimer
                       _triggerRelay
 ---------------------------------------------------------------------------------
 (5) _triggerRelay                                         2     2      0    4067
                                             37 BANK0      2     2      0
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (4) _resCmdFsm                                            6     2      4   35377
                                              3 BANK1      6     2      4
                       _Eeprom_Reset
                     _isMasterNumber
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Reset                                         1     1      0    6686
                                             37 BANK0      1     1      0
                        _ClearBuffer
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              3     1      2   95863
                                              3 BANK1      3     1      2
                    _GetCallerNumber
                   _Led_SetLedStatus
                    _detectUsbNumber
                         _initEeprom
                      _initGprsModem
                 _saveNumberInMemory
                       _savePreamble
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (5) _waitSetupCall                                        1     1      0   17846
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _getSetupCall                                         1     1      0    5527
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (5) _savePreamble                                         0     0      0    9862
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (6) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15786
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24954
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (5) _detectUsbNumber                                      3     1      2   10616
                                             57 BANK0      3     1      2
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (4) _detectCmd                                            1     1      0   33836
                                             53 BANK0      1     1      0
                    _GetCallerNumber
           _GetLastInteractionNumber
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                         _StringCopy
              _Uart_WriteConstString
                       _parseCommand
 ---------------------------------------------------------------------------------
 (5) _parseCommand                                        13    13      0    2114
                                             40 BANK0     13    13      0
                _StringCompare2Const
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (6) _StringCompare2Const                                 11     5      6    1168
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (5) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_HangPhoneCall                                    0     0      0    2751
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (5) _Mdm_GetSmsData                                       3     1      2    8061
                                             47 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (5) _GetLastInteractionNumber                             2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _delCmdFsm                                           10     4      6   67854
                                              5 BANK1     10     4      6
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (4) _cmdVisualEffet                                       2     2      0   12350
                                             51 BANK0      2     2      0
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   11326
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _addCmdFsm                                           10     4      6   93881
                                              5 BANK1     10     4      6
                      _findEmptySpot
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (5) _saveNumberInMemory                                   3     1      2   10340
                                             54 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write                                         7     4      3    9862
                                             47 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (5) _isNumberInMemory                                     5     1      4   28518
                                              0 BANK1      5     1      4
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _isMasterNumber                                       3     1      2   28285
                                              0 BANK1      3     1      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _findEmptySpot                                        3     1      2   25863
                                              0 BANK1      3     1      2
                        _Eeprom_Read
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (6) _isNumberValid                                        5     3      2     786
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Read                                          7     4      3   24874
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (7) _I2cSlv_QueryI2cData                                  7     0      7   23807
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    4023
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     633
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   72844
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   16197
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   12514
                                             47 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _StringCompare                                       11     5      6    2104
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   15392
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8747
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13998
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   43139
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   21606
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   21533
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _Uart_WriteConstString                                3     1      2    2751
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (9) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (9) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _StringCopy                                          10     4      6    5187
                                             37 BANK0     10     4      6
                    _GetCallerNumber (ARG)
           _GetLastInteractionNumber (ARG)
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7139
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7139
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2773
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) _Led_SetLedStatus                                     2     1      1     956
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _cmdVisualEffet
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare2Const
             _isNumberValid
         _detectUsbNumber
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _detectUsbNumber
             _saveNumberInMemory
               _Eeprom_Write
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _StringCopy
                   _GetCallerNumber (ARG)
                     _ClearBuffer
                     _ReceiveEvt
                   _GetLastInteractionNumber (ARG)
                 _initPreamble (ARG)
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _resCmdFsm
           _Eeprom_Reset
             _ClearBuffer
             _I2cSlv_SendI2cMsg
               _GenerateEvt
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
         _triggerCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
         _triggerVisualEffect
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _cmdVisualEffet
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare2Const
             _isNumberValid
         _detectUsbNumber
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _detectUsbNumber
             _saveNumberInMemory
               _Eeprom_Write
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _StringCopy
                   _GetCallerNumber (ARG)
                     _ClearBuffer
                     _ReceiveEvt
                   _GetLastInteractionNumber (ARG)
                 _initPreamble (ARG)
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _resCmdFsm
           _Eeprom_Reset
             _ClearBuffer
             _I2cSlv_SendI2cMsg
               _GenerateEvt
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
         _triggerCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
         _triggerVisualEffect
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      FA      22       97.7%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      D6      16       83.6%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FF      12       99.6%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C9     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      4      BD      14       98.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     9B2       8        0.0%
DATA                 0      0     CD2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Apr  3 12:41:00 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5BFA  
                 delCmdFsm@masterOpResult 010C                                _USB_SD_Ptr FC1B  
                          ??_getSetupCall 0083                 __size_of_Mdm_SetSmsFormat 0050  
                         ?_isMasterNumber 0100                      __size_of_TurnOnModem 004C  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 6B20  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 26EA                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0031                                       l202 2200  
                                     l203 2208                                       l205 2250  
                                     l206 2276                                       l208 227E  
                                     l160 1FE4                                       l209 229E  
                                     l161 1EBA                                       l162 2022  
                                     l170 1F82                                       l171 1F98  
                                     l163 1EC6                                       l315 49A6  
                                     l323 4972                                       l164 1F06  
                                     l316 491C                                       l420 4FE8  
                                     l500 4E02                                       l173 1F9C  
                                     l325 498C                                       l421 5008  
                                     l237 6B2C                                       l174 1FA4  
                                     l166 1F14                                       l318 4926  
                                     l422 5014               __end_of_USBStdGetDscHandler 2E62  
                                     l510 4DD4                                       l502 4D94  
                                     l175 1FB0                                       l167 1F3C  
                                     l319 494C                                       l423 5020  
                                     l511 4DC4                                       l503 4D84  
                                     l192 22A8                                       l176 1FC6  
                                     l416 5034                                       l424 502C  
                                     l512 4DE8                                       l504 4DAA  
                                     l520 6156                                       l193 2188  
                                     l169 1F4E                                       l417 4FDA  
                                     l441 17F2                                       l513 4DC8  
                                     l505 4D88                                       l521 6122  
                                     l194 22E0                                       l418 5062  
                                     l442 15FA                                       l514 4DCE  
                                     l506 4D8E                                       l530 3336  
                                     l195 2194                                       l179 1FD2  
                                     l419 4FE2                                       l523 613C  
                                     l531 339C                                       l196 21D4  
                                     l700 63BC                                       l444 1642  
                                     l532 3362                                       l445 168A  
                                     l541 6ACA                                       l198 21E2  
                                     l446 16D2                                       l199 21F6  
                                     l631 2B78                                       l447 171A  
                                     l448 1762                                       l528 33A2  
                                     l633 2BF0                                       l625 2B04  
                                     l449 17AA                                       l529 338E  
                                     l538 6ACE                                       l546 3FE4  
                                     l651 60A6                                       l707 64E0  
                                     l627 2B28                                       l715 6454  
                                     l539 6AC6                                       l547 4000  
                                     l660 60CA                                       l652 60A0  
                                     l716 642A                                       l709 64FA  
                                     l629 2B50                                       l718 6442  
                                     l639 6B12                                       l832 688E  
                                     l844 40B8                                       l668 0C4A  
                                     _BDT 000400                                       l790 6B48  
                                     l855 54A2                                       l775 2F84  
                                     l864 51FA                                       l856 5448  
                                     l857 54BC                                       l698 63A0  
                                     l858 5478                                       l867 520C  
                                     l982 2160                                       l983 2028  
                                     l985 204E                                       l987 206A  
                                     l988 20A0                                       l989 2114  
                                     l998 213A                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                   __end_of_HighPriorityIsr 4870  
                          ??_Mdm_MainTask 00A9                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 6716                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BB0  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CE  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 641E  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 2026  
           findEmptySpot@positionInMemory 0100             ??_Tmr_RegisterTmr2IsrCallback 007F  
                                    l1010 616A           InitGprsNetwork@GprsNetInitState 01E7  
                                    l1100 1B20                                      l1101 1B6C  
                                    l1013 6184                                      l1110 5FAA  
                             RiSm@Counter 02DB                                      l1031 3ACA  
                                    l1111 5FBE                                      l1032 3B04  
                                    l2000 59E8                                      l1033 3B2A  
                                    l1009 61A0                                      l1121 6016  
                                    l1027 3B64                                      l1035 3B4A  
                                    l1107 5FD0                                      l2100 2972  
                                    l1220 0DD6                                      l1028 3AB8  
                                    l1052 1E8C                                      l1060 1E5E  
                                    l1108 5F94                                      l2101 2866  
                                    l1053 1DA6                                      l2102 28EA  
                                    l1222 10B6                                      l1230 0FBE  
                                    l1070 2D16                                      l2006 59DC  
                                    l2111 3550                                      l1231 0FC2  
                                    l1223 0DEE                                      l1071 2C0E  
                                    l1055 1EA6                                      l2112 3498  
                                    l1232 1006                                      l1224 0E28  
                                    l1056 1DD8                                      l1152 69CA  
                                    l1136 69A6                                      l2008 59E2  
                                    l2113 356C                                      l2121 4A3C  
                                    l1241 1074                                      l1225 0E9C  
                                    l1129 5840                                      l2114 34B6  
                                    l2122 49CE                                      l1226 0E64  
                                    l1074 2C2A                                      l1058 1E28  
                                    l2123 4A64                                      l1219 107E  
                                    l1075 2C42                                      l1091 1B86  
                                    l2116 3526                                      l2124 49DE  
                                    l1252 0A5A                                      l1260 0744  
                                    l1236 1016                                      l1228 0F44  
                                    l3004 5B5C                                      l1092 1A04  
                                    l1412 64D2                                      l1156 66A0  
                                    l1404 5CEA                                      l2220 5298  
                                    l2125 49F0                                      l1261 06FC  
                                    l1253 05FA                                      l1237 105A  
                                    l1229 0F7E                                      l3005 5B70  
                                    l2037 5D94                                      l2045 5C72  
                                    l1405 5CAA                                      l2221 521E  
                                    l2142 6822                                      l2126 4A0A  
                                    l1078 2CB4                                      l1422 6AB6  
                                    l2046 5CA4                                      l2134 3DE4  
                                    l2143 6810                                      l1255 0ABC  
                                    l1263 07F8                                      l1095 1A20  
                                    l2151 5DE0                                      l2039 5DA0  
                                    l1407 5CE4                                      l2135 3D2C  
                                    l2223 5284                                      l2128 4A18  
                                    l1280 09CA                                      l1272 0930  
                                    l1264 0832                                      l1256 0612  
                                    l1096 1AD6                                      l2152 5DAA  
                                    l1440 3C42                                      l2145 6816  
                                    l2129 4A26                                      l1281 0A38  
                                    l1273 0974                                      l1265 085C  
                                    l1257 064C                                      l1097 1AFA  
                                    l1417 6418                                      l1441 3B8C  
                                    l2137 3D3A                                      l2146 681C  
                                    l1266 0896                                      l1258 0686  
                                    l2154 5DBC                                      l1442 3C58  
                                    l2250 5E64                                      l1267 08D0  
                                    l1259 06C0                                      l2155 5DCE  
                                    l1443 3BAA                                      l2251 5E8A  
                                    l1291 6278                                      l1268 0914  
                                    l1700 3858                                      l1604 2734  
                                    l1620 1BF8                                      l1285 0A48  
                                    l1277 0984                                      l1445 3C08  
                                    l2421 01AE                                      l1621 1C08  
                                    l1382 4284                                      l2270 66C0  
                                    l1286 0A50                                      l1278 09B0  
                                    l1446 3C1C                                      l2414 05D8  
                                    l2422 019C                                      l1702 38BC  
                                    l1606 275C                                      l1630 1CA4  
                                    l1622 1C10                                      l1294 6246  
                                    l2502 6BCE                                      l1391 424E  
                                    l1383 41E6                                      l2263 59CC  
                                    l2415 00E2                                      l1703 3882  
                                    l1631 1CB0                                      l1623 1C26  
                                    l1615 1BDC                                      l1384 4208  
                                    l2264 598C                                      l2256 5F32  
                                    l1448 3C3A                                      l2600 4CE0  
                                    l2432 0392                                      l1608 2798  
                                    l1640 1D2C                                      l1624 1C32  
                                    l1616 1BD2                                      l2520 69F6  
                                    l1393 426A                                      l2257 5F08  
                                    l2249 5E8E                                      l2433 0326  
                                    l1713 2FE4                                      l1633 1CC4  
                                    l1617 1BD0                                      l1394 4276  
                                    l1386 422A                                      l2098 295C  
                                    l2258 5F2E                                      l3162 39A0  
                                    l1650 452E                                      l2450 0424  
                                    l2434 02B4                                      l2418 0152  
                                    l1706 38FE                                      l1714 2FBE  
                                    l1626 1C5A                                      l2522 69FE  
                                    l2099 283E                                      l3163 3962  
                                    l2435 0250                                      l2419 01E2  
                                    l2427 01D0                                      l1707 38C4  
                                    l1643 62E2                                      l1811 3764  
                                    l3156 390E                                      l1652 458A  
                                    l2460 0576                                      l2452 0464  
                                    l2444 0402                                      l1716 305C  
                                    l1644 62F2                                      l1740 2E3A  
                                    l1812 376A                                      l1636 1CEA  
                                    l1628 1C6E                                      l2612 26AE  
                                    l2620 263C                USBConfigureEndpoint@handle 0083  
                                    l1389 4232                                      l2269 66D4  
                                    l3165 39D4                                      l3157 3908  
                                    l2453 057E                                      l2445 03D2  
                                    l2437 0304                                      l1717 3042  
                                    l1733 2E4A                                      l1725 35CC  
                                    l1813 3770                                      l1629 1C7A  
                                    l2613 25D2                                      l3430 5E18  
                                    l3182 539A                                      l3350 48F6  
                                    l2438 02C6                                      l1902 47A0  
                                    l1830 1444                                      l1742 2E42  
                                    l1734 2D46                                      l1750 46FE  
                                    l1814 3784                                      l1638 1D0E  
                                    l2622 266C                                      l3431 5E10  
                                    l3183 53A4                                      l3175 534C  
                                    l3191 55EC                                      l3159 3950  
                                    l3343 6338                                      l2455 04BA  
                                    l1903 473A                                      l1831 1446  
                                    l1751 4680                                      l1727 3640  
                                    l1815 378A                                      l2519 6A04  
                                    l2800 43DC                                      l3184 53B2  
                                    l3176 535C                                      l3192 55E4  
                                    l1648 4504                                      l3440 636E  
                                    l2456 047E                                      l1840 1544  
                                    l1832 1462                                      l1736 2D5A  
                                    l1752 4686                                      l1808 37EA  
                                    l1760 62CA                                      l2608 26D8  
                                    l2624 2688                                      l2616 25EE  
                                    l2801 43C6                                      l3337 6A96  
                                    l3441 6366                                      l3601 646E  
                                    l1905 4752                                      l1841 15C0  
                                    l1825 1384                                      l1737 2DE2  
                                    l1753 46A6                                      l1817 3790  
                                    l1809 375A                                      l1673 4BFC  
                                    l1761 62C8                                      l2609 25A0  
                                    l3434 5E38                                      l2810 65C6  
                                    l3178 537A                                      l3602 6468  
                                    l2474 1324                                      l2490 1294  
                                    l1906 4760                                      l1834 14F0  
                                    l1826 138A                                      l1746 46E8  
                                    l1818 37AE                                      l2618 260E  
                                    l3435 5E42                                      l3179 5372  
                                    l3195 5604                                      l3347 4878  
                                    l2459 052A                                      l2475 10BE  
                                    l1667 3E3E                                      l1907 477E  
                                    l1739 2DEA                                      l1747 466E  
                                    l1819 37CA                                      l1675 4C16  
                                    l2652 3492                                      l2804 43E0  
                                    l3196 560E                                      l3188 55CA  
                                    l1924 4EA4                                      l3444 6386  
                                    l3460 67C6                                      l2492 12FE  
                                    l2484 1114                                      l1908 4796  
                                    l1844 1576                                      l1836 14B8  
                                    l1828 13FC                                      l1684 323A  
                                    l3381 5420                                      l2653 33EA  
                                    l2805 43EC                                      l3197 561C  
                                    l3189 55D6                                      l3445 6390  
                                    l3349 48B4                                      l3621 18CE  
                                    l3461 67B4                                      l2477 10E4  
                                    l1837 14D6                                      l1685 31E2  
                                    l3382 542E                                      l2654 3412  
                                    l2902 4ACC                                      l2750 50DA  
                                    l3630 1908                                      l3710 6586  
                                    l2494 131E                                      l2486 1134  
                                    l1846 15CC                                      l3454 61E8  
                                    l1774 4FC2                                      l2647 3478  
                                    l2751 5070                                      l2831 553A  
                                    l1927 4E52                                      l3703 6A52  
                                    l2479 1100                                      l1679 4D4C  
                                    l1839 1538                                      l3455 61C6  
                                    l1775 4FBC                                      l2648 33BC  
                                    l2904 4AF8                                      l2912 6210  
                                    l2832 54FE                                      l1928 4E7E  
                                    l2488 1154                                      l1960 29F2  
                                    l1952 299A                                      l1768 65FA  
                                    l3377 53EC                                      l2665 346E  
                                    l2649 33E2                                      l2905 4B08  
                                    l2913 6236                                      l2593 31B6  
                                    l2585 3150                                      l1929 4E58  
                                    l3641 6C46                                      l3633 191A  
                                    l3617 1862                                      l1793 42DA  
                                    l1785 5856                                      l1689 3264  
                                    l1769 65F8                                      l3378 53E0  
                                    l2922 5938                                      l2586 314C  
                                    l2826 5526                                      l2834 551C  
                                    l3634 1986                                      l3714 6C2E  
                                    l1970 2AA6                                      l1962 2A4A  
                                    l1954 29A8                                      l1698 384E  
                                    l1794 42E0                                      l2659 3424  
                                    l2691 44E6                                      l2771 5188  
                                    l2827 54CE                                      l3627 18DE  
                                    l3619 187A                                      l1971 2AAA  
                                    l1963 2A12                                      l1795 435C  
                                    l1787 58A4                                      l2499 6BD4  
                                    l2924 596A                                      l2940 465C  
                                    l2692 446C                                      l2772 515A  
                                    l2756 50F6                                      l2828 54F4  
                                    l3636 19AC                                      l3628 18EE  
                                    l1956 29DC                                      l1796 4322  
                                    l2925 5970                                      l2941 45FA  
                                    l2933 45BE                                      l2693 44B6  
                                    l2589 318C                                      l2773 5166  
                                    l2757 50A2                                      l3637 19E6  
                                    l3661 3702                                      l2686 44D2  
                                    l2766 5174                                      l2758 50B6  
                                    l2782 606E                                      l2870 3A16  
                                    l3662 36BA                                      l3590 5AB6  
                                    l1966 2A8C                                      l1798 4342  
                                    l2951 5700                                      l2935 464E  
                                    l2943 4646                                      l2687 443E  
                                    l2599 4CAA                                      l2767 510C  
                                    l2759 50CE                                      l3663 36D2  
                                    l3655 367A                                      l1967 2A54  
                                    l1959 29EE                                      l2936 45CA  
                                    l2688 4464                __size_of_Mdm_IsSmsReceived 0024  
                                    l2784 607A                                      l2864 3A90  
                                    l3664 36E2                                      l3656 3674  
                                    l1992 6976                                _Led1OutSts 01F8  
                                    l2961 4F2C                                      l2937 45EA  
                                    l2769 5152                                      l2793 4404  
                                    l2857 6654                                      l2865 39F2  
                                    l1993 6966                                      l2962 4ECC  
                                    l2698 44CA                                      l2778 6AFA  
                                    l2794 4372                                      l2866 3A0C  
                                    l3658 36A2                                      l3586 5AA6  
                                    l2963 4EEC                                      l3595 675C  
                                    l3667 3740                                      l3587 5AA0  
                                    l1995 696C                                      l2796 4424  
                                    l2876 3A4A                                      l3596 6752  
                                    l2980 3C82                                      l2797 4380  
                                    l2869 3AB0                                      l2877 3A62  
                                    l3693 6800                                      l2981 3CE4  
                                    l3589 5AC0                                      l2966 4F3A  
                                    l2990 3D04                                      l2967 4EFA  
                                    l2959 4EC0                                      l2799 439C  
                                    l2879 3A88                                      l2968 4F18  
                                    l2984 3C88                                      l3698 690E  
                                    l2986 3CD0                                      l2987 3CB2  
                                    l2979 3C68                                      STR_1 FFE5  
                                    STR_2 FF74                                      STR_3 FFDE  
                                    STR_4 FFC1                                      STR_5 FFCD  
                                    STR_6 FFEF                                      STR_7 FFEA  
                                    STR_8 FE88                                      STR_9 FEBC  
                              _Led2OutSts 01F6                                _Led3OutSts 01F4  
                   ??_USBCtrlTrfTxService 007D                                      _UCFG 000F39  
                                    u9315 612C                                      u9316 612E  
                                    _UEP0 000F26                                      u9325 6138  
                                    _UEP1 000F27                                      u9326 613A  
                                    u9335 6146                                      u9336 6148  
                                    u9345 6152                                      u9346 6154  
                                    _UEIE 000F37                  __size_of_Uart_Uart1RxIsr 0010  
                                    _UEIR 000F63                                      _UCON 000F65  
                              _AlarmEvent 01F3                            ?_StopCondition 0001  
                            _triggerRelay 6640                           ??_Mdm_DrvMainFn 0081  
                     _OsTmr_OsTickCounter 0314                             __CFG_FCMEN$ON 000000  
                      _InitModemInterface 6DD2                  secondsAppTimer@isExpired 0090  
                         _CDCDataInHandle 01D1              I2c_ReadData@TentativeCounter 0032  
             Led_SetLedBlinkTime@OnTimeMs 007D              findEmptySpot@currentPosition 00E0  
  USBStdFeatureReqHandler@current_ep_data 0094                 StringCompare2Const@Result 0085  
                                    _pDst 02D5                      _NewStringMdmTerminal 003A  
                                    _atoi 3906                                      _main 6D72  
                         ??_Mdm_IsRinging 0081                                      _itoa 6312  
                        ?_SetUartBaudRate 0096                   __end_of_GetCallerNumber 66AC  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 030C                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                                      _utoa 4870  
                                    _xtoi 3664                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 6DDA               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 4FD4               I2cSlv_SendI2cMsg@DataLenght 0083  
                    ??_Mcu_StartSystemPll 007D               __end_of_Uart_WriteStringLen 645E  
                                    prodh 000FF4                                      prodl 000FF3  
         detectUsbNumber@isCmdSuccessfull 0099                                      start 00CC  
                     __end_of_Eeprom_Read 5DA4   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 6C62  
                           _isNumberValid 5912                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D          isNumberInMemory@positionInMemory 0102  
              __end_of_USBCheckStdRequest 382E                           _Rtcm_SystemDate 044A  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 6D04  
       __size_of_GetLastInteractionNumber 000C                        ?_Rtcc_GetRtccValue 0001  
                     ?_InitModemInterface 0001                        StringCompare@Index 0086  
               ?_GetLastInteractionNumber 007D                            _GetElapsedTime 4054  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                   resCmdFsm@masterOpResult 0108  
            isNumberInMemory@currentState 00C5                       StringCopy@SourceStr 0085  
             __end_of_OsAlrm_ClearOsAlarm 5C52                  Eeprom_Write@SlaveAddress 0094  
                   addCmdFsm@currentState 01D9                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
              waitSetupCall@isCallArrived 0093                       __size_of_I2cDummyTx 001C  
                 __end_of_detectUsbNumber 65CC                          ??_Mdm_GetSmsData 0091  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 64DA                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDAA                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DA  
                                   l12525 6B2C                                     l13249 67B4  
                                   l14139 61C6                                     l14503 4B08  
                                   l14319 399C                                     l13287 3858  
                                   l13467 35C4                                     l16161 09AA  
                                   l14457 5930                                     l16313 1CBC  
                                   l17301 5A02                                     l17303 5A32  
                                   l14753 4FEE                                     l15803 1D9E  
                                   l15825 1E58                                     l14939 272C  
                                   l15677 33A2                                     l14879 66F4  
                                   l14967 2790                                     l15995 0FB6  
                                   l16977 554A                                     l16989 2E6C  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 53BC  
               delCmdFsm@isCmdSuccessfull 0109                                     STR_10 FF4A  
                                   STR_11 FF58                                     STR_12 FF9C  
                                   STR_20 FF3C                                     STR_13 FF66  
                                   STR_21 FE5E                                     STR_30 FEF9  
                                   STR_14 FEA7                                     STR_31 FFA9  
                                   STR_15 FEE5                                     STR_23 FED1  
                                   STR_24 FFF4                                     STR_32 FFD7  
                                   STR_16 FF1D                                     STR_25 FFF4  
                                   STR_17 FF82                                     STR_26 FE85  
                                   STR_18 FF8F                                     STR_27 FF0C  
                                   STR_28 FFB5                           __end_of___awmod 5626  
                                   STR_29 FF2E                             _triggerCmdFsm 39DE  
       __size_of_USBCtrlEPServiceComplete 00FE                           __end_of___lldiv 5440  
                                   ?_utoa 008A                                     u11015 68D0  
                                   u11016 68D2                                     u11025 68DC  
                                   u11026 68DE                                     u11035 68E8  
                                   u11036 68EA                                     u12110 2E2E  
                                   u13000 5F3E                                     u12040 35F8  
                         ___awdiv@divisor 007F                                     u12117 2E24  
                                   u13200 5E9A                                     u12080 2DAC  
                                   u13130 4E2E                                     u12410 6372  
                                   u12330 155A                                     u12090 2DDC  
                                   u14010 2750                    __end_of_USBDeviceTasks 1D36  
                                   u12087 2DA2                                     ?_xtoi 0083  
                                   u14040 27F4                                     u12097 2DD2  
                                   u11730 609C                                     u12450 6508  
                                   u13410 18B4                                     u12380 5E1C  
                                   u15005 6CDC                                     u12710 53F0  
                                   u15030 4984                                     u15110 20C8  
                                   u15006 6CDE                                     u11920 59C4  
                                   u15040 499E                                     u13360 186A  
                                   u15201 1D62                                     u15130 20DC  
                                   u11850 38AA                                     u15211 1D74  
                                   u13550 5974                                     u13630 537E  
                                   u12750 690A                                     u13390 18A4  
                                   u11870 38EC                                     u11927 59BA  
                                   u12840 656A                                     u15065 6C72  
                                   u16121 5908                                     u11857 38A0  
                                   u11890 63CA                                     u15066 6C76  
                                   u12770 67F0                                     u14610 5AE8  
                                   u16050 2A3A                 ?_USBCtrlEPServiceComplete 0001  
                                   u12940 2B4C                                     u12860 6576  
                                   u13725 60F0                                     u11877 38E2  
                                   u14550 04C4                                     u16070 2A7C  
                                   u15191 1D50                                     u15280 1EAC  
                                   u16080 2A94                                     u13905 0C7E  
                                   u14617 5ADE                                     u16057 2A30  
                                   u13690 55F0                                     u13915 0C9E  
                                   u12885 6CC8                                     u13925 0D28  
                                   u13845 6C88                                     u16077 2A72  
                                   u12886 6CCA                                     u16430 44C6  
                                   u13846 6C8A                                     u14670 3D1C  
                                   u16440 3A08                                     u13865 0AFA  
                                   u14690 3148                                     u13875 0B1A  
                                   u16380 346A                                     u13885 0BA4  
                                   u16480 3A46                                     u16641 5276  
                                   u14890 5080                                     u16651 528E  
                                   u15960 1D32                                     u16738 5580  
                                   u14995 568A                           __end_of___lwdiv 5E4C  
                                   u16739 55AE                                     u16778 2F38  
                                   u16779 2F66                           __end_of___lwmod 639A  
               TurnOnModem@TurnOnMdmState 01F1                        ??_UpdateOsCounters 0019  
                                   i1l742 2458                                     i1l747 2594  
                                   i2l680 3F7C                                     i2l681 3ECC  
                                   i2l690 3F16                                     i2l682 3EDA  
                                   i2l686 3EFC                                     i2l688 3F6E  
                                   i2l689 3F36                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B5  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E3  
                                   _USTAT 000F64                   __end_of_LedStateMachine 4A6A  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 4C4A                             _StringCompare 5EF0  
                                   _sd000 FE5A                                     _sd001 FE13  
                                   _sd002 FDED            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3DF6  
                             _ApnLenLocal 01EB                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_initFsm 442A  
                         __end_of_isalpha 680A                           __end_of_isdigit 6A9E  
               saveNumberInMemory@address 0098                                     atoi@a 0088  
                                   atoi@s 0083                    Eeprom_Write@DataLength 0091  
                             _ClearBuffer 66AC                           __end_of_isspace 6916  
             I2cSlv_QueryI2cData@RxBuffer 00A5                I2c_WriteData@I2cWriteState 0038  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 6A5A                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 6964  
               __end_of_Rtcc_GetRtccValue 5068               I2cSlv_QueryI2cData@TxBuffer 00A2  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                         __end_of_CDCInitEP 5772  
                                   utoa@c 0092                             ??_SetBaudRate 009E  
                                   utoa@v 0090                                     status 000FD8  
                         _I2cSlv_MainTask 5CA8                 Rtcc_GetRtccValue@RetValue 007F  
                     i1___wmul@multiplier 0019                                     wtemp6 0043  
                         __end_of_sprintf 3D2A                           __end_of_tolower 6C32  
                     __end_of_Mcu_Int0Isr 6E02                       __end_of_Mcu_Int1Isr 6DFE  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 6C4A                      __end_of_Eeprom_Reset 5CA8  
                  __end_of_GetElapsedTime 411C                     __end_of_UartSetConfig 5B4A  
                    __end_of_Eeprom_Write 5EF0                          delCmdFsm@smsText 0107  
                  __size_of_initGprsModem 0094                            ?_isNumberValid 007D  
             Rtcc_SetRtccValue@RtccPtrVal 0088                  Eeprom_Read@MemoryAddress 00AC  
                   __end_of_Term_MainTask 6BE6                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2D34                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 68C2  
                          _InitSchedTimer 683A                           __initialization 22E4  
             __size_of_saveNumberInMemory 001A                          __end_of_MdmCntSm 49C2  
                    __end_of_I2c_ReadData 22E4                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 42A8                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 2596                              __end_of_atoi 39DE  
                            __end_of_main 6D7E                       StringCompare@Result 0085  
                            __end_of_itoa 6356                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 02EE                              __end_of_utoa 491A  
                            __end_of_xtoi 374A                  __end_of_Rtcm_SetRtccDate 5D50  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 6DBE              __size_of_I2cSlv_QueryI2cData 00D2  
                    Term_MainSm@TermDelay 03D1                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE48                 __size_of_USBCtrlEPService 0094  
                          ?_triggerCmdFsm 0105                                    ??_atoi 0085  
                                  ??_main 00B0              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 4E14  
                           ?_initPreamble 007D                                _ReceiveEvt 6868  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                      _Mdm_RequestSmsData 6D24                            ?_StringCompare 007D  
                        __end_of_Terminal 05F2                      initFsm@isInitialized 0105  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 5440                              _cdc_mem_type 01DC  
                      ??_Mcu_ConfigExtInt 007D                          addCmdFsm@smsText 0107  
                       CheckModem@Timeout 03F2                           ReceiveEvt@Event 007D  
                             ?_CheckModem 0001                          _CDCDataOutHandle 00BC  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 3F8C  
              _Uart_MdmGsmGprsReadService 3EC2                __end_of_UsbDevice_MainTask 6988  
                         getsUSBUSART@len 0086                      __end_of_getSetupCall 6B00  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 6B20  
                   addCmdFsm@searchNumber 010E                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
                             _Eeprom_Read 5D50        Irq_InitIntController@IntPriorityEn 007F  
                   __size_of_CDCTxService 0146                                    i1l1412 663A  
                             _GenerateEvt 6C4A                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
            __size_of_StringCompare2Const 0052                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                     triggerRelay@isRelayOn 0086  
               Uart_Uart1RxIsr@UartRxData 002C                             CDCTxService@i 0084  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FC2F                            _cmdVisualEffet 61FC  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                          ?_GetCallerNumber 0083  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F3                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 57DE                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 6868                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 6DF2  
                              _UartConfig 0322                      __end_of_Mdm_MainTask 5FE2  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CD  
                           ??_Term_MainSm 00A7                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 628A  
                                  _SmsLen 00D3                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 611C                                    ___lmul 5B4A  
                    _I2cSlv_ReceiveI2cMsg 63DE                        TurnOnModem@Counter 0320  
                            ?_putUSBUSART 0083                                    ___wmul 6916  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 5FE2  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5DA4  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 4EAA  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
               isMasterNumber@phoneNumber 0100                         _USBEnableEndpoint 62CE  
         __size_of_USBStdGetStatusHandler 00B2                          ?_detectUsbNumber 0099  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                     addCmdFsm@isComplete 010B                                    _memcpy 61B4  
                  __size_of_HttpGetMethod 04D0                                    _memset 67AA  
                                  clear_0 23A2                                    clear_1 23B4  
                                  clear_2 23C0                                    clear_3 23CC  
                                  clear_4 23D8                                    clear_5 23E4  
                                  clear_6 23F0                                    clear_7 23FC  
                                  clear_8 2408                                    clear_9 2414  
                       parseCommand@F9035 FC29                         parseCommand@F9037 FC25  
                       parseCommand@F9039 FC21                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02DF                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01E8                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01EE  
                      ?_USBEnableEndpoint 0085              __size_of_triggerVisualEffect 000C  
                          ??_initPreamble 007F                                    _strcat 5A96  
                                  _strcpy 6748                                    _strlen 645E  
                                  _strtol 1822                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 6590  
                HttpGetMethod@UartMessage 0100                                 ??_initFsm 00B0  
                           _initGprsModem 5068                        ??_OsTmr_StartTimer 0087  
                                  itoa@cp 0099                                 ??_isalpha 0080  
                               ??_isdigit 007D                            ??_SetAckStatus 007D  
                     ModemEvtParser@F9121 04EF                       ModemEvtParser@F9115 03CD  
                     ModemEvtParser@F9117 03C8                              _CDCTxService 2984  
                     ModemEvtParser@F9119 03C3                       MdmCntSm@MdmCntState 002E  
              Mdm_SetSmsFormat@TextFormat 0098                          ?_LedStateMachine 008F  
                            __mediumconst FC1A                                 ??_isspace 007D  
                  __size_of_CheckTxStatus 000A                              _callerNumber 04C3  
                                  tblptrh 000FF7                                 ??_isupper 007D  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                    __end_of_Mcu_ClearWdg 6DEA                       ??_USBEnableEndpoint 0086  
                             _MdmStsReady 01FD                   __end_of_I2cSlv_MainTask 5CFC  
                         _InitGprsNetwork 0DCE                             ??_Tmr_Tmr2Isr 0023  
                            ??_I2cDummyTx 0021                 OsTmr_GetTimerStatus@Timer 0095  
                             _Mcu_Int0Isr 6DFE                               _Mcu_Int1Isr 6DFA  
                    ?_Led_SetLedBlinkTime 007D                        __size_of_addCmdFsm 00EE  
                               ??_sprintf 0083                                 ??_tolower 007D  
                       parseCommand@state 0094                    __size_of_ScheduleTasks 0126  
                 delCmdFsm@receivedNumber 0105                               _CtrlTrfData 000438  
                               ??_toupper 007D                       ModemEvtParser@Match 00A7  
                  __end_of_cmdVisualEffet 6244                      _controlTransferState 00CC  
                   __end_ofi1_GenerateEvt 6CA4                   Eeprom_Read@SlaveAddress 00AD  
                   __end_of_Rtcm_MainTask 52AA                __size_of_Rtcc_GetRtccValue 0094  
                           ?_parseCommand 0001                        _ExtInt1IsrCallback 02DD  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 2432                        Eeprom_Read@ReadSts 00AE  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                         ??_isNumberValid 007F                    __end_of_EnableReceiver 6DF6  
                      __size_of_WriteByte 000A                   __size_of_ModemEvtParser 0182  
             Uart_WriteConstString@Module 0082                 Uart_WriteStringLen@Module 0084  
                           ___rparam_used 000001                               _ReadAddress 01FA  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0001  
              __end_of_UartTxBufferStatus 60CE                          ??_isMasterNumber 00B0  
         I2cSlv_QueryI2cData@TimeoutTimer 0351                      Terminal@FormatOption 02E8  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 5978  
                          __pcstackBANK10 0A00                        __size_of_delCmdFsm 00C0  
                   I2cDummyTx@DummyBuffer 01FB                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0032                       initFsm@currentState 01D5  
Uart_MdmGsmGprsReadService@ServiceCounter 0005                           MdmCntSm@Counter 02D9  
                   ?_I2cSlv_ReceiveI2cMsg 0080                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 6312                               _InitNetwork 00D8  
                             ?_MyApp_Task 0001                  LedStateMachine@LedOutSts 0098  
                           __end_of_sd000 FE5E                             __end_of_sd001 FE31  
                           __end_of_sd002 FE13                              __pidataBANK0 6E02  
                            __pidataBANK1 6E05                              __pidataBANK2 6D54  
                            __pidataBANK3 6518                              __pidataBANK4 6D96  
                            __pidataBANK5 5F42                 __end_ofparseCommand@F9035 FC2D  
               __end_ofparseCommand@F9037 FC29                 __end_ofparseCommand@F9039 FC25  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 639A                       __size_of_CheckModem 0160  
                         ??_triggerCmdFsm 00B0                __end_of_Uart_ClearRxBuffer 6716  
           __size_of_USBConfigureEndpoint 0098               parseCommand@deleteNumberCmd 008C  
                 addCmdFsm@numberInMemory 010D                  __size_of_InitializeTasks 0074  
                      __end_of_I2cDummyTx 6BB2               __end_of_USBCtrlTrfInHandler 436A  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 007D  
                    StringCompare@String2 007F                        ??_UartSetConfigLow 007D  
               __size_of_isNumberInMemory 00BA                       __end_of_Term_MainSm 1360  
               initGprsModem@currentState 01D7                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 6C8E                        __size_of_detectCmd 009C  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 0083  
           I2cSlv_QueryI2cData@I2cOpState 01E2                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 0040                                _SystemInit 677A  
                              _cdc_notice 0440                     __end_of_Tmr_TmrBPrSet 33A8  
                   __end_of_waitSetupCall 6080                       __end_of_Rtcc_RtcIsr 6DFA  
                              _cdc_rx_len 00C9                         __end_of_MsgFormat FD21  
                              _cdc_tx_len 00C7                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 6640                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01DD                   resCmdFsm@receivedNumber 0103  
                          ClearBuffer@Len 007F                           _secondsAppTimer 4A6A  
        __end_of_GetLastInteractionNumber 6D96                                 ?_MdmCntSm 0001  
                   _Irq_InitIntController 68C2                    _USBStdGetStatusHandler 4662  
                       __end_of_SendSmsSm 1BB0                     __size_of_Eeprom_Reset 0056  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01EA  
                          _Rtcc_RtcConfig 4B0C                     __size_of_Eeprom_Write 0052  
                              __pbssBANK0 00B0                                __pbssBANK1 01C9  
                          ??_parseCommand 0088                                __pbssBANK2 02C9  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                           ?_cmdVisualEffet 0001  
                           _HttpGetMethod 05F2                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 08C8                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 6CBA               isNumberInMemory@phoneNumber 0100  
                __end_of_Uart_WriteString 6518                   addCmdFsm@masterOpResult 010C  
            getSetupCall@isCalledReceived 0083                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 69F4  
                             _SetBaudRate 60CE                             ?_savePreamble 0001  
                   __end_of_findEmptySpot 4F40                 initGprsModem@modemCounter 03BF  
             __size_of_USBWakeFromSuspend 003A                SendSmsSm@SendSms_NextState 01EC  
                             _pBDTEntryIn 00B6          UartTxBufferStatus@TxBufferStatus 007F  
        __end_of_USBCtrlEPServiceComplete 32BA                                 ?_TmrBInit 007D  
                      __size_of_resCmdFsm 007E                             _CheckTxStatus 6DBE  
                           ??_TurnOnModem 0080                 addCmdFsm@isCmdSuccessfull 0109  
                 __size_of_Tmr_TmrBConfig 00C8               __size_of_USBCheckCDCRequest 00B0  
                Uart_WriteStringLen@Index 0083                         ?_GetOsTickCounter 007D  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 007D  
               findEmptySpot@currentState 00C4                                 ?_Terminal 0001  
                    Eeprom_Write@WriteSts 0092                                   ?___lmul 007D  
                            _Led_MainTask 3D2A                            _Rtcc_UnlockRtc 6D04  
                            _I2cBusStatus 01E4                                   ?___wmul 007D  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 2E62  
               Uart_InitUartModule@Module 00A1                     __end_of_I2c_WriteData 2026  
                       __end_of_addCmdFsm 3496                 resCmdFsm@isCmdSuccessfull 0105  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE48                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 4F40                     __end_of_UpdateSchFlag 6B96  
                            _EepromBuffer 04A7                                _ep_data_in 02D2  
                         _I2cWriteDataEvt 00D7                  i1GenerateEvt@EventStatus 001B  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 007D  
                              ??i1___wmul 001D                   __end_of_InitGprsNetwork 10BC  
                                 ?_strcpy 007D                                   ?_strlen 007D  
                     _IsUsbNumberReceived 02ED                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 30AC  
                       __end_of_WriteByte 6DB4                        _USBCheckStdRequest 374A  
                       _configDescriptor1 FDAA                              _Eeprom_Reset 5C52  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 0572  
                            _Eeprom_Write 5E9E                     __size_of_getSetupCall 0020  
             __end_of_USBCtrlTrfTxService 3906                       _USBStdSetCfgHandler 357E  
                       __end_of_delCmdFsm 44EA                   __size_of_ConfigureModem 00D4  
                  I2cSlv_QueryI2cData@Ret 01E1                 Eeprom_Write@MemoryAddress 0093  
                         __CFG_WDTPS$2048 000000                              _I2cSetConfig 6896  
                                 _SPBRGH1 000F7F                                   _SPBRGH2 000F7D  
                  __end_of_Rtcc_RtcConfig 4BAC                                   _SSP2ADD 000F74  
                              ??_GetSmsSm 008F                                   _SSP2BUF 000F75  
                            _I2c_ReadData 2186                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 41E4  
                        ?_I2cSlv_MainTask 0001                        GsmGprsTerminal@SMS 01DB  
          __end_of_Pm_DsReleasePinControl 6DE0                       ?_USBCheckStdRequest 0001  
                   Mdm_SetSmsFormat@Index 0083              __size_of_USBStdGetDscHandler 012E  
                              ??_MdmCntSm 0081                            _blinkInSeconds 03FD  
                     __size_of_MyApp_Task 0154                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00DF                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 01F2                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01F9                       _I2cSlv_QueryI2cData 3B8A  
                                 _Led2Sts 01F7                                   _Led3Sts 01F5  
              __end_of_Sch_SchmIntService 6D72                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 008F                             _cdc_trf_state 00C8  
                              ??_ReadByte 007D                       resCmdFsm@isComplete 0107  
                          ??_savePreamble 0096                       _Uart_InitUartModule 0AC2  
                   __end_of_Mdm_DrvMainFn 6DE6                      __end_of_initPreamble 6B7A  
                  initEeprom@currentState 01D6                         __end_of_detectCmd 4CE6  
                        _ComChecCompleted 002B                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 02C9  
                   __end_of_Mdm_IsRinging 69D0                     InitGprsNetwork@ApnLen 009D  
                                 _pCDCSrc 02CC                     __size_of_getsUSBUSART 0096  
                             ?_StringCopy 0085                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 007F  
                  ??_I2cSlv_ReceiveI2cMsg 0084           ??_USBIncrement1msInternalTimers 007D  
                          _I2cReadDataEvt 0039                                 ?_isxdigit 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 5706  
                  __end_of_Rtcc_UnlockRtc 6D14                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0085                      __end_of_SetAckStatus 6CCE  
                              _initEeprom 50FC                               _Term_MainSm 10BC  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD21  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0001  
                              ??_Terminal 00A2                         _Sch_MainScheduler 6B3E  
                  ?_Uart_WriteConstString 0080                                _readBuffer 0337  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 6C78             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 5336                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 55B4                                   ___lldiv 53BC  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                 triggerCmdFsm@isComplete 0107                                   ___lwdiv 5DF8  
                       ??_USBStallHandler 007D                                   ___lwmod 6356  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                              _getSetupCall 6AE0  
                    ?_I2cSlv_QueryI2cData 00A2                           ??_initGprsModem 0099  
                             _Rtcc_RtcIsr 6DF6                      __size_of_putUSBUSART 0022  
                                 __pcinit 22E4                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CF  
                     _StringCompare2Const 5E4C                       __end_of_TurnOnModem 61B4  
                         __size_of_memset 0030                   initEeprom@isInitialized 0102  
                               _I2cConfig 035C                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FDED                                   __ramtop 0F00  
              Mdm_GetSmsData@GetSmsStatus 0091                               Terminal@Len 03B1  
                      ??_Rtcm_SetRtccDate 0091                     Tmr_TmrBIrqSet@TmrNumb 007F  
                    ?_Uart_InitUartModule 009D                                   __ptext0 6D72  
                                 __ptext1 677A                                   __ptext2 6DA0  
                                 __ptext3 6DDA                                   __ptext4 6B20  
                                 __ptext5 6BB2                                   __ptext6 68C2  
                                 __ptext7 683A                                   __ptext8 3F8C  
                                 __ptext9 32BA                                   _inPipes 00B0  
                   __size_of_Mcu_ClearWdg 0004                 GsmGprsTerminal@UartBuffer 0900  
             _USBDeferOUTDataStagePackets 0025                           __size_of_strcat 005C  
                 __end_of_secondsAppTimer 4B0C                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                      InitGprsNetwork@Apn 009B                                   _initFsm 436A  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 67DA                                   _isdigit 6A7C  
          isNumberInMemory@memoryOpResult 0104                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00B0                               ?_SystemInit 0001  
                                 clear_10 2420                                   clear_11 242C  
                        ___awmod@dividend 007D                         ??_InitializeTasks 04F9  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 02E5  
     __end_of_Tmr_RegisterTmr2IsrCallback 6DAA               _Tmr_RegisterTmr2IsrCallback 6DA0  
                                 _isspace 68EC                              _Mdm_MainTask 5F92  
                       __end_of_resCmdFsm 5540                                   _isupper 6A38  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                                   _smsText 0484  
                  Term_MainSm@FwkBuildStr 013A                           ?_Rtcc_RtcConfig 007E  
                  _OsAlrm_ProcessOsAlarms 2440                              ??_CheckModem 009B  
                      __end_of_USB_CD_Ptr FC2F                       Mcu_SetWdgSts@WdgSts 007D  
                             _Tmr_Tmr2Isr 69D0                                   _sprintf 3C5C  
                                 _tolower 6C1A           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 6D44                          _HttpGetDataLocal 03A4  
                __end_of_Mdm_SetSmsFormat 6032                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 47C4                                   _toupper 6C32  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 2432                              _getsUSBUSART 4E14  
                            ?_Eeprom_Read 00A9                          ??_GetElapsedTime 0085  
                             _SmsTxtReady 00D9               ?_Uart_MdmGsmGprsReadService 0004  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F2             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC21       Irq_InitIntController@PerInt_LowPInt 007E  
                    ?_StringCompare2Const 007D                 triggerCmdFsm@currentState 01D3  
                                 memcpy@d 0084                                   memcpy@n 0081  
                                 memcpy@s 0086                       _pBDTEntryEP0OutNext 00BE  
                                 itoa@buf 0093                                   memset@c 007F  
                                 itoa@val 0095                                   memset@n 0081  
                  Term_MainSm@FwkMinorStr 0136                                   memset@p 0083  
                           __Lmediumconst FC1A                            _ModemEvtParser 1D36  
                     _triggerVisualEffect 6D7E                                   int_func 47C4  
                         _USB1msTickCount 0310           _dummy_encapsulated_cmd_response 0378  
                _GetLastInteractionNumber 6D8A                                 i1u1655_20 2456  
                               i1u1681_28 69E0                                 i1u1659_28 2576  
                               i1u1659_29 258A                  ?_USBStdFeatureReqHandler 0001  
               __size_of_Mcu_ConfigExtInt 001A                __end_of_saveNumberInMemory 6C1A  
                       ?_Rtcc_AlarmConfig 007D                     ??_USBStdSetCfgHandler 0091  
                         ___lldiv@divisor 008D                 __end_of_Sch_MainScheduler 6B5C  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0080  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0095  
                       _Rtcc_SetRtccValue 15F4                         _Rtcc_SetRtcStatus 6C62  
                     _ActivateRiDetection 0041                           ?_Rtcc_UnlockRtc 0001  
                      ??_Rtcc_AlarmConfig 007F                        __end_of_USBSuspend 6748  
                           StringCopy@Len 0089                         ?_MdmHttp_MainTask 0001  
                I2cSlv_QueryI2cData@RxLen 00A7                   _USBCtrlEPAllowDataStage 4BAC  
                      _UsbDevice_MainTask 6964                  I2cSlv_QueryI2cData@TxLen 00A4  
                            _Mcu_ClearWdg 6DE6                 Eeprom_Reset@memoryAddress 00C6  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                     ??_I2cSlv_QueryI2cData 00A9  
                                 utoa@buf 008A                        ??_MdmHttp_MainTask 00A1  
                _USBCtrlEPServiceComplete 31BC                                   utoa@val 008C  
                 HttpGetMethod@GetMOutSts 01E5                     i1___wmul@multiplicand 001B  
                      __end_of_CheckModem 2186                           _RtccIsrCallback 02E1  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0021                        Terminal@EchoOption 02F1  
           __size_of_LedPulseStateMachine 00E8                                   strlen@s 007D  
                        _isNumberInMemory 45A8                      __end_of_parseCommand 31BC  
              _USBStatusStageEnabledFlag1 0028                _USBStatusStageEnabledFlag2 0027  
                   ??_Uart_InitUartModule 009F                      __end_of_Wdg_MainTask 6A16  
                                 strtol@a 0094                                   strtol@c 0098  
                          _Rtcm_RtccAlarm 0300                                   strtol@s 0089  
                      USBEnableEndpoint@p 0086                      ?_triggerVisualEffect 0001  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                       _Mdm_HangPhoneCall 6CE0                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 6AC0                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 0087                          __CFG_CPUDIV$OSC1 000000  
                      ?_Mdm_HangPhoneCall 0001                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02E3                          _HttpGetMethodSts 01E9  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                isNumberValid@phoneNumber 007D                        _BothEP0OutUOWNsSet 01DE  
                         ??_HttpGetMethod 009D                   __size_of_Mdm_GetSmsData 0068  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0037  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 1EB8                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                     ??_StringCompare2Const 0083  
                               _USTATcopy 00D5                     __end_of_StopCondition 6DEE  
                __size_of_HighPriorityIsr 4868                       ??_Mdm_HangPhoneCall 0083  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 036F  
                               _Led2Blink 0366                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 04E6              __end_of_USBTransferOnePacket 45A8  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0393  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 1822                 __end_of_Rtcc_SetRtcStatus 6C78  
                               _Led2Pulse 038D                                 _Led3Pulse 0387  
                       _I2cSlv_SendI2cMsg 649C           SetBaudRate@DesiredI2cBusClockHz 0096  
                     Eeprom_Read@QuerySts 00AF                           ??_ScheduleTasks 04F9  
                          _Tmr_TmrBConfig 3F8C                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 6CE0                         _OsAlrm_SetOsAlarm 411C  
                    Terminal@TermRxBuffer 0540                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 611C  
                             ?_initEeprom 0001                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 6168                                 _ClipEvent 00DC  
                            ??_MyApp_Task 00B0                      Terminal@TermTxBuffer 0100  
           saveNumberInMemory@phoneNumber 0096                                 _GetMethod 01FC  
                  _USBCtrlTrfSetupHandler 52AA                        ?_OsAlrm_SetOsAlarm 0083  
                Eeprom_Reset@SlaveAddress 0085                  __size_of_GetCallerNumber 0036  
                   __end_of_USBDeviceInit 283C     __end_of_USBIncrement1msInternalTimers 6A38  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 6A16  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 5BA2  
                          _CheckAckStatus 6DC8                            __end_of___wmul 693E  
                     ??_I2cSlv_SendI2cMsg 0084                 __end_of_Mdm_HangPhoneCall 6CF2  
                   ??_triggerVisualEffect 007D               triggerCmdFsm@numberInMemory 0108  
                  __size_of_UartWriteByte 0020                 triggerCmdFsm@searchNumber 010A  
                 addCmdFsm@receivedNumber 0105                             _secondCounter 03BD  
                          __end_of_memcpy 61FC                        Terminal@PackageLen 02EA  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 67DA  
                      _UartTxBufferStatus 6080                       ??_OsAlrm_SetOsAlarm 008B  
                    __end_of_savePreamble 6C00                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01DF  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 6D54  
                               _MdmStatus 00D1                            __end_of_strcat 5AF2  
                          __end_of_strcpy 677A                            __end_of_strlen 649C  
                          __end_of_strtol 19F8                       start_initialization 22E4  
         isNumberInMemory@currentPosition 00E1                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 3AB6  
                        ??_cmdVisualEffet 0093                  __size_of_detectUsbNumber 003C  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 66E2  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 4D7E                     __size_of_initPreamble 001E  
         __end_of_USBStdFeatureReqHandler 15F4                                 _MsgFormat FC31  
                      __end_of_MyApp_Task 26EA                          _UpdateOsCounters 6D34  
                         ?_ModemEvtParser 0001                             ?_triggerRelay 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3EC2                 __end_of_I2cSlv_SendI2cMsg 64DA  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4FD4                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
             triggerCmdFsm@masterOpResult 0109                      __size_of_ClearBuffer 0036  
                    __end_of_Rtcc_LockRtc 6D24                       ?_Uart_ClearRxBuffer 0001  
                            ?_SetBaudRate 0096                    __end_of_Tmr_TmrBConfig 4054  
                               _SendSmsSm 19F8                 __end_of_OsAlrm_SetOsAlarm 41E4  
                  __end_of_Tmr_TmrBIrqSet 6168                                 _TaskTable 0586  
                               _RingEvent 00DD                 ??_USBCtrlEPAllowDataStage 007E  
                      ??_Uart_WriteString 0082                               _SystemState 00D4  
                   __end_of_isNumberValid 5978              isMasterNumber@memoryOpResult 0102  
                       __size_of_ReadByte 000A                                 _RtcConfig 03B9  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 009D  
                             ??_CDCInitEP 0089                            USBDeviceInit@i 0085  
                           _UartSetConfig 5AF2                    Led_SetLedBlinkTime@Led 0081  
                      __end_of_ReceiveEvt 6896                    _pBDTEntryEP0OutCurrent 00C0  
                           _Term_MainTask 6BCC                   USBTransferOnePacket@dir 007D  
                    ??_UartTxBufferStatus 007D                   USBTransferOnePacket@len 0080  
                   Tmr_TmrBConfig@TmrNumb 00A3                   __size_of_LowPriorityIsr 00B4  
                  __end_of_CheckAckStatus 6DD2                                  ??___lmul 0085  
                               Terminal@i 00A4                             _isxdigit$6788 0081  
                                ??___wmul 0081                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 007D                       _USBStdGetDscHandler 2D34  
              I2cSlv_SendI2cMsg@SlaveAddr 0082                        __end_of_OsTmr_Wait 54C2  
                      HttpGetMethod@Index 01C8                               __pdataBANK0 00E0  
                             __pdataBANK1 01FE                               __pdataBANK2 02F1  
                             __pdataBANK3 03C3                               __pdataBANK4 04EF  
                             __pdataBANK5 0586                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 0522                                  ??_memcpy 0083  
                                ??_memset 0083                     detectCmd@currentState 0095  
                   __end_of_triggerCmdFsm 3AB6                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 007D                      ??_Uart_ClearRxBuffer 007D  
     __size_of_Uart_MdmGsmGprsReadService 00CA                                  ??_strcat 0081  
                                ??_strcpy 0081                                  ??_strlen 007F  
                  __size_of_Rtcm_MainTask 008E                                 _addCmdFsm 33A8  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 5DF8  
                  __end_of_ConfigureModem 3B8A                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00D6            __end_of_USBStdGetStatusHandler 4714  
                            _initPreamble 6B5C                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC31                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 5F42  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00C2                             __pcstackBANK4 04F9  
                         RiSm@MdmDrvState 002F                              _SetAckStatus 6CBA  
                            _isalpha$6778 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 6DAA                       __size_of_initEeprom 0090  
                            _isdigit$6512 007E                      ?_USBStdGetDscHandler 0001  
           UpdateSchFlag@InterruptCounter 02D7                            ??_triggerRelay 0085  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 641E  
                               _delCmdFsm 442A       InitGprsNetwork@GprsNetInitNextState 002A  
                 GetElapsedTime@StartTime 0081                             _UartWriteByte 6B00  
                             _ALRMRPTbits 000F90                MyApp_Task@isCmdSuccessfull 00E2  
              __end_of_USBWakeFromSuspend 6606              __end_of_LedBlinkStateMachine 2984  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 628A                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 0306                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 6BB2  
              __end_of_USBCheckCDCRequest 47C4              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 5BFA                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 6AE0                              ??_StringCopy 008B  
                        _Led_SetLedStatus 680A                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 6A9E  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_parseCommand 0110                    __size_of_waitSetupCall 004E  
                               _detectCmd 4C4A                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008               findEmptySpot@memoryOpResult 0102  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC1A  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 5068  
                               __ptext101 5FE2                                 __ptext110 6CE0  
                               __ptext102 50FC                                 __ptext111 57DE  
                               __ptext103 6590                                 __ptext200 6DFE  
                               __ptext120 45A8                                 __ptext112 6D8A  
                               __ptext104 4C4A                                 __ptext201 0000  
                               __ptext121 5698                                 __ptext113 6676  
                               __ptext105 30AC                                 __ptext130 5DA4  
                               __ptext122 4EAA                                 __ptext114 442A  
                               __ptext106 5E4C                             Terminal@Index 00A6  
                               __ptext131 5AF2                                 __ptext123 5912  
                               __ptext115 61FC                                 __ptext107 6D24  
                               __ptext140 0AC2                                 __ptext132 6168  
                               __ptext124 5D50                                 __ptext116 4A6A  
                               __ptext108 6988                                 __ptext141 2ACA  
                               __ptext133 19F8                                 __ptext125 3B8A  
                               __ptext117 33A8                                 __ptext109 69AC  
                               __ptext150 639A                                 __ptext142 5B4A  
                               __ptext134 641E                                 __ptext126 5440  
                               __ptext118 6C00                                 __ptext151 6B00  
                               __ptext143 5BA2                                 __ptext135 1D36  
                               __ptext127 649C                                 __ptext119 5E9E  
                               __ptext160 3496                                 __ptext152 6080  
                               __ptext144 2026                                 __ptext136 66E2  
                               __ptext128 63DE                                 __ptext161 680A  
                               __ptext153 5978                                 __ptext145 491A  
                               __ptext137 5EF0                                 __ptext129 6A9E  
                               __ptext170 41E4                                 __ptext162 283C  
                               __ptext154 5A38                                 __ptext146 6DD2  
                               __ptext138 2C02                                 __ptext171 6868  
                               __ptext163 5DF8                                 __ptext155 518C  
                               __ptext147 0DCE                                 __ptext139 3AB6  
                               __ptext180 6DF2                                 __ptext172 1EB8  
                               __ptext164 411C                                 __ptext156 4054  
                               __ptext148 05F2                                 __ptext181 6DBE  
                               __ptext173 2186                                 __ptext165 6916  
                               __ptext157 6CF2                                 __ptext149 64DA  
                               __ptext190 5BFA                                 __ptext182 6DC8  
                               __ptext174 6DAA                                 __ptext166 5626  
                               __ptext158 66AC                                 __ptext191 6B96  
                               __ptext175 6DEA                                 __ptext167 60CE  
                               __ptext159 49C2                                 __ptext192 6606  
                               __ptext184 69D0                                 __ptext176 6DEE  
                               __ptext168 53BC                                 __ptext193 6C8E  
                               __ptext185 6D64                                 __ptext177 6CBA  
                               __ptext169 6896                                 __ptext186 6B7A  
                               __ptext178 6DB4                                 __ptext195 6D44  
                               __ptext187 6D34                                 __ptext179 6C4A  
                                ?___awmod 007D                        _Sch_SchmIntService 6D64  
                               __ptext196 3EC2                                 __ptext188 2440  
                               __ptext197 6CA4                                 __ptext189 693E  
                               __ptext198 6DF6                                 __ptext199 6DFA  
                         _InitializeTasks 5540                                  ?___lldiv 0089  
                    ?_Uart_WriteStringLen 0080                                  ?___lwdiv 0083  
                                ?___lwmod 007D                           _CallClosedEvent 003E  
                            ?_Rtcc_RtcIsr 0001                               __pintcodelo 0018  
              __size_of_Mdm_HangPhoneCall 0012                   isNumberValid@isNumberOk 0080  
                 __size_of_isMasterNumber 006E                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 04DB                                ?_addCmdFsm 0105  
                 Eeprom_Write@WriteBuffer 008F                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 0399  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 44EA                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F        Uart_MdmGsmGprsReadService@UartData 0004  
                                ?_initFsm 0103                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                         ??_GetCallerNumber 0085  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 039F  
          InitializeTasks@ActiveTaskIndex 02C8                    __size_of_findEmptySpot 0096  
                    __CFG_RTCOSC$T1OSCREF 000000                                  ?_isspace 0001  
                          _Mdm_GetSmsData 57DE                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02E7  
              StringCompare2Const@String1 007D                StringCompare2Const@String2 007F  
              ??_GetLastInteractionNumber 007F                           Terminal@Payload 0766  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 58AC  
                              ?_WriteByte 0001                     ??_USBStdGetDscHandler 007D  
                        _Rtcm_GetRtccDate 58AC                ConfigureModem@DelayCounter 031C  
                      __end_of_StringCopy 59DA                               _ep_data_out 02CF  
                                _ALRMVALH 000F8F                                  _ALRMVALL 000F8E  
                        ___lwdiv@quotient 0088                              ?_Tmr_Tmr2Isr 0001  
                            _SendSmsEvent 00DE                           Terminal@SwTimer 04D0  
                initEeprom@memoryOpResult 0101                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
                          _setupCallTicks 03C1              __size_of_USBCtrlTrfRxService 0124  
           USBConfigureEndpoint@direction 007D                                  ?_toupper 0001  
                              ?_delCmdFsm 0105                         ?_Mdm_SetSmsFormat 0001  
                               _resCmdFsm 54C2                            ?_UartWriteByte 007D  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 031E  
                        _OsTmr_StartTimer 5A38                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E                         ??_detectUsbNumber 009B  
                __end_of_isNumberInMemory 4662              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 6C8E  
              __end_of_Mcu_StartSystemPll 6B3E                              _parseCommand 30AC  
                            _PhoneNumbLen 00D2                        ??_Mdm_SetSmsFormat 0083  
                            _Wdg_MainTask 69F4                             _Rtcm_MainTask 521C  
                          ___wmul@product 0081                  ModemEvtParser@ClipString 0099  
                        SendSmsSm@SwTimer 03E7                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 008C                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 01F0                  StringCompare2Const@Index 0086  
         HttpGetMethod@GetMethodNextState 00D0                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 5626                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 67AA                                  _RCONbits 000FD0  
                              ?_detectCmd 0001                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001                     __size_of_savePreamble 001A  
            __end_of_OsTmr_GetTimerStatus 521C                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                  ModemEvtParser@CompareIdx 00A8  
                    _USBConfigureEndpoint 4CE6                     delCmdFsm@currentState 01D8  
                    _UsbMasterPhoneNumber 0498          __size_of_USBStdFeatureReqHandler 0294  
                      _saveNumberInMemory 6C00                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 2596                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 693E                     __end_of_initGprsModem 50FC  
                     ??_I2c_InitI2cModule 00A4                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 6DDA                    __end_of_Mdm_GetSmsData 5846  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                     resCmdFsm@currentState 01D4  
                            _RemoteWakeup 01E0                                  _ApnLocal 031A  
                          _StartCondition 6DEE                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                    __size_of_Mdm_IsRinging 0024  
                        StringCompare@Len 0081               HttpGetMethod@GetMethodState 01E6  
                           _Tmr_TmrBPrSet 32BA                             _waitSetupCall 6032  
                     ?_saveNumberInMemory 0096                         _NewStringReceived 003C  
                            _isspace$6781 007E                          _UartSetConfigLow 5BA2  
                                _GetSmsSm 2C02                   __end_of_USBStallHandler 62CE  
                    Mdm_DrvMainFn@Options 0001                            _memoryPreamble 03A9  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03DC  
                                _MdmCntSm 491A                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 22F8  
                               copy_data1 2318                                 copy_data2 2338  
                               copy_data3 2370              __end_of_LedPulseStateMachine 357E  
                              ?_resCmdFsm 0103                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 3664  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 6DB4                             i2_GenerateEvt 6CA4  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                   cmdVisualEffet@seconds 0094                        __end_of_device_dsc FE5A  
               __end_of_I2c_InitI2cModule 5698                                  _MsgReady FE31  
                         ??_Term_MainTask 00A7                              _savePreamble 6BE6  
                 __end_of_InitializeTasks 55B4                initGprsModem@isInitialized 0099  
                 ?_USBCtrlTrfSetupHandler 0001                            isNumberValid@i 0081  
                           _findEmptySpot 4EAA               __end_of_I2cSlv_QueryI2cData 3C5C  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                               _emptyNumber 04B6  
                                __Hrparam 0000                                  _TmrBInit 4D7E  
                    __size_of_SetBaudRate 004E                              ??_initEeprom 00B0  
                    ??_saveNumberInMemory 0098                              ?_TurnOnModem 0001  
                          _LowPriorityIsr 0018                                 memcpy@tmp 0083  
                    Tmr_TmrBPrSet@Divisor 009C                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0081                   initFsm@isCmdSuccessfull 0103  
             __end_of_Uart_InitUartModule 0DCE                                  _SmsEvent 00DB  
                         _SetUartBaudRate 2ACA              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1EB8                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 6D44  
                    __end_of_triggerRelay 6676                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02E9                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                        __size_of___lwmod 0044                  I2c_WriteData@WritePacket 007E  
                       Terminal@TermState 02EB                               ??_addCmdFsm 00B0  
                           _UpdateSchFlag 6B7A                       __end_of_putUSBUSART 6A7C  
                             _line_coding 0380                              _Rtcc_LockRtc 6D14  
            I2cSlv_QueryI2cData@SlaveAddr 00A8                      _LedBlinkStateMachine 283C  
             triggerCmdFsm@receivedNumber 0105                    __end_of_StartCondition 6DF2  
                          ??_CDCTxService 0084                  ??_Pm_DsReleasePinControl 007D  
                  SendSmsSm@SendSms_State 01ED                 Rtcm_GetRtccDate@LocalDate 008A  
                parseCommand@addNumberCmd 0088                           ?_Mdm_GetSmsData 008F  
                I2c_WriteData@WriteStatus 0035                              _isupper$6784 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 0033  
                          ?_Tmr_TmrBPrSet 0096                          __size_of_initFsm 00C0  
                          ?_waitSetupCall 0001               __end_of_StringCompare2Const 5E9E  
                        ??_ModemEvtParser 008F                          _GetOsTickCounter 6CF2  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0186                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03AD                  ModemEvtParser@RingString 00A3  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                                  __ptext10 611C  
                                __ptext11 6AC0                                  __ptext20 6964  
                                __ptext12 4D7E                                  __ptext21 6244  
                                __ptext13 6B3E                           ??_UartWriteByte 007E  
                                __ptext30 6716                                  __ptext22 5F92  
                                __ptext14 2E62                                  __ptext31 628A  
                                __ptext23 5CA8                                  __ptext15 5540  
                                __ptext40 357E                                  __ptext32 6A16  
                                __ptext24 6DE0                                  __ptext16 2596  
                                __ptext41 4662                                  __ptext33 26EA  
                                __ptext25 69F4                                  __ptext17 6BCC  
                                __ptext50 2F88                                  __ptext42 2D34  
                                __ptext34 4F40                                  __ptext26 6CCE  
                                __ptext18 521C                                  __ptext51 3DF6  
                                __ptext43 1360                                  __ptext35 61B4  
                                __ptext27 6DE6                                  __ptext19 3D2A  
                                __ptext60 00D0                                  __ptext52 42A8  
                                __ptext44 59DA                                  __ptext36 52AA  
                                __ptext28 1BB0                                  __ptext61 3664  
                                __ptext53 382E                                  __ptext45 4714  
                                __ptext37 31BC                                  __ptext29 65CC  
                                __ptext70 6A5A                                  __ptext62 6C1A  
                                __ptext54 2984                                  __ptext46 5706  
                                __ptext38 4BAC                                  __ptext71 6312  
                                __ptext63 6554                                  __ptext55 10BC  
                                __ptext47 62CE                                  __ptext39 374A  
                                __ptext80 15F4                                  __ptext72 4870  
                                __ptext64 1822                                  __ptext56 645E  
                                __ptext48 4CE6                                  __ptext81 55B4  
                                __ptext73 6356                                  __ptext65 6C32  
                                __ptext57 5A96                                  __ptext49 5846  
                                __ptext90 6D7E                                  __ptext82 5336  
                                __ptext74 4E14                                  __ptext66 68EC  
                                __ptext58 3C5C                                  __ptext91 39DE  
                                __ptext83 6D14                                  __ptext75 44EA  
                                __ptext67 67DA                                  __ptext59 67AA  
                                __ptext92 6640                                  __ptext84 58AC  
                                __ptext76 3906                                  __ptext68 6A38  
                                __ptext93 54C2                                  __ptext85 4FD4  
                                __ptext77 6A7C                                  __ptext69 6748  
                                __ptext94 5C52                                  __ptext86 6C62  
                                __ptext78 5CFC                                  __ptext95 436A  
                                __ptext87 4B0C                                  __ptext79 6D04  
                                __ptext96 6032                                  __ptext88 6C78  
                                __ptext97 6AE0                                  __ptext89 5772  
                                __ptext98 6BE6                                  __ptext99 6B5C  
                        __size_of_isupper 0022                   initEeprom@addressToRead 0100  
                              _I2cDummyTx 6B96                    Tmr_TmrBIrqSet@Priority 007D  
                      __end_of_initEeprom 518C                     __end_of_HttpGetMethod 0AC2  
                __size_of_InitGprsNetwork 02EE                              _SSP2CON2bits 000F71  
                             ??_delCmdFsm 00B0                                 isxdigit@c 0082  
                        __size_of_sprintf 00CE                          __size_of_tolower 0018  
                   __size_of_Tmr_StartTmr 0020                          __size_of_toupper 0018  
                         triggerRelay@res 0085                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 007F  
                       _Mmd_RingIndicator 0030                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0019                     delCmdFsm@searchNumber 010E  
                       _Mdm_IsSmsReceived 6988               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 007E  
          __end_of_USBCtrlTrfSetupHandler 5336                             __size_of_main 000C  
                       ?_USBCtrlEPService 0001                             __size_of_itoa 0044  
               Mdm_GetSmsData@MessageText 008F                             __size_of_utoa 00AA  
                     Led_MainTask@Options 0001                             __size_of_xtoi 00E6  
                  ??_I2cSlv_I2cReadMsgSts 0081                            ?_findEmptySpot 0100  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 6DC8  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 6DE0  
                      ??_USBCtrlEPService 0097                                  _isxdigit 6554  
                           _Mdm_IsRinging 69AC                       _USBCtrlTrfInHandler 42A8  
                I2c_ReadData@I2cReadState 0034               __end_of_triggerVisualEffect 6D8A  
              __end_of_Mdm_RequestSmsData 6D34            cmdVisualEffet@isCmdSuccessfull 0093  
                             ??_detectCmd 0095                     __end_of_ScheduleTasks 2F88  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 5846  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 008D                 _USBCtrlEPAllowStatusStage 3DF6  
                     ??_Mdm_IsSmsReceived 0081                            _receivedNumber 0344  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 02C8  
                              strtol@sign 0093                           Term_MainSm@Data 0452  
                     delCmdFsm@isComplete 010B                      __size_of_RtccIrqInit 0016  
               __size_of_Uart_WriteString 003E                    ??_USBTransferOnePacket 0081  
                          _isMasterNumber 5698                               _relayBuffer 02FE  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                      __size_of_Rtcc_RtcIsr 0004  
                     i1_I2cSlv_SendI2cMsg 6606                  __end_of_Mcu_ConfigExtInt 6BCC  
                           ?_Eeprom_Reset 0001                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00CA                  CDCTxService@byte_to_send 0085  
                           ?_Eeprom_Write 008F             I2c_WriteData@TentativeCounter 0036  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                UartWriteByte@ByteToWrite 007D                              _Tmr_StartTmr 6AC0  
                __end_of_Led_SetLedStatus 683A                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 007D                                  memcpy@s1 007F  
              I2cSlv_I2cReadMsgSts@Result 0081             USBCtrlTrfTxService@byteToSend 007D  
                           ?_I2cSetConfig 0001                                  itoa@base 0097  
             i1I2cSlv_SendI2cMsg@TxBuffer 001C                             ?_I2c_ReadData 0080  
                           ?_I2cSendMsgSm 0001                                  isalpha@c 0082  
                  __size_of_Mcu_SetWdgSts 0012                                  isdigit@c 007F  
                                memset@p1 007D                     Eeprom_Read@DataLength 00AB  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 001B  
                        _Rtcm_SetRtccDate 5CFC                  USBStdFeatureReqHandler@p 0095  
                        ??_Tmr_TmrBConfig 00A2                             ??_ClearBuffer 0081  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0092  
               __end_of_Mdm_IsSmsReceived 69AC                               ??_resCmdFsm 00B0  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    parseCommand@resetCmd 0090                      _OsTmr_GetTimerStatus 518C  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0152  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5A38  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 59DA                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                   __end_of_SetUartBaudRate 2C02  
                                isspace@c 007F                          ___lldiv@dividend 0089  
                GsmGprsTerminal@UsbBuffer 0800                      ?i1_I2cSlv_SendI2cMsg 001C  
              __size_of_I2c_InitI2cModule 0072                            ?_Mdm_DrvMainFn 0001  
                        ??_CheckAckStatus 007D                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084                    MyApp_Task@currentState 01DA  
                  StringCompare2Const@Len 0081            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 009E                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 63DE                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                           _GetCallerNumber 6676  
                __end_of_Rtcm_GetRtccDate 5912                               _putUSBUSART 6A5A  
               Eeprom_Write@CommandLength 0095                       _USBCtrlTrfRxService 2F88  
                  __end_of_isMasterNumber 5706                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 65CC  
                           ?_getSetupCall 0001                   _USBStdFeatureReqHandler 1360  
                __end_of_OsTmr_StartTimer 5A96                      _LedPulseStateMachine 3496  
                      _USBCheckCDCRequest 4714                       _USBCtrlTrfTxService 382E  
                     RtccIrqInit@Priority 007D                                  utoa@base 008E  
                          ??_Eeprom_Reset 0085                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                             _isMemoryEmpty 01FE  
                          ??_Eeprom_Write 0092                          _Rtcc_AlarmConfig 5772  
        detectUsbNumber@isActionPerformed 009B                           ??_Tmr_TmrBPrSet 009A  
                         ??_waitSetupCall 0093                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001                           _detectUsbNumber 6590  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FF                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 02EC                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 02EF                           ___lwmod@counter 0081  
                           ?_Mdm_MainTask 0001                            ??_I2cSetConfig 007D  
          __size_of_Irq_InitIntController 002A                                  toupper@c 007D  
         SetUartBaudRate@BaudRateRegister 009A                       ?_USBCheckCDCRequest 0001  
                        _MdmHttp_MainTask 6244                    __size_of_isNumberValid 0066  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 68EC                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                   delCmdFsm@numberInMemory 010D  
                     USBEnableEndpoint@ep 0088                           _endpoint_number 00CB  
                              _WDTCONbits 000FC0                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                             ??_Eeprom_Read 00AC  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 49C2  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                           ??_findEmptySpot 00B0  
                           _StopCondition 6DEA                     ??i1_I2cSlv_SendI2cMsg 0020  
                       ?_isNumberInMemory 0100                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 0029                          Mdm_IsRinging@Ret 0081  
                  __size_of_triggerCmdFsm 00D8                   __size_of_cmdVisualEffet 0048  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 66E2  
                    __end_of_CDCTxService 2ACA                        ??_isNumberInMemory 00B0  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC2D                     __size_of_triggerRelay 0036  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01EF                   _UsbMasterPhoneNumberLen 0318  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 6CCE  
