

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 13 21:39:54 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    30                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    31                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	text0,global,reloc=2,class=CODE,delta=1
    35                           	psect	text1,global,reloc=2,class=CODE,delta=1
    36                           	psect	text2,global,reloc=2,class=CODE,delta=1
    37                           	psect	text3,global,reloc=2,class=CODE,delta=1
    38                           	psect	text4,global,reloc=2,class=CODE,delta=1
    39                           	psect	text5,global,reloc=2,class=CODE,delta=1
    40                           	psect	text6,global,reloc=2,class=CODE,delta=1
    41                           	psect	text7,global,reloc=2,class=CODE,delta=1
    42                           	psect	text8,global,reloc=2,class=CODE,delta=1
    43                           	psect	text9,global,reloc=2,class=CODE,delta=1
    44                           	psect	text10,global,reloc=2,class=CODE,delta=1
    45                           	psect	text11,global,reloc=2,class=CODE,delta=1
    46                           	psect	text12,global,reloc=2,class=CODE,delta=1
    47                           	psect	text13,global,reloc=2,class=CODE,delta=1
    48                           	psect	text14,global,reloc=2,class=CODE,delta=1
    49                           	psect	text15,global,reloc=2,class=CODE,delta=1
    50                           	psect	text16,global,reloc=2,class=CODE,delta=1
    51                           	psect	text17,global,reloc=2,class=CODE,delta=1
    52                           	psect	text18,global,reloc=2,class=CODE,delta=1
    53                           	psect	text19,global,reloc=2,class=CODE,delta=1
    54                           	psect	text20,global,reloc=2,class=CODE,delta=1
    55                           	psect	text21,global,reloc=2,class=CODE,delta=1
    56                           	psect	text22,global,reloc=2,class=CODE,delta=1
    57                           	psect	text23,global,reloc=2,class=CODE,delta=1
    58                           	psect	text24,global,reloc=2,class=CODE,delta=1
    59                           	psect	text25,global,reloc=2,class=CODE,delta=1
    60                           	psect	text26,global,reloc=2,class=CODE,delta=1
    61                           	psect	text27,global,reloc=2,class=CODE,delta=1
    62                           	psect	text28,global,reloc=2,class=CODE,delta=1
    63                           	psect	text29,global,reloc=2,class=CODE,delta=1
    64                           	psect	text30,global,reloc=2,class=CODE,delta=1
    65                           	psect	text31,global,reloc=2,class=CODE,delta=1
    66                           	psect	text32,global,reloc=2,class=CODE,delta=1
    67                           	psect	text33,global,reloc=2,class=CODE,delta=1
    68                           	psect	text34,global,reloc=2,class=CODE,delta=1
    69                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text36,global,reloc=2,class=CODE,delta=1
    71                           	psect	text37,global,reloc=2,class=CODE,delta=1
    72                           	psect	text38,global,reloc=2,class=CODE,delta=1
    73                           	psect	text39,global,reloc=2,class=CODE,delta=1
    74                           	psect	text40,global,reloc=2,class=CODE,delta=1
    75                           	psect	text41,global,reloc=2,class=CODE,delta=1
    76                           	psect	text42,global,reloc=2,class=CODE,delta=1
    77                           	psect	text43,global,reloc=2,class=CODE,delta=1
    78                           	psect	text44,global,reloc=2,class=CODE,delta=1
    79                           	psect	text45,global,reloc=2,class=CODE,delta=1
    80                           	psect	text46,global,reloc=2,class=CODE,delta=1
    81                           	psect	text47,global,reloc=2,class=CODE,delta=1
    82                           	psect	text48,global,reloc=2,class=CODE,delta=1
    83                           	psect	text49,global,reloc=2,class=CODE,delta=1
    84                           	psect	text50,global,reloc=2,class=CODE,delta=1
    85                           	psect	text51,global,reloc=2,class=CODE,delta=1
    86                           	psect	text52,global,reloc=2,class=CODE,delta=1
    87                           	psect	text53,global,reloc=2,class=CODE,delta=1
    88                           	psect	text54,global,reloc=2,class=CODE,delta=1
    89                           	psect	text55,global,reloc=2,class=CODE,delta=1
    90                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text58,global,reloc=2,class=CODE,delta=1
    93                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text60,global,reloc=2,class=CODE,delta=1
    95                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text70,global,reloc=2,class=CODE,delta=1
   105                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text74,global,reloc=2,class=CODE,delta=1
   109                           	psect	text75,global,reloc=2,class=CODE,delta=1
   110                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text78,global,reloc=2,class=CODE,delta=1
   113                           	psect	text79,global,reloc=2,class=CODE,delta=1
   114                           	psect	text80,global,reloc=2,class=CODE,delta=1
   115                           	psect	text81,global,reloc=2,class=CODE,delta=1
   116                           	psect	text82,global,reloc=2,class=CODE,delta=1
   117                           	psect	text83,global,reloc=2,class=CODE,delta=1
   118                           	psect	text84,global,reloc=2,class=CODE,delta=1
   119                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text87,global,reloc=2,class=CODE,delta=1
   122                           	psect	text88,global,reloc=2,class=CODE,delta=1
   123                           	psect	text89,global,reloc=2,class=CODE,delta=1
   124                           	psect	text90,global,reloc=2,class=CODE,delta=1
   125                           	psect	text91,global,reloc=2,class=CODE,delta=1
   126                           	psect	text92,global,reloc=2,class=CODE,delta=1
   127                           	psect	text93,global,reloc=2,class=CODE,delta=1
   128                           	psect	text94,global,reloc=2,class=CODE,delta=1
   129                           	psect	text95,global,reloc=2,class=CODE,delta=1
   130                           	psect	text96,global,reloc=2,class=CODE,delta=1
   131                           	psect	text97,global,reloc=2,class=CODE,delta=1
   132                           	psect	text98,global,reloc=2,class=CODE,delta=1
   133                           	psect	text99,global,reloc=2,class=CODE,delta=1
   134                           	psect	text100,global,reloc=2,class=CODE,delta=1
   135                           	psect	text101,global,reloc=2,class=CODE,delta=1
   136                           	psect	text102,global,reloc=2,class=CODE,delta=1
   137                           	psect	text103,global,reloc=2,class=CODE,delta=1
   138                           	psect	text104,global,reloc=2,class=CODE,delta=1
   139                           	psect	text105,global,reloc=2,class=CODE,delta=1
   140                           	psect	text106,global,reloc=2,class=CODE,delta=1
   141                           	psect	text107,global,reloc=2,class=CODE,delta=1
   142                           	psect	text108,global,reloc=2,class=CODE,delta=1
   143                           	psect	text109,global,reloc=2,class=CODE,delta=1
   144                           	psect	text110,global,reloc=2,class=CODE,delta=1
   145                           	psect	text111,global,reloc=2,class=CODE,delta=1
   146                           	psect	text112,global,reloc=2,class=CODE,delta=1
   147                           	psect	text113,global,reloc=2,class=CODE,delta=1
   148                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text115,global,reloc=2,class=CODE,delta=1
   150                           	psect	text116,global,reloc=2,class=CODE,delta=1
   151                           	psect	text117,global,reloc=2,class=CODE,delta=1
   152                           	psect	text118,global,reloc=2,class=CODE,delta=1
   153                           	psect	text119,global,reloc=2,class=CODE,delta=1
   154                           	psect	text120,global,reloc=2,class=CODE,delta=1
   155                           	psect	text121,global,reloc=2,class=CODE,delta=1
   156                           	psect	text122,global,reloc=2,class=CODE,delta=1
   157                           	psect	text123,global,reloc=2,class=CODE,delta=1
   158                           	psect	text124,global,reloc=2,class=CODE,delta=1
   159                           	psect	text125,global,reloc=2,class=CODE,delta=1
   160                           	psect	text126,global,reloc=2,class=CODE,delta=1
   161                           	psect	text127,global,reloc=2,class=CODE,delta=1
   162                           	psect	text128,global,reloc=2,class=CODE,delta=1
   163                           	psect	text129,global,reloc=2,class=CODE,delta=1
   164                           	psect	text130,global,reloc=2,class=CODE,delta=1
   165                           	psect	text131,global,reloc=2,class=CODE,delta=1
   166                           	psect	text132,global,reloc=2,class=CODE,delta=1
   167                           	psect	text133,global,reloc=2,class=CODE,delta=1
   168                           	psect	text134,global,reloc=2,class=CODE,delta=1
   169                           	psect	text135,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text136,global,reloc=2,class=CODE,delta=1
   171                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text138,global,reloc=2,class=CODE,delta=1
   173                           	psect	text139,global,reloc=2,class=CODE,delta=1
   174                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text141,global,reloc=2,class=CODE,delta=1
   176                           	psect	text142,global,reloc=2,class=CODE,delta=1
   177                           	psect	text143,global,reloc=2,class=CODE,delta=1
   178                           	psect	text144,global,reloc=2,class=CODE,delta=1
   179                           	psect	text145,global,reloc=2,class=CODE,delta=1
   180                           	psect	text146,global,reloc=2,class=CODE,delta=1
   181                           	psect	text147,global,reloc=2,class=CODE,delta=1
   182                           	psect	text148,global,reloc=2,class=CODE,delta=1
   183                           	psect	text149,global,reloc=2,class=CODE,delta=1
   184                           	psect	text150,global,reloc=2,class=CODE,delta=1
   185                           	psect	text151,global,reloc=2,class=CODE,delta=1
   186                           	psect	text152,global,reloc=2,class=CODE,delta=1
   187                           	psect	text153,global,reloc=2,class=CODE,delta=1
   188                           	psect	text154,global,reloc=2,class=CODE,delta=1
   189                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   190                           	psect	text156,global,reloc=2,class=CODE,delta=1
   191                           	psect	text157,global,reloc=2,class=CODE,delta=1
   192                           	psect	text158,global,reloc=2,class=CODE,delta=1
   193                           	psect	text159,global,reloc=2,class=CODE,delta=1
   194                           	psect	text160,global,reloc=2,class=CODE,delta=1
   195                           	psect	text161,global,reloc=2,class=CODE,delta=1
   196                           	psect	text162,global,reloc=2,class=CODE,delta=1
   197                           	psect	text163,global,reloc=2,class=CODE,delta=1
   198                           	psect	text164,global,reloc=2,class=CODE,delta=1
   199                           	psect	text165,global,reloc=2,class=CODE,delta=1
   200                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   201                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   202                           	psect	text167,global,reloc=2,class=CODE,delta=1
   203                           	psect	text168,global,reloc=2,class=CODE,delta=1
   204                           	psect	text169,global,reloc=2,class=CODE,delta=1
   205                           	psect	text170,global,reloc=2,class=CODE,delta=1
   206                           	psect	text171,global,reloc=2,class=CODE,delta=1
   207                           	psect	text172,global,reloc=2,class=CODE,delta=1
   208                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   209                           	psect	text173,global,reloc=2,class=CODE,delta=1
   210                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   211                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   212                           	dabs	1,0x400,48,_BDT
   213                           	dabs	1,0x438,8,_CtrlTrfData
   214                           	dabs	1,0x430,8,_SetupPkt
   215  0000                     
   216                           ; Version 1.45
   217                           ; Generated 16/11/2017 GMT
   218                           ; 
   219                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   220                           ; All rights reserved.
   221                           ; 
   222                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   223                           ; 
   224                           ; Redistribution and use in source and binary forms, with or without modification, are
   225                           ; permitted provided that the following conditions are met:
   226                           ; 
   227                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   228                           ;        conditions and the following disclaimer.
   229                           ; 
   230                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   231                           ;        of conditions and the following disclaimer in the documentation and/or other
   232                           ;        materials provided with the distribution.
   233                           ; 
   234                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   235                           ;        software without specific prior written permission.
   236                           ; 
   237                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   238                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   239                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   240                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   241                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   242                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   243                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   244                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   245                           ; 
   246                           ; 
   247                           ; Code-generator required, PIC18F46J50 Definitions
   248                           ; 
   249                           ; SFR Addresses
   250  0000                     
   251                           	psect	idataBANK1
   252  0061A6                     __pidataBANK1:
   253                           	opt stack 0
   254                           
   255                           ;initializer for InitGprsNetwork@GprsInitSts
   256  0061A6  01                 	db	1
   257                           
   258                           	psect	idataBANK2
   259  00611C                     __pidataBANK2:
   260                           	opt stack 0
   261                           
   262                           ;initializer for MyApp_Task@countRelay1
   263  00611C  01                 	db	1
   264                           
   265                           ;initializer for Terminal@EchoOption
   266  00611D  01                 	db	1
   267                           
   268                           ;initializer for _MainSystemTimebaseFlag
   269  00611E  01                 	db	1
   270                           
   271                           ;initializer for _ConnTimeout
   272  00611F  00                 	db	0
   273  006120  01                 	db	1
   274  006121  0000               	dw	0
   275  006123  0000               	dw	0
   276  006125  0000               	dw	0
   277  006127  0000               	dw	0
   278  006129  00                 	db	0
   279                           
   280                           	psect	idataBANK3
   281  005878                     __pidataBANK3:
   282                           	opt stack 0
   283                           
   284                           ;initializer for ModemEvtParser@F9089
   285  005878  2B                 	db	43
   286  005879  43                 	db	67
   287  00587A  4D                 	db	77
   288  00587B  54                 	db	84
   289  00587C  49                 	db	73
   290                           
   291                           ;initializer for ModemEvtParser@F9087
   292  00587D  52                 	db	82
   293  00587E  49                 	db	73
   294  00587F  4E                 	db	78
   295  005880  47                 	db	71
   296                           
   297                           ;initializer for MyApp_Task@F9008
   298  005881  63                 	db	99
   299  005882  61                 	db	97
   300  005883  74                 	db	116
   301                           
   302                           ;initializer for MyApp_Task@F8995
   303  005884  50                 	db	80
   304  005885  01                 	db	1
   305                           
   306                           ;initializer for MyApp_Task@F8992
   307  005886  50                 	db	80
   308  005887  00                 	db	0
   309                           
   310                           ;initializer for MyApp_Task@countRelay2
   311  005888  0001               	dw	1
   312                           
   313                           ;initializer for triggerRelay@F8967
   314  00588A  50                 	db	80
   315  00588B  00                 	db	0
   316                           
   317                           ;initializer for Term_MainSm@TermDelay
   318  00588C  01                 	db	1
   319  00588D  01                 	db	1
   320  00588E  0000               	dw	0
   321  005890  0000               	dw	0
   322  005892  0000               	dw	0
   323  005894  0000               	dw	0
   324  005896  00                 	db	0
   325                           
   326                           ;initializer for _ConnWait
   327  005897  00                 	db	0
   328  005898  01                 	db	1
   329  005899  0000               	dw	0
   330  00589B  0000               	dw	0
   331  00589D  0000               	dw	0
   332  00589F  0000               	dw	0
   333  0058A1  00                 	db	0
   334                           
   335                           ;initializer for SendSmsSm@SwTimer
   336  0058A2  01                 	db	1
   337  0058A3  01                 	db	1
   338  0058A4  0000               	dw	0
   339  0058A6  0000               	dw	0
   340  0058A8  0000               	dw	0
   341  0058AA  0000               	dw	0
   342  0058AC  00                 	db	0
   343                           
   344                           ;initializer for CheckModem@Timeout
   345  0058AD  00                 	db	0
   346  0058AE  01                 	db	1
   347  0058AF  0000               	dw	0
   348  0058B1  0000               	dw	0
   349  0058B3  0000               	dw	0
   350  0058B5  0000               	dw	0
   351  0058B7  00                 	db	0
   352                           
   353                           ;initializer for MyApp_Task@blickTicks
   354  0058B8  FFFF               	dw	65535
   355                           
   356                           	psect	idataBANK4
   357  006024                     __pidataBANK4:
   358                           	opt stack 0
   359                           
   360                           ;initializer for MyApp_Task@F9001
   361  006024  2B                 	db	43
   362  006025  33                 	db	51
   363  006026  39                 	db	57
   364  006027  33                 	db	51
   365  006028  32                 	db	50
   366  006029  30                 	db	48
   367  00602A  30                 	db	48
   368  00602B  32                 	db	50
   369  00602C  37                 	db	55
   370  00602D  36                 	db	54
   371  00602E  33                 	db	51
   372  00602F  31                 	db	49
   373  006030  38                 	db	56
   374                           
   375                           ;initializer for ModemEvtParser@F9091
   376  006031  43                 	db	67
   377  006032  61                 	db	97
   378  006033  6C                 	db	108
   379  006034  6C                 	db	108
   380  006035  20                 	db	32
   381  006036  52                 	db	82
   382  006037  65                 	db	101
   383  006038  61                 	db	97
   384  006039  64                 	db	100
   385  00603A  79                 	db	121
   386                           
   387                           	psect	idataBANK5
   388  0054C2                     __pidataBANK5:
   389                           	opt stack 0
   390                           
   391                           ;initializer for _TaskTable
   392  0054C2  84                 	db	low _Mdm_DrvMainFn
   393  0054C3  61                 	db	high _Mdm_DrvMainFn
   394  0054C4  00                 	db	0
   395  0054C5  0000               	dw	0
   396  0054C7  000A               	dw	10
   397  0054C9  00                 	db	0
   398  0054CA  CE                 	db	low _I2cSlv_MainTask
   399  0054CB  52                 	db	high _I2cSlv_MainTask
   400  0054CC  00                 	db	0
   401  0054CD  0000               	dw	0
   402  0054CF  0001               	dw	1
   403  0054D1  00                 	db	0
   404  0054D2  1E                 	db	low _Mdm_MainTask
   405  0054D3  54                 	db	high _Mdm_MainTask
   406  0054D4  00                 	db	0
   407  0054D5  0000               	dw	0
   408  0054D7  0001               	dw	1
   409  0054D9  00                 	db	0
   410  0054DA  DE                 	db	low _MdmHttp_MainTask
   411  0054DB  56                 	db	high _MdmHttp_MainTask
   412  0054DC  00                 	db	0
   413  0054DD  0000               	dw	0
   414  0054DF  0001               	dw	1
   415  0054E1  00                 	db	0
   416  0054E2  96                 	db	low _UsbDevice_MainTask
   417  0054E3  5D                 	db	high _UsbDevice_MainTask
   418  0054E4  00                 	db	0
   419  0054E5  0000               	dw	0
   420  0054E7  0001               	dw	1
   421  0054E9  00                 	db	0
   422  0054EA  26                 	db	low _Wdg_MainTask
   423  0054EB  5E                 	db	high _Wdg_MainTask
   424  0054EC  00                 	db	0
   425  0054ED  0000               	dw	0
   426  0054EF  0064               	dw	100
   427  0054F1  00                 	db	0
   428  0054F2  C6                 	db	low _Led_MainTask
   429  0054F3  39                 	db	high _Led_MainTask
   430  0054F4  00                 	db	0
   431  0054F5  0000               	dw	0
   432  0054F7  0032               	dw	50
   433  0054F9  00                 	db	0
   434  0054FA  5E                 	db	low _Rtcm_MainTask
   435  0054FB  49                 	db	high _Rtcm_MainTask
   436  0054FC  00                 	db	0
   437  0054FD  0000               	dw	0
   438  0054FF  0064               	dw	100
   439  005501  00                 	db	0
   440  005502  C2                 	db	low _Term_MainTask
   441  005503  5F                 	db	high _Term_MainTask
   442  005504  00                 	db	0
   443  005505  0000               	dw	0
   444  005507  0001               	dw	1
   445  005509  00                 	db	0
   446  00550A  FE                 	db	low _MyApp_Task
   447  00550B  1F                 	db	high _MyApp_Task
   448  00550C  00                 	db	0
   449  00550D  0000               	dw	0
   450  00550F  0064               	dw	100
   451  005511  00                 	db	0
   452                           
   453                           	psect	mediumconst
   454  00FC32                     __pmediumconst:
   455                           	opt stack 0
   456  00FC32  00                 	db	0
   457  00FC33                     _USB_SD_Ptr:
   458                           	opt stack 0
   459  00FC33  66                 	db	low _sd000
   460  00FC34  FE                 	db	high _sd000
   461  00FC35  1F                 	db	low _sd001
   462  00FC36  FE                 	db	high _sd001
   463  00FC37  F9                 	db	low _sd002
   464  00FC38  FD                 	db	high _sd002
   465  00FC39                     __end_of_USB_SD_Ptr:
   466                           	opt stack 0
   467  00FC39                     _USB_CD_Ptr:
   468                           	opt stack 0
   469  00FC39  B6                 	db	low _configDescriptor1
   470  00FC3A  FD                 	db	high _configDescriptor1
   471  00FC3B                     __end_of_USB_CD_Ptr:
   472                           	opt stack 0
   473  00FC3B                     _TaskNumber:
   474                           	opt stack 0
   475  00FC3B  000A               	dw	10
   476  00FC3D                     __end_of_TaskNumber:
   477                           	opt stack 0
   478  00FC3D                     _MsgFormat:
   479                           	opt stack 0
   480  00FC3D  48                 	db	72
   481  00FC3E  6F                 	db	111
   482  00FC3F  73                 	db	115
   483  00FC40  74                 	db	116
   484  00FC41  20                 	db	32
   485  00FC42  6D                 	db	109
   486  00FC43  65                 	db	101
   487  00FC44  73                 	db	115
   488  00FC45  73                 	db	115
   489  00FC46  61                 	db	97
   490  00FC47  67                 	db	103
   491  00FC48  65                 	db	101
   492  00FC49  20                 	db	32
   493  00FC4A  66                 	db	102
   494  00FC4B  6F                 	db	111
   495  00FC4C  72                 	db	114
   496  00FC4D  6D                 	db	109
   497  00FC4E  61                 	db	97
   498  00FC4F  74                 	db	116
   499  00FC50  3A                 	db	58
   500  00FC51  20                 	db	32
   501  00FC52  0D                 	db	13
   502  00FC53  0A                 	db	10
   503  00FC54  5B                 	db	91
   504  00FC55  6F                 	db	111
   505  00FC56  70                 	db	112
   506  00FC57  5F                 	db	95
   507  00FC58  74                 	db	116
   508  00FC59  79                 	db	121
   509  00FC5A  70                 	db	112
   510  00FC5B  65                 	db	101
   511  00FC5C  5D                 	db	93
   512  00FC5D  3A                 	db	58
   513  00FC5E  5B                 	db	91
   514  00FC5F  6F                 	db	111
   515  00FC60  70                 	db	112
   516  00FC61  5D                 	db	93
   517  00FC62  3A                 	db	58
   518  00FC63  5B                 	db	91
   519  00FC64  6C                 	db	108
   520  00FC65  65                 	db	101
   521  00FC66  6E                 	db	110
   522  00FC67  5D                 	db	93
   523  00FC68  3A                 	db	58
   524  00FC69  5B                 	db	91
   525  00FC6A  61                 	db	97
   526  00FC6B  64                 	db	100
   527  00FC6C  64                 	db	100
   528  00FC6D  72                 	db	114
   529  00FC6E  5D                 	db	93
   530  00FC6F  3A                 	db	58
   531  00FC70  5B                 	db	91
   532  00FC71  70                 	db	112
   533  00FC72  61                 	db	97
   534  00FC73  79                 	db	121
   535  00FC74  6C                 	db	108
   536  00FC75  6F                 	db	111
   537  00FC76  61                 	db	97
   538  00FC77  64                 	db	100
   539  00FC78  5D                 	db	93
   540  00FC79  0D                 	db	13
   541  00FC7A  0A                 	db	10
   542  00FC7B  0D                 	db	13
   543  00FC7C  0A                 	db	10
   544  00FC7D  5B                 	db	91
   545  00FC7E  6F                 	db	111
   546  00FC7F  70                 	db	112
   547  00FC80  5F                 	db	95
   548  00FC81  74                 	db	116
   549  00FC82  79                 	db	121
   550  00FC83  70                 	db	112
   551  00FC84  65                 	db	101
   552  00FC85  5D                 	db	93
   553  00FC86  20                 	db	32
   554  00FC87  3D                 	db	61
   555  00FC88  20                 	db	32
   556  00FC89  53                 	db	83
   557  00FC8A  4F                 	db	79
   558  00FC8B  2C                 	db	44
   559  00FC8C  53                 	db	83
   560  00FC8D  42                 	db	66
   561  00FC8E  0D                 	db	13
   562  00FC8F  0A                 	db	10
   563  00FC90  5B                 	db	91
   564  00FC91  6F                 	db	111
   565  00FC92  70                 	db	112
   566  00FC93  5D                 	db	93
   567  00FC94  20                 	db	32
   568  00FC95  3D                 	db	61
   569  00FC96  20                 	db	32
   570  00FC97  52                 	db	82
   571  00FC98  3A                 	db	58
   572  00FC99  20                 	db	32
   573  00FC9A  72                 	db	114
   574  00FC9B  65                 	db	101
   575  00FC9C  61                 	db	97
   576  00FC9D  64                 	db	100
   577  00FC9E  2C                 	db	44
   578  00FC9F  57                 	db	87
   579  00FCA0  3A                 	db	58
   580  00FCA1  20                 	db	32
   581  00FCA2  77                 	db	119
   582  00FCA3  72                 	db	114
   583  00FCA4  69                 	db	105
   584  00FCA5  74                 	db	116
   585  00FCA6  65                 	db	101
   586  00FCA7  0D                 	db	13
   587  00FCA8  0A                 	db	10
   588  00FCA9  5B                 	db	91
   589  00FCAA  6C                 	db	108
   590  00FCAB  65                 	db	101
   591  00FCAC  6E                 	db	110
   592  00FCAD  5D                 	db	93
   593  00FCAE  20                 	db	32
   594  00FCAF  3D                 	db	61
   595  00FCB0  20                 	db	32
   596  00FCB1  32                 	db	50
   597  00FCB2  20                 	db	32
   598  00FCB3  62                 	db	98
   599  00FCB4  79                 	db	121
   600  00FCB5  74                 	db	116
   601  00FCB6  65                 	db	101
   602  00FCB7  20                 	db	32
   603  00FCB8  41                 	db	65
   604  00FCB9  53                 	db	83
   605  00FCBA  43                 	db	67
   606  00FCBB  49                 	db	73
   607  00FCBC  49                 	db	73
   608  00FCBD  0D                 	db	13
   609  00FCBE  0A                 	db	10
   610  00FCBF  5B                 	db	91
   611  00FCC0  61                 	db	97
   612  00FCC1  64                 	db	100
   613  00FCC2  64                 	db	100
   614  00FCC3  72                 	db	114
   615  00FCC4  5D                 	db	93
   616  00FCC5  20                 	db	32
   617  00FCC6  3D                 	db	61
   618  00FCC7  20                 	db	32
   619  00FCC8  32                 	db	50
   620  00FCC9  20                 	db	32
   621  00FCCA  62                 	db	98
   622  00FCCB  79                 	db	121
   623  00FCCC  74                 	db	116
   624  00FCCD  65                 	db	101
   625  00FCCE  20                 	db	32
   626  00FCCF  41                 	db	65
   627  00FCD0  53                 	db	83
   628  00FCD1  43                 	db	67
   629  00FCD2  49                 	db	73
   630  00FCD3  49                 	db	73
   631  00FCD4  0D                 	db	13
   632  00FCD5  0A                 	db	10
   633  00FCD6  5B                 	db	91
   634  00FCD7  70                 	db	112
   635  00FCD8  61                 	db	97
   636  00FCD9  79                 	db	121
   637  00FCDA  6C                 	db	108
   638  00FCDB  6F                 	db	111
   639  00FCDC  61                 	db	97
   640  00FCDD  64                 	db	100
   641  00FCDE  5D                 	db	93
   642  00FCDF  20                 	db	32
   643  00FCE0  3D                 	db	61
   644  00FCE1  20                 	db	32
   645  00FCE2  6D                 	db	109
   646  00FCE3  61                 	db	97
   647  00FCE4  78                 	db	120
   648  00FCE5  20                 	db	32
   649  00FCE6  32                 	db	50
   650  00FCE7  30                 	db	48
   651  00FCE8  20                 	db	32
   652  00FCE9  62                 	db	98
   653  00FCEA  79                 	db	121
   654  00FCEB  74                 	db	116
   655  00FCEC  65                 	db	101
   656  00FCED  20                 	db	32
   657  00FCEE  41                 	db	65
   658  00FCEF  53                 	db	83
   659  00FCF0  43                 	db	67
   660  00FCF1  49                 	db	73
   661  00FCF2  49                 	db	73
   662  00FCF3  0D                 	db	13
   663  00FCF4  0A                 	db	10
   664  00FCF5  0D                 	db	13
   665  00FCF6  0A                 	db	10
   666  00FCF7  54                 	db	84
   667  00FCF8  65                 	db	101
   668  00FCF9  72                 	db	114
   669  00FCFA  6D                 	db	109
   670  00FCFB  69                 	db	105
   671  00FCFC  6E                 	db	110
   672  00FCFD  61                 	db	97
   673  00FCFE  6C                 	db	108
   674  00FCFF  20                 	db	32
   675  00FD00  4D                 	db	77
   676  00FD01  6F                 	db	111
   677  00FD02  64                 	db	100
   678  00FD03  65                 	db	101
   679  00FD04  3A                 	db	58
   680  00FD05  20                 	db	32
   681  00FD06  43                 	db	67
   682  00FD07  4F                 	db	79
   683  00FD08  4D                 	db	77
   684  00FD09  4D                 	db	77
   685  00FD0A  41                 	db	65
   686  00FD0B  4E                 	db	78
   687  00FD0C  44                 	db	68
   688  00FD0D  20                 	db	32
   689  00FD0E  4D                 	db	77
   690  00FD0F  4F                 	db	79
   691  00FD10  44                 	db	68
   692  00FD11  45                 	db	69
   693  00FD12  0D                 	db	13
   694  00FD13  0A                 	db	10
   695  00FD14  4D                 	db	77
   696  00FD15  6F                 	db	111
   697  00FD16  64                 	db	100
   698  00FD17  65                 	db	101
   699  00FD18  6D                 	db	109
   700  00FD19  20                 	db	32
   701  00FD1A  54                 	db	84
   702  00FD1B  79                 	db	121
   703  00FD1C  70                 	db	112
   704  00FD1D  65                 	db	101
   705  00FD1E  3A                 	db	58
   706  00FD1F  20                 	db	32
   707  00FD20  47                 	db	71
   708  00FD21  53                 	db	83
   709  00FD22  4D                 	db	77
   710  00FD23  2F                 	db	47
   711  00FD24  47                 	db	71
   712  00FD25  50                 	db	80
   713  00FD26  52                 	db	82
   714  00FD27  53                 	db	83
   715  00FD28  0D                 	db	13
   716  00FD29  0A                 	db	10
   717  00FD2A  0D                 	db	13
   718  00FD2B  0A                 	db	10
   719  00FD2C  00                 	db	0
   720  00FD2D                     __end_of_MsgFormat:
   721                           	opt stack 0
   722  00FD2D                     _Welcome:
   723                           	opt stack 0
   724  00FD2D  2A                 	db	42
   725  00FD2E  2A                 	db	42
   726  00FD2F  2A                 	db	42
   727  00FD30  2A                 	db	42
   728  00FD31  2A                 	db	42
   729  00FD32  2A                 	db	42
   730  00FD33  2A                 	db	42
   731  00FD34  2A                 	db	42
   732  00FD35  2A                 	db	42
   733  00FD36  2A                 	db	42
   734  00FD37  2A                 	db	42
   735  00FD38  2A                 	db	42
   736  00FD39  2A                 	db	42
   737  00FD3A  2A                 	db	42
   738  00FD3B  2A                 	db	42
   739  00FD3C  2A                 	db	42
   740  00FD3D  2A                 	db	42
   741  00FD3E  2A                 	db	42
   742  00FD3F  2A                 	db	42
   743  00FD40  2A                 	db	42
   744  00FD41  2A                 	db	42
   745  00FD42  2A                 	db	42
   746  00FD43  2A                 	db	42
   747  00FD44  2A                 	db	42
   748  00FD45  2A                 	db	42
   749  00FD46  2A                 	db	42
   750  00FD47  2A                 	db	42
   751  00FD48  2A                 	db	42
   752  00FD49  2A                 	db	42
   753  00FD4A  2A                 	db	42
   754  00FD4B  2A                 	db	42
   755  00FD4C  2A                 	db	42
   756  00FD4D  2A                 	db	42
   757  00FD4E  2A                 	db	42
   758  00FD4F  2A                 	db	42
   759  00FD50  2A                 	db	42
   760  00FD51  2A                 	db	42
   761  00FD52  2A                 	db	42
   762  00FD53  2A                 	db	42
   763  00FD54  2A                 	db	42
   764  00FD55  2A                 	db	42
   765  00FD56  2A                 	db	42
   766  00FD57  2A                 	db	42
   767  00FD58  2A                 	db	42
   768  00FD59  2A                 	db	42
   769  00FD5A  2A                 	db	42
   770  00FD5B  2A                 	db	42
   771  00FD5C  2A                 	db	42
   772  00FD5D  2A                 	db	42
   773  00FD5E  0D                 	db	13
   774  00FD5F  0A                 	db	10
   775  00FD60  20                 	db	32
   776  00FD61  20                 	db	32
   777  00FD62  20                 	db	32
   778  00FD63  20                 	db	32
   779  00FD64  20                 	db	32
   780  00FD65  20                 	db	32
   781  00FD66  20                 	db	32
   782  00FD67  20                 	db	32
   783  00FD68  20                 	db	32
   784  00FD69  20                 	db	32
   785  00FD6A  20                 	db	32
   786  00FD6B  20                 	db	32
   787  00FD6C  20                 	db	32
   788  00FD6D  20                 	db	32
   789  00FD6E  20                 	db	32
   790  00FD6F  20                 	db	32
   791  00FD70  20                 	db	32
   792  00FD71  20                 	db	32
   793  00FD72  4D                 	db	77
   794  00FD73  45                 	db	69
   795  00FD74  52                 	db	82
   796  00FD75  43                 	db	67
   797  00FD76  55                 	db	85
   798  00FD77  52                 	db	82
   799  00FD78  59                 	db	89
   800  00FD79  20                 	db	32
   801  00FD7A  53                 	db	83
   802  00FD7B  59                 	db	89
   803  00FD7C  53                 	db	83
   804  00FD7D  54                 	db	84
   805  00FD7E  45                 	db	69
   806  00FD7F  4D                 	db	77
   807  00FD80  0D                 	db	13
   808  00FD81  0A                 	db	10
   809  00FD82  2A                 	db	42
   810  00FD83  2A                 	db	42
   811  00FD84  2A                 	db	42
   812  00FD85  2A                 	db	42
   813  00FD86  2A                 	db	42
   814  00FD87  2A                 	db	42
   815  00FD88  2A                 	db	42
   816  00FD89  2A                 	db	42
   817  00FD8A  2A                 	db	42
   818  00FD8B  2A                 	db	42
   819  00FD8C  2A                 	db	42
   820  00FD8D  2A                 	db	42
   821  00FD8E  2A                 	db	42
   822  00FD8F  2A                 	db	42
   823  00FD90  2A                 	db	42
   824  00FD91  2A                 	db	42
   825  00FD92  2A                 	db	42
   826  00FD93  2A                 	db	42
   827  00FD94  2A                 	db	42
   828  00FD95  2A                 	db	42
   829  00FD96  2A                 	db	42
   830  00FD97  2A                 	db	42
   831  00FD98  2A                 	db	42
   832  00FD99  2A                 	db	42
   833  00FD9A  2A                 	db	42
   834  00FD9B  2A                 	db	42
   835  00FD9C  2A                 	db	42
   836  00FD9D  2A                 	db	42
   837  00FD9E  2A                 	db	42
   838  00FD9F  2A                 	db	42
   839  00FDA0  2A                 	db	42
   840  00FDA1  2A                 	db	42
   841  00FDA2  2A                 	db	42
   842  00FDA3  2A                 	db	42
   843  00FDA4  2A                 	db	42
   844  00FDA5  2A                 	db	42
   845  00FDA6  2A                 	db	42
   846  00FDA7  2A                 	db	42
   847  00FDA8  2A                 	db	42
   848  00FDA9  2A                 	db	42
   849  00FDAA  2A                 	db	42
   850  00FDAB  2A                 	db	42
   851  00FDAC  2A                 	db	42
   852  00FDAD  2A                 	db	42
   853  00FDAE  2A                 	db	42
   854  00FDAF  2A                 	db	42
   855  00FDB0  2A                 	db	42
   856  00FDB1  2A                 	db	42
   857  00FDB2  2A                 	db	42
   858  00FDB3  0D                 	db	13
   859  00FDB4  0A                 	db	10
   860  00FDB5  00                 	db	0
   861  00FDB6                     __end_of_Welcome:
   862                           	opt stack 0
   863  00FDB6                     _configDescriptor1:
   864                           	opt stack 0
   865  00FDB6  09                 	db	9
   866  00FDB7  02                 	db	2
   867  00FDB8  43                 	db	67
   868  00FDB9  00                 	db	0
   869  00FDBA  02                 	db	2
   870  00FDBB  01                 	db	1
   871  00FDBC  00                 	db	0
   872  00FDBD  C0                 	db	192
   873  00FDBE  32                 	db	50
   874  00FDBF  09                 	db	9
   875  00FDC0  04                 	db	4
   876  00FDC1  00                 	db	0
   877  00FDC2  00                 	db	0
   878  00FDC3  01                 	db	1
   879  00FDC4  02                 	db	2
   880  00FDC5  02                 	db	2
   881  00FDC6  01                 	db	1
   882  00FDC7  00                 	db	0
   883  00FDC8  05                 	db	5
   884  00FDC9  24                 	db	36
   885  00FDCA  00                 	db	0
   886  00FDCB  10                 	db	16
   887  00FDCC  01                 	db	1
   888  00FDCD  04                 	db	4
   889  00FDCE  24                 	db	36
   890  00FDCF  02                 	db	2
   891  00FDD0  02                 	db	2
   892  00FDD1  05                 	db	5
   893  00FDD2  24                 	db	36
   894  00FDD3  06                 	db	6
   895  00FDD4  00                 	db	0
   896  00FDD5  01                 	db	1
   897  00FDD6  05                 	db	5
   898  00FDD7  24                 	db	36
   899  00FDD8  01                 	db	1
   900  00FDD9  00                 	db	0
   901  00FDDA  01                 	db	1
   902  00FDDB  07                 	db	7
   903  00FDDC  05                 	db	5
   904  00FDDD  81                 	db	129
   905  00FDDE  03                 	db	3
   906  00FDDF  08                 	db	8
   907  00FDE0  00                 	db	0
   908  00FDE1  02                 	db	2
   909  00FDE2  09                 	db	9
   910  00FDE3  04                 	db	4
   911  00FDE4  01                 	db	1
   912  00FDE5  00                 	db	0
   913  00FDE6  02                 	db	2
   914  00FDE7  0A                 	db	10
   915  00FDE8  00                 	db	0
   916  00FDE9  00                 	db	0
   917  00FDEA  00                 	db	0
   918  00FDEB  07                 	db	7
   919  00FDEC  05                 	db	5
   920  00FDED  02                 	db	2
   921  00FDEE  02                 	db	2
   922  00FDEF  40                 	db	64
   923  00FDF0  00                 	db	0
   924  00FDF1  00                 	db	0
   925  00FDF2  07                 	db	7
   926  00FDF3  05                 	db	5
   927  00FDF4  82                 	db	130
   928  00FDF5  02                 	db	2
   929  00FDF6  40                 	db	64
   930  00FDF7  00                 	db	0
   931  00FDF8  00                 	db	0
   932  00FDF9                     __end_of_configDescriptor1:
   933                           	opt stack 0
   934  00FDF9                     _sd002:
   935                           	opt stack 0
   936  00FDF9  26                 	db	38
   937  00FDFA  03                 	db	3
   938  00FDFB  0054               	dw	84
   939  00FDFD  0065               	dw	101
   940  00FDFF  0072               	dw	114
   941  00FE01  006D               	dw	109
   942  00FE03  0069               	dw	105
   943  00FE05  006E               	dw	110
   944  00FE07  0061               	dw	97
   945  00FE09  006C               	dw	108
   946  00FE0B  0020               	dw	32
   947  00FE0D  0049               	dw	73
   948  00FE0F  006E               	dw	110
   949  00FE11  0074               	dw	116
   950  00FE13  0065               	dw	101
   951  00FE15  0072               	dw	114
   952  00FE17  0066               	dw	102
   953  00FE19  0061               	dw	97
   954  00FE1B  0063               	dw	99
   955  00FE1D  0065               	dw	101
   956  00FE1F                     __end_of_sd002:
   957                           	opt stack 0
   958  00FE1F                     _sd001:
   959                           	opt stack 0
   960  00FE1F  1E                 	db	30
   961  00FE20  03                 	db	3
   962  00FE21  004D               	dw	77
   963  00FE23  0065               	dw	101
   964  00FE25  0072               	dw	114
   965  00FE27  0063               	dw	99
   966  00FE29  0075               	dw	117
   967  00FE2B  0072               	dw	114
   968  00FE2D  0079               	dw	121
   969  00FE2F  0020               	dw	32
   970  00FE31  0053               	dw	83
   971  00FE33  0079               	dw	121
   972  00FE35  0073               	dw	115
   973  00FE37  0074               	dw	116
   974  00FE39  0065               	dw	101
   975  00FE3B  006D               	dw	109
   976  00FE3D                     __end_of_sd001:
   977                           	opt stack 0
   978  00FE3D                     _MsgReady:
   979                           	opt stack 0
   980  00FE3D  0D                 	db	13
   981  00FE3E  0A                 	db	10
   982  00FE3F  53                 	db	83
   983  00FE40  79                 	db	121
   984  00FE41  73                 	db	115
   985  00FE42  74                 	db	116
   986  00FE43  65                 	db	101
   987  00FE44  6D                 	db	109
   988  00FE45  20                 	db	32
   989  00FE46  52                 	db	82
   990  00FE47  65                 	db	101
   991  00FE48  61                 	db	97
   992  00FE49  64                 	db	100
   993  00FE4A  79                 	db	121
   994  00FE4B  2E                 	db	46
   995  00FE4C  2E                 	db	46
   996  00FE4D  2E                 	db	46
   997  00FE4E  20                 	db	32
   998  00FE4F  0D                 	db	13
   999  00FE50  0A                 	db	10
  1000  00FE51  0D                 	db	13
  1001  00FE52  0A                 	db	10
  1002  00FE53  00                 	db	0
  1003  00FE54                     __end_of_MsgReady:
  1004                           	opt stack 0
  1005  00FE54                     _device_dsc:
  1006                           	opt stack 0
  1007  00FE54  12                 	db	18
  1008  00FE55  01                 	db	1
  1009  00FE56  0200               	dw	512
  1010  00FE58  02                 	db	2
  1011  00FE59  00                 	db	0
  1012  00FE5A  00                 	db	0
  1013  00FE5B  08                 	db	8
  1014  00FE5C  04D8               	dw	1240
  1015  00FE5E  000A               	dw	10
  1016  00FE60  0100               	dw	256
  1017  00FE62  01                 	db	1
  1018  00FE63  02                 	db	2
  1019  00FE64  00                 	db	0
  1020  00FE65  01                 	db	1
  1021  00FE66                     __end_of_device_dsc:
  1022                           	opt stack 0
  1023  00FE66                     _sd000:
  1024                           	opt stack 0
  1025  00FE66  04                 	db	4
  1026  00FE67  03                 	db	3
  1027  00FE68  0409               	dw	1033
  1028  00FE6A                     __end_of_sd000:
  1029                           	opt stack 0
  1030  0000                     _RPINR1	set	3815
  1031  0000                     _UEP0bits	set	3878
  1032  0000                     _UIEbits	set	3894
  1033  0000                     _UADDR	set	3896
  1034  0000                     _UIE	set	3894
  1035  0000                     _UEIE	set	3895
  1036  0000                     _UCFG	set	3897
  1037  0000                     _RTCCAL	set	3902
  1038  0000                     _PADCFG1bits	set	3900
  1039  0000                     _RTCCFGbits	set	3903
  1040  0000                     _DSCONLbits	set	3916
  1041  0000                     _DSGPR1	set	3919
  1042  0000                     _DSGPR0	set	3918
  1043  0000                     _DSCONHbits	set	3917
  1044  0000                     _ANCON1bits	set	3913
  1045  0000                     _UEP1	set	3879
  1046  0000                     _UEP0	set	3878
  1047  0000                     _T1CONbits	set	4045
  1048  0000                     _PORTDbits	set	3971
  1049  0000                     _USTAT	set	3940
  1050  0000                     _PIR2bits	set	4001
  1051  0000                     _UCON	set	3941
  1052  0000                     _UIRbits	set	3938
  1053  0000                     _UCONbits	set	3941
  1054  0000                     _UIR	set	3938
  1055  0000                     _UEIR	set	3939
  1056  0000                     _PIE2bits	set	4000
  1057  0000                     _BAUDCON2	set	3964
  1058  0000                     _RCSTA2	set	3996
  1059  0000                     _BAUDCON1	set	3966
  1060  0000                     _RCSTA1	set	4012
  1061  0000                     _TRISCbits	set	3988
  1062  0000                     _TXSTA2	set	4008
  1063  0000                     _TXSTA1	set	4013
  1064  0000                     _RCREG2	set	4010
  1065  0000                     _RCREG1	set	4015
  1066  0000                     _TXREG2	set	4009
  1067  0000                     _TXREG1	set	4014
  1068  0000                     _SPBRG2	set	4011
  1069  0000                     _SPBRGH2	set	3965
  1070  0000                     _SPBRG1	set	4016
  1071  0000                     _SPBRGH1	set	3967
  1072  0000                     _PR4	set	3959
  1073  0000                     _PR2	set	4043
  1074  0000                     _PIE1bits	set	3997
  1075  0000                     _IPR1bits	set	3999
  1076  0000                     _T4CONbits	set	3958
  1077  0000                     _T2CONbits	set	4042
  1078  0000                     _ALRMVALL	set	3982
  1079  0000                     _ALRMVALH	set	3983
  1080  0000                     _RTCVALH	set	3993
  1081  0000                     _RTCVALL	set	3992
  1082  0000                     _ALRMRPTbits	set	3984
  1083  0000                     _ALRMCFGbits	set	3985
  1084  0000                     _PIE3bits	set	4003
  1085  0000                     _IPR3bits	set	4005
  1086  0000                     _OSCCONbits	set	4051
  1087  0000                     _PORTEbits	set	3972
  1088  0000                     _TRISEbits	set	3990
  1089  0000                     _WDTCONbits	set	4032
  1090  0000                     _INTCON2bits	set	4081
  1091  0000                     _TRISBbits	set	3987
  1092  0000                     _OSCTUNEbits	set	3995
  1093  0000                     _SSP2CON1	set	3954
  1094  0000                     _TRISDbits	set	3989
  1095  0000                     _SSP2BUF	set	3957
  1096  0000                     _SSP2CON2bits	set	3953
  1097  0000                     _SSP2STAT	set	3955
  1098  0000                     _SSP2CON2	set	3953
  1099  0000                     _SSP2ADD	set	3956
  1100  0000                     _PIR1bits	set	3998
  1101  0000                     _PIR3bits	set	4004
  1102  0000                     _INTCON3bits	set	4080
  1103  0000                     _INTCONbits	set	4082
  1104  0000                     _RCONbits	set	4048
  1105  00FE6A                     STR_21:
  1106  00FE6A  20                 	db	32
  1107  00FE6B  4C                 	db	76	;'L'
  1108  00FE6C  61                 	db	97	;'a'
  1109  00FE6D  7A                 	db	122	;'z'
  1110  00FE6E  79                 	db	121	;'y'
  1111  00FE6F  20                 	db	32
  1112  00FE70  64                 	db	100	;'d'
  1113  00FE71  65                 	db	101	;'e'
  1114  00FE72  76                 	db	118	;'v'
  1115  00FE73  69                 	db	105	;'i'
  1116  00FE74  63                 	db	99	;'c'
  1117  00FE75  65                 	db	101	;'e'
  1118  00FE76  2E                 	db	46
  1119  00FE77  2E                 	db	46
  1120  00FE78  2E                 	db	46
  1121  00FE79  79                 	db	121	;'y'
  1122  00FE7A  6F                 	db	111	;'o'
  1123  00FE7B  75                 	db	117	;'u'
  1124  00FE7C  27                 	db	39
  1125  00FE7D  76                 	db	118	;'v'
  1126  00FE7E  65                 	db	101	;'e'
  1127  00FE7F  20                 	db	32
  1128  00FE80  62                 	db	98	;'b'
  1129  00FE81  65                 	db	101	;'e'
  1130  00FE82  65                 	db	101	;'e'
  1131  00FE83  6E                 	db	110	;'n'
  1132  00FE84  20                 	db	32
  1133  00FE85  74                 	db	116	;'t'
  1134  00FE86  69                 	db	105	;'i'
  1135  00FE87  6D                 	db	109	;'m'
  1136  00FE88  65                 	db	101	;'e'
  1137  00FE89  64                 	db	100	;'d'
  1138  00FE8A  2D                 	db	45
  1139  00FE8B  6F                 	db	111	;'o'
  1140  00FE8C  75                 	db	117	;'u'
  1141  00FE8D  74                 	db	116	;'t'
  1142  00FE8E  21                 	db	33
  1143  00FE8F  21                 	db	33
  1144  00FE90  21                 	db	33
  1145  00FE91  0D                 	db	13
  1146  00FE92  0A                 	db	10
  1147  00FE93  00                 	db	0
  1148  00FE94                     STR_8:
  1149  00FE94  41                 	db	65	;'A'
  1150  00FE95  54                 	db	84	;'T'
  1151  00FE96  2B                 	db	43
  1152  00FE97  53                 	db	83	;'S'
  1153  00FE98  41                 	db	65	;'A'
  1154  00FE99  50                 	db	80	;'P'
  1155  00FE9A  42                 	db	66	;'B'
  1156  00FE9B  52                 	db	82	;'R'
  1157  00FE9C  3D                 	db	61	;'='
  1158  00FE9D  33                 	db	51	;'3'
  1159  00FE9E  2C                 	db	44
  1160  00FE9F  31                 	db	49	;'1'
  1161  00FEA0  2C                 	db	44
  1162  00FEA1  22                 	db	34
  1163  00FEA2  43                 	db	67	;'C'
  1164  00FEA3  6F                 	db	111	;'o'
  1165  00FEA4  6E                 	db	110	;'n'
  1166  00FEA5  74                 	db	116	;'t'
  1167  00FEA6  79                 	db	121	;'y'
  1168  00FEA7  70                 	db	112	;'p'
  1169  00FEA8  65                 	db	101	;'e'
  1170  00FEA9  22                 	db	34
  1171  00FEAA  2C                 	db	44
  1172  00FEAB  22                 	db	34
  1173  00FEAC  47                 	db	71	;'G'
  1174  00FEAD  50                 	db	80	;'P'
  1175  00FEAE  52                 	db	82	;'R'
  1176  00FEAF  53                 	db	83	;'S'
  1177  00FEB0  22                 	db	34
  1178  00FEB1  0D                 	db	13
  1179  00FEB2  00                 	db	0
  1180  00FEB3                     STR_14:
  1181  00FEB3  41                 	db	65	;'A'
  1182  00FEB4  54                 	db	84	;'T'
  1183  00FEB5  2B                 	db	43
  1184  00FEB6  48                 	db	72	;'H'
  1185  00FEB7  54                 	db	84	;'T'
  1186  00FEB8  54                 	db	84	;'T'
  1187  00FEB9  50                 	db	80	;'P'
  1188  00FEBA  50                 	db	80	;'P'
  1189  00FEBB  41                 	db	65	;'A'
  1190  00FEBC  52                 	db	82	;'R'
  1191  00FEBD  41                 	db	65	;'A'
  1192  00FEBE  3D                 	db	61	;'='
  1193  00FEBF  22                 	db	34
  1194  00FEC0  43                 	db	67	;'C'
  1195  00FEC1  49                 	db	73	;'I'
  1196  00FEC2  44                 	db	68	;'D'
  1197  00FEC3  22                 	db	34
  1198  00FEC4  2C                 	db	44
  1199  00FEC5  31                 	db	49	;'1'
  1200  00FEC6  0D                 	db	13
  1201  00FEC7  00                 	db	0
  1202  00FEC8                     STR_9:
  1203  00FEC8  41                 	db	65	;'A'
  1204  00FEC9  54                 	db	84	;'T'
  1205  00FECA  2B                 	db	43
  1206  00FECB  53                 	db	83	;'S'
  1207  00FECC  41                 	db	65	;'A'
  1208  00FECD  50                 	db	80	;'P'
  1209  00FECE  42                 	db	66	;'B'
  1210  00FECF  52                 	db	82	;'R'
  1211  00FED0  3D                 	db	61	;'='
  1212  00FED1  33                 	db	51	;'3'
  1213  00FED2  2C                 	db	44
  1214  00FED3  31                 	db	49	;'1'
  1215  00FED4  2C                 	db	44
  1216  00FED5  22                 	db	34
  1217  00FED6  41                 	db	65	;'A'
  1218  00FED7  50                 	db	80	;'P'
  1219  00FED8  4E                 	db	78	;'N'
  1220  00FED9  22                 	db	34
  1221  00FEDA  2C                 	db	44
  1222  00FEDB  22                 	db	34
  1223  00FEDC  00                 	db	0
  1224  00FEDD                     STR_23:
  1225  00FEDD  46                 	db	70	;'F'
  1226  00FEDE  72                 	db	114	;'r'
  1227  00FEDF  61                 	db	97	;'a'
  1228  00FEE0  6D                 	db	109	;'m'
  1229  00FEE1  65                 	db	101	;'e'
  1230  00FEE2  77                 	db	119	;'w'
  1231  00FEE3  6F                 	db	111	;'o'
  1232  00FEE4  72                 	db	114	;'r'
  1233  00FEE5  6B                 	db	107	;'k'
  1234  00FEE6  20                 	db	32
  1235  00FEE7  56                 	db	86	;'V'
  1236  00FEE8  65                 	db	101	;'e'
  1237  00FEE9  72                 	db	114	;'r'
  1238  00FEEA  73                 	db	115	;'s'
  1239  00FEEB  69                 	db	105	;'i'
  1240  00FEEC  6F                 	db	111	;'o'
  1241  00FEED  6E                 	db	110	;'n'
  1242  00FEEE  3A                 	db	58	;':'
  1243  00FEEF  20                 	db	32
  1244  00FEF0  00                 	db	0
  1245  00FEF1                     STR_15:
  1246  00FEF1  41                 	db	65	;'A'
  1247  00FEF2  54                 	db	84	;'T'
  1248  00FEF3  2B                 	db	43
  1249  00FEF4  48                 	db	72	;'H'
  1250  00FEF5  54                 	db	84	;'T'
  1251  00FEF6  54                 	db	84	;'T'
  1252  00FEF7  50                 	db	80	;'P'
  1253  00FEF8  50                 	db	80	;'P'
  1254  00FEF9  41                 	db	65	;'A'
  1255  00FEFA  52                 	db	82	;'R'
  1256  00FEFB  41                 	db	65	;'A'
  1257  00FEFC  3D                 	db	61	;'='
  1258  00FEFD  22                 	db	34
  1259  00FEFE  55                 	db	85	;'U'
  1260  00FEFF  52                 	db	82	;'R'
  1261  00FF00  4C                 	db	76	;'L'
  1262  00FF01  22                 	db	34
  1263  00FF02  2C                 	db	44
  1264  00FF03  22                 	db	34
  1265  00FF04  00                 	db	0
  1266  00FF05                     STR_29:
  1267  00FF05  41                 	db	65	;'A'
  1268  00FF06  54                 	db	84	;'T'
  1269  00FF07  2B                 	db	43
  1270  00FF08  43                 	db	67	;'C'
  1271  00FF09  4D                 	db	77	;'M'
  1272  00FF0A  47                 	db	71	;'G'
  1273  00FF0B  44                 	db	68	;'D'
  1274  00FF0C  41                 	db	65	;'A'
  1275  00FF0D  3D                 	db	61	;'='
  1276  00FF0E  44                 	db	68	;'D'
  1277  00FF0F  45                 	db	69	;'E'
  1278  00FF10  4C                 	db	76	;'L'
  1279  00FF11  20                 	db	32
  1280  00FF12  41                 	db	65	;'A'
  1281  00FF13  4C                 	db	76	;'L'
  1282  00FF14  4C                 	db	76	;'L'
  1283  00FF15  0D                 	db	13
  1284  00FF16  0A                 	db	10
  1285  00FF17  00                 	db	0
  1286  00FF18                     STR_27:
  1287  00FF18  42                 	db	66	;'B'
  1288  00FF19  75                 	db	117	;'u'
  1289  00FF1A  69                 	db	105	;'i'
  1290  00FF1B  6C                 	db	108	;'l'
  1291  00FF1C  64                 	db	100	;'d'
  1292  00FF1D  20                 	db	32
  1293  00FF1E  44                 	db	68	;'D'
  1294  00FF1F  61                 	db	97	;'a'
  1295  00FF20  74                 	db	116	;'t'
  1296  00FF21  65                 	db	101	;'e'
  1297  00FF22  3A                 	db	58	;':'
  1298  00FF23  20                 	db	32
  1299  00FF24  25                 	db	37
  1300  00FF25  73                 	db	115	;'s'
  1301  00FF26  0D                 	db	13
  1302  00FF27  0A                 	db	10
  1303  00FF28  00                 	db	0
  1304  00FF29                     STR_16:
  1305  00FF29  41                 	db	65	;'A'
  1306  00FF2A  54                 	db	84	;'T'
  1307  00FF2B  2B                 	db	43
  1308  00FF2C  48                 	db	72	;'H'
  1309  00FF2D  54                 	db	84	;'T'
  1310  00FF2E  54                 	db	84	;'T'
  1311  00FF2F  50                 	db	80	;'P'
  1312  00FF30  41                 	db	65	;'A'
  1313  00FF31  43                 	db	67	;'C'
  1314  00FF32  54                 	db	84	;'T'
  1315  00FF33  49                 	db	73	;'I'
  1316  00FF34  4F                 	db	79	;'O'
  1317  00FF35  4E                 	db	78	;'N'
  1318  00FF36  3D                 	db	61	;'='
  1319  00FF37  30                 	db	48	;'0'
  1320  00FF38  0D                 	db	13
  1321  00FF39  00                 	db	0
  1322  00FF3A                     STR_30:
  1323  00FF3A  41                 	db	65	;'A'
  1324  00FF3B  54                 	db	84	;'T'
  1325  00FF3C  2B                 	db	43
  1326  00FF3D  43                 	db	67	;'C'
  1327  00FF3E  4D                 	db	77	;'M'
  1328  00FF3F  47                 	db	71	;'G'
  1329  00FF40  44                 	db	68	;'D'
  1330  00FF41  3D                 	db	61	;'='
  1331  00FF42  31                 	db	49	;'1'
  1332  00FF43  2C                 	db	44
  1333  00FF44  30                 	db	48	;'0'
  1334  00FF45  0D                 	db	13
  1335  00FF46  0A                 	db	10
  1336  00FF47  00                 	db	0
  1337  00FF48  41                 	db	65	;'A'
  1338  00FF49  54                 	db	84	;'T'
  1339  00FF4A  2B                 	db	43
  1340  00FF4B  48                 	db	72	;'H'
  1341  00FF4C  54                 	db	84	;'T'
  1342  00FF4D  54                 	db	84	;'T'
  1343  00FF4E  50                 	db	80	;'P'
  1344  00FF4F  53                 	db	83	;'S'
  1345  00FF50  53                 	db	83	;'S'
  1346  00FF51  4C                 	db	76	;'L'
  1347  00FF52  3D                 	db	61	;'='
  1348  00FF53  30                 	db	48	;'0'
  1349  00FF54  0D                 	db	13
  1350  00FF55  00                 	db	0
  1351  00FF56                     STR_10:
  1352  00FF56  41                 	db	65	;'A'
  1353  00FF57  54                 	db	84	;'T'
  1354  00FF58  2B                 	db	43
  1355  00FF59  53                 	db	83	;'S'
  1356  00FF5A  41                 	db	65	;'A'
  1357  00FF5B  50                 	db	80	;'P'
  1358  00FF5C  42                 	db	66	;'B'
  1359  00FF5D  52                 	db	82	;'R'
  1360  00FF5E  3D                 	db	61	;'='
  1361  00FF5F  31                 	db	49	;'1'
  1362  00FF60  2C                 	db	44
  1363  00FF61  31                 	db	49	;'1'
  1364  00FF62  0D                 	db	13
  1365  00FF63  00                 	db	0
  1366  00FF64                     STR_11:
  1367  00FF64  41                 	db	65	;'A'
  1368  00FF65  54                 	db	84	;'T'
  1369  00FF66  2B                 	db	43
  1370  00FF67  53                 	db	83	;'S'
  1371  00FF68  41                 	db	65	;'A'
  1372  00FF69  50                 	db	80	;'P'
  1373  00FF6A  42                 	db	66	;'B'
  1374  00FF6B  52                 	db	82	;'R'
  1375  00FF6C  3D                 	db	61	;'='
  1376  00FF6D  32                 	db	50	;'2'
  1377  00FF6E  2C                 	db	44
  1378  00FF6F  31                 	db	49	;'1'
  1379  00FF70  0D                 	db	13
  1380  00FF71  00                 	db	0
  1381  00FF72                     STR_13:
  1382  00FF72  41                 	db	65	;'A'
  1383  00FF73  54                 	db	84	;'T'
  1384  00FF74  2B                 	db	43
  1385  00FF75  48                 	db	72	;'H'
  1386  00FF76  54                 	db	84	;'T'
  1387  00FF77  54                 	db	84	;'T'
  1388  00FF78  50                 	db	80	;'P'
  1389  00FF79  53                 	db	83	;'S'
  1390  00FF7A  53                 	db	83	;'S'
  1391  00FF7B  4C                 	db	76	;'L'
  1392  00FF7C  3D                 	db	61	;'='
  1393  00FF7D  31                 	db	49	;'1'
  1394  00FF7E  0D                 	db	13
  1395  00FF7F  00                 	db	0
  1396  00FF80                     STR_2:
  1397  00FF80  41                 	db	65	;'A'
  1398  00FF81  54                 	db	84	;'T'
  1399  00FF82  2B                 	db	43
  1400  00FF83  49                 	db	73	;'I'
  1401  00FF84  50                 	db	80	;'P'
  1402  00FF85  52                 	db	82	;'R'
  1403  00FF86  3D                 	db	61	;'='
  1404  00FF87  39                 	db	57	;'9'
  1405  00FF88  36                 	db	54	;'6'
  1406  00FF89  30                 	db	48	;'0'
  1407  00FF8A  30                 	db	48	;'0'
  1408  00FF8B  0D                 	db	13
  1409  00FF8C  0A                 	db	10
  1410  00FF8D  00                 	db	0
  1411  00FF8E                     STR_17:
  1412  00FF8E  41                 	db	65	;'A'
  1413  00FF8F  54                 	db	84	;'T'
  1414  00FF90  2B                 	db	43
  1415  00FF91  48                 	db	72	;'H'
  1416  00FF92  54                 	db	84	;'T'
  1417  00FF93  54                 	db	84	;'T'
  1418  00FF94  50                 	db	80	;'P'
  1419  00FF95  52                 	db	82	;'R'
  1420  00FF96  45                 	db	69	;'E'
  1421  00FF97  41                 	db	65	;'A'
  1422  00FF98  44                 	db	68	;'D'
  1423  00FF99  0D                 	db	13
  1424  00FF9A  00                 	db	0
  1425  00FF9B                     STR_18:
  1426  00FF9B  41                 	db	65	;'A'
  1427  00FF9C  54                 	db	84	;'T'
  1428  00FF9D  2B                 	db	43
  1429  00FF9E  48                 	db	72	;'H'
  1430  00FF9F  54                 	db	84	;'T'
  1431  00FFA0  54                 	db	84	;'T'
  1432  00FFA1  50                 	db	80	;'P'
  1433  00FFA2  54                 	db	84	;'T'
  1434  00FFA3  45                 	db	69	;'E'
  1435  00FFA4  52                 	db	82	;'R'
  1436  00FFA5  4D                 	db	77	;'M'
  1437  00FFA6  0D                 	db	13
  1438  00FFA7  00                 	db	0
  1439  00FFA8                     STR_12:
  1440  00FFA8  41                 	db	65	;'A'
  1441  00FFA9  54                 	db	84	;'T'
  1442  00FFAA  2B                 	db	43
  1443  00FFAB  48                 	db	72	;'H'
  1444  00FFAC  54                 	db	84	;'T'
  1445  00FFAD  54                 	db	84	;'T'
  1446  00FFAE  50                 	db	80	;'P'
  1447  00FFAF  49                 	db	73	;'I'
  1448  00FFB0  4E                 	db	78	;'N'
  1449  00FFB1  49                 	db	73	;'I'
  1450  00FFB2  54                 	db	84	;'T'
  1451  00FFB3  0D                 	db	13
  1452  00FFB4  00                 	db	0
  1453  00FFB5                     STR_28:
  1454  00FFB5  4D                 	db	77	;'M'
  1455  00FFB6  61                 	db	97	;'a'
  1456  00FFB7  72                 	db	114	;'r'
  1457  00FFB8  20                 	db	32
  1458  00FFB9  31                 	db	49	;'1'
  1459  00FFBA  33                 	db	51	;'3'
  1460  00FFBB  20                 	db	32
  1461  00FFBC  32                 	db	50	;'2'
  1462  00FFBD  30                 	db	48	;'0'
  1463  00FFBE  32                 	db	50	;'2'
  1464  00FFBF  32                 	db	50	;'2'
  1465  00FFC0  00                 	db	0
  1466  00FFC1                     STR_4:
  1467  00FFC1  41                 	db	65	;'A'
  1468  00FFC2  54                 	db	84	;'T'
  1469  00FFC3  2B                 	db	43
  1470  00FFC4  43                 	db	67	;'C'
  1471  00FFC5  4D                 	db	77	;'M'
  1472  00FFC6  47                 	db	71	;'G'
  1473  00FFC7  52                 	db	82	;'R'
  1474  00FFC8  3D                 	db	61	;'='
  1475  00FFC9  31                 	db	49	;'1'
  1476  00FFCA  0D                 	db	13
  1477  00FFCB  0A                 	db	10
  1478  00FFCC  00                 	db	0
  1479  00FFCD                     STR_5:
  1480  00FFCD  41                 	db	65	;'A'
  1481  00FFCE  54                 	db	84	;'T'
  1482  00FFCF  2B                 	db	43
  1483  00FFD0  43                 	db	67	;'C'
  1484  00FFD1  4D                 	db	77	;'M'
  1485  00FFD2  47                 	db	71	;'G'
  1486  00FFD3  53                 	db	83	;'S'
  1487  00FFD4  3D                 	db	61	;'='
  1488  00FFD5  22                 	db	34
  1489  00FFD6  00                 	db	0
  1490  00FFD7                     STR_31:
  1491  00FFD7  28                 	db	40
  1492  00FFD8  6E                 	db	110	;'n'
  1493  00FFD9  75                 	db	117	;'u'
  1494  00FFDA  6C                 	db	108	;'l'
  1495  00FFDB  6C                 	db	108	;'l'
  1496  00FFDC  29                 	db	41
  1497  00FFDD  00                 	db	0
  1498  00FFDE                     STR_3:
  1499  00FFDE  41                 	db	65	;'A'
  1500  00FFDF  54                 	db	84	;'T'
  1501  00FFE0  45                 	db	69	;'E'
  1502  00FFE1  30                 	db	48	;'0'
  1503  00FFE2  0D                 	db	13
  1504  00FFE3  0A                 	db	10
  1505  00FFE4  00                 	db	0
  1506  00FFE5                     STR_1:
  1507  00FFE5  41                 	db	65	;'A'
  1508  00FFE6  54                 	db	84	;'T'
  1509  00FFE7  0D                 	db	13
  1510  00FFE8  0A                 	db	10
  1511  00FFE9  00                 	db	0
  1512  00FFEA  41                 	db	65	;'A'
  1513  00FFEB  54                 	db	84	;'T'
  1514  00FFEC  41                 	db	65	;'A'
  1515  00FFED  0D                 	db	13
  1516  00FFEE  00                 	db	0
  1517  00FFEF  41                 	db	65	;'A'
  1518  00FFF0  54                 	db	84	;'T'
  1519  00FFF1  48                 	db	72	;'H'
  1520  00FFF2  0D                 	db	13
  1521  00FFF3  00                 	db	0
  1522  00FFF4                     STR_24:
  1523  00FFF4  2E                 	db	46
  1524  00FFF5  00                 	db	0
  1525  0000                     
  1526                           ; #config settings
  1527  00FFF6  00                 	db	0	; dummy byte at the end
  1528  0000                     
  1529                           	psect	cinit
  1530  0027F0                     __pcinit:
  1531                           	opt stack 0
  1532  0027F0                     start_initialization:
  1533                           	opt stack 0
  1534  0027F0                     __initialization:
  1535                           	opt stack 0
  1536                           
  1537                           ; Initialize objects allocated to BANK5 (80 bytes)
  1538                           ; load TBLPTR registers with __pidataBANK5
  1539  0027F0  0EC2               	movlw	low __pidataBANK5
  1540  0027F2  6EF6               	movwf	tblptrl,c
  1541  0027F4  0E54               	movlw	high __pidataBANK5
  1542  0027F6  6EF7               	movwf	tblptrh,c
  1543  0027F8  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1544  0027FA  6EF8               	movwf	tblptru,c
  1545  0027FC  EE05  F090         	lfsr	0,__pdataBANK5
  1546  002800  EE10 F050          	lfsr	1,80
  1547  002804                     copy_data0:
  1548  002804  0009               	tblrd		*+
  1549  002806  CFF5 FFEE          	movff	tablat,postinc0
  1550  00280A  50E5               	movf	postdec1,w,c
  1551  00280C  50E1               	movf	fsr1l,w,c
  1552  00280E  E1FA               	bnz	copy_data0
  1553                           
  1554                           ; Initialize objects allocated to BANK3 (66 bytes)
  1555                           ; load TBLPTR registers with __pidataBANK3
  1556  002810  0E78               	movlw	low __pidataBANK3
  1557  002812  6EF6               	movwf	tblptrl,c
  1558  002814  0E58               	movlw	high __pidataBANK3
  1559  002816  6EF7               	movwf	tblptrh,c
  1560  002818  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1561  00281A  6EF8               	movwf	tblptru,c
  1562  00281C  EE03  F0BA         	lfsr	0,__pdataBANK3
  1563  002820  EE10 F042          	lfsr	1,66
  1564  002824                     copy_data1:
  1565  002824  0009               	tblrd		*+
  1566  002826  CFF5 FFEE          	movff	tablat,postinc0
  1567  00282A  50E5               	movf	postdec1,w,c
  1568  00282C  50E1               	movf	fsr1l,w,c
  1569  00282E  E1FA               	bnz	copy_data1
  1570                           
  1571                           ; Initialize objects allocated to BANK2 (14 bytes)
  1572                           ; load TBLPTR registers with __pidataBANK2
  1573  002830  0E1C               	movlw	low __pidataBANK2
  1574  002832  6EF6               	movwf	tblptrl,c
  1575  002834  0E61               	movlw	high __pidataBANK2
  1576  002836  6EF7               	movwf	tblptrh,c
  1577  002838  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1578  00283A  6EF8               	movwf	tblptru,c
  1579  00283C  EE02  F0F2         	lfsr	0,__pdataBANK2
  1580  002840  EE10 F00E          	lfsr	1,14
  1581  002844                     copy_data2:
  1582  002844  0009               	tblrd		*+
  1583  002846  CFF5 FFEE          	movff	tablat,postinc0
  1584  00284A  50E5               	movf	postdec1,w,c
  1585  00284C  50E1               	movf	fsr1l,w,c
  1586  00284E  E1FA               	bnz	copy_data2
  1587                           
  1588                           ; Initialize objects allocated to BANK1 (1 bytes)
  1589                           ; load TBLPTR registers with __pidataBANK1
  1590  002850  0EA6               	movlw	low __pidataBANK1
  1591  002852  6EF6               	movwf	tblptrl,c
  1592  002854  0E61               	movlw	high __pidataBANK1
  1593  002856  6EF7               	movwf	tblptrh,c
  1594  002858  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1595  00285A  6EF8               	movwf	tblptru,c
  1596  00285C  0009               	tblrd		*+	;fetch initializer
  1597  00285E  CFF5 F1FF          	movff	tablat,__pdataBANK1
  1598                           
  1599                           ; Initialize objects allocated to BANK4 (23 bytes)
  1600                           ; load TBLPTR registers with __pidataBANK4
  1601  002862  0E24               	movlw	low __pidataBANK4
  1602  002864  6EF6               	movwf	tblptrl,c
  1603  002866  0E60               	movlw	high __pidataBANK4
  1604  002868  6EF7               	movwf	tblptrh,c
  1605  00286A  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1606  00286C  6EF8               	movwf	tblptru,c
  1607  00286E  EE04  F0E2         	lfsr	0,__pdataBANK4
  1608  002872  EE10 F017          	lfsr	1,23
  1609  002876                     copy_data3:
  1610  002876  0009               	tblrd		*+
  1611  002878  CFF5 FFEE          	movff	tablat,postinc0
  1612  00287C  50E5               	movf	postdec1,w,c
  1613  00287E  50E1               	movf	fsr1l,w,c
  1614  002880  E1FA               	bnz	copy_data3
  1615                           
  1616                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1617  002882  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1618  002886  EE13 F020          	lfsr	1,800
  1619  00288A                     clear_0:
  1620  00288A  6AEE               	clrf	postinc0,c
  1621  00288C  50E5               	movf	postdec1,w,c
  1622  00288E  50E1               	movf	fsr1l,w,c
  1623  002890  E1FC               	bnz	clear_0
  1624  002892  50E2               	movf	fsr1h,w,c
  1625  002894  E1FA               	bnz	clear_0
  1626                           
  1627                           ; Clear objects allocated to BANK9 (200 bytes)
  1628  002896  EE09  F000         	lfsr	0,__pbssBANK9
  1629  00289A  0EC8               	movlw	200
  1630  00289C                     clear_1:
  1631  00289C  6AEE               	clrf	postinc0,c
  1632  00289E  06E8               	decf	wreg,f,c
  1633  0028A0  E1FD               	bnz	clear_1
  1634                           
  1635                           ; Clear objects allocated to BANK8 (200 bytes)
  1636  0028A2  EE08  F000         	lfsr	0,__pbssBANK8
  1637  0028A6  0EC8               	movlw	200
  1638  0028A8                     clear_2:
  1639  0028A8  6AEE               	clrf	postinc0,c
  1640  0028AA  06E8               	decf	wreg,f,c
  1641  0028AC  E1FD               	bnz	clear_2
  1642                           
  1643                           ; Clear objects allocated to BANK7 (246 bytes)
  1644  0028AE  EE07  F000         	lfsr	0,__pbssBANK7
  1645  0028B2  0EF6               	movlw	246
  1646  0028B4                     clear_3:
  1647  0028B4  6AEE               	clrf	postinc0,c
  1648  0028B6  06E8               	decf	wreg,f,c
  1649  0028B8  E1FD               	bnz	clear_3
  1650                           
  1651                           ; Clear objects allocated to BANK6 (220 bytes)
  1652  0028BA  EE06  F000         	lfsr	0,__pbssBANK6
  1653  0028BE  0EDC               	movlw	220
  1654  0028C0                     clear_4:
  1655  0028C0  6AEE               	clrf	postinc0,c
  1656  0028C2  06E8               	decf	wreg,f,c
  1657  0028C4  E1FD               	bnz	clear_4
  1658                           
  1659                           ; Clear objects allocated to BANK5 (144 bytes)
  1660  0028C6  EE05  F000         	lfsr	0,__pbssBANK5
  1661  0028CA  0E90               	movlw	144
  1662  0028CC                     clear_5:
  1663  0028CC  6AEE               	clrf	postinc0,c
  1664  0028CE  06E8               	decf	wreg,f,c
  1665  0028D0  E1FD               	bnz	clear_5
  1666                           
  1667                           ; Clear objects allocated to BANK3 (186 bytes)
  1668  0028D2  EE03  F000         	lfsr	0,__pbssBANK3
  1669  0028D6  0EBA               	movlw	186
  1670  0028D8                     clear_6:
  1671  0028D8  6AEE               	clrf	postinc0,c
  1672  0028DA  06E8               	decf	wreg,f,c
  1673  0028DC  E1FD               	bnz	clear_6
  1674                           
  1675                           ; Clear objects allocated to BANK2 (42 bytes)
  1676  0028DE  EE02  F0C8         	lfsr	0,__pbssBANK2
  1677  0028E2  0E2A               	movlw	42
  1678  0028E4                     clear_7:
  1679  0028E4  6AEE               	clrf	postinc0,c
  1680  0028E6  06E8               	decf	wreg,f,c
  1681  0028E8  E1FD               	bnz	clear_7
  1682                           
  1683                           ; Clear objects allocated to BANK1 (54 bytes)
  1684  0028EA  EE01  F0C9         	lfsr	0,__pbssBANK1
  1685  0028EE  0E36               	movlw	54
  1686  0028F0                     clear_8:
  1687  0028F0  6AEE               	clrf	postinc0,c
  1688  0028F2  06E8               	decf	wreg,f,c
  1689  0028F4  E1FD               	bnz	clear_8
  1690                           
  1691                           ; Clear objects allocated to BANK4 (162 bytes)
  1692  0028F6  EE04  F040         	lfsr	0,__pbssBANK4
  1693  0028FA  0EA2               	movlw	162
  1694  0028FC                     clear_9:
  1695  0028FC  6AEE               	clrf	postinc0,c
  1696  0028FE  06E8               	decf	wreg,f,c
  1697  002900  E1FD               	bnz	clear_9
  1698                           
  1699                           ; Clear objects allocated to BANK0 (41 bytes)
  1700  002902  EE00  F0B8         	lfsr	0,__pbssBANK0
  1701  002906  0E29               	movlw	41
  1702  002908                     clear_10:
  1703  002908  6AEE               	clrf	postinc0,c
  1704  00290A  06E8               	decf	wreg,f,c
  1705  00290C  E1FD               	bnz	clear_10
  1706                           
  1707                           ; Clear objects allocated to COMRAM (31 bytes)
  1708  00290E  EE00  F023         	lfsr	0,__pbssCOMRAM
  1709  002912  0E1F               	movlw	31
  1710  002914                     clear_11:
  1711  002914  6AEE               	clrf	postinc0,c
  1712  002916  06E8               	decf	wreg,f,c
  1713  002918  E1FD               	bnz	clear_11
  1714  00291A                     end_of_initialization:
  1715                           	opt stack 0
  1716  00291A                     __end_of__initialization:
  1717                           	opt stack 0
  1718  00291A  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1719  00291C  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1720  00291E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1721  002920  6EF8               	movwf	tblptru,c
  1722  002922  0100               	movlb	0
  1723  002924  EF9C  F030         	goto	_main	;jump to C main() function
  1724                           tblptru	equ	0xFF8
  1725                           tblptrh	equ	0xFF7
  1726                           tblptrl	equ	0xFF6
  1727                           tablat	equ	0xFF5
  1728                           postinc0	equ	0xFEE
  1729                           wreg	equ	0xFE8
  1730                           postdec1	equ	0xFE5
  1731                           fsr1h	equ	0xFE2
  1732                           fsr1l	equ	0xFE1
  1733                           
  1734                           	psect	bssCOMRAM
  1735  000023                     __pbssCOMRAM:
  1736                           	opt stack 0
  1737  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1738                           	opt stack 0
  1739  000023                     	ds	2
  1740  000025                     _USBDeferOUTDataStagePackets:
  1741                           	opt stack 0
  1742  000025                     	ds	1
  1743  000026                     _USBDeferINDataStagePackets:
  1744                           	opt stack 0
  1745  000026                     	ds	1
  1746  000027                     _USBStatusStageEnabledFlag2:
  1747                           	opt stack 0
  1748  000027                     	ds	1
  1749  000028                     _USBStatusStageEnabledFlag1:
  1750                           	opt stack 0
  1751  000028                     	ds	1
  1752  000029                     _USBStatusStageTimeoutCounter:
  1753                           	opt stack 0
  1754  000029                     	ds	1
  1755  00002A                     InitGprsNetwork@GprsNetInitNextState:
  1756                           	opt stack 0
  1757  00002A                     	ds	1
  1758  00002B                     MdmCntSm@MdmCntState:
  1759                           	opt stack 0
  1760  00002B                     	ds	1
  1761  00002C                     RiSm@MdmDrvState:
  1762                           	opt stack 0
  1763  00002C                     	ds	1
  1764  00002D                     _Mmd_RingIndicator:
  1765                           	opt stack 0
  1766  00002D                     	ds	1
  1767  00002E                     I2c_ReadData@ReadStatus:
  1768                           	opt stack 0
  1769  00002E                     	ds	1
  1770  00002F                     I2c_ReadData@TentativeCounter:
  1771                           	opt stack 0
  1772  00002F                     	ds	1
  1773  000030                     I2c_ReadData@DataCounter:
  1774                           	opt stack 0
  1775  000030                     	ds	1
  1776  000031                     I2c_ReadData@I2cReadState:
  1777                           	opt stack 0
  1778  000031                     	ds	1
  1779  000032                     I2c_WriteData@WriteStatus:
  1780                           	opt stack 0
  1781  000032                     	ds	1
  1782  000033                     I2c_WriteData@TentativeCounter:
  1783                           	opt stack 0
  1784  000033                     	ds	1
  1785  000034                     I2c_WriteData@I2cNextState:
  1786                           	opt stack 0
  1787  000034                     	ds	1
  1788  000035                     I2c_WriteData@I2cWriteState:
  1789                           	opt stack 0
  1790  000035                     	ds	1
  1791  000036                     _I2cReadDataEvt:
  1792                           	opt stack 0
  1793  000036                     	ds	1
  1794  000037                     _InitNetwork:
  1795                           	opt stack 0
  1796  000037                     	ds	1
  1797  000038                     _SmsTxtReady:
  1798                           	opt stack 0
  1799  000038                     	ds	1
  1800  000039                     _GetSmsText:
  1801                           	opt stack 0
  1802  000039                     	ds	1
  1803  00003A                     _NewStringMdmTerminal:
  1804                           	opt stack 0
  1805  00003A                     	ds	1
  1806  00003B                     _NewMdmEvtParserRequest:
  1807                           	opt stack 0
  1808  00003B                     	ds	1
  1809  00003C                     _NewStringReceived:
  1810                           	opt stack 0
  1811  00003C                     	ds	1
  1812  00003D                     _MdmResetRequest:
  1813                           	opt stack 0
  1814  00003D                     	ds	1
  1815  00003E                     _CallClosedEvent:
  1816                           	opt stack 0
  1817  00003E                     	ds	1
  1818  00003F                     _IncomingCallEvent:
  1819                           	opt stack 0
  1820  00003F                     	ds	1
  1821  000040                     _NewSmsEvent:
  1822                           	opt stack 0
  1823  000040                     	ds	1
  1824  000041                     _ActivateRiDetection:
  1825                           	opt stack 0
  1826  000041                     	ds	1
  1827                           tblptru	equ	0xFF8
  1828                           tblptrh	equ	0xFF7
  1829                           tblptrl	equ	0xFF6
  1830                           tablat	equ	0xFF5
  1831                           postinc0	equ	0xFEE
  1832                           wreg	equ	0xFE8
  1833                           postdec1	equ	0xFE5
  1834                           fsr1h	equ	0xFE2
  1835                           fsr1l	equ	0xFE1
  1836                           
  1837                           	psect	bssBANK0
  1838  0000B8                     __pbssBANK0:
  1839                           	opt stack 0
  1840  0000B8                     _inPipes:
  1841                           	opt stack 0
  1842  0000B8                     	ds	6
  1843  0000BE                     _pBDTEntryIn:
  1844                           	opt stack 0
  1845  0000BE                     	ds	6
  1846  0000C4                     _CDCDataOutHandle:
  1847                           	opt stack 0
  1848  0000C4                     	ds	2
  1849  0000C6                     _pBDTEntryEP0OutNext:
  1850                           	opt stack 0
  1851  0000C6                     	ds	2
  1852  0000C8                     _pBDTEntryEP0OutCurrent:
  1853                           	opt stack 0
  1854  0000C8                     	ds	2
  1855  0000CA                     _RxLen:
  1856                           	opt stack 0
  1857  0000CA                     	ds	2
  1858  0000CC                     _cdc_tx_len:
  1859                           	opt stack 0
  1860  0000CC                     	ds	1
  1861  0000CD                     _cdc_trf_state:
  1862                           	opt stack 0
  1863  0000CD                     	ds	1
  1864  0000CE                     _cdc_rx_len:
  1865                           	opt stack 0
  1866  0000CE                     	ds	1
  1867  0000CF                     _USBDeferStatusStagePacket:
  1868                           	opt stack 0
  1869  0000CF                     	ds	1
  1870  0000D0                     _endpoint_number:
  1871                           	opt stack 0
  1872  0000D0                     	ds	1
  1873  0000D1                     _controlTransferState:
  1874                           	opt stack 0
  1875  0000D1                     	ds	1
  1876  0000D2                     _shortPacketStatus:
  1877                           	opt stack 0
  1878  0000D2                     	ds	1
  1879  0000D3                     _USBDeviceState:
  1880                           	opt stack 0
  1881  0000D3                     	ds	1
  1882  0000D4                     _I2cComSts:
  1883                           	opt stack 0
  1884  0000D4                     	ds	1
  1885  0000D5                     HttpGetMethod@GetMethodNextState:
  1886                           	opt stack 0
  1887  0000D5                     	ds	1
  1888  0000D6                     _MdmStatus:
  1889                           	opt stack 0
  1890  0000D6                     	ds	1
  1891  0000D7                     _PhoneNumbLen:
  1892                           	opt stack 0
  1893  0000D7                     	ds	1
  1894  0000D8                     _SmsLen:
  1895                           	opt stack 0
  1896  0000D8                     	ds	1
  1897  0000D9                     _SystemState:
  1898                           	opt stack 0
  1899  0000D9                     	ds	1
  1900  0000DA                     _USTATcopy:
  1901                           	opt stack 0
  1902  0000DA                     	ds	1
  1903  0000DB                     _USBActiveConfiguration:
  1904                           	opt stack 0
  1905  0000DB                     	ds	1
  1906  0000DC                     _I2cWriteDataEvt:
  1907                           	opt stack 0
  1908  0000DC                     	ds	1
  1909  0000DD                     _SmsEvent:
  1910                           	opt stack 0
  1911  0000DD                     	ds	1
  1912  0000DE                     _RingEvent:
  1913                           	opt stack 0
  1914  0000DE                     	ds	1
  1915  0000DF                     _SendSmsEvent:
  1916                           	opt stack 0
  1917  0000DF                     	ds	1
  1918  0000E0                     _MdmOnOffPulseRequest:
  1919                           	opt stack 0
  1920  0000E0                     	ds	1
  1921                           tblptru	equ	0xFF8
  1922                           tblptrh	equ	0xFF7
  1923                           tblptrl	equ	0xFF6
  1924                           tablat	equ	0xFF5
  1925                           postinc0	equ	0xFEE
  1926                           wreg	equ	0xFE8
  1927                           postdec1	equ	0xFE5
  1928                           fsr1h	equ	0xFE2
  1929                           fsr1l	equ	0xFE1
  1930                           
  1931                           	psect	bssBANK1
  1932  0001C9                     __pbssBANK1:
  1933                           	opt stack 0
  1934  0001C9                     _outPipes:
  1935                           	opt stack 0
  1936  0001C9                     	ds	8
  1937  0001D1                     _CDCDataInHandle:
  1938                           	opt stack 0
  1939  0001D1                     	ds	2
  1940  0001D3                     MyApp_Task@blinkSeconds:
  1941                           	opt stack 0
  1942  0001D3                     	ds	1
  1943  0001D4                     initGprsModem@initMdm:
  1944                           	opt stack 0
  1945  0001D4                     	ds	1
  1946  0001D5                     initGprsModem@isInitialized:
  1947                           	opt stack 0
  1948  0001D5                     	ds	1
  1949  0001D6                     	ds	1
  1950  0001D7                     	ds	1
  1951  0001D8                     GsmGprsTerminal@SMS:
  1952                           	opt stack 0
  1953  0001D8                     	ds	1
  1954  0001D9                     	ds	1
  1955  0001DA                     _control_signal_bitmap:
  1956                           	opt stack 0
  1957  0001DA                     	ds	1
  1958  0001DB                     _cdc_mem_type:
  1959                           	opt stack 0
  1960  0001DB                     	ds	1
  1961  0001DC                     _USBTicksSinceSuspendEnd:
  1962                           	opt stack 0
  1963  0001DC                     	ds	1
  1964  0001DD                     _BothEP0OutUOWNsSet:
  1965                           	opt stack 0
  1966  0001DD                     	ds	1
  1967  0001DE                     _USBBusIsSuspended:
  1968                           	opt stack 0
  1969  0001DE                     	ds	1
  1970  0001DF                     _RemoteWakeup:
  1971                           	opt stack 0
  1972  0001DF                     	ds	1
  1973  0001E0                     I2cSlv_QueryI2cData@Ret:
  1974                           	opt stack 0
  1975  0001E0                     	ds	1
  1976  0001E1                     I2cSlv_QueryI2cData@I2cOpState:
  1977                           	opt stack 0
  1978  0001E1                     	ds	1
  1979  0001E2                     I2cSendMsgSm@I2cComState:
  1980                           	opt stack 0
  1981  0001E2                     	ds	1
  1982  0001E3                     _I2cBusStatus:
  1983                           	opt stack 0
  1984  0001E3                     	ds	1
  1985  0001E4                     HttpGetMethod@GetMOutSts:
  1986                           	opt stack 0
  1987  0001E4                     	ds	1
  1988  0001E5                     HttpGetMethod@GetMethodState:
  1989                           	opt stack 0
  1990  0001E5                     	ds	1
  1991  0001E6                     InitGprsNetwork@GprsNetInitState:
  1992                           	opt stack 0
  1993  0001E6                     	ds	1
  1994  0001E7                     _PostMethod:
  1995                           	opt stack 0
  1996  0001E7                     	ds	1
  1997  0001E8                     _HttpGetMethodSts:
  1998                           	opt stack 0
  1999  0001E8                     	ds	1
  2000  0001E9                     _GprsNetworkSts:
  2001                           	opt stack 0
  2002  0001E9                     	ds	1
  2003  0001EA                     _ApnLenLocal:
  2004                           	opt stack 0
  2005  0001EA                     	ds	1
  2006  0001EB                     SendSmsSm@SendSms_NextState:
  2007                           	opt stack 0
  2008  0001EB                     	ds	1
  2009  0001EC                     SendSmsSm@SendSms_State:
  2010                           	opt stack 0
  2011  0001EC                     	ds	1
  2012  0001ED                     GetSmsSm@GetSmsState:
  2013                           	opt stack 0
  2014  0001ED                     	ds	1
  2015  0001EE                     ConfigureModem@NextState:
  2016                           	opt stack 0
  2017  0001EE                     	ds	1
  2018  0001EF                     ConfigureModem@MdmConfigState:
  2019                           	opt stack 0
  2020  0001EF                     	ds	1
  2021  0001F0                     TurnOnModem@TurnOnMdmState:
  2022                           	opt stack 0
  2023  0001F0                     	ds	1
  2024  0001F1                     CheckModem@CheckMdmSts:
  2025                           	opt stack 0
  2026  0001F1                     	ds	1
  2027  0001F2                     _ComChecCompleted:
  2028                           	opt stack 0
  2029  0001F2                     	ds	1
  2030  0001F3                     Uart_Uart1RxIsr@UartRxData:
  2031                           	opt stack 0
  2032  0001F3                     	ds	1
  2033  0001F4                     Uart_MdmGsmGprsReadService@RxState:
  2034                           	opt stack 0
  2035  0001F4                     	ds	1
  2036  0001F5                     _AlarmEvent:
  2037                           	opt stack 0
  2038  0001F5                     	ds	1
  2039  0001F6                     _Led3OutSts:
  2040                           	opt stack 0
  2041  0001F6                     	ds	1
  2042  0001F7                     _Led3Sts:
  2043                           	opt stack 0
  2044  0001F7                     	ds	1
  2045  0001F8                     _Led2OutSts:
  2046                           	opt stack 0
  2047  0001F8                     	ds	1
  2048  0001F9                     _Led2Sts:
  2049                           	opt stack 0
  2050  0001F9                     	ds	1
  2051  0001FA                     _Led1OutSts:
  2052                           	opt stack 0
  2053  0001FA                     	ds	1
  2054  0001FB                     _Led1Sts:
  2055                           	opt stack 0
  2056  0001FB                     	ds	1
  2057  0001FC                     I2cDummyTx@DummyBuffer:
  2058                           	opt stack 0
  2059  0001FC                     	ds	1
  2060  0001FD                     _GetMethod:
  2061                           	opt stack 0
  2062  0001FD                     	ds	1
  2063  0001FE                     _MdmStsReady:
  2064                           	opt stack 0
  2065  0001FE                     	ds	1
  2066                           tblptru	equ	0xFF8
  2067                           tblptrh	equ	0xFF7
  2068                           tblptrl	equ	0xFF6
  2069                           tablat	equ	0xFF5
  2070                           postinc0	equ	0xFEE
  2071                           wreg	equ	0xFE8
  2072                           postdec1	equ	0xFE5
  2073                           fsr1h	equ	0xFE2
  2074                           fsr1l	equ	0xFE1
  2075                           
  2076                           	psect	dataBANK1
  2077  0001FF                     __pdataBANK1:
  2078                           	opt stack 0
  2079  0001FF                     InitGprsNetwork@GprsInitSts:
  2080                           	opt stack 0
  2081  0001FF                     	ds	1
  2082                           tblptru	equ	0xFF8
  2083                           tblptrh	equ	0xFF7
  2084                           tblptrl	equ	0xFF6
  2085                           tablat	equ	0xFF5
  2086                           postinc0	equ	0xFEE
  2087                           wreg	equ	0xFE8
  2088                           postdec1	equ	0xFE5
  2089                           fsr1h	equ	0xFE2
  2090                           fsr1l	equ	0xFE1
  2091                           
  2092                           	psect	bssBANK2
  2093  0002C8                     __pbssBANK2:
  2094                           	opt stack 0
  2095  0002C8                     _pCDCDst:
  2096                           	opt stack 0
  2097  0002C8                     	ds	3
  2098  0002CB                     _pCDCSrc:
  2099                           	opt stack 0
  2100  0002CB                     	ds	3
  2101  0002CE                     _ep_data_out:
  2102                           	opt stack 0
  2103  0002CE                     	ds	3
  2104  0002D1                     _ep_data_in:
  2105                           	opt stack 0
  2106  0002D1                     	ds	3
  2107  0002D4                     _pDst:
  2108                           	opt stack 0
  2109  0002D4                     	ds	2
  2110  0002D6                     MdmCntSm@Counter:
  2111                           	opt stack 0
  2112  0002D6                     	ds	2
  2113  0002D8                     _ExtInt1IsrCallback:
  2114                           	opt stack 0
  2115  0002D8                     	ds	2
  2116  0002DA                     _ExtInt0IsrCallback:
  2117                           	opt stack 0
  2118  0002DA                     	ds	2
  2119  0002DC                     _RtccIsrCallback:
  2120                           	opt stack 0
  2121  0002DC                     	ds	2
  2122  0002DE                     _Tmr4IsrCallback:
  2123                           	opt stack 0
  2124  0002DE                     	ds	2
  2125  0002E0                     _Tmr2IsrCallback:
  2126                           	opt stack 0
  2127  0002E0                     	ds	2
  2128  0002E2                     	ds	1
  2129  0002E3                     	ds	1
  2130  0002E4                     	ds	1
  2131  0002E5                     	ds	1
  2132  0002E6                     	ds	1
  2133  0002E7                     	ds	1
  2134  0002E8                     	ds	1
  2135  0002E9                     	ds	1
  2136  0002EA                     	ds	1
  2137  0002EB                     Term_MainSm@TermMainSmState:
  2138                           	opt stack 0
  2139  0002EB                     	ds	1
  2140  0002EC                     Terminal@FormatOption:
  2141                           	opt stack 0
  2142  0002EC                     	ds	1
  2143  0002ED                     Terminal@SlaveAddr:
  2144                           	opt stack 0
  2145  0002ED                     	ds	1
  2146  0002EE                     Terminal@PackageLen:
  2147                           	opt stack 0
  2148  0002EE                     	ds	1
  2149  0002EF                     Terminal@TermState:
  2150                           	opt stack 0
  2151  0002EF                     	ds	1
  2152  0002F0                     _USBAlternateInterface:
  2153                           	opt stack 0
  2154  0002F0                     	ds	2
  2155                           tblptru	equ	0xFF8
  2156                           tblptrh	equ	0xFF7
  2157                           tblptrl	equ	0xFF6
  2158                           tablat	equ	0xFF5
  2159                           postinc0	equ	0xFEE
  2160                           wreg	equ	0xFE8
  2161                           postdec1	equ	0xFE5
  2162                           fsr1h	equ	0xFE2
  2163                           fsr1l	equ	0xFE1
  2164                           
  2165                           	psect	dataBANK2
  2166  0002F2                     __pdataBANK2:
  2167                           	opt stack 0
  2168  0002F2                     	ds	1
  2169  0002F3                     Terminal@EchoOption:
  2170                           	opt stack 0
  2171  0002F3                     	ds	1
  2172  0002F4                     _MainSystemTimebaseFlag:
  2173                           	opt stack 0
  2174  0002F4                     	ds	1
  2175  0002F5                     _ConnTimeout:
  2176                           	opt stack 0
  2177  0002F5                     	ds	11
  2178                           tblptru	equ	0xFF8
  2179                           tblptrh	equ	0xFF7
  2180                           tblptrl	equ	0xFF6
  2181                           tablat	equ	0xFF5
  2182                           postinc0	equ	0xFEE
  2183                           wreg	equ	0xFE8
  2184                           postdec1	equ	0xFE5
  2185                           fsr1h	equ	0xFE2
  2186                           fsr1l	equ	0xFE1
  2187                           
  2188                           	psect	bssBANK3
  2189  000300                     __pbssBANK3:
  2190                           	opt stack 0
  2191  000300                     _Rtcm_SystemDate:
  2192                           	opt stack 0
  2193  000300                     	ds	8
  2194  000308                     _Rtcm_RtccAlarm:
  2195                           	opt stack 0
  2196  000308                     	ds	6
  2197  00030E                     _pBDTEntryOut:
  2198                           	opt stack 0
  2199  00030E                     	ds	6
  2200  000314                     _BaudRateGen:
  2201                           	opt stack 0
  2202  000314                     	ds	4
  2203  000318                     _USB1msTickCount:
  2204                           	opt stack 0
  2205  000318                     	ds	4
  2206  00031C                     _OsTmr_OsTickCounter:
  2207                           	opt stack 0
  2208  00031C                     	ds	4
  2209  000320                     MyApp_Task@F8998:
  2210                           	opt stack 0
  2211  000320                     	ds	2
  2212  000322                     	ds	2
  2213  000324                     _PhoneNumberLen:
  2214                           	opt stack 0
  2215  000324                     	ds	2
  2216  000326                     _ApnLocal:
  2217                           	opt stack 0
  2218  000326                     	ds	2
  2219  000328                     ConfigureModem@DelayCounter:
  2220                           	opt stack 0
  2221  000328                     	ds	2
  2222  00032A                     ConfigureModem@DelayValueMs:
  2223                           	opt stack 0
  2224  00032A                     	ds	2
  2225  00032C                     TurnOnModem@Counter:
  2226                           	opt stack 0
  2227  00032C                     	ds	2
  2228  00032E                     UpdateSchFlag@InterruptCounter:
  2229                           	opt stack 0
  2230  00032E                     	ds	2
  2231  000330                     RiSm@Counter:
  2232                           	opt stack 0
  2233  000330                     	ds	2
  2234  000332                     _UartConfig:
  2235                           	opt stack 0
  2236  000332                     	ds	21
  2237  000347                     I2cSlv_QueryI2cData@TimeoutTimer:
  2238                           	opt stack 0
  2239  000347                     	ds	11
  2240  000352                     _I2cConfig:
  2241                           	opt stack 0
  2242  000352                     	ds	10
  2243  00035C                     _Led3Blink:
  2244                           	opt stack 0
  2245  00035C                     	ds	9
  2246  000365                     _Led2Blink:
  2247                           	opt stack 0
  2248  000365                     	ds	9
  2249  00036E                     _Led1Blink:
  2250                           	opt stack 0
  2251  00036E                     	ds	9
  2252  000377                     _dummy_encapsulated_cmd_response:
  2253                           	opt stack 0
  2254  000377                     	ds	8
  2255  00037F                     _line_coding:
  2256                           	opt stack 0
  2257  00037F                     	ds	7
  2258  000386                     _Led3Pulse:
  2259                           	opt stack 0
  2260  000386                     	ds	6
  2261  00038C                     _Led2Pulse:
  2262                           	opt stack 0
  2263  00038C                     	ds	6
  2264  000392                     _Led1Pulse:
  2265                           	opt stack 0
  2266  000392                     	ds	6
  2267  000398                     _I2cRxPacket:
  2268                           	opt stack 0
  2269  000398                     	ds	6
  2270  00039E                     _I2cTxPacket:
  2271                           	opt stack 0
  2272  00039E                     	ds	5
  2273  0003A3                     _HttpGetDataLocal:
  2274                           	opt stack 0
  2275  0003A3                     	ds	5
  2276  0003A8                     Terminal@Addr:
  2277                           	opt stack 0
  2278  0003A8                     	ds	4
  2279  0003AC                     Terminal@Len:
  2280                           	opt stack 0
  2281  0003AC                     	ds	4
  2282  0003B0                     _AlCfg:
  2283                           	opt stack 0
  2284  0003B0                     	ds	4
  2285  0003B4                     _RtcConfig:
  2286                           	opt stack 0
  2287  0003B4                     	ds	4
  2288  0003B8                     initGprsModem@modemCounter:
  2289                           	opt stack 0
  2290  0003B8                     	ds	2
  2291                           tblptru	equ	0xFF8
  2292                           tblptrh	equ	0xFF7
  2293                           tblptrl	equ	0xFF6
  2294                           tablat	equ	0xFF5
  2295                           postinc0	equ	0xFEE
  2296                           wreg	equ	0xFE8
  2297                           postdec1	equ	0xFE5
  2298                           fsr1h	equ	0xFE2
  2299                           fsr1l	equ	0xFE1
  2300                           
  2301                           	psect	dataBANK3
  2302  0003BA                     __pdataBANK3:
  2303                           	opt stack 0
  2304  0003BA                     ModemEvtParser@F9089:
  2305                           	opt stack 0
  2306  0003BA                     	ds	5
  2307  0003BF                     ModemEvtParser@F9087:
  2308                           	opt stack 0
  2309  0003BF                     	ds	4
  2310  0003C3                     MyApp_Task@F9008:
  2311                           	opt stack 0
  2312  0003C3                     	ds	3
  2313  0003C6                     MyApp_Task@F8995:
  2314                           	opt stack 0
  2315  0003C6                     	ds	2
  2316  0003C8                     MyApp_Task@F8992:
  2317                           	opt stack 0
  2318  0003C8                     	ds	2
  2319  0003CA                     	ds	2
  2320  0003CC                     triggerRelay@F8967:
  2321                           	opt stack 0
  2322  0003CC                     	ds	2
  2323  0003CE                     Term_MainSm@TermDelay:
  2324                           	opt stack 0
  2325  0003CE                     	ds	11
  2326  0003D9                     _ConnWait:
  2327                           	opt stack 0
  2328  0003D9                     	ds	11
  2329  0003E4                     SendSmsSm@SwTimer:
  2330                           	opt stack 0
  2331  0003E4                     	ds	11
  2332  0003EF                     CheckModem@Timeout:
  2333                           	opt stack 0
  2334  0003EF                     	ds	11
  2335  0003FA                     MyApp_Task@blickTicks:
  2336                           	opt stack 0
  2337  0003FA                     	ds	2
  2338                           tblptru	equ	0xFF8
  2339                           tblptrh	equ	0xFF7
  2340                           tblptrl	equ	0xFF6
  2341                           tablat	equ	0xFF5
  2342                           postinc0	equ	0xFEE
  2343                           wreg	equ	0xFE8
  2344                           postdec1	equ	0xFE5
  2345                           fsr1h	equ	0xFE2
  2346                           fsr1l	equ	0xFE1
  2347                           
  2348                           	psect	bssBANK4
  2349  000440                     __pbssBANK4:
  2350                           	opt stack 0
  2351  000440                     	ds	10
  2352  00044A                     _cdc_notice:
  2353                           	opt stack 0
  2354  00044A                     	ds	10
  2355  000454                     Term_MainSm@Data:
  2356                           	opt stack 0
  2357  000454                     	ds	50
  2358  000486                     Terminal@TermRxBuffer:
  2359                           	opt stack 0
  2360  000486                     	ds	50
  2361  0004B8                     _PhoneNumber:
  2362                           	opt stack 0
  2363  0004B8                     	ds	20
  2364  0004CC                     Terminal@SwTimer:
  2365                           	opt stack 0
  2366  0004CC                     	ds	11
  2367  0004D7                     I2cSlv_QueryI2cData@QueryTimer:
  2368                           	opt stack 0
  2369  0004D7                     	ds	11
  2370                           tblptru	equ	0xFF8
  2371                           tblptrh	equ	0xFF7
  2372                           tblptrl	equ	0xFF6
  2373                           tablat	equ	0xFF5
  2374                           postinc0	equ	0xFEE
  2375                           wreg	equ	0xFE8
  2376                           postdec1	equ	0xFE5
  2377                           fsr1h	equ	0xFE2
  2378                           fsr1l	equ	0xFE1
  2379                           
  2380                           	psect	dataBANK4
  2381  0004E2                     __pdataBANK4:
  2382                           	opt stack 0
  2383  0004E2                     MyApp_Task@F9001:
  2384                           	opt stack 0
  2385  0004E2                     	ds	13
  2386  0004EF                     ModemEvtParser@F9091:
  2387                           	opt stack 0
  2388  0004EF                     	ds	10
  2389                           tblptru	equ	0xFF8
  2390                           tblptrh	equ	0xFF7
  2391                           tblptrl	equ	0xFF6
  2392                           tablat	equ	0xFF5
  2393                           postinc0	equ	0xFEE
  2394                           wreg	equ	0xFE8
  2395                           postdec1	equ	0xFE5
  2396                           fsr1h	equ	0xFE2
  2397                           fsr1l	equ	0xFE1
  2398                           
  2399                           	psect	bssBANK5
  2400  000500                     __pbssBANK5:
  2401                           	opt stack 0
  2402  000500                     Terminal@Payload:
  2403                           	opt stack 0
  2404  000500                     	ds	80
  2405  000550                     _cdc_data_rx:
  2406                           	opt stack 0
  2407  000550                     	ds	64
  2408                           tblptru	equ	0xFF8
  2409                           tblptrh	equ	0xFF7
  2410                           tblptrl	equ	0xFF6
  2411                           tablat	equ	0xFF5
  2412                           postinc0	equ	0xFEE
  2413                           wreg	equ	0xFE8
  2414                           postdec1	equ	0xFE5
  2415                           fsr1h	equ	0xFE2
  2416                           fsr1l	equ	0xFE1
  2417                           
  2418                           	psect	dataBANK5
  2419  000590                     __pdataBANK5:
  2420                           	opt stack 0
  2421  000590                     _TaskTable:
  2422                           	opt stack 0
  2423  000590                     	ds	80
  2424                           tblptru	equ	0xFF8
  2425                           tblptrh	equ	0xFF7
  2426                           tblptrl	equ	0xFF6
  2427                           tablat	equ	0xFF5
  2428                           postinc0	equ	0xFEE
  2429                           wreg	equ	0xFE8
  2430                           postdec1	equ	0xFE5
  2431                           fsr1h	equ	0xFE2
  2432                           fsr1l	equ	0xFE1
  2433                           
  2434                           	psect	bssBANK6
  2435  000600                     __pbssBANK6:
  2436                           	opt stack 0
  2437  000600                     _OsAlarms:
  2438                           	opt stack 0
  2439  000600                     	ds	220
  2440                           tblptru	equ	0xFF8
  2441                           tblptrh	equ	0xFF7
  2442                           tblptrl	equ	0xFF6
  2443                           tablat	equ	0xFF5
  2444                           postinc0	equ	0xFEE
  2445                           wreg	equ	0xFE8
  2446                           postdec1	equ	0xFE5
  2447                           fsr1h	equ	0xFE2
  2448                           fsr1l	equ	0xFE1
  2449                           
  2450                           	psect	bssBANK7
  2451  000700                     __pbssBANK7:
  2452                           	opt stack 0
  2453  000700                     _Mdm_SmsRx:
  2454                           	opt stack 0
  2455  000700                     	ds	132
  2456  000784                     _cdc_data_tx:
  2457                           	opt stack 0
  2458  000784                     	ds	64
  2459  0007C4                     _MessageText:
  2460                           	opt stack 0
  2461  0007C4                     	ds	50
  2462                           tblptru	equ	0xFF8
  2463                           tblptrh	equ	0xFF7
  2464                           tblptrl	equ	0xFF6
  2465                           tablat	equ	0xFF5
  2466                           postinc0	equ	0xFEE
  2467                           wreg	equ	0xFE8
  2468                           postdec1	equ	0xFE5
  2469                           fsr1h	equ	0xFE2
  2470                           fsr1l	equ	0xFE1
  2471                           
  2472                           	psect	bssBANK8
  2473  000800                     __pbssBANK8:
  2474                           	opt stack 0
  2475  000800                     GsmGprsTerminal@UsbBuffer:
  2476                           	opt stack 0
  2477  000800                     	ds	200
  2478                           tblptru	equ	0xFF8
  2479                           tblptrh	equ	0xFF7
  2480                           tblptrl	equ	0xFF6
  2481                           tablat	equ	0xFF5
  2482                           postinc0	equ	0xFEE
  2483                           wreg	equ	0xFE8
  2484                           postdec1	equ	0xFE5
  2485                           fsr1h	equ	0xFE2
  2486                           fsr1l	equ	0xFE1
  2487                           
  2488                           	psect	bssBANK9
  2489  000900                     __pbssBANK9:
  2490                           	opt stack 0
  2491  000900                     GsmGprsTerminal@UartBuffer:
  2492                           	opt stack 0
  2493  000900                     	ds	200
  2494                           tblptru	equ	0xFF8
  2495                           tblptrh	equ	0xFF7
  2496                           tblptrl	equ	0xFF6
  2497                           tablat	equ	0xFF5
  2498                           postinc0	equ	0xFEE
  2499                           wreg	equ	0xFE8
  2500                           postdec1	equ	0xFE5
  2501                           fsr1h	equ	0xFE2
  2502                           fsr1l	equ	0xFE1
  2503                           
  2504                           	psect	bssBIGRAMl
  2505  000AC8                     __pbssBIGRAMl:
  2506                           	opt stack 0
  2507  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2508                           	opt stack 0
  2509  000AC8                     	ds	400
  2510  000C58                     _RxBuffer:
  2511                           	opt stack 0
  2512  000C58                     	ds	400
  2513                           tblptru	equ	0xFF8
  2514                           tblptrh	equ	0xFF7
  2515                           tblptrl	equ	0xFF6
  2516                           tablat	equ	0xFF5
  2517                           postinc0	equ	0xFEE
  2518                           wreg	equ	0xFE8
  2519                           postdec1	equ	0xFE5
  2520                           fsr1h	equ	0xFE2
  2521                           fsr1l	equ	0xFE1
  2522                           
  2523                           	psect	cstackBANK10
  2524  000A00                     __pcstackBANK10:
  2525                           	opt stack 0
  2526  000A00                     Terminal@UsbRxBuffer:
  2527                           	opt stack 0
  2528                           
  2529                           ; 200 bytes @ 0x0
  2530  000A00                     	ds	200
  2531                           tblptru	equ	0xFF8
  2532                           tblptrh	equ	0xFF7
  2533                           tblptrl	equ	0xFF6
  2534                           tablat	equ	0xFF5
  2535                           postinc0	equ	0xFEE
  2536                           wreg	equ	0xFE8
  2537                           postdec1	equ	0xFE5
  2538                           fsr1h	equ	0xFE2
  2539                           fsr1l	equ	0xFE1
  2540                           
  2541                           	psect	cstackBANK2
  2542  000200                     __pcstackBANK2:
  2543                           	opt stack 0
  2544  000200                     Terminal@UsbTxBuffer:
  2545                           	opt stack 0
  2546                           
  2547                           ; 200 bytes @ 0x0
  2548  000200                     	ds	200
  2549                           tblptru	equ	0xFF8
  2550                           tblptrh	equ	0xFF7
  2551                           tblptrl	equ	0xFF6
  2552                           tablat	equ	0xFF5
  2553                           postinc0	equ	0xFEE
  2554                           wreg	equ	0xFE8
  2555                           postdec1	equ	0xFE5
  2556                           fsr1h	equ	0xFE2
  2557                           fsr1l	equ	0xFE1
  2558                           
  2559                           	psect	cstackBANK1
  2560  000100                     __pcstackBANK1:
  2561                           	opt stack 0
  2562  000100                     SendSmsSm@UartMessage:
  2563                           	opt stack 0
  2564  000100                     InitGprsNetwork@UartMessage:
  2565                           	opt stack 0
  2566  000100                     Terminal@TermTxBuffer:
  2567                           	opt stack 0
  2568  000100                     MyApp_Task@smsText:
  2569                           	opt stack 0
  2570  000100                     HttpGetMethod@UartMessage:
  2571                           	opt stack 0
  2572                           
  2573                           ; 200 bytes @ 0x0
  2574  000100                     	ds	50
  2575  000132                     InitGprsNetwork@Index:
  2576                           	opt stack 0
  2577  000132                     MyApp_Task@phone:
  2578                           	opt stack 0
  2579                           
  2580                           ; 13 bytes @ 0x32
  2581  000132                     	ds	13
  2582  00013F                     MyApp_Task@off:
  2583                           	opt stack 0
  2584                           
  2585                           ; 2 bytes @ 0x3F
  2586  00013F                     	ds	2
  2587  000141                     MyApp_Task@on:
  2588                           	opt stack 0
  2589                           
  2590                           ; 2 bytes @ 0x41
  2591  000141                     	ds	2
  2592  000143                     MyApp_Task@I2cTxBufferTest:
  2593                           	opt stack 0
  2594                           
  2595                           ; 2 bytes @ 0x43
  2596  000143                     	ds	2
  2597  000145                     MyApp_Task@smsNumber:
  2598                           	opt stack 0
  2599                           
  2600                           ; 14 bytes @ 0x45
  2601  000145                     	ds	14
  2602  000153                     MyApp_Task@cmpString:
  2603                           	opt stack 0
  2604                           
  2605                           ; 3 bytes @ 0x53
  2606  000153                     	ds	117
  2607  0001C8                     HttpGetMethod@Index:
  2608                           	opt stack 0
  2609                           
  2610                           ; 1 bytes @ 0xC8
  2611  0001C8                     	ds	1
  2612                           tblptru	equ	0xFF8
  2613                           tblptrh	equ	0xFF7
  2614                           tblptrl	equ	0xFF6
  2615                           tablat	equ	0xFF5
  2616                           postinc0	equ	0xFEE
  2617                           wreg	equ	0xFE8
  2618                           postdec1	equ	0xFE5
  2619                           fsr1h	equ	0xFE2
  2620                           fsr1l	equ	0xFE1
  2621                           
  2622                           	psect	cstackBANK0
  2623  000060                     __pcstackBANK0:
  2624                           	opt stack 0
  2625  000060                     
  2626                           ; 1 bytes @ 0x0
  2627  000060                     	ds	8
  2628  000068                     ??_LowPriorityIsr:
  2629                           
  2630                           ; 1 bytes @ 0x8
  2631  000068                     	ds	21
  2632  00007D                     ??_isdigit:
  2633  00007D                     ??_isspace:
  2634  00007D                     ??_isupper:
  2635  00007D                     ??_Rtcc_GetRtccValue:
  2636  00007D                     ??_UartTxBufferStatus:
  2637  00007D                     ??_USBStdGetDscHandler:
  2638  00007D                     ??_USBStdGetStatusHandler:
  2639  00007D                     ?_USBTransferOnePacket:
  2640                           	opt stack 0
  2641  00007D                     ?_strlen:
  2642                           	opt stack 0
  2643  00007D                     ?_sprintf:
  2644                           	opt stack 0
  2645  00007D                     ?___wmul:
  2646                           	opt stack 0
  2647  00007D                     ?___awdiv:
  2648                           	opt stack 0
  2649  00007D                     ?___awmod:
  2650                           	opt stack 0
  2651  00007D                     ?___lwmod:
  2652                           	opt stack 0
  2653  00007D                     ?_GetOsTickCounter:
  2654                           	opt stack 0
  2655  00007D                     ?___lmul:
  2656                           	opt stack 0
  2657  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2658                           	opt stack 0
  2659  00007D                     SetAckStatus@AckSts:
  2660                           	opt stack 0
  2661  00007D                     WriteByte@Byte:
  2662                           	opt stack 0
  2663  00007D                     ReadByte@Byte:
  2664                           	opt stack 0
  2665  00007D                     Mcu_SetWdgSts@WdgSts:
  2666                           	opt stack 0
  2667  00007D                     RtccIrqInit@Priority:
  2668                           	opt stack 0
  2669  00007D                     Rtcc_SetRtcStatus@Status:
  2670                           	opt stack 0
  2671  00007D                     TmrBInit@Prescaler:
  2672                           	opt stack 0
  2673  00007D                     Tmr_TmrBIrqSet@Priority:
  2674                           	opt stack 0
  2675  00007D                     Tmr_StartTmr@TmrNumb:
  2676                           	opt stack 0
  2677  00007D                     UartWriteByte@ByteToWrite:
  2678                           	opt stack 0
  2679  00007D                     USBTransferOnePacket@dir:
  2680                           	opt stack 0
  2681  00007D                     USBConfigureEndpoint@direction:
  2682                           	opt stack 0
  2683  00007D                     USBCtrlTrfTxService@byteToSend:
  2684                           	opt stack 0
  2685  00007D                     USBCtrlTrfRxService@i:
  2686                           	opt stack 0
  2687  00007D                     Led_SetLedStatus@LedSts:
  2688                           	opt stack 0
  2689  00007D                     toupper@c:
  2690                           	opt stack 0
  2691  00007D                     tolower@c:
  2692                           	opt stack 0
  2693  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2694                           	opt stack 0
  2695  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2696                           	opt stack 0
  2697  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2698                           	opt stack 0
  2699  00007D                     Uart_ClearRxBuffer@Index:
  2700                           	opt stack 0
  2701  00007D                     GenerateEvt@Event:
  2702                           	opt stack 0
  2703  00007D                     ReceiveEvt@Event:
  2704                           	opt stack 0
  2705  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2706                           	opt stack 0
  2707  00007D                     StringCompare@String1:
  2708                           	opt stack 0
  2709  00007D                     StringCopy@SourceStr:
  2710                           	opt stack 0
  2711  00007D                     ClearBuffer@Buffer:
  2712                           	opt stack 0
  2713  00007D                     sprintf@sp:
  2714                           	opt stack 0
  2715  00007D                     ___wmul@multiplier:
  2716                           	opt stack 0
  2717  00007D                     ___awdiv@dividend:
  2718                           	opt stack 0
  2719  00007D                     ___awmod@dividend:
  2720                           	opt stack 0
  2721  00007D                     ___lwmod@dividend:
  2722                           	opt stack 0
  2723  00007D                     memcpy@d1:
  2724                           	opt stack 0
  2725  00007D                     memset@p1:
  2726                           	opt stack 0
  2727  00007D                     strcat@to:
  2728                           	opt stack 0
  2729  00007D                     strcpy@to:
  2730                           	opt stack 0
  2731  00007D                     strlen@s:
  2732                           	opt stack 0
  2733  00007D                     ___lmul@multiplier:
  2734                           	opt stack 0
  2735                           
  2736                           ; 4 bytes @ 0x1D
  2737  00007D                     	ds	1
  2738  00007E                     ??_USBConfigureEndpoint:
  2739  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2740                           	opt stack 0
  2741  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2742                           	opt stack 0
  2743  00007E                     TmrBInit@Postscaler:
  2744                           	opt stack 0
  2745  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2746                           	opt stack 0
  2747  00007E                     UartWriteByte@Module:
  2748                           	opt stack 0
  2749  00007E                     UartTxBufferStatus@Module:
  2750                           	opt stack 0
  2751  00007E                     USBCtrlTrfRxService@byteToRead:
  2752                           	opt stack 0
  2753  00007E                     USBCtrlTrfInHandler@lastDTS:
  2754                           	opt stack 0
  2755  00007E                     Led_SetLedStatus@Led:
  2756                           	opt stack 0
  2757  00007E                     _isdigit$6150:
  2758                           	opt stack 0
  2759  00007E                     _isspace$6419:
  2760                           	opt stack 0
  2761  00007E                     _isupper$6422:
  2762                           	opt stack 0
  2763  00007E                     I2c_WriteData@WritePacket:
  2764                           	opt stack 0
  2765  00007E                     Rtcc_RtcConfig@RtcConfig:
  2766                           	opt stack 0
  2767  00007E                     USBTransferOnePacket@data:
  2768                           	opt stack 0
  2769  00007E                     USBStdGetStatusHandler@p:
  2770                           	opt stack 0
  2771                           
  2772                           ; 2 bytes @ 0x1E
  2773  00007E                     	ds	1
  2774  00007F                     ??_strlen:
  2775  00007F                     ??_Rtcc_AlarmConfig:
  2776  00007F                     ??_TmrBInit:
  2777  00007F                     Irq_InitIntController@IntPriorityEn:
  2778                           	opt stack 0
  2779  00007F                     Rtcc_GetRtccValue@RetValue:
  2780                           	opt stack 0
  2781  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2782                           	opt stack 0
  2783  00007F                     UartTxBufferStatus@TxBufferStatus:
  2784                           	opt stack 0
  2785  00007F                     GenerateEvt@EventStatus:
  2786                           	opt stack 0
  2787  00007F                     isdigit@c:
  2788                           	opt stack 0
  2789  00007F                     isspace@c:
  2790                           	opt stack 0
  2791  00007F                     isupper@c:
  2792                           	opt stack 0
  2793  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2794                           	opt stack 0
  2795  00007F                     StringCompare@String2:
  2796                           	opt stack 0
  2797  00007F                     StringCopy@DestStr:
  2798                           	opt stack 0
  2799  00007F                     ClearBuffer@Len:
  2800                           	opt stack 0
  2801  00007F                     sprintf@f:
  2802                           	opt stack 0
  2803  00007F                     ___wmul@multiplicand:
  2804                           	opt stack 0
  2805  00007F                     ___awdiv@divisor:
  2806                           	opt stack 0
  2807  00007F                     ___awmod@divisor:
  2808                           	opt stack 0
  2809  00007F                     ___lwmod@divisor:
  2810                           	opt stack 0
  2811  00007F                     memcpy@s1:
  2812                           	opt stack 0
  2813  00007F                     memset@c:
  2814                           	opt stack 0
  2815  00007F                     strcat@from:
  2816                           	opt stack 0
  2817  00007F                     strcpy@from:
  2818                           	opt stack 0
  2819                           
  2820                           ; 2 bytes @ 0x1F
  2821  00007F                     	ds	1
  2822  000080                     ??_isalpha:
  2823  000080                     ??_isxdigit:
  2824  000080                     ??_I2c_WriteData:
  2825  000080                     ??_Rtcc_RtcConfig:
  2826  000080                     Rtcc_GetRtccValue@RegValue:
  2827                           	opt stack 0
  2828  000080                     TmrBInit@TmrNumb:
  2829                           	opt stack 0
  2830  000080                     ReceiveEvt@EventStatus:
  2831                           	opt stack 0
  2832  000080                     USBTransferOnePacket@len:
  2833                           	opt stack 0
  2834  000080                     I2c_ReadData@ReadPacket:
  2835                           	opt stack 0
  2836  000080                     Uart_WriteConstString@ConstStringToWrite:
  2837                           	opt stack 0
  2838  000080                     Uart_WriteString@StringToWrite:
  2839                           	opt stack 0
  2840  000080                     Uart_WriteStringLen@StringToWrite:
  2841                           	opt stack 0
  2842  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2843                           	opt stack 0
  2844  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2845                           	opt stack 0
  2846                           
  2847                           ; 2 bytes @ 0x20
  2848  000080                     	ds	1
  2849  000081                     ?_GetElapsedTime:
  2850                           	opt stack 0
  2851  000081                     ?_Rtcm_GetRtccDate:
  2852                           	opt stack 0
  2853  000081                     Mdm_IsSmsReceived@Ret:
  2854                           	opt stack 0
  2855  000081                     Mdm_IsRinging@Ret:
  2856                           	opt stack 0
  2857  000081                     I2cSlv_I2cReadMsgSts@Result:
  2858                           	opt stack 0
  2859  000081                     USBTransferOnePacket@ep:
  2860                           	opt stack 0
  2861  000081                     Led_SetLedBlinkTime@Led:
  2862                           	opt stack 0
  2863  000081                     ___awdiv@counter:
  2864                           	opt stack 0
  2865  000081                     ___awmod@counter:
  2866                           	opt stack 0
  2867  000081                     ___lwmod@counter:
  2868                           	opt stack 0
  2869  000081                     _isalpha$6416:
  2870                           	opt stack 0
  2871  000081                     _isxdigit$6426:
  2872                           	opt stack 0
  2873  000081                     OsTmr_StartTimer@Timer:
  2874                           	opt stack 0
  2875  000081                     StringCompare@Len:
  2876                           	opt stack 0
  2877  000081                     StringCopy@Len:
  2878                           	opt stack 0
  2879  000081                     ClearBuffer@Index:
  2880                           	opt stack 0
  2881  000081                     ___wmul@product:
  2882                           	opt stack 0
  2883  000081                     memcpy@n:
  2884                           	opt stack 0
  2885  000081                     memset@n:
  2886                           	opt stack 0
  2887  000081                     strcat@cp:
  2888                           	opt stack 0
  2889  000081                     strcpy@cp:
  2890                           	opt stack 0
  2891  000081                     strlen@cp:
  2892                           	opt stack 0
  2893  000081                     GetElapsedTime@StartTime:
  2894                           	opt stack 0
  2895  000081                     ___lmul@multiplicand:
  2896                           	opt stack 0
  2897                           
  2898                           ; 4 bytes @ 0x21
  2899  000081                     	ds	1
  2900  000082                     ??_I2c_ReadData:
  2901  000082                     Uart_WriteConstString@Module:
  2902                           	opt stack 0
  2903  000082                     Uart_WriteString@Module:
  2904                           	opt stack 0
  2905  000082                     Uart_WriteStringLen@Len:
  2906                           	opt stack 0
  2907  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  2908                           	opt stack 0
  2909  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2910                           	opt stack 0
  2911  000082                     USBConfigureEndpoint@EPNum:
  2912                           	opt stack 0
  2913  000082                     ___awdiv@sign:
  2914                           	opt stack 0
  2915  000082                     ___awmod@sign:
  2916                           	opt stack 0
  2917  000082                     isalpha@c:
  2918                           	opt stack 0
  2919  000082                     isxdigit@c:
  2920                           	opt stack 0
  2921  000082                     USBTransferOnePacket@handle:
  2922                           	opt stack 0
  2923                           
  2924                           ; 2 bytes @ 0x22
  2925  000082                     	ds	1
  2926  000083                     ??_StringCopy:
  2927  000083                     ?_atoi:
  2928                           	opt stack 0
  2929  000083                     ?_xtoi:
  2930                           	opt stack 0
  2931  000083                     ?___lwdiv:
  2932                           	opt stack 0
  2933  000083                     Uart_WriteStringLen@Index:
  2934                           	opt stack 0
  2935  000083                     Mdm_SetSmsFormat@Index:
  2936                           	opt stack 0
  2937  000083                     I2cSlv_SendI2cMsg@DataLenght:
  2938                           	opt stack 0
  2939  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2940                           	opt stack 0
  2941  000083                     sprintf@flag:
  2942                           	opt stack 0
  2943  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  2944                           	opt stack 0
  2945  000083                     USBConfigureEndpoint@handle:
  2946                           	opt stack 0
  2947  000083                     putUSBUSART@data:
  2948                           	opt stack 0
  2949  000083                     atoi@s:
  2950                           	opt stack 0
  2951  000083                     ___awdiv@quotient:
  2952                           	opt stack 0
  2953  000083                     ___lwdiv@dividend:
  2954                           	opt stack 0
  2955  000083                     memcpy@d:
  2956                           	opt stack 0
  2957  000083                     memset@p:
  2958                           	opt stack 0
  2959  000083                     xtoi@s:
  2960                           	opt stack 0
  2961  000083                     OsTmr_StartTimer@Timeout:
  2962                           	opt stack 0
  2963                           
  2964                           ; 4 bytes @ 0x23
  2965  000083                     	ds	1
  2966  000084                     Uart_WriteStringLen@Module:
  2967                           	opt stack 0
  2968  000084                     I2cSlv_SendI2cMsg@TxSts:
  2969                           	opt stack 0
  2970  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  2971                           	opt stack 0
  2972  000084                     CDCTxService@i:
  2973                           	opt stack 0
  2974  000084                     getsUSBUSART@buffer:
  2975                           	opt stack 0
  2976  000084                     sprintf@ap:
  2977                           	opt stack 0
  2978  000084                     Mdm_SetSmsFormat@UartMessage:
  2979                           	opt stack 0
  2980                           
  2981                           ; 20 bytes @ 0x24
  2982  000084                     	ds	1
  2983  000085                     ??_atoi:
  2984  000085                     ??_xtoi:
  2985  000085                     ??_GetElapsedTime:
  2986  000085                     Rtcc_SetRtccValue@Value:
  2987                           	opt stack 0
  2988  000085                     USBDeviceInit@i:
  2989                           	opt stack 0
  2990  000085                     USBEnableEndpoint@options:
  2991                           	opt stack 0
  2992  000085                     putUSBUSART@length:
  2993                           	opt stack 0
  2994  000085                     CDCTxService@byte_to_send:
  2995                           	opt stack 0
  2996  000085                     StringCompare@Result:
  2997                           	opt stack 0
  2998  000085                     StringCopy@Index:
  2999                           	opt stack 0
  3000  000085                     ___lwdiv@divisor:
  3001                           	opt stack 0
  3002  000085                     memcpy@s:
  3003                           	opt stack 0
  3004  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3005                           	opt stack 0
  3006  000085                     ___lmul@product:
  3007                           	opt stack 0
  3008                           
  3009                           ; 4 bytes @ 0x25
  3010  000085                     	ds	1
  3011  000086                     ??_Rtcc_SetRtccValue:
  3012  000086                     getsUSBUSART@len:
  3013                           	opt stack 0
  3014  000086                     sprintf@c:
  3015                           	opt stack 0
  3016  000086                     USBEnableEndpoint@p:
  3017                           	opt stack 0
  3018  000086                     StringCompare@Index:
  3019                           	opt stack 0
  3020                           
  3021                           ; 2 bytes @ 0x26
  3022  000086                     	ds	1
  3023  000087                     atoi@sign:
  3024                           	opt stack 0
  3025  000087                     ___lwdiv@counter:
  3026                           	opt stack 0
  3027  000087                     memcpy@tmp:
  3028                           	opt stack 0
  3029  000087                     xtoi@sign:
  3030                           	opt stack 0
  3031  000087                     Mdm_GetSmsData@MessageText:
  3032                           	opt stack 0
  3033  000087                     sprintf@cp:
  3034                           	opt stack 0
  3035                           
  3036                           ; 2 bytes @ 0x27
  3037  000087                     	ds	1
  3038  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3039                           	opt stack 0
  3040  000088                     USBEnableEndpoint@ep:
  3041                           	opt stack 0
  3042  000088                     atoi@a:
  3043                           	opt stack 0
  3044  000088                     ___lwdiv@quotient:
  3045                           	opt stack 0
  3046  000088                     xtoi@val:
  3047                           	opt stack 0
  3048  000088                     ModemEvtParser@CallReadyString:
  3049                           	opt stack 0
  3050                           
  3051                           ; 10 bytes @ 0x28
  3052  000088                     	ds	1
  3053  000089                     ??_Rtcm_GetRtccDate:
  3054  000089                     ?_strtol:
  3055                           	opt stack 0
  3056  000089                     ?___lldiv:
  3057                           	opt stack 0
  3058  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3059                           	opt stack 0
  3060  000089                     Mdm_GetSmsData@MessageHeader:
  3061                           	opt stack 0
  3062  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3063                           	opt stack 0
  3064  000089                     strtol@s:
  3065                           	opt stack 0
  3066  000089                     ___lldiv@dividend:
  3067                           	opt stack 0
  3068  000089                     Rtcm_SetRtccDate@Date:
  3069                           	opt stack 0
  3070                           
  3071                           ; 8 bytes @ 0x29
  3072  000089                     	ds	1
  3073  00008A                     xtoi@c:
  3074                           	opt stack 0
  3075  00008A                     LedBlinkStateMachine@LedBlink:
  3076                           	opt stack 0
  3077  00008A                     LedPulseStateMachine@LedPulse:
  3078                           	opt stack 0
  3079  00008A                     secondsAppTimer@counter:
  3080                           	opt stack 0
  3081  00008A                     utoa@buf:
  3082                           	opt stack 0
  3083  00008A                     Rtcm_GetRtccDate@LocalDate:
  3084                           	opt stack 0
  3085                           
  3086                           ; 8 bytes @ 0x2A
  3087  00008A                     	ds	1
  3088  00008B                     Mdm_GetSmsData@GetSmsStatus:
  3089                           	opt stack 0
  3090  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3091                           	opt stack 0
  3092  00008B                     strtol@endptr:
  3093                           	opt stack 0
  3094                           
  3095                           ; 2 bytes @ 0x2B
  3096  00008B                     	ds	1
  3097  00008C                     LedPulseStateMachine@Led:
  3098                           	opt stack 0
  3099  00008C                     secondsAppTimer@isCyclic:
  3100                           	opt stack 0
  3101  00008C                     utoa@val:
  3102                           	opt stack 0
  3103                           
  3104                           ; 2 bytes @ 0x2C
  3105  00008C                     	ds	1
  3106  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3107                           	opt stack 0
  3108  00008D                     strtol@base:
  3109                           	opt stack 0
  3110  00008D                     GetElapsedTime@TimeValue:
  3111                           	opt stack 0
  3112  00008D                     ___lldiv@divisor:
  3113                           	opt stack 0
  3114                           
  3115                           ; 4 bytes @ 0x2D
  3116  00008D                     	ds	1
  3117  00008E                     utoa@base:
  3118                           	opt stack 0
  3119                           
  3120                           ; 2 bytes @ 0x2E
  3121  00008E                     	ds	1
  3122  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3123  00008F                     ??_strtol:
  3124  00008F                     secondsAppTimer@seconds:
  3125                           	opt stack 0
  3126  00008F                     LedStateMachine@LedSts:
  3127                           	opt stack 0
  3128                           
  3129                           ; 2 bytes @ 0x2F
  3130  00008F                     	ds	1
  3131  000090                     secondsAppTimer@isExpired:
  3132                           	opt stack 0
  3133  000090                     utoa@v:
  3134                           	opt stack 0
  3135                           
  3136                           ; 2 bytes @ 0x30
  3137  000090                     	ds	1
  3138  000091                     ??_USBStdFeatureReqHandler:
  3139  000091                     USBStdSetCfgHandler@i:
  3140                           	opt stack 0
  3141  000091                     LedStateMachine@LedOut:
  3142                           	opt stack 0
  3143  000091                     secondsAppTimer@destinationTicks:
  3144                           	opt stack 0
  3145  000091                     GetElapsedTime@CurrentTimestamp:
  3146                           	opt stack 0
  3147  000091                     ___lldiv@quotient:
  3148                           	opt stack 0
  3149                           
  3150                           ; 4 bytes @ 0x31
  3151  000091                     	ds	1
  3152  000092                     utoa@c:
  3153                           	opt stack 0
  3154  000092                     USBStdFeatureReqHandler@pUEP:
  3155                           	opt stack 0
  3156  000092                     ModemEvtParser@SmsString:
  3157                           	opt stack 0
  3158                           
  3159                           ; 5 bytes @ 0x32
  3160  000092                     	ds	1
  3161  000093                     strtol@sign:
  3162                           	opt stack 0
  3163  000093                     LedStateMachine@LedBlink:
  3164                           	opt stack 0
  3165  000093                     blinkForSeconds@blickTicks:
  3166                           	opt stack 0
  3167  000093                     itoa@buf:
  3168                           	opt stack 0
  3169                           
  3170                           ; 2 bytes @ 0x33
  3171  000093                     	ds	1
  3172  000094                     USBStdFeatureReqHandler@current_ep_data:
  3173                           	opt stack 0
  3174  000094                     strtol@a:
  3175                           	opt stack 0
  3176                           
  3177                           ; 4 bytes @ 0x34
  3178  000094                     	ds	1
  3179  000095                     blinkForSeconds@seconds:
  3180                           	opt stack 0
  3181  000095                     ___lldiv@counter:
  3182                           	opt stack 0
  3183  000095                     OsTmr_GetTimerStatus@Timer:
  3184                           	opt stack 0
  3185  000095                     USBStdFeatureReqHandler@p:
  3186                           	opt stack 0
  3187  000095                     LedStateMachine@LedPulse:
  3188                           	opt stack 0
  3189  000095                     itoa@val:
  3190                           	opt stack 0
  3191                           
  3192                           ; 2 bytes @ 0x35
  3193  000095                     	ds	1
  3194  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3195                           	opt stack 0
  3196  000096                     SetUartBaudRate@UartConfig:
  3197                           	opt stack 0
  3198  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3199                           	opt stack 0
  3200                           
  3201                           ; 4 bytes @ 0x36
  3202  000096                     	ds	1
  3203  000097                     ??_USBCtrlEPService:
  3204  000097                     itoa@base:
  3205                           	opt stack 0
  3206  000097                     ModemEvtParser@RingString:
  3207                           	opt stack 0
  3208                           
  3209                           ; 4 bytes @ 0x37
  3210  000097                     	ds	1
  3211  000098                     Tmr_TmrBPrSet@Prescaler:
  3212                           	opt stack 0
  3213  000098                     Mdm_SetSmsFormat@TextFormat:
  3214                           	opt stack 0
  3215  000098                     USBDeviceTasks@i:
  3216                           	opt stack 0
  3217  000098                     LedStateMachine@LedOutSts:
  3218                           	opt stack 0
  3219  000098                     strtol@c:
  3220                           	opt stack 0
  3221                           
  3222                           ; 1 bytes @ 0x38
  3223  000098                     	ds	1
  3224  000099                     Tmr_TmrBPrSet@Postscaler:
  3225                           	opt stack 0
  3226  000099                     SetUartBaudRate@Module:
  3227                           	opt stack 0
  3228  000099                     LedStateMachine@Led:
  3229                           	opt stack 0
  3230  000099                     itoa@cp:
  3231                           	opt stack 0
  3232                           
  3233                           ; 2 bytes @ 0x39
  3234  000099                     	ds	1
  3235  00009A                     ??_Led_MainTask:
  3236  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3237                           	opt stack 0
  3238  00009A                     SetUartBaudRate@BaudRateRegister:
  3239                           	opt stack 0
  3240  00009A                     SetBaudRate@McuClockHz:
  3241                           	opt stack 0
  3242                           
  3243                           ; 4 bytes @ 0x3A
  3244  00009A                     	ds	1
  3245  00009B                     ??_SendSmsSm:
  3246  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3247                           	opt stack 0
  3248  00009B                     ModemEvtParser@Match:
  3249                           	opt stack 0
  3250  00009B                     OsTmr_Wait@WaitTimer:
  3251                           	opt stack 0
  3252  00009B                     InitGprsNetwork@Apn:
  3253                           	opt stack 0
  3254  00009B                     HttpGetMethod@GetData:
  3255                           	opt stack 0
  3256                           
  3257                           ; 2 bytes @ 0x3B
  3258  00009B                     	ds	1
  3259  00009C                     SetUartBaudRate@DivisionFactor:
  3260                           	opt stack 0
  3261  00009C                     ModemEvtParser@CompareIdx:
  3262                           	opt stack 0
  3263  00009C                     Tmr_TmrBPrSet@Divisor:
  3264                           	opt stack 0
  3265                           
  3266                           ; 4 bytes @ 0x3C
  3267  00009C                     	ds	1
  3268  00009D                     ??_HttpGetMethod:
  3269  00009D                     InitGprsNetwork@ApnLen:
  3270                           	opt stack 0
  3271  00009D                     Uart_InitUartModule@UartConfig:
  3272                           	opt stack 0
  3273  00009D                     OsTmr_Wait@DelayMs:
  3274                           	opt stack 0
  3275                           
  3276                           ; 4 bytes @ 0x3D
  3277  00009D                     	ds	1
  3278  00009E                     ??_SetBaudRate:
  3279  00009E                     ??_InitGprsNetwork:
  3280                           
  3281                           ; 1 bytes @ 0x3E
  3282  00009E                     	ds	1
  3283  00009F                     ??_Uart_InitUartModule:
  3284                           
  3285                           ; 1 bytes @ 0x3F
  3286  00009F                     	ds	1
  3287  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3288                           	opt stack 0
  3289                           
  3290                           ; 2 bytes @ 0x40
  3291  0000A0                     	ds	1
  3292  0000A1                     Uart_InitUartModule@Module:
  3293                           	opt stack 0
  3294  0000A1                     OsTmr_Wait@Ret:
  3295                           	opt stack 0
  3296                           
  3297                           ; 1 bytes @ 0x41
  3298  0000A1                     	ds	1
  3299  0000A2                     ??_Terminal:
  3300  0000A2                     I2c_InitI2cModule@I2cConfig:
  3301                           	opt stack 0
  3302                           
  3303                           ; 2 bytes @ 0x42
  3304  0000A2                     	ds	1
  3305  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3306                           	opt stack 0
  3307                           
  3308                           ; 1 bytes @ 0x43
  3309  0000A3                     	ds	1
  3310  0000A4                     ??_I2c_InitI2cModule:
  3311  0000A4                     Terminal@i:
  3312                           	opt stack 0
  3313  0000A4                     InitSchedTimer@TmrBConfig:
  3314                           	opt stack 0
  3315                           
  3316                           ; 7 bytes @ 0x44
  3317  0000A4                     	ds	1
  3318  0000A5                     Terminal@ReceivedBytes:
  3319                           	opt stack 0
  3320                           
  3321                           ; 1 bytes @ 0x45
  3322  0000A5                     	ds	1
  3323  0000A6                     Terminal@Index:
  3324                           	opt stack 0
  3325                           
  3326                           ; 1 bytes @ 0x46
  3327  0000A6                     	ds	1
  3328  0000A7                     Term_MainSm@FwkMajorStr:
  3329                           	opt stack 0
  3330                           
  3331                           ; 4 bytes @ 0x47
  3332  0000A7                     	ds	4
  3333  0000AB                     Term_MainSm@FwkMinorStr:
  3334                           	opt stack 0
  3335                           
  3336                           ; 4 bytes @ 0x4B
  3337  0000AB                     	ds	4
  3338  0000AF                     Term_MainSm@FwkBuildStr:
  3339                           	opt stack 0
  3340                           
  3341                           ; 4 bytes @ 0x4F
  3342  0000AF                     	ds	4
  3343  0000B3                     ??_InitializeTasks:
  3344  0000B3                     ??_ScheduleTasks:
  3345                           
  3346                           ; 1 bytes @ 0x53
  3347  0000B3                     	ds	2
  3348  0000B5                     InitializeTasks@ActiveTaskIndex:
  3349                           	opt stack 0
  3350                           
  3351                           ; 1 bytes @ 0x55
  3352  0000B5                     	ds	2
  3353  0000B7                     ScheduleTasks@ActiveTaskIndex:
  3354                           	opt stack 0
  3355                           
  3356                           ; 1 bytes @ 0x57
  3357  0000B7                     	ds	1
  3358  0000B8                     tblptru	equ	0xFF8
  3359                           tblptrh	equ	0xFF7
  3360                           tblptrl	equ	0xFF6
  3361                           tablat	equ	0xFF5
  3362                           postinc0	equ	0xFEE
  3363                           wreg	equ	0xFE8
  3364                           postdec1	equ	0xFE5
  3365                           fsr1h	equ	0xFE2
  3366                           fsr1l	equ	0xFE1
  3367                           
  3368                           ; 1 bytes @ 0x58
  3369                           
  3370                           	psect	cstackCOMRAM
  3371  000001                     __pcstackCOMRAM:
  3372                           	opt stack 0
  3373  000001                     i2GenerateEvt@Event:
  3374                           	opt stack 0
  3375                           
  3376                           ; 2 bytes @ 0x0
  3377  000001                     	ds	2
  3378  000003                     i2GenerateEvt@EventStatus:
  3379                           	opt stack 0
  3380                           
  3381                           ; 1 bytes @ 0x2
  3382  000003                     	ds	1
  3383  000004                     Uart_MdmGsmGprsReadService@UartData:
  3384                           	opt stack 0
  3385                           
  3386                           ; 1 bytes @ 0x3
  3387  000004                     	ds	1
  3388  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3389                           	opt stack 0
  3390                           
  3391                           ; 2 bytes @ 0x4
  3392  000005                     	ds	2
  3393  000007                     ??_HighPriorityIsr:
  3394                           
  3395                           ; 1 bytes @ 0x6
  3396  000007                     	ds	18
  3397  000019                     ?i1___wmul:
  3398                           	opt stack 0
  3399  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3400                           	opt stack 0
  3401  000019                     i1GenerateEvt@Event:
  3402                           	opt stack 0
  3403  000019                     i1___wmul@multiplier:
  3404                           	opt stack 0
  3405                           
  3406                           ; 2 bytes @ 0x18
  3407  000019                     	ds	2
  3408  00001B                     i1GenerateEvt@EventStatus:
  3409                           	opt stack 0
  3410  00001B                     i1___wmul@multiplicand:
  3411                           	opt stack 0
  3412                           
  3413                           ; 2 bytes @ 0x1A
  3414  00001B                     	ds	1
  3415  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3416                           	opt stack 0
  3417                           
  3418                           ; 2 bytes @ 0x1B
  3419  00001C                     	ds	1
  3420  00001D                     i1___wmul@product:
  3421                           	opt stack 0
  3422                           
  3423                           ; 2 bytes @ 0x1C
  3424  00001D                     	ds	1
  3425  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3426                           	opt stack 0
  3427                           
  3428                           ; 1 bytes @ 0x1D
  3429  00001E                     	ds	1
  3430  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3431                           	opt stack 0
  3432                           
  3433                           ; 1 bytes @ 0x1E
  3434  00001F                     	ds	1
  3435  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3436                           	opt stack 0
  3437                           
  3438                           ; 1 bytes @ 0x1F
  3439  000020                     	ds	1
  3440  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3441                           	opt stack 0
  3442                           
  3443                           ; 2 bytes @ 0x20
  3444  000021                     	ds	2
  3445  000023                     tblptru	equ	0xFF8
  3446                           tblptrh	equ	0xFF7
  3447                           tblptrl	equ	0xFF6
  3448                           tablat	equ	0xFF5
  3449                           postinc0	equ	0xFEE
  3450                           wreg	equ	0xFE8
  3451                           postdec1	equ	0xFE5
  3452                           fsr1h	equ	0xFE2
  3453                           fsr1l	equ	0xFE1
  3454                           
  3455                           ; 1 bytes @ 0x22
  3456 ;;
  3457 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3458 ;;
  3459 ;; *************** function _main *****************
  3460 ;; Defined at:
  3461 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  2   14[None  ] short 
  3468 ;; Registers used:
  3469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels required when called:   23
  3481 ;; This function calls:
  3482 ;;		_Sch_MainScheduler
  3483 ;;		_SystemInit
  3484 ;; This function is called by:
  3485 ;;		Startup code after reset
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text0
  3490  006138                     __ptext0:
  3491                           	opt stack 0
  3492  006138                     _main:
  3493                           	opt stack 8
  3494                           
  3495                           ;main.c: 61: SystemInit();
  3496                           
  3497                           ;incstack = 0
  3498  006138  ECD6  F02D         	call	_SystemInit	;wreg free
  3499                           
  3500                           ;main.c: 64: Sch_MainScheduler();
  3501  00613C  ECA8  F02F         	call	_Sch_MainScheduler	;wreg free
  3502                           
  3503                           ;main.c: 67: return 0;
  3504                           ;	Return value of _main is never used
  3505  006140  EF66  F000         	goto	start
  3506  006144                     __end_of_main:
  3507                           	opt stack 0
  3508                           tblptru	equ	0xFF8
  3509                           tblptrh	equ	0xFF7
  3510                           tblptrl	equ	0xFF6
  3511                           tablat	equ	0xFF5
  3512                           postinc0	equ	0xFEE
  3513                           wreg	equ	0xFE8
  3514                           postdec1	equ	0xFE5
  3515                           fsr1h	equ	0xFE2
  3516                           fsr1l	equ	0xFE1
  3517                           
  3518 ;; *************** function _SystemInit *****************
  3519 ;; Defined at:
  3520 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      void 
  3527 ;; Registers used:
  3528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3538 ;;Total ram usage:        0 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:   15
  3541 ;; This function calls:
  3542 ;;		_InitSchedTimer
  3543 ;;		_Irq_InitIntController
  3544 ;;		_Mcu_ConfigExtInt
  3545 ;;		_Mcu_StartSystemPll
  3546 ;;		_Pm_DsReleasePinControl
  3547 ;;		_Tmr_RegisterTmr2IsrCallback
  3548 ;; This function is called by:
  3549 ;;		_main
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text1
  3554  005BAC                     __ptext1:
  3555                           	opt stack 0
  3556  005BAC                     _SystemInit:
  3557                           	opt stack 15
  3558                           
  3559                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3560                           
  3561                           ;incstack = 0
  3562  005BAC  ECBF  F030         	call	_Pm_DsReleasePinControl	;wreg free
  3563                           
  3564                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3565  005BB0  EC99  F02F         	call	_Mcu_StartSystemPll	;wreg free
  3566                           
  3567                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3568  005BB4  0E01               	movlw	1
  3569  005BB6  0100               	movlb	0	; () banked
  3570  005BB8  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3571  005BBA  0E01               	movlw	1
  3572  005BBC  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3573  005BBE  0E01               	movlw	1
  3574  005BC0  EC7A  F02E         	call	_Irq_InitIntController
  3575                           
  3576                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3577  005BC4  0E2A               	movlw	low _Sch_SchmIntService
  3578  005BC6  0100               	movlb	0	; () banked
  3579  005BC8  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3580  005BCA  0E61               	movlw	high _Sch_SchmIntService
  3581  005BCC  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3582  005BCE  ECA2  F030         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3583                           
  3584                           ;sys_init.c: 132: InitSchedTimer();
  3585  005BD2  EC36  F02E         	call	_InitSchedTimer	;wreg free
  3586                           
  3587                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3588  005BD6  ECD4  F02F         	call	_Mcu_ConfigExtInt	;wreg free
  3589  005BDA  0012               	return		;funcret
  3590  005BDC                     __end_of_SystemInit:
  3591                           	opt stack 0
  3592                           tblptru	equ	0xFF8
  3593                           tblptrh	equ	0xFF7
  3594                           tblptrl	equ	0xFF6
  3595                           tablat	equ	0xFF5
  3596                           postinc0	equ	0xFEE
  3597                           wreg	equ	0xFE8
  3598                           postdec1	equ	0xFE5
  3599                           fsr1h	equ	0xFE2
  3600                           fsr1l	equ	0xFE1
  3601                           
  3602 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3603 ;; Defined at:
  3604 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3607 ;;		 -> Sch_SchmIntService(1), 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3619 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3622 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3623 ;;Total ram usage:        2 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:   11
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_SystemInit
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text2
  3634  006144                     __ptext2:
  3635                           	opt stack 0
  3636  006144                     _Tmr_RegisterTmr2IsrCallback:
  3637                           	opt stack 18
  3638                           
  3639                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3640                           
  3641                           ;incstack = 0
  3642  006144  C07D  F2E0         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3643  006148  C07E  F2E1         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3644  00614C  0012               	return		;funcret
  3645  00614E                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3646                           	opt stack 0
  3647                           tblptru	equ	0xFF8
  3648                           tblptrh	equ	0xFF7
  3649                           tblptrl	equ	0xFF6
  3650                           tablat	equ	0xFF5
  3651                           postinc0	equ	0xFEE
  3652                           wreg	equ	0xFE8
  3653                           postdec1	equ	0xFE5
  3654                           fsr1h	equ	0xFE2
  3655                           fsr1l	equ	0xFE1
  3656                           
  3657 ;; *************** function _Pm_DsReleasePinControl *****************
  3658 ;; Defined at:
  3659 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		None
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3677 ;;Total ram usage:        0 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:   11
  3680 ;; This function calls:
  3681 ;;		Nothing
  3682 ;; This function is called by:
  3683 ;;		_SystemInit
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text3
  3688  00617E                     __ptext3:
  3689                           	opt stack 0
  3690  00617E                     _Pm_DsReleasePinControl:
  3691                           	opt stack 18
  3692                           
  3693                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3694                           
  3695                           ;incstack = 0
  3696  00617E  010F               	movlb	15	; () banked
  3697  006180  914C               	bcf	76,0,b	;volatile
  3698                           
  3699                           ; BSR set to: 15
  3700  006182  0012               	return		;funcret
  3701  006184                     __end_of_Pm_DsReleasePinControl:
  3702                           	opt stack 0
  3703                           tblptru	equ	0xFF8
  3704                           tblptrh	equ	0xFF7
  3705                           tblptrl	equ	0xFF6
  3706                           tablat	equ	0xFF5
  3707                           postinc0	equ	0xFEE
  3708                           wreg	equ	0xFE8
  3709                           postdec1	equ	0xFE5
  3710                           fsr1h	equ	0xFE2
  3711                           fsr1l	equ	0xFE1
  3712                           
  3713 ;; *************** function _Mcu_StartSystemPll *****************
  3714 ;; Defined at:
  3715 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;		None
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      void 
  3722 ;; Registers used:
  3723 ;;		wreg, status,2, status,0
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3730 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3732 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3733 ;;Total ram usage:        2 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:   11
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_SystemInit
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text4
  3744  005F32                     __ptext4:
  3745                           	opt stack 0
  3746  005F32                     _Mcu_StartSystemPll:
  3747                           	opt stack 18
  3748                           
  3749                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3750                           
  3751                           ; BSR set to: 15
  3752                           ;incstack = 0
  3753  005F32  0E03               	movlw	3
  3754  005F34  0100               	movlb	0	; () banked
  3755  005F36  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3756  005F38  0EE8               	movlw	232
  3757  005F3A  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3761  005F3C  8C9B               	bsf	3995,6,c	;volatile
  3762  005F3E                     l10971:
  3763                           
  3764                           ; BSR set to: 0
  3765  005F3E  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3766  005F40  A0D8               	btfss	status,0,c
  3767  005F42  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3768  005F44  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3769  005F46  E1FB               	bnz	l10971
  3770  005F48  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3771  005F4A  B4D8               	btfsc	status,2,c
  3772  005F4C  0012               	return	
  3773  005F4E  D7F7               	goto	l237
  3774  005F50                     __end_of_Mcu_StartSystemPll:
  3775                           	opt stack 0
  3776                           tblptru	equ	0xFF8
  3777                           tblptrh	equ	0xFF7
  3778                           tblptrl	equ	0xFF6
  3779                           tablat	equ	0xFF5
  3780                           postinc0	equ	0xFEE
  3781                           wreg	equ	0xFE8
  3782                           postdec1	equ	0xFE5
  3783                           fsr1h	equ	0xFE2
  3784                           fsr1l	equ	0xFE1
  3785                           status	equ	0xFD8
  3786                           
  3787 ;; *************** function _Mcu_ConfigExtInt *****************
  3788 ;; Defined at:
  3789 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3807 ;;Total ram usage:        0 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:   11
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_SystemInit
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text5
  3818  005FA8                     __ptext5:
  3819                           	opt stack 0
  3820  005FA8                     _Mcu_ConfigExtInt:
  3821                           	opt stack 18
  3822                           
  3823                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;incstack = 0
  3827  005FA8  8093               	bsf	3987,0,c	;volatile
  3828                           
  3829                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3830  005FAA  8695               	bsf	3989,3,c	;volatile
  3831                           
  3832                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3833  005FAC  010F               	movlb	15	; () banked
  3834  005FAE  8949               	bsf	73,4,b	;volatile
  3835                           
  3836                           ; BSR set to: 15
  3837                           ;mcu_drv.c: 108: RPINR1 = 20;
  3838  005FB0  0E14               	movlw	20
  3839  005FB2  010E               	movlb	14	; () banked
  3840  005FB4  6FE7               	movwf	231,b	;volatile
  3841                           
  3842                           ; BSR set to: 14
  3843                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3844  005FB6  88F2               	bsf	intcon,4,c	;volatile
  3845                           
  3846                           ; BSR set to: 14
  3847                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3848  005FB8  86F0               	bsf	intcon3,3,c	;volatile
  3849                           
  3850                           ; BSR set to: 14
  3851                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3852  005FBA  8CF0               	bsf	intcon3,6,c	;volatile
  3853                           
  3854                           ; BSR set to: 14
  3855                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3856  005FBC  9CF1               	bcf	intcon2,6,c	;volatile
  3857                           
  3858                           ; BSR set to: 14
  3859                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3860  005FBE  9AF1               	bcf	intcon2,5,c	;volatile
  3861                           
  3862                           ; BSR set to: 14
  3863  005FC0  0012               	return		;funcret
  3864  005FC2                     __end_of_Mcu_ConfigExtInt:
  3865                           	opt stack 0
  3866                           tblptru	equ	0xFF8
  3867                           tblptrh	equ	0xFF7
  3868                           tblptrl	equ	0xFF6
  3869                           tablat	equ	0xFF5
  3870                           intcon	equ	0xFF2
  3871                           intcon2	equ	0xFF1
  3872                           intcon3	equ	0xFF0
  3873                           postinc0	equ	0xFEE
  3874                           wreg	equ	0xFE8
  3875                           postdec1	equ	0xFE5
  3876                           fsr1h	equ	0xFE2
  3877                           fsr1l	equ	0xFE1
  3878                           status	equ	0xFD8
  3879                           
  3880 ;; *************** function _Irq_InitIntController *****************
  3881 ;; Defined at:
  3882 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  IntPriorityE    1    wreg     enum E7720
  3885 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  3886 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  1    wreg      void 
  3891 ;; Registers used:
  3892 ;;		wreg
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3898 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3899 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3901 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3902 ;;Total ram usage:        3 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:   11
  3905 ;; This function calls:
  3906 ;;		Nothing
  3907 ;; This function is called by:
  3908 ;;		_SystemInit
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           
  3912                           	psect	text6
  3913  005CF4                     __ptext6:
  3914                           	opt stack 0
  3915  005CF4                     _Irq_InitIntController:
  3916                           	opt stack 18
  3917                           
  3918                           ; BSR set to: 14
  3919                           ;incstack = 0
  3920                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3921  005CF4  0100               	movlb	0	; () banked
  3922  005CF6  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3923                           
  3924                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3925  005CF8  0100               	movlb	0	; () banked
  3926  005CFA  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3927  005CFC  D002               	bra	u9515
  3928  005CFE  9ED0               	bcf	4048,7,c	;volatile
  3929  005D00  D001               	bra	u9516
  3930  005D02                     u9515:
  3931  005D02  8ED0               	bsf	4048,7,c	;volatile
  3932  005D04                     u9516:
  3933                           
  3934                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  3935  005D04  0100               	movlb	0	; () banked
  3936  005D06  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  3937  005D08  D002               	bra	u9525
  3938  005D0A  9EF2               	bcf	intcon,7,c	;volatile
  3939  005D0C  D001               	bra	u9526
  3940  005D0E                     u9525:
  3941  005D0E  8EF2               	bsf	intcon,7,c	;volatile
  3942  005D10                     u9526:
  3943                           
  3944                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  3945  005D10  0100               	movlb	0	; () banked
  3946  005D12  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  3947  005D14  D002               	bra	u9535
  3948  005D16  9CF2               	bcf	intcon,6,c	;volatile
  3949  005D18  D001               	bra	u9536
  3950  005D1A                     u9535:
  3951  005D1A  8CF2               	bsf	intcon,6,c	;volatile
  3952  005D1C                     u9536:
  3953  005D1C  0012               	return		;funcret
  3954  005D1E                     __end_of_Irq_InitIntController:
  3955                           	opt stack 0
  3956                           tblptru	equ	0xFF8
  3957                           tblptrh	equ	0xFF7
  3958                           tblptrl	equ	0xFF6
  3959                           tablat	equ	0xFF5
  3960                           intcon	equ	0xFF2
  3961                           intcon2	equ	0xFF1
  3962                           intcon3	equ	0xFF0
  3963                           postinc0	equ	0xFEE
  3964                           wreg	equ	0xFE8
  3965                           postdec1	equ	0xFE5
  3966                           fsr1h	equ	0xFE2
  3967                           fsr1l	equ	0xFE1
  3968                           status	equ	0xFD8
  3969                           
  3970 ;; *************** function _InitSchedTimer *****************
  3971 ;; Defined at:
  3972 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3987 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3989 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3990 ;;Total ram usage:        7 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:   14
  3993 ;; This function calls:
  3994 ;;		_Tmr_TmrBConfig
  3995 ;; This function is called by:
  3996 ;;		_SystemInit
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text7
  4001  005C6C                     __ptext7:
  4002                           	opt stack 0
  4003  005C6C                     _InitSchedTimer:
  4004                           	opt stack 15
  4005                           
  4006                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4007                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4008                           
  4009                           ;incstack = 0
  4010  005C6C  0E04               	movlw	4
  4011  005C6E  0100               	movlb	0	; () banked
  4012  005C70  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4013                           
  4014                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4015  005C72  0E0C               	movlw	12
  4016  005C74  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4017                           
  4018                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4019  005C76  0E00               	movlw	0
  4020  005C78  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4021                           
  4022                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4023  005C7A  0E01               	movlw	1
  4024  005C7C  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4025                           
  4026                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4027  005C7E  0E03               	movlw	3
  4028  005C80  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4029  005C82  0EE8               	movlw	232
  4030  005C84  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4031                           
  4032                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4033  005C86  0E01               	movlw	1
  4034  005C88  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4038  005C8A  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4039  005C8C  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4040  005C8E  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4041  005C90  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4042  005C92  0E02               	movlw	2
  4043  005C94  ECAF  F01D         	call	_Tmr_TmrBConfig
  4044  005C98  0012               	return		;funcret
  4045  005C9A                     __end_of_InitSchedTimer:
  4046                           	opt stack 0
  4047                           tblptru	equ	0xFF8
  4048                           tblptrh	equ	0xFF7
  4049                           tblptrl	equ	0xFF6
  4050                           tablat	equ	0xFF5
  4051                           intcon	equ	0xFF2
  4052                           intcon2	equ	0xFF1
  4053                           intcon3	equ	0xFF0
  4054                           postinc0	equ	0xFEE
  4055                           wreg	equ	0xFE8
  4056                           postdec1	equ	0xFE5
  4057                           fsr1h	equ	0xFE2
  4058                           fsr1l	equ	0xFE1
  4059                           status	equ	0xFD8
  4060                           
  4061 ;; *************** function _Tmr_TmrBConfig *****************
  4062 ;; Defined at:
  4063 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  TmrNumb         1    wreg     unsigned char 
  4066 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4067 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4081 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4082 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4083 ;;Total ram usage:        4 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:   13
  4086 ;; This function calls:
  4087 ;;		_TmrBInit
  4088 ;;		_Tmr_StartTmr
  4089 ;;		_Tmr_TmrBIrqSet
  4090 ;;		_Tmr_TmrBPrSet
  4091 ;; This function is called by:
  4092 ;;		_InitSchedTimer
  4093 ;;		_InitAuxTimer
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text8
  4098  003B5E                     __ptext8:
  4099                           	opt stack 0
  4100  003B5E                     _Tmr_TmrBConfig:
  4101                           	opt stack 15
  4102                           
  4103                           ;incstack = 0
  4104                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4105  003B5E  0100               	movlb	0	; () banked
  4106  003B60  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4107                           
  4108                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4109  003B62  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4110  003B66  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4111  003B6A  50DF               	movf	indf2,w,c
  4112  003B6C  0100               	movlb	0	; () banked
  4113  003B6E  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4114  003B70  EE20 F001          	lfsr	2,1
  4115  003B74  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4116  003B76  26D9               	addwf	fsr2l,f,c
  4117  003B78  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4118  003B7A  22DA               	addwfc	fsr2h,f,c
  4119  003B7C  50DF               	movf	indf2,w,c
  4120  003B7E  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4121  003B80  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4122  003B82  EC3D  F023         	call	_TmrBInit
  4123                           
  4124                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4125  003B86  0100               	movlb	0	; () banked
  4126  003B88  EE20 F002          	lfsr	2,2
  4127  003B8C  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4128  003B8E  26D9               	addwf	fsr2l,f,c
  4129  003B90  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4130  003B92  22DA               	addwfc	fsr2h,f,c
  4131  003B94  04DE               	decf	postinc2,w,c
  4132  003B96  A4D8               	btfss	status,2,c
  4133  003B98  D00E               	goto	l546
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;tmr_drv.c: 277: {
  4137                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4138  003B9A  EE20 F003          	lfsr	2,3
  4139  003B9E  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4140  003BA0  26D9               	addwf	fsr2l,f,c
  4141  003BA2  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4142  003BA4  22DA               	addwfc	fsr2h,f,c
  4143  003BA6  50DF               	movf	indf2,w,c
  4144  003BA8  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4145  003BAA  0E01               	movlw	1
  4146  003BAC  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4147  003BAE  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4148  003BB0  ECFF  F02A         	call	_Tmr_TmrBIrqSet
  4149                           
  4150                           ;tmr_drv.c: 280: }
  4151  003BB4  D00E               	goto	l547
  4152  003BB6                     l546:
  4153                           
  4154                           ;tmr_drv.c: 281: else
  4155                           ;tmr_drv.c: 282: {
  4156                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4157  003BB6  0100               	movlb	0	; () banked
  4158  003BB8  EE20 F003          	lfsr	2,3
  4159  003BBC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4160  003BBE  26D9               	addwf	fsr2l,f,c
  4161  003BC0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4162  003BC2  22DA               	addwfc	fsr2h,f,c
  4163  003BC4  50DF               	movf	indf2,w,c
  4164  003BC6  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4165  003BC8  0E00               	movlw	0
  4166  003BCA  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4167  003BCC  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4168  003BCE  ECFF  F02A         	call	_Tmr_TmrBIrqSet
  4169  003BD2                     l547:
  4170                           
  4171                           ;tmr_drv.c: 285: }
  4172                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4173  003BD2  0100               	movlb	0	; () banked
  4174  003BD4  EE20 F004          	lfsr	2,4
  4175  003BD8  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4176  003BDA  26D9               	addwf	fsr2l,f,c
  4177  003BDC  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4178  003BDE  22DA               	addwfc	fsr2h,f,c
  4179  003BE0  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4180  003BE4  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4181  003BE8  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4182  003BEC  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4183  003BF0  50DF               	movf	indf2,w,c
  4184  003BF2  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4185  003BF4  EE20 F001          	lfsr	2,1
  4186  003BF8  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4187  003BFA  26D9               	addwf	fsr2l,f,c
  4188  003BFC  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4189  003BFE  22DA               	addwfc	fsr2h,f,c
  4190  003C00  50DF               	movf	indf2,w,c
  4191  003C02  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4192  003C04  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4193  003C06  EC8F  F018         	call	_Tmr_TmrBPrSet
  4194                           
  4195                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4196  003C0A  0100               	movlb	0	; () banked
  4197  003C0C  EE20 F006          	lfsr	2,6
  4198  003C10  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4199  003C12  26D9               	addwf	fsr2l,f,c
  4200  003C14  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4201  003C16  22DA               	addwfc	fsr2h,f,c
  4202  003C18  04DE               	decf	postinc2,w,c
  4203  003C1A  A4D8               	btfss	status,2,c
  4204  003C1C  0012               	return	
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;tmr_drv.c: 290: {
  4208                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4209  003C1E  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4210  003C20  EC79  F02F         	call	_Tmr_StartTmr
  4211                           
  4212                           ;tmr_drv.c: 293: }
  4213  003C24  0012               	return	
  4214  003C26                     __end_of_Tmr_TmrBConfig:
  4215                           	opt stack 0
  4216                           tblptru	equ	0xFF8
  4217                           tblptrh	equ	0xFF7
  4218                           tblptrl	equ	0xFF6
  4219                           tablat	equ	0xFF5
  4220                           intcon	equ	0xFF2
  4221                           intcon2	equ	0xFF1
  4222                           intcon3	equ	0xFF0
  4223                           postinc0	equ	0xFEE
  4224                           wreg	equ	0xFE8
  4225                           postdec1	equ	0xFE5
  4226                           fsr1h	equ	0xFE2
  4227                           fsr1l	equ	0xFE1
  4228                           indf2	equ	0xFDF
  4229                           postinc2	equ	0xFDE
  4230                           postdec2	equ	0xFDD
  4231                           fsr2h	equ	0xFDA
  4232                           fsr2l	equ	0xFD9
  4233                           status	equ	0xFD8
  4234                           
  4235 ;; *************** function _Tmr_TmrBPrSet *****************
  4236 ;; Defined at:
  4237 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  TmrNumb         1    wreg     unsigned char 
  4240 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4241 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4242 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4245 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4246 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      enum E7736
  4249 ;; Registers used:
  4250 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4256 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4257 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4259 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4260 ;;Total ram usage:       10 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:   12
  4263 ;; This function calls:
  4264 ;;		___lldiv
  4265 ;;		___lmul
  4266 ;; This function is called by:
  4267 ;;		_Tmr_TmrBConfig
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text9
  4272  00311E                     __ptext9:
  4273                           	opt stack 0
  4274  00311E                     _Tmr_TmrBPrSet:
  4275                           	opt stack 15
  4276                           
  4277                           ;incstack = 0
  4278                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4279  00311E  0100               	movlb	0	; () banked
  4280  003120  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4281                           
  4282                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4283                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4284  003122  0E00               	movlw	0
  4285  003124  0100               	movlb	0	; () banked
  4286  003126  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4287  003128  0E00               	movlw	0
  4288  00312A  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4289  00312C  0E00               	movlw	0
  4290  00312E  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4291  003130  0E00               	movlw	0
  4292  003132  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4296  003134  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4297  003136  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4298  003138  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4299  00313C  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4300  003140  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4301  003142  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4302  003144  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4303  003148  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4304  00314C  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4305  00314E  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4306  003150  ECE3  F028         	call	___lmul	;wreg free
  4307  003154  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4308  003158  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4309  00315C  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4310  003160  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4311                           
  4312                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4313  003164  0E00               	movlw	0
  4314  003166  0100               	movlb	0	; () banked
  4315  003168  6F89               	movwf	___lldiv@dividend& (0+255),b
  4316  00316A  0E1B               	movlw	27
  4317  00316C  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4318  00316E  0EB7               	movlw	183
  4319  003170  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4320  003172  0E00               	movlw	0
  4321  003174  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4322  003176  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4323  00317A  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4324  00317E  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4325  003182  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4326  003186  EC7F  F025         	call	___lldiv	;wreg free
  4327  00318A  0100               	movlb	0	; () banked
  4328  00318C  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4329  00318E  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4330  003190  E13A               	bnz	l13003
  4331  003192  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4332  003194  A0D8               	btfss	status,0,c
  4333  003196  D02D               	goto	l529
  4334  003198  D036               	goto	l528
  4335  00319A                     
  4336                           ; BSR set to: 0
  4337                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4338                           
  4339                           ; BSR set to: 0
  4340  00319A  0E00               	movlw	0
  4341  00319C  6F89               	movwf	___lldiv@dividend& (0+255),b
  4342  00319E  0E1B               	movlw	27
  4343  0031A0  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4344  0031A2  0EB7               	movlw	183
  4345  0031A4  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4346  0031A6  0E00               	movlw	0
  4347  0031A8  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4348  0031AA  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4349  0031AE  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4350  0031B2  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4351  0031B6  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4352  0031BA  EC7F  F025         	call	___lldiv	;wreg free
  4353  0031BE  0100               	movlb	0	; () banked
  4354  0031C0  5189               	movf	?___lldiv& (0+255),w,b
  4355  0031C2  6ECB               	movwf	4043,c	;volatile
  4356                           
  4357                           ;tmr_drv.c: 210: break;
  4358  0031C4  D01D               	goto	l531
  4359  0031C6                     
  4360                           ; BSR set to: 0
  4361                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4362                           
  4363                           ; BSR set to: 0
  4364  0031C6  0E00               	movlw	0
  4365  0031C8  6F89               	movwf	___lldiv@dividend& (0+255),b
  4366  0031CA  0E1B               	movlw	27
  4367  0031CC  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4368  0031CE  0EB7               	movlw	183
  4369  0031D0  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4370  0031D2  0E00               	movlw	0
  4371  0031D4  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4372  0031D6  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4373  0031DA  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4374  0031DE  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4375  0031E2  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4376  0031E6  EC7F  F025         	call	___lldiv	;wreg free
  4377  0031EA  0100               	movlb	0	; () banked
  4378  0031EC  5189               	movf	?___lldiv& (0+255),w,b
  4379  0031EE  6E77               	movwf	3959,c	;volatile
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;tmr_drv.c: 219: }
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;tmr_drv.c: 218: break;
  4386                           
  4387                           ;tmr_drv.c: 217: default:
  4388                           
  4389                           ;tmr_drv.c: 215: break;
  4390  0031F0  D007               	goto	l531
  4391  0031F2                     l529:
  4392                           
  4393                           ; BSR set to: 0
  4394                           
  4395                           ; BSR set to: 0
  4396  0031F2  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4397                           
  4398                           ; Switch size 1, requested type "space"
  4399                           ; Number of cases is 2, Range of values is 2 to 4
  4400                           ; switch strategies available:
  4401                           ; Name         Instructions Cycles
  4402                           ; simple_byte            7     4 (average)
  4403                           ;	Chosen strategy is simple_byte
  4404  0031F4  0A02               	xorlw	2	; case 2
  4405  0031F6  B4D8               	btfsc	status,2,c
  4406  0031F8  D7D0               	goto	l530
  4407  0031FA  0A06               	xorlw	6	; case 4
  4408  0031FC  B4D8               	btfsc	status,2,c
  4409  0031FE  D7E3               	goto	l532
  4410  003200                     l531:
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4414                           
  4415                           ; BSR set to: 0
  4416  003200  0E00               	movlw	0
  4417  003202  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4418                           
  4419                           ;tmr_drv.c: 223: }
  4420  003204  0012               	return	
  4421  003206                     l528:
  4422  003206                     l13003:
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;tmr_drv.c: 224: else
  4426                           ;tmr_drv.c: 225: {
  4427                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4428  003206  0E01               	movlw	1
  4429  003208  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4430                           
  4431                           ; BSR set to: 0
  4432  00320A  0012               	return	
  4433  00320C                     __end_of_Tmr_TmrBPrSet:
  4434                           	opt stack 0
  4435                           tblptru	equ	0xFF8
  4436                           tblptrh	equ	0xFF7
  4437                           tblptrl	equ	0xFF6
  4438                           tablat	equ	0xFF5
  4439                           prodh	equ	0xFF4
  4440                           prodl	equ	0xFF3
  4441                           intcon	equ	0xFF2
  4442                           intcon2	equ	0xFF1
  4443                           intcon3	equ	0xFF0
  4444                           postinc0	equ	0xFEE
  4445                           wreg	equ	0xFE8
  4446                           postdec1	equ	0xFE5
  4447                           fsr1h	equ	0xFE2
  4448                           fsr1l	equ	0xFE1
  4449                           indf2	equ	0xFDF
  4450                           postinc2	equ	0xFDE
  4451                           postdec2	equ	0xFDD
  4452                           fsr2h	equ	0xFDA
  4453                           fsr2l	equ	0xFD9
  4454                           status	equ	0xFD8
  4455                           
  4456 ;; *************** function _Tmr_TmrBIrqSet *****************
  4457 ;; Defined at:
  4458 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  TmrNumb         1    wreg     unsigned char 
  4461 ;;  Priority        1   29[BANK0 ] enum E7716
  4462 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4474 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4475 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4477 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4478 ;;Total ram usage:        3 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:   11
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_Tmr_TmrBConfig
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text10
  4489  0055FE                     __ptext10:
  4490                           	opt stack 0
  4491  0055FE                     _Tmr_TmrBIrqSet:
  4492                           	opt stack 16
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;incstack = 0
  4496                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4497  0055FE  0100               	movlb	0	; () banked
  4498  005600  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4499                           
  4500                           ;tmr_drv.c: 156: switch (TmrNumb)
  4501  005602  D01A               	goto	l520
  4502  005604                     l521:
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4506  005604  929E               	bcf	3998,1,c	;volatile
  4507                           
  4508                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4509  005606  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4510  005608  D002               	bra	u8075
  4511  00560A  929F               	bcf	3999,1,c	;volatile
  4512  00560C  D001               	bra	u8076
  4513  00560E                     u8075:
  4514  00560E  829F               	bsf	3999,1,c	;volatile
  4515  005610                     u8076:
  4516                           
  4517                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4518  005610  0100               	movlb	0	; () banked
  4519  005612  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4520  005614  D002               	bra	u8085
  4521  005616  929D               	bcf	3997,1,c	;volatile
  4522  005618  D001               	bra	u8086
  4523  00561A                     u8085:
  4524  00561A  829D               	bsf	3997,1,c	;volatile
  4525  00561C                     u8086:
  4526                           
  4527                           ;tmr_drv.c: 165: break;
  4528  00561C  0012               	return	
  4529  00561E                     l523:
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4533  00561E  96A4               	bcf	4004,3,c	;volatile
  4534                           
  4535                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4536  005620  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4537  005622  D002               	bra	u8095
  4538  005624  96A5               	bcf	4005,3,c	;volatile
  4539  005626  D001               	bra	u8096
  4540  005628                     u8095:
  4541  005628  86A5               	bsf	4005,3,c	;volatile
  4542  00562A                     u8096:
  4543                           
  4544                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4545  00562A  0100               	movlb	0	; () banked
  4546  00562C  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4547  00562E  D002               	bra	u8105
  4548  005630  96A3               	bcf	4003,3,c	;volatile
  4549  005632  D001               	bra	u8106
  4550  005634                     u8105:
  4551  005634  86A3               	bsf	4003,3,c	;volatile
  4552  005636                     u8106:
  4553                           
  4554                           ;tmr_drv.c: 178: }
  4555                           
  4556                           ;tmr_drv.c: 177: break;
  4557                           
  4558                           ;tmr_drv.c: 176: default:
  4559                           
  4560                           ;tmr_drv.c: 174: break;
  4561  005636  0012               	return	
  4562  005638                     l520:
  4563  005638  0100               	movlb	0	; () banked
  4564  00563A  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4565                           
  4566                           ; Switch size 1, requested type "space"
  4567                           ; Number of cases is 2, Range of values is 2 to 4
  4568                           ; switch strategies available:
  4569                           ; Name         Instructions Cycles
  4570                           ; simple_byte            7     4 (average)
  4571                           ;	Chosen strategy is simple_byte
  4572  00563C  0A02               	xorlw	2	; case 2
  4573  00563E  B4D8               	btfsc	status,2,c
  4574  005640  D7E1               	goto	l521
  4575  005642  0A06               	xorlw	6	; case 4
  4576  005644  A4D8               	btfss	status,2,c
  4577  005646  0012               	return	
  4578  005648  D7EA               	goto	l523
  4579  00564A                     __end_of_Tmr_TmrBIrqSet:
  4580                           	opt stack 0
  4581                           tblptru	equ	0xFF8
  4582                           tblptrh	equ	0xFF7
  4583                           tblptrl	equ	0xFF6
  4584                           tablat	equ	0xFF5
  4585                           prodh	equ	0xFF4
  4586                           prodl	equ	0xFF3
  4587                           intcon	equ	0xFF2
  4588                           intcon2	equ	0xFF1
  4589                           intcon3	equ	0xFF0
  4590                           postinc0	equ	0xFEE
  4591                           wreg	equ	0xFE8
  4592                           postdec1	equ	0xFE5
  4593                           fsr1h	equ	0xFE2
  4594                           fsr1l	equ	0xFE1
  4595                           indf2	equ	0xFDF
  4596                           postinc2	equ	0xFDE
  4597                           postdec2	equ	0xFDD
  4598                           fsr2h	equ	0xFDA
  4599                           fsr2l	equ	0xFD9
  4600                           status	equ	0xFD8
  4601                           
  4602 ;; *************** function _Tmr_StartTmr *****************
  4603 ;; Defined at:
  4604 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  TmrNumb         1    wreg     unsigned char 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      void 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4619 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4621 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4622 ;;Total ram usage:        1 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:   11
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_Tmr_TmrBConfig
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text11
  4633  005EF2                     __ptext11:
  4634                           	opt stack 0
  4635  005EF2                     _Tmr_StartTmr:
  4636                           	opt stack 16
  4637                           
  4638                           ;incstack = 0
  4639                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4640  005EF2  0100               	movlb	0	; () banked
  4641  005EF4  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4642                           
  4643                           ;tmr_drv.c: 245: switch (TmrNumb)
  4644  005EF6  D004               	goto	l538
  4645  005EF8                     l539:
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4649  005EF8  84CA               	bsf	4042,2,c	;volatile
  4650                           
  4651                           ;tmr_drv.c: 250: break;
  4652  005EFA  0012               	return	
  4653  005EFC                     l541:
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4657  005EFC  8476               	bsf	3958,2,c	;volatile
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;tmr_drv.c: 259: }
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;tmr_drv.c: 258: break;
  4664                           
  4665                           ;tmr_drv.c: 257: default:
  4666                           
  4667                           ;tmr_drv.c: 255: break;
  4668  005EFE  0012               	return	
  4669  005F00                     l538:
  4670                           
  4671                           ; BSR set to: 0
  4672  005F00  0100               	movlb	0	; () banked
  4673  005F02  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4674                           
  4675                           ; Switch size 1, requested type "space"
  4676                           ; Number of cases is 2, Range of values is 2 to 4
  4677                           ; switch strategies available:
  4678                           ; Name         Instructions Cycles
  4679                           ; simple_byte            7     4 (average)
  4680                           ;	Chosen strategy is simple_byte
  4681  005F04  0A02               	xorlw	2	; case 2
  4682  005F06  B4D8               	btfsc	status,2,c
  4683  005F08  D7F7               	goto	l539
  4684  005F0A  0A06               	xorlw	6	; case 4
  4685  005F0C  A4D8               	btfss	status,2,c
  4686  005F0E  0012               	return	
  4687  005F10  D7F5               	goto	l541
  4688  005F12                     __end_of_Tmr_StartTmr:
  4689                           	opt stack 0
  4690                           tblptru	equ	0xFF8
  4691                           tblptrh	equ	0xFF7
  4692                           tblptrl	equ	0xFF6
  4693                           tablat	equ	0xFF5
  4694                           prodh	equ	0xFF4
  4695                           prodl	equ	0xFF3
  4696                           intcon	equ	0xFF2
  4697                           intcon2	equ	0xFF1
  4698                           intcon3	equ	0xFF0
  4699                           postinc0	equ	0xFEE
  4700                           wreg	equ	0xFE8
  4701                           postdec1	equ	0xFE5
  4702                           fsr1h	equ	0xFE2
  4703                           fsr1l	equ	0xFE1
  4704                           indf2	equ	0xFDF
  4705                           postinc2	equ	0xFDE
  4706                           postdec2	equ	0xFDD
  4707                           fsr2h	equ	0xFDA
  4708                           fsr2l	equ	0xFD9
  4709                           status	equ	0xFD8
  4710                           
  4711 ;; *************** function _TmrBInit *****************
  4712 ;; Defined at:
  4713 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  TmrNumb         1    wreg     unsigned char 
  4716 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4717 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4729 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4730 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4731 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4732 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4733 ;;Total ram usage:        4 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:   11
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_Tmr_TmrBConfig
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text12
  4744  00467A                     __ptext12:
  4745                           	opt stack 0
  4746  00467A                     _TmrBInit:
  4747                           	opt stack 16
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;incstack = 0
  4751                           ;TmrBInit@TmrNumb stored from wreg
  4752  00467A  0100               	movlb	0	; () banked
  4753  00467C  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4754                           
  4755                           ;tmr_drv.c: 75: switch (TmrNumb)
  4756  00467E  D03F               	goto	l500
  4757  004680                     l503:
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4761  004680  90CA               	bcf	4042,0,c	;volatile
  4762  004682  D001               	goto	L1
  4763  004684                     l505:
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4767  004684  80CA               	bsf	4042,0,c	;volatile
  4768  004686                     L1:
  4769                           
  4770                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4771  004686  92CA               	bcf	4042,1,c	;volatile
  4772                           
  4773                           ;tmr_drv.c: 91: break;
  4774  004688  D00E               	goto	l504
  4775  00468A                     l506:
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4779  00468A  80CA               	bsf	4042,0,c	;volatile
  4780                           
  4781                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4782  00468C  82CA               	bsf	4042,1,c	;volatile
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;tmr_drv.c: 100: }
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;tmr_drv.c: 99: break;
  4789                           
  4790                           ;tmr_drv.c: 98: default:
  4791                           
  4792                           ;tmr_drv.c: 96: break;
  4793  00468E  D00B               	goto	l504
  4794  004690                     
  4795                           ; BSR set to: 0
  4796  004690  0100               	movlb	0	; () banked
  4797  004692  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4798                           
  4799                           ; Switch size 1, requested type "space"
  4800                           ; Number of cases is 3, Range of values is 1 to 16
  4801                           ; switch strategies available:
  4802                           ; Name         Instructions Cycles
  4803                           ; simple_byte           10     6 (average)
  4804                           ;	Chosen strategy is simple_byte
  4805  004694  0A01               	xorlw	1	; case 1
  4806  004696  B4D8               	btfsc	status,2,c
  4807  004698  D7F3               	goto	l503
  4808  00469A  0A05               	xorlw	5	; case 4
  4809  00469C  B4D8               	btfsc	status,2,c
  4810  00469E  D7F2               	goto	l505
  4811  0046A0  0A14               	xorlw	20	; case 16
  4812  0046A2  B4D8               	btfsc	status,2,c
  4813  0046A4  D7F2               	goto	l506
  4814  0046A6                     l504:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4818                           
  4819                           ; BSR set to: 0
  4820  0046A6  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4821  0046AA  0EFF               	movlw	255
  4822  0046AC  277F               	addwf	??_TmrBInit& (0+255),f,b
  4823  0046AE  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4824  0046B0  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4825  0046B2  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4826  0046B4  50CA               	movf	4042,w,c	;volatile
  4827  0046B6  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4828  0046B8  0B87               	andlw	-121
  4829  0046BA  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4830  0046BC  6ECA               	movwf	4042,c	;volatile
  4831                           
  4832                           ;tmr_drv.c: 104: break;
  4833  0046BE  0012               	return	
  4834  0046C0                     l511:
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4838  0046C0  9076               	bcf	3958,0,c	;volatile
  4839  0046C2  D001               	goto	L2
  4840  0046C4                     l513:
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4844  0046C4  8076               	bsf	3958,0,c	;volatile
  4845  0046C6                     L2:
  4846                           
  4847                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4848  0046C6  9276               	bcf	3958,1,c	;volatile
  4849                           
  4850                           ;tmr_drv.c: 120: break;
  4851  0046C8  D00D               	goto	l512
  4852  0046CA                     l514:
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4856  0046CA  8076               	bsf	3958,0,c	;volatile
  4857                           
  4858                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4859  0046CC  8276               	bsf	3958,1,c	;volatile
  4860                           
  4861                           ; BSR set to: 0
  4862                           ;tmr_drv.c: 129: }
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;tmr_drv.c: 128: break;
  4866                           
  4867                           ;tmr_drv.c: 127: default:
  4868                           
  4869                           ;tmr_drv.c: 125: break;
  4870  0046CE  D00A               	goto	l512
  4871  0046D0                     
  4872                           ; BSR set to: 0
  4873                           
  4874                           ; BSR set to: 0
  4875  0046D0  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4876                           
  4877                           ; Switch size 1, requested type "space"
  4878                           ; Number of cases is 3, Range of values is 1 to 16
  4879                           ; switch strategies available:
  4880                           ; Name         Instructions Cycles
  4881                           ; simple_byte           10     6 (average)
  4882                           ;	Chosen strategy is simple_byte
  4883  0046D2  0A01               	xorlw	1	; case 1
  4884  0046D4  B4D8               	btfsc	status,2,c
  4885  0046D6  D7F4               	goto	l511
  4886  0046D8  0A05               	xorlw	5	; case 4
  4887  0046DA  B4D8               	btfsc	status,2,c
  4888  0046DC  D7F3               	goto	l513
  4889  0046DE  0A14               	xorlw	20	; case 16
  4890  0046E0  B4D8               	btfsc	status,2,c
  4891  0046E2  D7F3               	goto	l514
  4892  0046E4                     l512:
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4896                           
  4897                           ; BSR set to: 0
  4898  0046E4  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4899  0046E8  0EFF               	movlw	255
  4900  0046EA  277F               	addwf	??_TmrBInit& (0+255),f,b
  4901  0046EC  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4902  0046EE  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4903  0046F0  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4904  0046F2  5076               	movf	3958,w,c	;volatile
  4905  0046F4  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4906  0046F6  0B87               	andlw	-121
  4907  0046F8  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4908  0046FA  6E76               	movwf	3958,c	;volatile
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;tmr_drv.c: 137: }
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;tmr_drv.c: 136: break;
  4915                           
  4916                           ;tmr_drv.c: 135: default:
  4917                           
  4918                           ;tmr_drv.c: 133: break;
  4919  0046FC  0012               	return	
  4920  0046FE                     l500:
  4921                           
  4922                           ; BSR set to: 0
  4923  0046FE  0100               	movlb	0	; () banked
  4924  004700  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4925                           
  4926                           ; Switch size 1, requested type "space"
  4927                           ; Number of cases is 2, Range of values is 2 to 4
  4928                           ; switch strategies available:
  4929                           ; Name         Instructions Cycles
  4930                           ; simple_byte            7     4 (average)
  4931                           ;	Chosen strategy is simple_byte
  4932  004702  0A02               	xorlw	2	; case 2
  4933  004704  B4D8               	btfsc	status,2,c
  4934  004706  D7C4               	goto	l502
  4935  004708  0A06               	xorlw	6	; case 4
  4936  00470A  A4D8               	btfss	status,2,c
  4937  00470C  0012               	return	
  4938  00470E  D7E0               	goto	l510
  4939  004710                     __end_of_TmrBInit:
  4940                           	opt stack 0
  4941                           tblptru	equ	0xFF8
  4942                           tblptrh	equ	0xFF7
  4943                           tblptrl	equ	0xFF6
  4944                           tablat	equ	0xFF5
  4945                           prodh	equ	0xFF4
  4946                           prodl	equ	0xFF3
  4947                           intcon	equ	0xFF2
  4948                           intcon2	equ	0xFF1
  4949                           intcon3	equ	0xFF0
  4950                           postinc0	equ	0xFEE
  4951                           wreg	equ	0xFE8
  4952                           postdec1	equ	0xFE5
  4953                           fsr1h	equ	0xFE2
  4954                           fsr1l	equ	0xFE1
  4955                           indf2	equ	0xFDF
  4956                           postinc2	equ	0xFDE
  4957                           postdec2	equ	0xFDD
  4958                           fsr2h	equ	0xFDA
  4959                           fsr2l	equ	0xFD9
  4960                           status	equ	0xFD8
  4961                           
  4962 ;; *************** function _Sch_MainScheduler *****************
  4963 ;; Defined at:
  4964 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;		None
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;		None
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  1    wreg      void 
  4971 ;; Registers used:
  4972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4982 ;;Total ram usage:        0 bytes
  4983 ;; Hardware stack levels used:    1
  4984 ;; Hardware stack levels required when called:   22
  4985 ;; This function calls:
  4986 ;;		_InitializeTasks
  4987 ;;		_ScheduleTasks
  4988 ;; This function is called by:
  4989 ;;		_main
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text13
  4994  005F50                     __ptext13:
  4995                           	opt stack 0
  4996  005F50                     _Sch_MainScheduler:
  4997                           	opt stack 8
  4998                           
  4999                           ;os_sched.c: 178: InitializeTasks();
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;incstack = 0
  5003  005F50  ECF0  F026         	call	_InitializeTasks	;wreg free
  5004                           
  5005                           ;os_sched.c: 180: SystemState = RunningState;
  5006  005F54  0E01               	movlw	1
  5007  005F56  0100               	movlb	0	; () banked
  5008  005F58  6FD9               	movwf	_SystemState& (0+255),b
  5009  005F5A                     
  5010                           ;os_sched.c: 188: {
  5011                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5012                           
  5013                           ; BSR set to: 0
  5014  005F5A  0102               	movlb	2	; () banked
  5015  005F5C  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5016  005F5E  A4D8               	btfss	status,2,c
  5017  005F60  D7FC               	goto	l790
  5018                           
  5019                           ; BSR set to: 2
  5020                           ;os_sched.c: 191: {
  5021                           ;os_sched.c: 196: ScheduleTasks();
  5022  005F62  ECF2  F016         	call	_ScheduleTasks	;wreg free
  5023                           
  5024                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5025  005F66  0E01               	movlw	1
  5026  005F68  0102               	movlb	2	; () banked
  5027  005F6A  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5028                           
  5029                           ; BSR set to: 2
  5030                           
  5031                           ; BSR set to: 2
  5032  005F6C  D7F6               	goto	l790
  5033  005F6E                     __end_of_Sch_MainScheduler:
  5034                           	opt stack 0
  5035                           tblptru	equ	0xFF8
  5036                           tblptrh	equ	0xFF7
  5037                           tblptrl	equ	0xFF6
  5038                           tablat	equ	0xFF5
  5039                           prodh	equ	0xFF4
  5040                           prodl	equ	0xFF3
  5041                           intcon	equ	0xFF2
  5042                           intcon2	equ	0xFF1
  5043                           intcon3	equ	0xFF0
  5044                           postinc0	equ	0xFEE
  5045                           wreg	equ	0xFE8
  5046                           postdec1	equ	0xFE5
  5047                           fsr1h	equ	0xFE2
  5048                           fsr1l	equ	0xFE1
  5049                           indf2	equ	0xFDF
  5050                           postinc2	equ	0xFDE
  5051                           postdec2	equ	0xFDD
  5052                           fsr2h	equ	0xFDA
  5053                           fsr2l	equ	0xFD9
  5054                           status	equ	0xFD8
  5055                           
  5056 ;; *************** function _ScheduleTasks *****************
  5057 ;; Defined at:
  5058 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;		None
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  ActiveTaskIn    1   87[BANK0 ] unsigned char 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5074 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5075 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5076 ;;Total ram usage:        5 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:   21
  5079 ;; This function calls:
  5080 ;;		_I2cSlv_MainTask
  5081 ;;		_Led_MainTask
  5082 ;;		_MdmHttp_MainTask
  5083 ;;		_Mdm_DrvMainFn
  5084 ;;		_Mdm_MainTask
  5085 ;;		_MyApp_Task
  5086 ;;		_Rtcm_MainTask
  5087 ;;		_Term_MainTask
  5088 ;;		_UsbDevice_MainTask
  5089 ;;		_Wdg_MainTask
  5090 ;; This function is called by:
  5091 ;;		_Sch_MainScheduler
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text14
  5096  002DE4                     __ptext14:
  5097                           	opt stack 0
  5098  002DE4                     _ScheduleTasks:
  5099                           	opt stack 8
  5100                           
  5101                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5102                           
  5103                           ; BSR set to: 2
  5104                           ;incstack = 0
  5105  002DE4  0E00               	movlw	0
  5106  002DE6  0100               	movlb	0	; () banked
  5107  002DE8  6FB7               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5108                           
  5109                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5110  002DEA  0E00               	movlw	0
  5111  002DEC  6FB7               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5112  002DEE                     l14061:
  5113                           
  5114                           ; BSR set to: 0
  5115  002DEE  0E3B               	movlw	low _TaskNumber
  5116  002DF0  6EF6               	movwf	tblptrl,c
  5117  002DF2                     	if	1	;There is more than 1 active tblptr byte
  5118  002DF2  0EFC               	movlw	high _TaskNumber
  5119  002DF4  6EF7               	movwf	tblptrh,c
  5120  002DF6                     	endif
  5121  002DF6                     	if	0	;There are less than 3 active tblptr bytes
  5122  002DF6                     	endif
  5123  002DF6  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5124  002DF8  6FB3               	movwf	??_ScheduleTasks& (0+255),b
  5125  002DFA  6BB4               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5126  002DFC  0009               	tblrd		*+
  5127  002DFE  50F5               	movf	tablat,w,c
  5128  002E00  5DB3               	subwf	??_ScheduleTasks& (0+255),w,b
  5129  002E02  0009               	tblrd		*+
  5130  002E04  50F5               	movf	tablat,w,c
  5131  002E06  59B4               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5132  002E08  B0D8               	btfsc	status,0,c
  5133  002E0A  0012               	return	
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;os_sched.c: 106: {
  5137                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5138                           
  5139                           ; BSR set to: 0
  5140                           
  5141                           ; BSR set to: 0
  5142  002E0C  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5143  002E0E  0D08               	mullw	8
  5144  002E10  0E03               	movlw	3
  5145  002E12  26F3               	addwf	prodl,f,c
  5146  002E14  0E00               	movlw	0
  5147  002E16  22F4               	addwfc	prodh,f,c
  5148  002E18  0E90               	movlw	low _TaskTable
  5149  002E1A  24F3               	addwf	prodl,w,c
  5150  002E1C  6ED9               	movwf	fsr2l,c
  5151  002E1E  0E05               	movlw	high _TaskTable
  5152  002E20  20F4               	addwfc	prodh,w,c
  5153  002E22  6EDA               	movwf	fsr2h,c
  5154  002E24  2ADE               	incf	postinc2,f,c
  5155  002E26  0E00               	movlw	0
  5156  002E28  22DD               	addwfc	postdec2,f,c
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5160  002E2A  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5161  002E2C  0D08               	mullw	8
  5162  002E2E  0E05               	movlw	5
  5163  002E30  26F3               	addwf	prodl,f,c
  5164  002E32  0E00               	movlw	0
  5165  002E34  22F4               	addwfc	prodh,f,c
  5166  002E36  0E90               	movlw	low _TaskTable
  5167  002E38  24F3               	addwf	prodl,w,c
  5168  002E3A  6ED9               	movwf	fsr2l,c
  5169  002E3C  0E05               	movlw	high _TaskTable
  5170  002E3E  20F4               	addwfc	prodh,w,c
  5171  002E40  6EDA               	movwf	fsr2h,c
  5172  002E42  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5173  002E44  0D08               	mullw	8
  5174  002E46  0E03               	movlw	3
  5175  002E48  26F3               	addwf	prodl,f,c
  5176  002E4A  0E00               	movlw	0
  5177  002E4C  22F4               	addwfc	prodh,f,c
  5178  002E4E  0E90               	movlw	low _TaskTable
  5179  002E50  24F3               	addwf	prodl,w,c
  5180  002E52  6EE1               	movwf	fsr1l,c
  5181  002E54  0E05               	movlw	high _TaskTable
  5182  002E56  20F4               	addwfc	prodh,w,c
  5183  002E58  6EE2               	movwf	fsr1h,c
  5184  002E5A  50DE               	movf	postinc2,w,c
  5185  002E5C  5CE6               	subwf	postinc1,w,c
  5186  002E5E  50DE               	movf	postinc2,w,c
  5187  002E60  58E6               	subwfb	postinc1,w,c
  5188  002E62  A0D8               	btfss	status,0,c
  5189  002E64  D04E               	goto	l775
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;os_sched.c: 111: {
  5193                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5194  002E66  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5195  002E68  0D08               	mullw	8
  5196  002E6A  0E03               	movlw	3
  5197  002E6C  26F3               	addwf	prodl,f,c
  5198  002E6E  0E00               	movlw	0
  5199  002E70  22F4               	addwfc	prodh,f,c
  5200  002E72  0E90               	movlw	low _TaskTable
  5201  002E74  24F3               	addwf	prodl,w,c
  5202  002E76  6ED9               	movwf	fsr2l,c
  5203  002E78  0E05               	movlw	high _TaskTable
  5204  002E7A  20F4               	addwfc	prodh,w,c
  5205  002E7C  6EDA               	movwf	fsr2h,c
  5206  002E7E  0E00               	movlw	0
  5207  002E80  6EDE               	movwf	postinc2,c
  5208  002E82  0E00               	movlw	0
  5209  002E84  6EDD               	movwf	postdec2,c
  5210                           
  5211                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5212  002E86  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5213  002E88  0D08               	mullw	8
  5214  002E8A  0E02               	movlw	2
  5215  002E8C  26F3               	addwf	prodl,f,c
  5216  002E8E  0E00               	movlw	0
  5217  002E90  22F4               	addwfc	prodh,f,c
  5218  002E92  0E90               	movlw	low _TaskTable
  5219  002E94  24F3               	addwf	prodl,w,c
  5220  002E96  6ED9               	movwf	fsr2l,c
  5221  002E98  0E05               	movlw	high _TaskTable
  5222  002E9A  20F4               	addwfc	prodh,w,c
  5223  002E9C  6EDA               	movwf	fsr2h,c
  5224  002E9E  0E01               	movlw	1
  5225  002EA0  6EDF               	movwf	indf2,c
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5229  002EA2  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5230  002EA4  0D08               	mullw	8
  5231  002EA6  0E90               	movlw	low _TaskTable
  5232  002EA8  24F3               	addwf	prodl,w,c
  5233  002EAA  6ED9               	movwf	fsr2l,c
  5234  002EAC  0E05               	movlw	high _TaskTable
  5235  002EAE  20F4               	addwfc	prodh,w,c
  5236  002EB0  6EDA               	movwf	fsr2h,c
  5237  002EB2  D801               	call	u13558
  5238  002EB4  D017               	goto	u13559
  5239  002EB6                     u13558:
  5240  002EB6  0005               	push	
  5241  002EB8  6EFA               	movwf	pclath,c
  5242  002EBA  50DE               	movf	postinc2,w,c
  5243  002EBC  6EFD               	movwf	tosl,c
  5244  002EBE  50DE               	movf	postinc2,w,c
  5245  002EC0  6EFE               	movwf	tosh,c
  5246  002EC2  50F8               	movf	tblptru,w,c
  5247  002EC4  6EFF               	movwf	tosu,c
  5248  002EC6  50FA               	movf	pclath,w,c
  5249  002EC8  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5250  002ECA  0D08               	mullw	8
  5251  002ECC  0E07               	movlw	7
  5252  002ECE  26F3               	addwf	prodl,f,c
  5253  002ED0  0E00               	movlw	0
  5254  002ED2  22F4               	addwfc	prodh,f,c
  5255  002ED4  0E90               	movlw	low _TaskTable
  5256  002ED6  24F3               	addwf	prodl,w,c
  5257  002ED8  6ED9               	movwf	fsr2l,c
  5258  002EDA  0E05               	movlw	high _TaskTable
  5259  002EDC  20F4               	addwfc	prodh,w,c
  5260  002EDE  6EDA               	movwf	fsr2h,c
  5261  002EE0  50DF               	movf	indf2,w,c
  5262  002EE2  0012               	return		;indir
  5263  002EE4                     u13559:
  5264                           
  5265                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5266  002EE4  0100               	movlb	0	; () banked
  5267  002EE6  51B7               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5268  002EE8  0D08               	mullw	8
  5269  002EEA  0E02               	movlw	2
  5270  002EEC  26F3               	addwf	prodl,f,c
  5271  002EEE  0E00               	movlw	0
  5272  002EF0  22F4               	addwfc	prodh,f,c
  5273  002EF2  0E90               	movlw	low _TaskTable
  5274  002EF4  24F3               	addwf	prodl,w,c
  5275  002EF6  6ED9               	movwf	fsr2l,c
  5276  002EF8  0E05               	movlw	high _TaskTable
  5277  002EFA  20F4               	addwfc	prodh,w,c
  5278  002EFC  6EDA               	movwf	fsr2h,c
  5279  002EFE  0E00               	movlw	0
  5280  002F00  6EDF               	movwf	indf2,c
  5281  002F02                     l775:
  5282                           
  5283                           ; BSR set to: 0
  5284                           
  5285                           ; BSR set to: 0
  5286                           
  5287                           ;os_sched.c: 117: else
  5288                           ;os_sched.c: 118: {
  5289                           
  5290                           ; BSR set to: 0
  5291  002F02  2BB7               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5292  002F04  D774               	goto	l14061
  5293  002F06                     __end_of_ScheduleTasks:
  5294                           	opt stack 0
  5295                           tosu	equ	0xFFF
  5296                           tosh	equ	0xFFE
  5297                           tosl	equ	0xFFD
  5298                           pclath	equ	0xFFA
  5299                           tblptru	equ	0xFF8
  5300                           tblptrh	equ	0xFF7
  5301                           tblptrl	equ	0xFF6
  5302                           tablat	equ	0xFF5
  5303                           prodh	equ	0xFF4
  5304                           prodl	equ	0xFF3
  5305                           intcon	equ	0xFF2
  5306                           intcon2	equ	0xFF1
  5307                           intcon3	equ	0xFF0
  5308                           postinc0	equ	0xFEE
  5309                           wreg	equ	0xFE8
  5310                           postinc1	equ	0xFE6
  5311                           postdec1	equ	0xFE5
  5312                           fsr1h	equ	0xFE2
  5313                           fsr1l	equ	0xFE1
  5314                           indf2	equ	0xFDF
  5315                           postinc2	equ	0xFDE
  5316                           postdec2	equ	0xFDD
  5317                           fsr2h	equ	0xFDA
  5318                           fsr2l	equ	0xFD9
  5319                           status	equ	0xFD8
  5320                           
  5321 ;; *************** function _InitializeTasks *****************
  5322 ;; Defined at:
  5323 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;		None
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  ActiveTaskIn    1   85[BANK0 ] unsigned char 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1    wreg      void 
  5330 ;; Registers used:
  5331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5339 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5340 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5341 ;;Total ram usage:        3 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:   21
  5344 ;; This function calls:
  5345 ;;		_I2cSlv_MainTask
  5346 ;;		_Led_MainTask
  5347 ;;		_MdmHttp_MainTask
  5348 ;;		_Mdm_DrvMainFn
  5349 ;;		_Mdm_MainTask
  5350 ;;		_MyApp_Task
  5351 ;;		_Rtcm_MainTask
  5352 ;;		_Term_MainTask
  5353 ;;		_UsbDevice_MainTask
  5354 ;;		_Wdg_MainTask
  5355 ;; This function is called by:
  5356 ;;		_Sch_MainScheduler
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text15
  5361  004DE0                     __ptext15:
  5362                           	opt stack 0
  5363  004DE0                     _InitializeTasks:
  5364                           	opt stack 8
  5365                           
  5366                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;incstack = 0
  5370  004DE0  0E00               	movlw	0
  5371  004DE2  0100               	movlb	0	; () banked
  5372  004DE4  6FB5               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5373                           
  5374                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5375  004DE6  0E00               	movlw	0
  5376  004DE8  6FB5               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5377  004DEA                     l14049:
  5378                           
  5379                           ; BSR set to: 0
  5380  004DEA  0E3B               	movlw	low _TaskNumber
  5381  004DEC  6EF6               	movwf	tblptrl,c
  5382  004DEE                     	if	1	;There is more than 1 active tblptr byte
  5383  004DEE  0EFC               	movlw	high _TaskNumber
  5384  004DF0  6EF7               	movwf	tblptrh,c
  5385  004DF2                     	endif
  5386  004DF2                     	if	0	;There are less than 3 active tblptr bytes
  5387  004DF2                     	endif
  5388  004DF2  51B5               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5389  004DF4  6FB3               	movwf	??_InitializeTasks& (0+255),b
  5390  004DF6  6BB4               	clrf	(??_InitializeTasks+1)& (0+255),b
  5391  004DF8  0009               	tblrd		*+
  5392  004DFA  50F5               	movf	tablat,w,c
  5393  004DFC  5DB3               	subwf	??_InitializeTasks& (0+255),w,b
  5394  004DFE  0009               	tblrd		*+
  5395  004E00  50F5               	movf	tablat,w,c
  5396  004E02  59B4               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5397  004E04  B0D8               	btfsc	status,0,c
  5398  004E06  0012               	return	
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;os_sched.c: 86: {
  5402                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5403                           
  5404                           ; BSR set to: 0
  5405                           
  5406                           ; BSR set to: 0
  5407  004E08  51B5               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5408  004E0A  0D08               	mullw	8
  5409  004E0C  0E90               	movlw	low _TaskTable
  5410  004E0E  24F3               	addwf	prodl,w,c
  5411  004E10  6ED9               	movwf	fsr2l,c
  5412  004E12  0E05               	movlw	high _TaskTable
  5413  004E14  20F4               	addwfc	prodh,w,c
  5414  004E16  6EDA               	movwf	fsr2h,c
  5415  004E18  D801               	call	u13518
  5416  004E1A  D017               	goto	u13519
  5417  004E1C                     u13518:
  5418  004E1C  0005               	push	
  5419  004E1E  6EFA               	movwf	pclath,c
  5420  004E20  50DE               	movf	postinc2,w,c
  5421  004E22  6EFD               	movwf	tosl,c
  5422  004E24  50DE               	movf	postinc2,w,c
  5423  004E26  6EFE               	movwf	tosh,c
  5424  004E28  50F8               	movf	tblptru,w,c
  5425  004E2A  6EFF               	movwf	tosu,c
  5426  004E2C  50FA               	movf	pclath,w,c
  5427  004E2E  51B5               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5428  004E30  0D08               	mullw	8
  5429  004E32  0E07               	movlw	7
  5430  004E34  26F3               	addwf	prodl,f,c
  5431  004E36  0E00               	movlw	0
  5432  004E38  22F4               	addwfc	prodh,f,c
  5433  004E3A  0E90               	movlw	low _TaskTable
  5434  004E3C  24F3               	addwf	prodl,w,c
  5435  004E3E  6ED9               	movwf	fsr2l,c
  5436  004E40  0E05               	movlw	high _TaskTable
  5437  004E42  20F4               	addwfc	prodh,w,c
  5438  004E44  6EDA               	movwf	fsr2h,c
  5439  004E46  50DF               	movf	indf2,w,c
  5440  004E48  0012               	return		;indir
  5441  004E4A                     u13519:
  5442  004E4A  0100               	movlb	0	; () banked
  5443  004E4C  2BB5               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5444  004E4E  D7CD               	goto	l14049
  5445  004E50                     __end_of_InitializeTasks:
  5446                           	opt stack 0
  5447                           tosu	equ	0xFFF
  5448                           tosh	equ	0xFFE
  5449                           tosl	equ	0xFFD
  5450                           pclath	equ	0xFFA
  5451                           tblptru	equ	0xFF8
  5452                           tblptrh	equ	0xFF7
  5453                           tblptrl	equ	0xFF6
  5454                           tablat	equ	0xFF5
  5455                           prodh	equ	0xFF4
  5456                           prodl	equ	0xFF3
  5457                           intcon	equ	0xFF2
  5458                           intcon2	equ	0xFF1
  5459                           intcon3	equ	0xFF0
  5460                           postinc0	equ	0xFEE
  5461                           wreg	equ	0xFE8
  5462                           postinc1	equ	0xFE6
  5463                           postdec1	equ	0xFE5
  5464                           fsr1h	equ	0xFE2
  5465                           fsr1l	equ	0xFE1
  5466                           indf2	equ	0xFDF
  5467                           postinc2	equ	0xFDE
  5468                           postdec2	equ	0xFDD
  5469                           fsr2h	equ	0xFDA
  5470                           fsr2l	equ	0xFD9
  5471                           status	equ	0xFD8
  5472                           
  5473 ;; *************** function _MyApp_Task *****************
  5474 ;; Defined at:
  5475 ;;		line 165 in file "../Source/c/04_App/app.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  Options         1    wreg     unsigned char 
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;  Options         1    0[COMRAM] unsigned char 
  5480 ;;  smsText        50    0[BANK1 ] unsigned char [50]
  5481 ;;  smsNumber      14   69[BANK1 ] unsigned char [14]
  5482 ;;  phone          13   50[BANK1 ] unsigned char [13]
  5483 ;;  cmpString       3   83[BANK1 ] unsigned char [3]
  5484 ;;  I2cTxBufferT    2   67[BANK1 ] unsigned char [2]
  5485 ;;  on              2   65[BANK1 ] unsigned char [2]
  5486 ;;  off             2   63[BANK1 ] unsigned char [2]
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  1    wreg      void 
  5489 ;; Registers used:
  5490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5497 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5499 ;;      Totals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5500 ;;Total ram usage:       86 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:   15
  5503 ;; This function calls:
  5504 ;;		_ClearBuffer
  5505 ;;		_Led_SetLedBlinkTime
  5506 ;;		_Mdm_GetSmsData
  5507 ;;		_Mdm_IsRinging
  5508 ;;		_Mdm_IsSmsReceived
  5509 ;;		_Mdm_RequestSmsData
  5510 ;;		_StringCompare
  5511 ;;		_Uart_WriteConstString
  5512 ;;		_blinkForSeconds
  5513 ;;		_initGprsModem
  5514 ;; This function is called by:
  5515 ;;		_InitializeTasks
  5516 ;;		_ScheduleTasks
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text16
  5521  001FFE                     __ptext16:
  5522                           	opt stack 0
  5523  001FFE                     _MyApp_Task:
  5524                           	opt stack 13
  5525                           
  5526                           ;app.c: 167: static uint8_t countRelay1 = 1;
  5527                           ;app.c: 168: static uint16_t countRelay2 = 1;
  5528                           ;app.c: 169: static bool isRelay1On = 0;
  5529                           ;app.c: 170: static bool isRelay2On = 0;
  5530                           ;app.c: 171: static uint8_t test = 0;
  5531                           ;app.c: 172: uint8_t off[2] = {((UINT8)(0x50)), 0x00};
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;incstack = 0
  5535  001FFE  C3C8  F13F         	movff	MyApp_Task@F8992,MyApp_Task@off
  5536  002002  C3C9  F140         	movff	MyApp_Task@F8992+1,MyApp_Task@off+1
  5537                           
  5538                           ;app.c: 173: uint8_t on[2] = {((UINT8)(0x50)), 0x1};
  5539  002006  C3C6  F141         	movff	MyApp_Task@F8995,MyApp_Task@on
  5540  00200A  C3C7  F142         	movff	MyApp_Task@F8995+1,MyApp_Task@on+1
  5541                           
  5542                           ;app.c: 176: UINT8 I2cTxBufferTest[] = {0x00, 0x00};
  5543  00200E  C320  F143         	movff	MyApp_Task@F8998,MyApp_Task@I2cTxBufferTest
  5544  002012  C321  F144         	movff	MyApp_Task@F8998+1,MyApp_Task@I2cTxBufferTest+1
  5545                           
  5546                           ;app.c: 177: static UINT8 I2cStsReady = 0u;
  5547                           ;app.c: 178: UINT8 phone[] = {'+', '3', '9', '3', '2', '0', '0', '2', '7', '6', '3', '1'
      +                          , '8'};
  5548  002016  EE24  F0E2         	lfsr	2,MyApp_Task@F9001
  5549  00201A  EE11  F032         	lfsr	1,MyApp_Task@phone
  5550  00201E  0E0C               	movlw	12
  5551  002020                     u13431:
  5552  002020  CFDB FFE3          	movff	plusw2,plusw1
  5553  002024  06E8               	decf	wreg,f,c
  5554  002026  E2FC               	bc	u13431
  5555                           
  5556                           ;app.c: 180: static uint16_t blickTicks = 0xFFFF;
  5557                           ;app.c: 181: static uint8_t blinkSeconds = 0;
  5558                           ;app.c: 183: uint8_t smsText[((UINT8)(50))];
  5559                           ;app.c: 184: uint8_t smsNumber[14];
  5560                           ;app.c: 185: uint8_t cmpString[] = {'c', 'a', 't'};
  5561  002028  C3C3  F153         	movff	MyApp_Task@F9008,MyApp_Task@cmpString
  5562  00202C  C3C4  F154         	movff	MyApp_Task@F9008+1,MyApp_Task@cmpString+1
  5563  002030  C3C5  F155         	movff	MyApp_Task@F9008+2,MyApp_Task@cmpString+2
  5564                           
  5565                           ;app.c: 187: switch (SystemState)
  5566  002034  D08A               	goto	l2580
  5567  002036                     
  5568                           ;app.c: 192: Led_SetLedBlinkTime(1u,100,900);
  5569  002036  0E00               	movlw	0
  5570  002038  0100               	movlb	0	; () banked
  5571  00203A  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5572  00203C  0E64               	movlw	100
  5573  00203E  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5574  002040  0E03               	movlw	3
  5575  002042  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5576  002044  0E84               	movlw	132
  5577  002046  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5578  002048  0E01               	movlw	1
  5579  00204A  ECBB  F029         	call	_Led_SetLedBlinkTime
  5580                           
  5581                           ;app.c: 193: break;
  5582  00204E  0012               	return	
  5583  002050                     
  5584                           ;app.c: 197: if (initGprsModem())
  5585  002050  EC02  F026         	call	_initGprsModem	;wreg free
  5586  002054  0900               	iorlw	0
  5587  002056  B4D8               	btfsc	status,2,c
  5588  002058  0012               	return	
  5589                           
  5590                           ;app.c: 198: {
  5591                           ;app.c: 200: if (Mdm_IsRinging())
  5592  00205A  ECEF  F02E         	call	_Mdm_IsRinging	;wreg free
  5593  00205E  0900               	iorlw	0
  5594  002060  B4D8               	btfsc	status,2,c
  5595  002062  D008               	goto	l2585
  5596                           
  5597                           ;app.c: 201: {
  5598                           ;app.c: 202: blickTicks = 0;
  5599  002064  0E00               	movlw	0
  5600  002066  0103               	movlb	3	; () banked
  5601  002068  6FFB               	movwf	(MyApp_Task@blickTicks+1)& (0+255),b
  5602  00206A  0E00               	movlw	0
  5603  00206C  6FFA               	movwf	MyApp_Task@blickTicks& (0+255),b
  5604                           
  5605                           ;app.c: 203: blinkSeconds = 5;
  5606  00206E  0E05               	movlw	5
  5607  002070  0101               	movlb	1	; () banked
  5608  002072  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5609  002074                     l2585:
  5610                           
  5611                           ;app.c: 204: }
  5612                           ;app.c: 205: if (Mdm_IsSmsReceived())
  5613                           
  5614                           ; BSR set to: 1
  5615  002074  ECDD  F02E         	call	_Mdm_IsSmsReceived	;wreg free
  5616  002078  0900               	iorlw	0
  5617  00207A  A4D8               	btfss	status,2,c
  5618                           
  5619                           ;app.c: 206: {
  5620                           ;app.c: 207: Mdm_RequestSmsData();
  5621  00207C  EC76  F030         	call	_Mdm_RequestSmsData	;wreg free
  5622                           
  5623                           ;app.c: 208: }
  5624                           ;app.c: 209: if (Mdm_GetSmsData(smsText, smsNumber) == SmsDataReady)
  5625  002080  0E00               	movlw	low MyApp_Task@smsText
  5626  002082  0100               	movlb	0	; () banked
  5627  002084  6F87               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  5628  002086  0E01               	movlw	high MyApp_Task@smsText
  5629  002088  6F88               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  5630  00208A  0E45               	movlw	low MyApp_Task@smsNumber
  5631  00208C  6F89               	movwf	Mdm_GetSmsData@MessageHeader& (0+255),b
  5632  00208E  0E01               	movlw	high MyApp_Task@smsNumber
  5633  002090  6F8A               	movwf	(Mdm_GetSmsData@MessageHeader+1)& (0+255),b
  5634  002092  EC42  F026         	call	_Mdm_GetSmsData	;wreg free
  5635  002096  06E8               	decf	wreg,f,c
  5636  002098  A4D8               	btfss	status,2,c
  5637  00209A  D04D               	goto	l2587
  5638                           
  5639                           ;app.c: 210: {
  5640                           ;app.c: 211: blickTicks = 0;
  5641  00209C  0E00               	movlw	0
  5642  00209E  0103               	movlb	3	; () banked
  5643  0020A0  6FFB               	movwf	(MyApp_Task@blickTicks+1)& (0+255),b
  5644  0020A2  0E00               	movlw	0
  5645  0020A4  6FFA               	movwf	MyApp_Task@blickTicks& (0+255),b
  5646                           
  5647                           ;app.c: 212: blinkSeconds = 3;
  5648  0020A6  0E03               	movlw	3
  5649  0020A8  0101               	movlb	1	; () banked
  5650  0020AA  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5651                           
  5652                           ; BSR set to: 1
  5653                           ;app.c: 213: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  5654  0020AC  0E3A               	movlw	low STR_30
  5655  0020AE  0100               	movlb	0	; () banked
  5656  0020B0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  5657  0020B2  0EFF               	movlw	high STR_30
  5658  0020B4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  5659  0020B6  0E01               	movlw	1
  5660  0020B8  EC1A  F02C         	call	_Uart_WriteConstString
  5661                           
  5662                           ;app.c: 215: if (StringCompare(smsNumber, phone, 14))
  5663  0020BC  0E45               	movlw	low MyApp_Task@smsNumber
  5664  0020BE  0100               	movlb	0	; () banked
  5665  0020C0  6F7D               	movwf	StringCompare@String1& (0+255),b
  5666  0020C2  0E01               	movlw	high MyApp_Task@smsNumber
  5667  0020C4  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
  5668  0020C6  0E32               	movlw	low MyApp_Task@phone
  5669  0020C8  6F7F               	movwf	StringCompare@String2& (0+255),b
  5670  0020CA  0E01               	movlw	high MyApp_Task@phone
  5671  0020CC  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
  5672  0020CE  0E00               	movlw	0
  5673  0020D0  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
  5674  0020D2  0E0E               	movlw	14
  5675  0020D4  6F81               	movwf	StringCompare@Len& (0+255),b
  5676  0020D6  EC38  F02A         	call	_StringCompare	;wreg free
  5677  0020DA  0900               	iorlw	0
  5678  0020DC  B4D8               	btfsc	status,2,c
  5679  0020DE  D015               	goto	l2589
  5680                           
  5681                           ;app.c: 216: {
  5682                           ;app.c: 217: if (StringCompare(smsText, cmpString, sizeof(cmpString)))
  5683  0020E0  0E00               	movlw	low MyApp_Task@smsText
  5684  0020E2  0100               	movlb	0	; () banked
  5685  0020E4  6F7D               	movwf	StringCompare@String1& (0+255),b
  5686  0020E6  0E01               	movlw	high MyApp_Task@smsText
  5687  0020E8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
  5688  0020EA  0E53               	movlw	low MyApp_Task@cmpString
  5689  0020EC  6F7F               	movwf	StringCompare@String2& (0+255),b
  5690  0020EE  0E01               	movlw	high MyApp_Task@cmpString
  5691  0020F0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
  5692  0020F2  0E00               	movlw	0
  5693  0020F4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
  5694  0020F6  0E03               	movlw	3
  5695  0020F8  6F81               	movwf	StringCompare@Len& (0+255),b
  5696  0020FA  EC38  F02A         	call	_StringCompare	;wreg free
  5697  0020FE  0900               	iorlw	0
  5698  002100  B4D8               	btfsc	status,2,c
  5699  002102  D003               	goto	l2589
  5700                           
  5701                           ;app.c: 218: {
  5702                           ;app.c: 219: blinkSeconds = 6;
  5703  002104  0E06               	movlw	6
  5704  002106  0101               	movlb	1	; () banked
  5705  002108  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5706  00210A                     l2589:
  5707                           
  5708                           ;app.c: 220: }
  5709                           ;app.c: 221: }
  5710                           ;app.c: 222: ClearBuffer(smsText, sizeof(smsText));
  5711                           
  5712                           ; BSR set to: 1
  5713                           
  5714                           ; BSR set to: 1
  5715  00210A  0E00               	movlw	low MyApp_Task@smsText
  5716  00210C  0100               	movlb	0	; () banked
  5717  00210E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
  5718  002110  0E01               	movlw	high MyApp_Task@smsText
  5719  002112  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
  5720  002114  0E00               	movlw	0
  5721  002116  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
  5722  002118  0E32               	movlw	50
  5723  00211A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
  5724  00211C  EC6F  F02D         	call	_ClearBuffer	;wreg free
  5725                           
  5726                           ;app.c: 223: ClearBuffer(smsNumber, 14);
  5727  002120  0E45               	movlw	low MyApp_Task@smsNumber
  5728  002122  0100               	movlb	0	; () banked
  5729  002124  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
  5730  002126  0E01               	movlw	high MyApp_Task@smsNumber
  5731  002128  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
  5732  00212A  0E00               	movlw	0
  5733  00212C  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
  5734  00212E  0E0E               	movlw	14
  5735  002130  6F7F               	movwf	ClearBuffer@Len& (0+255),b
  5736  002132  EC6F  F02D         	call	_ClearBuffer	;wreg free
  5737  002136                     l2587:
  5738                           
  5739                           ;app.c: 224: }
  5740                           ;app.c: 225: blinkForSeconds(blinkSeconds, &blickTicks);
  5741  002136  0EFA               	movlw	low MyApp_Task@blickTicks
  5742  002138  0100               	movlb	0	; () banked
  5743  00213A  6F93               	movwf	blinkForSeconds@blickTicks& (0+255),b
  5744  00213C  0E03               	movlw	high MyApp_Task@blickTicks
  5745  00213E  6F94               	movwf	(blinkForSeconds@blickTicks+1)& (0+255),b
  5746  002140  0101               	movlb	1	; () banked
  5747  002142  51D3               	movf	MyApp_Task@blinkSeconds& (0+255),w,b
  5748  002144  EC35  F02D         	call	_blinkForSeconds
  5749                           
  5750                           ;app.c: 232: }
  5751                           
  5752                           ;app.c: 231: break;
  5753                           
  5754                           ;app.c: 230: default:
  5755                           
  5756                           ;app.c: 226: }
  5757                           ;app.c: 227: break;
  5758  002148  0012               	return	
  5759  00214A                     l2580:
  5760  00214A  0100               	movlb	0	; () banked
  5761  00214C  51D9               	movf	_SystemState& (0+255),w,b
  5762                           
  5763                           ; Switch size 1, requested type "space"
  5764                           ; Number of cases is 2, Range of values is 0 to 1
  5765                           ; switch strategies available:
  5766                           ; Name         Instructions Cycles
  5767                           ; simple_byte            7     4 (average)
  5768                           ;	Chosen strategy is simple_byte
  5769  00214E  0A00               	xorlw	0	; case 0
  5770  002150  B4D8               	btfsc	status,2,c
  5771  002152  D771               	goto	l2581
  5772  002154  0A01               	xorlw	1	; case 1
  5773  002156  A4D8               	btfss	status,2,c
  5774  002158  0012               	return	
  5775  00215A  D77A               	goto	l2583
  5776  00215C                     __end_of_MyApp_Task:
  5777                           	opt stack 0
  5778                           tosu	equ	0xFFF
  5779                           tosh	equ	0xFFE
  5780                           tosl	equ	0xFFD
  5781                           pclath	equ	0xFFA
  5782                           tblptru	equ	0xFF8
  5783                           tblptrh	equ	0xFF7
  5784                           tblptrl	equ	0xFF6
  5785                           tablat	equ	0xFF5
  5786                           prodh	equ	0xFF4
  5787                           prodl	equ	0xFF3
  5788                           intcon	equ	0xFF2
  5789                           intcon2	equ	0xFF1
  5790                           intcon3	equ	0xFF0
  5791                           postinc0	equ	0xFEE
  5792                           wreg	equ	0xFE8
  5793                           postinc1	equ	0xFE6
  5794                           postdec1	equ	0xFE5
  5795                           plusw1	equ	0xFE3
  5796                           fsr1h	equ	0xFE2
  5797                           fsr1l	equ	0xFE1
  5798                           indf2	equ	0xFDF
  5799                           postinc2	equ	0xFDE
  5800                           postdec2	equ	0xFDD
  5801                           plusw2	equ	0xFDB
  5802                           fsr2h	equ	0xFDA
  5803                           fsr2l	equ	0xFD9
  5804                           status	equ	0xFD8
  5805                           
  5806 ;; *************** function _Term_MainTask *****************
  5807 ;; Defined at:
  5808 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  Options         1    wreg     unsigned char 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;  Options         1    0[COMRAM] unsigned char 
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  1    wreg      void 
  5815 ;; Registers used:
  5816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5826 ;;Total ram usage:        0 bytes
  5827 ;; Hardware stack levels used:    1
  5828 ;; Hardware stack levels required when called:   17
  5829 ;; This function calls:
  5830 ;;		_Term_MainSm
  5831 ;; This function is called by:
  5832 ;;		_InitializeTasks
  5833 ;;		_ScheduleTasks
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           	psect	text17
  5838  005FC2                     __ptext17:
  5839                           	opt stack 0
  5840  005FC2                     _Term_MainTask:
  5841                           	opt stack 11
  5842                           
  5843                           ;term.c: 847: switch (SystemState)
  5844                           
  5845                           ;incstack = 0
  5846  005FC2  D003               	goto	l2440
  5847  005FC4                     
  5848                           ;term.c: 858: Term_MainSm();
  5849  005FC4  EC5B  F008         	call	_Term_MainSm	;wreg free
  5850                           
  5851                           ;term.c: 865: }
  5852                           
  5853                           ;term.c: 864: break;
  5854                           
  5855                           ;term.c: 863: default:
  5856                           
  5857                           ;term.c: 860: break;
  5858  005FC8  0012               	return	
  5859  005FCA                     l2440:
  5860  005FCA  0100               	movlb	0	; () banked
  5861  005FCC  51D9               	movf	_SystemState& (0+255),w,b
  5862                           
  5863                           ; Switch size 1, requested type "space"
  5864                           ; Number of cases is 2, Range of values is 0 to 1
  5865                           ; switch strategies available:
  5866                           ; Name         Instructions Cycles
  5867                           ; simple_byte            7     4 (average)
  5868                           ;	Chosen strategy is simple_byte
  5869  005FCE  0A00               	xorlw	0	; case 0
  5870  005FD0  B4D8               	btfsc	status,2,c
  5871  005FD2  0012               	return	
  5872  005FD4  0A01               	xorlw	1	; case 1
  5873  005FD6  A4D8               	btfss	status,2,c
  5874  005FD8  0012               	return	
  5875  005FDA  D7F4               	goto	l2443
  5876  005FDC                     __end_of_Term_MainTask:
  5877                           	opt stack 0
  5878                           tosu	equ	0xFFF
  5879                           tosh	equ	0xFFE
  5880                           tosl	equ	0xFFD
  5881                           pclath	equ	0xFFA
  5882                           tblptru	equ	0xFF8
  5883                           tblptrh	equ	0xFF7
  5884                           tblptrl	equ	0xFF6
  5885                           tablat	equ	0xFF5
  5886                           prodh	equ	0xFF4
  5887                           prodl	equ	0xFF3
  5888                           intcon	equ	0xFF2
  5889                           intcon2	equ	0xFF1
  5890                           intcon3	equ	0xFF0
  5891                           postinc0	equ	0xFEE
  5892                           wreg	equ	0xFE8
  5893                           postinc1	equ	0xFE6
  5894                           postdec1	equ	0xFE5
  5895                           plusw1	equ	0xFE3
  5896                           fsr1h	equ	0xFE2
  5897                           fsr1l	equ	0xFE1
  5898                           indf2	equ	0xFDF
  5899                           postinc2	equ	0xFDE
  5900                           postdec2	equ	0xFDD
  5901                           plusw2	equ	0xFDB
  5902                           fsr2h	equ	0xFDA
  5903                           fsr2l	equ	0xFD9
  5904                           status	equ	0xFD8
  5905                           
  5906 ;; *************** function _Rtcm_MainTask *****************
  5907 ;; Defined at:
  5908 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  Options         1    wreg     unsigned char 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  Options         1    0[COMRAM] unsigned char 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  1    wreg      void 
  5915 ;; Registers used:
  5916 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5926 ;;Total ram usage:        0 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:   14
  5929 ;; This function calls:
  5930 ;;		_Rtcc_AlarmConfig
  5931 ;;		_Rtcc_LockRtc
  5932 ;;		_Rtcc_RtcConfig
  5933 ;;		_Rtcc_SetRtcStatus
  5934 ;;		_Rtcc_UnlockRtc
  5935 ;;		_Rtcm_GetRtccDate
  5936 ;;		_Rtcm_SetRtccDate
  5937 ;; This function is called by:
  5938 ;;		_InitializeTasks
  5939 ;;		_ScheduleTasks
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text18
  5944  00495E                     __ptext18:
  5945                           	opt stack 0
  5946  00495E                     _Rtcm_MainTask:
  5947                           	opt stack 14
  5948                           
  5949                           ;rtcm.c: 101: switch (SystemState)
  5950                           
  5951                           ;incstack = 0
  5952  00495E  D03D               	goto	l2170
  5953  004960                     l2171:
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  5957  004960  86CD               	bsf	4045,3,c	;volatile
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  5961  004962  0E00               	movlw	0
  5962  004964  0103               	movlb	3	; () banked
  5963  004966  6FB4               	movwf	_RtcConfig& (0+255),b
  5964                           
  5965                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  5966  004968  0E00               	movlw	0
  5967  00496A  6FB5               	movwf	(_RtcConfig+1)& (0+255),b
  5968                           
  5969                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  5970  00496C  0E01               	movlw	1
  5971  00496E  6FB6               	movwf	(_RtcConfig+2)& (0+255),b
  5972                           
  5973                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  5974  004970  0E01               	movlw	1
  5975  004972  6FB7               	movwf	(_RtcConfig+3)& (0+255),b
  5976                           
  5977                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  5978  004974  0E01               	movlw	1
  5979  004976  6FB0               	movwf	_AlCfg& (0+255),b
  5980                           
  5981                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  5982  004978  0E01               	movlw	1
  5983  00497A  6FB1               	movwf	(_AlCfg+1)& (0+255),b
  5984                           
  5985                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  5986  00497C  0E01               	movlw	1
  5987  00497E  6FB2               	movwf	(_AlCfg+2)& (0+255),b
  5988                           
  5989                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  5990  004980  0E00               	movlw	0
  5991  004982  6FB3               	movwf	(_AlCfg+3)& (0+255),b
  5992                           
  5993                           ; BSR set to: 3
  5994                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  5995  004984  EC66  F030         	call	_Rtcc_UnlockRtc	;wreg free
  5996                           
  5997                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  5998  004988  0EB4               	movlw	low _RtcConfig
  5999  00498A  0100               	movlb	0	; () banked
  6000  00498C  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6001  00498E  0E03               	movlw	high _RtcConfig
  6002  004990  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6003  004992  EC52  F022         	call	_Rtcc_RtcConfig	;wreg free
  6004                           
  6005                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6006  004996  0EB0               	movlw	low _AlCfg
  6007  004998  0100               	movlb	0	; () banked
  6008  00499A  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6009  00499C  0E03               	movlw	high _AlCfg
  6010  00499E  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6011  0049A0  EC5E  F027         	call	_Rtcc_AlarmConfig	;wreg free
  6012                           
  6013                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6014  0049A4  0E01               	movlw	1
  6015  0049A6  EC1E  F030         	call	_Rtcc_SetRtcStatus
  6016                           
  6017                           ;rtcm.c: 127: Rtcc_LockRtc();
  6018  0049AA  EC6E  F030         	call	_Rtcc_LockRtc	;wreg free
  6019                           
  6020                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6021  0049AE  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6022  0049B2  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6023  0049B6  0E07               	movlw	7
  6024  0049B8                     u9421:
  6025  0049B8  CFDB FFEB          	movff	plusw2,plusw0
  6026  0049BC  06E8               	decf	wreg,f,c
  6027  0049BE  E2FC               	bc	u9421
  6028  0049C0  EC91  F029         	call	_Rtcm_SetRtccDate	;wreg free
  6029                           
  6030                           ;rtcm.c: 154: break;
  6031  0049C4  0012               	return	
  6032  0049C6                     
  6033                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6034  0049C6  ECC7  F027         	call	_Rtcm_GetRtccDate	;wreg free
  6035  0049CA  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6036  0049CE  0E07               	movlw	7
  6037  0049D0                     u9431:
  6038  0049D0  CFEB FFDB          	movff	plusw0,plusw2
  6039  0049D4  06E8               	decf	wreg,f,c
  6040  0049D6  E2FC               	bc	u9431
  6041                           
  6042                           ;rtcm.c: 165: }
  6043                           
  6044                           ;rtcm.c: 164: break;
  6045                           
  6046                           ;rtcm.c: 163: default:
  6047                           
  6048                           ;rtcm.c: 160: break;
  6049  0049D8  0012               	return	
  6050  0049DA                     l2170:
  6051  0049DA  0100               	movlb	0	; () banked
  6052  0049DC  51D9               	movf	_SystemState& (0+255),w,b
  6053                           
  6054                           ; Switch size 1, requested type "space"
  6055                           ; Number of cases is 2, Range of values is 0 to 1
  6056                           ; switch strategies available:
  6057                           ; Name         Instructions Cycles
  6058                           ; simple_byte            7     4 (average)
  6059                           ;	Chosen strategy is simple_byte
  6060  0049DE  0A00               	xorlw	0	; case 0
  6061  0049E0  B4D8               	btfsc	status,2,c
  6062  0049E2  D7BE               	goto	l2171
  6063  0049E4  0A01               	xorlw	1	; case 1
  6064  0049E6  A4D8               	btfss	status,2,c
  6065  0049E8  0012               	return	
  6066  0049EA  D7ED               	goto	l2173
  6067  0049EC                     __end_of_Rtcm_MainTask:
  6068                           	opt stack 0
  6069                           tosu	equ	0xFFF
  6070                           tosh	equ	0xFFE
  6071                           tosl	equ	0xFFD
  6072                           pclath	equ	0xFFA
  6073                           tblptru	equ	0xFF8
  6074                           tblptrh	equ	0xFF7
  6075                           tblptrl	equ	0xFF6
  6076                           tablat	equ	0xFF5
  6077                           prodh	equ	0xFF4
  6078                           prodl	equ	0xFF3
  6079                           intcon	equ	0xFF2
  6080                           intcon2	equ	0xFF1
  6081                           intcon3	equ	0xFF0
  6082                           postinc0	equ	0xFEE
  6083                           plusw0	equ	0xFEB
  6084                           wreg	equ	0xFE8
  6085                           postinc1	equ	0xFE6
  6086                           postdec1	equ	0xFE5
  6087                           plusw1	equ	0xFE3
  6088                           fsr1h	equ	0xFE2
  6089                           fsr1l	equ	0xFE1
  6090                           indf2	equ	0xFDF
  6091                           postinc2	equ	0xFDE
  6092                           postdec2	equ	0xFDD
  6093                           plusw2	equ	0xFDB
  6094                           fsr2h	equ	0xFDA
  6095                           fsr2l	equ	0xFD9
  6096                           status	equ	0xFD8
  6097                           
  6098 ;; *************** function _Led_MainTask *****************
  6099 ;; Defined at:
  6100 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  Options         1    wreg     unsigned char 
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  Options         1    0[COMRAM] unsigned char 
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  1    wreg      void 
  6107 ;; Registers used:
  6108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6116 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6117 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6118 ;;Total ram usage:        1 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:   14
  6121 ;; This function calls:
  6122 ;;		_LedStateMachine
  6123 ;; This function is called by:
  6124 ;;		_InitializeTasks
  6125 ;;		_ScheduleTasks
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text19
  6130  0039C6                     __ptext19:
  6131                           	opt stack 0
  6132  0039C6                     _Led_MainTask:
  6133                           	opt stack 14
  6134                           
  6135                           ;led.c: 300: switch (SystemState)
  6136                           
  6137                           ;incstack = 0
  6138  0039C6  D05C               	goto	l2084
  6139  0039C8                     l2085:
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6143  0039C8  9895               	bcf	3989,4,c	;volatile
  6144                           
  6145                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6146  0039CA  9A95               	bcf	3989,5,c	;volatile
  6147                           
  6148                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6149  0039CC  9C95               	bcf	3989,6,c	;volatile
  6150                           
  6151                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6152  0039CE  9883               	bcf	3971,4,c	;volatile
  6153                           
  6154                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6155  0039D0  9A83               	bcf	3971,5,c	;volatile
  6156                           
  6157                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6158  0039D2  9C83               	bcf	3971,6,c	;volatile
  6159                           
  6160                           ;led.c: 311: break;
  6161  0039D4  0012               	return	
  6162  0039D6                     
  6163                           ; BSR set to: 0
  6164                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6165                           
  6166                           ; BSR set to: 0
  6167  0039D6  0EFB               	movlw	low _Led1Sts
  6168  0039D8  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6169  0039DA  0E01               	movlw	high _Led1Sts
  6170  0039DC  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6171  0039DE  0EFA               	movlw	low _Led1OutSts
  6172  0039E0  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6173  0039E2  0E01               	movlw	high _Led1OutSts
  6174  0039E4  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6175  0039E6  0E6E               	movlw	low _Led1Blink
  6176  0039E8  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6177  0039EA  0E03               	movlw	high _Led1Blink
  6178  0039EC  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6179  0039EE  0E92               	movlw	low _Led1Pulse
  6180  0039F0  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6181  0039F2  0E03               	movlw	high _Led1Pulse
  6182  0039F4  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6183  0039F6  0E01               	movlw	1
  6184  0039F8  ECAD  F021         	call	_LedStateMachine
  6185  0039FC  0100               	movlb	0	; () banked
  6186  0039FE  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6187  003A00  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6188  003A02  5083               	movf	3971,w,c	;volatile
  6189  003A04  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6190  003A06  0BEF               	andlw	-17
  6191  003A08  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6192  003A0A  6E83               	movwf	3971,c	;volatile
  6193                           
  6194                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6195  003A0C  0EF9               	movlw	low _Led2Sts
  6196  003A0E  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6197  003A10  0E01               	movlw	high _Led2Sts
  6198  003A12  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6199  003A14  0EF8               	movlw	low _Led2OutSts
  6200  003A16  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6201  003A18  0E01               	movlw	high _Led2OutSts
  6202  003A1A  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6203  003A1C  0E65               	movlw	low _Led2Blink
  6204  003A1E  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6205  003A20  0E03               	movlw	high _Led2Blink
  6206  003A22  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6207  003A24  0E8C               	movlw	low _Led2Pulse
  6208  003A26  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6209  003A28  0E03               	movlw	high _Led2Pulse
  6210  003A2A  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6211  003A2C  0E02               	movlw	2
  6212  003A2E  ECAD  F021         	call	_LedStateMachine
  6213  003A32  0100               	movlb	0	; () banked
  6214  003A34  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6215  003A36  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6216  003A38  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6217  003A3A  5083               	movf	3971,w,c	;volatile
  6218  003A3C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6219  003A3E  0BDF               	andlw	-33
  6220  003A40  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6221  003A42  6E83               	movwf	3971,c	;volatile
  6222                           
  6223                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6224  003A44  0EF7               	movlw	low _Led3Sts
  6225  003A46  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6226  003A48  0E01               	movlw	high _Led3Sts
  6227  003A4A  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6228  003A4C  0EF6               	movlw	low _Led3OutSts
  6229  003A4E  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6230  003A50  0E01               	movlw	high _Led3OutSts
  6231  003A52  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6232  003A54  0E5C               	movlw	low _Led3Blink
  6233  003A56  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6234  003A58  0E03               	movlw	high _Led3Blink
  6235  003A5A  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6236  003A5C  0E86               	movlw	low _Led3Pulse
  6237  003A5E  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6238  003A60  0E03               	movlw	high _Led3Pulse
  6239  003A62  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6240  003A64  0E03               	movlw	3
  6241  003A66  ECAD  F021         	call	_LedStateMachine
  6242  003A6A  0100               	movlb	0	; () banked
  6243  003A6C  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6244  003A6E  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6245  003A70  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6246  003A72  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6247  003A74  5083               	movf	3971,w,c	;volatile
  6248  003A76  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6249  003A78  0BBF               	andlw	-65
  6250  003A7A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6251  003A7C  6E83               	movwf	3971,c	;volatile
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;led.c: 326: }
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;led.c: 325: break;
  6258                           
  6259                           ;led.c: 324: default:
  6260                           
  6261                           ;led.c: 321: break;
  6262  003A7E  0012               	return	
  6263  003A80                     l2084:
  6264                           
  6265                           ; BSR set to: 0
  6266  003A80  0100               	movlb	0	; () banked
  6267  003A82  51D9               	movf	_SystemState& (0+255),w,b
  6268                           
  6269                           ; Switch size 1, requested type "space"
  6270                           ; Number of cases is 2, Range of values is 0 to 1
  6271                           ; switch strategies available:
  6272                           ; Name         Instructions Cycles
  6273                           ; simple_byte            7     4 (average)
  6274                           ;	Chosen strategy is simple_byte
  6275  003A84  0A00               	xorlw	0	; case 0
  6276  003A86  B4D8               	btfsc	status,2,c
  6277  003A88  D79F               	goto	l2085
  6278  003A8A  0A01               	xorlw	1	; case 1
  6279  003A8C  A4D8               	btfss	status,2,c
  6280  003A8E  0012               	return	
  6281  003A90  D7A2               	goto	l2087
  6282  003A92                     __end_of_Led_MainTask:
  6283                           	opt stack 0
  6284                           tosu	equ	0xFFF
  6285                           tosh	equ	0xFFE
  6286                           tosl	equ	0xFFD
  6287                           pclath	equ	0xFFA
  6288                           tblptru	equ	0xFF8
  6289                           tblptrh	equ	0xFF7
  6290                           tblptrl	equ	0xFF6
  6291                           tablat	equ	0xFF5
  6292                           prodh	equ	0xFF4
  6293                           prodl	equ	0xFF3
  6294                           intcon	equ	0xFF2
  6295                           intcon2	equ	0xFF1
  6296                           intcon3	equ	0xFF0
  6297                           postinc0	equ	0xFEE
  6298                           plusw0	equ	0xFEB
  6299                           wreg	equ	0xFE8
  6300                           postinc1	equ	0xFE6
  6301                           postdec1	equ	0xFE5
  6302                           plusw1	equ	0xFE3
  6303                           fsr1h	equ	0xFE2
  6304                           fsr1l	equ	0xFE1
  6305                           indf2	equ	0xFDF
  6306                           postinc2	equ	0xFDE
  6307                           postdec2	equ	0xFDD
  6308                           plusw2	equ	0xFDB
  6309                           fsr2h	equ	0xFDA
  6310                           fsr2l	equ	0xFD9
  6311                           status	equ	0xFD8
  6312                           
  6313 ;; *************** function _UsbDevice_MainTask *****************
  6314 ;; Defined at:
  6315 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  Options         1    wreg     unsigned char 
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;  Options         1    0[COMRAM] unsigned char 
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  1    wreg      void 
  6322 ;; Registers used:
  6323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6333 ;;Total ram usage:        0 bytes
  6334 ;; Hardware stack levels used:    1
  6335 ;; Hardware stack levels required when called:   20
  6336 ;; This function calls:
  6337 ;;		_CDCTxService
  6338 ;;		_USBDeviceInit
  6339 ;;		_USBDeviceTasks
  6340 ;; This function is called by:
  6341 ;;		_InitializeTasks
  6342 ;;		_ScheduleTasks
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text20
  6347  005D96                     __ptext20:
  6348                           	opt stack 0
  6349  005D96                     _UsbDevice_MainTask:
  6350                           	opt stack 8
  6351                           
  6352                           ;usb_device_mgr.c: 74: switch (SystemState)
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;incstack = 0
  6356  005D96  D008               	goto	l1977
  6357  005D98                     
  6358                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6359  005D98  EC08  F012         	call	_USBDeviceInit	;wreg free
  6360                           
  6361                           ;usb_device_mgr.c: 80: ;
  6362                           ;usb_device_mgr.c: 81: break;
  6363  005D9C  0012               	return	
  6364  005D9E                     
  6365                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6366  005D9E  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6367                           
  6368                           ;usb_device_mgr.c: 90: CDCTxService();
  6369  005DA2  EC55  F013         	call	_CDCTxService	;wreg free
  6370                           
  6371                           ;usb_device_mgr.c: 101: }
  6372                           
  6373                           ;usb_device_mgr.c: 100: break;
  6374                           
  6375                           ;usb_device_mgr.c: 99: default:
  6376                           
  6377                           ;usb_device_mgr.c: 96: break;
  6378  005DA6  0012               	return	
  6379  005DA8                     l1977:
  6380  005DA8  0100               	movlb	0	; () banked
  6381  005DAA  51D9               	movf	_SystemState& (0+255),w,b
  6382                           
  6383                           ; Switch size 1, requested type "space"
  6384                           ; Number of cases is 2, Range of values is 0 to 1
  6385                           ; switch strategies available:
  6386                           ; Name         Instructions Cycles
  6387                           ; simple_byte            7     4 (average)
  6388                           ;	Chosen strategy is simple_byte
  6389  005DAC  0A00               	xorlw	0	; case 0
  6390  005DAE  B4D8               	btfsc	status,2,c
  6391  005DB0  D7F3               	goto	l1978
  6392  005DB2  0A01               	xorlw	1	; case 1
  6393  005DB4  A4D8               	btfss	status,2,c
  6394  005DB6  0012               	return	
  6395  005DB8  D7F2               	goto	l1980
  6396  005DBA                     __end_of_UsbDevice_MainTask:
  6397                           	opt stack 0
  6398                           tosu	equ	0xFFF
  6399                           tosh	equ	0xFFE
  6400                           tosl	equ	0xFFD
  6401                           pclath	equ	0xFFA
  6402                           tblptru	equ	0xFF8
  6403                           tblptrh	equ	0xFF7
  6404                           tblptrl	equ	0xFF6
  6405                           tablat	equ	0xFF5
  6406                           prodh	equ	0xFF4
  6407                           prodl	equ	0xFF3
  6408                           intcon	equ	0xFF2
  6409                           intcon2	equ	0xFF1
  6410                           intcon3	equ	0xFF0
  6411                           postinc0	equ	0xFEE
  6412                           plusw0	equ	0xFEB
  6413                           wreg	equ	0xFE8
  6414                           postinc1	equ	0xFE6
  6415                           postdec1	equ	0xFE5
  6416                           plusw1	equ	0xFE3
  6417                           fsr1h	equ	0xFE2
  6418                           fsr1l	equ	0xFE1
  6419                           indf2	equ	0xFDF
  6420                           postinc2	equ	0xFDE
  6421                           postdec2	equ	0xFDD
  6422                           plusw2	equ	0xFDB
  6423                           fsr2h	equ	0xFDA
  6424                           fsr2l	equ	0xFD9
  6425                           status	equ	0xFD8
  6426                           
  6427 ;; *************** function _MdmHttp_MainTask *****************
  6428 ;; Defined at:
  6429 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  Options         1    wreg     unsigned char 
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;  Options         1    0[COMRAM] unsigned char 
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  1    wreg      void 
  6436 ;; Registers used:
  6437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6447 ;;Total ram usage:        0 bytes
  6448 ;; Hardware stack levels used:    1
  6449 ;; Hardware stack levels required when called:   15
  6450 ;; This function calls:
  6451 ;;		_HttpGetMethod
  6452 ;;		_InitGprsNetwork
  6453 ;; This function is called by:
  6454 ;;		_InitializeTasks
  6455 ;;		_ScheduleTasks
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           	psect	text21
  6460  0056DE                     __ptext21:
  6461                           	opt stack 0
  6462  0056DE                     _MdmHttp_MainTask:
  6463                           	opt stack 13
  6464                           
  6465                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6466                           
  6467                           ;incstack = 0
  6468  0056DE  D019               	goto	l1276
  6469  0056E0                     
  6470                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6471  0056E0  0E03               	movlw	3
  6472  0056E2  0100               	movlb	0	; () banked
  6473  0056E4  19D6               	xorwf	_MdmStatus& (0+255),w,b
  6474  0056E6  A4D8               	btfss	status,2,c
  6475  0056E8  0012               	return	
  6476                           
  6477                           ; BSR set to: 0
  6478                           ;mdm_gsm_gprs_http.c: 570: {
  6479                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6480  0056EA  C326  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6481  0056EE  C327  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6482  0056F2  C1EA  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6483  0056F6  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6484  0056FA  0101               	movlb	1	; () banked
  6485  0056FC  6FE9               	movwf	_GprsNetworkSts& (0+255),b
  6486                           
  6487                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6488  0056FE  0EA3               	movlw	low _HttpGetDataLocal
  6489  005700  0100               	movlb	0	; () banked
  6490  005702  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6491  005704  0E03               	movlw	high _HttpGetDataLocal
  6492  005706  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6493  005708  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6494  00570C  0101               	movlb	1	; () banked
  6495  00570E  6FE8               	movwf	_HttpGetMethodSts& (0+255),b
  6496                           
  6497                           ; BSR set to: 1
  6498                           ;mdm_gsm_gprs_http.c: 581: }
  6499                           
  6500                           ; BSR set to: 1
  6501                           ;mdm_gsm_gprs_http.c: 580: break;
  6502                           
  6503                           ;mdm_gsm_gprs_http.c: 579: default:
  6504                           
  6505                           ; BSR set to: 1
  6506                           ;mdm_gsm_gprs_http.c: 575: }
  6507                           ;mdm_gsm_gprs_http.c: 576: break;
  6508  005710  0012               	return	
  6509  005712                     l1276:
  6510                           
  6511                           ; BSR set to: 1
  6512  005712  0100               	movlb	0	; () banked
  6513  005714  51D9               	movf	_SystemState& (0+255),w,b
  6514                           
  6515                           ; Switch size 1, requested type "space"
  6516                           ; Number of cases is 2, Range of values is 0 to 1
  6517                           ; switch strategies available:
  6518                           ; Name         Instructions Cycles
  6519                           ; simple_byte            7     4 (average)
  6520                           ;	Chosen strategy is simple_byte
  6521  005716  0A00               	xorlw	0	; case 0
  6522  005718  B4D8               	btfsc	status,2,c
  6523  00571A  0012               	return	
  6524  00571C  0A01               	xorlw	1	; case 1
  6525  00571E  A4D8               	btfss	status,2,c
  6526  005720  0012               	return	
  6527  005722  D7DE               	goto	l1279
  6528  005724                     __end_of_MdmHttp_MainTask:
  6529                           	opt stack 0
  6530                           tosu	equ	0xFFF
  6531                           tosh	equ	0xFFE
  6532                           tosl	equ	0xFFD
  6533                           pclath	equ	0xFFA
  6534                           tblptru	equ	0xFF8
  6535                           tblptrh	equ	0xFF7
  6536                           tblptrl	equ	0xFF6
  6537                           tablat	equ	0xFF5
  6538                           prodh	equ	0xFF4
  6539                           prodl	equ	0xFF3
  6540                           intcon	equ	0xFF2
  6541                           intcon2	equ	0xFF1
  6542                           intcon3	equ	0xFF0
  6543                           postinc0	equ	0xFEE
  6544                           plusw0	equ	0xFEB
  6545                           wreg	equ	0xFE8
  6546                           postinc1	equ	0xFE6
  6547                           postdec1	equ	0xFE5
  6548                           plusw1	equ	0xFE3
  6549                           fsr1h	equ	0xFE2
  6550                           fsr1l	equ	0xFE1
  6551                           indf2	equ	0xFDF
  6552                           postinc2	equ	0xFDE
  6553                           postdec2	equ	0xFDD
  6554                           plusw2	equ	0xFDB
  6555                           fsr2h	equ	0xFDA
  6556                           fsr2l	equ	0xFD9
  6557                           status	equ	0xFD8
  6558                           
  6559 ;; *************** function _Mdm_MainTask *****************
  6560 ;; Defined at:
  6561 ;;		line 736 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  Options         1    wreg     unsigned char 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  Options         1    0[COMRAM] unsigned char 
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  1    wreg      void 
  6568 ;; Registers used:
  6569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6579 ;;Total ram usage:        0 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:   15
  6582 ;; This function calls:
  6583 ;;		_CheckModem
  6584 ;;		_ConfigureModem
  6585 ;;		_GetSmsSm
  6586 ;;		_ModemEvtParser
  6587 ;;		_SendSmsSm
  6588 ;;		_TurnOnModem
  6589 ;;		_UartSetConfig
  6590 ;;		_Uart_InitUartModule
  6591 ;; This function is called by:
  6592 ;;		_InitializeTasks
  6593 ;;		_ScheduleTasks
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           	psect	text22
  6598  00541E                     __ptext22:
  6599                           	opt stack 0
  6600  00541E                     _Mdm_MainTask:
  6601                           	opt stack 13
  6602                           
  6603                           ;mdm_gsm_gprs.c: 738: switch (SystemState)
  6604                           
  6605                           ;incstack = 0
  6606  00541E  D01F               	goto	l1099
  6607  005420                     
  6608                           ;mdm_gsm_gprs.c: 743: UartSetConfig();
  6609  005420  ECB7  F028         	call	_UartSetConfig	;wreg free
  6610                           
  6611                           ;mdm_gsm_gprs.c: 745: Uart_InitUartModule(1,&UartConfig);
  6612  005424  0E32               	movlw	low _UartConfig
  6613  005426  0100               	movlb	0	; () banked
  6614  005428  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6615  00542A  0E03               	movlw	high _UartConfig
  6616  00542C  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6617  00542E  0E01               	movlw	1
  6618  005430  EC5E  F005         	call	_Uart_InitUartModule
  6619                           
  6620                           ;mdm_gsm_gprs.c: 746: break;
  6621  005434  0012               	return	
  6622  005436                     
  6623                           ;mdm_gsm_gprs.c: 751: CheckModem();
  6624  005436  EC4F  F00F         	call	_CheckModem	;wreg free
  6625                           
  6626                           ;mdm_gsm_gprs.c: 753: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6627  00543A  0101               	movlb	1	; () banked
  6628  00543C  05F2               	decf	_ComChecCompleted& (0+255),w,b
  6629  00543E  A4D8               	btfss	status,2,c
  6630  005440  D005               	goto	l1103
  6631                           
  6632                           ; BSR set to: 1
  6633  005442  0100               	movlb	0	; () banked
  6634  005444  51D6               	movf	_MdmStatus& (0+255),w,b
  6635  005446  B4D8               	btfsc	status,2,c
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;mdm_gsm_gprs.c: 754: {
  6639                           ;mdm_gsm_gprs.c: 756: TurnOnModem();
  6640  005448  EC25  F02B         	call	_TurnOnModem	;wreg free
  6641  00544C                     l1103:
  6642                           
  6643                           ;mdm_gsm_gprs.c: 757: }
  6644                           ;mdm_gsm_gprs.c: 759: ConfigureModem();
  6645  00544C  ECAA  F01B         	call	_ConfigureModem	;wreg free
  6646                           
  6647                           ;mdm_gsm_gprs.c: 761: ModemEvtParser();
  6648  005450  EC83  F017         	call	_ModemEvtParser	;wreg free
  6649                           
  6650                           ;mdm_gsm_gprs.c: 763: GetSmsSm();
  6651  005454  EC30  F015         	call	_GetSmsSm	;wreg free
  6652                           
  6653                           ;mdm_gsm_gprs.c: 765: SendSmsSm();
  6654  005458  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6655                           
  6656                           ;mdm_gsm_gprs.c: 771: }
  6657                           
  6658                           ;mdm_gsm_gprs.c: 770: break;
  6659                           
  6660                           ;mdm_gsm_gprs.c: 769: default:
  6661                           
  6662                           ;mdm_gsm_gprs.c: 766: break;
  6663  00545C  0012               	return	
  6664  00545E                     l1099:
  6665  00545E  0100               	movlb	0	; () banked
  6666  005460  51D9               	movf	_SystemState& (0+255),w,b
  6667                           
  6668                           ; Switch size 1, requested type "space"
  6669                           ; Number of cases is 2, Range of values is 0 to 1
  6670                           ; switch strategies available:
  6671                           ; Name         Instructions Cycles
  6672                           ; simple_byte            7     4 (average)
  6673                           ;	Chosen strategy is simple_byte
  6674  005462  0A00               	xorlw	0	; case 0
  6675  005464  B4D8               	btfsc	status,2,c
  6676  005466  D7DC               	goto	l1100
  6677  005468  0A01               	xorlw	1	; case 1
  6678  00546A  A4D8               	btfss	status,2,c
  6679  00546C  0012               	return	
  6680  00546E  D7E3               	goto	l1102
  6681  005470                     __end_of_Mdm_MainTask:
  6682                           	opt stack 0
  6683                           tosu	equ	0xFFF
  6684                           tosh	equ	0xFFE
  6685                           tosl	equ	0xFFD
  6686                           pclath	equ	0xFFA
  6687                           tblptru	equ	0xFF8
  6688                           tblptrh	equ	0xFF7
  6689                           tblptrl	equ	0xFF6
  6690                           tablat	equ	0xFF5
  6691                           prodh	equ	0xFF4
  6692                           prodl	equ	0xFF3
  6693                           intcon	equ	0xFF2
  6694                           intcon2	equ	0xFF1
  6695                           intcon3	equ	0xFF0
  6696                           postinc0	equ	0xFEE
  6697                           plusw0	equ	0xFEB
  6698                           wreg	equ	0xFE8
  6699                           postinc1	equ	0xFE6
  6700                           postdec1	equ	0xFE5
  6701                           plusw1	equ	0xFE3
  6702                           fsr1h	equ	0xFE2
  6703                           fsr1l	equ	0xFE1
  6704                           indf2	equ	0xFDF
  6705                           postinc2	equ	0xFDE
  6706                           postdec2	equ	0xFDD
  6707                           plusw2	equ	0xFDB
  6708                           fsr2h	equ	0xFDA
  6709                           fsr2l	equ	0xFD9
  6710                           status	equ	0xFD8
  6711                           
  6712 ;; *************** function _I2cSlv_MainTask *****************
  6713 ;; Defined at:
  6714 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;  Options         1    wreg     unsigned char 
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;  Options         1    0[COMRAM] unsigned char 
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6732 ;;Total ram usage:        0 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:   14
  6735 ;; This function calls:
  6736 ;;		_I2cSendMsgSm
  6737 ;;		_I2cSetConfig
  6738 ;;		_I2c_InitI2cModule
  6739 ;;		_OsAlrm_SetOsAlarm
  6740 ;; This function is called by:
  6741 ;;		_InitializeTasks
  6742 ;;		_ScheduleTasks
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text23
  6747  0052CE                     __ptext23:
  6748                           	opt stack 0
  6749  0052CE                     _I2cSlv_MainTask:
  6750                           	opt stack 14
  6751                           
  6752                           ;i2c_slv.c: 217: switch (SystemState)
  6753                           
  6754                           ;incstack = 0
  6755  0052CE  D020               	goto	l1389
  6756  0052D0                     
  6757                           ;i2c_slv.c: 222: I2cSetConfig();
  6758  0052D0  EC64  F02E         	call	_I2cSetConfig	;wreg free
  6759                           
  6760                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6761  0052D4  0E52               	movlw	low _I2cConfig
  6762  0052D6  0100               	movlb	0	; () banked
  6763  0052D8  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6764  0052DA  0E03               	movlw	high _I2cConfig
  6765  0052DC  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6766  0052DE  ECB7  F026         	call	_I2c_InitI2cModule	;wreg free
  6767                           
  6768                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6769  0052E2  0E00               	movlw	0
  6770  0052E4  0100               	movlb	0	; () banked
  6771  0052E6  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6772  0052E8  0E00               	movlw	0
  6773  0052EA  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6774  0052EC  0E32               	movlw	50
  6775  0052EE  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6776  0052F0  0E00               	movlw	0
  6777  0052F2  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6778  0052F4  0E00               	movlw	0
  6779  0052F6  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6780  0052F8  0E00               	movlw	0
  6781  0052FA  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6782  0052FC  0E8C               	movlw	low _I2cDummyTx
  6783  0052FE  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6784  005300  0E5F               	movlw	high _I2cDummyTx
  6785  005302  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6786  005304  EC77  F01E         	call	_OsAlrm_SetOsAlarm	;wreg free
  6787                           
  6788                           ;i2c_slv.c: 227: break;
  6789  005308  0012               	return	
  6790  00530A                     
  6791                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6792  00530A  ECDB  F01E         	call	_I2cSendMsgSm	;wreg free
  6793                           
  6794                           ;i2c_slv.c: 238: }
  6795                           
  6796                           ;i2c_slv.c: 237: break;
  6797                           
  6798                           ;i2c_slv.c: 236: default:
  6799                           
  6800                           ;i2c_slv.c: 233: break;
  6801  00530E  0012               	return	
  6802  005310                     l1389:
  6803  005310  0100               	movlb	0	; () banked
  6804  005312  51D9               	movf	_SystemState& (0+255),w,b
  6805                           
  6806                           ; Switch size 1, requested type "space"
  6807                           ; Number of cases is 2, Range of values is 0 to 1
  6808                           ; switch strategies available:
  6809                           ; Name         Instructions Cycles
  6810                           ; simple_byte            7     4 (average)
  6811                           ;	Chosen strategy is simple_byte
  6812  005314  0A00               	xorlw	0	; case 0
  6813  005316  B4D8               	btfsc	status,2,c
  6814  005318  D7DB               	goto	l1390
  6815  00531A  0A01               	xorlw	1	; case 1
  6816  00531C  A4D8               	btfss	status,2,c
  6817  00531E  0012               	return	
  6818  005320  D7F4               	goto	l1392
  6819  005322                     __end_of_I2cSlv_MainTask:
  6820                           	opt stack 0
  6821                           tosu	equ	0xFFF
  6822                           tosh	equ	0xFFE
  6823                           tosl	equ	0xFFD
  6824                           pclath	equ	0xFFA
  6825                           tblptru	equ	0xFF8
  6826                           tblptrh	equ	0xFF7
  6827                           tblptrl	equ	0xFF6
  6828                           tablat	equ	0xFF5
  6829                           prodh	equ	0xFF4
  6830                           prodl	equ	0xFF3
  6831                           intcon	equ	0xFF2
  6832                           intcon2	equ	0xFF1
  6833                           intcon3	equ	0xFF0
  6834                           postinc0	equ	0xFEE
  6835                           plusw0	equ	0xFEB
  6836                           wreg	equ	0xFE8
  6837                           postinc1	equ	0xFE6
  6838                           postdec1	equ	0xFE5
  6839                           plusw1	equ	0xFE3
  6840                           fsr1h	equ	0xFE2
  6841                           fsr1l	equ	0xFE1
  6842                           indf2	equ	0xFDF
  6843                           postinc2	equ	0xFDE
  6844                           postdec2	equ	0xFDD
  6845                           plusw2	equ	0xFDB
  6846                           fsr2h	equ	0xFDA
  6847                           fsr2l	equ	0xFD9
  6848                           status	equ	0xFD8
  6849                           
  6850 ;; *************** function _Mdm_DrvMainFn *****************
  6851 ;; Defined at:
  6852 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  Options         1    wreg     unsigned char 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  Options         1    0[COMRAM] unsigned char 
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  1    wreg      void 
  6859 ;; Registers used:
  6860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6870 ;;Total ram usage:        0 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:   13
  6873 ;; This function calls:
  6874 ;;		_MdmCntSm
  6875 ;; This function is called by:
  6876 ;;		_InitializeTasks
  6877 ;;		_ScheduleTasks
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           	psect	text24
  6882  006184                     __ptext24:
  6883                           	opt stack 0
  6884  006184                     _Mdm_DrvMainFn:
  6885                           	opt stack 15
  6886                           
  6887                           ;mdm_drv.c: 307: MdmCntSm();
  6888                           
  6889                           ;incstack = 0
  6890  006184  EC59  F021         	call	_MdmCntSm	;wreg free
  6891  006188  0012               	return		;funcret
  6892  00618A                     __end_of_Mdm_DrvMainFn:
  6893                           	opt stack 0
  6894                           tosu	equ	0xFFF
  6895                           tosh	equ	0xFFE
  6896                           tosl	equ	0xFFD
  6897                           pclath	equ	0xFFA
  6898                           tblptru	equ	0xFF8
  6899                           tblptrh	equ	0xFF7
  6900                           tblptrl	equ	0xFF6
  6901                           tablat	equ	0xFF5
  6902                           prodh	equ	0xFF4
  6903                           prodl	equ	0xFF3
  6904                           intcon	equ	0xFF2
  6905                           intcon2	equ	0xFF1
  6906                           intcon3	equ	0xFF0
  6907                           postinc0	equ	0xFEE
  6908                           plusw0	equ	0xFEB
  6909                           wreg	equ	0xFE8
  6910                           postinc1	equ	0xFE6
  6911                           postdec1	equ	0xFE5
  6912                           plusw1	equ	0xFE3
  6913                           fsr1h	equ	0xFE2
  6914                           fsr1l	equ	0xFE1
  6915                           indf2	equ	0xFDF
  6916                           postinc2	equ	0xFDE
  6917                           postdec2	equ	0xFDD
  6918                           plusw2	equ	0xFDB
  6919                           fsr2h	equ	0xFDA
  6920                           fsr2l	equ	0xFD9
  6921                           status	equ	0xFD8
  6922                           
  6923 ;; *************** function _Wdg_MainTask *****************
  6924 ;; Defined at:
  6925 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;  Options         1    wreg     unsigned char 
  6928 ;; Auto vars:     Size  Location     Type
  6929 ;;  Options         1    0[COMRAM] unsigned char 
  6930 ;; Return value:  Size  Location     Type
  6931 ;;                  1    wreg      void 
  6932 ;; Registers used:
  6933 ;;		wreg, status,2, status,0, cstack
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/0
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6943 ;;Total ram usage:        0 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; Hardware stack levels required when called:   12
  6946 ;; This function calls:
  6947 ;;		_Mcu_ClearWdg
  6948 ;;		_Mcu_SetWdgSts
  6949 ;; This function is called by:
  6950 ;;		_InitializeTasks
  6951 ;;		_ScheduleTasks
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text25
  6956  005E26                     __ptext25:
  6957                           	opt stack 0
  6958  005E26                     _Wdg_MainTask:
  6959                           	opt stack 16
  6960                           
  6961                           ;wdg.c: 75: switch (SystemState)
  6962                           
  6963                           ;incstack = 0
  6964  005E26  D007               	goto	l2460
  6965  005E28                     
  6966                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  6967  005E28  0E01               	movlw	1
  6968  005E2A  EC54  F030         	call	_Mcu_SetWdgSts
  6969                           
  6970                           ;wdg.c: 81: break;
  6971  005E2E  0012               	return	
  6972  005E30                     
  6973                           ;wdg.c: 86: Mcu_ClearWdg();
  6974  005E30  ECC5  F030         	call	_Mcu_ClearWdg	;wreg free
  6975                           
  6976                           ;wdg.c: 92: }
  6977                           
  6978                           ;wdg.c: 91: break;
  6979                           
  6980                           ;wdg.c: 90: default:
  6981                           
  6982                           ;wdg.c: 87: break;
  6983  005E34  0012               	return	
  6984  005E36                     l2460:
  6985  005E36  0100               	movlb	0	; () banked
  6986  005E38  51D9               	movf	_SystemState& (0+255),w,b
  6987                           
  6988                           ; Switch size 1, requested type "space"
  6989                           ; Number of cases is 2, Range of values is 0 to 1
  6990                           ; switch strategies available:
  6991                           ; Name         Instructions Cycles
  6992                           ; simple_byte            7     4 (average)
  6993                           ;	Chosen strategy is simple_byte
  6994  005E3A  0A00               	xorlw	0	; case 0
  6995  005E3C  B4D8               	btfsc	status,2,c
  6996  005E3E  D7F4               	goto	l2461
  6997  005E40  0A01               	xorlw	1	; case 1
  6998  005E42  A4D8               	btfss	status,2,c
  6999  005E44  0012               	return	
  7000  005E46  D7F4               	goto	l2463
  7001  005E48                     __end_of_Wdg_MainTask:
  7002                           	opt stack 0
  7003                           tosu	equ	0xFFF
  7004                           tosh	equ	0xFFE
  7005                           tosl	equ	0xFFD
  7006                           pclath	equ	0xFFA
  7007                           tblptru	equ	0xFF8
  7008                           tblptrh	equ	0xFF7
  7009                           tblptrl	equ	0xFF6
  7010                           tablat	equ	0xFF5
  7011                           prodh	equ	0xFF4
  7012                           prodl	equ	0xFF3
  7013                           intcon	equ	0xFF2
  7014                           intcon2	equ	0xFF1
  7015                           intcon3	equ	0xFF0
  7016                           postinc0	equ	0xFEE
  7017                           plusw0	equ	0xFEB
  7018                           wreg	equ	0xFE8
  7019                           postinc1	equ	0xFE6
  7020                           postdec1	equ	0xFE5
  7021                           plusw1	equ	0xFE3
  7022                           fsr1h	equ	0xFE2
  7023                           fsr1l	equ	0xFE1
  7024                           indf2	equ	0xFDF
  7025                           postinc2	equ	0xFDE
  7026                           postdec2	equ	0xFDD
  7027                           plusw2	equ	0xFDB
  7028                           fsr2h	equ	0xFDA
  7029                           fsr2l	equ	0xFD9
  7030                           status	equ	0xFD8
  7031                           
  7032 ;; *************** function _Mcu_SetWdgSts *****************
  7033 ;; Defined at:
  7034 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;  WdgSts          1    wreg     unsigned char 
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1    wreg      void 
  7041 ;; Registers used:
  7042 ;;		wreg
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7052 ;;Total ram usage:        1 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:   11
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		_Wdg_MainTask
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text26
  7063  0060A8                     __ptext26:
  7064                           	opt stack 0
  7065  0060A8                     _Mcu_SetWdgSts:
  7066                           	opt stack 16
  7067                           
  7068                           ;incstack = 0
  7069                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7070  0060A8  0100               	movlb	0	; () banked
  7071  0060AA  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7072                           
  7073                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7074  0060AC  0100               	movlb	0	; () banked
  7075  0060AE  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7076  0060B0  D002               	bra	u8005
  7077  0060B2  90C0               	bcf	4032,0,c	;volatile
  7078  0060B4  D001               	bra	u8006
  7079  0060B6                     u8005:
  7080  0060B6  80C0               	bsf	4032,0,c	;volatile
  7081  0060B8                     u8006:
  7082  0060B8  0012               	return		;funcret
  7083  0060BA                     __end_of_Mcu_SetWdgSts:
  7084                           	opt stack 0
  7085                           tosu	equ	0xFFF
  7086                           tosh	equ	0xFFE
  7087                           tosl	equ	0xFFD
  7088                           pclath	equ	0xFFA
  7089                           tblptru	equ	0xFF8
  7090                           tblptrh	equ	0xFF7
  7091                           tblptrl	equ	0xFF6
  7092                           tablat	equ	0xFF5
  7093                           prodh	equ	0xFF4
  7094                           prodl	equ	0xFF3
  7095                           intcon	equ	0xFF2
  7096                           intcon2	equ	0xFF1
  7097                           intcon3	equ	0xFF0
  7098                           postinc0	equ	0xFEE
  7099                           plusw0	equ	0xFEB
  7100                           wreg	equ	0xFE8
  7101                           postinc1	equ	0xFE6
  7102                           postdec1	equ	0xFE5
  7103                           plusw1	equ	0xFE3
  7104                           fsr1h	equ	0xFE2
  7105                           fsr1l	equ	0xFE1
  7106                           indf2	equ	0xFDF
  7107                           postinc2	equ	0xFDE
  7108                           postdec2	equ	0xFDD
  7109                           plusw2	equ	0xFDB
  7110                           fsr2h	equ	0xFDA
  7111                           fsr2l	equ	0xFD9
  7112                           status	equ	0xFD8
  7113                           
  7114 ;; *************** function _Mcu_ClearWdg *****************
  7115 ;; Defined at:
  7116 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;		None
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;		None
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  1    wreg      void 
  7123 ;; Registers used:
  7124 ;;		None
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7134 ;;Total ram usage:        0 bytes
  7135 ;; Hardware stack levels used:    1
  7136 ;; Hardware stack levels required when called:   11
  7137 ;; This function calls:
  7138 ;;		Nothing
  7139 ;; This function is called by:
  7140 ;;		_Wdg_MainTask
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text27
  7145  00618A                     __ptext27:
  7146                           	opt stack 0
  7147  00618A                     _Mcu_ClearWdg:
  7148                           	opt stack 16
  7149                           
  7150                           ;incstack = 0
  7151  00618A  0004               	clrwdt		;# 
  7152  00618C  0012               	return		;funcret
  7153  00618E                     __end_of_Mcu_ClearWdg:
  7154                           	opt stack 0
  7155                           tosu	equ	0xFFF
  7156                           tosh	equ	0xFFE
  7157                           tosl	equ	0xFFD
  7158                           pclath	equ	0xFFA
  7159                           tblptru	equ	0xFF8
  7160                           tblptrh	equ	0xFF7
  7161                           tblptrl	equ	0xFF6
  7162                           tablat	equ	0xFF5
  7163                           prodh	equ	0xFF4
  7164                           prodl	equ	0xFF3
  7165                           intcon	equ	0xFF2
  7166                           intcon2	equ	0xFF1
  7167                           intcon3	equ	0xFF0
  7168                           postinc0	equ	0xFEE
  7169                           plusw0	equ	0xFEB
  7170                           wreg	equ	0xFE8
  7171                           postinc1	equ	0xFE6
  7172                           postdec1	equ	0xFE5
  7173                           plusw1	equ	0xFE3
  7174                           fsr1h	equ	0xFE2
  7175                           fsr1l	equ	0xFE1
  7176                           indf2	equ	0xFDF
  7177                           postinc2	equ	0xFDE
  7178                           postdec2	equ	0xFDD
  7179                           plusw2	equ	0xFDB
  7180                           fsr2h	equ	0xFDA
  7181                           fsr2l	equ	0xFD9
  7182                           status	equ	0xFD8
  7183                           
  7184 ;; *************** function _USBDeviceTasks *****************
  7185 ;; Defined at:
  7186 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;		None
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;  i               1   56[BANK0 ] unsigned char 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  1    wreg      void 
  7193 ;; Registers used:
  7194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7201 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7203 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7204 ;;Total ram usage:        1 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:   19
  7207 ;; This function calls:
  7208 ;;		_USBCtrlEPAllowStatusStage
  7209 ;;		_USBCtrlEPService
  7210 ;;		_USBDeviceInit
  7211 ;;		_USBIncrement1msInternalTimers
  7212 ;;		_USBStallHandler
  7213 ;;		_USBSuspend
  7214 ;;		_USBWakeFromSuspend
  7215 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7216 ;; This function is called by:
  7217 ;;		_UsbDevice_MainTask
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text28
  7222  001BAA                     __ptext28:
  7223                           	opt stack 0
  7224  001BAA                     _USBDeviceTasks:
  7225                           	opt stack 8
  7226                           
  7227                           ;usb_device.c: 562: }
  7228                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7229                           
  7230                           ; BSR set to: 0
  7231                           
  7232                           ; BSR set to: 0
  7233                           ;usb_device.c: 561: return;
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7237                           
  7238                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7239                           
  7240                           ;usb_device.c: 529: UIE = 0;
  7241                           
  7242                           ;usb_device.c: 524: {
  7243                           ;usb_device.c: 526: UCON = 0;
  7244                           
  7245                           ;usb_device.c: 497: uint8_t i;
  7246                           ;usb_device.c: 523: if (1 != 1)
  7247                           
  7248                           ;incstack = 0
  7249  001BAA  0100               	movlb	0	; () banked
  7250  001BAC  51D3               	movf	_USBDeviceState& (0+255),w,b
  7251  001BAE  A4D8               	btfss	status,2,c
  7252  001BB0  D012               	goto	l1600
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;usb_device.c: 585: {
  7256                           ;usb_device.c: 587: UCON = 0;
  7257  001BB2  0E00               	movlw	0
  7258  001BB4  6E65               	movwf	3941,c	;volatile
  7259                           
  7260                           ;usb_device.c: 590: UIE = 0;
  7261  001BB6  0E00               	movlw	0
  7262  001BB8  010F               	movlb	15	; () banked
  7263  001BBA  6F36               	movwf	54,b	;volatile
  7264                           
  7265                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7266  001BBC  0E16               	movlw	22
  7267  001BBE  6F39               	movwf	57,b	;volatile
  7268  001BC0  0E9F               	movlw	159
  7269  001BC2  6F37               	movwf	55,b	;volatile
  7270  001BC4  0E7B               	movlw	123
  7271  001BC6  6F36               	movwf	54,b	;volatile
  7272                           
  7273                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7274  001BC8  D001               	goto	l1601
  7275  001BCA                     l1602:
  7276  001BCA  8665               	bsf	3941,3,c	;volatile
  7277  001BCC                     l1601:
  7278  001BCC  A665               	btfss	3941,3,c	;volatile
  7279  001BCE  D7FD               	goto	l1602
  7280                           
  7281                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7282  001BD0  0E01               	movlw	1
  7283  001BD2  0100               	movlb	0	; () banked
  7284  001BD4  6FD3               	movwf	_USBDeviceState& (0+255),b
  7285  001BD6                     l1600:
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;usb_device.c: 605: }
  7289                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7290                           
  7291                           ; BSR set to: 0
  7292  001BD6  05D3               	decf	_USBDeviceState& (0+255),w,b
  7293  001BD8  B4D8               	btfsc	status,2,c
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;usb_device.c: 609: {
  7297                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7298  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7299  001BDC  D00A               	goto	l1605
  7300                           
  7301                           ; BSR set to: 0
  7302                           ;usb_device.c: 620: {
  7303                           ;usb_device.c: 626: {UIR = 0;};
  7304  001BDE  0E00               	movlw	0
  7305  001BE0  6E62               	movwf	3938,c	;volatile
  7306                           
  7307                           ;usb_device.c: 630: UIE=0;
  7308  001BE2  0E00               	movlw	0
  7309  001BE4  010F               	movlb	15	; () banked
  7310  001BE6  6F36               	movwf	54,b	;volatile
  7311                           
  7312                           ; BSR set to: 15
  7313                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7314  001BE8  8136               	bsf	54,0,b	;volatile
  7315                           
  7316                           ; BSR set to: 15
  7317                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7318  001BEA  8936               	bsf	54,4,b	;volatile
  7319                           
  7320                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7321  001BEC  0E02               	movlw	2
  7322  001BEE  0100               	movlb	0	; () banked
  7323  001BF0  6FD3               	movwf	_USBDeviceState& (0+255),b
  7324  001BF2                     l1605:
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;usb_device.c: 635: }
  7328                           ;usb_device.c: 636: }
  7329                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7330                           
  7331                           ; BSR set to: 0
  7332                           
  7333                           ; BSR set to: 0
  7334  001BF2  A462               	btfss	3938,2,c	;volatile
  7335  001BF4  D006               	goto	l1606
  7336                           
  7337                           ; BSR set to: 0
  7338  001BF6  010F               	movlb	15	; () banked
  7339  001BF8  A536               	btfss	54,2,b	;volatile
  7340  001BFA  D003               	goto	l1606
  7341                           
  7342                           ; BSR set to: 15
  7343                           ;usb_device.c: 653: {
  7344                           ;usb_device.c: 654: (UIR &= 0xFB);
  7345  001BFC  9462               	bcf	3938,2,c	;volatile
  7346                           
  7347                           ; BSR set to: 15
  7348                           ;usb_device.c: 658: USBWakeFromSuspend();
  7349  001BFE  EC18  F02D         	call	_USBWakeFromSuspend	;wreg free
  7350  001C02                     l1606:
  7351                           
  7352                           ;usb_device.c: 660: }
  7353                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7354  001C02  A265               	btfss	3941,1,c	;volatile
  7355  001C04  D002               	goto	l1607
  7356                           
  7357                           ;usb_device.c: 666: {
  7358                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7359  001C06  98A1               	bcf	4001,4,c	;volatile
  7360                           
  7361                           ;usb_device.c: 668: return;
  7362  001C08  0012               	return	
  7363  001C0A                     l1607:
  7364                           
  7365                           ;usb_device.c: 669: }
  7366                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7367  001C0A  A062               	btfss	3938,0,c	;volatile
  7368  001C0C  D009               	goto	l1608
  7369  001C0E  010F               	movlb	15	; () banked
  7370  001C10  A136               	btfss	54,0,b	;volatile
  7371  001C12  D006               	goto	l1608
  7372                           
  7373                           ; BSR set to: 15
  7374                           ;usb_device.c: 682: {
  7375                           ;usb_device.c: 683: USBDeviceInit();
  7376  001C14  EC08  F012         	call	_USBDeviceInit	;wreg free
  7377                           
  7378                           ;usb_device.c: 687: ;
  7379                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7380  001C18  0E04               	movlw	4
  7381  001C1A  0100               	movlb	0	; () banked
  7382  001C1C  6FD3               	movwf	_USBDeviceState& (0+255),b
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;usb_device.c: 699: (UIR &= 0xFE);
  7386  001C1E  9062               	bcf	3938,0,c	;volatile
  7387  001C20                     l1608:
  7388                           
  7389                           ;usb_device.c: 700: }
  7390                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7391                           
  7392                           ; BSR set to: 0
  7393  001C20  A862               	btfss	3938,4,c	;volatile
  7394  001C22  D004               	goto	l1609
  7395  001C24  010F               	movlb	15	; () banked
  7396  001C26  B936               	btfsc	54,4,b	;volatile
  7397                           
  7398                           ; BSR set to: 15
  7399                           ;usb_device.c: 706: {
  7400                           ;usb_device.c: 712: USBSuspend();
  7401  001C28  ECA4  F02D         	call	_USBSuspend	;wreg free
  7402  001C2C                     l1609:
  7403                           
  7404                           ;usb_device.c: 714: }
  7405                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7406  001C2C  AC62               	btfss	3938,6,c	;volatile
  7407  001C2E  D01C               	goto	l1613
  7408                           
  7409                           ;usb_device.c: 727: {
  7410                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7411  001C30  010F               	movlb	15	; () banked
  7412  001C32  AD36               	btfss	54,6,b	;volatile
  7413  001C34  D00F               	goto	l1611
  7414                           
  7415                           ; BSR set to: 15
  7416                           ;usb_device.c: 730: {
  7417                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7418  001C36  0E00               	movlw	0
  7419  001C38  0100               	movlb	0	; () banked
  7420  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7421  001C3C  0E73               	movlw	115
  7422  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7423  001C40  0E00               	movlw	0
  7424  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7425  001C44  0E00               	movlw	0
  7426  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7427  001C48  0E00               	movlw	0
  7428  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7429  001C4C  0E01               	movlw	1
  7430  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7431  001C50  EC2B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7432  001C54                     l1611:
  7433                           
  7434                           ;usb_device.c: 732: }
  7435                           ;usb_device.c: 733: (UIR &= 0xBF);
  7436  001C54  9C62               	bcf	3938,6,c	;volatile
  7437                           
  7438                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7439  001C56  EC24  F02F         	call	_USBIncrement1msInternalTimers	;wreg free
  7440                           
  7441                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7442  001C5A  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7443  001C5C  A4D8               	btfss	status,2,c
  7444                           
  7445                           ;usb_device.c: 754: {
  7446                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7447  001C5E  0629               	decf	_USBStatusStageTimeoutCounter,f,c
  7448                           
  7449                           ;usb_device.c: 756: }
  7450                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7451  001C60  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7452  001C62  B4D8               	btfsc	status,2,c
  7453                           
  7454                           ;usb_device.c: 763: {
  7455                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7456  001C64  EC49  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7457  001C68                     l1613:
  7458                           
  7459                           ;usb_device.c: 765: }
  7460                           ;usb_device.c: 767: }
  7461                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7462  001C68  AA62               	btfss	3938,5,c	;volatile
  7463  001C6A  D004               	goto	l1614
  7464  001C6C  010F               	movlb	15	; () banked
  7465  001C6E  BB36               	btfsc	54,5,b	;volatile
  7466                           
  7467                           ; BSR set to: 15
  7468                           ;usb_device.c: 770: {
  7469                           ;usb_device.c: 771: USBStallHandler();
  7470  001C70  EC92  F02B         	call	_USBStallHandler	;wreg free
  7471  001C74                     l1614:
  7472                           
  7473                           ;usb_device.c: 772: }
  7474                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7475  001C74  A262               	btfss	3938,1,c	;volatile
  7476  001C76  D013               	goto	l1615
  7477  001C78  010F               	movlb	15	; () banked
  7478  001C7A  A336               	btfss	54,1,b	;volatile
  7479  001C7C  D010               	goto	l1615
  7480                           
  7481                           ; BSR set to: 15
  7482                           ;usb_device.c: 775: {
  7483                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7484  001C7E  0E7F               	movlw	127
  7485  001C80  0100               	movlb	0	; () banked
  7486  001C82  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7487  001C84  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7488  001C86  0E00               	movlw	0
  7489  001C88  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7490  001C8A  0E00               	movlw	0
  7491  001C8C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7492  001C8E  0E00               	movlw	0
  7493  001C90  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7494  001C92  0E01               	movlw	1
  7495  001C94  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7496  001C96  EC2B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7497                           
  7498                           ;usb_device.c: 777: {UEIR = 0;};
  7499  001C9A  0E00               	movlw	0
  7500  001C9C  6E63               	movwf	3939,c	;volatile
  7501  001C9E                     l1615:
  7502                           
  7503                           ;usb_device.c: 785: }
  7504                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7505  001C9E  0E04               	movlw	4
  7506  001CA0  0100               	movlb	0	; () banked
  7507  001CA2  61D3               	cpfslt	_USBDeviceState& (0+255),b
  7508  001CA4  D002               	goto	l1616
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;usb_device.c: 793: {
  7512                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7513  001CA6  98A1               	bcf	4001,4,c	;volatile
  7514                           
  7515                           ;usb_device.c: 795: return;
  7516  001CA8  0012               	return	
  7517  001CAA                     l1616:
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;usb_device.c: 796: }
  7521                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7522  001CAA  010F               	movlb	15	; () banked
  7523  001CAC  A736               	btfss	54,3,b	;volatile
  7524  001CAE  D03E               	goto	u13040
  7525                           
  7526                           ; BSR set to: 15
  7527                           ;usb_device.c: 802: {
  7528                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7529  001CB0  0E00               	movlw	0
  7530  001CB2  0100               	movlb	0	; () banked
  7531  001CB4  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7532  001CB6                     l13659:
  7533                           
  7534                           ; BSR set to: 0
  7535  001CB6  0E03               	movlw	3
  7536  001CB8  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7537  001CBA  D001               	goto	l1618
  7538  001CBC  D037               	goto	u13040
  7539  001CBE                     l1618:
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;usb_device.c: 804: {
  7543                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7544  001CBE  A662               	btfss	3938,3,c	;volatile
  7545  001CC0  D035               	goto	u13040
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;usb_device.c: 806: {
  7549                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7550  001CC2  CF64 F0DA          	movff	3940,_USTATcopy	;volatile
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7554  001CC6  31DA               	rrcf	_USTATcopy& (0+255),w,b
  7555  001CC8  32E8               	rrcf	wreg,f,c
  7556  001CCA  32E8               	rrcf	wreg,f,c
  7557  001CCC  0B0F               	andlw	15
  7558  001CCE  6FD0               	movwf	_endpoint_number& (0+255),b
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;usb_device.c: 811: (UIR &= 0xF7);
  7562  001CD0  9662               	bcf	3938,3,c	;volatile
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7566  001CD2  B5DA               	btfsc	_USTATcopy& (0+255),2,b
  7567  001CD4  D007               	goto	l1621
  7568                           
  7569                           ; BSR set to: 0
  7570                           ;usb_device.c: 817: {
  7571                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7572  001CD6  51D0               	movf	_endpoint_number& (0+255),w,b
  7573  001CD8  0D01               	mullw	1
  7574  001CDA  0ECE               	movlw	low _ep_data_out
  7575  001CDC  24F3               	addwf	prodl,w,c
  7576  001CDE  6ED9               	movwf	fsr2l,c
  7577  001CE0  0E02               	movlw	high _ep_data_out
  7578  001CE2  D007               	goto	L3
  7579  001CE4                     l1621:
  7580                           
  7581                           ;usb_device.c: 820: else
  7582                           ;usb_device.c: 821: {
  7583                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7584                           
  7585                           ; BSR set to: 2
  7586  001CE4  0100               	movlb	0	; () banked
  7587  001CE6  51D0               	movf	_endpoint_number& (0+255),w,b
  7588  001CE8  0D01               	mullw	1
  7589  001CEA  0ED1               	movlw	low _ep_data_in
  7590  001CEC  24F3               	addwf	prodl,w,c
  7591  001CEE  6ED9               	movwf	fsr2l,c
  7592  001CF0  0E02               	movlw	high _ep_data_in
  7593  001CF2                     L3:
  7594  001CF2  20F4               	addwfc	prodh,w,c
  7595  001CF4  6EDA               	movwf	fsr2h,c
  7596  001CF6  0102               	movlb	2	; () banked
  7597  001CF8  70DF               	btg	indf2,0,c
  7598                           
  7599                           ; BSR set to: 2
  7600                           ;usb_device.c: 823: }
  7601                           ;usb_device.c: 828: if(endpoint_number == 0)
  7602                           
  7603                           ; BSR set to: 2
  7604  001CFA  0100               	movlb	0	; () banked
  7605  001CFC  51D0               	movf	_endpoint_number& (0+255),w,b
  7606  001CFE  A4D8               	btfss	status,2,c
  7607  001D00  D003               	goto	l1623
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;usb_device.c: 829: {
  7611                           ;usb_device.c: 830: USBCtrlEPService();
  7612  001D02  ECD3  F023         	call	_USBCtrlEPService	;wreg free
  7613                           
  7614                           ;usb_device.c: 831: }
  7615  001D06  D00F               	goto	l1625
  7616  001D08                     l1623:
  7617                           
  7618                           ;usb_device.c: 832: else
  7619                           ;usb_device.c: 833: {
  7620                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7621  001D08  0E00               	movlw	0
  7622  001D0A  0100               	movlb	0	; () banked
  7623  001D0C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7624  001D0E  0E72               	movlw	114
  7625  001D10  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7626  001D12  0EDA               	movlw	low _USTATcopy
  7627  001D14  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7628  001D16  0E00               	movlw	high _USTATcopy
  7629  001D18  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7630  001D1A  0E00               	movlw	0
  7631  001D1C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7632  001D1E  0E00               	movlw	0
  7633  001D20  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7634  001D22  EC2B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7635  001D26                     l1625:
  7636  001D26  0100               	movlb	0	; () banked
  7637  001D28  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7638  001D2A  D7C5               	goto	l13659
  7639  001D2C                     u13040:
  7640                           
  7641                           ;usb_device.c: 840: }
  7642                           ;usb_device.c: 841: }
  7643                           ;usb_device.c: 842: }
  7644                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7645                           
  7646                           ; BSR set to: 0
  7647  001D2C  98A1               	bcf	4001,4,c	;volatile
  7648  001D2E  0012               	return		;funcret
  7649  001D30                     __end_of_USBDeviceTasks:
  7650                           	opt stack 0
  7651                           tosu	equ	0xFFF
  7652                           tosh	equ	0xFFE
  7653                           tosl	equ	0xFFD
  7654                           pclath	equ	0xFFA
  7655                           tblptru	equ	0xFF8
  7656                           tblptrh	equ	0xFF7
  7657                           tblptrl	equ	0xFF6
  7658                           tablat	equ	0xFF5
  7659                           prodh	equ	0xFF4
  7660                           prodl	equ	0xFF3
  7661                           intcon	equ	0xFF2
  7662                           intcon2	equ	0xFF1
  7663                           intcon3	equ	0xFF0
  7664                           postinc0	equ	0xFEE
  7665                           plusw0	equ	0xFEB
  7666                           wreg	equ	0xFE8
  7667                           postinc1	equ	0xFE6
  7668                           postdec1	equ	0xFE5
  7669                           plusw1	equ	0xFE3
  7670                           fsr1h	equ	0xFE2
  7671                           fsr1l	equ	0xFE1
  7672                           indf2	equ	0xFDF
  7673                           postinc2	equ	0xFDE
  7674                           postdec2	equ	0xFDD
  7675                           plusw2	equ	0xFDB
  7676                           fsr2h	equ	0xFDA
  7677                           fsr2l	equ	0xFD9
  7678                           status	equ	0xFD8
  7679                           
  7680 ;; *************** function _USBWakeFromSuspend *****************
  7681 ;; Defined at:
  7682 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;		None
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;		None
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  1    wreg      void 
  7689 ;; Registers used:
  7690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7700 ;;Total ram usage:        0 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:   15
  7703 ;; This function calls:
  7704 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7705 ;; This function is called by:
  7706 ;;		_USBDeviceTasks
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text29
  7711  005A30                     __ptext29:
  7712                           	opt stack 0
  7713  005A30                     _USBWakeFromSuspend:
  7714                           	opt stack 11
  7715                           
  7716                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7717                           
  7718                           ;incstack = 0
  7719  005A30  0E00               	movlw	0
  7720  005A32  0101               	movlb	1	; () banked
  7721  005A34  6FDE               	movwf	_USBBusIsSuspended& (0+255),b
  7722                           
  7723                           ; BSR set to: 1
  7724                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7725  005A36  0E00               	movlw	0
  7726  005A38  0100               	movlb	0	; () banked
  7727  005A3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7728  005A3C  0E74               	movlw	116
  7729  005A3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7730  005A40  0E00               	movlw	0
  7731  005A42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7732  005A44  0E00               	movlw	0
  7733  005A46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7734  005A48  0E00               	movlw	0
  7735  005A4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7736  005A4C  0E00               	movlw	0
  7737  005A4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7738  005A50  EC2B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7739                           
  7740                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7741  005A54  9265               	bcf	3941,1,c	;volatile
  7742                           
  7743                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7744  005A56  010F               	movlb	15	; () banked
  7745  005A58  9536               	bcf	54,2,b	;volatile
  7746                           
  7747                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7748  005A5A  D001               	goto	l1753
  7749  005A5C                     
  7750                           ;usb_device.c: 2361: {
  7751                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7752                           
  7753                           ; BSR set to: 15
  7754  005A5C  9462               	bcf	3938,2,c	;volatile
  7755  005A5E                     l1753:
  7756  005A5E  B462               	btfsc	3938,2,c	;volatile
  7757  005A60  D7FD               	goto	l1754
  7758                           
  7759                           ;usb_device.c: 2363: }
  7760                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7761  005A62  0E00               	movlw	0
  7762  005A64  0101               	movlb	1	; () banked
  7763  005A66  6FDC               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7764                           
  7765                           ; BSR set to: 1
  7766  005A68  0012               	return		;funcret
  7767  005A6A                     __end_of_USBWakeFromSuspend:
  7768                           	opt stack 0
  7769                           tosu	equ	0xFFF
  7770                           tosh	equ	0xFFE
  7771                           tosl	equ	0xFFD
  7772                           pclath	equ	0xFFA
  7773                           tblptru	equ	0xFF8
  7774                           tblptrh	equ	0xFF7
  7775                           tblptrl	equ	0xFF6
  7776                           tablat	equ	0xFF5
  7777                           prodh	equ	0xFF4
  7778                           prodl	equ	0xFF3
  7779                           intcon	equ	0xFF2
  7780                           intcon2	equ	0xFF1
  7781                           intcon3	equ	0xFF0
  7782                           postinc0	equ	0xFEE
  7783                           plusw0	equ	0xFEB
  7784                           wreg	equ	0xFE8
  7785                           postinc1	equ	0xFE6
  7786                           postdec1	equ	0xFE5
  7787                           plusw1	equ	0xFE3
  7788                           fsr1h	equ	0xFE2
  7789                           fsr1l	equ	0xFE1
  7790                           indf2	equ	0xFDF
  7791                           postinc2	equ	0xFDE
  7792                           postdec2	equ	0xFDD
  7793                           plusw2	equ	0xFDB
  7794                           fsr2h	equ	0xFDA
  7795                           fsr2l	equ	0xFD9
  7796                           status	equ	0xFD8
  7797                           
  7798 ;; *************** function _USBSuspend *****************
  7799 ;; Defined at:
  7800 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;		None
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;		None
  7805 ;; Return value:  Size  Location     Type
  7806 ;;                  1    wreg      void 
  7807 ;; Registers used:
  7808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7809 ;; Tracked objects:
  7810 ;;		On entry : 0/0
  7811 ;;		On exit  : 0/0
  7812 ;;		Unchanged: 0/0
  7813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7818 ;;Total ram usage:        0 bytes
  7819 ;; Hardware stack levels used:    1
  7820 ;; Hardware stack levels required when called:   15
  7821 ;; This function calls:
  7822 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7823 ;; This function is called by:
  7824 ;;		_USBDeviceTasks
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           	psect	text30
  7829  005B48                     __ptext30:
  7830                           	opt stack 0
  7831  005B48                     _USBSuspend:
  7832                           	opt stack 11
  7833                           
  7834                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7835                           
  7836                           ; BSR set to: 1
  7837                           ;incstack = 0
  7838  005B48  010F               	movlb	15	; () banked
  7839  005B4A  8536               	bsf	54,2,b	;volatile
  7840                           
  7841                           ; BSR set to: 15
  7842                           ;usb_device.c: 2289: (UIR &= 0xEF);
  7843  005B4C  9862               	bcf	3938,4,c	;volatile
  7844                           
  7845                           ; BSR set to: 15
  7846                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  7847  005B4E  8265               	bsf	3941,1,c	;volatile
  7848                           
  7849                           ; BSR set to: 15
  7850                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  7851  005B50  0E01               	movlw	1
  7852  005B52  0101               	movlb	1	; () banked
  7853  005B54  6FDE               	movwf	_USBBusIsSuspended& (0+255),b
  7854                           
  7855                           ; BSR set to: 1
  7856                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  7857  005B56  0E00               	movlw	0
  7858  005B58  6FDC               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7859                           
  7860                           ; BSR set to: 1
  7861                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7862  005B5A  0E00               	movlw	0
  7863  005B5C  0100               	movlb	0	; () banked
  7864  005B5E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7865  005B60  0E75               	movlw	117
  7866  005B62  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7867  005B64  0E00               	movlw	0
  7868  005B66  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7869  005B68  0E00               	movlw	0
  7870  005B6A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7871  005B6C  0E00               	movlw	0
  7872  005B6E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7873  005B70  0E00               	movlw	0
  7874  005B72  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7875  005B74  EC2B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7876  005B78  0012               	return		;funcret
  7877  005B7A                     __end_of_USBSuspend:
  7878                           	opt stack 0
  7879                           tosu	equ	0xFFF
  7880                           tosh	equ	0xFFE
  7881                           tosl	equ	0xFFD
  7882                           pclath	equ	0xFFA
  7883                           tblptru	equ	0xFF8
  7884                           tblptrh	equ	0xFF7
  7885                           tblptrl	equ	0xFF6
  7886                           tablat	equ	0xFF5
  7887                           prodh	equ	0xFF4
  7888                           prodl	equ	0xFF3
  7889                           intcon	equ	0xFF2
  7890                           intcon2	equ	0xFF1
  7891                           intcon3	equ	0xFF0
  7892                           postinc0	equ	0xFEE
  7893                           plusw0	equ	0xFEB
  7894                           wreg	equ	0xFE8
  7895                           postinc1	equ	0xFE6
  7896                           postdec1	equ	0xFE5
  7897                           plusw1	equ	0xFE3
  7898                           fsr1h	equ	0xFE2
  7899                           fsr1l	equ	0xFE1
  7900                           indf2	equ	0xFDF
  7901                           postinc2	equ	0xFDE
  7902                           postdec2	equ	0xFDD
  7903                           plusw2	equ	0xFDB
  7904                           fsr2h	equ	0xFDA
  7905                           fsr2l	equ	0xFD9
  7906                           status	equ	0xFD8
  7907                           
  7908 ;; *************** function _USBStallHandler *****************
  7909 ;; Defined at:
  7910 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;		None
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;		None
  7915 ;; Return value:  Size  Location     Type
  7916 ;;                  1    wreg      void 
  7917 ;; Registers used:
  7918 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7926 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7927 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7928 ;;Total ram usage:        1 bytes
  7929 ;; Hardware stack levels used:    1
  7930 ;; Hardware stack levels required when called:   11
  7931 ;; This function calls:
  7932 ;;		Nothing
  7933 ;; This function is called by:
  7934 ;;		_USBDeviceTasks
  7935 ;; This function uses a non-reentrant model
  7936 ;;
  7937                           
  7938                           	psect	text31
  7939  005724                     __ptext31:
  7940                           	opt stack 0
  7941  005724                     _USBStallHandler:
  7942                           	opt stack 15
  7943                           
  7944                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  7945                           
  7946                           ;incstack = 0
  7947  005724  010F               	movlb	15	; () banked
  7948  005726  A126               	btfss	38,0,b	;volatile
  7949  005728  D01D               	goto	l1745
  7950                           
  7951                           ; BSR set to: 15
  7952                           ;usb_device.c: 2233: {
  7953                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  7954  00572A  C0C8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7955  00572E  C0C9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7956  005732  0E80               	movlw	128
  7957  005734  18DE               	xorwf	postinc2,w,c
  7958  005736  A4D8               	btfss	status,2,c
  7959  005738  D014               	goto	l1746
  7960                           
  7961                           ; BSR set to: 15
  7962  00573A  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
  7963  00573E  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7964  005742  0E84               	movlw	132
  7965  005744  18DE               	xorwf	postinc2,w,c
  7966  005746  A4D8               	btfss	status,2,c
  7967  005748  D00C               	goto	l1746
  7968                           
  7969                           ; BSR set to: 15
  7970                           ;usb_device.c: 2236: {
  7971                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7972  00574A  C0C8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7973  00574E  C0C9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7974  005752  0E0C               	movlw	12
  7975  005754  6EDF               	movwf	indf2,c
  7976                           
  7977                           ; BSR set to: 15
  7978                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  7979  005756  C0C8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7980  00575A  C0C9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7981  00575E  0E00               	movlw	0
  7982  005760  8EDB               	bsf	plusw2,7,c
  7983  005762                     l1746:
  7984                           
  7985                           ; BSR set to: 15
  7986                           ;usb_device.c: 2240: }
  7987                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  7988                           
  7989                           ; BSR set to: 15
  7990  005762  9126               	bcf	38,0,b	;volatile
  7991  005764                     l1745:
  7992                           
  7993                           ; BSR set to: 15
  7994                           ;usb_device.c: 2242: }
  7995                           ;usb_device.c: 2244: (UIR &= 0xDF);
  7996  005764  9A62               	bcf	3938,5,c	;volatile
  7997                           
  7998                           ; BSR set to: 15
  7999  005766  0012               	return		;funcret
  8000  005768                     __end_of_USBStallHandler:
  8001                           	opt stack 0
  8002                           tosu	equ	0xFFF
  8003                           tosh	equ	0xFFE
  8004                           tosl	equ	0xFFD
  8005                           pclath	equ	0xFFA
  8006                           tblptru	equ	0xFF8
  8007                           tblptrh	equ	0xFF7
  8008                           tblptrl	equ	0xFF6
  8009                           tablat	equ	0xFF5
  8010                           prodh	equ	0xFF4
  8011                           prodl	equ	0xFF3
  8012                           intcon	equ	0xFF2
  8013                           intcon2	equ	0xFF1
  8014                           intcon3	equ	0xFF0
  8015                           postinc0	equ	0xFEE
  8016                           plusw0	equ	0xFEB
  8017                           wreg	equ	0xFE8
  8018                           postinc1	equ	0xFE6
  8019                           postdec1	equ	0xFE5
  8020                           plusw1	equ	0xFE3
  8021                           fsr1h	equ	0xFE2
  8022                           fsr1l	equ	0xFE1
  8023                           indf2	equ	0xFDF
  8024                           postinc2	equ	0xFDE
  8025                           postdec2	equ	0xFDD
  8026                           plusw2	equ	0xFDB
  8027                           fsr2h	equ	0xFDA
  8028                           fsr2l	equ	0xFD9
  8029                           status	equ	0xFD8
  8030                           
  8031 ;; *************** function _USBIncrement1msInternalTimers *****************
  8032 ;; Defined at:
  8033 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;		None
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;		None
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, status,2, status,0
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8051 ;;Total ram usage:        0 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:   11
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		_USBDeviceTasks
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text32
  8062  005E48                     __ptext32:
  8063                           	opt stack 0
  8064  005E48                     _USBIncrement1msInternalTimers:
  8065                           	opt stack 15
  8066                           
  8067                           ;usb_device.c: 3050: USB1msTickCount++;
  8068                           
  8069                           ; BSR set to: 15
  8070                           ;incstack = 0
  8071  005E48  0E01               	movlw	1
  8072  005E4A  0103               	movlb	3	; () banked
  8073  005E4C  2718               	addwf	_USB1msTickCount& (0+255),f,b
  8074  005E4E  0E00               	movlw	0
  8075  005E50  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8076  005E52  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8077  005E54  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8078                           
  8079                           ; BSR set to: 3
  8080                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8081  005E56  0101               	movlb	1	; () banked
  8082  005E58  51DE               	movf	_USBBusIsSuspended& (0+255),w,b
  8083  005E5A  A4D8               	btfss	status,2,c
  8084  005E5C  0012               	return	
  8085                           
  8086                           ; BSR set to: 1
  8087                           ;usb_device.c: 3052: {
  8088                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8089  005E5E  2BDC               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8090                           
  8091                           ; BSR set to: 1
  8092                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8093  005E60  51DC               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8094  005E62  A4D8               	btfss	status,2,c
  8095  005E64  0012               	return	
  8096                           
  8097                           ; BSR set to: 1
  8098                           ;usb_device.c: 3056: {
  8099                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8100  005E66  69DC               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8101                           
  8102                           ; BSR set to: 1
  8103  005E68  0012               	return	
  8104  005E6A                     __end_of_USBIncrement1msInternalTimers:
  8105                           	opt stack 0
  8106                           tosu	equ	0xFFF
  8107                           tosh	equ	0xFFE
  8108                           tosl	equ	0xFFD
  8109                           pclath	equ	0xFFA
  8110                           tblptru	equ	0xFF8
  8111                           tblptrh	equ	0xFF7
  8112                           tblptrl	equ	0xFF6
  8113                           tablat	equ	0xFF5
  8114                           prodh	equ	0xFF4
  8115                           prodl	equ	0xFF3
  8116                           intcon	equ	0xFF2
  8117                           intcon2	equ	0xFF1
  8118                           intcon3	equ	0xFF0
  8119                           postinc0	equ	0xFEE
  8120                           plusw0	equ	0xFEB
  8121                           wreg	equ	0xFE8
  8122                           postinc1	equ	0xFE6
  8123                           postdec1	equ	0xFE5
  8124                           plusw1	equ	0xFE3
  8125                           fsr1h	equ	0xFE2
  8126                           fsr1l	equ	0xFE1
  8127                           indf2	equ	0xFDF
  8128                           postinc2	equ	0xFDE
  8129                           postdec2	equ	0xFDD
  8130                           plusw2	equ	0xFDB
  8131                           fsr2h	equ	0xFDA
  8132                           fsr2l	equ	0xFD9
  8133                           status	equ	0xFD8
  8134                           
  8135 ;; *************** function _USBDeviceInit *****************
  8136 ;; Defined at:
  8137 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;		None
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;  i               1   37[BANK0 ] unsigned char 
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  1    wreg      void 
  8144 ;; Registers used:
  8145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8152 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8154 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8155 ;;Total ram usage:        1 bytes
  8156 ;; Hardware stack levels used:    1
  8157 ;; Hardware stack levels required when called:   12
  8158 ;; This function calls:
  8159 ;;		_memset
  8160 ;; This function is called by:
  8161 ;;		_USBDeviceTasks
  8162 ;;		_UsbDevice_MainTask
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text33
  8167  002410                     __ptext33:
  8168                           	opt stack 0
  8169  002410                     _USBDeviceInit:
  8170                           	opt stack 14
  8171                           
  8172                           ;usb_device.c: 297: uint8_t i;
  8173                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8174                           
  8175                           ; BSR set to: 1
  8176                           ;incstack = 0
  8177  002410  98A0               	bcf	4000,4,c	;volatile
  8178                           
  8179                           ;usb_device.c: 303: ;
  8180                           ;usb_device.c: 306: {UEIR = 0;};
  8181  002412  0E00               	movlw	0
  8182  002414  6E63               	movwf	3939,c	;volatile
  8183                           
  8184                           ;usb_device.c: 309: {UIR = 0;};
  8185  002416  0E00               	movlw	0
  8186  002418  6E62               	movwf	3938,c	;volatile
  8187                           
  8188                           ;usb_device.c: 312: UEP0 = 0;
  8189  00241A  0E00               	movlw	0
  8190  00241C  010F               	movlb	15	; () banked
  8191  00241E  6F26               	movwf	38,b	;volatile
  8192                           
  8193                           ; BSR set to: 15
  8194                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8195  002420  0E27               	movlw	39
  8196  002422  0100               	movlb	0	; () banked
  8197  002424  6F7D               	movwf	memset@p1& (0+255),b
  8198  002426  0E0F               	movlw	15
  8199  002428  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8200  00242A  0E00               	movlw	0
  8201  00242C  6F80               	movwf	(memset@c+1)& (0+255),b
  8202  00242E  0E00               	movlw	0
  8203  002430  6F7F               	movwf	memset@c& (0+255),b
  8204  002432  0E00               	movlw	0
  8205  002434  6F82               	movwf	(memset@n+1)& (0+255),b
  8206  002436  0E02               	movlw	2
  8207  002438  6F81               	movwf	memset@n& (0+255),b
  8208  00243A  ECEE  F02D         	call	_memset	;wreg free
  8209                           
  8210                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8211  00243E  0E16               	movlw	22
  8212  002440  010F               	movlb	15	; () banked
  8213  002442  6F39               	movwf	57,b	;volatile
  8214                           
  8215                           ; BSR set to: 15
  8216  002444  0E9F               	movlw	159
  8217  002446  6F37               	movwf	55,b	;volatile
  8218                           
  8219                           ; BSR set to: 15
  8220  002448  0E7B               	movlw	123
  8221  00244A  6F36               	movwf	54,b	;volatile
  8222                           
  8223                           ; BSR set to: 15
  8224                           ;usb_device.c: 319: ;
  8225                           ;usb_device.c: 322: ;
  8226                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8227  00244C  0E00               	movlw	0
  8228  00244E  0100               	movlb	0	; () banked
  8229  002450  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8230  002452                     l9261:
  8231                           
  8232                           ; BSR set to: 0
  8233  002452  0E0B               	movlw	11
  8234  002454  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8235  002456  D001               	goto	l1589
  8236  002458  D00E               	goto	u7300
  8237  00245A                     l1589:
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;usb_device.c: 326: {
  8241                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8242                           
  8243                           ; BSR set to: 0
  8244  00245A  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8245  00245C  0D04               	mullw	4
  8246  00245E  0E00               	movlw	0
  8247  002460  24F3               	addwf	prodl,w,c
  8248  002462  6ED9               	movwf	fsr2l,c
  8249  002464  0E04               	movlw	4
  8250  002466  20F4               	addwfc	prodh,w,c
  8251  002468  6EDA               	movwf	fsr2h,c
  8252  00246A  6ADE               	clrf	postinc2,c
  8253  00246C  6ADE               	clrf	postinc2,c
  8254  00246E  6ADE               	clrf	postinc2,c
  8255  002470  6ADD               	clrf	postdec2,c
  8256                           
  8257                           ; BSR set to: 0
  8258  002472  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8259  002474  D7EE               	goto	l9261
  8260  002476                     u7300:
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;usb_device.c: 328: }
  8264                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8265  002476  8C65               	bsf	3941,6,c	;volatile
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;usb_device.c: 334: UADDR = 0x00;
  8269  002478  0E00               	movlw	0
  8270  00247A  010F               	movlb	15	; () banked
  8271  00247C  6F38               	movwf	56,b	;volatile
  8272                           
  8273                           ; BSR set to: 15
  8274                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8275  00247E  9865               	bcf	3941,4,c	;volatile
  8276                           
  8277                           ; BSR set to: 15
  8278                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8279  002480  9C65               	bcf	3941,6,c	;volatile
  8280  002482                     
  8281                           ;usb_device.c: 344: {
  8282                           ;usb_device.c: 345: (UIR &= 0xF7);
  8283                           
  8284                           ; BSR set to: 15
  8285  002482  9662               	bcf	3938,3,c	;volatile
  8286                           
  8287                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8288  002484  0E00               	movlw	0
  8289  002486  0100               	movlb	0	; () banked
  8290  002488  6FBB               	movwf	(_inPipes+3)& (0+255),b
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8294  00248A  0E00               	movlw	0
  8295  00248C  0101               	movlb	1	; () banked
  8296  00248E  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8297                           
  8298                           ; BSR set to: 1
  8299                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8300  002490  0E00               	movlw	0
  8301  002492  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8302  002494  0E00               	movlw	0
  8303  002496  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8304                           
  8305                           ; BSR set to: 1
  8306                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8307  002498  B662               	btfsc	3938,3,c	;volatile
  8308  00249A  D7F3               	goto	l1591
  8309                           
  8310                           ; BSR set to: 1
  8311                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8312                           
  8313                           ; BSR set to: 1
  8314  00249C  0E01               	movlw	1
  8315  00249E  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8316                           
  8317                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8318  0024A0  0E01               	movlw	1
  8319  0024A2  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8320                           
  8321                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8322  0024A4  0E00               	movlw	0
  8323  0024A6  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8324                           
  8325                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8326  0024A8  0E00               	movlw	0
  8327  0024AA  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8328                           
  8329                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8330  0024AC  0E00               	movlw	0
  8331  0024AE  6FDE               	movwf	_USBBusIsSuspended& (0+255),b
  8332                           
  8333                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8334  0024B0  0E00               	movlw	0
  8335  0024B2  0100               	movlb	0	; () banked
  8336  0024B4  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8337  0024B6                     l9289:
  8338                           
  8339                           ; BSR set to: 0
  8340  0024B6  0E02               	movlw	2
  8341  0024B8  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8342  0024BA  D001               	goto	l1593
  8343  0024BC  D02E               	goto	u7330
  8344  0024BE                     l1593:
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;usb_device.c: 364: {
  8348                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8349                           
  8350                           ; BSR set to: 0
  8351  0024BE  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8352  0024C0  0D02               	mullw	2
  8353  0024C2  0EBE               	movlw	low _pBDTEntryIn
  8354  0024C4  24F3               	addwf	prodl,w,c
  8355  0024C6  6ED9               	movwf	fsr2l,c
  8356  0024C8  0E00               	movlw	high _pBDTEntryIn
  8357  0024CA  20F4               	addwfc	prodh,w,c
  8358  0024CC  6EDA               	movwf	fsr2h,c
  8359  0024CE  0E00               	movlw	0
  8360  0024D0  6EDE               	movwf	postinc2,c
  8361  0024D2  0E00               	movlw	0
  8362  0024D4  6EDD               	movwf	postdec2,c
  8363                           
  8364                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8365  0024D6  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8366  0024D8  0D02               	mullw	2
  8367  0024DA  0E0E               	movlw	low _pBDTEntryOut
  8368  0024DC  24F3               	addwf	prodl,w,c
  8369  0024DE  6ED9               	movwf	fsr2l,c
  8370  0024E0  0E03               	movlw	high _pBDTEntryOut
  8371  0024E2  20F4               	addwfc	prodh,w,c
  8372  0024E4  6EDA               	movwf	fsr2h,c
  8373  0024E6  0E00               	movlw	0
  8374  0024E8  6EDE               	movwf	postinc2,c
  8375  0024EA  0E00               	movlw	0
  8376  0024EC  6EDD               	movwf	postdec2,c
  8377                           
  8378                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8379  0024EE  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8380  0024F0  0D01               	mullw	1
  8381  0024F2  0ED1               	movlw	low _ep_data_in
  8382  0024F4  24F3               	addwf	prodl,w,c
  8383  0024F6  6ED9               	movwf	fsr2l,c
  8384  0024F8  0E02               	movlw	high _ep_data_in
  8385  0024FA  20F4               	addwfc	prodh,w,c
  8386  0024FC  6EDA               	movwf	fsr2h,c
  8387  0024FE  0E00               	movlw	0
  8388  002500  6EDF               	movwf	indf2,c
  8389                           
  8390                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8391  002502  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8392  002504  0D01               	mullw	1
  8393  002506  0ECE               	movlw	low _ep_data_out
  8394  002508  24F3               	addwf	prodl,w,c
  8395  00250A  6ED9               	movwf	fsr2l,c
  8396  00250C  0E02               	movlw	high _ep_data_out
  8397  00250E  20F4               	addwfc	prodh,w,c
  8398  002510  6EDA               	movwf	fsr2h,c
  8399  002512  0E00               	movlw	0
  8400  002514  6EDF               	movwf	indf2,c
  8401                           
  8402                           ; BSR set to: 0
  8403  002516  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8404  002518  D7CE               	goto	l9289
  8405  00251A                     u7330:
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;usb_device.c: 369: }
  8409                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8410                           
  8411                           ; BSR set to: 0
  8412  00251A  0E08               	movlw	8
  8413  00251C  6FBE               	movwf	_pBDTEntryIn& (0+255),b
  8414  00251E  0E04               	movlw	4
  8415  002520  6FBF               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8416                           
  8417                           ; BSR set to: 0
  8418                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8419  002522  0E16               	movlw	22
  8420  002524  010F               	movlb	15	; () banked
  8421  002526  6F26               	movwf	38,b	;volatile
  8422                           
  8423                           ; BSR set to: 15
  8424                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8425  002528  0E04               	movlw	4
  8426  00252A  0104               	movlb	4	; () banked
  8427  00252C  6F03               	movwf	3,b	;volatile
  8428  00252E  0E30               	movlw	48
  8429  002530  6F02               	movwf	2,b	;volatile
  8430                           
  8431                           ; BSR set to: 4
  8432                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8433  002532  0E08               	movlw	8
  8434  002534  6F01               	movwf	1,b	;volatile
  8435                           
  8436                           ; BSR set to: 4
  8437                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8438  002536  0E04               	movlw	4
  8439  002538  6F00               	movwf	0,b	;volatile
  8440                           
  8441                           ; BSR set to: 4
  8442                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8443  00253A  8F00               	bsf	0,7,b	;volatile
  8444                           
  8445                           ; BSR set to: 4
  8446                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8447  00253C  0E00               	movlw	0
  8448  00253E  0100               	movlb	0	; () banked
  8449  002540  6FDB               	movwf	_USBActiveConfiguration& (0+255),b
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;usb_device.c: 384: USB1msTickCount = 0;
  8453  002542  0E00               	movlw	0
  8454  002544  0103               	movlb	3	; () banked
  8455  002546  6F18               	movwf	_USB1msTickCount& (0+255),b
  8456  002548  0E00               	movlw	0
  8457  00254A  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8458  00254C  0E00               	movlw	0
  8459  00254E  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8460  002550  0E00               	movlw	0
  8461  002552  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8462                           
  8463                           ; BSR set to: 3
  8464                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8465  002554  0E00               	movlw	0
  8466  002556  0101               	movlb	1	; () banked
  8467  002558  6FDC               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8468                           
  8469                           ; BSR set to: 1
  8470                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8471  00255A  0E00               	movlw	0
  8472  00255C  0100               	movlb	0	; () banked
  8473  00255E  6FD3               	movwf	_USBDeviceState& (0+255),b
  8474                           
  8475                           ; BSR set to: 0
  8476  002560  0012               	return		;funcret
  8477  002562                     __end_of_USBDeviceInit:
  8478                           	opt stack 0
  8479                           tosu	equ	0xFFF
  8480                           tosh	equ	0xFFE
  8481                           tosl	equ	0xFFD
  8482                           pclath	equ	0xFFA
  8483                           tblptru	equ	0xFF8
  8484                           tblptrh	equ	0xFF7
  8485                           tblptrl	equ	0xFF6
  8486                           tablat	equ	0xFF5
  8487                           prodh	equ	0xFF4
  8488                           prodl	equ	0xFF3
  8489                           intcon	equ	0xFF2
  8490                           intcon2	equ	0xFF1
  8491                           intcon3	equ	0xFF0
  8492                           postinc0	equ	0xFEE
  8493                           plusw0	equ	0xFEB
  8494                           wreg	equ	0xFE8
  8495                           postinc1	equ	0xFE6
  8496                           postdec1	equ	0xFE5
  8497                           plusw1	equ	0xFE3
  8498                           fsr1h	equ	0xFE2
  8499                           fsr1l	equ	0xFE1
  8500                           indf2	equ	0xFDF
  8501                           postinc2	equ	0xFDE
  8502                           postdec2	equ	0xFDD
  8503                           plusw2	equ	0xFDB
  8504                           fsr2h	equ	0xFDA
  8505                           fsr2l	equ	0xFD9
  8506                           status	equ	0xFD8
  8507                           
  8508 ;; *************** function _USBCtrlEPService *****************
  8509 ;; Defined at:
  8510 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;		None
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;		None
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1    wreg      void 
  8517 ;; Registers used:
  8518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8526 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8527 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8528 ;;Total ram usage:        1 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; Hardware stack levels required when called:   18
  8531 ;; This function calls:
  8532 ;;		_USBCtrlTrfInHandler
  8533 ;;		_USBCtrlTrfOutHandler
  8534 ;;		_USBCtrlTrfSetupHandler
  8535 ;;		_memcpy
  8536 ;; This function is called by:
  8537 ;;		_USBDeviceTasks
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           	psect	text34
  8542  0047A6                     __ptext34:
  8543                           	opt stack 0
  8544  0047A6                     _USBCtrlEPService:
  8545                           	opt stack 8
  8546                           
  8547                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8548                           
  8549                           ; BSR set to: 0
  8550                           ;incstack = 0
  8551  0047A6  0E2D               	movlw	45
  8552  0047A8  6E29               	movwf	_USBStatusStageTimeoutCounter,c
  8553                           
  8554                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8555  0047AA  C0DA  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8556  0047AE  0EFD               	movlw	253
  8557  0047B0  0100               	movlb	0	; () banked
  8558  0047B2  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8559  0047B4  A4D8               	btfss	status,2,c
  8560  0047B6  D038               	goto	l1759
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;usb_device.c: 2401: {
  8564                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8565  0047B8  C0DA  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8566  0047BC  90D8               	bcf	status,0,c
  8567  0047BE  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8568  0047C0  0E3F               	movlw	63
  8569  0047C2  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8570  0047C4  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8571  0047C6  0D04               	mullw	4
  8572  0047C8  0E00               	movlw	0
  8573  0047CA  24F3               	addwf	prodl,w,c
  8574  0047CC  6FC8               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8575  0047CE  0E04               	movlw	4
  8576  0047D0  20F4               	addwfc	prodh,w,c
  8577  0047D2  6FC9               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8578                           
  8579                           ; BSR set to: 0
  8580                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8581  0047D4  C0C8  F0C6         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8582  0047D8  C0C9  F0C7         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8586  0047DC  0E04               	movlw	4
  8587  0047DE  1BC6               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8588                           
  8589                           ; BSR set to: 0
  8590                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8591  0047E0  C0C8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8592  0047E4  C0C9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8593  0047E8  30DF               	rrcf	223,w,c
  8594  0047EA  32E8               	rrcf	wreg,f,c
  8595  0047EC  0B0F               	andlw	15
  8596  0047EE  0A0D               	xorlw	13
  8597  0047F0  A4D8               	btfss	status,2,c
  8598  0047F2  D017               	goto	l1760
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;usb_device.c: 2418: {
  8602                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8603  0047F4  0E30               	movlw	48
  8604  0047F6  6F7D               	movwf	memcpy@d1& (0+255),b
  8605  0047F8  0E04               	movlw	4
  8606  0047FA  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8607  0047FC  EE20 F002          	lfsr	2,2
  8608  004800  51C8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8609  004802  26D9               	addwf	fsr2l,f,c
  8610  004804  51C9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8611  004806  22DA               	addwfc	fsr2h,f,c
  8612  004808  CFDE F07F          	movff	postinc2,memcpy@s1
  8613  00480C  CFDD F080          	movff	postdec2,memcpy@s1+1
  8614  004810  0E00               	movlw	0
  8615  004812  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8616  004814  0E08               	movlw	8
  8617  004816  6F81               	movwf	memcpy@n& (0+255),b
  8618  004818  EC4B  F02B         	call	_memcpy	;wreg free
  8619                           
  8620                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8621  00481C  ECF6  F024         	call	_USBCtrlTrfSetupHandler	;wreg free
  8622                           
  8623                           ;usb_device.c: 2427: }
  8624  004820  0012               	return	
  8625  004822                     l1760:
  8626                           
  8627                           ;usb_device.c: 2428: else
  8628                           ;usb_device.c: 2429: {
  8629                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8630  004822  EC94  F027         	call	_USBCtrlTrfOutHandler	;wreg free
  8631                           
  8632                           ;usb_device.c: 2432: }
  8633                           ;usb_device.c: 2433: }
  8634  004826  0012               	return	
  8635  004828                     l1759:
  8636                           
  8637                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8638  004828  0100               	movlb	0	; () banked
  8639  00482A  51DA               	movf	_USTATcopy& (0+255),w,b
  8640  00482C  0BFD               	andlw	253
  8641  00482E  0A04               	xorlw	4
  8642  004830  A4D8               	btfss	status,2,c
  8643  004832  0012               	return	
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;usb_device.c: 2435: {
  8647                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8648  004834  EC3D  F01F         	call	_USBCtrlTrfInHandler	;wreg free
  8649  004838  0012               	return	
  8650  00483A                     __end_of_USBCtrlEPService:
  8651                           	opt stack 0
  8652                           tosu	equ	0xFFF
  8653                           tosh	equ	0xFFE
  8654                           tosl	equ	0xFFD
  8655                           pclath	equ	0xFFA
  8656                           tblptru	equ	0xFF8
  8657                           tblptrh	equ	0xFF7
  8658                           tblptrl	equ	0xFF6
  8659                           tablat	equ	0xFF5
  8660                           prodh	equ	0xFF4
  8661                           prodl	equ	0xFF3
  8662                           intcon	equ	0xFF2
  8663                           intcon2	equ	0xFF1
  8664                           intcon3	equ	0xFF0
  8665                           postinc0	equ	0xFEE
  8666                           plusw0	equ	0xFEB
  8667                           wreg	equ	0xFE8
  8668                           postinc1	equ	0xFE6
  8669                           postdec1	equ	0xFE5
  8670                           plusw1	equ	0xFE3
  8671                           fsr1h	equ	0xFE2
  8672                           fsr1l	equ	0xFE1
  8673                           indf2	equ	0xFDF
  8674                           postinc2	equ	0xFDE
  8675                           postdec2	equ	0xFDD
  8676                           plusw2	equ	0xFDB
  8677                           fsr2h	equ	0xFDA
  8678                           fsr2l	equ	0xFD9
  8679                           status	equ	0xFD8
  8680                           
  8681 ;; *************** function _memcpy *****************
  8682 ;; Defined at:
  8683 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;  d1              2   29[BANK0 ] PTR void 
  8686 ;;		 -> SetupPkt(8), 
  8687 ;;  s1              2   31[BANK0 ] PTR const void 
  8688 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8689 ;;  n               2   33[BANK0 ] unsigned int 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  8692 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8693 ;;  d               2   35[BANK0 ] PTR unsigned char 
  8694 ;;		 -> SetupPkt(8), 
  8695 ;;  tmp             1   39[BANK0 ] unsigned char 
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  2   29[BANK0 ] PTR void 
  8698 ;; Registers used:
  8699 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8705 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8706 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8708 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8709 ;;Total ram usage:       11 bytes
  8710 ;; Hardware stack levels used:    1
  8711 ;; Hardware stack levels required when called:   11
  8712 ;; This function calls:
  8713 ;;		Nothing
  8714 ;; This function is called by:
  8715 ;;		_USBCtrlEPService
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719                           	psect	text35
  8720  005696                     __ptext35:
  8721                           	opt stack 0
  8722  005696                     _memcpy:
  8723                           	opt stack 14
  8724                           
  8725                           ;incstack = 0
  8726  005696  C07F  F085         	movff	memcpy@s1,memcpy@s
  8727  00569A  C080  F086         	movff	memcpy@s1+1,memcpy@s+1
  8728  00569E  C07D  F083         	movff	memcpy@d1,memcpy@d
  8729  0056A2  C07E  F084         	movff	memcpy@d1+1,memcpy@d+1
  8730  0056A6  D011               	goto	l3074
  8731  0056A8                     l8535:
  8732  0056A8  C085  FFD9         	movff	memcpy@s,fsr2l
  8733  0056AC  C086  FFDA         	movff	memcpy@s+1,fsr2h
  8734  0056B0  50DF               	movf	indf2,w,c
  8735  0056B2  0100               	movlb	0	; () banked
  8736  0056B4  6F87               	movwf	memcpy@tmp& (0+255),b
  8737                           
  8738                           ; BSR set to: 0
  8739  0056B6  4B85               	infsnz	memcpy@s& (0+255),f,b
  8740  0056B8  2B86               	incf	(memcpy@s+1)& (0+255),f,b
  8741                           
  8742                           ; BSR set to: 0
  8743  0056BA  C083  FFD9         	movff	memcpy@d,fsr2l
  8744  0056BE  C084  FFDA         	movff	memcpy@d+1,fsr2h
  8745  0056C2  C087  FFDF         	movff	memcpy@tmp,indf2
  8746                           
  8747                           ; BSR set to: 0
  8748  0056C6  4B83               	infsnz	memcpy@d& (0+255),f,b
  8749  0056C8  2B84               	incf	(memcpy@d+1)& (0+255),f,b
  8750  0056CA                     l3074:
  8751                           
  8752                           ; BSR set to: 0
  8753  0056CA  0100               	movlb	0	; () banked
  8754  0056CC  0781               	decf	memcpy@n& (0+255),f,b
  8755  0056CE  A0D8               	btfss	status,0,c
  8756  0056D0  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8757  0056D2  2981               	incf	memcpy@n& (0+255),w,b
  8758  0056D4  E1E9               	bnz	l8535
  8759  0056D6  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8760  0056D8  B4D8               	btfsc	status,2,c
  8761  0056DA  0012               	return	
  8762  0056DC  D7E5               	goto	l3075
  8763  0056DE                     __end_of_memcpy:
  8764                           	opt stack 0
  8765                           tosu	equ	0xFFF
  8766                           tosh	equ	0xFFE
  8767                           tosl	equ	0xFFD
  8768                           pclath	equ	0xFFA
  8769                           tblptru	equ	0xFF8
  8770                           tblptrh	equ	0xFF7
  8771                           tblptrl	equ	0xFF6
  8772                           tablat	equ	0xFF5
  8773                           prodh	equ	0xFF4
  8774                           prodl	equ	0xFF3
  8775                           intcon	equ	0xFF2
  8776                           intcon2	equ	0xFF1
  8777                           intcon3	equ	0xFF0
  8778                           postinc0	equ	0xFEE
  8779                           plusw0	equ	0xFEB
  8780                           wreg	equ	0xFE8
  8781                           postinc1	equ	0xFE6
  8782                           postdec1	equ	0xFE5
  8783                           plusw1	equ	0xFE3
  8784                           fsr1h	equ	0xFE2
  8785                           fsr1l	equ	0xFE1
  8786                           indf2	equ	0xFDF
  8787                           postinc2	equ	0xFDE
  8788                           postdec2	equ	0xFDD
  8789                           plusw2	equ	0xFDB
  8790                           fsr2h	equ	0xFDA
  8791                           fsr2l	equ	0xFD9
  8792                           status	equ	0xFD8
  8793                           
  8794 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8795 ;; Defined at:
  8796 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;		None
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;		None
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      void 
  8803 ;; Registers used:
  8804 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8814 ;;Total ram usage:        0 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:   17
  8817 ;; This function calls:
  8818 ;;		_USBCheckStdRequest
  8819 ;;		_USBCtrlEPServiceComplete
  8820 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8821 ;; This function is called by:
  8822 ;;		_USBCtrlEPService
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           
  8826                           	psect	text36
  8827  0049EC                     __ptext36:
  8828                           	opt stack 0
  8829  0049EC                     _USBCtrlTrfSetupHandler:
  8830                           	opt stack 8
  8831                           
  8832                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;incstack = 0
  8836  0049EC  0E00               	movlw	0
  8837  0049EE  0100               	movlb	0	; () banked
  8838  0049F0  6FD2               	movwf	_shortPacketStatus& (0+255),b
  8839                           
  8840                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  8841  0049F2  0E00               	movlw	0
  8842  0049F4  6FCF               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  8843                           
  8844                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  8845  0049F6  0E00               	movlw	0
  8846  0049F8  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8847                           
  8848                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  8849  0049FA  0E00               	movlw	0
  8850  0049FC  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8851                           
  8852                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  8853  0049FE  0E00               	movlw	0
  8854  004A00  0101               	movlb	1	; () banked
  8855  004A02  6FDD               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8856                           
  8857                           ;usb_device.c: 2493: controlTransferState = 0;
  8858  004A04  0E00               	movlw	0
  8859  004A06  0100               	movlb	0	; () banked
  8860  004A08  6FD1               	movwf	_controlTransferState& (0+255),b
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8864  004A0A  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
  8865  004A0E  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8866  004A12  0E7F               	movlw	127
  8867  004A14  16DF               	andwf	indf2,f,c
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8871  004A16  0E04               	movlw	4
  8872  004A18  1BBE               	xorwf	_pBDTEntryIn& (0+255),f,b
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8876  004A1A  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
  8877  004A1E  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8878  004A22  0E7F               	movlw	127
  8879  004A24  16DF               	andwf	indf2,f,c
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8883  004A26  0E04               	movlw	4
  8884  004A28  1BBE               	xorwf	_pBDTEntryIn& (0+255),f,b
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8888  004A2A  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8889  004A2E  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8890  004A32  0E7F               	movlw	127
  8891  004A34  16DF               	andwf	indf2,f,c
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  8895  004A36  0E00               	movlw	0
  8896  004A38  6FBB               	movwf	(_inPipes+3)& (0+255),b
  8897                           
  8898                           ; BSR set to: 0
  8899                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  8900  004A3A  0E00               	movlw	0
  8901  004A3C  6FBD               	movwf	(_inPipes+5)& (0+255),b
  8902  004A3E  0E00               	movlw	0
  8903  004A40  6FBC               	movwf	(_inPipes+4)& (0+255),b
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  8907  004A42  0E00               	movlw	0
  8908  004A44  0101               	movlb	1	; () banked
  8909  004A46  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8910                           
  8911                           ; BSR set to: 1
  8912                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  8913  004A48  0E00               	movlw	0
  8914  004A4A  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8915  004A4C  0E00               	movlw	0
  8916  004A4E  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8917                           
  8918                           ; BSR set to: 1
  8919                           ;usb_device.c: 2517: USBCheckStdRequest();
  8920  004A50  EC60  F01A         	call	_USBCheckStdRequest	;wreg free
  8921                           
  8922                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8923  004A54  0E00               	movlw	0
  8924  004A56  0100               	movlb	0	; () banked
  8925  004A58  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8926  004A5A  0E03               	movlw	3
  8927  004A5C  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8928  004A5E  0E00               	movlw	0
  8929  004A60  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8930  004A62  0E00               	movlw	0
  8931  004A64  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8932  004A66  0E00               	movlw	0
  8933  004A68  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8934  004A6A  0E00               	movlw	0
  8935  004A6C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8936  004A6E  EC2B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8937                           
  8938                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  8939  004A72  EC10  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  8940  004A76  0012               	return		;funcret
  8941  004A78                     __end_of_USBCtrlTrfSetupHandler:
  8942                           	opt stack 0
  8943                           tosu	equ	0xFFF
  8944                           tosh	equ	0xFFE
  8945                           tosl	equ	0xFFD
  8946                           pclath	equ	0xFFA
  8947                           tblptru	equ	0xFF8
  8948                           tblptrh	equ	0xFF7
  8949                           tblptrl	equ	0xFF6
  8950                           tablat	equ	0xFF5
  8951                           prodh	equ	0xFF4
  8952                           prodl	equ	0xFF3
  8953                           intcon	equ	0xFF2
  8954                           intcon2	equ	0xFF1
  8955                           intcon3	equ	0xFF0
  8956                           postinc0	equ	0xFEE
  8957                           plusw0	equ	0xFEB
  8958                           wreg	equ	0xFE8
  8959                           postinc1	equ	0xFE6
  8960                           postdec1	equ	0xFE5
  8961                           plusw1	equ	0xFE3
  8962                           fsr1h	equ	0xFE2
  8963                           fsr1l	equ	0xFE1
  8964                           indf2	equ	0xFDF
  8965                           postinc2	equ	0xFDE
  8966                           postdec2	equ	0xFDD
  8967                           plusw2	equ	0xFDB
  8968                           fsr2h	equ	0xFDA
  8969                           fsr2l	equ	0xFD9
  8970                           status	equ	0xFD8
  8971                           
  8972 ;; *************** function _USBCtrlEPServiceComplete *****************
  8973 ;; Defined at:
  8974 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8975 ;; Parameters:    Size  Location     Type
  8976 ;;		None
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;		None
  8979 ;; Return value:  Size  Location     Type
  8980 ;;                  1    wreg      void 
  8981 ;; Registers used:
  8982 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8983 ;; Tracked objects:
  8984 ;;		On entry : 0/0
  8985 ;;		On exit  : 0/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8992 ;;Total ram usage:        0 bytes
  8993 ;; Hardware stack levels used:    1
  8994 ;; Hardware stack levels required when called:   13
  8995 ;; This function calls:
  8996 ;;		_USBCtrlEPAllowDataStage
  8997 ;;		_USBCtrlEPAllowStatusStage
  8998 ;; This function is called by:
  8999 ;;		_USBCtrlTrfSetupHandler
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           	psect	text37
  9004  003020                     __ptext37:
  9005                           	opt stack 0
  9006  003020                     _USBCtrlEPServiceComplete:
  9007                           	opt stack 11
  9008                           
  9009                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9010                           
  9011                           ;incstack = 0
  9012  003020  9865               	bcf	3941,4,c	;volatile
  9013                           
  9014                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9015  003022  0100               	movlb	0	; () banked
  9016  003024  BFBB               	btfsc	(_inPipes+3)& (0+255),7,b
  9017  003026  D03B               	goto	l1669
  9018                           
  9019                           ; BSR set to: 0
  9020                           ;usb_device.c: 1647: {
  9021                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9022  003028  0101               	movlb	1	; () banked
  9023  00302A  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9024  00302C  D00C               	goto	l1670
  9025                           
  9026                           ; BSR set to: 1
  9027                           ;usb_device.c: 1649: {
  9028                           ;usb_device.c: 1650: controlTransferState = 2;
  9029  00302E  0E02               	movlw	2
  9030  003030  0100               	movlb	0	; () banked
  9031  003032  6FD1               	movwf	_controlTransferState& (0+255),b
  9032                           
  9033                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9034  003034  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9035  003036  B4D8               	btfsc	status,2,c
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;usb_device.c: 1662: {
  9039                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9040  003038  ECA2  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
  9041                           
  9042                           ;usb_device.c: 1664: }
  9043                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9044  00303C  0E00               	movlw	0
  9045  00303E  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9046                           
  9047                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9048  003040  0E00               	movlw	0
  9049  003042  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9050                           
  9051                           ;usb_device.c: 1670: }
  9052  003044  0012               	return	
  9053  003046                     l1670:
  9054                           
  9055                           ;usb_device.c: 1671: else
  9056                           ;usb_device.c: 1672: {
  9057                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9058  003046  0100               	movlb	0	; () banked
  9059  003048  EE20 F001          	lfsr	2,1
  9060  00304C  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9061  00304E  26D9               	addwf	fsr2l,f,c
  9062  003050  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9063  003052  22DA               	addwfc	fsr2h,f,c
  9064  003054  0E08               	movlw	8
  9065  003056  6EDF               	movwf	indf2,c
  9066                           
  9067                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9068  003058  EE20 F002          	lfsr	2,2
  9069  00305C  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9070  00305E  26D9               	addwf	fsr2l,f,c
  9071  003060  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9072  003062  22DA               	addwfc	fsr2h,f,c
  9073  003064  0E30               	movlw	48
  9074  003066  6EDE               	movwf	postinc2,c
  9075  003068  0E04               	movlw	4
  9076  00306A  6EDD               	movwf	postdec2,c
  9077                           
  9078                           ; BSR set to: 0
  9079                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9080  00306C  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9081  003070  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9082  003074  0E0C               	movlw	12
  9083  003076  6EDF               	movwf	indf2,c
  9084                           
  9085                           ; BSR set to: 0
  9086                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9087  003078  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9088  00307C  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9089  003080  0E00               	movlw	0
  9090  003082  8EDB               	bsf	plusw2,7,c
  9091                           
  9092                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9093  003084  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
  9094  003088  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9095  00308C  0E04               	movlw	4
  9096  00308E  6EDF               	movwf	indf2,c
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9100  003090  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
  9101  003094  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9102  003098  0E00               	movlw	0
  9103  00309A  8EDB               	bsf	plusw2,7,c
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;usb_device.c: 1683: }
  9107                           ;usb_device.c: 1684: }
  9108  00309C  0012               	return	
  9109  00309E                     l1669:
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;usb_device.c: 1685: else
  9113                           ;usb_device.c: 1686: {
  9114                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9115  00309E  0104               	movlb	4	; () banked
  9116  0030A0  AF30               	btfss	48,7,b	;volatile
  9117  0030A2  D012               	goto	l1674
  9118                           
  9119                           ; BSR set to: 4
  9120                           ;usb_device.c: 1688: {
  9121                           ;usb_device.c: 1689: controlTransferState = 1;
  9122  0030A4  0E01               	movlw	1
  9123  0030A6  0100               	movlb	0	; () banked
  9124  0030A8  6FD1               	movwf	_controlTransferState& (0+255),b
  9125                           
  9126                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9127  0030AA  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9128  0030AC  B4D8               	btfsc	status,2,c
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;usb_device.c: 1704: {
  9132                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9133  0030AE  ECA2  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
  9134                           
  9135                           ;usb_device.c: 1706: }
  9136                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9137  0030B2  0E00               	movlw	0
  9138  0030B4  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9139                           
  9140                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9141  0030B6  0E00               	movlw	0
  9142  0030B8  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9143                           
  9144                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9145  0030BA  0100               	movlb	0	; () banked
  9146  0030BC  51CF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9147  0030BE  A4D8               	btfss	status,2,c
  9148  0030C0  0012               	return	
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;usb_device.c: 1731: {
  9152                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9153  0030C2  EC49  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9154                           
  9155                           ;usb_device.c: 1733: }
  9156                           ;usb_device.c: 1734: }
  9157  0030C6  0012               	return	
  9158  0030C8                     l1674:
  9159                           
  9160                           ;usb_device.c: 1735: else
  9161                           ;usb_device.c: 1736: {
  9162                           ;usb_device.c: 1747: controlTransferState = 2;
  9163  0030C8  0E02               	movlw	2
  9164  0030CA  0100               	movlb	0	; () banked
  9165  0030CC  6FD1               	movwf	_controlTransferState& (0+255),b
  9166                           
  9167                           ; BSR set to: 0
  9168                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9169  0030CE  EE20 F001          	lfsr	2,1
  9170  0030D2  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9171  0030D4  26D9               	addwf	fsr2l,f,c
  9172  0030D6  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9173  0030D8  22DA               	addwfc	fsr2h,f,c
  9174  0030DA  0E08               	movlw	8
  9175  0030DC  6EDF               	movwf	indf2,c
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9179  0030DE  EE20 F002          	lfsr	2,2
  9180  0030E2  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9181  0030E4  26D9               	addwf	fsr2l,f,c
  9182  0030E6  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9183  0030E8  22DA               	addwfc	fsr2h,f,c
  9184  0030EA  0E30               	movlw	48
  9185  0030EC  6EDE               	movwf	postinc2,c
  9186  0030EE  0E04               	movlw	4
  9187  0030F0  6EDD               	movwf	postdec2,c
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9191  0030F2  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9192  0030F6  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9193  0030FA  0E04               	movlw	4
  9194  0030FC  6EDF               	movwf	indf2,c
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9198  0030FE  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9199  003102  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9200  003106  0E00               	movlw	0
  9201  003108  8EDB               	bsf	plusw2,7,c
  9202                           
  9203                           ; BSR set to: 0
  9204                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9205  00310A  0E00               	movlw	0
  9206  00310C  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9210  00310E  0E00               	movlw	0
  9211  003110  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9215  003112  51CF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9216  003114  A4D8               	btfss	status,2,c
  9217  003116  0012               	return	
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;usb_device.c: 1759: {
  9221                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9222  003118  EC49  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9223  00311C  0012               	return	
  9224  00311E                     __end_of_USBCtrlEPServiceComplete:
  9225                           	opt stack 0
  9226                           tosu	equ	0xFFF
  9227                           tosh	equ	0xFFE
  9228                           tosl	equ	0xFFD
  9229                           pclath	equ	0xFFA
  9230                           tblptru	equ	0xFF8
  9231                           tblptrh	equ	0xFF7
  9232                           tblptrl	equ	0xFF6
  9233                           tablat	equ	0xFF5
  9234                           prodh	equ	0xFF4
  9235                           prodl	equ	0xFF3
  9236                           intcon	equ	0xFF2
  9237                           intcon2	equ	0xFF1
  9238                           intcon3	equ	0xFF0
  9239                           postinc0	equ	0xFEE
  9240                           plusw0	equ	0xFEB
  9241                           wreg	equ	0xFE8
  9242                           postinc1	equ	0xFE6
  9243                           postdec1	equ	0xFE5
  9244                           plusw1	equ	0xFE3
  9245                           fsr1h	equ	0xFE2
  9246                           fsr1l	equ	0xFE1
  9247                           indf2	equ	0xFDF
  9248                           postinc2	equ	0xFDE
  9249                           postdec2	equ	0xFDD
  9250                           plusw2	equ	0xFDB
  9251                           fsr2h	equ	0xFDA
  9252                           fsr2l	equ	0xFD9
  9253                           status	equ	0xFD8
  9254                           
  9255 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9256 ;; Defined at:
  9257 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;		None
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;		None
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  1    wreg      void 
  9264 ;; Registers used:
  9265 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9266 ;; Tracked objects:
  9267 ;;		On entry : 0/0
  9268 ;;		On exit  : 0/0
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9275 ;;Total ram usage:        0 bytes
  9276 ;; Hardware stack levels used:    1
  9277 ;; Hardware stack levels required when called:   12
  9278 ;; This function calls:
  9279 ;;		_USBCtrlTrfTxService
  9280 ;; This function is called by:
  9281 ;;		_USBCtrlEPServiceComplete
  9282 ;; This function uses a non-reentrant model
  9283 ;;
  9284                           
  9285                           	psect	text38
  9286  004544                     __ptext38:
  9287                           	opt stack 0
  9288  004544                     _USBCtrlEPAllowDataStage:
  9289                           	opt stack 11
  9290                           
  9291                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9292                           
  9293                           ;incstack = 0
  9294  004544  0E00               	movlw	0
  9295  004546  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9296                           
  9297                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9298  004548  0E00               	movlw	0
  9299  00454A  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9300                           
  9301                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9302  00454C  0E02               	movlw	2
  9303  00454E  0100               	movlb	0	; () banked
  9304  004550  19D1               	xorwf	_controlTransferState& (0+255),w,b
  9305  004552  A4D8               	btfss	status,2,c
  9306  004554  D01F               	goto	l1658
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;usb_device.c: 1512: {
  9310                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9311  004556  EE20 F001          	lfsr	2,1
  9312  00455A  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9313  00455C  26D9               	addwf	fsr2l,f,c
  9314  00455E  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9315  004560  22DA               	addwfc	fsr2h,f,c
  9316  004562  0E08               	movlw	8
  9317  004564  6EDF               	movwf	indf2,c
  9318                           
  9319                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9320  004566  EE20 F002          	lfsr	2,2
  9321  00456A  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9322  00456C  26D9               	addwf	fsr2l,f,c
  9323  00456E  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9324  004570  22DA               	addwfc	fsr2h,f,c
  9325  004572  0E38               	movlw	56
  9326  004574  6EDE               	movwf	postinc2,c
  9327  004576  0E04               	movlw	4
  9328  004578  6EDD               	movwf	postdec2,c
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9332  00457A  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9333  00457E  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9334  004582  0E48               	movlw	72
  9335  004584  6EDF               	movwf	indf2,c
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9339  004586  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9340  00458A  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9341  00458E  0E00               	movlw	0
  9342  004590  8EDB               	bsf	plusw2,7,c
  9343                           
  9344                           ;usb_device.c: 1518: }
  9345  004592  0012               	return	
  9346  004594                     l1658:
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;usb_device.c: 1519: else
  9350                           ;usb_device.c: 1520: {
  9351                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9352                           
  9353                           ; BSR set to: 0
  9354  004594  51BC               	movf	(_inPipes+4)& (0+255),w,b
  9355  004596  0104               	movlb	4	; () banked
  9356  004598  5D36               	subwf	54,w,b	;volatile
  9357  00459A  0100               	movlb	0	; () banked
  9358  00459C  51BD               	movf	(_inPipes+5)& (0+255),w,b
  9359  00459E  0104               	movlb	4	; () banked
  9360  0045A0  5937               	subwfb	55,w,b	;volatile
  9361  0045A2  B0D8               	btfsc	status,0,c
  9362  0045A4  D004               	goto	l1660
  9363                           
  9364                           ; BSR set to: 4
  9365                           ;usb_device.c: 1524: {
  9366                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9367  0045A6  C436 F0BC          	movff	1078,_inPipes+4	;volatile
  9368  0045AA  C437 F0BD          	movff	1079,_inPipes+5	;volatile
  9369  0045AE                     l1660:
  9370                           
  9371                           ; BSR set to: 4
  9372                           ;usb_device.c: 1526: }
  9373                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9374                           
  9375                           ; BSR set to: 4
  9376  0045AE  ECD2  F01A         	call	_USBCtrlTrfTxService	;wreg free
  9377                           
  9378                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9379  0045B2  0100               	movlb	0	; () banked
  9380  0045B4  EE20 F002          	lfsr	2,2
  9381  0045B8  51BE               	movf	_pBDTEntryIn& (0+255),w,b
  9382  0045BA  26D9               	addwf	fsr2l,f,c
  9383  0045BC  51BF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9384  0045BE  22DA               	addwfc	fsr2h,f,c
  9385  0045C0  0E38               	movlw	56
  9386  0045C2  6EDE               	movwf	postinc2,c
  9387  0045C4  0E04               	movlw	4
  9388  0045C6  6EDD               	movwf	postdec2,c
  9389                           
  9390                           ; BSR set to: 0
  9391                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9392  0045C8  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
  9393  0045CC  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9394  0045D0  0E48               	movlw	72
  9395  0045D2  6EDF               	movwf	indf2,c
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9399  0045D4  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
  9400  0045D8  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9401  0045DC  0E00               	movlw	0
  9402  0045DE  8EDB               	bsf	plusw2,7,c
  9403  0045E0  0012               	return	
  9404  0045E2                     __end_of_USBCtrlEPAllowDataStage:
  9405                           	opt stack 0
  9406                           tosu	equ	0xFFF
  9407                           tosh	equ	0xFFE
  9408                           tosl	equ	0xFFD
  9409                           pclath	equ	0xFFA
  9410                           tblptru	equ	0xFF8
  9411                           tblptrh	equ	0xFF7
  9412                           tblptrl	equ	0xFF6
  9413                           tablat	equ	0xFF5
  9414                           prodh	equ	0xFF4
  9415                           prodl	equ	0xFF3
  9416                           intcon	equ	0xFF2
  9417                           intcon2	equ	0xFF1
  9418                           intcon3	equ	0xFF0
  9419                           postinc0	equ	0xFEE
  9420                           plusw0	equ	0xFEB
  9421                           wreg	equ	0xFE8
  9422                           postinc1	equ	0xFE6
  9423                           postdec1	equ	0xFE5
  9424                           plusw1	equ	0xFE3
  9425                           fsr1h	equ	0xFE2
  9426                           fsr1l	equ	0xFE1
  9427                           indf2	equ	0xFDF
  9428                           postinc2	equ	0xFDE
  9429                           postdec2	equ	0xFDD
  9430                           plusw2	equ	0xFDB
  9431                           fsr2h	equ	0xFDA
  9432                           fsr2l	equ	0xFD9
  9433                           status	equ	0xFD8
  9434                           
  9435 ;; *************** function _USBCheckStdRequest *****************
  9436 ;; Defined at:
  9437 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9438 ;; Parameters:    Size  Location     Type
  9439 ;;		None
  9440 ;; Auto vars:     Size  Location     Type
  9441 ;;		None
  9442 ;; Return value:  Size  Location     Type
  9443 ;;                  1    wreg      void 
  9444 ;; Registers used:
  9445 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9446 ;; Tracked objects:
  9447 ;;		On entry : 0/0
  9448 ;;		On exit  : 0/0
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9455 ;;Total ram usage:        0 bytes
  9456 ;; Hardware stack levels used:    1
  9457 ;; Hardware stack levels required when called:   16
  9458 ;; This function calls:
  9459 ;;		_USBStdFeatureReqHandler
  9460 ;;		_USBStdGetDscHandler
  9461 ;;		_USBStdGetStatusHandler
  9462 ;;		_USBStdSetCfgHandler
  9463 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9464 ;; This function is called by:
  9465 ;;		_USBCtrlTrfSetupHandler
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469                           	psect	text39
  9470  0034C0                     __ptext39:
  9471                           	opt stack 0
  9472  0034C0                     _USBCheckStdRequest:
  9473                           	opt stack 8
  9474                           
  9475                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9476                           
  9477                           ; BSR set to: 0
  9478                           ;incstack = 0
  9479  0034C0  0104               	movlb	4	; () banked
  9480  0034C2  3930               	swapf	48,w,b	;volatile
  9481  0034C4  32E8               	rrcf	wreg,f,c
  9482  0034C6  0B03               	andlw	3
  9483  0034C8  0900               	iorlw	0
  9484  0034CA  A4D8               	btfss	status,2,c
  9485  0034CC  0012               	return	
  9486  0034CE  D048               	goto	l1793
  9487  0034D0                     l1794:
  9488                           
  9489                           ; BSR set to: 4
  9490                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9491  0034D0  0100               	movlb	0	; () banked
  9492  0034D2  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9496  0034D4  0E08               	movlw	8
  9497  0034D6  6FD3               	movwf	_USBDeviceState& (0+255),b
  9498                           
  9499                           ;usb_device.c: 2713: break;
  9500  0034D8  0012               	return	
  9501  0034DA                     
  9502                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9503                           
  9504                           ; BSR set to: 0
  9505  0034DA  ECC9  F015         	call	_USBStdGetDscHandler	;wreg free
  9506                           
  9507                           ;usb_device.c: 2716: break;
  9508  0034DE  0012               	return	
  9509  0034E0                     
  9510                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9511  0034E0  EC7A  F019         	call	_USBStdSetCfgHandler	;wreg free
  9512                           
  9513                           ;usb_device.c: 2719: break;
  9514  0034E4  0012               	return	
  9515  0034E6                     
  9516                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9517  0034E6  0EDB               	movlw	low _USBActiveConfiguration
  9518  0034E8  0100               	movlb	0	; () banked
  9519  0034EA  6FB8               	movwf	_inPipes& (0+255),b
  9520  0034EC  0E00               	movlw	high _USBActiveConfiguration
  9521  0034EE  6FB9               	movwf	(_inPipes+1)& (0+255),b
  9522                           
  9523                           ; BSR set to: 0
  9524                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9525  0034F0  81BB               	bsf	(_inPipes+3)& (0+255),0,b
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9529  0034F2  0E01               	movlw	1
  9530  0034F4  6FBC               	movwf	(_inPipes+4)& (0+255),b
  9531                           
  9532                           ; BSR set to: 0
  9533                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9534  0034F6  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
  9535                           
  9536                           ;usb_device.c: 2725: break;
  9537  0034F8  0012               	return	
  9538  0034FA                     
  9539                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9540                           
  9541                           ; BSR set to: 0
  9542  0034FA  ECFD  F01F         	call	_USBStdGetStatusHandler	;wreg free
  9543                           
  9544                           ;usb_device.c: 2728: break;
  9545  0034FE  0012               	return	
  9546  003500                     
  9547                           ;usb_device.c: 2730: case 3:
  9548                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9549  003500  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9550                           
  9551                           ;usb_device.c: 2732: break;
  9552  003504  0012               	return	
  9553  003506                     
  9554                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9555  003506  0104               	movlb	4	; () banked
  9556  003508  5134               	movf	52,w,b	;volatile
  9557  00350A  0D01               	mullw	1
  9558  00350C  0EF0               	movlw	low _USBAlternateInterface
  9559  00350E  24F3               	addwf	prodl,w,c
  9560  003510  0100               	movlb	0	; () banked
  9561  003512  6FB8               	movwf	_inPipes& (0+255),b
  9562  003514  0E02               	movlw	high _USBAlternateInterface
  9563  003516  20F4               	addwfc	prodh,w,c
  9564  003518  6FB9               	movwf	(_inPipes+1)& (0+255),b
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9568  00351A  81BB               	bsf	(_inPipes+3)& (0+255),0,b
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9572  00351C  0E01               	movlw	1
  9573  00351E  6FBC               	movwf	(_inPipes+4)& (0+255),b
  9574                           
  9575                           ; BSR set to: 0
  9576                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9577  003520  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
  9578                           
  9579                           ;usb_device.c: 2738: break;
  9580  003522  0012               	return	
  9581  003524                     l1803:
  9582                           
  9583                           ; BSR set to: 4
  9584                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9585  003524  0100               	movlb	0	; () banked
  9586  003526  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
  9587                           
  9588                           ; BSR set to: 0
  9589                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9590  003528  0104               	movlb	4	; () banked
  9591  00352A  5134               	movf	52,w,b	;volatile
  9592  00352C  0D01               	mullw	1
  9593  00352E  0EF0               	movlw	low _USBAlternateInterface
  9594  003530  24F3               	addwf	prodl,w,c
  9595  003532  6ED9               	movwf	fsr2l,c
  9596  003534  0E02               	movlw	high _USBAlternateInterface
  9597  003536  20F4               	addwfc	prodh,w,c
  9598  003538  6EDA               	movwf	fsr2h,c
  9599  00353A  C432 FFDF          	movff	1074,indf2	;volatile
  9600                           
  9601                           ;usb_device.c: 2742: break;
  9602  00353E  0012               	return	
  9603  003540                     
  9604                           ; BSR set to: 4
  9605                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9606                           
  9607                           ; BSR set to: 4
  9608  003540  0E00               	movlw	0
  9609  003542  0100               	movlb	0	; () banked
  9610  003544  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9611  003546  0E02               	movlw	2
  9612  003548  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9613  00354A  0E00               	movlw	0
  9614  00354C  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9615  00354E  0E00               	movlw	0
  9616  003550  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9617  003552  0E00               	movlw	0
  9618  003554  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9619  003556  0E00               	movlw	0
  9620  003558  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9621  00355A  EC2B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9622                           
  9623                           ;usb_device.c: 2749: }
  9624                           
  9625                           ;usb_device.c: 2748: break;
  9626                           
  9627                           ;usb_device.c: 2747: default:
  9628                           
  9629                           ;usb_device.c: 2746: case 12:
  9630                           
  9631                           ;usb_device.c: 2745: break;
  9632  00355E  0012               	return	
  9633  003560                     l1793:
  9634  003560  0104               	movlb	4	; () banked
  9635  003562  5131               	movf	49,w,b	;volatile
  9636                           
  9637                           ; Switch size 1, requested type "space"
  9638                           ; Number of cases is 11, Range of values is 0 to 12
  9639                           ; switch strategies available:
  9640                           ; Name         Instructions Cycles
  9641                           ; simple_byte           34    18 (average)
  9642                           ;	Chosen strategy is simple_byte
  9643  003564  0A00               	xorlw	0	; case 0
  9644  003566  B4D8               	btfsc	status,2,c
  9645  003568  D7C8               	goto	l1799
  9646  00356A  0A01               	xorlw	1	; case 1
  9647  00356C  B4D8               	btfsc	status,2,c
  9648  00356E  D7C8               	goto	l1800
  9649  003570  0A02               	xorlw	2	; case 3
  9650  003572  B4D8               	btfsc	status,2,c
  9651  003574  D7C5               	goto	l1800
  9652  003576  0A06               	xorlw	6	; case 5
  9653  003578  B4D8               	btfsc	status,2,c
  9654  00357A  D7AA               	goto	l1794
  9655  00357C  0A03               	xorlw	3	; case 6
  9656  00357E  B4D8               	btfsc	status,2,c
  9657  003580  D7AC               	goto	l1796
  9658  003582  0A01               	xorlw	1	; case 7
  9659  003584  B4D8               	btfsc	status,2,c
  9660  003586  D7DC               	goto	l1804
  9661  003588  0A0F               	xorlw	15	; case 8
  9662  00358A  B4D8               	btfsc	status,2,c
  9663  00358C  D7AC               	goto	l1798
  9664  00358E  0A01               	xorlw	1	; case 9
  9665  003590  B4D8               	btfsc	status,2,c
  9666  003592  D7A6               	goto	l1797
  9667  003594  0A03               	xorlw	3	; case 10
  9668  003596  B4D8               	btfsc	status,2,c
  9669  003598  D7B6               	goto	l1802
  9670  00359A  0A01               	xorlw	1	; case 11
  9671  00359C  B4D8               	btfsc	status,2,c
  9672  00359E  D7C2               	goto	l1803
  9673  0035A0  0A07               	xorlw	7	; case 12
  9674  0035A2  0012               	return	
  9675  0035A4                     __end_of_USBCheckStdRequest:
  9676                           	opt stack 0
  9677                           tosu	equ	0xFFF
  9678                           tosh	equ	0xFFE
  9679                           tosl	equ	0xFFD
  9680                           pclath	equ	0xFFA
  9681                           tblptru	equ	0xFF8
  9682                           tblptrh	equ	0xFF7
  9683                           tblptrl	equ	0xFF6
  9684                           tablat	equ	0xFF5
  9685                           prodh	equ	0xFF4
  9686                           prodl	equ	0xFF3
  9687                           intcon	equ	0xFF2
  9688                           intcon2	equ	0xFF1
  9689                           intcon3	equ	0xFF0
  9690                           postinc0	equ	0xFEE
  9691                           plusw0	equ	0xFEB
  9692                           wreg	equ	0xFE8
  9693                           postinc1	equ	0xFE6
  9694                           postdec1	equ	0xFE5
  9695                           plusw1	equ	0xFE3
  9696                           fsr1h	equ	0xFE2
  9697                           fsr1l	equ	0xFE1
  9698                           indf2	equ	0xFDF
  9699                           postinc2	equ	0xFDE
  9700                           postdec2	equ	0xFDD
  9701                           plusw2	equ	0xFDB
  9702                           fsr2h	equ	0xFDA
  9703                           fsr2l	equ	0xFD9
  9704                           status	equ	0xFD8
  9705                           
  9706 ;; *************** function _USBStdSetCfgHandler *****************
  9707 ;; Defined at:
  9708 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;		None
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;  i               1   49[BANK0 ] unsigned char 
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  1    wreg      void 
  9715 ;; Registers used:
  9716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9723 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9725 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9726 ;;Total ram usage:        1 bytes
  9727 ;; Hardware stack levels used:    1
  9728 ;; Hardware stack levels required when called:   15
  9729 ;; This function calls:
  9730 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9731 ;;		_memset
  9732 ;; This function is called by:
  9733 ;;		_USBCheckStdRequest
  9734 ;; This function uses a non-reentrant model
  9735 ;;
  9736                           
  9737                           	psect	text40
  9738  0032F4                     __ptext40:
  9739                           	opt stack 0
  9740  0032F4                     _USBStdSetCfgHandler:
  9741                           	opt stack 8
  9742                           
  9743                           ;usb_device.c: 1988: uint8_t i;
  9744                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9745                           
  9746                           ;incstack = 0
  9747  0032F4  0100               	movlb	0	; () banked
  9748  0032F6  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
  9749                           
  9750                           ; BSR set to: 0
  9751                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9752  0032F8  0E27               	movlw	39
  9753  0032FA  6F7D               	movwf	memset@p1& (0+255),b
  9754  0032FC  0E0F               	movlw	15
  9755  0032FE  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9756  003300  0E00               	movlw	0
  9757  003302  6F80               	movwf	(memset@c+1)& (0+255),b
  9758  003304  0E00               	movlw	0
  9759  003306  6F7F               	movwf	memset@c& (0+255),b
  9760  003308  0E00               	movlw	0
  9761  00330A  6F82               	movwf	(memset@n+1)& (0+255),b
  9762  00330C  0E02               	movlw	2
  9763  00330E  6F81               	movwf	memset@n& (0+255),b
  9764  003310  ECEE  F02D         	call	_memset	;wreg free
  9765                           
  9766                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9767  003314  0E00               	movlw	0
  9768  003316  0100               	movlb	0	; () banked
  9769  003318  6F7D               	movwf	memset@p1& (0+255),b
  9770  00331A  0E04               	movlw	4
  9771  00331C  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9772  00331E  0E00               	movlw	0
  9773  003320  6F80               	movwf	(memset@c+1)& (0+255),b
  9774  003322  0E00               	movlw	0
  9775  003324  6F7F               	movwf	memset@c& (0+255),b
  9776  003326  0E00               	movlw	0
  9777  003328  6F82               	movwf	(memset@n+1)& (0+255),b
  9778  00332A  0E30               	movlw	48
  9779  00332C  6F81               	movwf	memset@n& (0+255),b
  9780  00332E  ECEE  F02D         	call	_memset	;wreg free
  9781                           
  9782                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9783  003332  8C65               	bsf	3941,6,c	;volatile
  9784                           
  9785                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9786  003334  0E00               	movlw	0
  9787  003336  0100               	movlb	0	; () banked
  9788  003338  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9789  00333A                     l11621:
  9790                           
  9791                           ; BSR set to: 0
  9792  00333A  0E02               	movlw	2
  9793  00333C  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9794  00333E  D001               	goto	l1710
  9795  003340  D016               	goto	u10170
  9796  003342                     l1710:
  9797                           
  9798                           ; BSR set to: 0
  9799                           ;usb_device.c: 2006: {
  9800                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9801                           
  9802                           ; BSR set to: 0
  9803  003342  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9804  003344  0D01               	mullw	1
  9805  003346  0ED1               	movlw	low _ep_data_in
  9806  003348  24F3               	addwf	prodl,w,c
  9807  00334A  6ED9               	movwf	fsr2l,c
  9808  00334C  0E02               	movlw	high _ep_data_in
  9809  00334E  20F4               	addwfc	prodh,w,c
  9810  003350  6EDA               	movwf	fsr2h,c
  9811  003352  0E00               	movlw	0
  9812  003354  6EDF               	movwf	indf2,c
  9813                           
  9814                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9815  003356  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9816  003358  0D01               	mullw	1
  9817  00335A  0ECE               	movlw	low _ep_data_out
  9818  00335C  24F3               	addwf	prodl,w,c
  9819  00335E  6ED9               	movwf	fsr2l,c
  9820  003360  0E02               	movlw	high _ep_data_out
  9821  003362  20F4               	addwfc	prodh,w,c
  9822  003364  6EDA               	movwf	fsr2h,c
  9823  003366  0E00               	movlw	0
  9824  003368  6EDF               	movwf	indf2,c
  9825                           
  9826                           ; BSR set to: 0
  9827  00336A  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9828  00336C  D7E6               	goto	l11621
  9829  00336E                     u10170:
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;usb_device.c: 2009: }
  9833                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9834                           
  9835                           ; BSR set to: 0
  9836  00336E  0EF0               	movlw	low _USBAlternateInterface
  9837  003370  6F7D               	movwf	memset@p1& (0+255),b
  9838  003372  0E02               	movlw	high _USBAlternateInterface
  9839  003374  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9840  003376  0E00               	movlw	0
  9841  003378  6F80               	movwf	(memset@c+1)& (0+255),b
  9842  00337A  0E00               	movlw	0
  9843  00337C  6F7F               	movwf	memset@c& (0+255),b
  9844  00337E  0E00               	movlw	0
  9845  003380  6F82               	movwf	(memset@n+1)& (0+255),b
  9846  003382  0E02               	movlw	2
  9847  003384  6F81               	movwf	memset@n& (0+255),b
  9848  003386  ECEE  F02D         	call	_memset	;wreg free
  9849                           
  9850                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  9851  00338A  9C65               	bcf	3941,6,c	;volatile
  9852                           
  9853                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9854  00338C  0E08               	movlw	8
  9855  00338E  0100               	movlb	0	; () banked
  9856  003390  6FBE               	movwf	_pBDTEntryIn& (0+255),b
  9857  003392  0E04               	movlw	4
  9858  003394  6FBF               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9859                           
  9860                           ; BSR set to: 0
  9861                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9862  003396  0E00               	movlw	0
  9863  003398  6FC8               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9864  00339A  0E04               	movlw	4
  9865  00339C  6FC9               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9866                           
  9867                           ; BSR set to: 0
  9868                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9869  00339E  C0C8  F0C6         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9870  0033A2  C0C9  F0C7         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9871                           
  9872                           ; BSR set to: 0
  9873                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9874  0033A6  C432 F0DB          	movff	1074,_USBActiveConfiguration	;volatile
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  9878  0033AA  51DB               	movf	_USBActiveConfiguration& (0+255),w,b
  9879  0033AC  A4D8               	btfss	status,2,c
  9880  0033AE  D003               	goto	l1712
  9881                           
  9882                           ; BSR set to: 0
  9883                           ;usb_device.c: 2028: {
  9884                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  9885  0033B0  0E10               	movlw	16
  9886  0033B2  6FD3               	movwf	_USBDeviceState& (0+255),b
  9887                           
  9888                           ;usb_device.c: 2031: }
  9889  0033B4  0012               	return	
  9890  0033B6                     l1712:
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;usb_device.c: 2032: else
  9894                           ;usb_device.c: 2033: {
  9895                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9896                           
  9897                           ; BSR set to: 0
  9898  0033B6  0E00               	movlw	0
  9899  0033B8  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9900  0033BA  0E01               	movlw	1
  9901  0033BC  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9902  0033BE  0EDB               	movlw	low _USBActiveConfiguration
  9903  0033C0  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9904  0033C2  0E00               	movlw	high _USBActiveConfiguration
  9905  0033C4  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9906  0033C6  0E00               	movlw	0
  9907  0033C8  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9908  0033CA  0E01               	movlw	1
  9909  0033CC  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9910  0033CE  EC2B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9911                           
  9912                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  9913  0033D2  0E20               	movlw	32
  9914  0033D4  0100               	movlb	0	; () banked
  9915  0033D6  6FD3               	movwf	_USBDeviceState& (0+255),b
  9916  0033D8  0012               	return	
  9917  0033DA                     __end_of_USBStdSetCfgHandler:
  9918                           	opt stack 0
  9919                           tosu	equ	0xFFF
  9920                           tosh	equ	0xFFE
  9921                           tosl	equ	0xFFD
  9922                           pclath	equ	0xFFA
  9923                           tblptru	equ	0xFF8
  9924                           tblptrh	equ	0xFF7
  9925                           tblptrl	equ	0xFF6
  9926                           tablat	equ	0xFF5
  9927                           prodh	equ	0xFF4
  9928                           prodl	equ	0xFF3
  9929                           intcon	equ	0xFF2
  9930                           intcon2	equ	0xFF1
  9931                           intcon3	equ	0xFF0
  9932                           postinc0	equ	0xFEE
  9933                           plusw0	equ	0xFEB
  9934                           wreg	equ	0xFE8
  9935                           postinc1	equ	0xFE6
  9936                           postdec1	equ	0xFE5
  9937                           plusw1	equ	0xFE3
  9938                           fsr1h	equ	0xFE2
  9939                           fsr1l	equ	0xFE1
  9940                           indf2	equ	0xFDF
  9941                           postinc2	equ	0xFDE
  9942                           postdec2	equ	0xFDD
  9943                           plusw2	equ	0xFDB
  9944                           fsr2h	equ	0xFDA
  9945                           fsr2l	equ	0xFD9
  9946                           status	equ	0xFD8
  9947                           
  9948 ;; *************** function _USBStdGetStatusHandler *****************
  9949 ;; Defined at:
  9950 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;		None
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;  p               2   30[BANK0 ] PTR struct __BDT
  9955 ;;		 -> NULL(0), BDT(48), 
  9956 ;; Return value:  Size  Location     Type
  9957 ;;                  1    wreg      void 
  9958 ;; Registers used:
  9959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9960 ;; Tracked objects:
  9961 ;;		On entry : 0/0
  9962 ;;		On exit  : 0/0
  9963 ;;		Unchanged: 0/0
  9964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9966 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9967 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9968 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9969 ;;Total ram usage:        3 bytes
  9970 ;; Hardware stack levels used:    1
  9971 ;; Hardware stack levels required when called:   11
  9972 ;; This function calls:
  9973 ;;		Nothing
  9974 ;; This function is called by:
  9975 ;;		_USBCheckStdRequest
  9976 ;; This function uses a non-reentrant model
  9977 ;;
  9978                           
  9979                           	psect	text41
  9980  003FFA                     __ptext41:
  9981                           	opt stack 0
  9982  003FFA                     _USBStdGetStatusHandler:
  9983                           	opt stack 12
  9984                           
  9985                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
  9986                           
  9987                           ; BSR set to: 0
  9988                           ;incstack = 0
  9989  003FFA  0E00               	movlw	0
  9990  003FFC  0104               	movlb	4	; () banked
  9991  003FFE  6F38               	movwf	56,b	;volatile
  9992                           
  9993                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
  9994  004000  0E00               	movlw	0
  9995  004002  6F39               	movwf	57,b	;volatile
  9996                           
  9997                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
  9998  004004  D03D               	goto	l1731
  9999  004006                     l1732:
 10000                           
 10001                           ; BSR set to: 4
 10002                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10003  004006  0100               	movlb	0	; () banked
 10004  004008  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 10005                           
 10006                           ;usb_device.c: 2163: }
 10007                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10008                           
 10009                           ; BSR set to: 4
 10010                           
 10011                           ; BSR set to: 0
 10012                           ;usb_device.c: 2161: {
 10013                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10014                           
 10015                           ;usb_device.c: 2160: if(0 == 1)
 10016  00400A  0101               	movlb	1	; () banked
 10017  00400C  05DF               	decf	_RemoteWakeup& (0+255),w,b
 10018  00400E  A4D8               	btfss	status,2,c
 10019  004010  D042               	goto	l1735
 10020                           
 10021                           ; BSR set to: 1
 10022                           ;usb_device.c: 2166: {
 10023                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10024  004012  0104               	movlb	4	; () banked
 10025  004014  8338               	bsf	56,1,b	;volatile
 10026                           
 10027                           ; BSR set to: 4
 10028                           ;usb_device.c: 2168: }
 10029                           ;usb_device.c: 2169: break;
 10030  004016  D03F               	goto	l1735
 10031  004018                     l1736:
 10032                           
 10033                           ; BSR set to: 4
 10034                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10035  004018  0100               	movlb	0	; () banked
 10036  00401A  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 10037                           
 10038                           ;usb_device.c: 2172: break;
 10039  00401C  D03C               	goto	l1735
 10040  00401E                     l1737:
 10041                           
 10042                           ; BSR set to: 4
 10043                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10044  00401E  0100               	movlb	0	; () banked
 10045  004020  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 10046                           
 10047                           ;usb_device.c: 2178: {
 10048                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10049                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10050  004022  0104               	movlb	4	; () banked
 10051  004024  BF34               	btfsc	52,7,b	;volatile
 10052  004026  D00B               	goto	l1738
 10053                           
 10054                           ; BSR set to: 4
 10055                           ;usb_device.c: 2182: {
 10056                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10057  004028  5134               	movf	52,w,b	;volatile
 10058  00402A  0B0F               	andlw	15
 10059  00402C  0100               	movlb	0	; () banked
 10060  00402E  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10061  004030  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10062  004032  0D02               	mullw	2
 10063  004034  0E0E               	movlw	low _pBDTEntryOut
 10064  004036  24F3               	addwf	prodl,w,c
 10065  004038  6ED9               	movwf	fsr2l,c
 10066  00403A  0E03               	movlw	high _pBDTEntryOut
 10067  00403C  D00B               	goto	L4
 10068  00403E                     l1738:
 10069                           
 10070                           ;usb_device.c: 2185: else
 10071                           ;usb_device.c: 2186: {
 10072                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10073                           
 10074                           ; BSR set to: 0
 10075  00403E  0104               	movlb	4	; () banked
 10076  004040  5134               	movf	52,w,b	;volatile
 10077  004042  0B0F               	andlw	15
 10078  004044  0100               	movlb	0	; () banked
 10079  004046  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10080  004048  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10081  00404A  0D02               	mullw	2
 10082  00404C  0EBE               	movlw	low _pBDTEntryIn
 10083  00404E  24F3               	addwf	prodl,w,c
 10084  004050  6ED9               	movwf	fsr2l,c
 10085  004052  0E00               	movlw	high _pBDTEntryIn
 10086  004054                     L4:
 10087  004054  20F4               	addwfc	prodh,w,c
 10088  004056  6EDA               	movwf	fsr2h,c
 10089  004058  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10090  00405C  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10091                           
 10092                           ; BSR set to: 0
 10093                           ;usb_device.c: 2188: }
 10094                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10095                           
 10096                           ; BSR set to: 0
 10097  004060  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10098  004064  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10099  004068  AEDF               	btfss	indf2,7,c
 10100  00406A  D015               	goto	l1735
 10101                           
 10102                           ; BSR set to: 0
 10103  00406C  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10104  004070  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10105  004074  A4DF               	btfss	indf2,2,c
 10106  004076  D00F               	goto	l1735
 10107                           
 10108                           ; BSR set to: 0
 10109                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10110  004078  0E01               	movlw	1
 10111  00407A  0104               	movlb	4	; () banked
 10112  00407C  6F38               	movwf	56,b	;volatile
 10113                           
 10114                           ; BSR set to: 4
 10115                           ;usb_device.c: 2193: }
 10116                           ;usb_device.c: 2194: }
 10117                           
 10118                           ; BSR set to: 4
 10119                           ;usb_device.c: 2192: break;
 10120  00407E  D00B               	goto	l1735
 10121  004080                     l1731:
 10122                           
 10123                           ; BSR set to: 4
 10124                           
 10125                           ; BSR set to: 4
 10126  004080  5130               	movf	48,w,b	;volatile
 10127  004082  0B1F               	andlw	31
 10128                           
 10129                           ; Switch size 1, requested type "space"
 10130                           ; Number of cases is 3, Range of values is 0 to 2
 10131                           ; switch strategies available:
 10132                           ; Name         Instructions Cycles
 10133                           ; simple_byte           10     6 (average)
 10134                           ;	Chosen strategy is simple_byte
 10135  004084  0A00               	xorlw	0	; case 0
 10136  004086  B4D8               	btfsc	status,2,c
 10137  004088  D7BE               	goto	l1732
 10138  00408A  0A01               	xorlw	1	; case 1
 10139  00408C  B4D8               	btfsc	status,2,c
 10140  00408E  D7C4               	goto	l1736
 10141  004090  0A03               	xorlw	3	; case 2
 10142  004092  B4D8               	btfsc	status,2,c
 10143  004094  D7C4               	goto	l1737
 10144  004096                     l1735:
 10145                           
 10146                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10147  004096  0100               	movlb	0	; () banked
 10148  004098  AFBB               	btfss	(_inPipes+3)& (0+255),7,b
 10149  00409A  0012               	return	
 10150                           
 10151                           ; BSR set to: 0
 10152                           ;usb_device.c: 2197: {
 10153                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10154  00409C  0E38               	movlw	56
 10155  00409E  6FB8               	movwf	_inPipes& (0+255),b
 10156  0040A0  0E04               	movlw	4
 10157  0040A2  6FB9               	movwf	(_inPipes+1)& (0+255),b
 10158                           
 10159                           ; BSR set to: 0
 10160                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10161  0040A4  81BB               	bsf	(_inPipes+3)& (0+255),0,b
 10162                           
 10163                           ; BSR set to: 0
 10164                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10165  0040A6  0E02               	movlw	2
 10166  0040A8  6FBC               	movwf	(_inPipes+4)& (0+255),b
 10167  0040AA  0012               	return	
 10168  0040AC                     __end_of_USBStdGetStatusHandler:
 10169                           	opt stack 0
 10170                           tosu	equ	0xFFF
 10171                           tosh	equ	0xFFE
 10172                           tosl	equ	0xFFD
 10173                           pclath	equ	0xFFA
 10174                           tblptru	equ	0xFF8
 10175                           tblptrh	equ	0xFF7
 10176                           tblptrl	equ	0xFF6
 10177                           tablat	equ	0xFF5
 10178                           prodh	equ	0xFF4
 10179                           prodl	equ	0xFF3
 10180                           intcon	equ	0xFF2
 10181                           intcon2	equ	0xFF1
 10182                           intcon3	equ	0xFF0
 10183                           postinc0	equ	0xFEE
 10184                           plusw0	equ	0xFEB
 10185                           wreg	equ	0xFE8
 10186                           postinc1	equ	0xFE6
 10187                           postdec1	equ	0xFE5
 10188                           plusw1	equ	0xFE3
 10189                           fsr1h	equ	0xFE2
 10190                           fsr1l	equ	0xFE1
 10191                           indf2	equ	0xFDF
 10192                           postinc2	equ	0xFDE
 10193                           postdec2	equ	0xFDD
 10194                           plusw2	equ	0xFDB
 10195                           fsr2h	equ	0xFDA
 10196                           fsr2l	equ	0xFD9
 10197                           status	equ	0xFD8
 10198                           
 10199 ;; *************** function _USBStdGetDscHandler *****************
 10200 ;; Defined at:
 10201 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10202 ;; Parameters:    Size  Location     Type
 10203 ;;		None
 10204 ;; Auto vars:     Size  Location     Type
 10205 ;;		None
 10206 ;; Return value:  Size  Location     Type
 10207 ;;                  1    wreg      void 
 10208 ;; Registers used:
 10209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10217 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10218 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10219 ;;Total ram usage:        2 bytes
 10220 ;; Hardware stack levels used:    1
 10221 ;; Hardware stack levels required when called:   11
 10222 ;; This function calls:
 10223 ;;		Nothing
 10224 ;; This function is called by:
 10225 ;;		_USBCheckStdRequest
 10226 ;; This function uses a non-reentrant model
 10227 ;;
 10228                           
 10229                           	psect	text42
 10230  002B92                     __ptext42:
 10231                           	opt stack 0
 10232  002B92                     _USBStdGetDscHandler:
 10233                           	opt stack 12
 10234                           
 10235                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;incstack = 0
 10239  002B92  0E80               	movlw	128
 10240  002B94  0104               	movlb	4	; () banked
 10241  002B96  1930               	xorwf	48,w,b	;volatile
 10242  002B98  A4D8               	btfss	status,2,c
 10243  002B9A  0012               	return	
 10244                           
 10245                           ; BSR set to: 4
 10246                           ;usb_device.c: 2064: {
 10247                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10248  002B9C  0EC0               	movlw	192
 10249  002B9E  0100               	movlb	0	; () banked
 10250  002BA0  6FBB               	movwf	(_inPipes+3)& (0+255),b
 10251                           
 10252                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10253  002BA2  D082               	goto	l1718
 10254  002BA4                     
 10255                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10256                           
 10257                           ; BSR set to: 0
 10258  002BA4  0E54               	movlw	low _device_dsc
 10259  002BA6  0100               	movlb	0	; () banked
 10260  002BA8  6FB8               	movwf	_inPipes& (0+255),b
 10261  002BAA  0EFE               	movlw	high _device_dsc
 10262  002BAC  6FB9               	movwf	(_inPipes+1)& (0+255),b
 10263                           
 10264                           ; BSR set to: 0
 10265                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10266  002BAE  0E00               	movlw	0
 10267  002BB0  6FBD               	movwf	(_inPipes+5)& (0+255),b
 10268  002BB2  0E12               	movlw	18
 10269  002BB4  6FBC               	movwf	(_inPipes+4)& (0+255),b
 10270                           
 10271                           ;usb_device.c: 2076: break;
 10272  002BB6  0012               	return	
 10273  002BB8                     
 10274                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10275                           
 10276                           ; BSR set to: 0
 10277  002BB8  0104               	movlb	4	; () banked
 10278  002BBA  5132               	movf	50,w,b	;volatile
 10279  002BBC  A4D8               	btfss	status,2,c
 10280  002BBE  D040               	goto	l1722
 10281                           
 10282                           ; BSR set to: 4
 10283                           ;usb_device.c: 2082: {
 10284                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10285  002BC0  5132               	movf	50,w,b	;volatile
 10286  002BC2  0D02               	mullw	2
 10287  002BC4  0E39               	movlw	low _USB_CD_Ptr
 10288  002BC6  24F3               	addwf	prodl,w,c
 10289  002BC8  6EF6               	movwf	tblptrl,c
 10290  002BCA  0EFC               	movlw	high _USB_CD_Ptr
 10291  002BCC  20F4               	addwfc	prodh,w,c
 10292  002BCE  6EF7               	movwf	tblptrh,c
 10293  002BD0                     	if	0	;There are less than 3 active tblptr bytes
 10294  002BD0                     	endif
 10295  002BD0  0009               	tblrd		*+
 10296  002BD2  CFF5 F0B8          	movff	tablat,_inPipes
 10297  002BD6  000A               	tblrd		*-
 10298  002BD8  CFF5 F0B9          	movff	tablat,_inPipes+1
 10299                           
 10300                           ; BSR set to: 4
 10301                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10302  002BDC  0E02               	movlw	2
 10303  002BDE  0100               	movlb	0	; () banked
 10304  002BE0  25B8               	addwf	_inPipes& (0+255),w,b
 10305  002BE2  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10306  002BE4  0E00               	movlw	0
 10307  002BE6  21B9               	addwfc	(_inPipes+1)& (0+255),w,b
 10308  002BE8  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10309  002BEA  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10310  002BEE  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10311  002BF2  6AF8               	clrf	tblptru,c
 10312  002BF4  0E0E               	movlw	(high __ramtop+-1)
 10313  002BF6  64F7               	cpfsgt	tblptrh,c
 10314  002BF8  D003               	bra	u5397
 10315  002BFA  0008               	tblrd		*
 10316  002BFC  50F5               	movf	tablat,w,c
 10317  002BFE  D005               	bra	u5390
 10318  002C00                     u5397:
 10319  002C00  CFF6 FFE9          	movff	tblptrl,fsr0l
 10320  002C04  CFF7 FFEA          	movff	tblptrh,fsr0h
 10321  002C08  50EF               	movf	indf0,w,c
 10322  002C0A                     u5390:
 10323  002C0A  0100               	movlb	0	; () banked
 10324  002C0C  6FBC               	movwf	(_inPipes+4)& (0+255),b
 10325                           
 10326                           ; BSR set to: 0
 10327                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10328  002C0E  0E03               	movlw	3
 10329  002C10  25B8               	addwf	_inPipes& (0+255),w,b
 10330  002C12  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10331  002C14  0E00               	movlw	0
 10332  002C16  21B9               	addwfc	(_inPipes+1)& (0+255),w,b
 10333  002C18  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10334  002C1A  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10335  002C1E  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10336  002C22  6AF8               	clrf	tblptru,c
 10337  002C24  0E0E               	movlw	(high __ramtop+-1)
 10338  002C26  64F7               	cpfsgt	tblptrh,c
 10339  002C28  D003               	bra	u5407
 10340  002C2A  0008               	tblrd		*
 10341  002C2C  50F5               	movf	tablat,w,c
 10342  002C2E  D005               	bra	u5400
 10343  002C30                     u5407:
 10344  002C30  CFF6 FFE9          	movff	tblptrl,fsr0l
 10345  002C34  CFF7 FFEA          	movff	tblptrh,fsr0h
 10346  002C38  50EF               	movf	indf0,w,c
 10347  002C3A                     u5400:
 10348  002C3A  0100               	movlb	0	; () banked
 10349  002C3C  6FBD               	movwf	(_inPipes+5)& (0+255),b
 10350                           
 10351                           ;usb_device.c: 2094: }
 10352  002C3E  0012               	return	
 10353  002C40                     l1722:
 10354                           
 10355                           ;usb_device.c: 2095: else
 10356                           ;usb_device.c: 2096: {
 10357                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10358                           
 10359                           ; BSR set to: 0
 10360  002C40  0E00               	movlw	0
 10361  002C42  0100               	movlb	0	; () banked
 10362  002C44  6FBB               	movwf	(_inPipes+3)& (0+255),b
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;usb_device.c: 2098: }
 10366                           ;usb_device.c: 2099: break;
 10367  002C46  0012               	return	
 10368  002C48                     
 10369                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10370                           
 10371                           ; BSR set to: 0
 10372  002C48  0E03               	movlw	3
 10373  002C4A  0104               	movlb	4	; () banked
 10374  002C4C  6132               	cpfslt	50,b	;volatile
 10375  002C4E  D024               	goto	l1725
 10376                           
 10377                           ; BSR set to: 4
 10378                           ;usb_device.c: 2105: {
 10379                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10380  002C50  5132               	movf	50,w,b	;volatile
 10381  002C52  0D02               	mullw	2
 10382  002C54  0E33               	movlw	low _USB_SD_Ptr
 10383  002C56  24F3               	addwf	prodl,w,c
 10384  002C58  6EF6               	movwf	tblptrl,c
 10385  002C5A  0EFC               	movlw	high _USB_SD_Ptr
 10386  002C5C  20F4               	addwfc	prodh,w,c
 10387  002C5E  6EF7               	movwf	tblptrh,c
 10388  002C60                     	if	0	;There are less than 3 active tblptr bytes
 10389  002C60                     	endif
 10390  002C60  0009               	tblrd		*+
 10391  002C62  CFF5 F0B8          	movff	tablat,_inPipes
 10392  002C66  000A               	tblrd		*-
 10393  002C68  CFF5 F0B9          	movff	tablat,_inPipes+1
 10394                           
 10395                           ; BSR set to: 4
 10396                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10397  002C6C  C0B8  FFF6         	movff	_inPipes,tblptrl
 10398  002C70  C0B9  FFF7         	movff	_inPipes+1,tblptrh
 10399  002C74  6AF8               	clrf	tblptru,c
 10400  002C76  0E0E               	movlw	(high __ramtop+-1)
 10401  002C78  64F7               	cpfsgt	tblptrh,c
 10402  002C7A  D003               	bra	u5427
 10403  002C7C  0008               	tblrd		*
 10404  002C7E  50F5               	movf	tablat,w,c
 10405  002C80  D005               	bra	u5420
 10406  002C82                     u5427:
 10407  002C82  CFF6 FFE9          	movff	tblptrl,fsr0l
 10408  002C86  CFF7 FFEA          	movff	tblptrh,fsr0h
 10409  002C8A  50EF               	movf	indf0,w,c
 10410  002C8C                     u5420:
 10411  002C8C  0100               	movlb	0	; () banked
 10412  002C8E  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10413  002C90  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10414  002C92  6FBC               	movwf	(_inPipes+4)& (0+255),b
 10415  002C94  6BBD               	clrf	(_inPipes+5)& (0+255),b
 10416                           
 10417                           ;usb_device.c: 2110: }
 10418  002C96  0012               	return	
 10419  002C98                     l1725:
 10420                           
 10421                           ;usb_device.c: 2120: else
 10422                           ;usb_device.c: 2121: {
 10423                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10424                           
 10425                           ; BSR set to: 0
 10426  002C98  0E00               	movlw	0
 10427  002C9A  0100               	movlb	0	; () banked
 10428  002C9C  6FBB               	movwf	(_inPipes+3)& (0+255),b
 10429                           
 10430                           ; BSR set to: 0
 10431                           ;usb_device.c: 2123: }
 10432                           ;usb_device.c: 2124: break;
 10433  002C9E  0012               	return	
 10434  002CA0                     
 10435                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10436                           
 10437                           ; BSR set to: 0
 10438  002CA0  0E00               	movlw	0
 10439  002CA2  0100               	movlb	0	; () banked
 10440  002CA4  6FBB               	movwf	(_inPipes+3)& (0+255),b
 10441                           
 10442                           ; BSR set to: 0
 10443                           ;usb_device.c: 2128: }
 10444                           
 10445                           ;usb_device.c: 2127: break;
 10446  002CA6  0012               	return	
 10447  002CA8                     l1718:
 10448                           
 10449                           ; BSR set to: 0
 10450                           
 10451                           ; BSR set to: 0
 10452  002CA8  0104               	movlb	4	; () banked
 10453  002CAA  5133               	movf	51,w,b	;volatile
 10454                           
 10455                           ; Switch size 1, requested type "space"
 10456                           ; Number of cases is 3, Range of values is 1 to 3
 10457                           ; switch strategies available:
 10458                           ; Name         Instructions Cycles
 10459                           ; simple_byte           10     6 (average)
 10460                           ;	Chosen strategy is simple_byte
 10461  002CAC  0A01               	xorlw	1	; case 1
 10462  002CAE  B4D8               	btfsc	status,2,c
 10463  002CB0  D779               	goto	l1719
 10464  002CB2  0A03               	xorlw	3	; case 2
 10465  002CB4  B4D8               	btfsc	status,2,c
 10466  002CB6  D780               	goto	l1721
 10467  002CB8  0A01               	xorlw	1	; case 3
 10468  002CBA  B4D8               	btfsc	status,2,c
 10469  002CBC  D7C5               	goto	l1724
 10470  002CBE  D7F0               	goto	l1727
 10471  002CC0                     __end_of_USBStdGetDscHandler:
 10472                           	opt stack 0
 10473                           tosu	equ	0xFFF
 10474                           tosh	equ	0xFFE
 10475                           tosl	equ	0xFFD
 10476                           pclath	equ	0xFFA
 10477                           tblptru	equ	0xFF8
 10478                           tblptrh	equ	0xFF7
 10479                           tblptrl	equ	0xFF6
 10480                           tablat	equ	0xFF5
 10481                           prodh	equ	0xFF4
 10482                           prodl	equ	0xFF3
 10483                           intcon	equ	0xFF2
 10484                           intcon2	equ	0xFF1
 10485                           intcon3	equ	0xFF0
 10486                           indf0	equ	0xFEF
 10487                           postinc0	equ	0xFEE
 10488                           plusw0	equ	0xFEB
 10489                           fsr0h	equ	0xFEA
 10490                           fsr0l	equ	0xFE9
 10491                           wreg	equ	0xFE8
 10492                           postinc1	equ	0xFE6
 10493                           postdec1	equ	0xFE5
 10494                           plusw1	equ	0xFE3
 10495                           fsr1h	equ	0xFE2
 10496                           fsr1l	equ	0xFE1
 10497                           indf2	equ	0xFDF
 10498                           postinc2	equ	0xFDE
 10499                           postdec2	equ	0xFDD
 10500                           plusw2	equ	0xFDB
 10501                           fsr2h	equ	0xFDA
 10502                           fsr2l	equ	0xFD9
 10503                           status	equ	0xFD8
 10504                           
 10505 ;; *************** function _USBStdFeatureReqHandler *****************
 10506 ;; Defined at:
 10507 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10508 ;; Parameters:    Size  Location     Type
 10509 ;;		None
 10510 ;; Auto vars:     Size  Location     Type
 10511 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10512 ;;		 -> NULL(0), BDT(48), 
 10513 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10514 ;;		 -> UEP0(1), 
 10515 ;;  current_ep_d    1   52[BANK0 ] struct .
 10516 ;; Return value:  Size  Location     Type
 10517 ;;                  1    wreg      void 
 10518 ;; Registers used:
 10519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10520 ;; Tracked objects:
 10521 ;;		On entry : 0/0
 10522 ;;		On exit  : 0/0
 10523 ;;		Unchanged: 0/0
 10524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10526 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10527 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10528 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10529 ;;Total ram usage:        6 bytes
 10530 ;; Hardware stack levels used:    1
 10531 ;; Hardware stack levels required when called:   15
 10532 ;; This function calls:
 10533 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10534 ;; This function is called by:
 10535 ;;		_USBCheckStdRequest
 10536 ;; This function uses a non-reentrant model
 10537 ;;
 10538                           
 10539                           	psect	text43
 10540  00135A                     __ptext43:
 10541                           	opt stack 0
 10542  00135A                     _USBStdFeatureReqHandler:
 10543                           	opt stack 8
 10544                           
 10545                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10546                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10547                           ;usb_device.c: 2778: unsigned char* pUEP;
 10548                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10549                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10550                           
 10551                           ;incstack = 0
 10552  00135A  0104               	movlb	4	; () banked
 10553  00135C  0532               	decf	50,w,b	;volatile
 10554  00135E  A4D8               	btfss	status,2,c
 10555  001360  D011               	goto	l1811
 10556                           
 10557                           ; BSR set to: 4
 10558  001362  5130               	movf	48,w,b	;volatile
 10559  001364  0B1F               	andlw	31
 10560  001366  0900               	iorlw	0
 10561  001368  A4D8               	btfss	status,2,c
 10562  00136A  D00C               	goto	l1811
 10563                           
 10564                           ; BSR set to: 4
 10565                           ;usb_device.c: 2818: {
 10566                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10567  00136C  0100               	movlb	0	; () banked
 10568  00136E  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 10569                           
 10570                           ; BSR set to: 0
 10571                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10572  001370  0E03               	movlw	3
 10573  001372  0104               	movlb	4	; () banked
 10574  001374  1931               	xorwf	49,w,b	;volatile
 10575  001376  A4D8               	btfss	status,2,c
 10576  001378  D002               	goto	l1810
 10577                           
 10578                           ; BSR set to: 4
 10579                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10580  00137A  0E01               	movlw	1
 10581  00137C  D001               	goto	L5
 10582  00137E                     l1810:
 10583                           
 10584                           ;usb_device.c: 2822: else
 10585                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10586                           
 10587                           ; BSR set to: 1
 10588  00137E  0E00               	movlw	0
 10589  001380                     L5:
 10590  001380  0101               	movlb	1	; () banked
 10591  001382  6FDF               	movwf	_RemoteWakeup& (0+255),b
 10592  001384                     l1811:
 10593                           
 10594                           ;usb_device.c: 2824: }
 10595                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10596                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10597                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10598                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10599                           
 10600                           ; BSR set to: 1
 10601  001384  0104               	movlb	4	; () banked
 10602  001386  5132               	movf	50,w,b	;volatile
 10603  001388  A4D8               	btfss	status,2,c
 10604  00138A  0012               	return	
 10605                           
 10606                           ; BSR set to: 4
 10607  00138C  5130               	movf	48,w,b	;volatile
 10608  00138E  0B1F               	andlw	31
 10609  001390  0A02               	xorlw	2
 10610  001392  A4D8               	btfss	status,2,c
 10611  001394  0012               	return	
 10612                           
 10613                           ; BSR set to: 4
 10614  001396  5134               	movf	52,w,b	;volatile
 10615  001398  0B0F               	andlw	15
 10616  00139A  0900               	iorlw	0
 10617  00139C  B4D8               	btfsc	status,2,c
 10618  00139E  0012               	return	
 10619                           
 10620                           ; BSR set to: 4
 10621  0013A0  5134               	movf	52,w,b	;volatile
 10622  0013A2  0B0F               	andlw	15
 10623  0013A4  0100               	movlb	0	; () banked
 10624  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10625  0013A8  0E03               	movlw	3
 10626  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10627  0013AC  0012               	return	
 10628                           
 10629                           ; BSR set to: 0
 10630  0013AE  0E20               	movlw	32
 10631  0013B0  19D3               	xorwf	_USBDeviceState& (0+255),w,b
 10632  0013B2  A4D8               	btfss	status,2,c
 10633  0013B4  0012               	return	
 10634                           
 10635                           ; BSR set to: 0
 10636                           ;usb_device.c: 2831: {
 10637                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10638  0013B6  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 10639                           
 10640                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10641  0013B8  0104               	movlb	4	; () banked
 10642  0013BA  BF34               	btfsc	52,7,b	;volatile
 10643  0013BC  D01C               	goto	l1813
 10644                           
 10645                           ; BSR set to: 4
 10646                           ;usb_device.c: 2838: {
 10647                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10648  0013BE  5134               	movf	52,w,b	;volatile
 10649  0013C0  0B0F               	andlw	15
 10650  0013C2  0100               	movlb	0	; () banked
 10651  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10652  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10653  0013C8  0D02               	mullw	2
 10654  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10655  0013CC  24F3               	addwf	prodl,w,c
 10656  0013CE  6ED9               	movwf	fsr2l,c
 10657  0013D0  0E03               	movlw	high _pBDTEntryOut
 10658  0013D2  20F4               	addwfc	prodh,w,c
 10659  0013D4  6EDA               	movwf	fsr2h,c
 10660  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10661  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10662                           
 10663                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10664  0013DE  0104               	movlb	4	; () banked
 10665  0013E0  5134               	movf	52,w,b	;volatile
 10666  0013E2  0B0F               	andlw	15
 10667  0013E4  0100               	movlb	0	; () banked
 10668  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10669  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10670  0013EA  0D01               	mullw	1
 10671  0013EC  0ECE               	movlw	low _ep_data_out
 10672  0013EE  24F3               	addwf	prodl,w,c
 10673  0013F0  6ED9               	movwf	fsr2l,c
 10674  0013F2  0E02               	movlw	high _ep_data_out
 10675  0013F4  D01C               	goto	L6
 10676  0013F6                     l1813:
 10677                           
 10678                           ;usb_device.c: 2842: else
 10679                           ;usb_device.c: 2843: {
 10680                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10681                           
 10682                           ; BSR set to: 0
 10683  0013F6  0104               	movlb	4	; () banked
 10684  0013F8  5134               	movf	52,w,b	;volatile
 10685  0013FA  0B0F               	andlw	15
 10686  0013FC  0100               	movlb	0	; () banked
 10687  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10688  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10689  001402  0D02               	mullw	2
 10690  001404  0EBE               	movlw	low _pBDTEntryIn
 10691  001406  24F3               	addwf	prodl,w,c
 10692  001408  6ED9               	movwf	fsr2l,c
 10693  00140A  0E00               	movlw	high _pBDTEntryIn
 10694  00140C  20F4               	addwfc	prodh,w,c
 10695  00140E  6EDA               	movwf	fsr2h,c
 10696  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10697  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10698                           
 10699                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10700  001418  0104               	movlb	4	; () banked
 10701  00141A  5134               	movf	52,w,b	;volatile
 10702  00141C  0B0F               	andlw	15
 10703  00141E  0100               	movlb	0	; () banked
 10704  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10705  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10706  001424  0D01               	mullw	1
 10707  001426  0ED1               	movlw	low _ep_data_in
 10708  001428  24F3               	addwf	prodl,w,c
 10709  00142A  6ED9               	movwf	fsr2l,c
 10710  00142C  0E02               	movlw	high _ep_data_in
 10711  00142E                     L6:
 10712  00142E  20F4               	addwfc	prodh,w,c
 10713  001430  6EDA               	movwf	fsr2h,c
 10714  001432  50DF               	movf	indf2,w,c
 10715  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10716                           
 10717                           ; BSR set to: 0
 10718                           ;usb_device.c: 2846: }
 10719                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10720                           
 10721                           ; BSR set to: 0
 10722  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10723  001438  D002               	goto	l1815
 10724                           
 10725                           ; BSR set to: 0
 10726                           ;usb_device.c: 2853: {
 10727                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10728  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10729                           
 10730                           ;usb_device.c: 2855: }
 10731  00143C  D001               	goto	l1816
 10732  00143E                     l1815:
 10733                           
 10734                           ; BSR set to: 0
 10735                           ;usb_device.c: 2856: else
 10736                           ;usb_device.c: 2857: {
 10737                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10738                           
 10739                           ; BSR set to: 0
 10740  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10741  001440                     l1816:
 10742                           
 10743                           ; BSR set to: 0
 10744                           ;usb_device.c: 2859: }
 10745                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10746                           
 10747                           ; BSR set to: 0
 10748  001440  0104               	movlb	4	; () banked
 10749  001442  BF34               	btfsc	52,7,b	;volatile
 10750  001444  D00B               	goto	l1817
 10751                           
 10752                           ; BSR set to: 4
 10753                           ;usb_device.c: 2865: {
 10754                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10755  001446  5134               	movf	52,w,b	;volatile
 10756  001448  0B0F               	andlw	15
 10757  00144A  0100               	movlb	0	; () banked
 10758  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10759  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10760  001450  0D02               	mullw	2
 10761  001452  0E0E               	movlw	low _pBDTEntryOut
 10762  001454  24F3               	addwf	prodl,w,c
 10763  001456  6ED9               	movwf	fsr2l,c
 10764  001458  0E03               	movlw	high _pBDTEntryOut
 10765  00145A  D00B               	goto	L7
 10766  00145C                     l1817:
 10767                           
 10768                           ;usb_device.c: 2868: else
 10769                           ;usb_device.c: 2869: {
 10770                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10771                           
 10772                           ; BSR set to: 0
 10773  00145C  0104               	movlb	4	; () banked
 10774  00145E  5134               	movf	52,w,b	;volatile
 10775  001460  0B0F               	andlw	15
 10776  001462  0100               	movlb	0	; () banked
 10777  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10778  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10779  001468  0D02               	mullw	2
 10780  00146A  0EBE               	movlw	low _pBDTEntryIn
 10781  00146C  24F3               	addwf	prodl,w,c
 10782  00146E  6ED9               	movwf	fsr2l,c
 10783  001470  0E00               	movlw	high _pBDTEntryIn
 10784  001472                     L7:
 10785  001472  20F4               	addwfc	prodh,w,c
 10786  001474  6EDA               	movwf	fsr2h,c
 10787  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10788  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;usb_device.c: 2871: }
 10792                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10793                           
 10794                           ; BSR set to: 0
 10795  00147E  0E03               	movlw	3
 10796  001480  0104               	movlb	4	; () banked
 10797  001482  1931               	xorwf	49,w,b	;volatile
 10798  001484  A4D8               	btfss	status,2,c
 10799  001486  D031               	goto	l1819
 10800                           
 10801                           ; BSR set to: 4
 10802                           ;usb_device.c: 2875: {
 10803                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10804  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10805  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10806  001490  0100               	movlb	0	; () banked
 10807  001492  AEDF               	btfss	indf2,7,c
 10808  001494  D01D               	goto	l1822
 10809                           
 10810                           ; BSR set to: 0
 10811                           ;usb_device.c: 2877: {
 10812                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10813  001496  0104               	movlb	4	; () banked
 10814  001498  BF34               	btfsc	52,7,b	;volatile
 10815  00149A  D00B               	goto	l1821
 10816                           
 10817                           ; BSR set to: 4
 10818                           ;usb_device.c: 2881: {
 10819                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10820  00149C  5134               	movf	52,w,b	;volatile
 10821  00149E  0B0F               	andlw	15
 10822  0014A0  0100               	movlb	0	; () banked
 10823  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10824  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10825  0014A6  0D01               	mullw	1
 10826  0014A8  0ECE               	movlw	low _ep_data_out
 10827  0014AA  24F3               	addwf	prodl,w,c
 10828  0014AC  6ED9               	movwf	fsr2l,c
 10829  0014AE  0E02               	movlw	high _ep_data_out
 10830  0014B0  D00B               	goto	L8
 10831  0014B2                     l1821:
 10832                           
 10833                           ;usb_device.c: 2884: else
 10834                           ;usb_device.c: 2885: {
 10835                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10836                           
 10837                           ; BSR set to: 2
 10838  0014B2  0104               	movlb	4	; () banked
 10839  0014B4  5134               	movf	52,w,b	;volatile
 10840  0014B6  0B0F               	andlw	15
 10841  0014B8  0100               	movlb	0	; () banked
 10842  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10843  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10844  0014BE  0D01               	mullw	1
 10845  0014C0  0ED1               	movlw	low _ep_data_in
 10846  0014C2  24F3               	addwf	prodl,w,c
 10847  0014C4  6ED9               	movwf	fsr2l,c
 10848  0014C6  0E02               	movlw	high _ep_data_in
 10849  0014C8                     L8:
 10850  0014C8  20F4               	addwfc	prodh,w,c
 10851  0014CA  6EDA               	movwf	fsr2h,c
 10852  0014CC  0102               	movlb	2	; () banked
 10853  0014CE  82DF               	bsf	indf2,1,c
 10854  0014D0                     l1822:
 10855                           
 10856                           ;usb_device.c: 2887: }
 10857                           ;usb_device.c: 2888: }
 10858                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 10859                           
 10860                           ; BSR set to: 2
 10861                           
 10862                           ; BSR set to: 2
 10863  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10864  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10865  0014D8  0E00               	movlw	0
 10866  0014DA  84DB               	bsf	plusw2,2,c
 10867                           
 10868                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 10869  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10870  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10871  0014E4  0E00               	movlw	0
 10872  0014E6  8EDB               	bsf	plusw2,7,c
 10873                           
 10874                           ;usb_device.c: 2893: }
 10875  0014E8  0012               	return	
 10876  0014EA                     l1819:
 10877                           
 10878                           ;usb_device.c: 2894: else
 10879                           ;usb_device.c: 2895: {
 10880                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10881  0014EA  0E04               	movlw	4
 10882  0014EC  0100               	movlb	0	; () banked
 10883  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10884                           
 10885                           ; BSR set to: 0
 10886                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 10887  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10888  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10889  0014F8  AEDF               	btfss	indf2,7,c
 10890  0014FA  D01B               	goto	l1824
 10891                           
 10892                           ; BSR set to: 0
 10893                           ;usb_device.c: 2902: {
 10894                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 10895  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10896  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10897  001504  0E7F               	movlw	127
 10898  001506  16DF               	andwf	indf2,f,c
 10899                           
 10900                           ; BSR set to: 0
 10901                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 10902  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10903  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10904  001510  0E00               	movlw	0
 10905  001512  8CDB               	bsf	plusw2,6,c
 10906                           
 10907                           ; BSR set to: 0
 10908                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10909  001514  0E00               	movlw	0
 10910  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10911  001518  0E05               	movlw	5
 10912  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10913  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10914  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10915  001524  0E00               	movlw	0
 10916  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10917  001528  0E02               	movlw	2
 10918  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10919  00152C  EC2B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10920                           
 10921                           ;usb_device.c: 2908: }
 10922  001530  D006               	goto	l1825
 10923  001532                     l1824:
 10924                           
 10925                           ;usb_device.c: 2909: else
 10926                           ;usb_device.c: 2910: {
 10927                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 10928  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10929  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10930  00153A  0E00               	movlw	0
 10931  00153C  8CDB               	bsf	plusw2,6,c
 10932  00153E                     l1825:
 10933                           
 10934                           ;usb_device.c: 2913: }
 10935                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10936  00153E  0E04               	movlw	4
 10937  001540  0100               	movlb	0	; () banked
 10938  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10939                           
 10940                           ; BSR set to: 0
 10941                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10942  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 10943  001546  D006               	goto	u10350
 10944                           
 10945                           ; BSR set to: 0
 10946  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10947  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10948  001550  AEDF               	btfss	indf2,7,c
 10949  001552  D033               	goto	l1826
 10950  001554                     u10350:
 10951                           
 10952                           ; BSR set to: 0
 10953                           ;usb_device.c: 2924: {
 10954                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 10955  001554  0104               	movlb	4	; () banked
 10956  001556  BF34               	btfsc	52,7,b	;volatile
 10957  001558  D00B               	goto	l1829
 10958                           
 10959                           ; BSR set to: 4
 10960                           ;usb_device.c: 2926: {
 10961                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10962  00155A  5134               	movf	52,w,b	;volatile
 10963  00155C  0B0F               	andlw	15
 10964  00155E  0100               	movlb	0	; () banked
 10965  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10966  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10967  001564  0D01               	mullw	1
 10968  001566  0ECE               	movlw	low _ep_data_out
 10969  001568  24F3               	addwf	prodl,w,c
 10970  00156A  6ED9               	movwf	fsr2l,c
 10971  00156C  0E02               	movlw	high _ep_data_out
 10972  00156E  D00B               	goto	L9
 10973  001570                     l1829:
 10974                           
 10975                           ;usb_device.c: 2929: else
 10976                           ;usb_device.c: 2930: {
 10977                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10978                           
 10979                           ; BSR set to: 2
 10980  001570  0104               	movlb	4	; () banked
 10981  001572  5134               	movf	52,w,b	;volatile
 10982  001574  0B0F               	andlw	15
 10983  001576  0100               	movlb	0	; () banked
 10984  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10985  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10986  00157C  0D01               	mullw	1
 10987  00157E  0ED1               	movlw	low _ep_data_in
 10988  001580  24F3               	addwf	prodl,w,c
 10989  001582  6ED9               	movwf	fsr2l,c
 10990  001584  0E02               	movlw	high _ep_data_in
 10991  001586                     L9:
 10992  001586  20F4               	addwfc	prodh,w,c
 10993  001588  6EDA               	movwf	fsr2h,c
 10994  00158A  0102               	movlb	2	; () banked
 10995  00158C  92DF               	bcf	indf2,1,c
 10996                           
 10997                           ; BSR set to: 2
 10998                           ;usb_device.c: 2932: }
 10999                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11000                           
 11001                           ; BSR set to: 2
 11002  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11003  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11004  001596  0E3B               	movlw	59
 11005  001598  16DF               	andwf	indf2,f,c
 11006                           
 11007                           ; BSR set to: 2
 11008                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11009  00159A  0E00               	movlw	0
 11010  00159C  0100               	movlb	0	; () banked
 11011  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11012  0015A0  0E05               	movlw	5
 11013  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11014  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11015  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11016  0015AC  0E00               	movlw	0
 11017  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11018  0015B0  0E02               	movlw	2
 11019  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11020  0015B4  EC2B  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11021                           
 11022                           ;usb_device.c: 2938: }
 11023  0015B8  D006               	goto	l1831
 11024  0015BA                     l1826:
 11025                           
 11026                           ;usb_device.c: 2939: else
 11027                           ;usb_device.c: 2940: {
 11028                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11029  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11030  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11031  0015C2  0E3B               	movlw	59
 11032  0015C4  16DF               	andwf	indf2,f,c
 11033  0015C6                     l1831:
 11034                           
 11035                           ;usb_device.c: 2943: }
 11036                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11037  0015C6  0104               	movlb	4	; () banked
 11038  0015C8  5134               	movf	52,w,b	;volatile
 11039  0015CA  0B0F               	andlw	15
 11040  0015CC  0100               	movlb	0	; () banked
 11041  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11042  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11043  0015D2  0D01               	mullw	1
 11044  0015D4  0E26               	movlw	38
 11045  0015D6  24F3               	addwf	prodl,w,c
 11046  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11047  0015DA  0E0F               	movlw	15
 11048  0015DC  20F4               	addwfc	prodh,w,c
 11049  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11053  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11054  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11055  0015E8  0EFE               	movlw	254
 11056  0015EA  16DF               	andwf	indf2,f,c
 11057                           
 11058                           ; BSR set to: 0
 11059  0015EC  0012               	return	
 11060  0015EE                     __end_of_USBStdFeatureReqHandler:
 11061                           	opt stack 0
 11062                           tosu	equ	0xFFF
 11063                           tosh	equ	0xFFE
 11064                           tosl	equ	0xFFD
 11065                           pclath	equ	0xFFA
 11066                           tblptru	equ	0xFF8
 11067                           tblptrh	equ	0xFF7
 11068                           tblptrl	equ	0xFF6
 11069                           tablat	equ	0xFF5
 11070                           prodh	equ	0xFF4
 11071                           prodl	equ	0xFF3
 11072                           intcon	equ	0xFF2
 11073                           intcon2	equ	0xFF1
 11074                           intcon3	equ	0xFF0
 11075                           indf0	equ	0xFEF
 11076                           postinc0	equ	0xFEE
 11077                           plusw0	equ	0xFEB
 11078                           fsr0h	equ	0xFEA
 11079                           fsr0l	equ	0xFE9
 11080                           wreg	equ	0xFE8
 11081                           postinc1	equ	0xFE6
 11082                           postdec1	equ	0xFE5
 11083                           plusw1	equ	0xFE3
 11084                           fsr1h	equ	0xFE2
 11085                           fsr1l	equ	0xFE1
 11086                           indf2	equ	0xFDF
 11087                           postinc2	equ	0xFDE
 11088                           postdec2	equ	0xFDD
 11089                           plusw2	equ	0xFDB
 11090                           fsr2h	equ	0xFDA
 11091                           fsr2l	equ	0xFD9
 11092                           status	equ	0xFD8
 11093                           
 11094 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11095 ;; Defined at:
 11096 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11097 ;; Parameters:    Size  Location     Type
 11098 ;;  event           2   41[BANK0 ] enum E8347
 11099 ;;  pdata           2   43[BANK0 ] PTR void 
 11100 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11101 ;;  size            2   45[BANK0 ] unsigned int 
 11102 ;; Auto vars:     Size  Location     Type
 11103 ;;		None
 11104 ;; Return value:  Size  Location     Type
 11105 ;;                  1    wreg      unsigned char 
 11106 ;; Registers used:
 11107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11108 ;; Tracked objects:
 11109 ;;		On entry : 0/0
 11110 ;;		On exit  : 0/0
 11111 ;;		Unchanged: 0/0
 11112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11113 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11116 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11117 ;;Total ram usage:        8 bytes
 11118 ;; Hardware stack levels used:    1
 11119 ;; Hardware stack levels required when called:   14
 11120 ;; This function calls:
 11121 ;;		_CDCInitEP
 11122 ;;		_USBCheckCDCRequest
 11123 ;; This function is called by:
 11124 ;;		_USBDeviceTasks
 11125 ;;		_USBStdSetCfgHandler
 11126 ;;		_USBSuspend
 11127 ;;		_USBWakeFromSuspend
 11128 ;;		_USBCtrlTrfSetupHandler
 11129 ;;		_USBCheckStdRequest
 11130 ;;		_USBStdFeatureReqHandler
 11131 ;; This function uses a non-reentrant model
 11132 ;;
 11133                           
 11134                           	psect	text44
 11135  005056                     __ptext44:
 11136                           	opt stack 0
 11137  005056                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11138                           	opt stack 12
 11139                           
 11140                           ;usb_device_mgr.c: 106: switch( (int) event )
 11141                           
 11142                           ;incstack = 0
 11143  005056  D006               	goto	l1985
 11144  005058                     
 11145                           ;usb_device_mgr.c: 134: CDCInitEP();
 11146  005058  EC28  F027         	call	_CDCInitEP	;wreg free
 11147                           
 11148                           ;usb_device_mgr.c: 142: break;
 11149                           
 11150                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11151                           
 11152                           ;usb_device_mgr.c: 139: break;
 11153  00505C  0012               	return	
 11154  00505E                     
 11155                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11156  00505E  EC56  F020         	call	_USBCheckCDCRequest	;wreg free
 11157                           
 11158                           ;usb_device_mgr.c: 163: }
 11159                           
 11160                           ;usb_device_mgr.c: 162: break;
 11161                           
 11162                           ;usb_device_mgr.c: 161: default:
 11163                           
 11164                           ;usb_device_mgr.c: 159: break;
 11165                           
 11166                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11167                           
 11168                           ;usb_device_mgr.c: 156: break;
 11169                           
 11170                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11171                           
 11172                           ;usb_device_mgr.c: 153: break;
 11173  005062  0012               	return	
 11174  005064                     l1985:
 11175  005064  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11176  005068  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11177                           
 11178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11179                           ; Switch size 1, requested type "space"
 11180                           ; Number of cases is 2, Range of values is 0 to 127
 11181                           ; switch strategies available:
 11182                           ; Name         Instructions Cycles
 11183                           ; simple_byte            7     4 (average)
 11184                           ;	Chosen strategy is simple_byte
 11185  00506C  0100               	movlb	0	; () banked
 11186  00506E  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11187  005070  0A00               	xorlw	0	; case 0
 11188  005072  B4D8               	btfsc	status,2,c
 11189  005074  D004               	goto	l14385
 11190  005076  0A7F               	xorlw	127	; case 127
 11191  005078  A4D8               	btfss	status,2,c
 11192  00507A  0012               	return	
 11193  00507C  D018               	goto	l14387
 11194  00507E                     l14385:
 11195                           
 11196                           ; BSR set to: 0
 11197                           ; Switch size 1, requested type "space"
 11198                           ; Number of cases is 8, Range of values is 1 to 117
 11199                           ; switch strategies available:
 11200                           ; Name         Instructions Cycles
 11201                           ; simple_byte           25    13 (average)
 11202                           ;	Chosen strategy is simple_byte
 11203  00507E  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11204  005080  0A01               	xorlw	1	; case 1
 11205  005082  B4D8               	btfsc	status,2,c
 11206  005084  D7E9               	goto	l1991
 11207  005086  0A03               	xorlw	3	; case 2
 11208  005088  B4D8               	btfsc	status,2,c
 11209  00508A  0012               	return	
 11210  00508C  0A01               	xorlw	1	; case 3
 11211  00508E  B4D8               	btfsc	status,2,c
 11212  005090  D7E6               	goto	l1993
 11213  005092  0A06               	xorlw	6	; case 5
 11214  005094  B4D8               	btfsc	status,2,c
 11215  005096  0012               	return	
 11216  005098  0A77               	xorlw	119	; case 114
 11217  00509A  B4D8               	btfsc	status,2,c
 11218  00509C  0012               	return	
 11219  00509E  0A01               	xorlw	1	; case 115
 11220  0050A0  B4D8               	btfsc	status,2,c
 11221  0050A2  0012               	return	
 11222  0050A4  0A07               	xorlw	7	; case 116
 11223  0050A6  B4D8               	btfsc	status,2,c
 11224  0050A8  0012               	return	
 11225  0050AA  0A01               	xorlw	1	; case 117
 11226  0050AC  0012               	return	
 11227  0050AE                     l14387:
 11228                           
 11229                           ; BSR set to: 0
 11230                           ; Switch size 1, requested type "space"
 11231                           ; Number of cases is 1, Range of values is 255 to 255
 11232                           ; switch strategies available:
 11233                           ; Name         Instructions Cycles
 11234                           ; simple_byte            4     3 (average)
 11235                           ;	Chosen strategy is simple_byte
 11236  0050AE  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11237  0050B0  0AFF               	xorlw	255	; case 255
 11238  0050B2  0012               	return	
 11239  0050B4                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11240                           	opt stack 0
 11241                           tosu	equ	0xFFF
 11242                           tosh	equ	0xFFE
 11243                           tosl	equ	0xFFD
 11244                           pclath	equ	0xFFA
 11245                           tblptru	equ	0xFF8
 11246                           tblptrh	equ	0xFF7
 11247                           tblptrl	equ	0xFF6
 11248                           tablat	equ	0xFF5
 11249                           prodh	equ	0xFF4
 11250                           prodl	equ	0xFF3
 11251                           intcon	equ	0xFF2
 11252                           intcon2	equ	0xFF1
 11253                           intcon3	equ	0xFF0
 11254                           indf0	equ	0xFEF
 11255                           postinc0	equ	0xFEE
 11256                           plusw0	equ	0xFEB
 11257                           fsr0h	equ	0xFEA
 11258                           fsr0l	equ	0xFE9
 11259                           wreg	equ	0xFE8
 11260                           postinc1	equ	0xFE6
 11261                           postdec1	equ	0xFE5
 11262                           plusw1	equ	0xFE3
 11263                           fsr1h	equ	0xFE2
 11264                           fsr1l	equ	0xFE1
 11265                           indf2	equ	0xFDF
 11266                           postinc2	equ	0xFDE
 11267                           postdec2	equ	0xFDD
 11268                           plusw2	equ	0xFDB
 11269                           fsr2h	equ	0xFDA
 11270                           fsr2l	equ	0xFD9
 11271                           status	equ	0xFD8
 11272                           
 11273 ;; *************** function _USBCheckCDCRequest *****************
 11274 ;; Defined at:
 11275 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11276 ;; Parameters:    Size  Location     Type
 11277 ;;		None
 11278 ;; Auto vars:     Size  Location     Type
 11279 ;;		None
 11280 ;; Return value:  Size  Location     Type
 11281 ;;                  1    wreg      void 
 11282 ;; Registers used:
 11283 ;;		wreg, status,2, status,0
 11284 ;; Tracked objects:
 11285 ;;		On entry : 0/0
 11286 ;;		On exit  : 0/0
 11287 ;;		Unchanged: 0/0
 11288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11293 ;;Total ram usage:        0 bytes
 11294 ;; Hardware stack levels used:    1
 11295 ;; Hardware stack levels required when called:   11
 11296 ;; This function calls:
 11297 ;;		Nothing
 11298 ;; This function is called by:
 11299 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11300 ;; This function uses a non-reentrant model
 11301 ;;
 11302                           
 11303                           	psect	text45
 11304  0040AC                     __ptext45:
 11305                           	opt stack 0
 11306  0040AC                     _USBCheckCDCRequest:
 11307                           	opt stack 14
 11308                           
 11309                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11310                           
 11311                           ;incstack = 0
 11312  0040AC  0104               	movlb	4	; () banked
 11313  0040AE  5130               	movf	48,w,b	;volatile
 11314  0040B0  0B1F               	andlw	31
 11315  0040B2  06E8               	decf	wreg,f,c
 11316  0040B4  A4D8               	btfss	status,2,c
 11317  0040B6  0012               	return	
 11318                           
 11319                           ; BSR set to: 4
 11320                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11321                           
 11322                           ; BSR set to: 4
 11323                           
 11324                           ; BSR set to: 4
 11325  0040B8  3930               	swapf	48,w,b	;volatile
 11326  0040BA  32E8               	rrcf	wreg,f,c
 11327  0040BC  0B03               	andlw	3
 11328  0040BE  06E8               	decf	wreg,f,c
 11329  0040C0  A4D8               	btfss	status,2,c
 11330  0040C2  0012               	return	
 11331                           
 11332                           ; BSR set to: 4
 11333                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11334                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11335                           
 11336                           ; BSR set to: 4
 11337                           
 11338                           ; BSR set to: 4
 11339  0040C4  5134               	movf	52,w,b	;volatile
 11340  0040C6  B4D8               	btfsc	status,2,c
 11341  0040C8  D037               	goto	l1887
 11342                           
 11343                           ; BSR set to: 4
 11344  0040CA  0534               	decf	52,w,b	;volatile
 11345  0040CC  A4D8               	btfss	status,2,c
 11346  0040CE  0012               	return	
 11347  0040D0  D033               	goto	l1887
 11348  0040D2                     
 11349                           ; BSR set to: 4
 11350                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11351                           
 11352                           ; BSR set to: 4
 11353  0040D2  0E77               	movlw	low _dummy_encapsulated_cmd_response
 11354  0040D4  0100               	movlb	0	; () banked
 11355  0040D6  6FB8               	movwf	_inPipes& (0+255),b
 11356  0040D8  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11357  0040DA  6FB9               	movwf	(_inPipes+1)& (0+255),b
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11361  0040DC  0E00               	movlw	0
 11362  0040DE  6FBD               	movwf	(_inPipes+5)& (0+255),b
 11363  0040E0  0E08               	movlw	8
 11364  0040E2  6FBC               	movwf	(_inPipes+4)& (0+255),b
 11365                           
 11366                           ; BSR set to: 0
 11367                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11368  0040E4  81BB               	bsf	(_inPipes+3)& (0+255),0,b
 11369                           
 11370                           ; BSR set to: 0
 11371                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11372  0040E6  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 11373                           
 11374                           ;usb_device_cdc.c: 178: break;
 11375  0040E8  0012               	return	
 11376  0040EA                     
 11377                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11378                           
 11379                           ; BSR set to: 0
 11380  0040EA  0E77               	movlw	low _dummy_encapsulated_cmd_response
 11381  0040EC  0100               	movlb	0	; () banked
 11382  0040EE  6FB8               	movwf	_inPipes& (0+255),b
 11383  0040F0  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11384  0040F2  6FB9               	movwf	(_inPipes+1)& (0+255),b
 11385                           
 11386                           ; BSR set to: 0
 11387                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11388  0040F4  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 11389                           
 11390                           ;usb_device_cdc.c: 183: break;
 11391  0040F6  0012               	return	
 11392  0040F8                     l1891:
 11393                           
 11394                           ; BSR set to: 4
 11395                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11396  0040F8  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11397  0040FC  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11398                           
 11399                           ; BSR set to: 4
 11400                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11401  004100  0E7F               	movlw	low _line_coding
 11402  004102  0101               	movlb	1	; () banked
 11403  004104  6FC9               	movwf	_outPipes& (0+255),b
 11404  004106  0E03               	movlw	high _line_coding
 11405  004108  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11406                           
 11407                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11408  00410A  0E00               	movlw	0
 11409  00410C  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11410  00410E  0E00               	movlw	0
 11411  004110  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11412                           
 11413                           ; BSR set to: 1
 11414                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11415  004112  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11416                           
 11417                           ;usb_device_cdc.c: 192: break;
 11418  004114  0012               	return	
 11419  004116                     
 11420                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11421                           
 11422                           ; BSR set to: 1
 11423  004116  0E7F               	movlw	low _line_coding
 11424  004118  0100               	movlb	0	; () banked
 11425  00411A  6FB8               	movwf	_inPipes& (0+255),b
 11426  00411C  0E03               	movlw	high _line_coding
 11427  00411E  6FB9               	movwf	(_inPipes+1)& (0+255),b
 11428                           
 11429                           ; BSR set to: 0
 11430  004120  0E00               	movlw	0
 11431  004122  6FBD               	movwf	(_inPipes+5)& (0+255),b
 11432  004124  0E07               	movlw	7
 11433  004126  6FBC               	movwf	(_inPipes+4)& (0+255),b
 11434                           
 11435                           ; BSR set to: 0
 11436  004128  0EC1               	movlw	193
 11437  00412A  6FBB               	movwf	(_inPipes+3)& (0+255),b
 11438                           
 11439                           ;usb_device_cdc.c: 199: break;
 11440  00412C  0012               	return	
 11441  00412E                     l1893:
 11442                           
 11443                           ; BSR set to: 4
 11444                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11445  00412E  C432 F1DA          	movff	1074,_control_signal_bitmap	;volatile
 11446                           
 11447                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11448  004132  0100               	movlb	0	; () banked
 11449  004134  8FBB               	bsf	(_inPipes+3)& (0+255),7,b
 11450                           
 11451                           ; BSR set to: 0
 11452                           ;usb_device_cdc.c: 261: }
 11453                           
 11454                           ; BSR set to: 0
 11455                           ;usb_device_cdc.c: 260: break;
 11456                           
 11457                           ;usb_device_cdc.c: 259: default:
 11458                           
 11459                           ;usb_device_cdc.c: 235: break;
 11460  004136  0012               	return	
 11461  004138                     l1887:
 11462                           
 11463                           ; BSR set to: 0
 11464  004138  0104               	movlb	4	; () banked
 11465  00413A  5131               	movf	49,w,b	;volatile
 11466                           
 11467                           ; Switch size 1, requested type "space"
 11468                           ; Number of cases is 5, Range of values is 0 to 34
 11469                           ; switch strategies available:
 11470                           ; Name         Instructions Cycles
 11471                           ; simple_byte           16     9 (average)
 11472                           ;	Chosen strategy is simple_byte
 11473  00413C  0A00               	xorlw	0	; case 0
 11474  00413E  B4D8               	btfsc	status,2,c
 11475  004140  D7C8               	goto	l1888
 11476  004142  0A01               	xorlw	1	; case 1
 11477  004144  B4D8               	btfsc	status,2,c
 11478  004146  D7D1               	goto	l1890
 11479  004148  0A21               	xorlw	33	; case 32
 11480  00414A  B4D8               	btfsc	status,2,c
 11481  00414C  D7D5               	goto	l1891
 11482  00414E  0A01               	xorlw	1	; case 33
 11483  004150  B4D8               	btfsc	status,2,c
 11484  004152  D7E1               	goto	l1892
 11485  004154  0A03               	xorlw	3	; case 34
 11486  004156  A4D8               	btfss	status,2,c
 11487  004158  0012               	return	
 11488  00415A  D7E9               	goto	l1893
 11489  00415C                     __end_of_USBCheckCDCRequest:
 11490                           	opt stack 0
 11491                           tosu	equ	0xFFF
 11492                           tosh	equ	0xFFE
 11493                           tosl	equ	0xFFD
 11494                           pclath	equ	0xFFA
 11495                           tblptru	equ	0xFF8
 11496                           tblptrh	equ	0xFF7
 11497                           tblptrl	equ	0xFF6
 11498                           tablat	equ	0xFF5
 11499                           prodh	equ	0xFF4
 11500                           prodl	equ	0xFF3
 11501                           intcon	equ	0xFF2
 11502                           intcon2	equ	0xFF1
 11503                           intcon3	equ	0xFF0
 11504                           indf0	equ	0xFEF
 11505                           postinc0	equ	0xFEE
 11506                           plusw0	equ	0xFEB
 11507                           fsr0h	equ	0xFEA
 11508                           fsr0l	equ	0xFE9
 11509                           wreg	equ	0xFE8
 11510                           postinc1	equ	0xFE6
 11511                           postdec1	equ	0xFE5
 11512                           plusw1	equ	0xFE3
 11513                           fsr1h	equ	0xFE2
 11514                           fsr1l	equ	0xFE1
 11515                           indf2	equ	0xFDF
 11516                           postinc2	equ	0xFDE
 11517                           postdec2	equ	0xFDD
 11518                           plusw2	equ	0xFDB
 11519                           fsr2h	equ	0xFDA
 11520                           fsr2l	equ	0xFD9
 11521                           status	equ	0xFD8
 11522                           
 11523 ;; *************** function _CDCInitEP *****************
 11524 ;; Defined at:
 11525 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11526 ;; Parameters:    Size  Location     Type
 11527 ;;		None
 11528 ;; Auto vars:     Size  Location     Type
 11529 ;;		None
 11530 ;; Return value:  Size  Location     Type
 11531 ;;                  1    wreg      void 
 11532 ;; Registers used:
 11533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11534 ;; Tracked objects:
 11535 ;;		On entry : 0/0
 11536 ;;		On exit  : 0/0
 11537 ;;		Unchanged: 0/0
 11538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11543 ;;Total ram usage:        0 bytes
 11544 ;; Hardware stack levels used:    1
 11545 ;; Hardware stack levels required when called:   13
 11546 ;; This function calls:
 11547 ;;		_USBEnableEndpoint
 11548 ;;		_USBTransferOnePacket
 11549 ;; This function is called by:
 11550 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11551 ;; This function uses a non-reentrant model
 11552 ;;
 11553                           
 11554                           	psect	text46
 11555  004E50                     __ptext46:
 11556                           	opt stack 0
 11557  004E50                     _CDCInitEP:
 11558                           	opt stack 12
 11559                           
 11560                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11561                           
 11562                           ;incstack = 0
 11563  004E50  0E80               	movlw	128
 11564  004E52  0103               	movlb	3	; () banked
 11565  004E54  6F7F               	movwf	_line_coding& (0+255),b
 11566  004E56  0E25               	movlw	37
 11567  004E58  6F80               	movwf	(_line_coding+1)& (0+255),b
 11568  004E5A  0E00               	movlw	0
 11569  004E5C  6F81               	movwf	(_line_coding+2)& (0+255),b
 11570  004E5E  0E00               	movlw	0
 11571  004E60  6F82               	movwf	(_line_coding+3)& (0+255),b
 11572                           
 11573                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11574  004E62  0E00               	movlw	0
 11575  004E64  6F83               	movwf	(_line_coding+4)& (0+255),b
 11576                           
 11577                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11578  004E66  0E00               	movlw	0
 11579  004E68  6F84               	movwf	(_line_coding+5)& (0+255),b
 11580                           
 11581                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11582  004E6A  0E08               	movlw	8
 11583  004E6C  6F85               	movwf	(_line_coding+6)& (0+255),b
 11584                           
 11585                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11586  004E6E  0E00               	movlw	0
 11587  004E70  0100               	movlb	0	; () banked
 11588  004E72  6FCE               	movwf	_cdc_rx_len& (0+255),b
 11589                           
 11590                           ; BSR set to: 0
 11591                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11592  004E74  0E1A               	movlw	26
 11593  004E76  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11594  004E78  0E01               	movlw	1
 11595  004E7A  ECB4  F02B         	call	_USBEnableEndpoint
 11596                           
 11597                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11598  004E7E  0E1E               	movlw	30
 11599  004E80  0100               	movlb	0	; () banked
 11600  004E82  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11601  004E84  0E02               	movlw	2
 11602  004E86  ECB4  F02B         	call	_USBEnableEndpoint
 11603                           
 11604                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11605  004E8A  0E00               	movlw	0
 11606  004E8C  0100               	movlb	0	; () banked
 11607  004E8E  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11608  004E90  0E50               	movlw	low _cdc_data_rx
 11609  004E92  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11610  004E94  0E05               	movlw	high _cdc_data_rx
 11611  004E96  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11612  004E98  0E40               	movlw	64
 11613  004E9A  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11614  004E9C  0E02               	movlw	2
 11615  004E9E  EC9E  F01F         	call	_USBTransferOnePacket
 11616  004EA2  C07D  F0C4         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11617  004EA6  C07E  F0C5         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11618                           
 11619                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11620  004EAA  0E00               	movlw	0
 11621  004EAC  0101               	movlb	1	; () banked
 11622  004EAE  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11623  004EB0  0E00               	movlw	0
 11624  004EB2  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11625                           
 11626                           ; BSR set to: 1
 11627                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11628  004EB4  0E00               	movlw	0
 11629  004EB6  0100               	movlb	0	; () banked
 11630  004EB8  6FCD               	movwf	_cdc_trf_state& (0+255),b
 11631                           
 11632                           ; BSR set to: 0
 11633  004EBA  0012               	return		;funcret
 11634  004EBC                     __end_of_CDCInitEP:
 11635                           	opt stack 0
 11636                           tosu	equ	0xFFF
 11637                           tosh	equ	0xFFE
 11638                           tosl	equ	0xFFD
 11639                           pclath	equ	0xFFA
 11640                           tblptru	equ	0xFF8
 11641                           tblptrh	equ	0xFF7
 11642                           tblptrl	equ	0xFF6
 11643                           tablat	equ	0xFF5
 11644                           prodh	equ	0xFF4
 11645                           prodl	equ	0xFF3
 11646                           intcon	equ	0xFF2
 11647                           intcon2	equ	0xFF1
 11648                           intcon3	equ	0xFF0
 11649                           indf0	equ	0xFEF
 11650                           postinc0	equ	0xFEE
 11651                           plusw0	equ	0xFEB
 11652                           fsr0h	equ	0xFEA
 11653                           fsr0l	equ	0xFE9
 11654                           wreg	equ	0xFE8
 11655                           postinc1	equ	0xFE6
 11656                           postdec1	equ	0xFE5
 11657                           plusw1	equ	0xFE3
 11658                           fsr1h	equ	0xFE2
 11659                           fsr1l	equ	0xFE1
 11660                           indf2	equ	0xFDF
 11661                           postinc2	equ	0xFDE
 11662                           postdec2	equ	0xFDD
 11663                           plusw2	equ	0xFDB
 11664                           fsr2h	equ	0xFDA
 11665                           fsr2l	equ	0xFD9
 11666                           status	equ	0xFD8
 11667                           
 11668 ;; *************** function _USBEnableEndpoint *****************
 11669 ;; Defined at:
 11670 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11671 ;; Parameters:    Size  Location     Type
 11672 ;;  ep              1    wreg     unsigned char 
 11673 ;;  options         1   37[BANK0 ] unsigned char 
 11674 ;; Auto vars:     Size  Location     Type
 11675 ;;  ep              1   40[BANK0 ] unsigned char 
 11676 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11677 ;;		 -> UEP0(1), 
 11678 ;; Return value:  Size  Location     Type
 11679 ;;                  1    wreg      void 
 11680 ;; Registers used:
 11681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11682 ;; Tracked objects:
 11683 ;;		On entry : 0/0
 11684 ;;		On exit  : 0/0
 11685 ;;		Unchanged: 0/0
 11686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11687 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11688 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11690 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11691 ;;Total ram usage:        4 bytes
 11692 ;; Hardware stack levels used:    1
 11693 ;; Hardware stack levels required when called:   12
 11694 ;; This function calls:
 11695 ;;		_USBConfigureEndpoint
 11696 ;; This function is called by:
 11697 ;;		_CDCInitEP
 11698 ;; This function uses a non-reentrant model
 11699 ;;
 11700                           
 11701                           	psect	text47
 11702  005768                     __ptext47:
 11703                           	opt stack 0
 11704  005768                     _USBEnableEndpoint:
 11705                           	opt stack 12
 11706                           
 11707                           ; BSR set to: 0
 11708                           ;incstack = 0
 11709                           ;USBEnableEndpoint@ep stored from wreg
 11710  005768  0100               	movlb	0	; () banked
 11711  00576A  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11712                           
 11713                           ;usb_device.c: 898: unsigned char* p;
 11714                           ;usb_device.c: 902: if(options & 0x04)
 11715  00576C  0100               	movlb	0	; () banked
 11716  00576E  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11717  005770  D005               	goto	l1628
 11718                           
 11719                           ; BSR set to: 0
 11720                           ;usb_device.c: 903: {
 11721                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11722  005772  0E00               	movlw	0
 11723  005774  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11724  005776  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11725  005778  ECF1  F022         	call	_USBConfigureEndpoint
 11726  00577C                     l1628:
 11727                           
 11728                           ;usb_device.c: 905: }
 11729                           ;usb_device.c: 906: if(options & 0x02)
 11730  00577C  0100               	movlb	0	; () banked
 11731  00577E  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11732  005780  D005               	goto	l1629
 11733                           
 11734                           ; BSR set to: 0
 11735                           ;usb_device.c: 907: {
 11736                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11737  005782  0E01               	movlw	1
 11738  005784  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11739  005786  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11740  005788  ECF1  F022         	call	_USBConfigureEndpoint
 11741  00578C                     l1629:
 11742                           
 11743                           ;usb_device.c: 909: }
 11744                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11745  00578C  0100               	movlb	0	; () banked
 11746  00578E  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11747  005790  0D01               	mullw	1
 11748  005792  0E26               	movlw	38
 11749  005794  24F3               	addwf	prodl,w,c
 11750  005796  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11751  005798  0E0F               	movlw	15
 11752  00579A  20F4               	addwfc	prodh,w,c
 11753  00579C  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11754                           
 11755                           ; BSR set to: 0
 11756                           ;usb_device.c: 919: *p = options;
 11757  00579E  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11758  0057A2  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11759  0057A6  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11760                           
 11761                           ; BSR set to: 0
 11762  0057AA  0012               	return		;funcret
 11763  0057AC                     __end_of_USBEnableEndpoint:
 11764                           	opt stack 0
 11765                           tosu	equ	0xFFF
 11766                           tosh	equ	0xFFE
 11767                           tosl	equ	0xFFD
 11768                           pclath	equ	0xFFA
 11769                           tblptru	equ	0xFF8
 11770                           tblptrh	equ	0xFF7
 11771                           tblptrl	equ	0xFF6
 11772                           tablat	equ	0xFF5
 11773                           prodh	equ	0xFF4
 11774                           prodl	equ	0xFF3
 11775                           intcon	equ	0xFF2
 11776                           intcon2	equ	0xFF1
 11777                           intcon3	equ	0xFF0
 11778                           indf0	equ	0xFEF
 11779                           postinc0	equ	0xFEE
 11780                           plusw0	equ	0xFEB
 11781                           fsr0h	equ	0xFEA
 11782                           fsr0l	equ	0xFE9
 11783                           wreg	equ	0xFE8
 11784                           postinc1	equ	0xFE6
 11785                           postdec1	equ	0xFE5
 11786                           plusw1	equ	0xFE3
 11787                           fsr1h	equ	0xFE2
 11788                           fsr1l	equ	0xFE1
 11789                           indf2	equ	0xFDF
 11790                           postinc2	equ	0xFDE
 11791                           postdec2	equ	0xFDD
 11792                           plusw2	equ	0xFDB
 11793                           fsr2h	equ	0xFDA
 11794                           fsr2l	equ	0xFD9
 11795                           status	equ	0xFD8
 11796                           
 11797 ;; *************** function _USBConfigureEndpoint *****************
 11798 ;; Defined at:
 11799 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11800 ;; Parameters:    Size  Location     Type
 11801 ;;  EPNum           1    wreg     unsigned char 
 11802 ;;  direction       1   29[BANK0 ] unsigned char 
 11803 ;; Auto vars:     Size  Location     Type
 11804 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11805 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11806 ;;		 -> BDT(48), 
 11807 ;; Return value:  Size  Location     Type
 11808 ;;                  1    wreg      void 
 11809 ;; Registers used:
 11810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11811 ;; Tracked objects:
 11812 ;;		On entry : 0/0
 11813 ;;		On exit  : 0/0
 11814 ;;		Unchanged: 0/0
 11815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11816 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11817 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11818 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11819 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11820 ;;Total ram usage:        8 bytes
 11821 ;; Hardware stack levels used:    1
 11822 ;; Hardware stack levels required when called:   11
 11823 ;; This function calls:
 11824 ;;		Nothing
 11825 ;; This function is called by:
 11826 ;;		_USBEnableEndpoint
 11827 ;; This function uses a non-reentrant model
 11828 ;;
 11829                           
 11830                           	psect	text48
 11831  0045E2                     __ptext48:
 11832                           	opt stack 0
 11833  0045E2                     _USBConfigureEndpoint:
 11834                           	opt stack 12
 11835                           
 11836                           ; BSR set to: 0
 11837                           ;incstack = 0
 11838                           ;USBConfigureEndpoint@EPNum stored from wreg
 11839  0045E2  0100               	movlb	0	; () banked
 11840  0045E4  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11841                           
 11842                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11843                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11844  0045E6  0E00               	movlw	0
 11845  0045E8  0100               	movlb	0	; () banked
 11846  0045EA  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 11847  0045EC  0E04               	movlw	4
 11848  0045EE  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 11849                           
 11850                           ; BSR set to: 0
 11851                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 11852  0045F0  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11853  0045F2  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 11854  0045F4  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 11855  0045F6  90D8               	bcf	status,0,c
 11856  0045F8  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 11857  0045FA  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 11858  0045FC  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11859  0045FE  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 11860  004600  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 11861  004602  90D8               	bcf	status,0,c
 11862  004604  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11863  004606  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11864  004608  90D8               	bcf	status,0,c
 11865  00460A  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11866  00460C  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11867  00460E  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 11868  004610  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11869  004612  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 11870  004614  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11871  004616  90D8               	bcf	status,0,c
 11872  004618  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11873  00461A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11874  00461C  90D8               	bcf	status,0,c
 11875  00461E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11876  004620  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11877  004622  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 11878  004624  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 11879  004626  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 11880  004628  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 11881                           
 11882                           ; BSR set to: 0
 11883                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 11884  00462A  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11885  00462E  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11886  004632  9EDF               	bcf	indf2,7,c
 11887                           
 11888                           ; BSR set to: 0
 11889                           ;usb_device.c: 1575: if(direction == 0)
 11890  004634  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11891  004636  A4D8               	btfss	status,2,c
 11892  004638  D007               	goto	l1664
 11893                           
 11894                           ; BSR set to: 0
 11895                           ;usb_device.c: 1576: {
 11896                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 11897  00463A  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11898  00463C  0D02               	mullw	2
 11899  00463E  0E0E               	movlw	low _pBDTEntryOut
 11900  004640  24F3               	addwf	prodl,w,c
 11901  004642  6ED9               	movwf	fsr2l,c
 11902  004644  0E03               	movlw	high _pBDTEntryOut
 11903  004646  D006               	goto	L10
 11904  004648                     l1664:
 11905                           
 11906                           ; BSR set to: 0
 11907                           ;usb_device.c: 1579: else
 11908                           ;usb_device.c: 1580: {
 11909                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 11910                           
 11911                           ; BSR set to: 0
 11912  004648  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11913  00464A  0D02               	mullw	2
 11914  00464C  0EBE               	movlw	low _pBDTEntryIn
 11915  00464E  24F3               	addwf	prodl,w,c
 11916  004650  6ED9               	movwf	fsr2l,c
 11917  004652  0E00               	movlw	high _pBDTEntryIn
 11918  004654                     L10:
 11919  004654  20F4               	addwfc	prodh,w,c
 11920  004656  6EDA               	movwf	fsr2h,c
 11921  004658  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 11922  00465C  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 11923                           
 11924                           ; BSR set to: 0
 11925                           ;usb_device.c: 1582: }
 11926                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 11927                           
 11928                           ; BSR set to: 0
 11929  004660  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11930  004664  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11931  004668  9CDF               	bcf	indf2,6,c
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 11935  00466A  EE20 F004          	lfsr	2,4
 11936  00466E  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 11937  004670  26D9               	addwf	fsr2l,f,c
 11938  004672  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 11939  004674  22DA               	addwfc	fsr2h,f,c
 11940  004676  8CDF               	bsf	indf2,6,c
 11941                           
 11942                           ; BSR set to: 0
 11943  004678  0012               	return		;funcret
 11944  00467A                     __end_of_USBConfigureEndpoint:
 11945                           	opt stack 0
 11946                           tosu	equ	0xFFF
 11947                           tosh	equ	0xFFE
 11948                           tosl	equ	0xFFD
 11949                           pclath	equ	0xFFA
 11950                           tblptru	equ	0xFF8
 11951                           tblptrh	equ	0xFF7
 11952                           tblptrl	equ	0xFF6
 11953                           tablat	equ	0xFF5
 11954                           prodh	equ	0xFF4
 11955                           prodl	equ	0xFF3
 11956                           intcon	equ	0xFF2
 11957                           intcon2	equ	0xFF1
 11958                           intcon3	equ	0xFF0
 11959                           indf0	equ	0xFEF
 11960                           postinc0	equ	0xFEE
 11961                           plusw0	equ	0xFEB
 11962                           fsr0h	equ	0xFEA
 11963                           fsr0l	equ	0xFE9
 11964                           wreg	equ	0xFE8
 11965                           postinc1	equ	0xFE6
 11966                           postdec1	equ	0xFE5
 11967                           plusw1	equ	0xFE3
 11968                           fsr1h	equ	0xFE2
 11969                           fsr1l	equ	0xFE1
 11970                           indf2	equ	0xFDF
 11971                           postinc2	equ	0xFDE
 11972                           postdec2	equ	0xFDD
 11973                           plusw2	equ	0xFDB
 11974                           fsr2h	equ	0xFDA
 11975                           fsr2l	equ	0xFD9
 11976                           status	equ	0xFD8
 11977                           
 11978 ;; *************** function _USBCtrlTrfOutHandler *****************
 11979 ;; Defined at:
 11980 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11981 ;; Parameters:    Size  Location     Type
 11982 ;;		None
 11983 ;; Auto vars:     Size  Location     Type
 11984 ;;		None
 11985 ;; Return value:  Size  Location     Type
 11986 ;;                  1    wreg      void 
 11987 ;; Registers used:
 11988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11989 ;; Tracked objects:
 11990 ;;		On entry : 0/0
 11991 ;;		On exit  : 0/0
 11992 ;;		Unchanged: 0/0
 11993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11998 ;;Total ram usage:        0 bytes
 11999 ;; Hardware stack levels used:    1
 12000 ;; Hardware stack levels required when called:   13
 12001 ;; This function calls:
 12002 ;;		_USBCtrlTrfRxService
 12003 ;; This function is called by:
 12004 ;;		_USBCtrlEPService
 12005 ;; This function uses a non-reentrant model
 12006 ;;
 12007                           
 12008                           	psect	text49
 12009  004F28                     __ptext49:
 12010                           	opt stack 0
 12011  004F28                     _USBCtrlTrfOutHandler:
 12012                           	opt stack 12
 12013                           
 12014                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12015                           
 12016                           ; BSR set to: 0
 12017                           ;incstack = 0
 12018  004F28  0E02               	movlw	2
 12019  004F2A  0100               	movlb	0	; () banked
 12020  004F2C  19D1               	xorwf	_controlTransferState& (0+255),w,b
 12021  004F2E  A4D8               	btfss	status,2,c
 12022  004F30  D003               	goto	l1770
 12023                           
 12024                           ; BSR set to: 0
 12025                           ;usb_device.c: 2558: {
 12026                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12027  004F32  EC60  F016         	call	_USBCtrlTrfRxService	;wreg free
 12028                           
 12029                           ;usb_device.c: 2560: }
 12030  004F36  0012               	return	
 12031  004F38                     l1770:
 12032                           
 12033                           ;usb_device.c: 2561: else
 12034                           ;usb_device.c: 2562: {
 12035                           ;usb_device.c: 2565: controlTransferState = 0;
 12036  004F38  0E00               	movlw	0
 12037  004F3A  0100               	movlb	0	; () banked
 12038  004F3C  6FD1               	movwf	_controlTransferState& (0+255),b
 12039                           
 12040                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12041  004F3E  0101               	movlb	1	; () banked
 12042  004F40  51DD               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12043  004F42  A4D8               	btfss	status,2,c
 12044  004F44  D020               	goto	l1772
 12045                           
 12046                           ; BSR set to: 1
 12047                           ;usb_device.c: 2573: {
 12048                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12049  004F46  0100               	movlb	0	; () banked
 12050  004F48  EE20 F001          	lfsr	2,1
 12051  004F4C  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12052  004F4E  26D9               	addwf	fsr2l,f,c
 12053  004F50  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12054  004F52  22DA               	addwfc	fsr2h,f,c
 12055  004F54  0E08               	movlw	8
 12056  004F56  6EDF               	movwf	indf2,c
 12057                           
 12058                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12059  004F58  EE20 F002          	lfsr	2,2
 12060  004F5C  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12061  004F5E  26D9               	addwf	fsr2l,f,c
 12062  004F60  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12063  004F62  22DA               	addwfc	fsr2h,f,c
 12064  004F64  0E30               	movlw	48
 12065  004F66  6EDE               	movwf	postinc2,c
 12066  004F68  0E04               	movlw	4
 12067  004F6A  6EDD               	movwf	postdec2,c
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12071  004F6C  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12072  004F70  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12073  004F74  0E0C               	movlw	12
 12074  004F76  6EDF               	movwf	indf2,c
 12075                           
 12076                           ; BSR set to: 0
 12077                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12078  004F78  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12079  004F7C  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12080  004F80  0E00               	movlw	0
 12081  004F82  8EDB               	bsf	plusw2,7,c
 12082                           
 12083                           ;usb_device.c: 2578: }
 12084  004F84  0012               	return	
 12085  004F86                     l1772:
 12086                           
 12087                           ;usb_device.c: 2579: else
 12088                           ;usb_device.c: 2580: {
 12089                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12090                           
 12091                           ; BSR set to: 0
 12092  004F86  0E00               	movlw	0
 12093  004F88  0101               	movlb	1	; () banked
 12094  004F8A  6FDD               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12095                           
 12096                           ; BSR set to: 1
 12097  004F8C  0012               	return	
 12098  004F8E                     __end_of_USBCtrlTrfOutHandler:
 12099                           	opt stack 0
 12100                           tosu	equ	0xFFF
 12101                           tosh	equ	0xFFE
 12102                           tosl	equ	0xFFD
 12103                           pclath	equ	0xFFA
 12104                           tblptru	equ	0xFF8
 12105                           tblptrh	equ	0xFF7
 12106                           tblptrl	equ	0xFF6
 12107                           tablat	equ	0xFF5
 12108                           prodh	equ	0xFF4
 12109                           prodl	equ	0xFF3
 12110                           intcon	equ	0xFF2
 12111                           intcon2	equ	0xFF1
 12112                           intcon3	equ	0xFF0
 12113                           indf0	equ	0xFEF
 12114                           postinc0	equ	0xFEE
 12115                           plusw0	equ	0xFEB
 12116                           fsr0h	equ	0xFEA
 12117                           fsr0l	equ	0xFE9
 12118                           wreg	equ	0xFE8
 12119                           postinc1	equ	0xFE6
 12120                           postdec1	equ	0xFE5
 12121                           plusw1	equ	0xFE3
 12122                           fsr1h	equ	0xFE2
 12123                           fsr1l	equ	0xFE1
 12124                           indf2	equ	0xFDF
 12125                           postinc2	equ	0xFDE
 12126                           postdec2	equ	0xFDD
 12127                           plusw2	equ	0xFDB
 12128                           fsr2h	equ	0xFDA
 12129                           fsr2l	equ	0xFD9
 12130                           status	equ	0xFD8
 12131                           
 12132 ;; *************** function _USBCtrlTrfRxService *****************
 12133 ;; Defined at:
 12134 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12135 ;; Parameters:    Size  Location     Type
 12136 ;;		None
 12137 ;; Auto vars:     Size  Location     Type
 12138 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12139 ;;  i               1   29[BANK0 ] unsigned char 
 12140 ;; Return value:  Size  Location     Type
 12141 ;;                  1    wreg      void 
 12142 ;; Registers used:
 12143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12144 ;; Tracked objects:
 12145 ;;		On entry : 0/0
 12146 ;;		On exit  : 0/0
 12147 ;;		Unchanged: 0/0
 12148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12150 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12152 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12153 ;;Total ram usage:        2 bytes
 12154 ;; Hardware stack levels used:    1
 12155 ;; Hardware stack levels required when called:   12
 12156 ;; This function calls:
 12157 ;;		_USBCtrlEPAllowStatusStage
 12158 ;; This function is called by:
 12159 ;;		_USBCtrlTrfOutHandler
 12160 ;; This function uses a non-reentrant model
 12161 ;;
 12162                           
 12163                           	psect	text50
 12164  002CC0                     __ptext50:
 12165                           	opt stack 0
 12166  002CC0                     _USBCtrlTrfRxService:
 12167                           	opt stack 12
 12168                           
 12169                           ;usb_device.c: 1872: uint8_t byteToRead;
 12170                           ;usb_device.c: 1873: uint8_t i;
 12171                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12172                           
 12173                           ;incstack = 0
 12174  002CC0  0100               	movlb	0	; () banked
 12175  002CC2  EE20 F001          	lfsr	2,1
 12176  002CC6  51C8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12177  002CC8  26D9               	addwf	fsr2l,f,c
 12178  002CCA  51C9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12179  002CCC  22DA               	addwfc	fsr2h,f,c
 12180  002CCE  50DF               	movf	indf2,w,c
 12181  002CD0  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12182                           
 12183                           ; BSR set to: 0
 12184                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12185  002CD2  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12186  002CD4  0101               	movlb	1	; () banked
 12187  002CD6  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12188  002CD8  0E00               	movlw	0
 12189  002CDA  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12190  002CDC  A0D8               	btfss	status,0,c
 12191                           
 12192                           ; BSR set to: 1
 12193                           ;usb_device.c: 1884: {
 12194                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12195  002CDE  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12196                           
 12197                           ; BSR set to: 1
 12198                           ;usb_device.c: 1886: }
 12199                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12200                           
 12201                           ; BSR set to: 1
 12202  002CE2  0100               	movlb	0	; () banked
 12203  002CE4  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12204  002CE6  0101               	movlb	1	; () banked
 12205  002CE8  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12206  002CEA  0E00               	movlw	0
 12207  002CEC  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12208                           
 12209                           ; BSR set to: 1
 12210                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12211  002CEE  0E00               	movlw	0
 12212  002CF0  0100               	movlb	0	; () banked
 12213  002CF2  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12214  002CF4  D013               	goto	l1698
 12215  002CF6                     
 12216                           ; BSR set to: 0
 12217                           ;usb_device.c: 1893: {
 12218                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12219                           
 12220                           ; BSR set to: 0
 12221  002CF6  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12222  002CF8  0D01               	mullw	1
 12223  002CFA  0E38               	movlw	56
 12224  002CFC  24F3               	addwf	prodl,w,c
 12225  002CFE  6ED9               	movwf	fsr2l,c
 12226  002D00  0E04               	movlw	4
 12227  002D02  20F4               	addwfc	prodh,w,c
 12228  002D04  6EDA               	movwf	fsr2h,c
 12229  002D06  C1C9  FFE1         	movff	_outPipes,fsr1l
 12230  002D0A  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12231  002D0E  CFDF FFE7          	movff	indf2,indf1
 12232                           
 12233                           ; BSR set to: 0
 12234  002D12  0101               	movlb	1	; () banked
 12235  002D14  4BC9               	infsnz	_outPipes& (0+255),f,b
 12236  002D16  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12237                           
 12238                           ; BSR set to: 1
 12239  002D18  0100               	movlb	0	; () banked
 12240  002D1A  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12241  002D1C                     l1698:
 12242                           
 12243                           ; BSR set to: 0
 12244                           
 12245                           ; BSR set to: 0
 12246  002D1C  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12247  002D1E  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12248  002D20  A0D8               	btfss	status,0,c
 12249  002D22  D7E9               	goto	l1699
 12250                           
 12251                           ; BSR set to: 0
 12252                           ;usb_device.c: 1895: }
 12253                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12254                           
 12255                           ; BSR set to: 0
 12256  002D24  0101               	movlb	1	; () banked
 12257  002D26  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12258  002D28  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12259  002D2A  B4D8               	btfsc	status,2,c
 12260  002D2C  D033               	goto	l1701
 12261                           
 12262                           ; BSR set to: 1
 12263                           ;usb_device.c: 1900: {
 12264                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12265  002D2E  0100               	movlb	0	; () banked
 12266  002D30  EE20 F001          	lfsr	2,1
 12267  002D34  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12268  002D36  26D9               	addwf	fsr2l,f,c
 12269  002D38  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12270  002D3A  22DA               	addwfc	fsr2h,f,c
 12271  002D3C  0E08               	movlw	8
 12272  002D3E  6EDF               	movwf	indf2,c
 12273                           
 12274                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12275  002D40  EE20 F002          	lfsr	2,2
 12276  002D44  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12277  002D46  26D9               	addwf	fsr2l,f,c
 12278  002D48  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12279  002D4A  22DA               	addwfc	fsr2h,f,c
 12280  002D4C  0E38               	movlw	56
 12281  002D4E  6EDE               	movwf	postinc2,c
 12282  002D50  0E04               	movlw	4
 12283  002D52  6EDD               	movwf	postdec2,c
 12284                           
 12285                           ; BSR set to: 0
 12286                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12287  002D54  C0C8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12288  002D58  C0C9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12289  002D5C  BCDF               	btfsc	indf2,6,c
 12290  002D5E  D00D               	goto	l1702
 12291                           
 12292                           ; BSR set to: 0
 12293                           ;usb_device.c: 1904: {
 12294                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12295  002D60  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12296  002D64  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12297  002D68  0E48               	movlw	72
 12298  002D6A  6EDF               	movwf	indf2,c
 12299                           
 12300                           ; BSR set to: 0
 12301                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12302  002D6C  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12303  002D70  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12304  002D74  0E00               	movlw	0
 12305  002D76  8EDB               	bsf	plusw2,7,c
 12306                           
 12307                           ;usb_device.c: 1907: }
 12308  002D78  0012               	return	
 12309  002D7A                     l1702:
 12310                           
 12311                           ; BSR set to: 0
 12312                           ;usb_device.c: 1908: else
 12313                           ;usb_device.c: 1909: {
 12314                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12315                           
 12316                           ; BSR set to: 0
 12317  002D7A  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12318  002D7E  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12319  002D82  0E08               	movlw	8
 12320  002D84  6EDF               	movwf	indf2,c
 12321                           
 12322                           ; BSR set to: 0
 12323                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12324  002D86  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12325  002D8A  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12326  002D8E  0E00               	movlw	0
 12327  002D90  8EDB               	bsf	plusw2,7,c
 12328                           
 12329                           ; BSR set to: 0
 12330                           ;usb_device.c: 1912: }
 12331                           ;usb_device.c: 1913: }
 12332  002D92  0012               	return	
 12333  002D94                     l1701:
 12334                           
 12335                           ;usb_device.c: 1914: else
 12336                           ;usb_device.c: 1915: {
 12337                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12338                           
 12339                           ; BSR set to: 0
 12340  002D94  0100               	movlb	0	; () banked
 12341  002D96  EE20 F001          	lfsr	2,1
 12342  002D9A  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12343  002D9C  26D9               	addwf	fsr2l,f,c
 12344  002D9E  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12345  002DA0  22DA               	addwfc	fsr2h,f,c
 12346  002DA2  0E08               	movlw	8
 12347  002DA4  6EDF               	movwf	indf2,c
 12348                           
 12349                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12350  002DA6  EE20 F002          	lfsr	2,2
 12351  002DAA  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12352  002DAC  26D9               	addwf	fsr2l,f,c
 12353  002DAE  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12354  002DB0  22DA               	addwfc	fsr2h,f,c
 12355  002DB2  0E30               	movlw	48
 12356  002DB4  6EDE               	movwf	postinc2,c
 12357  002DB6  0E04               	movlw	4
 12358  002DB8  6EDD               	movwf	postdec2,c
 12359                           
 12360                           ; BSR set to: 0
 12361                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12362  002DBA  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12363  002DBE  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12364  002DC2  0E04               	movlw	4
 12365  002DC4  6EDF               	movwf	indf2,c
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12369  002DC6  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12370  002DCA  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12371  002DCE  0E00               	movlw	0
 12372  002DD0  8EDB               	bsf	plusw2,7,c
 12373                           
 12374                           ; BSR set to: 0
 12375                           ;usb_device.c: 1944: }
 12376                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12377                           
 12378                           ; BSR set to: 0
 12379  002DD2  0101               	movlb	1	; () banked
 12380  002DD4  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12381                           
 12382                           ; BSR set to: 1
 12383                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12384  002DD6  0100               	movlb	0	; () banked
 12385  002DD8  51CF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12386  002DDA  A4D8               	btfss	status,2,c
 12387  002DDC  0012               	return	
 12388                           
 12389                           ; BSR set to: 0
 12390                           ;usb_device.c: 1960: {
 12391                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12392  002DDE  EC49  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12393  002DE2  0012               	return	
 12394  002DE4                     __end_of_USBCtrlTrfRxService:
 12395                           	opt stack 0
 12396                           tosu	equ	0xFFF
 12397                           tosh	equ	0xFFE
 12398                           tosl	equ	0xFFD
 12399                           pclath	equ	0xFFA
 12400                           tblptru	equ	0xFF8
 12401                           tblptrh	equ	0xFF7
 12402                           tblptrl	equ	0xFF6
 12403                           tablat	equ	0xFF5
 12404                           prodh	equ	0xFF4
 12405                           prodl	equ	0xFF3
 12406                           intcon	equ	0xFF2
 12407                           intcon2	equ	0xFF1
 12408                           intcon3	equ	0xFF0
 12409                           indf0	equ	0xFEF
 12410                           postinc0	equ	0xFEE
 12411                           plusw0	equ	0xFEB
 12412                           fsr0h	equ	0xFEA
 12413                           fsr0l	equ	0xFE9
 12414                           wreg	equ	0xFE8
 12415                           indf1	equ	0xFE7
 12416                           postinc1	equ	0xFE6
 12417                           postdec1	equ	0xFE5
 12418                           plusw1	equ	0xFE3
 12419                           fsr1h	equ	0xFE2
 12420                           fsr1l	equ	0xFE1
 12421                           indf2	equ	0xFDF
 12422                           postinc2	equ	0xFDE
 12423                           postdec2	equ	0xFDD
 12424                           plusw2	equ	0xFDB
 12425                           fsr2h	equ	0xFDA
 12426                           fsr2l	equ	0xFD9
 12427                           status	equ	0xFD8
 12428                           
 12429 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12430 ;; Defined at:
 12431 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12432 ;; Parameters:    Size  Location     Type
 12433 ;;		None
 12434 ;; Auto vars:     Size  Location     Type
 12435 ;;		None
 12436 ;; Return value:  Size  Location     Type
 12437 ;;                  1    wreg      void 
 12438 ;; Registers used:
 12439 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12440 ;; Tracked objects:
 12441 ;;		On entry : 0/0
 12442 ;;		On exit  : 0/0
 12443 ;;		Unchanged: 0/0
 12444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12449 ;;Total ram usage:        0 bytes
 12450 ;; Hardware stack levels used:    1
 12451 ;; Hardware stack levels required when called:   11
 12452 ;; This function calls:
 12453 ;;		Nothing
 12454 ;; This function is called by:
 12455 ;;		_USBDeviceTasks
 12456 ;;		_USBCtrlEPServiceComplete
 12457 ;;		_USBCtrlTrfRxService
 12458 ;; This function uses a non-reentrant model
 12459 ;;
 12460                           
 12461                           	psect	text51
 12462  003A92                     __ptext51:
 12463                           	opt stack 0
 12464  003A92                     _USBCtrlEPAllowStatusStage:
 12465                           	opt stack 12
 12466                           
 12467                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12468                           
 12469                           ;incstack = 0
 12470  003A92  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 12471  003A94  A4D8               	btfss	status,2,c
 12472  003A96  0012               	return	
 12473                           
 12474                           ;usb_device.c: 1442: {
 12475                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12476  003A98  0E01               	movlw	1
 12477  003A9A  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12478                           
 12479                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12480  003A9C  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12481  003A9E  A4D8               	btfss	status,2,c
 12482  003AA0  0012               	return	
 12483                           
 12484                           ;usb_device.c: 1445: {
 12485                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12486  003AA2  0E01               	movlw	1
 12487  003AA4  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12488                           
 12489                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12490  003AA6  0E02               	movlw	2
 12491  003AA8  0100               	movlb	0	; () banked
 12492  003AAA  19D1               	xorwf	_controlTransferState& (0+255),w,b
 12493  003AAC  A4D8               	btfss	status,2,c
 12494  003AAE  D015               	goto	l1652
 12495                           
 12496                           ; BSR set to: 0
 12497                           ;usb_device.c: 1451: {
 12498                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12499  003AB0  EE20 F001          	lfsr	2,1
 12500  003AB4  51BE               	movf	_pBDTEntryIn& (0+255),w,b
 12501  003AB6  26D9               	addwf	fsr2l,f,c
 12502  003AB8  51BF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12503  003ABA  22DA               	addwfc	fsr2h,f,c
 12504  003ABC  0E00               	movlw	0
 12505  003ABE  6EDF               	movwf	indf2,c
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12509  003AC0  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12510  003AC4  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12511  003AC8  0E48               	movlw	72
 12512  003ACA  6EDF               	movwf	indf2,c
 12513                           
 12514                           ; BSR set to: 0
 12515                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12516  003ACC  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12517  003AD0  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12518  003AD4  0E00               	movlw	0
 12519  003AD6  8EDB               	bsf	plusw2,7,c
 12520                           
 12521                           ;usb_device.c: 1455: }
 12522  003AD8  0012               	return	
 12523  003ADA                     l1652:
 12524                           
 12525                           ; BSR set to: 0
 12526                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12527                           
 12528                           ; BSR set to: 0
 12529  003ADA  05D1               	decf	_controlTransferState& (0+255),w,b
 12530  003ADC  A4D8               	btfss	status,2,c
 12531  003ADE  0012               	return	
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;usb_device.c: 1457: {
 12535                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12536  003AE0  0E00               	movlw	0
 12537  003AE2  0101               	movlb	1	; () banked
 12538  003AE4  6FDD               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12539                           
 12540                           ; BSR set to: 1
 12541                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12542  003AE6  0100               	movlb	0	; () banked
 12543  003AE8  EE20 F001          	lfsr	2,1
 12544  003AEC  51C8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12545  003AEE  26D9               	addwf	fsr2l,f,c
 12546  003AF0  51C9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12547  003AF2  22DA               	addwfc	fsr2h,f,c
 12548  003AF4  0E08               	movlw	8
 12549  003AF6  6EDF               	movwf	indf2,c
 12550                           
 12551                           ; BSR set to: 0
 12552                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12553  003AF8  EE20 F002          	lfsr	2,2
 12554  003AFC  51C8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12555  003AFE  26D9               	addwf	fsr2l,f,c
 12556  003B00  51C9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12557  003B02  22DA               	addwfc	fsr2h,f,c
 12558  003B04  0E30               	movlw	48
 12559  003B06  6EDE               	movwf	postinc2,c
 12560  003B08  0E04               	movlw	4
 12561  003B0A  6EDD               	movwf	postdec2,c
 12562                           
 12563                           ; BSR set to: 0
 12564                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12565  003B0C  C0C8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12566  003B10  C0C9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12567  003B14  0E04               	movlw	4
 12568  003B16  6EDF               	movwf	indf2,c
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12572  003B18  C0C8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12573  003B1C  C0C9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12574  003B20  0E00               	movlw	0
 12575  003B22  8EDB               	bsf	plusw2,7,c
 12576                           
 12577                           ; BSR set to: 0
 12578                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12579  003B24  0E01               	movlw	1
 12580  003B26  0101               	movlb	1	; () banked
 12581  003B28  6FDD               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12582                           
 12583                           ; BSR set to: 1
 12584                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12585  003B2A  0100               	movlb	0	; () banked
 12586  003B2C  EE20 F001          	lfsr	2,1
 12587  003B30  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12588  003B32  26D9               	addwf	fsr2l,f,c
 12589  003B34  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12590  003B36  22DA               	addwfc	fsr2h,f,c
 12591  003B38  0E08               	movlw	8
 12592  003B3A  6EDF               	movwf	indf2,c
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12596  003B3C  EE20 F002          	lfsr	2,2
 12597  003B40  51C6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12598  003B42  26D9               	addwf	fsr2l,f,c
 12599  003B44  51C7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12600  003B46  22DA               	addwfc	fsr2h,f,c
 12601  003B48  0E30               	movlw	48
 12602  003B4A  6EDE               	movwf	postinc2,c
 12603  003B4C  0E04               	movlw	4
 12604  003B4E  6EDD               	movwf	postdec2,c
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12608  003B50  C0C6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12609  003B54  C0C7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12610  003B58  0E80               	movlw	128
 12611  003B5A  6EDF               	movwf	indf2,c
 12612                           
 12613                           ; BSR set to: 0
 12614                           
 12615                           ; BSR set to: 0
 12616                           
 12617                           ; BSR set to: 0
 12618  003B5C  0012               	return	
 12619  003B5E                     __end_of_USBCtrlEPAllowStatusStage:
 12620                           	opt stack 0
 12621                           tosu	equ	0xFFF
 12622                           tosh	equ	0xFFE
 12623                           tosl	equ	0xFFD
 12624                           pclath	equ	0xFFA
 12625                           tblptru	equ	0xFF8
 12626                           tblptrh	equ	0xFF7
 12627                           tblptrl	equ	0xFF6
 12628                           tablat	equ	0xFF5
 12629                           prodh	equ	0xFF4
 12630                           prodl	equ	0xFF3
 12631                           intcon	equ	0xFF2
 12632                           intcon2	equ	0xFF1
 12633                           intcon3	equ	0xFF0
 12634                           indf0	equ	0xFEF
 12635                           postinc0	equ	0xFEE
 12636                           plusw0	equ	0xFEB
 12637                           fsr0h	equ	0xFEA
 12638                           fsr0l	equ	0xFE9
 12639                           wreg	equ	0xFE8
 12640                           indf1	equ	0xFE7
 12641                           postinc1	equ	0xFE6
 12642                           postdec1	equ	0xFE5
 12643                           plusw1	equ	0xFE3
 12644                           fsr1h	equ	0xFE2
 12645                           fsr1l	equ	0xFE1
 12646                           indf2	equ	0xFDF
 12647                           postinc2	equ	0xFDE
 12648                           postdec2	equ	0xFDD
 12649                           plusw2	equ	0xFDB
 12650                           fsr2h	equ	0xFDA
 12651                           fsr2l	equ	0xFD9
 12652                           status	equ	0xFD8
 12653                           
 12654 ;; *************** function _USBCtrlTrfInHandler *****************
 12655 ;; Defined at:
 12656 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12657 ;; Parameters:    Size  Location     Type
 12658 ;;		None
 12659 ;; Auto vars:     Size  Location     Type
 12660 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12661 ;; Return value:  Size  Location     Type
 12662 ;;                  1    wreg      void 
 12663 ;; Registers used:
 12664 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12665 ;; Tracked objects:
 12666 ;;		On entry : 0/0
 12667 ;;		On exit  : 0/0
 12668 ;;		Unchanged: 0/0
 12669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12671 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12673 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12674 ;;Total ram usage:        1 bytes
 12675 ;; Hardware stack levels used:    1
 12676 ;; Hardware stack levels required when called:   12
 12677 ;; This function calls:
 12678 ;;		_USBCtrlTrfTxService
 12679 ;; This function is called by:
 12680 ;;		_USBCtrlEPService
 12681 ;; This function uses a non-reentrant model
 12682 ;;
 12683                           
 12684                           	psect	text52
 12685  003E7A                     __ptext52:
 12686                           	opt stack 0
 12687  003E7A                     _USBCtrlTrfInHandler:
 12688                           	opt stack 13
 12689                           
 12690                           ;usb_device.c: 2611: uint8_t lastDTS;
 12691                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12692                           
 12693                           ;incstack = 0
 12694  003E7A  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12695  003E7E  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12696  003E82  0100               	movlb	0	; () banked
 12697  003E84  0E00               	movlw	0
 12698  003E86  BCDF               	btfsc	indf2,6,c
 12699  003E88  0E01               	movlw	1
 12700  003E8A  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12701                           
 12702                           ; BSR set to: 0
 12703                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12704  003E8C  0E04               	movlw	4
 12705  003E8E  1BBE               	xorwf	_pBDTEntryIn& (0+255),f,b
 12706                           
 12707                           ; BSR set to: 0
 12708                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12709  003E90  0E08               	movlw	8
 12710  003E92  19D3               	xorwf	_USBDeviceState& (0+255),w,b
 12711  003E94  A4D8               	btfss	status,2,c
 12712  003E96  D00D               	goto	l1779
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;usb_device.c: 2622: {
 12716                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12717  003E98  0104               	movlb	4	; () banked
 12718  003E9A  5132               	movf	50,w,b	;volatile
 12719  003E9C  0B7F               	andlw	127
 12720  003E9E  010F               	movlb	15	; () banked
 12721  003EA0  6F38               	movwf	56,b	;volatile
 12722                           
 12723                           ; BSR set to: 15
 12724                           ;usb_device.c: 2624: if(UADDR != 0u)
 12725  003EA2  5138               	movf	56,w,b	;volatile
 12726  003EA4  B4D8               	btfsc	status,2,c
 12727  003EA6  D002               	goto	l1778
 12728                           
 12729                           ; BSR set to: 15
 12730                           ;usb_device.c: 2625: {
 12731                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12732  003EA8  0E10               	movlw	16
 12733  003EAA  D001               	goto	L11
 12734  003EAC                     l1778:
 12735                           
 12736                           ;usb_device.c: 2628: else
 12737                           ;usb_device.c: 2629: {
 12738                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12739                           
 12740                           ; BSR set to: 0
 12741  003EAC  0E04               	movlw	4
 12742  003EAE                     L11:
 12743  003EAE  0100               	movlb	0	; () banked
 12744  003EB0  6FD3               	movwf	_USBDeviceState& (0+255),b
 12745  003EB2                     l1779:
 12746                           
 12747                           ; BSR set to: 0
 12748                           ;usb_device.c: 2631: }
 12749                           ;usb_device.c: 2632: }
 12750                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12751                           
 12752                           ; BSR set to: 0
 12753                           
 12754                           ; BSR set to: 0
 12755  003EB2  05D1               	decf	_controlTransferState& (0+255),w,b
 12756  003EB4  A4D8               	btfss	status,2,c
 12757  003EB6  D03B               	goto	l1780
 12758                           
 12759                           ; BSR set to: 0
 12760                           ;usb_device.c: 2636: {
 12761                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12762  003EB8  EE20 F002          	lfsr	2,2
 12763  003EBC  51BE               	movf	_pBDTEntryIn& (0+255),w,b
 12764  003EBE  26D9               	addwf	fsr2l,f,c
 12765  003EC0  51BF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12766  003EC2  22DA               	addwfc	fsr2h,f,c
 12767  003EC4  0E38               	movlw	56
 12768  003EC6  6EDE               	movwf	postinc2,c
 12769  003EC8  0E04               	movlw	4
 12770  003ECA  6EDD               	movwf	postdec2,c
 12771                           
 12772                           ; BSR set to: 0
 12773                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12774  003ECC  ECD2  F01A         	call	_USBCtrlTrfTxService	;wreg free
 12775                           
 12776                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12777  003ED0  0E02               	movlw	2
 12778  003ED2  0100               	movlb	0	; () banked
 12779  003ED4  19D2               	xorwf	_shortPacketStatus& (0+255),w,b
 12780  003ED6  A4D8               	btfss	status,2,c
 12781  003ED8  D00D               	goto	l1781
 12782                           
 12783                           ; BSR set to: 0
 12784                           ;usb_device.c: 2645: {
 12785                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12786  003EDA  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12787  003EDE  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12788  003EE2  0E04               	movlw	4
 12789  003EE4  6EDF               	movwf	indf2,c
 12790                           
 12791                           ; BSR set to: 0
 12792                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12793  003EE6  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12794  003EEA  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12795  003EEE  0E00               	movlw	0
 12796  003EF0  8EDB               	bsf	plusw2,7,c
 12797                           
 12798                           ;usb_device.c: 2650: }
 12799  003EF2  0012               	return	
 12800  003EF4                     l1781:
 12801                           
 12802                           ; BSR set to: 0
 12803                           ;usb_device.c: 2651: else
 12804                           ;usb_device.c: 2652: {
 12805                           ;usb_device.c: 2653: if(lastDTS == 0)
 12806                           
 12807                           ; BSR set to: 0
 12808  003EF4  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12809  003EF6  A4D8               	btfss	status,2,c
 12810  003EF8  D00D               	goto	l1783
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;usb_device.c: 2654: {
 12814                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12815  003EFA  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12816  003EFE  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12817  003F02  0E48               	movlw	72
 12818  003F04  6EDF               	movwf	indf2,c
 12819                           
 12820                           ; BSR set to: 0
 12821                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12822  003F06  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12823  003F0A  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12824  003F0E  0E00               	movlw	0
 12825  003F10  8EDB               	bsf	plusw2,7,c
 12826                           
 12827                           ;usb_device.c: 2657: }
 12828  003F12  0012               	return	
 12829  003F14                     l1783:
 12830                           
 12831                           ; BSR set to: 0
 12832                           ;usb_device.c: 2658: else
 12833                           ;usb_device.c: 2659: {
 12834                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12835                           
 12836                           ; BSR set to: 0
 12837  003F14  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12838  003F18  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12839  003F1C  0E08               	movlw	8
 12840  003F1E  6EDF               	movwf	indf2,c
 12841                           
 12842                           ; BSR set to: 0
 12843                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12844  003F20  C0BE  FFD9         	movff	_pBDTEntryIn,fsr2l
 12845  003F24  C0BF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12846  003F28  0E00               	movlw	0
 12847  003F2A  8EDB               	bsf	plusw2,7,c
 12848                           
 12849                           ; BSR set to: 0
 12850                           ;usb_device.c: 2662: }
 12851                           ;usb_device.c: 2663: }
 12852                           ;usb_device.c: 2664: }
 12853                           
 12854                           ; BSR set to: 0
 12855  003F2C  0012               	return	
 12856  003F2E                     l1780:
 12857                           
 12858                           ; BSR set to: 0
 12859                           ;usb_device.c: 2665: else
 12860                           ;usb_device.c: 2666: {
 12861                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 12862  003F2E  0101               	movlb	1	; () banked
 12863  003F30  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 12864                           
 12865                           ; BSR set to: 1
 12866                           ;usb_device.c: 2675: }
 12867                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 12868                           
 12869                           ; BSR set to: 1
 12870  003F32  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12871                           
 12872                           ; BSR set to: 1
 12873                           ;usb_device.c: 2677: }
 12874                           ;usb_device.c: 2679: controlTransferState = 0;
 12875                           
 12876                           ; BSR set to: 1
 12877  003F34  0E00               	movlw	0
 12878  003F36  0100               	movlb	0	; () banked
 12879  003F38  6FD1               	movwf	_controlTransferState& (0+255),b
 12880  003F3A  0012               	return	
 12881  003F3C                     __end_of_USBCtrlTrfInHandler:
 12882                           	opt stack 0
 12883                           tosu	equ	0xFFF
 12884                           tosh	equ	0xFFE
 12885                           tosl	equ	0xFFD
 12886                           pclath	equ	0xFFA
 12887                           tblptru	equ	0xFF8
 12888                           tblptrh	equ	0xFF7
 12889                           tblptrl	equ	0xFF6
 12890                           tablat	equ	0xFF5
 12891                           prodh	equ	0xFF4
 12892                           prodl	equ	0xFF3
 12893                           intcon	equ	0xFF2
 12894                           intcon2	equ	0xFF1
 12895                           intcon3	equ	0xFF0
 12896                           indf0	equ	0xFEF
 12897                           postinc0	equ	0xFEE
 12898                           plusw0	equ	0xFEB
 12899                           fsr0h	equ	0xFEA
 12900                           fsr0l	equ	0xFE9
 12901                           wreg	equ	0xFE8
 12902                           indf1	equ	0xFE7
 12903                           postinc1	equ	0xFE6
 12904                           postdec1	equ	0xFE5
 12905                           plusw1	equ	0xFE3
 12906                           fsr1h	equ	0xFE2
 12907                           fsr1l	equ	0xFE1
 12908                           indf2	equ	0xFDF
 12909                           postinc2	equ	0xFDE
 12910                           postdec2	equ	0xFDD
 12911                           plusw2	equ	0xFDB
 12912                           fsr2h	equ	0xFDA
 12913                           fsr2l	equ	0xFD9
 12914                           status	equ	0xFD8
 12915                           
 12916 ;; *************** function _USBCtrlTrfTxService *****************
 12917 ;; Defined at:
 12918 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12919 ;; Parameters:    Size  Location     Type
 12920 ;;		None
 12921 ;; Auto vars:     Size  Location     Type
 12922 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 12923 ;; Return value:  Size  Location     Type
 12924 ;;                  1    wreg      void 
 12925 ;; Registers used:
 12926 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12927 ;; Tracked objects:
 12928 ;;		On entry : 0/0
 12929 ;;		On exit  : 0/0
 12930 ;;		Unchanged: 0/0
 12931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12935 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12936 ;;Total ram usage:        1 bytes
 12937 ;; Hardware stack levels used:    1
 12938 ;; Hardware stack levels required when called:   11
 12939 ;; This function calls:
 12940 ;;		Nothing
 12941 ;; This function is called by:
 12942 ;;		_USBCtrlEPAllowDataStage
 12943 ;;		_USBCtrlTrfInHandler
 12944 ;; This function uses a non-reentrant model
 12945 ;;
 12946                           
 12947                           	psect	text53
 12948  0035A4                     __ptext53:
 12949                           	opt stack 0
 12950  0035A4                     _USBCtrlTrfTxService:
 12951                           	opt stack 11
 12952                           
 12953                           ;usb_device.c: 1791: uint8_t byteToSend;
 12954                           ;usb_device.c: 1795: byteToSend = 8;
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;incstack = 0
 12958  0035A4  0E08               	movlw	8
 12959  0035A6  0100               	movlb	0	; () banked
 12960  0035A8  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 12961                           
 12962                           ; BSR set to: 0
 12963                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 12964  0035AA  51BD               	movf	(_inPipes+5)& (0+255),w,b
 12965  0035AC  E110               	bnz	l7707
 12966  0035AE  0E08               	movlw	8
 12967  0035B0  5DBC               	subwf	(_inPipes+4)& (0+255),w,b
 12968  0035B2  B0D8               	btfsc	status,0,c
 12969  0035B4  D00C               	goto	l1685
 12970                           
 12971                           ; BSR set to: 0
 12972                           ;usb_device.c: 1797: {
 12973                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 12974  0035B6  C0BC  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 12978  0035BA  51D2               	movf	_shortPacketStatus& (0+255),w,b
 12979  0035BC  A4D8               	btfss	status,2,c
 12980  0035BE  D002               	goto	l1683
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;usb_device.c: 1806: {
 12984                           ;usb_device.c: 1807: shortPacketStatus = 1;
 12985  0035C0  0E01               	movlw	1
 12986  0035C2  D004               	goto	L12
 12987  0035C4                     l1683:
 12988                           
 12989                           ; BSR set to: 0
 12990                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 12991                           
 12992                           ; BSR set to: 0
 12993  0035C4  05D2               	decf	_shortPacketStatus& (0+255),w,b
 12994  0035C6  A4D8               	btfss	status,2,c
 12995  0035C8  D002               	goto	l1685
 12996                           
 12997                           ; BSR set to: 0
 12998                           ;usb_device.c: 1810: {
 12999                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13000  0035CA  0E02               	movlw	2
 13001  0035CC                     L12:
 13002  0035CC  6FD2               	movwf	_shortPacketStatus& (0+255),b
 13003  0035CE                     l1685:
 13004  0035CE                     l7707:
 13005                           
 13006                           ; BSR set to: 0
 13007                           ;usb_device.c: 1812: }
 13008                           ;usb_device.c: 1813: }
 13009                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13010  0035CE  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13011  0035D0  5FBC               	subwf	(_inPipes+4)& (0+255),f,b
 13012  0035D2  0E00               	movlw	0
 13013  0035D4  5BBD               	subwfb	(_inPipes+5)& (0+255),f,b
 13014                           
 13015                           ; BSR set to: 0
 13016                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13017  0035D6  EE20 F001          	lfsr	2,1
 13018  0035DA  51BE               	movf	_pBDTEntryIn& (0+255),w,b
 13019  0035DC  26D9               	addwf	fsr2l,f,c
 13020  0035DE  51BF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13021  0035E0  22DA               	addwfc	fsr2h,f,c
 13022  0035E2  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13023                           
 13024                           ; BSR set to: 0
 13025                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13026  0035E6  0E38               	movlw	56
 13027  0035E8  0102               	movlb	2	; () banked
 13028  0035EA  6FD4               	movwf	_pDst& (0+255),b
 13029  0035EC  0E04               	movlw	4
 13030  0035EE  6FD5               	movwf	(_pDst+1)& (0+255),b
 13031                           
 13032                           ; BSR set to: 2
 13033                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13034  0035F0  0100               	movlb	0	; () banked
 13035  0035F2  A1BB               	btfss	(_inPipes+3)& (0+255),0,b
 13036  0035F4  D01E               	goto	l1687
 13037  0035F6  D03E               	goto	l1691
 13038  0035F8                     
 13039                           ; BSR set to: 0
 13040                           ;usb_device.c: 1830: {
 13041                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13042                           
 13043                           ; BSR set to: 0
 13044  0035F8  C0B8  FFF6         	movff	_inPipes,tblptrl
 13045  0035FC  C0B9  FFF7         	movff	_inPipes+1,tblptrh
 13046  003600  6AF8               	clrf	tblptru,c
 13047  003602  C2D4  FFD9         	movff	_pDst,fsr2l
 13048  003606  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13049  00360A  0E0E               	movlw	(high __ramtop+-1)
 13050  00360C  64F7               	cpfsgt	tblptrh,c
 13051  00360E  D003               	bra	u5237
 13052  003610  0008               	tblrd		*
 13053  003612  50F5               	movf	tablat,w,c
 13054  003614  D005               	bra	u5230
 13055  003616                     u5237:
 13056  003616  CFF6 FFE9          	movff	tblptrl,fsr0l
 13057  00361A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13058  00361E  50EF               	movf	indf0,w,c
 13059  003620                     u5230:
 13060  003620  6EDF               	movwf	indf2,c
 13061  003622  0100               	movlb	0	; () banked
 13062  003624  4BB8               	infsnz	_inPipes& (0+255),f,b
 13063  003626  2BB9               	incf	(_inPipes+1)& (0+255),f,b
 13064                           
 13065                           ; BSR set to: 0
 13066  003628  0102               	movlb	2	; () banked
 13067  00362A  4BD4               	infsnz	_pDst& (0+255),f,b
 13068  00362C  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13069                           
 13070                           ; BSR set to: 2
 13071                           ;usb_device.c: 1832: byteToSend--;
 13072  00362E  0100               	movlb	0	; () banked
 13073  003630  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13074  003632                     l1687:
 13075                           
 13076                           ; BSR set to: 0
 13077                           
 13078                           ; BSR set to: 0
 13079  003632  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13080  003634  B4D8               	btfsc	status,2,c
 13081  003636  0012               	return	
 13082  003638  D7DF               	goto	l1688
 13083  00363A                     
 13084                           ; BSR set to: 0
 13085                           ;usb_device.c: 1838: {
 13086                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13087                           
 13088                           ; BSR set to: 0
 13089  00363A  C0B8  FFF6         	movff	_inPipes,tblptrl
 13090  00363E  C0B9  FFF7         	movff	_inPipes+1,tblptrh
 13091  003642  6AF8               	clrf	tblptru,c
 13092  003644  C2D4  FFD9         	movff	_pDst,fsr2l
 13093  003648  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13094  00364C  0E0E               	movlw	(high __ramtop+-1)
 13095  00364E  64F7               	cpfsgt	tblptrh,c
 13096  003650  D003               	bra	u5257
 13097  003652  0008               	tblrd		*
 13098  003654  50F5               	movf	tablat,w,c
 13099  003656  D005               	bra	u5250
 13100  003658                     u5257:
 13101  003658  CFF6 FFE9          	movff	tblptrl,fsr0l
 13102  00365C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13103  003660  50EF               	movf	indf0,w,c
 13104  003662                     u5250:
 13105  003662  6EDF               	movwf	indf2,c
 13106  003664  0100               	movlb	0	; () banked
 13107  003666  4BB8               	infsnz	_inPipes& (0+255),f,b
 13108  003668  2BB9               	incf	(_inPipes+1)& (0+255),f,b
 13109                           
 13110                           ; BSR set to: 0
 13111  00366A  0102               	movlb	2	; () banked
 13112  00366C  4BD4               	infsnz	_pDst& (0+255),f,b
 13113  00366E  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13114                           
 13115                           ; BSR set to: 2
 13116                           ;usb_device.c: 1840: byteToSend--;
 13117  003670  0100               	movlb	0	; () banked
 13118  003672  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13119  003674                     l1691:
 13120                           
 13121                           ; BSR set to: 0
 13122                           
 13123                           ; BSR set to: 0
 13124  003674  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13125  003676  B4D8               	btfsc	status,2,c
 13126  003678  0012               	return	
 13127  00367A  D7DF               	goto	l1692
 13128  00367C                     __end_of_USBCtrlTrfTxService:
 13129                           	opt stack 0
 13130                           tosu	equ	0xFFF
 13131                           tosh	equ	0xFFE
 13132                           tosl	equ	0xFFD
 13133                           pclath	equ	0xFFA
 13134                           tblptru	equ	0xFF8
 13135                           tblptrh	equ	0xFF7
 13136                           tblptrl	equ	0xFF6
 13137                           tablat	equ	0xFF5
 13138                           prodh	equ	0xFF4
 13139                           prodl	equ	0xFF3
 13140                           intcon	equ	0xFF2
 13141                           intcon2	equ	0xFF1
 13142                           intcon3	equ	0xFF0
 13143                           indf0	equ	0xFEF
 13144                           postinc0	equ	0xFEE
 13145                           plusw0	equ	0xFEB
 13146                           fsr0h	equ	0xFEA
 13147                           fsr0l	equ	0xFE9
 13148                           wreg	equ	0xFE8
 13149                           indf1	equ	0xFE7
 13150                           postinc1	equ	0xFE6
 13151                           postdec1	equ	0xFE5
 13152                           plusw1	equ	0xFE3
 13153                           fsr1h	equ	0xFE2
 13154                           fsr1l	equ	0xFE1
 13155                           indf2	equ	0xFDF
 13156                           postinc2	equ	0xFDE
 13157                           postdec2	equ	0xFDD
 13158                           plusw2	equ	0xFDB
 13159                           fsr2h	equ	0xFDA
 13160                           fsr2l	equ	0xFD9
 13161                           status	equ	0xFD8
 13162                           
 13163 ;; *************** function _CDCTxService *****************
 13164 ;; Defined at:
 13165 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13166 ;; Parameters:    Size  Location     Type
 13167 ;;		None
 13168 ;; Auto vars:     Size  Location     Type
 13169 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13170 ;;  i               1   36[BANK0 ] unsigned char 
 13171 ;; Return value:  Size  Location     Type
 13172 ;;                  1    wreg      void 
 13173 ;; Registers used:
 13174 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13175 ;; Tracked objects:
 13176 ;;		On entry : 0/0
 13177 ;;		On exit  : 0/0
 13178 ;;		Unchanged: 0/0
 13179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13181 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13183 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13184 ;;Total ram usage:        2 bytes
 13185 ;; Hardware stack levels used:    1
 13186 ;; Hardware stack levels required when called:   12
 13187 ;; This function calls:
 13188 ;;		_USBTransferOnePacket
 13189 ;; This function is called by:
 13190 ;;		_UsbDevice_MainTask
 13191 ;; This function uses a non-reentrant model
 13192 ;;
 13193                           
 13194                           	psect	text54
 13195  0026AA                     __ptext54:
 13196                           	opt stack 0
 13197  0026AA                     _CDCTxService:
 13198                           	opt stack 15
 13199                           
 13200                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13201                           ;usb_device_cdc.c: 842: uint8_t i;
 13202                           ;usb_device_cdc.c: 844: ;
 13203                           ;usb_device_cdc.c: 846: {};
 13204                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13205                           
 13206                           ; BSR set to: 0
 13207                           ;incstack = 0
 13208  0026AA  0101               	movlb	1	; () banked
 13209  0026AC  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13210  0026AE  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13211  0026B0  B4D8               	btfsc	status,2,c
 13212  0026B2  D006               	goto	l1937
 13213                           
 13214                           ; BSR set to: 1
 13215  0026B4  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13216  0026B8  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13217  0026BC  BEDF               	btfsc	indf2,7,c
 13218  0026BE  0012               	return	
 13219  0026C0                     l1937:
 13220                           
 13221                           ; BSR set to: 1
 13222                           ;usb_device_cdc.c: 852: }
 13223                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13224                           
 13225                           ; BSR set to: 1
 13226  0026C0  0E03               	movlw	3
 13227  0026C2  0100               	movlb	0	; () banked
 13228  0026C4  19CD               	xorwf	_cdc_trf_state& (0+255),w,b
 13229  0026C6  A4D8               	btfss	status,2,c
 13230  0026C8  D002               	goto	l1939
 13231                           
 13232                           ; BSR set to: 0
 13233                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13234  0026CA  0E00               	movlw	0
 13235  0026CC  6FCD               	movwf	_cdc_trf_state& (0+255),b
 13236  0026CE                     l1939:
 13237                           
 13238                           ; BSR set to: 0
 13239                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13240  0026CE  51CD               	movf	_cdc_trf_state& (0+255),w,b
 13241  0026D0  B4D8               	btfsc	status,2,c
 13242  0026D2  0012               	return	
 13243                           
 13244                           ; BSR set to: 0
 13245                           ;usb_device_cdc.c: 869: }
 13246                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13247                           
 13248                           ; BSR set to: 0
 13249                           
 13250                           ; BSR set to: 0
 13251                           ;usb_device_cdc.c: 866: {
 13252                           ;usb_device_cdc.c: 867: ;
 13253                           ;usb_device_cdc.c: 868: return;
 13254  0026D4  0E02               	movlw	2
 13255  0026D6  19CD               	xorwf	_cdc_trf_state& (0+255),w,b
 13256  0026D8  A4D8               	btfss	status,2,c
 13257  0026DA  D013               	goto	l1941
 13258                           
 13259                           ; BSR set to: 0
 13260                           ;usb_device_cdc.c: 875: {
 13261                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13262  0026DC  0E01               	movlw	1
 13263  0026DE  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13264  0026E0  0E00               	movlw	0
 13265  0026E2  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13266  0026E4  0E00               	movlw	0
 13267  0026E6  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13268  0026E8  0E00               	movlw	0
 13269  0026EA  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13270  0026EC  0E02               	movlw	2
 13271  0026EE  EC9E  F01F         	call	_USBTransferOnePacket
 13272  0026F2  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13273  0026F6  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13274                           
 13275                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13276  0026FA  0E03               	movlw	3
 13277  0026FC  0100               	movlb	0	; () banked
 13278  0026FE  6FCD               	movwf	_cdc_trf_state& (0+255),b
 13279                           
 13280                           ;usb_device_cdc.c: 879: }
 13281  002700  0012               	return	
 13282  002702                     l1941:
 13283                           
 13284                           ; BSR set to: 0
 13285                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13286                           
 13287                           ; BSR set to: 0
 13288  002702  05CD               	decf	_cdc_trf_state& (0+255),w,b
 13289  002704  A4D8               	btfss	status,2,c
 13290  002706  0012               	return	
 13291                           
 13292                           ; BSR set to: 0
 13293                           ;usb_device_cdc.c: 881: {
 13294                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13295  002708  0E40               	movlw	64
 13296  00270A  65CC               	cpfsgt	_cdc_tx_len& (0+255),b
 13297  00270C  D003               	goto	l1944
 13298                           
 13299                           ; BSR set to: 0
 13300                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13301  00270E  0E40               	movlw	64
 13302  002710  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13303  002712  D002               	goto	l1945
 13304  002714                     l1944:
 13305                           
 13306                           ; BSR set to: 0
 13307                           ;usb_device_cdc.c: 887: else
 13308                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13309  002714  C0CC  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13310  002718                     l1945:
 13311                           
 13312                           ; BSR set to: 0
 13313                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13314                           
 13315                           ; BSR set to: 0
 13316  002718  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13317  00271A  0800               	sublw	0
 13318  00271C  25CC               	addwf	_cdc_tx_len& (0+255),w,b
 13319  00271E  6FCC               	movwf	_cdc_tx_len& (0+255),b
 13320                           
 13321                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13322  002720  0E84               	movlw	low _cdc_data_tx
 13323  002722  0102               	movlb	2	; () banked
 13324  002724  6FC8               	movwf	_pCDCDst& (0+255),b
 13325  002726  0E07               	movlw	high _cdc_data_tx
 13326  002728  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13327                           
 13328                           ; BSR set to: 2
 13329                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13330  00272A  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13331                           
 13332                           ; BSR set to: 2
 13333                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13334  00272E  0101               	movlb	1	; () banked
 13335  002730  51DB               	movf	_cdc_mem_type& (0+255),w,b
 13336  002732  B4D8               	btfsc	status,2,c
 13337  002734  D01D               	goto	l1947
 13338  002736  D03D               	goto	l1951
 13339  002738                     
 13340                           ;usb_device_cdc.c: 901: {
 13341                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13342                           
 13343                           ; BSR set to: 1
 13344  002738  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13345  00273C  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13346  002740  6AF8               	clrf	tblptru,c
 13347  002742  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13348  002746  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13349  00274A  0E0E               	movlw	(high __ramtop+-1)
 13350  00274C  64F7               	cpfsgt	tblptrh,c
 13351  00274E  D003               	bra	u13137
 13352  002750  0008               	tblrd		*
 13353  002752  50F5               	movf	tablat,w,c
 13354  002754  D005               	bra	u13130
 13355  002756                     u13137:
 13356  002756  CFF6 FFE9          	movff	tblptrl,fsr0l
 13357  00275A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13358  00275E  50EF               	movf	indf0,w,c
 13359  002760                     u13130:
 13360  002760  6EDF               	movwf	indf2,c
 13361                           
 13362                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13363  002762  0102               	movlb	2	; () banked
 13364  002764  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13365  002766  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13366                           
 13367                           ; BSR set to: 2
 13368                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13369  002768  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13370  00276A  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13371                           
 13372                           ; BSR set to: 2
 13373                           ;usb_device_cdc.c: 905: i--;
 13374  00276C  0100               	movlb	0	; () banked
 13375  00276E  0784               	decf	CDCTxService@i& (0+255),f,b
 13376  002770                     l1947:
 13377                           
 13378                           ; BSR set to: 0
 13379  002770  0100               	movlb	0	; () banked
 13380  002772  5184               	movf	CDCTxService@i& (0+255),w,b
 13381  002774  B4D8               	btfsc	status,2,c
 13382  002776  D021               	goto	u13160
 13383  002778  D7DF               	goto	l1948
 13384  00277A                     
 13385                           ; BSR set to: 0
 13386                           ;usb_device_cdc.c: 911: {
 13387                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13388                           
 13389                           ; BSR set to: 0
 13390  00277A  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13391  00277E  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13392  002782  6AF8               	clrf	tblptru,c
 13393  002784  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13394  002788  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13395  00278C  0E0E               	movlw	(high __ramtop+-1)
 13396  00278E  64F7               	cpfsgt	tblptrh,c
 13397  002790  D003               	bra	u13157
 13398  002792  0008               	tblrd		*
 13399  002794  50F5               	movf	tablat,w,c
 13400  002796  D005               	bra	u13150
 13401  002798                     u13157:
 13402  002798  CFF6 FFE9          	movff	tblptrl,fsr0l
 13403  00279C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13404  0027A0  50EF               	movf	indf0,w,c
 13405  0027A2                     u13150:
 13406  0027A2  6EDF               	movwf	indf2,c
 13407                           
 13408                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13409  0027A4  0102               	movlb	2	; () banked
 13410  0027A6  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13411  0027A8  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13412                           
 13413                           ; BSR set to: 2
 13414                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13415  0027AA  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13416  0027AC  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13417                           
 13418                           ; BSR set to: 2
 13419                           ;usb_device_cdc.c: 915: i--;
 13420  0027AE  0100               	movlb	0	; () banked
 13421  0027B0  0784               	decf	CDCTxService@i& (0+255),f,b
 13422  0027B2                     l1951:
 13423                           
 13424                           ; BSR set to: 0
 13425  0027B2  0100               	movlb	0	; () banked
 13426  0027B4  5184               	movf	CDCTxService@i& (0+255),w,b
 13427  0027B6  A4D8               	btfss	status,2,c
 13428  0027B8  D7E0               	goto	l1952
 13429  0027BA                     u13160:
 13430                           
 13431                           ; BSR set to: 0
 13432                           ;usb_device_cdc.c: 916: }
 13433                           ;usb_device_cdc.c: 917: }
 13434                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13435                           
 13436                           ; BSR set to: 0
 13437                           
 13438                           ; BSR set to: 0
 13439  0027BA  51CC               	movf	_cdc_tx_len& (0+255),w,b
 13440  0027BC  A4D8               	btfss	status,2,c
 13441  0027BE  D008               	goto	l1956
 13442                           
 13443                           ; BSR set to: 0
 13444                           ;usb_device_cdc.c: 924: {
 13445                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13446  0027C0  0E40               	movlw	64
 13447  0027C2  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13448  0027C4  A4D8               	btfss	status,2,c
 13449  0027C6  D002               	goto	l1955
 13450                           
 13451                           ; BSR set to: 0
 13452                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13453  0027C8  0E02               	movlw	2
 13454  0027CA  D001               	goto	L13
 13455  0027CC                     l1955:
 13456                           
 13457                           ; BSR set to: 0
 13458                           ;usb_device_cdc.c: 927: else
 13459                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13460                           
 13461                           ; BSR set to: 0
 13462  0027CC  0E03               	movlw	3
 13463  0027CE                     L13:
 13464  0027CE  6FCD               	movwf	_cdc_trf_state& (0+255),b
 13465  0027D0                     l1956:
 13466                           
 13467                           ; BSR set to: 0
 13468                           ;usb_device_cdc.c: 929: }
 13469                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13470                           
 13471                           ; BSR set to: 0
 13472                           
 13473                           ; BSR set to: 0
 13474  0027D0  0E01               	movlw	1
 13475  0027D2  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13476  0027D4  0E84               	movlw	low _cdc_data_tx
 13477  0027D6  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13478  0027D8  0E07               	movlw	high _cdc_data_tx
 13479  0027DA  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13480  0027DC  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13481  0027E0  0E02               	movlw	2
 13482  0027E2  EC9E  F01F         	call	_USBTransferOnePacket
 13483  0027E6  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13484  0027EA  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13485  0027EE  0012               	return	
 13486  0027F0                     __end_of_CDCTxService:
 13487                           	opt stack 0
 13488                           tosu	equ	0xFFF
 13489                           tosh	equ	0xFFE
 13490                           tosl	equ	0xFFD
 13491                           pclath	equ	0xFFA
 13492                           tblptru	equ	0xFF8
 13493                           tblptrh	equ	0xFF7
 13494                           tblptrl	equ	0xFF6
 13495                           tablat	equ	0xFF5
 13496                           prodh	equ	0xFF4
 13497                           prodl	equ	0xFF3
 13498                           intcon	equ	0xFF2
 13499                           intcon2	equ	0xFF1
 13500                           intcon3	equ	0xFF0
 13501                           indf0	equ	0xFEF
 13502                           postinc0	equ	0xFEE
 13503                           plusw0	equ	0xFEB
 13504                           fsr0h	equ	0xFEA
 13505                           fsr0l	equ	0xFE9
 13506                           wreg	equ	0xFE8
 13507                           indf1	equ	0xFE7
 13508                           postinc1	equ	0xFE6
 13509                           postdec1	equ	0xFE5
 13510                           plusw1	equ	0xFE3
 13511                           fsr1h	equ	0xFE2
 13512                           fsr1l	equ	0xFE1
 13513                           indf2	equ	0xFDF
 13514                           postinc2	equ	0xFDE
 13515                           postdec2	equ	0xFDD
 13516                           plusw2	equ	0xFDB
 13517                           fsr2h	equ	0xFDA
 13518                           fsr2l	equ	0xFD9
 13519                           status	equ	0xFD8
 13520                           
 13521 ;; *************** function _Term_MainSm *****************
 13522 ;; Defined at:
 13523 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13524 ;; Parameters:    Size  Location     Type
 13525 ;;		None
 13526 ;; Auto vars:     Size  Location     Type
 13527 ;;  FwkBuildStr     4   79[BANK0 ] unsigned char [4]
 13528 ;;  FwkMinorStr     4   75[BANK0 ] unsigned char [4]
 13529 ;;  FwkMajorStr     4   71[BANK0 ] unsigned char [4]
 13530 ;;  FwkBuildYear    4    0        unsigned char [4]
 13531 ;;  FwkBuildMont    4    0        unsigned char [4]
 13532 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13533 ;; Return value:  Size  Location     Type
 13534 ;;                  1    wreg      void 
 13535 ;; Registers used:
 13536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13537 ;; Tracked objects:
 13538 ;;		On entry : 0/0
 13539 ;;		On exit  : 0/0
 13540 ;;		Unchanged: 0/0
 13541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13543 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13545 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13546 ;;Total ram usage:       12 bytes
 13547 ;; Hardware stack levels used:    1
 13548 ;; Hardware stack levels required when called:   16
 13549 ;; This function calls:
 13550 ;;		_OsTmr_GetTimerStatus
 13551 ;;		_OsTmr_StartTimer
 13552 ;;		_Terminal
 13553 ;;		_memset
 13554 ;;		_putUSBUSART
 13555 ;;		_sprintf
 13556 ;;		_strcat
 13557 ;;		_strcpy
 13558 ;;		_strlen
 13559 ;;		_utoa
 13560 ;; This function is called by:
 13561 ;;		_Term_MainTask
 13562 ;; This function uses a non-reentrant model
 13563 ;;
 13564                           
 13565                           	psect	text55
 13566  0010B6                     __ptext55:
 13567                           	opt stack 0
 13568  0010B6                     _Term_MainSm:
 13569                           	opt stack 11
 13570                           
 13571                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13572                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13573                           ;term.c: 711: static UINT8 Data[50];
 13574                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13575                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13576                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13577                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13578                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13579                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13580                           ;term.c: 719: switch (TermMainSmState)
 13581                           
 13582                           ;incstack = 0
 13583  0010B6  D133               	goto	l2415
 13584  0010B8                     
 13585                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13586  0010B8  0ECE               	movlw	low Term_MainSm@TermDelay
 13587  0010BA  0100               	movlb	0	; () banked
 13588  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13589  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13590  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13591  0010C2  0ED0               	movlw	208
 13592  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13593  0010C6  0E07               	movlw	7
 13594  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13595  0010CA  0E00               	movlw	0
 13596  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13597  0010CE  0E00               	movlw	0
 13598  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13599  0010D2  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 13600                           
 13601                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13602  0010D6  0E01               	movlw	1
 13603  0010D8  0102               	movlb	2	; () banked
 13604  0010DA  6FEB               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13605                           
 13606                           ;term.c: 726: break;
 13607  0010DC  0012               	return	
 13608  0010DE                     
 13609                           ; BSR set to: 2
 13610                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13611                           
 13612                           ; BSR set to: 2
 13613  0010DE  0ECE               	movlw	low Term_MainSm@TermDelay
 13614  0010E0  0100               	movlb	0	; () banked
 13615  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13616  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13617  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13618  0010E8  EC67  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 13619  0010EC  06E8               	decf	wreg,f,c
 13620  0010EE  A4D8               	btfss	status,2,c
 13621  0010F0  0012               	return	
 13622                           
 13623                           ;term.c: 731: {
 13624                           ;term.c: 733: TermMainSmState = Term_InitState;
 13625  0010F2  0E02               	movlw	2
 13626  0010F4  0102               	movlb	2	; () banked
 13627  0010F6  6FEB               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13628                           
 13629                           ; BSR set to: 2
 13630                           ;term.c: 734: }
 13631                           ;term.c: 735: break;
 13632  0010F8  0012               	return	
 13633  0010FA                     
 13634                           ; BSR set to: 2
 13635                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13636                           
 13637                           ; BSR set to: 2
 13638  0010FA  0E1F               	movlw	31
 13639  0010FC  0100               	movlb	0	; () banked
 13640  0010FE  65D3               	cpfsgt	_USBDeviceState& (0+255),b
 13641  001100  0012               	return	
 13642                           
 13643                           ; BSR set to: 0
 13644  001102  B265               	btfsc	3941,1,c	;volatile
 13645  001104  0012               	return	
 13646                           
 13647                           ; BSR set to: 0
 13648                           ;term.c: 743: else
 13649                           ;term.c: 744: {
 13650                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13651                           
 13652                           ; BSR set to: 0
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;term.c: 740: {
 13656                           ;term.c: 742: }
 13657  001106  0E03               	movlw	3
 13658  001108  0102               	movlb	2	; () banked
 13659  00110A  6FEB               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13660                           
 13661                           ; BSR set to: 2
 13662                           ;term.c: 747: }
 13663                           ;term.c: 748: break;
 13664  00110C  0012               	return	
 13665  00110E                     
 13666                           ; BSR set to: 2
 13667                           ;term.c: 752: if((cdc_trf_state == 0))
 13668                           
 13669                           ; BSR set to: 2
 13670  00110E  0100               	movlb	0	; () banked
 13671  001110  51CD               	movf	_cdc_trf_state& (0+255),w,b
 13672  001112  A4D8               	btfss	status,2,c
 13673  001114  0012               	return	
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;term.c: 753: {
 13677                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13678  001116  0E2D               	movlw	low _Welcome
 13679  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13680  00111A  0EFD               	movlw	high _Welcome
 13681  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13682  00111E  0E88               	movlw	136
 13683  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13684  001122  EC46  F02F         	call	_putUSBUSART	;wreg free
 13685                           
 13686                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13687  001126  0E04               	movlw	4
 13688  001128  0102               	movlb	2	; () banked
 13689  00112A  6FEB               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13690                           
 13691                           ; BSR set to: 2
 13692                           ;term.c: 758: }
 13693                           ;term.c: 759: break;
 13694  00112C  0012               	return	
 13695  00112E                     
 13696                           ; BSR set to: 2
 13697                           ;term.c: 763: if((cdc_trf_state == 0))
 13698                           
 13699                           ; BSR set to: 2
 13700  00112E  0100               	movlb	0	; () banked
 13701  001130  51CD               	movf	_cdc_trf_state& (0+255),w,b
 13702  001132  A4D8               	btfss	status,2,c
 13703  001134  0012               	return	
 13704                           
 13705                           ; BSR set to: 0
 13706                           ;term.c: 764: {
 13707                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13708  001136  0E3D               	movlw	low _MsgFormat
 13709  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13710  00113A  0EFC               	movlw	high _MsgFormat
 13711  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13712  00113E  0EEF               	movlw	239
 13713  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13714  001142  EC46  F02F         	call	_putUSBUSART	;wreg free
 13715                           
 13716                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13717  001146  0E05               	movlw	5
 13718  001148  0102               	movlb	2	; () banked
 13719  00114A  6FEB               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13720                           
 13721                           ; BSR set to: 2
 13722                           ;term.c: 769: }
 13723                           ;term.c: 770: break;
 13724  00114C  0012               	return	
 13725  00114E                     
 13726                           ; BSR set to: 2
 13727                           ;term.c: 774: if((cdc_trf_state == 0))
 13728                           
 13729                           ; BSR set to: 2
 13730  00114E  0100               	movlb	0	; () banked
 13731  001150  51CD               	movf	_cdc_trf_state& (0+255),w,b
 13732  001152  A4D8               	btfss	status,2,c
 13733  001154  0012               	return	
 13734                           
 13735                           ; BSR set to: 0
 13736                           ;term.c: 775: {
 13737                           ;term.c: 777: memset(Data,0,50);
 13738  001156  0E54               	movlw	low Term_MainSm@Data
 13739  001158  6F7D               	movwf	memset@p1& (0+255),b
 13740  00115A  0E04               	movlw	high Term_MainSm@Data
 13741  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13742  00115E  0E00               	movlw	0
 13743  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13744  001162  0E00               	movlw	0
 13745  001164  6F7F               	movwf	memset@c& (0+255),b
 13746  001166  0E00               	movlw	0
 13747  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13748  00116A  0E32               	movlw	50
 13749  00116C  6F81               	movwf	memset@n& (0+255),b
 13750  00116E  ECEE  F02D         	call	_memset	;wreg free
 13751                           
 13752                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13753  001172  0EA7               	movlw	low Term_MainSm@FwkMajorStr
 13754  001174  0100               	movlb	0	; () banked
 13755  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13756  001178  0E00               	movlw	high Term_MainSm@FwkMajorStr
 13757  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13758  00117C  0E00               	movlw	0
 13759  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13760  001180  0E01               	movlw	1
 13761  001182  6F8C               	movwf	utoa@val& (0+255),b
 13762  001184  0E00               	movlw	0
 13763  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13764  001188  0E0A               	movlw	10
 13765  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13766  00118C  EC04  F021         	call	_utoa	;wreg free
 13767                           
 13768                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13769  001190  0EAB               	movlw	low Term_MainSm@FwkMinorStr
 13770  001192  0100               	movlb	0	; () banked
 13771  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13772  001196  0E00               	movlw	high Term_MainSm@FwkMinorStr
 13773  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13774  00119A  0E00               	movlw	0
 13775  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13776  00119E  0E02               	movlw	2
 13777  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13778  0011A2  0E00               	movlw	0
 13779  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13780  0011A6  0E0A               	movlw	10
 13781  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13782  0011AA  EC04  F021         	call	_utoa	;wreg free
 13783                           
 13784                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13785  0011AE  0EAF               	movlw	low Term_MainSm@FwkBuildStr
 13786  0011B0  0100               	movlb	0	; () banked
 13787  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13788  0011B4  0E00               	movlw	high Term_MainSm@FwkBuildStr
 13789  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13790  0011B8  0E00               	movlw	0
 13791  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13792  0011BC  0E00               	movlw	0
 13793  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13794  0011C0  0E00               	movlw	0
 13795  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13796  0011C4  0E0A               	movlw	10
 13797  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13798  0011C8  EC04  F021         	call	_utoa	;wreg free
 13799                           
 13800                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13801  0011CC  0E54               	movlw	low Term_MainSm@Data
 13802  0011CE  0100               	movlb	0	; () banked
 13803  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13804  0011D2  0E04               	movlw	high Term_MainSm@Data
 13805  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13806  0011D6  0EDD               	movlw	low STR_23
 13807  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13808  0011DA  0EFE               	movlw	high STR_23
 13809  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13810  0011DE  ECBD  F02D         	call	_strcpy	;wreg free
 13811                           
 13812                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13813  0011E2  0E54               	movlw	low Term_MainSm@Data
 13814  0011E4  0100               	movlb	0	; () banked
 13815  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13816  0011E8  0E04               	movlw	high Term_MainSm@Data
 13817  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13818  0011EC  0EA7               	movlw	low Term_MainSm@FwkMajorStr
 13819  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13820  0011F0  0E00               	movlw	high Term_MainSm@FwkMajorStr
 13821  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13822  0011F4  EC89  F028         	call	_strcat	;wreg free
 13823                           
 13824                           ;term.c: 784: strcat(Data,".");
 13825  0011F8  0E54               	movlw	low Term_MainSm@Data
 13826  0011FA  0100               	movlb	0	; () banked
 13827  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13828  0011FE  0E04               	movlw	high Term_MainSm@Data
 13829  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13830  001202  0EF4               	movlw	low STR_24
 13831  001204  6F7F               	movwf	strcat@from& (0+255),b
 13832  001206  0EFF               	movlw	high STR_24
 13833  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13834  00120A  EC89  F028         	call	_strcat	;wreg free
 13835                           
 13836                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13837  00120E  0E54               	movlw	low Term_MainSm@Data
 13838  001210  0100               	movlb	0	; () banked
 13839  001212  6F7D               	movwf	strcat@to& (0+255),b
 13840  001214  0E04               	movlw	high Term_MainSm@Data
 13841  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13842  001218  0EAB               	movlw	low Term_MainSm@FwkMinorStr
 13843  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13844  00121C  0E00               	movlw	high Term_MainSm@FwkMinorStr
 13845  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13846  001220  EC89  F028         	call	_strcat	;wreg free
 13847                           
 13848                           ;term.c: 786: strcat(Data,".");
 13849  001224  0E54               	movlw	low Term_MainSm@Data
 13850  001226  0100               	movlb	0	; () banked
 13851  001228  6F7D               	movwf	strcat@to& (0+255),b
 13852  00122A  0E04               	movlw	high Term_MainSm@Data
 13853  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13854  00122E  0EF4               	movlw	low STR_24
 13855  001230  6F7F               	movwf	strcat@from& (0+255),b
 13856  001232  0EFF               	movlw	high STR_24
 13857  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 13858  001236  EC89  F028         	call	_strcat	;wreg free
 13859                           
 13860                           ;term.c: 787: strcat(Data,FwkBuildStr);
 13861  00123A  0E54               	movlw	low Term_MainSm@Data
 13862  00123C  0100               	movlb	0	; () banked
 13863  00123E  6F7D               	movwf	strcat@to& (0+255),b
 13864  001240  0E04               	movlw	high Term_MainSm@Data
 13865  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13866  001244  0EAF               	movlw	low Term_MainSm@FwkBuildStr
 13867  001246  6F7F               	movwf	strcat@from& (0+255),b
 13868  001248  0E00               	movlw	high Term_MainSm@FwkBuildStr
 13869  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 13870  00124C  EC89  F028         	call	_strcat	;wreg free
 13871                           
 13872                           ;term.c: 788: strcat(Data,"\r\n");
 13873  001250  0E54               	movlw	low Term_MainSm@Data
 13874  001252  0100               	movlb	0	; () banked
 13875  001254  6F7D               	movwf	strcat@to& (0+255),b
 13876  001256  0E04               	movlw	high Term_MainSm@Data
 13877  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13878  00125A  0E91               	movlw	low (STR_21+39)
 13879  00125C  6F7F               	movwf	strcat@from& (0+255),b
 13880  00125E  0EFE               	movlw	high (STR_21+39)
 13881  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 13882  001262  EC89  F028         	call	_strcat	;wreg free
 13883                           
 13884                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 13885  001266  0E54               	movlw	low Term_MainSm@Data
 13886  001268  0100               	movlb	0	; () banked
 13887  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 13888  00126C  0E04               	movlw	high Term_MainSm@Data
 13889  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13890  001270  0E54               	movlw	low Term_MainSm@Data
 13891  001272  6F7D               	movwf	strlen@s& (0+255),b
 13892  001274  0E04               	movlw	high Term_MainSm@Data
 13893  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13894  001278  EC9D  F02C         	call	_strlen	;wreg free
 13895  00127C  0100               	movlb	0	; () banked
 13896  00127E  517D               	movf	?_strlen& (0+255),w,b
 13897  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 13898  001282  EC46  F02F         	call	_putUSBUSART	;wreg free
 13899                           
 13900                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 13901  001286  0E06               	movlw	6
 13902  001288  0102               	movlb	2	; () banked
 13903  00128A  6FEB               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13904                           
 13905                           ; BSR set to: 2
 13906                           ;term.c: 793: }
 13907                           ;term.c: 794: break;
 13908  00128C  0012               	return	
 13909  00128E                     
 13910                           ; BSR set to: 2
 13911                           ;term.c: 798: if((cdc_trf_state == 0))
 13912                           
 13913                           ; BSR set to: 2
 13914  00128E  0100               	movlb	0	; () banked
 13915  001290  51CD               	movf	_cdc_trf_state& (0+255),w,b
 13916  001292  A4D8               	btfss	status,2,c
 13917  001294  0012               	return	
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;term.c: 799: {
 13921                           ;term.c: 801: memset(Data,0,50);
 13922  001296  0E54               	movlw	low Term_MainSm@Data
 13923  001298  6F7D               	movwf	memset@p1& (0+255),b
 13924  00129A  0E04               	movlw	high Term_MainSm@Data
 13925  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13926  00129E  0E00               	movlw	0
 13927  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 13928  0012A2  0E00               	movlw	0
 13929  0012A4  6F7F               	movwf	memset@c& (0+255),b
 13930  0012A6  0E00               	movlw	0
 13931  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 13932  0012AA  0E32               	movlw	50
 13933  0012AC  6F81               	movwf	memset@n& (0+255),b
 13934  0012AE  ECEE  F02D         	call	_memset	;wreg free
 13935                           
 13936                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 13 2022");
 13937  0012B2  0E54               	movlw	low Term_MainSm@Data
 13938  0012B4  0100               	movlb	0	; () banked
 13939  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 13940  0012B8  0E04               	movlw	high Term_MainSm@Data
 13941  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 13942  0012BC  0E18               	movlw	low STR_27
 13943  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 13944  0012C0  0EFF               	movlw	high STR_27
 13945  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 13946  0012C4  0EB5               	movlw	low STR_28
 13947  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 13948  0012C8  0EFF               	movlw	high STR_28
 13949  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 13950  0012CC  EC7C  F01C         	call	_sprintf	;wreg free
 13951                           
 13952                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 13953  0012D0  0E54               	movlw	low Term_MainSm@Data
 13954  0012D2  0100               	movlb	0	; () banked
 13955  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 13956  0012D6  0E04               	movlw	high Term_MainSm@Data
 13957  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13958  0012DA  0E54               	movlw	low Term_MainSm@Data
 13959  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 13960  0012DE  0E04               	movlw	high Term_MainSm@Data
 13961  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13962  0012E2  EC9D  F02C         	call	_strlen	;wreg free
 13963  0012E6  0100               	movlb	0	; () banked
 13964  0012E8  517D               	movf	?_strlen& (0+255),w,b
 13965  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 13966  0012EC  EC46  F02F         	call	_putUSBUSART	;wreg free
 13967                           
 13968                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 13969  0012F0  0E07               	movlw	7
 13970  0012F2  0102               	movlb	2	; () banked
 13971  0012F4  6FEB               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13972                           
 13973                           ; BSR set to: 2
 13974                           ;term.c: 808: }
 13975                           ;term.c: 809: break;
 13976  0012F6  0012               	return	
 13977  0012F8                     
 13978                           ; BSR set to: 2
 13979                           ;term.c: 813: if((cdc_trf_state == 0))
 13980                           
 13981                           ; BSR set to: 2
 13982  0012F8  0100               	movlb	0	; () banked
 13983  0012FA  51CD               	movf	_cdc_trf_state& (0+255),w,b
 13984  0012FC  A4D8               	btfss	status,2,c
 13985  0012FE  0012               	return	
 13986                           
 13987                           ; BSR set to: 0
 13988                           ;term.c: 814: {
 13989                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 13990  001300  0E3D               	movlw	low _MsgReady
 13991  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 13992  001304  0EFE               	movlw	high _MsgReady
 13993  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13994  001308  0E16               	movlw	22
 13995  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 13996  00130C  EC46  F02F         	call	_putUSBUSART	;wreg free
 13997                           
 13998                           ;term.c: 818: TermMainSmState = Term_FinalState;
 13999  001310  0E08               	movlw	8
 14000  001312  0102               	movlb	2	; () banked
 14001  001314  6FEB               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14002                           
 14003                           ; BSR set to: 2
 14004                           ;term.c: 819: }
 14005                           ;term.c: 820: break;
 14006  001316  0012               	return	
 14007  001318                     
 14008                           ; BSR set to: 2
 14009                           ;term.c: 824: Terminal();
 14010                           
 14011                           ; BSR set to: 2
 14012  001318  EC68  F000         	call	_Terminal	;wreg free
 14013                           
 14014                           ;term.c: 829: }
 14015                           
 14016                           ;term.c: 828: break;
 14017                           
 14018                           ;term.c: 827: default:
 14019                           
 14020                           ;term.c: 825: break;
 14021  00131C  0012               	return	
 14022  00131E                     l2415:
 14023  00131E  0102               	movlb	2	; () banked
 14024  001320  51EB               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14025                           
 14026                           ; Switch size 1, requested type "space"
 14027                           ; Number of cases is 9, Range of values is 0 to 8
 14028                           ; switch strategies available:
 14029                           ; Name         Instructions Cycles
 14030                           ; simple_byte           28    15 (average)
 14031                           ;	Chosen strategy is simple_byte
 14032  001322  0A00               	xorlw	0	; case 0
 14033  001324  B4D8               	btfsc	status,2,c
 14034  001326  D6C8               	goto	l2416
 14035  001328  0A01               	xorlw	1	; case 1
 14036  00132A  B4D8               	btfsc	status,2,c
 14037  00132C  D6D8               	goto	l2418
 14038  00132E  0A03               	xorlw	3	; case 2
 14039  001330  B4D8               	btfsc	status,2,c
 14040  001332  D6E3               	goto	l2420
 14041  001334  0A01               	xorlw	1	; case 3
 14042  001336  B4D8               	btfsc	status,2,c
 14043  001338  D6EA               	goto	l2425
 14044  00133A  0A07               	xorlw	7	; case 4
 14045  00133C  B4D8               	btfsc	status,2,c
 14046  00133E  D6F7               	goto	l2427
 14047  001340  0A01               	xorlw	1	; case 5
 14048  001342  B4D8               	btfsc	status,2,c
 14049  001344  D704               	goto	l2429
 14050  001346  0A03               	xorlw	3	; case 6
 14051  001348  B4D8               	btfsc	status,2,c
 14052  00134A  D7A1               	goto	l2431
 14053  00134C  0A01               	xorlw	1	; case 7
 14054  00134E  B4D8               	btfsc	status,2,c
 14055  001350  D7D3               	goto	l2433
 14056  001352  0A0F               	xorlw	15	; case 8
 14057  001354  A4D8               	btfss	status,2,c
 14058  001356  0012               	return	
 14059  001358  D7DF               	goto	l2435
 14060  00135A                     __end_of_Term_MainSm:
 14061                           	opt stack 0
 14062                           tosu	equ	0xFFF
 14063                           tosh	equ	0xFFE
 14064                           tosl	equ	0xFFD
 14065                           pclath	equ	0xFFA
 14066                           tblptru	equ	0xFF8
 14067                           tblptrh	equ	0xFF7
 14068                           tblptrl	equ	0xFF6
 14069                           tablat	equ	0xFF5
 14070                           prodh	equ	0xFF4
 14071                           prodl	equ	0xFF3
 14072                           intcon	equ	0xFF2
 14073                           intcon2	equ	0xFF1
 14074                           intcon3	equ	0xFF0
 14075                           indf0	equ	0xFEF
 14076                           postinc0	equ	0xFEE
 14077                           plusw0	equ	0xFEB
 14078                           fsr0h	equ	0xFEA
 14079                           fsr0l	equ	0xFE9
 14080                           wreg	equ	0xFE8
 14081                           indf1	equ	0xFE7
 14082                           postinc1	equ	0xFE6
 14083                           postdec1	equ	0xFE5
 14084                           plusw1	equ	0xFE3
 14085                           fsr1h	equ	0xFE2
 14086                           fsr1l	equ	0xFE1
 14087                           indf2	equ	0xFDF
 14088                           postinc2	equ	0xFDE
 14089                           postdec2	equ	0xFDD
 14090                           plusw2	equ	0xFDB
 14091                           fsr2h	equ	0xFDA
 14092                           fsr2l	equ	0xFD9
 14093                           status	equ	0xFD8
 14094                           
 14095 ;; *************** function _strlen *****************
 14096 ;; Defined at:
 14097 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14098 ;; Parameters:    Size  Location     Type
 14099 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14100 ;;		 -> Term_MainSm@Data(50), 
 14101 ;; Auto vars:     Size  Location     Type
 14102 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14103 ;;		 -> Term_MainSm@Data(50), 
 14104 ;; Return value:  Size  Location     Type
 14105 ;;                  2   29[BANK0 ] unsigned int 
 14106 ;; Registers used:
 14107 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14108 ;; Tracked objects:
 14109 ;;		On entry : 0/0
 14110 ;;		On exit  : 0/0
 14111 ;;		Unchanged: 0/0
 14112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14114 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14116 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14117 ;;Total ram usage:        6 bytes
 14118 ;; Hardware stack levels used:    1
 14119 ;; Hardware stack levels required when called:   11
 14120 ;; This function calls:
 14121 ;;		Nothing
 14122 ;; This function is called by:
 14123 ;;		_Term_MainSm
 14124 ;; This function uses a non-reentrant model
 14125 ;;
 14126                           
 14127                           	psect	text56
 14128  00593A                     __ptext56:
 14129                           	opt stack 0
 14130  00593A                     _strlen:
 14131                           	opt stack 15
 14132                           
 14133                           ;incstack = 0
 14134  00593A  C07D  F081         	movff	strlen@s,strlen@cp
 14135  00593E  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14136  005942  D003               	goto	l3221
 14137  005944  0100               	movlb	0	; () banked
 14138  005946  4B81               	infsnz	strlen@cp& (0+255),f,b
 14139  005948  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14140  00594A                     l3221:
 14141                           
 14142                           ; BSR set to: 0
 14143  00594A  C081  FFD9         	movff	strlen@cp,fsr2l
 14144  00594E  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14145  005952  50DF               	movf	indf2,w,c
 14146  005954  A4D8               	btfss	status,2,c
 14147  005956  D7F6               	goto	l3222
 14148  005958  C07D  F07F         	movff	strlen@s,??_strlen
 14149  00595C  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14150  005960  0100               	movlb	0	; () banked
 14151  005962  1F7F               	comf	??_strlen& (0+255),f,b
 14152  005964  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14153  005966  4B7F               	infsnz	??_strlen& (0+255),f,b
 14154  005968  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14155  00596A  5181               	movf	strlen@cp& (0+255),w,b
 14156  00596C  257F               	addwf	??_strlen& (0+255),w,b
 14157  00596E  6F7D               	movwf	?_strlen& (0+255),b
 14158  005970  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14159  005972  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14160  005974  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14161  005976  0012               	return	
 14162  005978                     __end_of_strlen:
 14163                           	opt stack 0
 14164                           tosu	equ	0xFFF
 14165                           tosh	equ	0xFFE
 14166                           tosl	equ	0xFFD
 14167                           pclath	equ	0xFFA
 14168                           tblptru	equ	0xFF8
 14169                           tblptrh	equ	0xFF7
 14170                           tblptrl	equ	0xFF6
 14171                           tablat	equ	0xFF5
 14172                           prodh	equ	0xFF4
 14173                           prodl	equ	0xFF3
 14174                           intcon	equ	0xFF2
 14175                           intcon2	equ	0xFF1
 14176                           intcon3	equ	0xFF0
 14177                           indf0	equ	0xFEF
 14178                           postinc0	equ	0xFEE
 14179                           plusw0	equ	0xFEB
 14180                           fsr0h	equ	0xFEA
 14181                           fsr0l	equ	0xFE9
 14182                           wreg	equ	0xFE8
 14183                           indf1	equ	0xFE7
 14184                           postinc1	equ	0xFE6
 14185                           postdec1	equ	0xFE5
 14186                           plusw1	equ	0xFE3
 14187                           fsr1h	equ	0xFE2
 14188                           fsr1l	equ	0xFE1
 14189                           indf2	equ	0xFDF
 14190                           postinc2	equ	0xFDE
 14191                           postdec2	equ	0xFDD
 14192                           plusw2	equ	0xFDB
 14193                           fsr2h	equ	0xFDA
 14194                           fsr2l	equ	0xFD9
 14195                           status	equ	0xFD8
 14196                           
 14197 ;; *************** function _strcat *****************
 14198 ;; Defined at:
 14199 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14200 ;; Parameters:    Size  Location     Type
 14201 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14202 ;;		 -> Term_MainSm@Data(50), 
 14203 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14204 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14205 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14206 ;; Auto vars:     Size  Location     Type
 14207 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14208 ;;		 -> Term_MainSm@Data(50), 
 14209 ;; Return value:  Size  Location     Type
 14210 ;;                  2   29[BANK0 ] PTR unsigned char 
 14211 ;; Registers used:
 14212 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14213 ;; Tracked objects:
 14214 ;;		On entry : 0/0
 14215 ;;		On exit  : 0/0
 14216 ;;		Unchanged: 0/0
 14217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14218 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14219 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14221 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14222 ;;Total ram usage:        6 bytes
 14223 ;; Hardware stack levels used:    1
 14224 ;; Hardware stack levels required when called:   11
 14225 ;; This function calls:
 14226 ;;		Nothing
 14227 ;; This function is called by:
 14228 ;;		_Term_MainSm
 14229 ;; This function uses a non-reentrant model
 14230 ;;
 14231                           
 14232                           	psect	text57
 14233  005112                     __ptext57:
 14234                           	opt stack 0
 14235  005112                     _strcat:
 14236                           	opt stack 15
 14237                           
 14238                           ; BSR set to: 0
 14239                           ;incstack = 0
 14240  005112  C07D  F081         	movff	strcat@to,strcat@cp
 14241  005116  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14242  00511A  D003               	goto	l3206
 14243  00511C  0100               	movlb	0	; () banked
 14244  00511E  4B81               	infsnz	strcat@cp& (0+255),f,b
 14245  005120  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14246  005122                     l3206:
 14247                           
 14248                           ; BSR set to: 0
 14249  005122  C081  FFD9         	movff	strcat@cp,fsr2l
 14250  005126  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14251  00512A  50DF               	movf	indf2,w,c
 14252  00512C  B4D8               	btfsc	status,2,c
 14253  00512E  D006               	goto	l3209
 14254  005130  D7F5               	goto	l3207
 14255  005132  0100               	movlb	0	; () banked
 14256  005134  4B81               	infsnz	strcat@cp& (0+255),f,b
 14257  005136  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14258  005138  4B7F               	infsnz	strcat@from& (0+255),f,b
 14259  00513A  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14260  00513C                     l3209:
 14261                           
 14262                           ; BSR set to: 0
 14263  00513C  C07F  FFF6         	movff	strcat@from,tblptrl
 14264  005140  C080  FFF7         	movff	strcat@from+1,tblptrh
 14265  005144  6AF8               	clrf	tblptru,c
 14266  005146  C081  FFD9         	movff	strcat@cp,fsr2l
 14267  00514A  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14268  00514E  0E0E               	movlw	(high __ramtop+-1)
 14269  005150  64F7               	cpfsgt	tblptrh,c
 14270  005152  D003               	bra	u7887
 14271  005154  0008               	tblrd		*
 14272  005156  50F5               	movf	tablat,w,c
 14273  005158  D005               	bra	u7880
 14274  00515A                     u7887:
 14275  00515A  CFF6 FFE9          	movff	tblptrl,fsr0l
 14276  00515E  CFF7 FFEA          	movff	tblptrh,fsr0h
 14277  005162  50EF               	movf	indf0,w,c
 14278  005164                     u7880:
 14279  005164  6EDF               	movwf	indf2,c
 14280  005166  50DF               	movf	indf2,w,c
 14281  005168  B4D8               	btfsc	status,2,c
 14282  00516A  0012               	return	
 14283  00516C  D7E2               	goto	l3210
 14284  00516E                     __end_of_strcat:
 14285                           	opt stack 0
 14286                           tosu	equ	0xFFF
 14287                           tosh	equ	0xFFE
 14288                           tosl	equ	0xFFD
 14289                           pclath	equ	0xFFA
 14290                           tblptru	equ	0xFF8
 14291                           tblptrh	equ	0xFF7
 14292                           tblptrl	equ	0xFF6
 14293                           tablat	equ	0xFF5
 14294                           prodh	equ	0xFF4
 14295                           prodl	equ	0xFF3
 14296                           intcon	equ	0xFF2
 14297                           intcon2	equ	0xFF1
 14298                           intcon3	equ	0xFF0
 14299                           indf0	equ	0xFEF
 14300                           postinc0	equ	0xFEE
 14301                           plusw0	equ	0xFEB
 14302                           fsr0h	equ	0xFEA
 14303                           fsr0l	equ	0xFE9
 14304                           wreg	equ	0xFE8
 14305                           indf1	equ	0xFE7
 14306                           postinc1	equ	0xFE6
 14307                           postdec1	equ	0xFE5
 14308                           plusw1	equ	0xFE3
 14309                           fsr1h	equ	0xFE2
 14310                           fsr1l	equ	0xFE1
 14311                           indf2	equ	0xFDF
 14312                           postinc2	equ	0xFDE
 14313                           postdec2	equ	0xFDD
 14314                           plusw2	equ	0xFDB
 14315                           fsr2h	equ	0xFDA
 14316                           fsr2l	equ	0xFD9
 14317                           status	equ	0xFD8
 14318                           
 14319 ;; *************** function _sprintf *****************
 14320 ;; Defined at:
 14321 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14322 ;; Parameters:    Size  Location     Type
 14323 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14324 ;;		 -> Term_MainSm@Data(50), 
 14325 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14326 ;;		 -> STR_27(17), 
 14327 ;; Auto vars:     Size  Location     Type
 14328 ;;  tmpval          4    0        struct .
 14329 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14330 ;;		 -> STR_31(7), STR_28(12), 
 14331 ;;  ap              2   36[BANK0 ] PTR void [1]
 14332 ;;		 -> ?_sprintf(2), 
 14333 ;;  len             2    0        unsigned int 
 14334 ;;  val             2    0        unsigned int 
 14335 ;;  c               1   38[BANK0 ] char 
 14336 ;;  flag            1   35[BANK0 ] unsigned char 
 14337 ;;  prec            1    0        char 
 14338 ;; Return value:  Size  Location     Type
 14339 ;;                  2   29[BANK0 ] int 
 14340 ;; Registers used:
 14341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14342 ;; Tracked objects:
 14343 ;;		On entry : 0/0
 14344 ;;		On exit  : 0/0
 14345 ;;		Unchanged: 0/0
 14346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14347 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14348 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14350 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14351 ;;Total ram usage:       12 bytes
 14352 ;; Hardware stack levels used:    1
 14353 ;; Hardware stack levels required when called:   11
 14354 ;; This function calls:
 14355 ;;		Nothing
 14356 ;; This function is called by:
 14357 ;;		_Term_MainSm
 14358 ;; This function uses a non-reentrant model
 14359 ;;
 14360                           
 14361                           	psect	text58
 14362  0038F8                     __ptext58:
 14363                           	opt stack 0
 14364  0038F8                     _sprintf:
 14365                           	opt stack 15
 14366                           
 14367                           ;doprnt.c: 494: va_list ap;
 14368                           ;doprnt.c: 499: signed char c;
 14369                           ;doprnt.c: 506: signed char prec;
 14370                           ;doprnt.c: 508: unsigned char flag;
 14371                           ;doprnt.c: 523: union {
 14372                           ;doprnt.c: 524: unsigned long vd;
 14373                           ;doprnt.c: 525: double integ;
 14374                           ;doprnt.c: 526: } tmpval;
 14375                           ;doprnt.c: 528: unsigned int val;
 14376                           ;doprnt.c: 529: unsigned len;
 14377                           ;doprnt.c: 530: const char * cp;
 14378                           ;doprnt.c: 533: *ap = __va_start();
 14379                           
 14380                           ;incstack = 0
 14381  0038F8  0E81               	movlw	low (?_sprintf+4)
 14382  0038FA  0100               	movlb	0	; () banked
 14383  0038FC  6F84               	movwf	sprintf@ap& (0+255),b
 14384  0038FE  0E00               	movlw	high (?_sprintf+4)
 14385  003900  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14386                           
 14387                           ;doprnt.c: 536: while(c = *f++) {
 14388  003902  D04E               	goto	l2610
 14389  003904                     
 14390                           ; BSR set to: 0
 14391                           ;doprnt.c: 538: if(c != '%')
 14392                           
 14393                           ; BSR set to: 0
 14394  003904  0E25               	movlw	37
 14395  003906  1986               	xorwf	sprintf@c& (0+255),w,b
 14396  003908  B4D8               	btfsc	status,2,c
 14397  00390A  D009               	goto	l2600
 14398                           
 14399                           ; BSR set to: 0
 14400                           ;doprnt.c: 540: {
 14401                           ;doprnt.c: 541: ((*sp++ = (c)));
 14402  00390C  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14403  003910  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14404  003914  C086  FFDF         	movff	sprintf@c,indf2
 14405                           
 14406                           ; BSR set to: 0
 14407  003918  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14408  00391A  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14409                           
 14410                           ;doprnt.c: 542: continue;
 14411  00391C  D041               	goto	l2610
 14412  00391E                     l2600:
 14413                           
 14414                           ; BSR set to: 0
 14415                           ;doprnt.c: 543: }
 14416                           ;doprnt.c: 548: flag = 0;
 14417                           
 14418                           ; BSR set to: 0
 14419  00391E  0E00               	movlw	0
 14420  003920  6F83               	movwf	sprintf@flag& (0+255),b
 14421                           
 14422                           ;doprnt.c: 635: switch(c = *f++) {
 14423  003922  D02E               	goto	l2601
 14424  003924                     
 14425                           ; BSR set to: 0
 14426                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14427                           
 14428                           ; BSR set to: 0
 14429  003924  C084  FFD9         	movff	sprintf@ap,fsr2l
 14430  003928  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14431  00392C  CFDE F087          	movff	postinc2,sprintf@cp
 14432  003930  CFDD F088          	movff	postdec2,sprintf@cp+1
 14433                           
 14434                           ; BSR set to: 0
 14435  003934  0E02               	movlw	2
 14436  003936  2784               	addwf	sprintf@ap& (0+255),f,b
 14437  003938  0E00               	movlw	0
 14438  00393A  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14439                           
 14440                           ; BSR set to: 0
 14441                           ;doprnt.c: 740: if(!cp)
 14442  00393C  5187               	movf	sprintf@cp& (0+255),w,b
 14443  00393E  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14444  003940  A4D8               	btfss	status,2,c
 14445  003942  D014               	goto	l2606
 14446                           
 14447                           ; BSR set to: 0
 14448                           ;doprnt.c: 741: cp = "(null)";
 14449  003944  0ED7               	movlw	low STR_31
 14450  003946  6F87               	movwf	sprintf@cp& (0+255),b
 14451  003948  0EFF               	movlw	high STR_31
 14452  00394A  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14453                           
 14454                           ; BSR set to: 0
 14455                           ;doprnt.c: 777: while(*cp)
 14456  00394C  D00F               	goto	l2606
 14457  00394E                     
 14458                           ; BSR set to: 0
 14459                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14460                           
 14461                           ; BSR set to: 0
 14462  00394E  C087  FFF6         	movff	sprintf@cp,tblptrl
 14463  003952  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14464  003956                     	if	0	;tblptru may be non-zero
 14465  003956                     	endif
 14466  003956                     	if	0	;tblptru may be non-zero
 14467  003956                     	endif
 14468  003956  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14469  00395A  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14470  00395E  0008               	tblrd		*
 14471  003960  CFF5 FFDF          	movff	tablat,indf2
 14472                           
 14473                           ; BSR set to: 0
 14474  003964  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14475  003966  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14476                           
 14477                           ; BSR set to: 0
 14478  003968  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14479  00396A  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14480  00396C                     l2606:
 14481                           
 14482                           ; BSR set to: 0
 14483                           
 14484                           ; BSR set to: 0
 14485  00396C  C087  FFF6         	movff	sprintf@cp,tblptrl
 14486  003970  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14487  003974                     	if	0	;tblptru may be non-zero
 14488  003974                     	endif
 14489  003974                     	if	0	;tblptru may be non-zero
 14490  003974                     	endif
 14491  003974  0008               	tblrd		*
 14492  003976  50F5               	movf	tablat,w,c
 14493  003978  0900               	iorlw	0
 14494  00397A  B4D8               	btfsc	status,2,c
 14495  00397C  D011               	goto	l2610
 14496  00397E  D7E7               	goto	l2607
 14497  003980                     l2601:
 14498                           
 14499                           ; BSR set to: 0
 14500                           
 14501                           ; BSR set to: 0
 14502  003980  C07F  FFF6         	movff	sprintf@f,tblptrl
 14503  003984  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14504  003988  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14505  00398A  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14506  00398C                     	if	0	;tblptru may be non-zero
 14507  00398C                     	endif
 14508  00398C                     	if	0	;tblptru may be non-zero
 14509  00398C                     	endif
 14510  00398C  0008               	tblrd		*
 14511  00398E  CFF5 F086          	movff	tablat,sprintf@c
 14512  003992  5186               	movf	sprintf@c& (0+255),w,b
 14513                           
 14514                           ; Switch size 1, requested type "space"
 14515                           ; Number of cases is 2, Range of values is 0 to 115
 14516                           ; switch strategies available:
 14517                           ; Name         Instructions Cycles
 14518                           ; simple_byte            7     4 (average)
 14519                           ;	Chosen strategy is simple_byte
 14520  003994  0A00               	xorlw	0	; case 0
 14521  003996  B4D8               	btfsc	status,2,c
 14522  003998  D00F               	goto	u7940
 14523  00399A  0A73               	xorlw	115	; case 115
 14524  00399C  B4D8               	btfsc	status,2,c
 14525  00399E  D7C2               	goto	l2604
 14526  0039A0                     l2610:
 14527                           
 14528                           ; BSR set to: 0
 14529                           
 14530                           ; BSR set to: 0
 14531                           
 14532                           ;doprnt.c: 1422: {
 14533                           
 14534                           ; BSR set to: 0
 14535  0039A0  C07F  FFF6         	movff	sprintf@f,tblptrl
 14536  0039A4  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14537  0039A8  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14538  0039AA  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14539  0039AC                     	if	0	;tblptru may be non-zero
 14540  0039AC                     	endif
 14541  0039AC                     	if	0	;tblptru may be non-zero
 14542  0039AC                     	endif
 14543  0039AC  0008               	tblrd		*
 14544  0039AE  CFF5 F086          	movff	tablat,sprintf@c
 14545  0039B2  5186               	movf	sprintf@c& (0+255),w,b
 14546  0039B4  A4D8               	btfss	status,2,c
 14547  0039B6  D7A6               	goto	l2599
 14548  0039B8                     u7940:
 14549                           
 14550                           ; BSR set to: 0
 14551                           ;doprnt.c: 1538: *sp = 0;
 14552                           
 14553                           ; BSR set to: 0
 14554                           
 14555                           ;doprnt.c: 1469: }
 14556                           ;doprnt.c: 1533: }
 14557                           ;doprnt.c: 1535: alldone:
 14558                           
 14559                           ; BSR set to: 0
 14560  0039B8  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14561  0039BC  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14562  0039C0  0E00               	movlw	0
 14563  0039C2  6EDF               	movwf	indf2,c
 14564  0039C4  0012               	return	
 14565  0039C6                     __end_of_sprintf:
 14566                           	opt stack 0
 14567                           tosu	equ	0xFFF
 14568                           tosh	equ	0xFFE
 14569                           tosl	equ	0xFFD
 14570                           pclath	equ	0xFFA
 14571                           tblptru	equ	0xFF8
 14572                           tblptrh	equ	0xFF7
 14573                           tblptrl	equ	0xFF6
 14574                           tablat	equ	0xFF5
 14575                           prodh	equ	0xFF4
 14576                           prodl	equ	0xFF3
 14577                           intcon	equ	0xFF2
 14578                           intcon2	equ	0xFF1
 14579                           intcon3	equ	0xFF0
 14580                           indf0	equ	0xFEF
 14581                           postinc0	equ	0xFEE
 14582                           plusw0	equ	0xFEB
 14583                           fsr0h	equ	0xFEA
 14584                           fsr0l	equ	0xFE9
 14585                           wreg	equ	0xFE8
 14586                           indf1	equ	0xFE7
 14587                           postinc1	equ	0xFE6
 14588                           postdec1	equ	0xFE5
 14589                           plusw1	equ	0xFE3
 14590                           fsr1h	equ	0xFE2
 14591                           fsr1l	equ	0xFE1
 14592                           indf2	equ	0xFDF
 14593                           postinc2	equ	0xFDE
 14594                           postdec2	equ	0xFDD
 14595                           plusw2	equ	0xFDB
 14596                           fsr2h	equ	0xFDA
 14597                           fsr2l	equ	0xFD9
 14598                           status	equ	0xFD8
 14599                           
 14600 ;; *************** function _memset *****************
 14601 ;; Defined at:
 14602 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14603 ;; Parameters:    Size  Location     Type
 14604 ;;  p1              2   29[BANK0 ] PTR void 
 14605 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14606 ;;  c               2   31[BANK0 ] int 
 14607 ;;  n               2   33[BANK0 ] unsigned int 
 14608 ;; Auto vars:     Size  Location     Type
 14609 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14610 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14611 ;; Return value:  Size  Location     Type
 14612 ;;                  2   29[BANK0 ] PTR void 
 14613 ;; Registers used:
 14614 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14615 ;; Tracked objects:
 14616 ;;		On entry : 0/0
 14617 ;;		On exit  : 0/0
 14618 ;;		Unchanged: 0/0
 14619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14620 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14621 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14623 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14624 ;;Total ram usage:        8 bytes
 14625 ;; Hardware stack levels used:    1
 14626 ;; Hardware stack levels required when called:   11
 14627 ;; This function calls:
 14628 ;;		Nothing
 14629 ;; This function is called by:
 14630 ;;		_USBDeviceInit
 14631 ;;		_USBStdSetCfgHandler
 14632 ;;		_Term_MainSm
 14633 ;; This function uses a non-reentrant model
 14634 ;;
 14635                           
 14636                           	psect	text59
 14637  005BDC                     __ptext59:
 14638                           	opt stack 0
 14639  005BDC                     _memset:
 14640                           	opt stack 14
 14641                           
 14642                           ; BSR set to: 0
 14643                           ;incstack = 0
 14644  005BDC  C07D  F083         	movff	memset@p1,memset@p
 14645  005BE0  C07E  F084         	movff	memset@p1+1,memset@p+1
 14646  005BE4  D009               	goto	l3080
 14647  005BE6                     l7669:
 14648  005BE6  C083  FFD9         	movff	memset@p,fsr2l
 14649  005BEA  C084  FFDA         	movff	memset@p+1,fsr2h
 14650  005BEE  C07F  FFDF         	movff	memset@c,indf2
 14651  005BF2  0100               	movlb	0	; () banked
 14652  005BF4  4B83               	infsnz	memset@p& (0+255),f,b
 14653  005BF6  2B84               	incf	(memset@p+1)& (0+255),f,b
 14654  005BF8                     l3080:
 14655                           
 14656                           ; BSR set to: 0
 14657  005BF8  0100               	movlb	0	; () banked
 14658  005BFA  0781               	decf	memset@n& (0+255),f,b
 14659  005BFC  A0D8               	btfss	status,0,c
 14660  005BFE  0782               	decf	(memset@n+1)& (0+255),f,b
 14661  005C00  2981               	incf	memset@n& (0+255),w,b
 14662  005C02  E1F1               	bnz	l7669
 14663  005C04  2982               	incf	(memset@n+1)& (0+255),w,b
 14664  005C06  B4D8               	btfsc	status,2,c
 14665  005C08  0012               	return	
 14666  005C0A  D7ED               	goto	l3081
 14667  005C0C                     __end_of_memset:
 14668                           	opt stack 0
 14669                           tosu	equ	0xFFF
 14670                           tosh	equ	0xFFE
 14671                           tosl	equ	0xFFD
 14672                           pclath	equ	0xFFA
 14673                           tblptru	equ	0xFF8
 14674                           tblptrh	equ	0xFF7
 14675                           tblptrl	equ	0xFF6
 14676                           tablat	equ	0xFF5
 14677                           prodh	equ	0xFF4
 14678                           prodl	equ	0xFF3
 14679                           intcon	equ	0xFF2
 14680                           intcon2	equ	0xFF1
 14681                           intcon3	equ	0xFF0
 14682                           indf0	equ	0xFEF
 14683                           postinc0	equ	0xFEE
 14684                           plusw0	equ	0xFEB
 14685                           fsr0h	equ	0xFEA
 14686                           fsr0l	equ	0xFE9
 14687                           wreg	equ	0xFE8
 14688                           indf1	equ	0xFE7
 14689                           postinc1	equ	0xFE6
 14690                           postdec1	equ	0xFE5
 14691                           plusw1	equ	0xFE3
 14692                           fsr1h	equ	0xFE2
 14693                           fsr1l	equ	0xFE1
 14694                           indf2	equ	0xFDF
 14695                           postinc2	equ	0xFDE
 14696                           postdec2	equ	0xFDD
 14697                           plusw2	equ	0xFDB
 14698                           fsr2h	equ	0xFDA
 14699                           fsr2l	equ	0xFD9
 14700                           status	equ	0xFD8
 14701                           
 14702 ;; *************** function _Terminal *****************
 14703 ;; Defined at:
 14704 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14705 ;; Parameters:    Size  Location     Type
 14706 ;;		None
 14707 ;; Auto vars:     Size  Location     Type
 14708 ;;  i               1   68[BANK0 ] unsigned char 
 14709 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14710 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14711 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14712 ;;  Index           1   70[BANK0 ] unsigned char 
 14713 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14714 ;; Return value:  Size  Location     Type
 14715 ;;                  1    wreg      void 
 14716 ;; Registers used:
 14717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14718 ;; Tracked objects:
 14719 ;;		On entry : 0/0
 14720 ;;		On exit  : 0/0
 14721 ;;		Unchanged: 0/0
 14722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14724 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14725 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14726 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14727 ;;Total ram usage:      455 bytes
 14728 ;; Hardware stack levels used:    1
 14729 ;; Hardware stack levels required when called:   15
 14730 ;; This function calls:
 14731 ;;		_I2cSlv_I2cReadMsgSts
 14732 ;;		_I2cSlv_ReceiveI2cMsg
 14733 ;;		_I2cSlv_SendI2cMsg
 14734 ;;		_OsTmr_Wait
 14735 ;;		_atoi
 14736 ;;		_getsUSBUSART
 14737 ;;		_itoa
 14738 ;;		_putUSBUSART
 14739 ;;		_strcpy
 14740 ;;		_strtol
 14741 ;;		_xtoi
 14742 ;; This function is called by:
 14743 ;;		_Term_MainSm
 14744 ;; This function uses a non-reentrant model
 14745 ;;
 14746                           
 14747                           	psect	text60
 14748  0000D0                     __ptext60:
 14749                           	opt stack 0
 14750  0000D0                     _Terminal:
 14751                           	opt stack 11
 14752                           
 14753                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14754                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14755                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14756                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14757                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14758                           ;term.c: 435: UINT8 Index;
 14759                           ;term.c: 436: static UINT8 Len[4];
 14760                           ;term.c: 437: static UINT8 PackageLen;
 14761                           ;term.c: 438: static UINT8 Addr[4];
 14762                           ;term.c: 439: static UINT8 SlaveAddr;
 14763                           ;term.c: 440: static PayloadType Payload[20u];
 14764                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14765                           
 14766                           ; BSR set to: 0
 14767                           ;incstack = 0
 14768  0000D0  0E00               	movlw	0
 14769  0000D2  0100               	movlb	0	; () banked
 14770  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14771                           
 14772                           ; BSR set to: 0
 14773                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14774                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14775                           ;term.c: 445: static SwTimerType SwTimer;
 14776                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14777  0000D6  0E1F               	movlw	31
 14778  0000D8  65D3               	cpfsgt	_USBDeviceState& (0+255),b
 14779  0000DA  0012               	return	
 14780                           
 14781                           ; BSR set to: 0
 14782  0000DC  B265               	btfsc	3941,1,c	;volatile
 14783  0000DE  0012               	return	
 14784  0000E0  D278               	goto	l2355
 14785  0000E2                     
 14786                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14787                           
 14788                           ; BSR set to: 0
 14789  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14790  0000E4  0100               	movlb	0	; () banked
 14791  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14792  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14793  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14794  0000EC  0EC8               	movlw	200
 14795  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14796  0000F0  EC88  F023         	call	_getsUSBUSART	;wreg free
 14797  0000F4  0100               	movlb	0	; () banked
 14798  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14799                           
 14800                           ; BSR set to: 0
 14801                           ;term.c: 458: if (ReceivedBytes > 0)
 14802  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14803  0000FA  B4D8               	btfsc	status,2,c
 14804  0000FC  0012               	return	
 14805                           
 14806                           ; BSR set to: 0
 14807                           ;term.c: 459: {
 14808                           ;term.c: 461: if (EchoOption == 1u)
 14809  0000FE  0102               	movlb	2	; () banked
 14810  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 14811  000102  A4D8               	btfss	status,2,c
 14812  000104  D026               	goto	l2359
 14813                           
 14814                           ; BSR set to: 2
 14815                           ;term.c: 462: {
 14816                           ;term.c: 464: if((cdc_trf_state == 0))
 14817  000106  0100               	movlb	0	; () banked
 14818  000108  51CD               	movf	_cdc_trf_state& (0+255),w,b
 14819  00010A  A4D8               	btfss	status,2,c
 14820  00010C  D022               	goto	l2359
 14821                           
 14822                           ; BSR set to: 0
 14823                           ;term.c: 465: {
 14824                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14825  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14826  000110  0D01               	mullw	1
 14827  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14828  000114  24F3               	addwf	prodl,w,c
 14829  000116  6ED9               	movwf	fsr2l,c
 14830  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14831  00011A  20F4               	addwfc	prodh,w,c
 14832  00011C  6EDA               	movwf	fsr2h,c
 14833  00011E  0E0D               	movlw	13
 14834  000120  6EDF               	movwf	indf2,c
 14835                           
 14836                           ; BSR set to: 0
 14837                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14838  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14839  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14840  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14841  000128  0E01               	movlw	1
 14842  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14843  00012C  0E00               	movlw	0
 14844  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14845  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14846  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14847  000134  6ED9               	movwf	fsr2l,c
 14848  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14849  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14850  00013A  6EDA               	movwf	fsr2h,c
 14851  00013C  0E0A               	movlw	10
 14852  00013E  6EDF               	movwf	indf2,c
 14853                           
 14854                           ; BSR set to: 0
 14855                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 14856  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 14857  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 14858  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 14859  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14860  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14861  00014A  0F02               	addlw	2
 14862  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 14863  00014E  EC46  F02F         	call	_putUSBUSART	;wreg free
 14864  000152                     l2359:
 14865                           
 14866                           ;term.c: 469: }
 14867                           ;term.c: 470: }
 14868                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 14869                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 14870                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14871  000152  0E53               	movlw	83
 14872  000154  010A               	movlb	10	; () banked
 14873  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14874  000158  A4D8               	btfss	status,2,c
 14875  00015A  D043               	goto	l2360
 14876                           
 14877                           ; BSR set to: 10
 14878  00015C  0E4F               	movlw	79
 14879  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14880  000160  A4D8               	btfss	status,2,c
 14881  000162  D03F               	goto	l2360
 14882                           
 14883                           ; BSR set to: 10
 14884  000164  0E3A               	movlw	58
 14885  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14886  000168  A4D8               	btfss	status,2,c
 14887  00016A  D03B               	goto	l2360
 14888                           
 14889                           ; BSR set to: 10
 14890                           ;term.c: 476: {
 14891                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14892  00016C  0E47               	movlw	71
 14893  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14894  000170  A4D8               	btfss	status,2,c
 14895  000172  0012               	return	
 14896                           
 14897                           ; BSR set to: 10
 14898  000174  0E3A               	movlw	58
 14899  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14900  000178  A4D8               	btfss	status,2,c
 14901  00017A  0012               	return	
 14902                           
 14903                           ; BSR set to: 10
 14904                           ;term.c: 479: {
 14905                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 14906  00017C  0E44               	movlw	68
 14907  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14908  000180  A4D8               	btfss	status,2,c
 14909  000182  D015               	goto	l2362
 14910                           
 14911                           ; BSR set to: 10
 14912  000184  0E46               	movlw	70
 14913  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14914  000188  A4D8               	btfss	status,2,c
 14915  00018A  D011               	goto	l2362
 14916                           
 14917                           ; BSR set to: 10
 14918                           ;term.c: 482: {
 14919                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 14920  00018C  0E41               	movlw	65
 14921  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14922  000190  A4D8               	btfss	status,2,c
 14923  000192  D004               	goto	l2363
 14924                           
 14925                           ; BSR set to: 10
 14926                           ;term.c: 484: {
 14927                           ;term.c: 485: FormatOption = 1u;
 14928  000194  0E01               	movlw	1
 14929  000196  0102               	movlb	2	; () banked
 14930  000198  6FEC               	movwf	Terminal@FormatOption& (0+255),b
 14931                           
 14932                           ;term.c: 486: }
 14933  00019A  0012               	return	
 14934  00019C                     l2363:
 14935                           
 14936                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 14937                           
 14938                           ; BSR set to: 2
 14939  00019C  0E42               	movlw	66
 14940  00019E  010A               	movlb	10	; () banked
 14941  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14942  0001A2  A4D8               	btfss	status,2,c
 14943  0001A4  0012               	return	
 14944                           
 14945                           ; BSR set to: 10
 14946                           ;term.c: 488: {
 14947                           ;term.c: 489: FormatOption = 0u;
 14948  0001A6  0E00               	movlw	0
 14949  0001A8  0102               	movlb	2	; () banked
 14950  0001AA  6FEC               	movwf	Terminal@FormatOption& (0+255),b
 14951                           
 14952                           ; BSR set to: 2
 14953                           ;term.c: 490: }
 14954                           ;term.c: 491: }
 14955                           
 14956                           ; BSR set to: 2
 14957  0001AC  0012               	return	
 14958  0001AE                     l2362:
 14959                           
 14960                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 14961                           
 14962                           ; BSR set to: 2
 14963  0001AE  0E45               	movlw	69
 14964  0001B0  010A               	movlb	10	; () banked
 14965  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14966  0001B4  A4D8               	btfss	status,2,c
 14967  0001B6  0012               	return	
 14968                           
 14969                           ; BSR set to: 10
 14970  0001B8  0E4D               	movlw	77
 14971  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14972  0001BC  A4D8               	btfss	status,2,c
 14973  0001BE  0012               	return	
 14974                           
 14975                           ; BSR set to: 10
 14976                           ;term.c: 494: {
 14977                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 14978  0001C0  0E31               	movlw	49
 14979  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14980  0001C4  A4D8               	btfss	status,2,c
 14981  0001C6  D004               	goto	l2368
 14982                           
 14983                           ; BSR set to: 10
 14984                           ;term.c: 496: {
 14985                           ;term.c: 497: EchoOption = 1u;
 14986  0001C8  0E01               	movlw	1
 14987  0001CA  0102               	movlb	2	; () banked
 14988  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 14989                           
 14990                           ;term.c: 498: }
 14991  0001CE  0012               	return	
 14992  0001D0                     l2368:
 14993                           
 14994                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 14995                           
 14996                           ; BSR set to: 2
 14997  0001D0  0E30               	movlw	48
 14998  0001D2  010A               	movlb	10	; () banked
 14999  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15000  0001D6  A4D8               	btfss	status,2,c
 15001  0001D8  0012               	return	
 15002                           
 15003                           ; BSR set to: 10
 15004                           ;term.c: 500: {
 15005                           ;term.c: 501: EchoOption = 0u;
 15006  0001DA  0E00               	movlw	0
 15007  0001DC  0102               	movlb	2	; () banked
 15008  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15009                           
 15010                           ; BSR set to: 2
 15011                           ;term.c: 507: }
 15012                           ;term.c: 508: }
 15013                           ;term.c: 509: }
 15014                           
 15015                           ; BSR set to: 2
 15016                           
 15017                           ; BSR set to: 2
 15018                           
 15019                           ;term.c: 504: else
 15020                           ;term.c: 505: {
 15021                           
 15022                           ; BSR set to: 2
 15023                           
 15024                           ; BSR set to: 2
 15025                           ;term.c: 502: }
 15026                           ;term.c: 503: }
 15027                           
 15028                           ; BSR set to: 2
 15029  0001E0  0012               	return	
 15030  0001E2                     l2360:
 15031                           
 15032                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15033                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15034                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15035                           
 15036                           ; BSR set to: 2
 15037  0001E2  0E53               	movlw	83
 15038  0001E4  010A               	movlb	10	; () banked
 15039  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15040  0001E8  A4D8               	btfss	status,2,c
 15041  0001EA  D0D3               	goto	l2373
 15042                           
 15043                           ; BSR set to: 10
 15044  0001EC  0E42               	movlw	66
 15045  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15046  0001F0  A4D8               	btfss	status,2,c
 15047  0001F2  D0CF               	goto	l2373
 15048                           
 15049                           ; BSR set to: 10
 15050  0001F4  0E3A               	movlw	58
 15051  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15052  0001F8  A4D8               	btfss	status,2,c
 15053  0001FA  D0CB               	goto	l2373
 15054                           
 15055                           ; BSR set to: 10
 15056                           ;term.c: 513: {
 15057                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15058  0001FC  0E57               	movlw	87
 15059  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15060  000200  A4D8               	btfss	status,2,c
 15061  000202  D091               	goto	l2374
 15062                           
 15063                           ; BSR set to: 10
 15064  000204  0E3A               	movlw	58
 15065  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15066  000208  A4D8               	btfss	status,2,c
 15067  00020A  D08D               	goto	l2374
 15068                           
 15069                           ; BSR set to: 10
 15070                           ;term.c: 515: {
 15071                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15072  00020C  CA05  F3AC         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15073                           
 15074                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15075  000210  CA06  F3AD         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15076                           
 15077                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15078  000214  CA08  F3A8         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15079                           
 15080                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15081  000218  CA09  F3A9         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15082                           
 15083                           ; BSR set to: 10
 15084                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15085  00021C  0EAC               	movlw	low Terminal@Len
 15086  00021E  0100               	movlb	0	; () banked
 15087  000220  6F83               	movwf	atoi@s& (0+255),b
 15088  000222  0E03               	movlw	high Terminal@Len
 15089  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15090  000226  EC3E  F01B         	call	_atoi	;wreg free
 15091  00022A  0100               	movlb	0	; () banked
 15092  00022C  5183               	movf	?_atoi& (0+255),w,b
 15093  00022E  0102               	movlb	2	; () banked
 15094  000230  6FEE               	movwf	Terminal@PackageLen& (0+255),b
 15095                           
 15096                           ; BSR set to: 2
 15097                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15098  000232  0EA8               	movlw	low Terminal@Addr
 15099  000234  0100               	movlb	0	; () banked
 15100  000236  6F83               	movwf	xtoi@s& (0+255),b
 15101  000238  0E03               	movlw	high Terminal@Addr
 15102  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15103  00023C  ECED  F019         	call	_xtoi	;wreg free
 15104  000240  0100               	movlb	0	; () banked
 15105  000242  5183               	movf	?_xtoi& (0+255),w,b
 15106  000244  0102               	movlb	2	; () banked
 15107  000246  6FED               	movwf	Terminal@SlaveAddr& (0+255),b
 15108                           
 15109                           ; BSR set to: 2
 15110                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15111  000248  0E00               	movlw	0
 15112  00024A  0100               	movlb	0	; () banked
 15113  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15114  00024E  D032               	goto	l2375
 15115  000250                     
 15116                           ;term.c: 527: {
 15117                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15118                           
 15119                           ; BSR set to: 0
 15120  000250  0100               	movlb	0	; () banked
 15121  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15122  000254  0D02               	mullw	2
 15123  000256  0E0B               	movlw	11
 15124  000258  26F3               	addwf	prodl,f,c
 15125  00025A  0E00               	movlw	0
 15126  00025C  22F4               	addwfc	prodh,f,c
 15127  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15128  000260  24F3               	addwf	prodl,w,c
 15129  000262  6ED9               	movwf	fsr2l,c
 15130  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15131  000266  20F4               	addwfc	prodh,w,c
 15132  000268  6EDA               	movwf	fsr2h,c
 15133  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15134  00026C  0D04               	mullw	4
 15135  00026E  0E00               	movlw	low Terminal@Payload
 15136  000270  24F3               	addwf	prodl,w,c
 15137  000272  6EE1               	movwf	fsr1l,c
 15138  000274  0E05               	movlw	high Terminal@Payload
 15139  000276  20F4               	addwfc	prodh,w,c
 15140  000278  6EE2               	movwf	fsr1h,c
 15141  00027A  CFDF FFE7          	movff	indf2,indf1
 15142                           
 15143                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15144  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15145  000280  0D02               	mullw	2
 15146  000282  0E0C               	movlw	12
 15147  000284  26F3               	addwf	prodl,f,c
 15148  000286  0E00               	movlw	0
 15149  000288  22F4               	addwfc	prodh,f,c
 15150  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15151  00028C  24F3               	addwf	prodl,w,c
 15152  00028E  6ED9               	movwf	fsr2l,c
 15153  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15154  000292  20F4               	addwfc	prodh,w,c
 15155  000294  6EDA               	movwf	fsr2h,c
 15156  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15157  000298  0D04               	mullw	4
 15158  00029A  0E01               	movlw	1
 15159  00029C  26F3               	addwf	prodl,f,c
 15160  00029E  0E00               	movlw	0
 15161  0002A0  22F4               	addwfc	prodh,f,c
 15162  0002A2  0E00               	movlw	low Terminal@Payload
 15163  0002A4  24F3               	addwf	prodl,w,c
 15164  0002A6  6EE1               	movwf	fsr1l,c
 15165  0002A8  0E05               	movlw	high Terminal@Payload
 15166  0002AA  20F4               	addwfc	prodh,w,c
 15167  0002AC  6EE2               	movwf	fsr1h,c
 15168  0002AE  CFDF FFE7          	movff	indf2,indf1
 15169                           
 15170                           ; BSR set to: 0
 15171  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15172  0002B4                     l2375:
 15173                           
 15174                           ; BSR set to: 0
 15175                           
 15176                           ; BSR set to: 0
 15177  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15178  0002B6  0102               	movlb	2	; () banked
 15179  0002B8  5DEE               	subwf	Terminal@PackageLen& (0+255),w,b
 15180  0002BA  B0D8               	btfsc	status,0,c
 15181  0002BC  D7C9               	goto	l2376
 15182                           
 15183                           ; BSR set to: 2
 15184                           ;term.c: 530: }
 15185                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15186                           
 15187                           ; BSR set to: 2
 15188  0002BE  0E00               	movlw	0
 15189  0002C0  0100               	movlb	0	; () banked
 15190  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15191  0002C4  D01F               	goto	l2378
 15192  0002C6                     
 15193                           ;term.c: 533: {
 15194                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15195                           
 15196                           ; BSR set to: 0
 15197  0002C6  0100               	movlb	0	; () banked
 15198  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15199  0002CA  0D04               	mullw	4
 15200  0002CC  0E00               	movlw	low Terminal@Payload
 15201  0002CE  24F3               	addwf	prodl,w,c
 15202  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15203  0002D2  0E05               	movlw	high Terminal@Payload
 15204  0002D4  20F4               	addwfc	prodh,w,c
 15205  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15206  0002D8  0E00               	movlw	0
 15207  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15208  0002DC  0E00               	movlw	0
 15209  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15210  0002E0  0E00               	movlw	0
 15211  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15212  0002E4  0E10               	movlw	16
 15213  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15214  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15215  0002EC  0100               	movlb	0	; () banked
 15216  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15217  0002F0  0D01               	mullw	1
 15218  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15219  0002F4  24F3               	addwf	prodl,w,c
 15220  0002F6  6ED9               	movwf	fsr2l,c
 15221  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15222  0002FA  20F4               	addwfc	prodh,w,c
 15223  0002FC  6EDA               	movwf	fsr2h,c
 15224  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15225                           
 15226                           ; BSR set to: 0
 15227  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15228  000304                     l2378:
 15229                           
 15230                           ; BSR set to: 0
 15231                           
 15232                           ; BSR set to: 0
 15233  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15234  000306  0102               	movlb	2	; () banked
 15235  000308  5DEE               	subwf	Terminal@PackageLen& (0+255),w,b
 15236  00030A  B0D8               	btfsc	status,0,c
 15237  00030C  D7DC               	goto	l2379
 15238                           
 15239                           ; BSR set to: 2
 15240                           ;term.c: 539: }
 15241                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15242                           
 15243                           ; BSR set to: 2
 15244  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15245  000310  0100               	movlb	0	; () banked
 15246  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15247  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15248  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15249  000318  C2ED  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15250  00031C  C2EE  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15251  000320  ECBC  F02C         	call	_I2cSlv_SendI2cMsg	;wreg free
 15252                           
 15253                           ;term.c: 543: }
 15254  000324  0012               	return	
 15255  000326                     l2374:
 15256                           
 15257                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15258  000326  0E52               	movlw	82
 15259  000328  010A               	movlb	10	; () banked
 15260  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15261  00032C  A4D8               	btfss	status,2,c
 15262  00032E  0012               	return	
 15263                           
 15264                           ; BSR set to: 10
 15265  000330  0E3A               	movlw	58
 15266  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15267  000334  A4D8               	btfss	status,2,c
 15268  000336  0012               	return	
 15269                           
 15270                           ; BSR set to: 10
 15271                           ;term.c: 545: {
 15272                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15273  000338  CA05  F3AC         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15274                           
 15275                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15276  00033C  CA06  F3AD         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15277                           
 15278                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15279  000340  CA08  F3A8         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15280                           
 15281                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15282  000344  CA09  F3A9         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15283                           
 15284                           ; BSR set to: 10
 15285                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15286  000348  0EAC               	movlw	low Terminal@Len
 15287  00034A  0100               	movlb	0	; () banked
 15288  00034C  6F83               	movwf	atoi@s& (0+255),b
 15289  00034E  0E03               	movlw	high Terminal@Len
 15290  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15291  000352  EC3E  F01B         	call	_atoi	;wreg free
 15292  000356  0100               	movlb	0	; () banked
 15293  000358  5183               	movf	?_atoi& (0+255),w,b
 15294  00035A  0102               	movlb	2	; () banked
 15295  00035C  6FEE               	movwf	Terminal@PackageLen& (0+255),b
 15296                           
 15297                           ; BSR set to: 2
 15298                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15299  00035E  0EA8               	movlw	low Terminal@Addr
 15300  000360  0100               	movlb	0	; () banked
 15301  000362  6F83               	movwf	xtoi@s& (0+255),b
 15302  000364  0E03               	movlw	high Terminal@Addr
 15303  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15304  000368  ECED  F019         	call	_xtoi	;wreg free
 15305  00036C  0100               	movlb	0	; () banked
 15306  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15307  000370  0102               	movlb	2	; () banked
 15308  000372  6FED               	movwf	Terminal@SlaveAddr& (0+255),b
 15309                           
 15310                           ; BSR set to: 2
 15311                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15312  000374  0E86               	movlw	low Terminal@TermRxBuffer
 15313  000376  0100               	movlb	0	; () banked
 15314  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15315  00037A  0E04               	movlw	high Terminal@TermRxBuffer
 15316  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15317  00037E  C2ED  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15318  000382  C2EE  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15319  000386  EC5D  F02C         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15320                           
 15321                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15322  00038A  0E01               	movlw	1
 15323  00038C  0102               	movlb	2	; () banked
 15324  00038E  6FEF               	movwf	Terminal@TermState& (0+255),b
 15325                           
 15326                           ; BSR set to: 2
 15327                           ;term.c: 561: }
 15328                           ;term.c: 562: }
 15329                           
 15330                           ; BSR set to: 2
 15331  000390  0012               	return	
 15332  000392                     l2373:
 15333                           
 15334                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15335                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15336                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15337                           
 15338                           ; BSR set to: 2
 15339  000392  0E54               	movlw	84
 15340  000394  010A               	movlb	10	; () banked
 15341  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15342  000398  A4D8               	btfss	status,2,c
 15343  00039A  0012               	return	
 15344                           
 15345                           ; BSR set to: 10
 15346  00039C  0E45               	movlw	69
 15347  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15348  0003A0  A4D8               	btfss	status,2,c
 15349  0003A2  0012               	return	
 15350                           
 15351                           ; BSR set to: 10
 15352  0003A4  0E4C               	movlw	76
 15353  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15354  0003A8  A4D8               	btfss	status,2,c
 15355  0003AA  0012               	return	
 15356                           
 15357                           ; BSR set to: 10
 15358                           ;term.c: 566: {
 15359                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15360  0003AC  CA03  F3AC         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15361                           
 15362                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15363  0003B0  CA04  F3AD         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15364                           
 15365                           ; BSR set to: 10
 15366                           ;term.c: 570: PhoneNumberLen = atoi(Len);
 15367  0003B4  0EAC               	movlw	low Terminal@Len
 15368  0003B6  0100               	movlb	0	; () banked
 15369  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15370  0003BA  0E03               	movlw	high Terminal@Len
 15371  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15372  0003BE  EC3E  F01B         	call	_atoi	;wreg free
 15373  0003C2  C083  F324         	movff	?_atoi,_PhoneNumberLen
 15374  0003C6  C084  F325         	movff	?_atoi+1,_PhoneNumberLen+1
 15375                           
 15376                           ;term.c: 572: for (UINT8 i = 0; i < PhoneNumberLen; i++)
 15377  0003CA  0E00               	movlw	0
 15378  0003CC  0100               	movlb	0	; () banked
 15379  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15380  0003D0  D018               	goto	l2385
 15381  0003D2                     
 15382                           ; BSR set to: 0
 15383                           ;term.c: 573: {
 15384                           ;term.c: 574: PhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15385                           
 15386                           ; BSR set to: 0
 15387  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15388  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15389  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15390  0003D8  0E05               	movlw	5
 15391  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15392  0003DC  0E00               	movlw	0
 15393  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15394  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15395  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15396  0003E4  6ED9               	movwf	fsr2l,c
 15397  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15398  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15399  0003EA  6EDA               	movwf	fsr2h,c
 15400  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15401  0003EE  0D01               	mullw	1
 15402  0003F0  0EB8               	movlw	low _PhoneNumber
 15403  0003F2  24F3               	addwf	prodl,w,c
 15404  0003F4  6EE1               	movwf	fsr1l,c
 15405  0003F6  0E04               	movlw	high _PhoneNumber
 15406  0003F8  20F4               	addwfc	prodh,w,c
 15407  0003FA  6EE2               	movwf	fsr1h,c
 15408  0003FC  CFDF FFE7          	movff	indf2,indf1
 15409                           
 15410                           ; BSR set to: 0
 15411  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15412  000402                     l2385:
 15413                           
 15414                           ; BSR set to: 0
 15415                           
 15416                           ; BSR set to: 0
 15417  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15418  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15419  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15420  000408  0103               	movlb	3	; () banked
 15421  00040A  5124               	movf	_PhoneNumberLen& (0+255),w,b
 15422  00040C  0100               	movlb	0	; () banked
 15423  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15424  000410  0103               	movlb	3	; () banked
 15425  000412  5125               	movf	(_PhoneNumberLen+1)& (0+255),w,b
 15426  000414  0100               	movlb	0	; () banked
 15427  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15428  000418  B0D8               	btfsc	status,0,c
 15429  00041A  0012               	return	
 15430  00041C  D7DA               	goto	l2386
 15431  00041E                     
 15432                           ;term.c: 619: if((cdc_trf_state == 0))
 15433                           
 15434                           ; BSR set to: 0
 15435  00041E  0100               	movlb	0	; () banked
 15436  000420  51CD               	movf	_cdc_trf_state& (0+255),w,b
 15437  000422  A4D8               	btfss	status,2,c
 15438  000424  0012               	return	
 15439                           
 15440                           ; BSR set to: 0
 15441                           ;term.c: 620: {
 15442                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15443  000426  0E53               	movlw	83
 15444  000428  0102               	movlb	2	; () banked
 15445  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15446                           
 15447                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15448  00042C  0E42               	movlw	66
 15449  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15450                           
 15451                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15452  000430  0E5B               	movlw	91
 15453  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15454                           
 15455                           ; BSR set to: 2
 15456                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15457  000434  C3A8  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15458                           
 15459                           ; BSR set to: 2
 15460                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15461  000438  C3A9  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15462                           
 15463                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15464  00043C  0E5D               	movlw	93
 15465  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15466                           
 15467                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15468  000440  0E3A               	movlw	58
 15469  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15470                           
 15471                           ; BSR set to: 2
 15472                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15473  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15474  000446  0100               	movlb	0	; () banked
 15475  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15476  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15477  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15478  00044E  0E07               	movlw	7
 15479  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15480  000452  EC46  F02F         	call	_putUSBUSART	;wreg free
 15481                           
 15482                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15483  000456  0E02               	movlw	2
 15484  000458  0102               	movlb	2	; () banked
 15485  00045A  6FEF               	movwf	Terminal@TermState& (0+255),b
 15486                           
 15487                           ; BSR set to: 2
 15488                           ;term.c: 632: }
 15489                           ;term.c: 633: break;
 15490  00045C  0012               	return	
 15491  00045E                     
 15492                           ; BSR set to: 2
 15493                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15494                           
 15495                           ; BSR set to: 2
 15496  00045E  EC68  F02F         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15497  000462  06E8               	decf	wreg,f,c
 15498  000464  A4D8               	btfss	status,2,c
 15499  000466  D088               	goto	l2394
 15500                           
 15501                           ;term.c: 638: {
 15502                           ;term.c: 640: if (FormatOption == 1u)
 15503  000468  0102               	movlb	2	; () banked
 15504  00046A  05EC               	decf	Terminal@FormatOption& (0+255),w,b
 15505  00046C  A4D8               	btfss	status,2,c
 15506  00046E  D027               	goto	u12020
 15507                           
 15508                           ; BSR set to: 2
 15509                           ;term.c: 641: {
 15510                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15511  000470  0E00               	movlw	0
 15512  000472  0100               	movlb	0	; () banked
 15513  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15514  000476  D01E               	goto	l2396
 15515  000478                     
 15516                           ;term.c: 644: {
 15517                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15518                           
 15519                           ; BSR set to: 0
 15520  000478  0100               	movlb	0	; () banked
 15521  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15522  00047C  0D04               	mullw	4
 15523  00047E  0E00               	movlw	low Terminal@Payload
 15524  000480  24F3               	addwf	prodl,w,c
 15525  000482  6F93               	movwf	itoa@buf& (0+255),b
 15526  000484  0E05               	movlw	high Terminal@Payload
 15527  000486  20F4               	addwfc	prodh,w,c
 15528  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15529  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15530  00048C  0D01               	mullw	1
 15531  00048E  0E86               	movlw	low Terminal@TermRxBuffer
 15532  000490  24F3               	addwf	prodl,w,c
 15533  000492  6ED9               	movwf	fsr2l,c
 15534  000494  0E04               	movlw	high Terminal@TermRxBuffer
 15535  000496  20F4               	addwfc	prodh,w,c
 15536  000498  6EDA               	movwf	fsr2h,c
 15537  00049A  50DF               	movf	indf2,w,c
 15538  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15539  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15540  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15541  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15542  0004A4  0E00               	movlw	0
 15543  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15544  0004A8  0E0A               	movlw	10
 15545  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15546  0004AC  ECD6  F02B         	call	_itoa	;wreg free
 15547  0004B0  0100               	movlb	0	; () banked
 15548  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15549  0004B4                     l2396:
 15550                           
 15551                           ; BSR set to: 0
 15552                           
 15553                           ; BSR set to: 0
 15554  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15555  0004B6  0102               	movlb	2	; () banked
 15556  0004B8  5DEE               	subwf	Terminal@PackageLen& (0+255),w,b
 15557  0004BA  B0D8               	btfsc	status,0,c
 15558  0004BC  D7DD               	goto	l2397
 15559  0004BE                     u12020:
 15560                           
 15561                           ; BSR set to: 2
 15562                           ;term.c: 646: }
 15563                           ;term.c: 647: }
 15564                           ;term.c: 650: if((cdc_trf_state == 0))
 15565                           
 15566                           ; BSR set to: 2
 15567                           
 15568                           ; BSR set to: 2
 15569  0004BE  0100               	movlb	0	; () banked
 15570  0004C0  51CD               	movf	_cdc_trf_state& (0+255),w,b
 15571  0004C2  A4D8               	btfss	status,2,c
 15572  0004C4  0012               	return	
 15573                           
 15574                           ; BSR set to: 0
 15575                           ;term.c: 651: {
 15576                           ;term.c: 653: if (FormatOption == 1u)
 15577  0004C6  0102               	movlb	2	; () banked
 15578  0004C8  05EC               	decf	Terminal@FormatOption& (0+255),w,b
 15579  0004CA  A4D8               	btfss	status,2,c
 15580  0004CC  D02B               	goto	l2400
 15581                           
 15582                           ; BSR set to: 2
 15583                           ;term.c: 654: {
 15584                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15585  0004CE  51EE               	movf	Terminal@PackageLen& (0+255),w,b
 15586  0004D0  0D08               	mullw	8
 15587  0004D2  0E03               	movlw	3
 15588  0004D4  26F3               	addwf	prodl,f,c
 15589  0004D6  0E00               	movlw	0
 15590  0004D8  22F4               	addwfc	prodh,f,c
 15591  0004DA  0E00               	movlw	low Terminal@Payload
 15592  0004DC  24F3               	addwf	prodl,w,c
 15593  0004DE  6ED9               	movwf	fsr2l,c
 15594  0004E0  0E05               	movlw	high Terminal@Payload
 15595  0004E2  20F4               	addwfc	prodh,w,c
 15596  0004E4  6EDA               	movwf	fsr2h,c
 15597  0004E6  0E0D               	movlw	13
 15598  0004E8  6EDF               	movwf	indf2,c
 15599                           
 15600                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15601  0004EA  51EE               	movf	Terminal@PackageLen& (0+255),w,b
 15602  0004EC  0D08               	mullw	8
 15603  0004EE  0E02               	movlw	2
 15604  0004F0  26F3               	addwf	prodl,f,c
 15605  0004F2  0E00               	movlw	0
 15606  0004F4  22F4               	addwfc	prodh,f,c
 15607  0004F6  0E00               	movlw	low Terminal@Payload
 15608  0004F8  24F3               	addwf	prodl,w,c
 15609  0004FA  6ED9               	movwf	fsr2l,c
 15610  0004FC  0E05               	movlw	high Terminal@Payload
 15611  0004FE  20F4               	addwfc	prodh,w,c
 15612  000500  6EDA               	movwf	fsr2h,c
 15613  000502  0E0A               	movlw	10
 15614  000504  6EDF               	movwf	indf2,c
 15615                           
 15616                           ; BSR set to: 2
 15617                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15618  000506  0E00               	movlw	low Terminal@Payload
 15619  000508  0100               	movlb	0	; () banked
 15620  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15621  00050C  0E05               	movlw	high Terminal@Payload
 15622  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15623  000510  0102               	movlb	2	; () banked
 15624  000512  51EE               	movf	Terminal@PackageLen& (0+255),w,b
 15625  000514  0D02               	mullw	2
 15626  000516  50F3               	movf	prodl,w,c
 15627  000518  0F04               	addlw	4
 15628  00051A  0100               	movlb	0	; () banked
 15629  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15630  00051E  EC46  F02F         	call	_putUSBUSART	;wreg free
 15631                           
 15632                           ;term.c: 659: }
 15633  000522  D026               	goto	l2401
 15634  000524                     l2400:
 15635                           
 15636                           ;term.c: 660: else
 15637                           ;term.c: 661: {
 15638                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15639  000524  0102               	movlb	2	; () banked
 15640  000526  51EE               	movf	Terminal@PackageLen& (0+255),w,b
 15641  000528  0D01               	mullw	1
 15642  00052A  0E86               	movlw	low Terminal@TermRxBuffer
 15643  00052C  24F3               	addwf	prodl,w,c
 15644  00052E  6ED9               	movwf	fsr2l,c
 15645  000530  0E04               	movlw	high Terminal@TermRxBuffer
 15646  000532  20F4               	addwfc	prodh,w,c
 15647  000534  6EDA               	movwf	fsr2h,c
 15648  000536  0E0D               	movlw	13
 15649  000538  6EDF               	movwf	indf2,c
 15650                           
 15651                           ; BSR set to: 2
 15652                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15653  00053A  51EE               	movf	Terminal@PackageLen& (0+255),w,b
 15654  00053C  0100               	movlb	0	; () banked
 15655  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15656  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15657  000542  0E01               	movlw	1
 15658  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15659  000546  0E00               	movlw	0
 15660  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15661  00054A  0E86               	movlw	low Terminal@TermRxBuffer
 15662  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15663  00054E  6ED9               	movwf	fsr2l,c
 15664  000550  0E04               	movlw	high Terminal@TermRxBuffer
 15665  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15666  000554  6EDA               	movwf	fsr2h,c
 15667  000556  0E0A               	movlw	10
 15668  000558  6EDF               	movwf	indf2,c
 15669                           
 15670                           ; BSR set to: 0
 15671                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15672  00055A  0E86               	movlw	low Terminal@TermRxBuffer
 15673  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15674  00055E  0E04               	movlw	high Terminal@TermRxBuffer
 15675  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15676  000562  0102               	movlb	2	; () banked
 15677  000564  51EE               	movf	Terminal@PackageLen& (0+255),w,b
 15678  000566  0F02               	addlw	2
 15679  000568  0100               	movlb	0	; () banked
 15680  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15681  00056C  EC46  F02F         	call	_putUSBUSART	;wreg free
 15682  000570                     l2401:
 15683                           
 15684                           ;term.c: 666: }
 15685                           ;term.c: 668: TermState = Term_GetData;
 15686  000570  0E00               	movlw	0
 15687  000572  0102               	movlb	2	; () banked
 15688  000574  6FEF               	movwf	Terminal@TermState& (0+255),b
 15689                           
 15690                           ; BSR set to: 2
 15691                           ;term.c: 669: }
 15692                           ;term.c: 670: }
 15693  000576  0012               	return	
 15694  000578                     l2394:
 15695                           
 15696                           ;term.c: 671: else
 15697                           ;term.c: 672: {
 15698                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15699                           
 15700                           ; BSR set to: 2
 15701  000578  0ECC               	movlw	low Terminal@SwTimer
 15702  00057A  0100               	movlb	0	; () banked
 15703  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15704  00057E  0E04               	movlw	high Terminal@SwTimer
 15705  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15706  000582  0EB8               	movlw	184
 15707  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15708  000586  0E0B               	movlw	11
 15709  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15710  00058A  0E00               	movlw	0
 15711  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15712  00058E  0E00               	movlw	0
 15713  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15714  000592  ECC1  F025         	call	_OsTmr_Wait	;wreg free
 15715  000596  06E8               	decf	wreg,f,c
 15716  000598  A4D8               	btfss	status,2,c
 15717  00059A  0012               	return	
 15718                           
 15719                           ;term.c: 675: {
 15720                           ;term.c: 677: if((cdc_trf_state == 0))
 15721  00059C  0100               	movlb	0	; () banked
 15722  00059E  51CD               	movf	_cdc_trf_state& (0+255),w,b
 15723  0005A0  A4D8               	btfss	status,2,c
 15724  0005A2  0012               	return	
 15725                           
 15726                           ; BSR set to: 0
 15727                           ;term.c: 678: {
 15728                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15729  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15730  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15731  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15732  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15733  0005AC  0E6A               	movlw	low STR_21
 15734  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15735  0005B0  0EFE               	movlw	high STR_21
 15736  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15737  0005B4  ECBD  F02D         	call	_strcpy	;wreg free
 15738                           
 15739                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15740  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15741  0005BA  0100               	movlb	0	; () banked
 15742  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15743  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15744  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15745  0005C2  0E29               	movlw	41
 15746  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15747  0005C6  EC46  F02F         	call	_putUSBUSART	;wreg free
 15748                           
 15749                           ;term.c: 682: TermState = Term_GetData;
 15750  0005CA  0E00               	movlw	0
 15751  0005CC  0102               	movlb	2	; () banked
 15752  0005CE  6FEF               	movwf	Terminal@TermState& (0+255),b
 15753                           
 15754                           ; BSR set to: 2
 15755                           ;term.c: 693: }
 15756                           
 15757                           ; BSR set to: 2
 15758                           ;term.c: 692: break;
 15759                           
 15760                           ;term.c: 691: default:
 15761                           
 15762                           ; BSR set to: 2
 15763                           ;term.c: 689: break;
 15764                           
 15765                           ;term.c: 688: case Term_ReadSlvUartData:
 15766                           
 15767                           ; BSR set to: 2
 15768                           ;term.c: 683: }
 15769                           ;term.c: 684: }
 15770                           ;term.c: 685: }
 15771                           ;term.c: 686: break;
 15772                           
 15773                           ; BSR set to: 2
 15774                           
 15775                           ; BSR set to: 2
 15776  0005D0  0012               	return	
 15777  0005D2                     l2355:
 15778                           
 15779                           ; BSR set to: 2
 15780  0005D2  0102               	movlb	2	; () banked
 15781  0005D4  51EF               	movf	Terminal@TermState& (0+255),w,b
 15782                           
 15783                           ; Switch size 1, requested type "space"
 15784                           ; Number of cases is 4, Range of values is 0 to 3
 15785                           ; switch strategies available:
 15786                           ; Name         Instructions Cycles
 15787                           ; simple_byte           13     7 (average)
 15788                           ;	Chosen strategy is simple_byte
 15789  0005D6  0A00               	xorlw	0	; case 0
 15790  0005D8  B4D8               	btfsc	status,2,c
 15791  0005DA  D583               	goto	l2356
 15792  0005DC  0A01               	xorlw	1	; case 1
 15793  0005DE  B4D8               	btfsc	status,2,c
 15794  0005E0  D71E               	goto	l2391
 15795  0005E2  0A03               	xorlw	3	; case 2
 15796  0005E4  B4D8               	btfsc	status,2,c
 15797  0005E6  D73B               	goto	l2393
 15798  0005E8  0A01               	xorlw	1	; case 3
 15799  0005EA  0012               	return	
 15800  0005EC                     __end_of_Terminal:
 15801                           	opt stack 0
 15802                           tosu	equ	0xFFF
 15803                           tosh	equ	0xFFE
 15804                           tosl	equ	0xFFD
 15805                           pclath	equ	0xFFA
 15806                           tblptru	equ	0xFF8
 15807                           tblptrh	equ	0xFF7
 15808                           tblptrl	equ	0xFF6
 15809                           tablat	equ	0xFF5
 15810                           prodh	equ	0xFF4
 15811                           prodl	equ	0xFF3
 15812                           intcon	equ	0xFF2
 15813                           intcon2	equ	0xFF1
 15814                           intcon3	equ	0xFF0
 15815                           indf0	equ	0xFEF
 15816                           postinc0	equ	0xFEE
 15817                           plusw0	equ	0xFEB
 15818                           fsr0h	equ	0xFEA
 15819                           fsr0l	equ	0xFE9
 15820                           wreg	equ	0xFE8
 15821                           indf1	equ	0xFE7
 15822                           postinc1	equ	0xFE6
 15823                           postdec1	equ	0xFE5
 15824                           plusw1	equ	0xFE3
 15825                           fsr1h	equ	0xFE2
 15826                           fsr1l	equ	0xFE1
 15827                           indf2	equ	0xFDF
 15828                           postinc2	equ	0xFDE
 15829                           postdec2	equ	0xFDD
 15830                           plusw2	equ	0xFDB
 15831                           fsr2h	equ	0xFDA
 15832                           fsr2l	equ	0xFD9
 15833                           status	equ	0xFD8
 15834                           
 15835 ;; *************** function _xtoi *****************
 15836 ;; Defined at:
 15837 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15838 ;; Parameters:    Size  Location     Type
 15839 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15840 ;;		 -> Terminal@Addr(4), 
 15841 ;; Auto vars:     Size  Location     Type
 15842 ;;  val             2   40[BANK0 ] unsigned int 
 15843 ;;  c               1   42[BANK0 ] unsigned char 
 15844 ;;  sign            1   39[BANK0 ] unsigned char 
 15845 ;; Return value:  Size  Location     Type
 15846 ;;                  2   35[BANK0 ] unsigned int 
 15847 ;; Registers used:
 15848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15849 ;; Tracked objects:
 15850 ;;		On entry : 0/0
 15851 ;;		On exit  : 0/0
 15852 ;;		Unchanged: 0/0
 15853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15854 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15855 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15856 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15857 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15858 ;;Total ram usage:        8 bytes
 15859 ;; Hardware stack levels used:    1
 15860 ;; Hardware stack levels required when called:   13
 15861 ;; This function calls:
 15862 ;;		_isdigit
 15863 ;;		_isspace
 15864 ;;		_isupper
 15865 ;;		_isxdigit
 15866 ;;		_tolower
 15867 ;; This function is called by:
 15868 ;;		_Terminal
 15869 ;; This function uses a non-reentrant model
 15870 ;;
 15871                           
 15872                           	psect	text61
 15873  0033DA                     __ptext61:
 15874                           	opt stack 0
 15875  0033DA                     _xtoi:
 15876                           	opt stack 12
 15877                           
 15878                           ;incstack = 0
 15879  0033DA  0E00               	movlw	0
 15880  0033DC  0100               	movlb	0	; () banked
 15881  0033DE  6F87               	movwf	xtoi@sign& (0+255),b
 15882  0033E0  0E00               	movlw	0
 15883  0033E2  6F89               	movwf	(xtoi@val+1)& (0+255),b
 15884  0033E4  0E00               	movlw	0
 15885  0033E6  6F88               	movwf	xtoi@val& (0+255),b
 15886  0033E8  D003               	goto	l3275
 15887  0033EA                     
 15888                           ; BSR set to: 0
 15889  0033EA  0100               	movlb	0	; () banked
 15890  0033EC  4B83               	infsnz	xtoi@s& (0+255),f,b
 15891  0033EE  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15892  0033F0                     l3275:
 15893                           
 15894                           ; BSR set to: 0
 15895                           
 15896                           ; BSR set to: 0
 15897  0033F0  C083  FFD9         	movff	xtoi@s,fsr2l
 15898  0033F4  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15899  0033F8  50DF               	movf	indf2,w,c
 15900  0033FA  EC8F  F02E         	call	_isspace
 15901  0033FE  B0D8               	btfsc	status,0,c
 15902  003400  D7F4               	goto	l3276
 15903  003402  C083  FFD9         	movff	xtoi@s,fsr2l
 15904  003406  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15905  00340A  0E2D               	movlw	45
 15906  00340C  18DE               	xorwf	postinc2,w,c
 15907  00340E  A4D8               	btfss	status,2,c
 15908  003410  D003               	goto	l3278
 15909  003412  0100               	movlb	0	; () banked
 15910  003414  2B87               	incf	xtoi@sign& (0+255),f,b
 15911  003416  D009               	goto	L15
 15912  003418                     l3278:
 15913                           
 15914                           ; BSR set to: 0
 15915  003418  C083  FFD9         	movff	xtoi@s,fsr2l
 15916  00341C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15917  003420  0E2B               	movlw	43
 15918  003422  18DE               	xorwf	postinc2,w,c
 15919  003424  A4D8               	btfss	status,2,c
 15920  003426  D028               	goto	l3281
 15921  003428  0100               	movlb	0	; () banked
 15922  00342A                     L15:
 15923  00342A  4B83               	infsnz	xtoi@s& (0+255),f,b
 15924  00342C  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15925                           
 15926                           ; BSR set to: 0
 15927                           
 15928                           ; BSR set to: 0
 15929  00342E  D024               	goto	l3281
 15930  003430                     
 15931                           ; BSR set to: 0
 15932  003430  0100               	movlb	0	; () banked
 15933  003432  518A               	movf	xtoi@c& (0+255),w,b
 15934  003434  EC35  F02F         	call	_isupper
 15935  003438  A0D8               	btfss	status,0,c
 15936  00343A  D006               	goto	l3283
 15937  00343C  0100               	movlb	0	; () banked
 15938  00343E  518A               	movf	xtoi@c& (0+255),w,b
 15939  003440  ECEE  F02F         	call	_tolower
 15940  003444  0100               	movlb	0	; () banked
 15941  003446  6F8A               	movwf	xtoi@c& (0+255),b
 15942  003448                     l3283:
 15943  003448  0100               	movlb	0	; () banked
 15944  00344A  518A               	movf	xtoi@c& (0+255),w,b
 15945  00344C  EC57  F02F         	call	_isdigit
 15946  003450  A0D8               	btfss	status,0,c
 15947  003452  D002               	goto	l3284
 15948  003454  0E30               	movlw	48
 15949  003456  D001               	goto	L14
 15950  003458                     l3284:
 15951                           
 15952                           ; BSR set to: 0
 15953  003458  0E57               	movlw	87
 15954  00345A                     L14:
 15955  00345A  0100               	movlb	0	; () banked
 15956  00345C  5F8A               	subwf	xtoi@c& (0+255),f,b
 15957                           
 15958                           ; BSR set to: 0
 15959  00345E  3B88               	swapf	xtoi@val& (0+255),f,b
 15960  003460  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 15961  003462  0EF0               	movlw	240
 15962  003464  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 15963  003466  5188               	movf	xtoi@val& (0+255),w,b
 15964  003468  0B0F               	andlw	15
 15965  00346A  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 15966  00346C  0EF0               	movlw	240
 15967  00346E  1788               	andwf	xtoi@val& (0+255),f,b
 15968  003470  518A               	movf	xtoi@c& (0+255),w,b
 15969  003472  2788               	addwf	xtoi@val& (0+255),f,b
 15970  003474  0E00               	movlw	0
 15971  003476  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 15972  003478                     l3281:
 15973                           
 15974                           ; BSR set to: 0
 15975  003478  C083  FFD9         	movff	xtoi@s,fsr2l
 15976  00347C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15977  003480  0100               	movlb	0	; () banked
 15978  003482  4B83               	infsnz	xtoi@s& (0+255),f,b
 15979  003484  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15980  003486  50DF               	movf	indf2,w,c
 15981  003488  6F8A               	movwf	xtoi@c& (0+255),b
 15982  00348A  518A               	movf	xtoi@c& (0+255),w,b
 15983  00348C  ECFA  F02C         	call	_isxdigit
 15984  003490  B0D8               	btfsc	status,0,c
 15985  003492  D7CE               	goto	l3282
 15986  003494  0100               	movlb	0	; () banked
 15987  003496  5187               	movf	xtoi@sign& (0+255),w,b
 15988  003498  B4D8               	btfsc	status,2,c
 15989  00349A  D00D               	goto	l3287
 15990                           
 15991                           ; BSR set to: 0
 15992  00349C  C088  F085         	movff	xtoi@val,??_xtoi
 15993  0034A0  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 15994  0034A4  1F85               	comf	??_xtoi& (0+255),f,b
 15995  0034A6  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 15996  0034A8  4B85               	infsnz	??_xtoi& (0+255),f,b
 15997  0034AA  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 15998  0034AC  C085  F083         	movff	??_xtoi,?_xtoi
 15999  0034B0  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16000  0034B4  0012               	return	
 16001  0034B6                     l3287:
 16002                           
 16003                           ; BSR set to: 0
 16004  0034B6  C088  F083         	movff	xtoi@val,?_xtoi
 16005  0034BA  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16006                           
 16007                           ; BSR set to: 0
 16008  0034BE  0012               	return		;funcret
 16009  0034C0                     __end_of_xtoi:
 16010                           	opt stack 0
 16011                           tosu	equ	0xFFF
 16012                           tosh	equ	0xFFE
 16013                           tosl	equ	0xFFD
 16014                           pclath	equ	0xFFA
 16015                           tblptru	equ	0xFF8
 16016                           tblptrh	equ	0xFF7
 16017                           tblptrl	equ	0xFF6
 16018                           tablat	equ	0xFF5
 16019                           prodh	equ	0xFF4
 16020                           prodl	equ	0xFF3
 16021                           intcon	equ	0xFF2
 16022                           intcon2	equ	0xFF1
 16023                           intcon3	equ	0xFF0
 16024                           indf0	equ	0xFEF
 16025                           postinc0	equ	0xFEE
 16026                           plusw0	equ	0xFEB
 16027                           fsr0h	equ	0xFEA
 16028                           fsr0l	equ	0xFE9
 16029                           wreg	equ	0xFE8
 16030                           indf1	equ	0xFE7
 16031                           postinc1	equ	0xFE6
 16032                           postdec1	equ	0xFE5
 16033                           plusw1	equ	0xFE3
 16034                           fsr1h	equ	0xFE2
 16035                           fsr1l	equ	0xFE1
 16036                           indf2	equ	0xFDF
 16037                           postinc2	equ	0xFDE
 16038                           postdec2	equ	0xFDD
 16039                           plusw2	equ	0xFDB
 16040                           fsr2h	equ	0xFDA
 16041                           fsr2l	equ	0xFD9
 16042                           status	equ	0xFD8
 16043                           
 16044 ;; *************** function _tolower *****************
 16045 ;; Defined at:
 16046 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16047 ;; Parameters:    Size  Location     Type
 16048 ;;  c               1    wreg     unsigned char 
 16049 ;; Auto vars:     Size  Location     Type
 16050 ;;  c               1   29[BANK0 ] unsigned char 
 16051 ;; Return value:  Size  Location     Type
 16052 ;;                  1    wreg      unsigned char 
 16053 ;; Registers used:
 16054 ;;		wreg, status,2, status,0
 16055 ;; Tracked objects:
 16056 ;;		On entry : 0/0
 16057 ;;		On exit  : 0/0
 16058 ;;		Unchanged: 0/0
 16059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16063 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16064 ;;Total ram usage:        1 bytes
 16065 ;; Hardware stack levels used:    1
 16066 ;; Hardware stack levels required when called:   11
 16067 ;; This function calls:
 16068 ;;		Nothing
 16069 ;; This function is called by:
 16070 ;;		_xtoi
 16071 ;; This function uses a non-reentrant model
 16072 ;;
 16073                           
 16074                           	psect	text62
 16075  005FDC                     __ptext62:
 16076                           	opt stack 0
 16077  005FDC                     _tolower:
 16078                           	opt stack 13
 16079                           
 16080                           ; BSR set to: 0
 16081                           ;incstack = 0
 16082                           ;tolower@c stored from wreg
 16083  005FDC  0100               	movlb	0	; () banked
 16084  005FDE  6F7D               	movwf	tolower@c& (0+255),b
 16085  005FE0  0E5B               	movlw	91
 16086  005FE2  0100               	movlb	0	; () banked
 16087  005FE4  617D               	cpfslt	tolower@c& (0+255),b
 16088  005FE6  D004               	goto	l3334
 16089                           
 16090                           ; BSR set to: 0
 16091  005FE8  0E40               	movlw	64
 16092  005FEA  657D               	cpfsgt	tolower@c& (0+255),b
 16093  005FEC  D001               	goto	l3334
 16094                           
 16095                           ; BSR set to: 0
 16096  005FEE  8B7D               	bsf	tolower@c& (0+255),5,b
 16097  005FF0                     l3334:
 16098                           
 16099                           ; BSR set to: 0
 16100                           
 16101                           ; BSR set to: 0
 16102  005FF0  517D               	movf	tolower@c& (0+255),w,b
 16103  005FF2  0012               	return	
 16104  005FF4                     __end_of_tolower:
 16105                           	opt stack 0
 16106                           tosu	equ	0xFFF
 16107                           tosh	equ	0xFFE
 16108                           tosl	equ	0xFFD
 16109                           pclath	equ	0xFFA
 16110                           tblptru	equ	0xFF8
 16111                           tblptrh	equ	0xFF7
 16112                           tblptrl	equ	0xFF6
 16113                           tablat	equ	0xFF5
 16114                           prodh	equ	0xFF4
 16115                           prodl	equ	0xFF3
 16116                           intcon	equ	0xFF2
 16117                           intcon2	equ	0xFF1
 16118                           intcon3	equ	0xFF0
 16119                           indf0	equ	0xFEF
 16120                           postinc0	equ	0xFEE
 16121                           plusw0	equ	0xFEB
 16122                           fsr0h	equ	0xFEA
 16123                           fsr0l	equ	0xFE9
 16124                           wreg	equ	0xFE8
 16125                           indf1	equ	0xFE7
 16126                           postinc1	equ	0xFE6
 16127                           postdec1	equ	0xFE5
 16128                           plusw1	equ	0xFE3
 16129                           fsr1h	equ	0xFE2
 16130                           fsr1l	equ	0xFE1
 16131                           indf2	equ	0xFDF
 16132                           postinc2	equ	0xFDE
 16133                           postdec2	equ	0xFDD
 16134                           plusw2	equ	0xFDB
 16135                           fsr2h	equ	0xFDA
 16136                           fsr2l	equ	0xFD9
 16137                           status	equ	0xFD8
 16138                           
 16139 ;; *************** function _isxdigit *****************
 16140 ;; Defined at:
 16141 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16142 ;; Parameters:    Size  Location     Type
 16143 ;;  c               1    wreg     unsigned char 
 16144 ;; Auto vars:     Size  Location     Type
 16145 ;;  c               1   34[BANK0 ] unsigned char 
 16146 ;; Return value:  Size  Location     Type
 16147 ;;		None               void
 16148 ;; Registers used:
 16149 ;;		wreg, status,2, status,0, cstack
 16150 ;; Tracked objects:
 16151 ;;		On entry : 0/0
 16152 ;;		On exit  : 0/0
 16153 ;;		Unchanged: 0/0
 16154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16156 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16157 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16158 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16159 ;;Total ram usage:        3 bytes
 16160 ;; Hardware stack levels used:    1
 16161 ;; Hardware stack levels required when called:   12
 16162 ;; This function calls:
 16163 ;;		_isdigit
 16164 ;; This function is called by:
 16165 ;;		_xtoi
 16166 ;; This function uses a non-reentrant model
 16167 ;;
 16168                           
 16169                           	psect	text63
 16170  0059F4                     __ptext63:
 16171                           	opt stack 0
 16172  0059F4                     _isxdigit:
 16173                           	opt stack 12
 16174                           
 16175                           ; BSR set to: 0
 16176                           ;incstack = 0
 16177                           ;isxdigit@c stored from wreg
 16178  0059F4  0100               	movlb	0	; () banked
 16179  0059F6  6F82               	movwf	isxdigit@c& (0+255),b
 16180  0059F8  0E01               	movlw	1
 16181  0059FA  0100               	movlb	0	; () banked
 16182  0059FC  6F81               	movwf	_isxdigit$6426& (0+255),b
 16183                           
 16184                           ; BSR set to: 0
 16185  0059FE  0E67               	movlw	103
 16186  005A00  6182               	cpfslt	isxdigit@c& (0+255),b
 16187  005A02  D003               	goto	u10750
 16188                           
 16189                           ; BSR set to: 0
 16190  005A04  0E61               	movlw	97
 16191  005A06  6182               	cpfslt	isxdigit@c& (0+255),b
 16192  005A08  D00E               	goto	l3330
 16193  005A0A                     u10750:
 16194                           
 16195                           ; BSR set to: 0
 16196                           
 16197                           ; BSR set to: 0
 16198  005A0A  0E47               	movlw	71
 16199  005A0C  6182               	cpfslt	isxdigit@c& (0+255),b
 16200  005A0E  D003               	goto	u10770
 16201                           
 16202                           ; BSR set to: 0
 16203  005A10  0E41               	movlw	65
 16204  005A12  6182               	cpfslt	isxdigit@c& (0+255),b
 16205  005A14  D008               	goto	l3330
 16206  005A16                     u10770:
 16207                           
 16208                           ; BSR set to: 0
 16209                           
 16210                           ; BSR set to: 0
 16211  005A16  5182               	movf	isxdigit@c& (0+255),w,b
 16212  005A18  EC57  F02F         	call	_isdigit
 16213  005A1C  B0D8               	btfsc	status,0,c
 16214  005A1E  D003               	goto	l3330
 16215  005A20  0E00               	movlw	0
 16216  005A22  0100               	movlb	0	; () banked
 16217  005A24  6F81               	movwf	_isxdigit$6426& (0+255),b
 16218  005A26                     l3330:
 16219                           
 16220                           ; BSR set to: 0
 16221  005A26  C081  F080         	movff	_isxdigit$6426,??_isxdigit
 16222  005A2A  0100               	movlb	0	; () banked
 16223  005A2C  3180               	rrcf	??_isxdigit& (0+255),w,b
 16224  005A2E  0012               	return	
 16225  005A30                     __end_of_isxdigit:
 16226                           	opt stack 0
 16227                           tosu	equ	0xFFF
 16228                           tosh	equ	0xFFE
 16229                           tosl	equ	0xFFD
 16230                           pclath	equ	0xFFA
 16231                           tblptru	equ	0xFF8
 16232                           tblptrh	equ	0xFF7
 16233                           tblptrl	equ	0xFF6
 16234                           tablat	equ	0xFF5
 16235                           prodh	equ	0xFF4
 16236                           prodl	equ	0xFF3
 16237                           intcon	equ	0xFF2
 16238                           intcon2	equ	0xFF1
 16239                           intcon3	equ	0xFF0
 16240                           indf0	equ	0xFEF
 16241                           postinc0	equ	0xFEE
 16242                           plusw0	equ	0xFEB
 16243                           fsr0h	equ	0xFEA
 16244                           fsr0l	equ	0xFE9
 16245                           wreg	equ	0xFE8
 16246                           indf1	equ	0xFE7
 16247                           postinc1	equ	0xFE6
 16248                           postdec1	equ	0xFE5
 16249                           plusw1	equ	0xFE3
 16250                           fsr1h	equ	0xFE2
 16251                           fsr1l	equ	0xFE1
 16252                           indf2	equ	0xFDF
 16253                           postinc2	equ	0xFDE
 16254                           postdec2	equ	0xFDD
 16255                           plusw2	equ	0xFDB
 16256                           fsr2h	equ	0xFDA
 16257                           fsr2l	equ	0xFD9
 16258                           status	equ	0xFD8
 16259                           
 16260 ;; *************** function _strtol *****************
 16261 ;; Defined at:
 16262 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16263 ;; Parameters:    Size  Location     Type
 16264 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16265 ;;		 -> Terminal@Payload(80), 
 16266 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16267 ;;		 -> NULL(0), 
 16268 ;;  base            2   45[BANK0 ] int 
 16269 ;; Auto vars:     Size  Location     Type
 16270 ;;  a               4   52[BANK0 ] long 
 16271 ;;  c               1   56[BANK0 ] unsigned char 
 16272 ;;  sign            1   51[BANK0 ] unsigned char 
 16273 ;; Return value:  Size  Location     Type
 16274 ;;                  4   41[BANK0 ] long 
 16275 ;; Registers used:
 16276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16277 ;; Tracked objects:
 16278 ;;		On entry : 0/0
 16279 ;;		On exit  : 0/0
 16280 ;;		Unchanged: 0/0
 16281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16282 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16283 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16284 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16285 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16286 ;;Total ram usage:       16 bytes
 16287 ;; Hardware stack levels used:    1
 16288 ;; Hardware stack levels required when called:   13
 16289 ;; This function calls:
 16290 ;;		___lmul
 16291 ;;		_isalpha
 16292 ;;		_isdigit
 16293 ;;		_isspace
 16294 ;;		_toupper
 16295 ;; This function is called by:
 16296 ;;		_Terminal
 16297 ;; This function uses a non-reentrant model
 16298 ;;
 16299                           
 16300                           	psect	text64
 16301  00181C                     __ptext64:
 16302                           	opt stack 0
 16303  00181C                     _strtol:
 16304                           	opt stack 12
 16305                           
 16306                           ; BSR set to: 0
 16307                           ;incstack = 0
 16308  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16309  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16310  001824  50DF               	movf	indf2,w,c
 16311  001826  0100               	movlb	0	; () banked
 16312  001828  6F98               	movwf	strtol@c& (0+255),b
 16313                           
 16314                           ; BSR set to: 0
 16315  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16316  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16317                           
 16318                           ; BSR set to: 0
 16319  00182E  5198               	movf	strtol@c& (0+255),w,b
 16320  001830  EC8F  F02E         	call	_isspace
 16321  001834  B0D8               	btfsc	status,0,c
 16322  001836  D7F2               	goto	_strtol
 16323  001838  0E00               	movlw	0
 16324  00183A  0100               	movlb	0	; () banked
 16325  00183C  6F94               	movwf	strtol@a& (0+255),b
 16326  00183E  0E00               	movlw	0
 16327  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16328  001842  0E00               	movlw	0
 16329  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16330  001846  0E00               	movlw	0
 16331  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16332  00184A  0E00               	movlw	0
 16333  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16334                           
 16335                           ; BSR set to: 0
 16336  00184E  0E2D               	movlw	45
 16337  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16338  001852  A4D8               	btfss	status,2,c
 16339  001854  D003               	goto	l3237
 16340                           
 16341                           ; BSR set to: 0
 16342  001856  0E01               	movlw	1
 16343  001858  6F93               	movwf	strtol@sign& (0+255),b
 16344  00185A  D004               	goto	u11150
 16345  00185C                     l3237:
 16346                           
 16347                           ; BSR set to: 0
 16348                           
 16349                           ; BSR set to: 0
 16350  00185C  0E2B               	movlw	43
 16351  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16352  001860  A4D8               	btfss	status,2,c
 16353  001862  D008               	goto	l3239
 16354  001864                     u11150:
 16355                           
 16356                           ; BSR set to: 0
 16357  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16358  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16359  00186C  50DF               	movf	indf2,w,c
 16360  00186E  6F98               	movwf	strtol@c& (0+255),b
 16361                           
 16362                           ; BSR set to: 0
 16363  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16364  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16365  001874                     l3239:
 16366                           
 16367                           ; BSR set to: 0
 16368                           
 16369                           ; BSR set to: 0
 16370                           
 16371                           ; BSR set to: 0
 16372  001874  0E30               	movlw	48
 16373  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16374  001878  A4D8               	btfss	status,2,c
 16375  00187A  D02E               	goto	l3247
 16376                           
 16377                           ; BSR set to: 0
 16378  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16379  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16380  001884  50DF               	movf	indf2,w,c
 16381  001886  6F98               	movwf	strtol@c& (0+255),b
 16382                           
 16383                           ; BSR set to: 0
 16384  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16385  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16386                           
 16387                           ; BSR set to: 0
 16388  00188C  518D               	movf	strtol@base& (0+255),w,b
 16389  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16390  001890  B4D8               	btfsc	status,2,c
 16391  001892  D005               	goto	u11180
 16392                           
 16393                           ; BSR set to: 0
 16394  001894  0E10               	movlw	16
 16395  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16396  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16397  00189A  A4D8               	btfss	status,2,c
 16398  00189C  D015               	goto	l3241
 16399  00189E                     u11180:
 16400                           
 16401                           ; BSR set to: 0
 16402                           
 16403                           ; BSR set to: 0
 16404  00189E  0E78               	movlw	120
 16405  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16406  0018A2  B4D8               	btfsc	status,2,c
 16407  0018A4  D004               	goto	u11200
 16408                           
 16409                           ; BSR set to: 0
 16410  0018A6  0E58               	movlw	88
 16411  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16412  0018AA  A4D8               	btfss	status,2,c
 16413  0018AC  D00D               	goto	l3241
 16414  0018AE                     u11200:
 16415                           
 16416                           ; BSR set to: 0
 16417                           
 16418                           ; BSR set to: 0
 16419  0018AE  0E00               	movlw	0
 16420  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16421  0018B2  0E10               	movlw	16
 16422  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16423                           
 16424                           ; BSR set to: 0
 16425  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16426  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16427  0018BE  50DF               	movf	indf2,w,c
 16428  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16429                           
 16430                           ; BSR set to: 0
 16431  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16432  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16433  0018C6  D008               	goto	l3247
 16434  0018C8                     l3241:
 16435                           
 16436                           ; BSR set to: 0
 16437                           
 16438                           ; BSR set to: 0
 16439  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16440  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16441  0018CC  A4D8               	btfss	status,2,c
 16442  0018CE  D004               	goto	l3247
 16443                           
 16444                           ; BSR set to: 0
 16445  0018D0  0E00               	movlw	0
 16446  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16447  0018D4  0E08               	movlw	8
 16448  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16449  0018D8                     l3247:
 16450                           
 16451                           ; BSR set to: 0
 16452                           
 16453                           ; BSR set to: 0
 16454                           
 16455                           ; BSR set to: 0
 16456                           
 16457                           ; BSR set to: 0
 16458  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16459  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16460  0018DC  A4D8               	btfss	status,2,c
 16461  0018DE  D004               	goto	l3248
 16462                           
 16463                           ; BSR set to: 0
 16464  0018E0  0E00               	movlw	0
 16465  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16466  0018E4  0E0A               	movlw	10
 16467  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16468  0018E8                     l3248:
 16469                           
 16470                           ; BSR set to: 0
 16471                           
 16472                           ; BSR set to: 0
 16473                           
 16474                           ; BSR set to: 0
 16475  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16476  0018EA  EC06  F02E         	call	_isalpha
 16477  0018EE  A0D8               	btfss	status,0,c
 16478  0018F0  D008               	goto	l3250
 16479  0018F2  0100               	movlb	0	; () banked
 16480  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16481  0018F6  ECFA  F02F         	call	_toupper
 16482  0018FA  0FC9               	addlw	201
 16483  0018FC  0100               	movlb	0	; () banked
 16484  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16485  001900  D009               	goto	l3253
 16486  001902                     l3250:
 16487                           
 16488                           ; BSR set to: 0
 16489  001902  0100               	movlb	0	; () banked
 16490  001904  5198               	movf	strtol@c& (0+255),w,b
 16491  001906  EC57  F02F         	call	_isdigit
 16492  00190A  A0D8               	btfss	status,0,c
 16493  00190C  D039               	goto	l3254
 16494  00190E  0E30               	movlw	48
 16495  001910  0100               	movlb	0	; () banked
 16496  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16497  001914                     l3253:
 16498                           
 16499                           ; BSR set to: 0
 16500                           
 16501                           ; BSR set to: 0
 16502                           
 16503                           ; BSR set to: 0
 16504  001914  5198               	movf	strtol@c& (0+255),w,b
 16505  001916  6F8F               	movwf	??_strtol& (0+255),b
 16506  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16507  00191A  518D               	movf	strtol@base& (0+255),w,b
 16508  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16509  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16510  001920  0A80               	xorlw	128
 16511  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16512  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16513  001926  0A80               	xorlw	128
 16514  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16515  00192A  B0D8               	btfsc	status,0,c
 16516  00192C  D029               	goto	l3254
 16517                           
 16518                           ; BSR set to: 0
 16519                           
 16520                           ; BSR set to: 0
 16521                           
 16522                           ; BSR set to: 0
 16523  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16524  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16525  001936  0E00               	movlw	0
 16526  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16527  00193A  0EFF               	movlw	-1
 16528  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16529  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16530  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16531  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16532  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16533  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16534  001950  ECE3  F028         	call	___lmul	;wreg free
 16535  001954  0100               	movlb	0	; () banked
 16536  001956  5198               	movf	strtol@c& (0+255),w,b
 16537  001958  257D               	addwf	?___lmul& (0+255),w,b
 16538  00195A  6F94               	movwf	strtol@a& (0+255),b
 16539  00195C  0E00               	movlw	0
 16540  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16541  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16542  001962  0E00               	movlw	0
 16543  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16544  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16545  001968  0E00               	movlw	0
 16546  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16547  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16548                           
 16549                           ; BSR set to: 0
 16550  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16551  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16552  001976  50DF               	movf	indf2,w,c
 16553  001978  6F98               	movwf	strtol@c& (0+255),b
 16554                           
 16555                           ; BSR set to: 0
 16556  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16557  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16558  00197E  D7B4               	goto	l3248
 16559  001980                     l3254:
 16560                           
 16561                           ; BSR set to: 0
 16562  001980  0100               	movlb	0	; () banked
 16563  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16564  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16565  001986  B4D8               	btfsc	status,2,c
 16566  001988  D00E               	goto	l3256
 16567                           
 16568                           ; BSR set to: 0
 16569  00198A  0EFF               	movlw	255
 16570  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16571  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16572  001990  0EFF               	movlw	255
 16573  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16574  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16575  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16576  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16577  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16578  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16579  0019A6                     l3256:
 16580                           
 16581                           ; BSR set to: 0
 16582                           
 16583                           ; BSR set to: 0
 16584  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16585  0019A8  B4D8               	btfsc	status,2,c
 16586  0019AA  D01A               	goto	l3257
 16587                           
 16588                           ; BSR set to: 0
 16589  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16590  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16591  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16592  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16593  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16594  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16595  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16596  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16597  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16598  0019C6  0E00               	movlw	0
 16599  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16600  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16601  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16602  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16603  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16604  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16605  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16606                           
 16607                           ; BSR set to: 0
 16608  0019DE  0012               	return	
 16609  0019E0                     l3257:
 16610                           
 16611                           ; BSR set to: 0
 16612  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16613  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16614  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16615  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16616                           
 16617                           ; BSR set to: 0
 16618  0019F0  0012               	return		;funcret
 16619  0019F2                     __end_of_strtol:
 16620                           	opt stack 0
 16621                           tosu	equ	0xFFF
 16622                           tosh	equ	0xFFE
 16623                           tosl	equ	0xFFD
 16624                           pclath	equ	0xFFA
 16625                           tblptru	equ	0xFF8
 16626                           tblptrh	equ	0xFF7
 16627                           tblptrl	equ	0xFF6
 16628                           tablat	equ	0xFF5
 16629                           prodh	equ	0xFF4
 16630                           prodl	equ	0xFF3
 16631                           intcon	equ	0xFF2
 16632                           intcon2	equ	0xFF1
 16633                           intcon3	equ	0xFF0
 16634                           indf0	equ	0xFEF
 16635                           postinc0	equ	0xFEE
 16636                           plusw0	equ	0xFEB
 16637                           fsr0h	equ	0xFEA
 16638                           fsr0l	equ	0xFE9
 16639                           wreg	equ	0xFE8
 16640                           indf1	equ	0xFE7
 16641                           postinc1	equ	0xFE6
 16642                           postdec1	equ	0xFE5
 16643                           plusw1	equ	0xFE3
 16644                           fsr1h	equ	0xFE2
 16645                           fsr1l	equ	0xFE1
 16646                           indf2	equ	0xFDF
 16647                           postinc2	equ	0xFDE
 16648                           postdec2	equ	0xFDD
 16649                           plusw2	equ	0xFDB
 16650                           fsr2h	equ	0xFDA
 16651                           fsr2l	equ	0xFD9
 16652                           status	equ	0xFD8
 16653                           
 16654 ;; *************** function _toupper *****************
 16655 ;; Defined at:
 16656 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16657 ;; Parameters:    Size  Location     Type
 16658 ;;  c               1    wreg     unsigned char 
 16659 ;; Auto vars:     Size  Location     Type
 16660 ;;  c               1   29[BANK0 ] unsigned char 
 16661 ;; Return value:  Size  Location     Type
 16662 ;;                  1    wreg      unsigned char 
 16663 ;; Registers used:
 16664 ;;		wreg, status,2, status,0
 16665 ;; Tracked objects:
 16666 ;;		On entry : 0/0
 16667 ;;		On exit  : 0/0
 16668 ;;		Unchanged: 0/0
 16669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16671 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16673 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16674 ;;Total ram usage:        1 bytes
 16675 ;; Hardware stack levels used:    1
 16676 ;; Hardware stack levels required when called:   11
 16677 ;; This function calls:
 16678 ;;		Nothing
 16679 ;; This function is called by:
 16680 ;;		_strtol
 16681 ;; This function uses a non-reentrant model
 16682 ;;
 16683                           
 16684                           	psect	text65
 16685  005FF4                     __ptext65:
 16686                           	opt stack 0
 16687  005FF4                     _toupper:
 16688                           	opt stack 13
 16689                           
 16690                           ; BSR set to: 0
 16691                           ;incstack = 0
 16692                           ;toupper@c stored from wreg
 16693  005FF4  0100               	movlb	0	; () banked
 16694  005FF6  6F7D               	movwf	toupper@c& (0+255),b
 16695  005FF8  0E7B               	movlw	123
 16696  005FFA  0100               	movlb	0	; () banked
 16697  005FFC  617D               	cpfslt	toupper@c& (0+255),b
 16698  005FFE  D004               	goto	l3261
 16699                           
 16700                           ; BSR set to: 0
 16701  006000  0E60               	movlw	96
 16702  006002  657D               	cpfsgt	toupper@c& (0+255),b
 16703  006004  D001               	goto	l3261
 16704                           
 16705                           ; BSR set to: 0
 16706  006006  9B7D               	bcf	toupper@c& (0+255),5,b
 16707  006008                     l3261:
 16708                           
 16709                           ; BSR set to: 0
 16710                           
 16711                           ; BSR set to: 0
 16712  006008  517D               	movf	toupper@c& (0+255),w,b
 16713  00600A  0012               	return	
 16714  00600C                     __end_of_toupper:
 16715                           	opt stack 0
 16716                           tosu	equ	0xFFF
 16717                           tosh	equ	0xFFE
 16718                           tosl	equ	0xFFD
 16719                           pclath	equ	0xFFA
 16720                           tblptru	equ	0xFF8
 16721                           tblptrh	equ	0xFF7
 16722                           tblptrl	equ	0xFF6
 16723                           tablat	equ	0xFF5
 16724                           prodh	equ	0xFF4
 16725                           prodl	equ	0xFF3
 16726                           intcon	equ	0xFF2
 16727                           intcon2	equ	0xFF1
 16728                           intcon3	equ	0xFF0
 16729                           indf0	equ	0xFEF
 16730                           postinc0	equ	0xFEE
 16731                           plusw0	equ	0xFEB
 16732                           fsr0h	equ	0xFEA
 16733                           fsr0l	equ	0xFE9
 16734                           wreg	equ	0xFE8
 16735                           indf1	equ	0xFE7
 16736                           postinc1	equ	0xFE6
 16737                           postdec1	equ	0xFE5
 16738                           plusw1	equ	0xFE3
 16739                           fsr1h	equ	0xFE2
 16740                           fsr1l	equ	0xFE1
 16741                           indf2	equ	0xFDF
 16742                           postinc2	equ	0xFDE
 16743                           postdec2	equ	0xFDD
 16744                           plusw2	equ	0xFDB
 16745                           fsr2h	equ	0xFDA
 16746                           fsr2l	equ	0xFD9
 16747                           status	equ	0xFD8
 16748                           
 16749 ;; *************** function _isspace *****************
 16750 ;; Defined at:
 16751 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16752 ;; Parameters:    Size  Location     Type
 16753 ;;  c               1    wreg     unsigned char 
 16754 ;; Auto vars:     Size  Location     Type
 16755 ;;  c               1   31[BANK0 ] unsigned char 
 16756 ;; Return value:  Size  Location     Type
 16757 ;;		None               void
 16758 ;; Registers used:
 16759 ;;		wreg, status,2, status,0
 16760 ;; Tracked objects:
 16761 ;;		On entry : 0/0
 16762 ;;		On exit  : 0/0
 16763 ;;		Unchanged: 0/0
 16764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16766 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16767 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16768 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16769 ;;Total ram usage:        3 bytes
 16770 ;; Hardware stack levels used:    1
 16771 ;; Hardware stack levels required when called:   11
 16772 ;; This function calls:
 16773 ;;		Nothing
 16774 ;; This function is called by:
 16775 ;;		_strtol
 16776 ;;		_xtoi
 16777 ;; This function uses a non-reentrant model
 16778 ;;
 16779                           
 16780                           	psect	text66
 16781  005D1E                     __ptext66:
 16782                           	opt stack 0
 16783  005D1E                     _isspace:
 16784                           	opt stack 13
 16785                           
 16786                           ; BSR set to: 0
 16787                           ;incstack = 0
 16788                           ;isspace@c stored from wreg
 16789  005D1E  0100               	movlb	0	; () banked
 16790  005D20  6F7F               	movwf	isspace@c& (0+255),b
 16791  005D22  0E01               	movlw	1
 16792  005D24  0100               	movlb	0	; () banked
 16793  005D26  6F7E               	movwf	_isspace$6419& (0+255),b
 16794                           
 16795                           ; BSR set to: 0
 16796  005D28  0E20               	movlw	32
 16797  005D2A  197F               	xorwf	isspace@c& (0+255),w,b
 16798  005D2C  B4D8               	btfsc	status,2,c
 16799  005D2E  D008               	goto	l3318
 16800                           
 16801                           ; BSR set to: 0
 16802  005D30  0E0E               	movlw	14
 16803  005D32  617F               	cpfslt	isspace@c& (0+255),b
 16804  005D34  D003               	goto	u10660
 16805                           
 16806                           ; BSR set to: 0
 16807  005D36  0E09               	movlw	9
 16808  005D38  617F               	cpfslt	isspace@c& (0+255),b
 16809  005D3A  D002               	goto	l3318
 16810  005D3C                     u10660:
 16811                           
 16812                           ; BSR set to: 0
 16813                           
 16814                           ; BSR set to: 0
 16815  005D3C  0E00               	movlw	0
 16816  005D3E  6F7E               	movwf	_isspace$6419& (0+255),b
 16817  005D40                     l3318:
 16818                           
 16819                           ; BSR set to: 0
 16820                           
 16821                           ; BSR set to: 0
 16822  005D40  C07E  F07D         	movff	_isspace$6419,??_isspace
 16823  005D44  317D               	rrcf	??_isspace& (0+255),w,b
 16824  005D46  0012               	return	
 16825  005D48                     __end_of_isspace:
 16826                           	opt stack 0
 16827                           tosu	equ	0xFFF
 16828                           tosh	equ	0xFFE
 16829                           tosl	equ	0xFFD
 16830                           pclath	equ	0xFFA
 16831                           tblptru	equ	0xFF8
 16832                           tblptrh	equ	0xFF7
 16833                           tblptrl	equ	0xFF6
 16834                           tablat	equ	0xFF5
 16835                           prodh	equ	0xFF4
 16836                           prodl	equ	0xFF3
 16837                           intcon	equ	0xFF2
 16838                           intcon2	equ	0xFF1
 16839                           intcon3	equ	0xFF0
 16840                           indf0	equ	0xFEF
 16841                           postinc0	equ	0xFEE
 16842                           plusw0	equ	0xFEB
 16843                           fsr0h	equ	0xFEA
 16844                           fsr0l	equ	0xFE9
 16845                           wreg	equ	0xFE8
 16846                           indf1	equ	0xFE7
 16847                           postinc1	equ	0xFE6
 16848                           postdec1	equ	0xFE5
 16849                           plusw1	equ	0xFE3
 16850                           fsr1h	equ	0xFE2
 16851                           fsr1l	equ	0xFE1
 16852                           indf2	equ	0xFDF
 16853                           postinc2	equ	0xFDE
 16854                           postdec2	equ	0xFDD
 16855                           plusw2	equ	0xFDB
 16856                           fsr2h	equ	0xFDA
 16857                           fsr2l	equ	0xFD9
 16858                           status	equ	0xFD8
 16859                           
 16860 ;; *************** function _isalpha *****************
 16861 ;; Defined at:
 16862 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 16863 ;; Parameters:    Size  Location     Type
 16864 ;;  c               1    wreg     unsigned char 
 16865 ;; Auto vars:     Size  Location     Type
 16866 ;;  c               1   34[BANK0 ] unsigned char 
 16867 ;; Return value:  Size  Location     Type
 16868 ;;		None               void
 16869 ;; Registers used:
 16870 ;;		wreg, status,2, status,0, cstack
 16871 ;; Tracked objects:
 16872 ;;		On entry : 0/0
 16873 ;;		On exit  : 0/0
 16874 ;;		Unchanged: 0/0
 16875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16877 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16878 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16879 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16880 ;;Total ram usage:        3 bytes
 16881 ;; Hardware stack levels used:    1
 16882 ;; Hardware stack levels required when called:   12
 16883 ;; This function calls:
 16884 ;;		_isupper
 16885 ;; This function is called by:
 16886 ;;		_strtol
 16887 ;; This function uses a non-reentrant model
 16888 ;;
 16889                           
 16890                           	psect	text67
 16891  005C0C                     __ptext67:
 16892                           	opt stack 0
 16893  005C0C                     _isalpha:
 16894                           	opt stack 12
 16895                           
 16896                           ; BSR set to: 0
 16897                           ;incstack = 0
 16898                           ;isalpha@c stored from wreg
 16899  005C0C  0100               	movlb	0	; () banked
 16900  005C0E  6F82               	movwf	isalpha@c& (0+255),b
 16901  005C10  0E01               	movlw	1
 16902  005C12  0100               	movlb	0	; () banked
 16903  005C14  6F81               	movwf	_isalpha$6416& (0+255),b
 16904                           
 16905                           ; BSR set to: 0
 16906  005C16  0E7B               	movlw	123
 16907  005C18  6182               	cpfslt	isalpha@c& (0+255),b
 16908  005C1A  D003               	goto	u10680
 16909                           
 16910                           ; BSR set to: 0
 16911  005C1C  0E61               	movlw	97
 16912  005C1E  6182               	cpfslt	isalpha@c& (0+255),b
 16913  005C20  D008               	goto	l3313
 16914  005C22                     u10680:
 16915                           
 16916                           ; BSR set to: 0
 16917                           
 16918                           ; BSR set to: 0
 16919  005C22  5182               	movf	isalpha@c& (0+255),w,b
 16920  005C24  EC35  F02F         	call	_isupper
 16921  005C28  B0D8               	btfsc	status,0,c
 16922  005C2A  D003               	goto	l3313
 16923  005C2C  0E00               	movlw	0
 16924  005C2E  0100               	movlb	0	; () banked
 16925  005C30  6F81               	movwf	_isalpha$6416& (0+255),b
 16926  005C32                     l3313:
 16927                           
 16928                           ; BSR set to: 0
 16929  005C32  C081  F080         	movff	_isalpha$6416,??_isalpha
 16930  005C36  0100               	movlb	0	; () banked
 16931  005C38  3180               	rrcf	??_isalpha& (0+255),w,b
 16932  005C3A  0012               	return	
 16933  005C3C                     __end_of_isalpha:
 16934                           	opt stack 0
 16935                           tosu	equ	0xFFF
 16936                           tosh	equ	0xFFE
 16937                           tosl	equ	0xFFD
 16938                           pclath	equ	0xFFA
 16939                           tblptru	equ	0xFF8
 16940                           tblptrh	equ	0xFF7
 16941                           tblptrl	equ	0xFF6
 16942                           tablat	equ	0xFF5
 16943                           prodh	equ	0xFF4
 16944                           prodl	equ	0xFF3
 16945                           intcon	equ	0xFF2
 16946                           intcon2	equ	0xFF1
 16947                           intcon3	equ	0xFF0
 16948                           indf0	equ	0xFEF
 16949                           postinc0	equ	0xFEE
 16950                           plusw0	equ	0xFEB
 16951                           fsr0h	equ	0xFEA
 16952                           fsr0l	equ	0xFE9
 16953                           wreg	equ	0xFE8
 16954                           indf1	equ	0xFE7
 16955                           postinc1	equ	0xFE6
 16956                           postdec1	equ	0xFE5
 16957                           plusw1	equ	0xFE3
 16958                           fsr1h	equ	0xFE2
 16959                           fsr1l	equ	0xFE1
 16960                           indf2	equ	0xFDF
 16961                           postinc2	equ	0xFDE
 16962                           postdec2	equ	0xFDD
 16963                           plusw2	equ	0xFDB
 16964                           fsr2h	equ	0xFDA
 16965                           fsr2l	equ	0xFD9
 16966                           status	equ	0xFD8
 16967                           
 16968 ;; *************** function _isupper *****************
 16969 ;; Defined at:
 16970 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 16971 ;; Parameters:    Size  Location     Type
 16972 ;;  c               1    wreg     unsigned char 
 16973 ;; Auto vars:     Size  Location     Type
 16974 ;;  c               1   31[BANK0 ] unsigned char 
 16975 ;; Return value:  Size  Location     Type
 16976 ;;		None               void
 16977 ;; Registers used:
 16978 ;;		wreg, status,2, status,0
 16979 ;; Tracked objects:
 16980 ;;		On entry : 0/0
 16981 ;;		On exit  : 0/0
 16982 ;;		Unchanged: 0/0
 16983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16985 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16986 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16987 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16988 ;;Total ram usage:        3 bytes
 16989 ;; Hardware stack levels used:    1
 16990 ;; Hardware stack levels required when called:   11
 16991 ;; This function calls:
 16992 ;;		Nothing
 16993 ;; This function is called by:
 16994 ;;		_xtoi
 16995 ;;		_isalpha
 16996 ;; This function uses a non-reentrant model
 16997 ;;
 16998                           
 16999                           	psect	text68
 17000  005E6A                     __ptext68:
 17001                           	opt stack 0
 17002  005E6A                     _isupper:
 17003                           	opt stack 13
 17004                           
 17005                           ; BSR set to: 0
 17006                           ;incstack = 0
 17007                           ;isupper@c stored from wreg
 17008  005E6A  0100               	movlb	0	; () banked
 17009  005E6C  6F7F               	movwf	isupper@c& (0+255),b
 17010  005E6E  0E00               	movlw	0
 17011  005E70  0100               	movlb	0	; () banked
 17012  005E72  6F7E               	movwf	_isupper$6422& (0+255),b
 17013                           
 17014                           ; BSR set to: 0
 17015  005E74  0E5B               	movlw	91
 17016  005E76  617F               	cpfslt	isupper@c& (0+255),b
 17017  005E78  D005               	goto	l3323
 17018                           
 17019                           ; BSR set to: 0
 17020  005E7A  0E40               	movlw	64
 17021  005E7C  657F               	cpfsgt	isupper@c& (0+255),b
 17022  005E7E  D002               	goto	l3323
 17023                           
 17024                           ; BSR set to: 0
 17025  005E80  0E01               	movlw	1
 17026  005E82  6F7E               	movwf	_isupper$6422& (0+255),b
 17027  005E84                     l3323:
 17028                           
 17029                           ; BSR set to: 0
 17030                           
 17031                           ; BSR set to: 0
 17032  005E84  C07E  F07D         	movff	_isupper$6422,??_isupper
 17033  005E88  317D               	rrcf	??_isupper& (0+255),w,b
 17034  005E8A  0012               	return	
 17035  005E8C                     __end_of_isupper:
 17036                           	opt stack 0
 17037                           tosu	equ	0xFFF
 17038                           tosh	equ	0xFFE
 17039                           tosl	equ	0xFFD
 17040                           pclath	equ	0xFFA
 17041                           tblptru	equ	0xFF8
 17042                           tblptrh	equ	0xFF7
 17043                           tblptrl	equ	0xFF6
 17044                           tablat	equ	0xFF5
 17045                           prodh	equ	0xFF4
 17046                           prodl	equ	0xFF3
 17047                           intcon	equ	0xFF2
 17048                           intcon2	equ	0xFF1
 17049                           intcon3	equ	0xFF0
 17050                           indf0	equ	0xFEF
 17051                           postinc0	equ	0xFEE
 17052                           plusw0	equ	0xFEB
 17053                           fsr0h	equ	0xFEA
 17054                           fsr0l	equ	0xFE9
 17055                           wreg	equ	0xFE8
 17056                           indf1	equ	0xFE7
 17057                           postinc1	equ	0xFE6
 17058                           postdec1	equ	0xFE5
 17059                           plusw1	equ	0xFE3
 17060                           fsr1h	equ	0xFE2
 17061                           fsr1l	equ	0xFE1
 17062                           indf2	equ	0xFDF
 17063                           postinc2	equ	0xFDE
 17064                           postdec2	equ	0xFDD
 17065                           plusw2	equ	0xFDB
 17066                           fsr2h	equ	0xFDA
 17067                           fsr2l	equ	0xFD9
 17068                           status	equ	0xFD8
 17069                           
 17070 ;; *************** function _strcpy *****************
 17071 ;; Defined at:
 17072 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17073 ;; Parameters:    Size  Location     Type
 17074 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17075 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17076 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17077 ;;		 -> STR_23(20), STR_21(42), 
 17078 ;; Auto vars:     Size  Location     Type
 17079 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17080 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17081 ;; Return value:  Size  Location     Type
 17082 ;;                  2   29[BANK0 ] PTR unsigned char 
 17083 ;; Registers used:
 17084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17085 ;; Tracked objects:
 17086 ;;		On entry : 0/0
 17087 ;;		On exit  : 0/0
 17088 ;;		Unchanged: 0/0
 17089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17090 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17091 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17093 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17094 ;;Total ram usage:        6 bytes
 17095 ;; Hardware stack levels used:    1
 17096 ;; Hardware stack levels required when called:   11
 17097 ;; This function calls:
 17098 ;;		Nothing
 17099 ;; This function is called by:
 17100 ;;		_Terminal
 17101 ;;		_Term_MainSm
 17102 ;; This function uses a non-reentrant model
 17103 ;;
 17104                           
 17105                           	psect	text69
 17106  005B7A                     __ptext69:
 17107                           	opt stack 0
 17108  005B7A                     _strcpy:
 17109                           	opt stack 15
 17110                           
 17111                           ; BSR set to: 0
 17112                           ;incstack = 0
 17113  005B7A  C07D  F081         	movff	strcpy@to,strcpy@cp
 17114  005B7E  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17115  005B82  D005               	goto	l3215
 17116  005B84  0100               	movlb	0	; () banked
 17117  005B86  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17118  005B88  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17119  005B8A  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17120  005B8C  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17121  005B8E                     l3215:
 17122                           
 17123                           ; BSR set to: 0
 17124  005B8E  C07F  FFF6         	movff	strcpy@from,tblptrl
 17125  005B92  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17126  005B96                     	if	0	;tblptru may be non-zero
 17127  005B96                     	endif
 17128  005B96                     	if	0	;tblptru may be non-zero
 17129  005B96                     	endif
 17130  005B96  C081  FFD9         	movff	strcpy@cp,fsr2l
 17131  005B9A  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17132  005B9E  0008               	tblrd		*
 17133  005BA0  CFF5 FFDF          	movff	tablat,indf2
 17134  005BA4  50DF               	movf	indf2,w,c
 17135  005BA6  B4D8               	btfsc	status,2,c
 17136  005BA8  0012               	return	
 17137  005BAA  D7EC               	goto	l3216
 17138  005BAC                     __end_of_strcpy:
 17139                           	opt stack 0
 17140                           tosu	equ	0xFFF
 17141                           tosh	equ	0xFFE
 17142                           tosl	equ	0xFFD
 17143                           pclath	equ	0xFFA
 17144                           tblptru	equ	0xFF8
 17145                           tblptrh	equ	0xFF7
 17146                           tblptrl	equ	0xFF6
 17147                           tablat	equ	0xFF5
 17148                           prodh	equ	0xFF4
 17149                           prodl	equ	0xFF3
 17150                           intcon	equ	0xFF2
 17151                           intcon2	equ	0xFF1
 17152                           intcon3	equ	0xFF0
 17153                           indf0	equ	0xFEF
 17154                           postinc0	equ	0xFEE
 17155                           plusw0	equ	0xFEB
 17156                           fsr0h	equ	0xFEA
 17157                           fsr0l	equ	0xFE9
 17158                           wreg	equ	0xFE8
 17159                           indf1	equ	0xFE7
 17160                           postinc1	equ	0xFE6
 17161                           postdec1	equ	0xFE5
 17162                           plusw1	equ	0xFE3
 17163                           fsr1h	equ	0xFE2
 17164                           fsr1l	equ	0xFE1
 17165                           indf2	equ	0xFDF
 17166                           postinc2	equ	0xFDE
 17167                           postdec2	equ	0xFDD
 17168                           plusw2	equ	0xFDB
 17169                           fsr2h	equ	0xFDA
 17170                           fsr2l	equ	0xFD9
 17171                           status	equ	0xFD8
 17172                           
 17173 ;; *************** function _putUSBUSART *****************
 17174 ;; Defined at:
 17175 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17176 ;; Parameters:    Size  Location     Type
 17177 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17178 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17179 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17180 ;;		 -> RxBuffer(400), 
 17181 ;;  length          1   37[BANK0 ] unsigned char 
 17182 ;; Auto vars:     Size  Location     Type
 17183 ;;		None
 17184 ;; Return value:  Size  Location     Type
 17185 ;;                  1    wreg      void 
 17186 ;; Registers used:
 17187 ;;		wreg, status,2, status,0
 17188 ;; Tracked objects:
 17189 ;;		On entry : 0/0
 17190 ;;		On exit  : 0/0
 17191 ;;		Unchanged: 0/0
 17192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17193 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17196 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17197 ;;Total ram usage:        3 bytes
 17198 ;; Hardware stack levels used:    1
 17199 ;; Hardware stack levels required when called:   11
 17200 ;; This function calls:
 17201 ;;		Nothing
 17202 ;; This function is called by:
 17203 ;;		_Terminal
 17204 ;;		_Term_MainSm
 17205 ;;		_GsmGprsTerminal
 17206 ;; This function uses a non-reentrant model
 17207 ;;
 17208                           
 17209                           	psect	text70
 17210  005E8C                     __ptext70:
 17211                           	opt stack 0
 17212  005E8C                     _putUSBUSART:
 17213                           	opt stack 15
 17214                           
 17215                           ;usb_device_cdc.c: 584: ;
 17216                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17217                           
 17218                           ;incstack = 0
 17219  005E8C  0100               	movlb	0	; () banked
 17220  005E8E  51CD               	movf	_cdc_trf_state& (0+255),w,b
 17221  005E90  A4D8               	btfss	status,2,c
 17222  005E92  0012               	return	
 17223                           
 17224                           ; BSR set to: 0
 17225                           ;usb_device_cdc.c: 586: {
 17226                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17227  005E94  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17228  005E98  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17229                           
 17230                           ; BSR set to: 0
 17231  005E9C  C085  F0CC         	movff	putUSBUSART@length,_cdc_tx_len
 17232                           
 17233                           ; BSR set to: 0
 17234  005EA0  0E01               	movlw	1
 17235  005EA2  0101               	movlb	1	; () banked
 17236  005EA4  6FDB               	movwf	_cdc_mem_type& (0+255),b
 17237                           
 17238                           ; BSR set to: 1
 17239  005EA6  0E01               	movlw	1
 17240  005EA8  0100               	movlb	0	; () banked
 17241  005EAA  6FCD               	movwf	_cdc_trf_state& (0+255),b
 17242  005EAC  0012               	return	
 17243  005EAE                     __end_of_putUSBUSART:
 17244                           	opt stack 0
 17245                           tosu	equ	0xFFF
 17246                           tosh	equ	0xFFE
 17247                           tosl	equ	0xFFD
 17248                           pclath	equ	0xFFA
 17249                           tblptru	equ	0xFF8
 17250                           tblptrh	equ	0xFF7
 17251                           tblptrl	equ	0xFF6
 17252                           tablat	equ	0xFF5
 17253                           prodh	equ	0xFF4
 17254                           prodl	equ	0xFF3
 17255                           intcon	equ	0xFF2
 17256                           intcon2	equ	0xFF1
 17257                           intcon3	equ	0xFF0
 17258                           indf0	equ	0xFEF
 17259                           postinc0	equ	0xFEE
 17260                           plusw0	equ	0xFEB
 17261                           fsr0h	equ	0xFEA
 17262                           fsr0l	equ	0xFE9
 17263                           wreg	equ	0xFE8
 17264                           indf1	equ	0xFE7
 17265                           postinc1	equ	0xFE6
 17266                           postdec1	equ	0xFE5
 17267                           plusw1	equ	0xFE3
 17268                           fsr1h	equ	0xFE2
 17269                           fsr1l	equ	0xFE1
 17270                           indf2	equ	0xFDF
 17271                           postinc2	equ	0xFDE
 17272                           postdec2	equ	0xFDD
 17273                           plusw2	equ	0xFDB
 17274                           fsr2h	equ	0xFDA
 17275                           fsr2l	equ	0xFD9
 17276                           status	equ	0xFD8
 17277                           
 17278 ;; *************** function _itoa *****************
 17279 ;; Defined at:
 17280 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17281 ;; Parameters:    Size  Location     Type
 17282 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17283 ;;		 -> Terminal@Payload(80), 
 17284 ;;  val             2   53[BANK0 ] int 
 17285 ;;  base            2   55[BANK0 ] int 
 17286 ;; Auto vars:     Size  Location     Type
 17287 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17288 ;;		 -> Terminal@Payload(80), 
 17289 ;; Return value:  Size  Location     Type
 17290 ;;                  2   51[BANK0 ] PTR unsigned char 
 17291 ;; Registers used:
 17292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17293 ;; Tracked objects:
 17294 ;;		On entry : 0/0
 17295 ;;		On exit  : 0/0
 17296 ;;		Unchanged: 0/0
 17297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17298 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17299 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17301 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17302 ;;Total ram usage:        8 bytes
 17303 ;; Hardware stack levels used:    1
 17304 ;; Hardware stack levels required when called:   13
 17305 ;; This function calls:
 17306 ;;		_utoa
 17307 ;; This function is called by:
 17308 ;;		_Terminal
 17309 ;; This function uses a non-reentrant model
 17310 ;;
 17311                           
 17312                           	psect	text71
 17313  0057AC                     __ptext71:
 17314                           	opt stack 0
 17315  0057AC                     _itoa:
 17316                           	opt stack 12
 17317                           
 17318                           ; BSR set to: 0
 17319                           ;incstack = 0
 17320  0057AC  C093  F099         	movff	itoa@buf,itoa@cp
 17321  0057B0  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17322  0057B4  0100               	movlb	0	; () banked
 17323  0057B6  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17324  0057B8  D00C               	goto	l2963
 17325                           
 17326                           ; BSR set to: 0
 17327  0057BA  C093  FFD9         	movff	itoa@buf,fsr2l
 17328  0057BE  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17329  0057C2  0E2D               	movlw	45
 17330  0057C4  6EDF               	movwf	indf2,c
 17331                           
 17332                           ; BSR set to: 0
 17333  0057C6  4B93               	infsnz	itoa@buf& (0+255),f,b
 17334  0057C8  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17335                           
 17336                           ; BSR set to: 0
 17337  0057CA  6D95               	negf	itoa@val& (0+255),b
 17338  0057CC  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17339  0057CE  B0D8               	btfsc	status,0,c
 17340  0057D0  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17341  0057D2                     l2963:
 17342                           
 17343                           ; BSR set to: 0
 17344                           
 17345                           ; BSR set to: 0
 17346  0057D2  C093  F08A         	movff	itoa@buf,utoa@buf
 17347  0057D6  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17348  0057DA  C095  F08C         	movff	itoa@val,utoa@val
 17349  0057DE  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17350  0057E2  C097  F08E         	movff	itoa@base,utoa@base
 17351  0057E6  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17352  0057EA  EC04  F021         	call	_utoa	;wreg free
 17353  0057EE  0012               	return	
 17354  0057F0                     __end_of_itoa:
 17355                           	opt stack 0
 17356                           tosu	equ	0xFFF
 17357                           tosh	equ	0xFFE
 17358                           tosl	equ	0xFFD
 17359                           pclath	equ	0xFFA
 17360                           tblptru	equ	0xFF8
 17361                           tblptrh	equ	0xFF7
 17362                           tblptrl	equ	0xFF6
 17363                           tablat	equ	0xFF5
 17364                           prodh	equ	0xFF4
 17365                           prodl	equ	0xFF3
 17366                           intcon	equ	0xFF2
 17367                           intcon2	equ	0xFF1
 17368                           intcon3	equ	0xFF0
 17369                           indf0	equ	0xFEF
 17370                           postinc0	equ	0xFEE
 17371                           plusw0	equ	0xFEB
 17372                           fsr0h	equ	0xFEA
 17373                           fsr0l	equ	0xFE9
 17374                           wreg	equ	0xFE8
 17375                           indf1	equ	0xFE7
 17376                           postinc1	equ	0xFE6
 17377                           postdec1	equ	0xFE5
 17378                           plusw1	equ	0xFE3
 17379                           fsr1h	equ	0xFE2
 17380                           fsr1l	equ	0xFE1
 17381                           indf2	equ	0xFDF
 17382                           postinc2	equ	0xFDE
 17383                           postdec2	equ	0xFDD
 17384                           plusw2	equ	0xFDB
 17385                           fsr2h	equ	0xFDA
 17386                           fsr2l	equ	0xFD9
 17387                           status	equ	0xFD8
 17388                           
 17389 ;; *************** function _utoa *****************
 17390 ;; Defined at:
 17391 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17392 ;; Parameters:    Size  Location     Type
 17393 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17394 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17395 ;;  val             2   44[BANK0 ] unsigned int 
 17396 ;;  base            2   46[BANK0 ] int 
 17397 ;; Auto vars:     Size  Location     Type
 17398 ;;  v               2   48[BANK0 ] unsigned int 
 17399 ;;  c               1   50[BANK0 ] unsigned char 
 17400 ;; Return value:  Size  Location     Type
 17401 ;;                  2   42[BANK0 ] PTR unsigned char 
 17402 ;; Registers used:
 17403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17404 ;; Tracked objects:
 17405 ;;		On entry : 0/0
 17406 ;;		On exit  : 0/0
 17407 ;;		Unchanged: 0/0
 17408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17409 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17410 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17412 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17413 ;;Total ram usage:        9 bytes
 17414 ;; Hardware stack levels used:    1
 17415 ;; Hardware stack levels required when called:   12
 17416 ;; This function calls:
 17417 ;;		___lwdiv
 17418 ;;		___lwmod
 17419 ;; This function is called by:
 17420 ;;		_Term_MainSm
 17421 ;;		_itoa
 17422 ;; This function uses a non-reentrant model
 17423 ;;
 17424                           
 17425                           	psect	text72
 17426  004208                     __ptext72:
 17427                           	opt stack 0
 17428  004208                     _utoa:
 17429                           	opt stack 14
 17430                           
 17431                           ;incstack = 0
 17432  004208  C08C  F090         	movff	utoa@val,utoa@v
 17433  00420C  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17434  004210  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17435  004214  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17436  004218  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17437  00421C  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17438  004220  ECE5  F029         	call	___lwdiv	;wreg free
 17439  004224  C083  F090         	movff	?___lwdiv,utoa@v
 17440  004228  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17441  00422C  0100               	movlb	0	; () banked
 17442  00422E  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17443  004230  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17444                           
 17445                           ; BSR set to: 0
 17446  004232  5190               	movf	utoa@v& (0+255),w,b
 17447  004234  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17448  004236  A4D8               	btfss	status,2,c
 17449  004238  D7EB               	goto	l2967
 17450                           
 17451                           ; BSR set to: 0
 17452                           
 17453                           ; BSR set to: 0
 17454  00423A  C08A  FFD9         	movff	utoa@buf,fsr2l
 17455  00423E  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17456  004242  0E00               	movlw	0
 17457  004244  6EDF               	movwf	indf2,c
 17458                           
 17459                           ; BSR set to: 0
 17460  004246  078A               	decf	utoa@buf& (0+255),f,b
 17461  004248  A0D8               	btfss	status,0,c
 17462  00424A  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17463  00424C                     
 17464                           ; BSR set to: 0
 17465                           
 17466                           ; BSR set to: 0
 17467  00424C  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17468  004250  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17469  004254  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17470  004258  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17471  00425C  ECF8  F02B         	call	___lwmod	;wreg free
 17472  004260  0100               	movlb	0	; () banked
 17473  004262  517D               	movf	?___lwmod& (0+255),w,b
 17474  004264  6F92               	movwf	utoa@c& (0+255),b
 17475                           
 17476                           ; BSR set to: 0
 17477  004266  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17478  00426A  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17479  00426E  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17480  004272  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17481  004276  ECE5  F029         	call	___lwdiv	;wreg free
 17482  00427A  C083  F08C         	movff	?___lwdiv,utoa@val
 17483  00427E  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17484  004282  0E09               	movlw	9
 17485  004284  0100               	movlb	0	; () banked
 17486  004286  6592               	cpfsgt	utoa@c& (0+255),b
 17487  004288  D002               	goto	l2970
 17488                           
 17489                           ; BSR set to: 0
 17490  00428A  0E07               	movlw	7
 17491  00428C  2792               	addwf	utoa@c& (0+255),f,b
 17492  00428E                     l2970:
 17493                           
 17494                           ; BSR set to: 0
 17495  00428E  0E30               	movlw	48
 17496  004290  2792               	addwf	utoa@c& (0+255),f,b
 17497                           
 17498                           ; BSR set to: 0
 17499  004292  C08A  FFD9         	movff	utoa@buf,fsr2l
 17500  004296  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17501  00429A  C092  FFDF         	movff	utoa@c,indf2
 17502                           
 17503                           ; BSR set to: 0
 17504  00429E  078A               	decf	utoa@buf& (0+255),f,b
 17505  0042A0  A0D8               	btfss	status,0,c
 17506  0042A2  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17507                           
 17508                           ; BSR set to: 0
 17509  0042A4  518C               	movf	utoa@val& (0+255),w,b
 17510  0042A6  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17511  0042A8  A4D8               	btfss	status,2,c
 17512  0042AA  D7D0               	goto	l2969
 17513                           
 17514                           ; BSR set to: 0
 17515                           ;	Return value of _utoa is never used
 17516                           
 17517                           ; BSR set to: 0
 17518  0042AC  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17519  0042AE  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17520  0042B0  0012               	return	
 17521  0042B2                     __end_of_utoa:
 17522                           	opt stack 0
 17523                           tosu	equ	0xFFF
 17524                           tosh	equ	0xFFE
 17525                           tosl	equ	0xFFD
 17526                           pclath	equ	0xFFA
 17527                           tblptru	equ	0xFF8
 17528                           tblptrh	equ	0xFF7
 17529                           tblptrl	equ	0xFF6
 17530                           tablat	equ	0xFF5
 17531                           prodh	equ	0xFF4
 17532                           prodl	equ	0xFF3
 17533                           intcon	equ	0xFF2
 17534                           intcon2	equ	0xFF1
 17535                           intcon3	equ	0xFF0
 17536                           indf0	equ	0xFEF
 17537                           postinc0	equ	0xFEE
 17538                           plusw0	equ	0xFEB
 17539                           fsr0h	equ	0xFEA
 17540                           fsr0l	equ	0xFE9
 17541                           wreg	equ	0xFE8
 17542                           indf1	equ	0xFE7
 17543                           postinc1	equ	0xFE6
 17544                           postdec1	equ	0xFE5
 17545                           plusw1	equ	0xFE3
 17546                           fsr1h	equ	0xFE2
 17547                           fsr1l	equ	0xFE1
 17548                           indf2	equ	0xFDF
 17549                           postinc2	equ	0xFDE
 17550                           postdec2	equ	0xFDD
 17551                           plusw2	equ	0xFDB
 17552                           fsr2h	equ	0xFDA
 17553                           fsr2l	equ	0xFD9
 17554                           status	equ	0xFD8
 17555                           
 17556 ;; *************** function ___lwmod *****************
 17557 ;; Defined at:
 17558 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17559 ;; Parameters:    Size  Location     Type
 17560 ;;  dividend        2   29[BANK0 ] unsigned int 
 17561 ;;  divisor         2   31[BANK0 ] unsigned int 
 17562 ;; Auto vars:     Size  Location     Type
 17563 ;;  counter         1   33[BANK0 ] unsigned char 
 17564 ;; Return value:  Size  Location     Type
 17565 ;;                  2   29[BANK0 ] unsigned int 
 17566 ;; Registers used:
 17567 ;;		wreg, status,2, status,0
 17568 ;; Tracked objects:
 17569 ;;		On entry : 0/0
 17570 ;;		On exit  : 0/0
 17571 ;;		Unchanged: 0/0
 17572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17573 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17576 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17577 ;;Total ram usage:        5 bytes
 17578 ;; Hardware stack levels used:    1
 17579 ;; Hardware stack levels required when called:   11
 17580 ;; This function calls:
 17581 ;;		Nothing
 17582 ;; This function is called by:
 17583 ;;		_utoa
 17584 ;; This function uses a non-reentrant model
 17585 ;;
 17586                           
 17587                           	psect	text73
 17588  0057F0                     __ptext73:
 17589                           	opt stack 0
 17590  0057F0                     ___lwmod:
 17591                           	opt stack 14
 17592                           
 17593                           ; BSR set to: 0
 17594                           ;incstack = 0
 17595  0057F0  0100               	movlb	0	; () banked
 17596  0057F2  517F               	movf	___lwmod@divisor& (0+255),w,b
 17597  0057F4  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17598  0057F6  B4D8               	btfsc	status,2,c
 17599  0057F8  D018               	goto	l3065
 17600                           
 17601                           ; BSR set to: 0
 17602  0057FA  0E01               	movlw	1
 17603  0057FC  6F81               	movwf	___lwmod@counter& (0+255),b
 17604  0057FE  D004               	goto	l3060
 17605  005800                     
 17606                           ; BSR set to: 0
 17607                           
 17608                           ; BSR set to: 0
 17609  005800  90D8               	bcf	status,0,c
 17610  005802  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17611  005804  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17612  005806  2B81               	incf	___lwmod@counter& (0+255),f,b
 17613  005808                     l3060:
 17614                           
 17615                           ; BSR set to: 0
 17616                           
 17617                           ; BSR set to: 0
 17618  005808  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17619  00580A  D7FA               	goto	l3061
 17620  00580C                     u10430:
 17621                           
 17622                           ; BSR set to: 0
 17623                           
 17624                           ; BSR set to: 0
 17625                           
 17626                           ; BSR set to: 0
 17627  00580C  517F               	movf	___lwmod@divisor& (0+255),w,b
 17628  00580E  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17629  005810  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17630  005812  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17631  005814  A0D8               	btfss	status,0,c
 17632  005816  D004               	goto	l3064
 17633                           
 17634                           ; BSR set to: 0
 17635  005818  517F               	movf	___lwmod@divisor& (0+255),w,b
 17636  00581A  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17637  00581C  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17638  00581E  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17639  005820                     l3064:
 17640                           
 17641                           ; BSR set to: 0
 17642                           
 17643                           ; BSR set to: 0
 17644  005820  90D8               	bcf	status,0,c
 17645  005822  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17646  005824  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17647                           
 17648                           ; BSR set to: 0
 17649  005826  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17650  005828  D7F1               	goto	u10430
 17651  00582A                     l3065:
 17652                           
 17653                           ; BSR set to: 0
 17654                           
 17655                           ; BSR set to: 0
 17656  00582A  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17657  00582E  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17658                           
 17659                           ; BSR set to: 0
 17660  005832  0012               	return		;funcret
 17661  005834                     __end_of___lwmod:
 17662                           	opt stack 0
 17663                           tosu	equ	0xFFF
 17664                           tosh	equ	0xFFE
 17665                           tosl	equ	0xFFD
 17666                           pclath	equ	0xFFA
 17667                           tblptru	equ	0xFF8
 17668                           tblptrh	equ	0xFF7
 17669                           tblptrl	equ	0xFF6
 17670                           tablat	equ	0xFF5
 17671                           prodh	equ	0xFF4
 17672                           prodl	equ	0xFF3
 17673                           intcon	equ	0xFF2
 17674                           intcon2	equ	0xFF1
 17675                           intcon3	equ	0xFF0
 17676                           indf0	equ	0xFEF
 17677                           postinc0	equ	0xFEE
 17678                           plusw0	equ	0xFEB
 17679                           fsr0h	equ	0xFEA
 17680                           fsr0l	equ	0xFE9
 17681                           wreg	equ	0xFE8
 17682                           indf1	equ	0xFE7
 17683                           postinc1	equ	0xFE6
 17684                           postdec1	equ	0xFE5
 17685                           plusw1	equ	0xFE3
 17686                           fsr1h	equ	0xFE2
 17687                           fsr1l	equ	0xFE1
 17688                           indf2	equ	0xFDF
 17689                           postinc2	equ	0xFDE
 17690                           postdec2	equ	0xFDD
 17691                           plusw2	equ	0xFDB
 17692                           fsr2h	equ	0xFDA
 17693                           fsr2l	equ	0xFD9
 17694                           status	equ	0xFD8
 17695                           
 17696 ;; *************** function _getsUSBUSART *****************
 17697 ;; Defined at:
 17698 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17699 ;; Parameters:    Size  Location     Type
 17700 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17701 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17702 ;;  len             1   38[BANK0 ] unsigned char 
 17703 ;; Auto vars:     Size  Location     Type
 17704 ;;		None
 17705 ;; Return value:  Size  Location     Type
 17706 ;;                  1    wreg      unsigned char 
 17707 ;; Registers used:
 17708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17709 ;; Tracked objects:
 17710 ;;		On entry : 0/0
 17711 ;;		On exit  : 0/0
 17712 ;;		Unchanged: 0/0
 17713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17714 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17716 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17717 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17718 ;;Total ram usage:        4 bytes
 17719 ;; Hardware stack levels used:    1
 17720 ;; Hardware stack levels required when called:   12
 17721 ;; This function calls:
 17722 ;;		_USBTransferOnePacket
 17723 ;; This function is called by:
 17724 ;;		_Terminal
 17725 ;;		_GsmGprsTerminal
 17726 ;; This function uses a non-reentrant model
 17727 ;;
 17728                           
 17729                           	psect	text74
 17730  004710                     __ptext74:
 17731                           	opt stack 0
 17732  004710                     _getsUSBUSART:
 17733                           	opt stack 13
 17734                           
 17735                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17736                           
 17737                           ; BSR set to: 0
 17738                           ;incstack = 0
 17739  004710  0E00               	movlw	0
 17740  004712  0100               	movlb	0	; () banked
 17741  004714  6FCE               	movwf	_cdc_rx_len& (0+255),b
 17742                           
 17743                           ; BSR set to: 0
 17744                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17745  004716  51C4               	movf	_CDCDataOutHandle& (0+255),w,b
 17746  004718  11C5               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17747  00471A  B4D8               	btfsc	status,2,c
 17748  00471C  D006               	goto	u10960
 17749                           
 17750                           ; BSR set to: 0
 17751  00471E  C0C4  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17752  004722  C0C5  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17753  004726  BEDF               	btfsc	indf2,7,c
 17754  004728  D03B               	goto	l1909
 17755  00472A                     u10960:
 17756                           
 17757                           ; BSR set to: 0
 17758                           ;usb_device_cdc.c: 493: {
 17759                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17760                           
 17761                           ; BSR set to: 0
 17762  00472A  EE20 F001          	lfsr	2,1
 17763  00472E  51C4               	movf	_CDCDataOutHandle& (0+255),w,b
 17764  004730  26D9               	addwf	fsr2l,f,c
 17765  004732  51C5               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17766  004734  22DA               	addwfc	fsr2h,f,c
 17767  004736  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17768  004738  5CDE               	subwf	postinc2,w,c
 17769  00473A  B0D8               	btfsc	status,0,c
 17770  00473C  D008               	goto	l1912
 17771                           
 17772                           ; BSR set to: 0
 17773                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17774  00473E  EE20 F001          	lfsr	2,1
 17775  004742  51C4               	movf	_CDCDataOutHandle& (0+255),w,b
 17776  004744  26D9               	addwf	fsr2l,f,c
 17777  004746  51C5               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17778  004748  22DA               	addwfc	fsr2h,f,c
 17779  00474A  50DF               	movf	indf2,w,c
 17780  00474C  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17781  00474E                     l1912:
 17782                           
 17783                           ; BSR set to: 0
 17784                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17785                           
 17786                           ; BSR set to: 0
 17787  00474E  0E00               	movlw	0
 17788  004750  6FCE               	movwf	_cdc_rx_len& (0+255),b
 17789  004752  D013               	goto	l1913
 17790  004754                     
 17791                           ; BSR set to: 0
 17792                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17793                           
 17794                           ; BSR set to: 0
 17795  004754  51CE               	movf	_cdc_rx_len& (0+255),w,b
 17796  004756  0D01               	mullw	1
 17797  004758  0E50               	movlw	low _cdc_data_rx
 17798  00475A  24F3               	addwf	prodl,w,c
 17799  00475C  6ED9               	movwf	fsr2l,c
 17800  00475E  0E05               	movlw	high _cdc_data_rx
 17801  004760  20F4               	addwfc	prodh,w,c
 17802  004762  6EDA               	movwf	fsr2h,c
 17803  004764  51CE               	movf	_cdc_rx_len& (0+255),w,b
 17804  004766  0D01               	mullw	1
 17805  004768  50F3               	movf	prodl,w,c
 17806  00476A  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17807  00476C  6EE1               	movwf	fsr1l,c
 17808  00476E  50F4               	movf	prodh,w,c
 17809  004770  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17810  004772  6EE2               	movwf	fsr1h,c
 17811  004774  CFDF FFE7          	movff	indf2,indf1
 17812                           
 17813                           ; BSR set to: 0
 17814  004778  2BCE               	incf	_cdc_rx_len& (0+255),f,b
 17815  00477A                     l1913:
 17816                           
 17817                           ; BSR set to: 0
 17818                           
 17819                           ; BSR set to: 0
 17820  00477A  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17821  00477C  5DCE               	subwf	_cdc_rx_len& (0+255),w,b
 17822  00477E  A0D8               	btfss	status,0,c
 17823  004780  D7E9               	goto	l1914
 17824                           
 17825                           ; BSR set to: 0
 17826                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17827                           
 17828                           ; BSR set to: 0
 17829  004782  0E00               	movlw	0
 17830  004784  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17831  004786  0E50               	movlw	low _cdc_data_rx
 17832  004788  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17833  00478A  0E05               	movlw	high _cdc_data_rx
 17834  00478C  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17835  00478E  0E40               	movlw	64
 17836  004790  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17837  004792  0E02               	movlw	2
 17838  004794  EC9E  F01F         	call	_USBTransferOnePacket
 17839  004798  C07D  F0C4         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17840  00479C  C07E  F0C5         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17841  0047A0                     l1909:
 17842                           
 17843                           ;usb_device_cdc.c: 513: }
 17844                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17845  0047A0  0100               	movlb	0	; () banked
 17846  0047A2  51CE               	movf	_cdc_rx_len& (0+255),w,b
 17847  0047A4  0012               	return	
 17848  0047A6                     __end_of_getsUSBUSART:
 17849                           	opt stack 0
 17850                           tosu	equ	0xFFF
 17851                           tosh	equ	0xFFE
 17852                           tosl	equ	0xFFD
 17853                           pclath	equ	0xFFA
 17854                           tblptru	equ	0xFF8
 17855                           tblptrh	equ	0xFF7
 17856                           tblptrl	equ	0xFF6
 17857                           tablat	equ	0xFF5
 17858                           prodh	equ	0xFF4
 17859                           prodl	equ	0xFF3
 17860                           intcon	equ	0xFF2
 17861                           intcon2	equ	0xFF1
 17862                           intcon3	equ	0xFF0
 17863                           indf0	equ	0xFEF
 17864                           postinc0	equ	0xFEE
 17865                           plusw0	equ	0xFEB
 17866                           fsr0h	equ	0xFEA
 17867                           fsr0l	equ	0xFE9
 17868                           wreg	equ	0xFE8
 17869                           indf1	equ	0xFE7
 17870                           postinc1	equ	0xFE6
 17871                           postdec1	equ	0xFE5
 17872                           plusw1	equ	0xFE3
 17873                           fsr1h	equ	0xFE2
 17874                           fsr1l	equ	0xFE1
 17875                           indf2	equ	0xFDF
 17876                           postinc2	equ	0xFDE
 17877                           postdec2	equ	0xFDD
 17878                           plusw2	equ	0xFDB
 17879                           fsr2h	equ	0xFDA
 17880                           fsr2l	equ	0xFD9
 17881                           status	equ	0xFD8
 17882                           
 17883 ;; *************** function _USBTransferOnePacket *****************
 17884 ;; Defined at:
 17885 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 17886 ;; Parameters:    Size  Location     Type
 17887 ;;  ep              1    wreg     unsigned char 
 17888 ;;  dir             1   29[BANK0 ] unsigned char 
 17889 ;;  data            2   30[BANK0 ] PTR unsigned char 
 17890 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17891 ;;  len             1   32[BANK0 ] unsigned char 
 17892 ;; Auto vars:     Size  Location     Type
 17893 ;;  ep              1   33[BANK0 ] unsigned char 
 17894 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 17895 ;;		 -> NULL(0), BDT(48), 
 17896 ;; Return value:  Size  Location     Type
 17897 ;;                  2   29[BANK0 ] PTR void 
 17898 ;; Registers used:
 17899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17900 ;; Tracked objects:
 17901 ;;		On entry : 0/0
 17902 ;;		On exit  : 0/0
 17903 ;;		Unchanged: 0/0
 17904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17905 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17906 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17908 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17909 ;;Total ram usage:        7 bytes
 17910 ;; Hardware stack levels used:    1
 17911 ;; Hardware stack levels required when called:   11
 17912 ;; This function calls:
 17913 ;;		Nothing
 17914 ;; This function is called by:
 17915 ;;		_CDCInitEP
 17916 ;;		_getsUSBUSART
 17917 ;;		_CDCTxService
 17918 ;;		_USBCDCEventHandler
 17919 ;; This function uses a non-reentrant model
 17920 ;;
 17921                           
 17922                           	psect	text75
 17923  003F3C                     __ptext75:
 17924                           	opt stack 0
 17925  003F3C                     _USBTransferOnePacket:
 17926                           	opt stack 13
 17927                           
 17928                           ; BSR set to: 0
 17929                           ;incstack = 0
 17930                           ;USBTransferOnePacket@ep stored from wreg
 17931  003F3C  0100               	movlb	0	; () banked
 17932  003F3E  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 17933                           
 17934                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 17935                           ;usb_device.c: 1018: if(dir != 0)
 17936  003F40  0100               	movlb	0	; () banked
 17937  003F42  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17938  003F44  B4D8               	btfsc	status,2,c
 17939  003F46  D007               	goto	l1633
 17940                           
 17941                           ; BSR set to: 0
 17942                           ;usb_device.c: 1019: {
 17943                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 17944  003F48  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17945  003F4A  0D02               	mullw	2
 17946  003F4C  0EBE               	movlw	low _pBDTEntryIn
 17947  003F4E  24F3               	addwf	prodl,w,c
 17948  003F50  6ED9               	movwf	fsr2l,c
 17949  003F52  0E00               	movlw	high _pBDTEntryIn
 17950  003F54  D006               	goto	L16
 17951  003F56                     l1633:
 17952                           
 17953                           ; BSR set to: 0
 17954                           ;usb_device.c: 1023: else
 17955                           ;usb_device.c: 1024: {
 17956                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 17957                           
 17958                           ; BSR set to: 0
 17959  003F56  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17960  003F58  0D02               	mullw	2
 17961  003F5A  0E0E               	movlw	low _pBDTEntryOut
 17962  003F5C  24F3               	addwf	prodl,w,c
 17963  003F5E  6ED9               	movwf	fsr2l,c
 17964  003F60  0E03               	movlw	high _pBDTEntryOut
 17965  003F62                     L16:
 17966  003F62  20F4               	addwfc	prodh,w,c
 17967  003F64  6EDA               	movwf	fsr2h,c
 17968  003F66  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 17969  003F6A  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 17970                           
 17971                           ; BSR set to: 0
 17972                           ;usb_device.c: 1027: }
 17973                           ;usb_device.c: 1031: if(handle == 0)
 17974                           
 17975                           ; BSR set to: 0
 17976  003F6E  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17977  003F70  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17978  003F72  A4D8               	btfss	status,2,c
 17979  003F74  D005               	goto	l1635
 17980                           
 17981                           ; BSR set to: 0
 17982                           ;usb_device.c: 1032: {
 17983                           ;usb_device.c: 1033: return 0;
 17984  003F76  0E00               	movlw	0
 17985  003F78  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 17986  003F7A  0E00               	movlw	0
 17987  003F7C  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 17988                           
 17989                           ; BSR set to: 0
 17990  003F7E  0012               	return	
 17991  003F80                     l1635:
 17992                           
 17993                           ; BSR set to: 0
 17994                           ;usb_device.c: 1034: }
 17995                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 17996                           
 17997                           ; BSR set to: 0
 17998  003F80  EE20 F002          	lfsr	2,2
 17999  003F84  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18000  003F86  26D9               	addwf	fsr2l,f,c
 18001  003F88  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18002  003F8A  22DA               	addwfc	fsr2h,f,c
 18003  003F8C  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18004  003F90  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18005                           
 18006                           ;usb_device.c: 1048: handle->CNT = len;
 18007  003F94  EE20 F001          	lfsr	2,1
 18008  003F98  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18009  003F9A  26D9               	addwf	fsr2l,f,c
 18010  003F9C  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18011  003F9E  22DA               	addwfc	fsr2h,f,c
 18012  003FA0  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18013                           
 18014                           ; BSR set to: 0
 18015                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18016  003FA4  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18017  003FA8  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18018  003FAC  0E40               	movlw	64
 18019  003FAE  16DF               	andwf	indf2,f,c
 18020                           
 18021                           ; BSR set to: 0
 18022                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18023  003FB0  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18024  003FB4  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18025  003FB8  0E00               	movlw	0
 18026  003FBA  86DB               	bsf	plusw2,3,c
 18027                           
 18028                           ; BSR set to: 0
 18029                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18030  003FBC  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18031  003FC0  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18032  003FC4  0E00               	movlw	0
 18033  003FC6  8EDB               	bsf	plusw2,7,c
 18034                           
 18035                           ; BSR set to: 0
 18036                           ;usb_device.c: 1054: if(dir != 0)
 18037  003FC8  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18038  003FCA  B4D8               	btfsc	status,2,c
 18039  003FCC  D007               	goto	l1637
 18040                           
 18041                           ; BSR set to: 0
 18042                           ;usb_device.c: 1055: {
 18043                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18044  003FCE  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18045  003FD0  0D02               	mullw	2
 18046  003FD2  0EBE               	movlw	low _pBDTEntryIn
 18047  003FD4  24F3               	addwf	prodl,w,c
 18048  003FD6  6ED9               	movwf	fsr2l,c
 18049  003FD8  0E00               	movlw	high _pBDTEntryIn
 18050  003FDA  D006               	goto	L17
 18051  003FDC                     l1637:
 18052                           
 18053                           ; BSR set to: 0
 18054                           ;usb_device.c: 1059: else
 18055                           ;usb_device.c: 1060: {
 18056                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18057                           
 18058                           ; BSR set to: 0
 18059  003FDC  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18060  003FDE  0D02               	mullw	2
 18061  003FE0  0E0E               	movlw	low _pBDTEntryOut
 18062  003FE2  24F3               	addwf	prodl,w,c
 18063  003FE4  6ED9               	movwf	fsr2l,c
 18064  003FE6  0E03               	movlw	high _pBDTEntryOut
 18065  003FE8                     L17:
 18066  003FE8  20F4               	addwfc	prodh,w,c
 18067  003FEA  6EDA               	movwf	fsr2h,c
 18068  003FEC  0E04               	movlw	4
 18069  003FEE  1ADF               	xorwf	indf2,f,c
 18070                           
 18071                           ; BSR set to: 0
 18072                           ;usb_device.c: 1063: }
 18073                           ;usb_device.c: 1064: return (void*)handle;
 18074                           
 18075                           ; BSR set to: 0
 18076  003FF0  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18077  003FF4  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18078  003FF8  0012               	return	
 18079  003FFA                     __end_of_USBTransferOnePacket:
 18080                           	opt stack 0
 18081                           tosu	equ	0xFFF
 18082                           tosh	equ	0xFFE
 18083                           tosl	equ	0xFFD
 18084                           pclath	equ	0xFFA
 18085                           tblptru	equ	0xFF8
 18086                           tblptrh	equ	0xFF7
 18087                           tblptrl	equ	0xFF6
 18088                           tablat	equ	0xFF5
 18089                           prodh	equ	0xFF4
 18090                           prodl	equ	0xFF3
 18091                           intcon	equ	0xFF2
 18092                           intcon2	equ	0xFF1
 18093                           intcon3	equ	0xFF0
 18094                           indf0	equ	0xFEF
 18095                           postinc0	equ	0xFEE
 18096                           plusw0	equ	0xFEB
 18097                           fsr0h	equ	0xFEA
 18098                           fsr0l	equ	0xFE9
 18099                           wreg	equ	0xFE8
 18100                           indf1	equ	0xFE7
 18101                           postinc1	equ	0xFE6
 18102                           postdec1	equ	0xFE5
 18103                           plusw1	equ	0xFE3
 18104                           fsr1h	equ	0xFE2
 18105                           fsr1l	equ	0xFE1
 18106                           indf2	equ	0xFDF
 18107                           postinc2	equ	0xFDE
 18108                           postdec2	equ	0xFDD
 18109                           plusw2	equ	0xFDB
 18110                           fsr2h	equ	0xFDA
 18111                           fsr2l	equ	0xFD9
 18112                           status	equ	0xFD8
 18113                           
 18114 ;; *************** function _atoi *****************
 18115 ;; Defined at:
 18116 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18117 ;; Parameters:    Size  Location     Type
 18118 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18119 ;;		 -> Terminal@Len(4), 
 18120 ;; Auto vars:     Size  Location     Type
 18121 ;;  a               2   40[BANK0 ] int 
 18122 ;;  sign            1   39[BANK0 ] unsigned char 
 18123 ;; Return value:  Size  Location     Type
 18124 ;;                  2   35[BANK0 ] int 
 18125 ;; Registers used:
 18126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18127 ;; Tracked objects:
 18128 ;;		On entry : 0/0
 18129 ;;		On exit  : 0/0
 18130 ;;		Unchanged: 0/0
 18131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18132 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18133 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18134 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18135 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18136 ;;Total ram usage:        7 bytes
 18137 ;; Hardware stack levels used:    1
 18138 ;; Hardware stack levels required when called:   12
 18139 ;; This function calls:
 18140 ;;		___wmul
 18141 ;;		_isdigit
 18142 ;; This function is called by:
 18143 ;;		_Terminal
 18144 ;; This function uses a non-reentrant model
 18145 ;;
 18146                           
 18147                           	psect	text76
 18148  00367C                     __ptext76:
 18149                           	opt stack 0
 18150  00367C                     _atoi:
 18151                           	opt stack 13
 18152                           
 18153                           ; BSR set to: 0
 18154                           ;incstack = 0
 18155  00367C  D003               	goto	l2776
 18156  00367E  0100               	movlb	0	; () banked
 18157  003680  4B83               	infsnz	atoi@s& (0+255),f,b
 18158  003682  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18159  003684                     l2776:
 18160                           
 18161                           ; BSR set to: 0
 18162  003684  C083  FFD9         	movff	atoi@s,fsr2l
 18163  003688  C084  FFDA         	movff	atoi@s+1,fsr2h
 18164  00368C  0E20               	movlw	32
 18165  00368E  18DE               	xorwf	postinc2,w,c
 18166  003690  B4D8               	btfsc	status,2,c
 18167  003692  D7F5               	goto	l2777
 18168  003694  C083  FFD9         	movff	atoi@s,fsr2l
 18169  003698  C084  FFDA         	movff	atoi@s+1,fsr2h
 18170  00369C  0E09               	movlw	9
 18171  00369E  18DE               	xorwf	postinc2,w,c
 18172  0036A0  B4D8               	btfsc	status,2,c
 18173  0036A2  D7ED               	goto	l2777
 18174  0036A4  0E00               	movlw	0
 18175  0036A6  0100               	movlb	0	; () banked
 18176  0036A8  6F89               	movwf	(atoi@a+1)& (0+255),b
 18177  0036AA  0E00               	movlw	0
 18178  0036AC  6F88               	movwf	atoi@a& (0+255),b
 18179  0036AE  0E00               	movlw	0
 18180  0036B0  6F87               	movwf	atoi@sign& (0+255),b
 18181                           
 18182                           ; BSR set to: 0
 18183  0036B2  C083  FFD9         	movff	atoi@s,fsr2l
 18184  0036B6  C084  FFDA         	movff	atoi@s+1,fsr2h
 18185  0036BA  0E2D               	movlw	45
 18186  0036BC  18DE               	xorwf	postinc2,w,c
 18187  0036BE  A4D8               	btfss	status,2,c
 18188  0036C0  D002               	goto	l2779
 18189                           
 18190                           ; BSR set to: 0
 18191  0036C2  2B87               	incf	atoi@sign& (0+255),f,b
 18192  0036C4  D026               	goto	l12239
 18193  0036C6                     l2779:
 18194                           
 18195                           ; BSR set to: 0
 18196                           
 18197                           ; BSR set to: 0
 18198  0036C6  C083  FFD9         	movff	atoi@s,fsr2l
 18199  0036CA  C084  FFDA         	movff	atoi@s+1,fsr2h
 18200  0036CE  0E2B               	movlw	43
 18201  0036D0  18DE               	xorwf	postinc2,w,c
 18202  0036D2  A4D8               	btfss	status,2,c
 18203  0036D4  D020               	goto	l2782
 18204  0036D6  D01D               	goto	l12239
 18205  0036D8                     
 18206                           ; BSR set to: 0
 18207  0036D8  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18208  0036DC  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18209  0036E0  0E00               	movlw	0
 18210  0036E2  0100               	movlb	0	; () banked
 18211  0036E4  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18212  0036E6  0E0A               	movlw	10
 18213  0036E8  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18214  0036EA  ECA4  F02E         	call	___wmul	;wreg free
 18215  0036EE  C083  FFD9         	movff	atoi@s,fsr2l
 18216  0036F2  C084  FFDA         	movff	atoi@s+1,fsr2h
 18217  0036F6  50DF               	movf	indf2,w,c
 18218  0036F8  0100               	movlb	0	; () banked
 18219  0036FA  6F85               	movwf	??_atoi& (0+255),b
 18220  0036FC  6B86               	clrf	(??_atoi+1)& (0+255),b
 18221  0036FE  517D               	movf	?___wmul& (0+255),w,b
 18222  003700  2785               	addwf	??_atoi& (0+255),f,b
 18223  003702  517E               	movf	(?___wmul+1)& (0+255),w,b
 18224  003704  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18225  003706  0ED0               	movlw	208
 18226  003708  2585               	addwf	??_atoi& (0+255),w,b
 18227  00370A  6F88               	movwf	atoi@a& (0+255),b
 18228  00370C  0EFF               	movlw	255
 18229  00370E  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18230  003710  6F89               	movwf	(atoi@a+1)& (0+255),b
 18231  003712                     l12239:
 18232                           
 18233                           ; BSR set to: 0
 18234  003712  4B83               	infsnz	atoi@s& (0+255),f,b
 18235  003714  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18236  003716                     l2782:
 18237                           
 18238                           ; BSR set to: 0
 18239                           
 18240                           ; BSR set to: 0
 18241  003716  C083  FFD9         	movff	atoi@s,fsr2l
 18242  00371A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18243  00371E  50DF               	movf	indf2,w,c
 18244  003720  EC57  F02F         	call	_isdigit
 18245  003724  B0D8               	btfsc	status,0,c
 18246  003726  D7D8               	goto	l2783
 18247  003728  0100               	movlb	0	; () banked
 18248  00372A  5187               	movf	atoi@sign& (0+255),w,b
 18249  00372C  B4D8               	btfsc	status,2,c
 18250  00372E  D00D               	goto	l2785
 18251                           
 18252                           ; BSR set to: 0
 18253  003730  C088  F085         	movff	atoi@a,??_atoi
 18254  003734  C089  F086         	movff	atoi@a+1,??_atoi+1
 18255  003738  1F85               	comf	??_atoi& (0+255),f,b
 18256  00373A  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18257  00373C  4B85               	infsnz	??_atoi& (0+255),f,b
 18258  00373E  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18259  003740  C085  F083         	movff	??_atoi,?_atoi
 18260  003744  C086  F084         	movff	??_atoi+1,?_atoi+1
 18261  003748  0012               	return	
 18262  00374A                     l2785:
 18263                           
 18264                           ; BSR set to: 0
 18265  00374A  C088  F083         	movff	atoi@a,?_atoi
 18266  00374E  C089  F084         	movff	atoi@a+1,?_atoi+1
 18267                           
 18268                           ; BSR set to: 0
 18269  003752  0012               	return		;funcret
 18270  003754                     __end_of_atoi:
 18271                           	opt stack 0
 18272                           tosu	equ	0xFFF
 18273                           tosh	equ	0xFFE
 18274                           tosl	equ	0xFFD
 18275                           pclath	equ	0xFFA
 18276                           tblptru	equ	0xFF8
 18277                           tblptrh	equ	0xFF7
 18278                           tblptrl	equ	0xFF6
 18279                           tablat	equ	0xFF5
 18280                           prodh	equ	0xFF4
 18281                           prodl	equ	0xFF3
 18282                           intcon	equ	0xFF2
 18283                           intcon2	equ	0xFF1
 18284                           intcon3	equ	0xFF0
 18285                           indf0	equ	0xFEF
 18286                           postinc0	equ	0xFEE
 18287                           plusw0	equ	0xFEB
 18288                           fsr0h	equ	0xFEA
 18289                           fsr0l	equ	0xFE9
 18290                           wreg	equ	0xFE8
 18291                           indf1	equ	0xFE7
 18292                           postinc1	equ	0xFE6
 18293                           postdec1	equ	0xFE5
 18294                           plusw1	equ	0xFE3
 18295                           fsr1h	equ	0xFE2
 18296                           fsr1l	equ	0xFE1
 18297                           indf2	equ	0xFDF
 18298                           postinc2	equ	0xFDE
 18299                           postdec2	equ	0xFDD
 18300                           plusw2	equ	0xFDB
 18301                           fsr2h	equ	0xFDA
 18302                           fsr2l	equ	0xFD9
 18303                           status	equ	0xFD8
 18304                           
 18305 ;; *************** function _isdigit *****************
 18306 ;; Defined at:
 18307 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18308 ;; Parameters:    Size  Location     Type
 18309 ;;  c               1    wreg     unsigned char 
 18310 ;; Auto vars:     Size  Location     Type
 18311 ;;  c               1   31[BANK0 ] unsigned char 
 18312 ;; Return value:  Size  Location     Type
 18313 ;;		None               void
 18314 ;; Registers used:
 18315 ;;		wreg, status,2, status,0
 18316 ;; Tracked objects:
 18317 ;;		On entry : 0/0
 18318 ;;		On exit  : 0/0
 18319 ;;		Unchanged: 0/0
 18320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18322 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18323 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18324 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18325 ;;Total ram usage:        3 bytes
 18326 ;; Hardware stack levels used:    1
 18327 ;; Hardware stack levels required when called:   11
 18328 ;; This function calls:
 18329 ;;		Nothing
 18330 ;; This function is called by:
 18331 ;;		_atoi
 18332 ;;		_strtol
 18333 ;;		_xtoi
 18334 ;;		_isxdigit
 18335 ;; This function uses a non-reentrant model
 18336 ;;
 18337                           
 18338                           	psect	text77
 18339  005EAE                     __ptext77:
 18340                           	opt stack 0
 18341  005EAE                     _isdigit:
 18342                           	opt stack 12
 18343                           
 18344                           ; BSR set to: 0
 18345                           ;incstack = 0
 18346                           ;isdigit@c stored from wreg
 18347  005EAE  0100               	movlb	0	; () banked
 18348  005EB0  6F7F               	movwf	isdigit@c& (0+255),b
 18349  005EB2  0E00               	movlw	0
 18350  005EB4  0100               	movlb	0	; () banked
 18351  005EB6  6F7E               	movwf	_isdigit$6150& (0+255),b
 18352                           
 18353                           ; BSR set to: 0
 18354  005EB8  0E3A               	movlw	58
 18355  005EBA  617F               	cpfslt	isdigit@c& (0+255),b
 18356  005EBC  D005               	goto	l2957
 18357                           
 18358                           ; BSR set to: 0
 18359  005EBE  0E2F               	movlw	47
 18360  005EC0  657F               	cpfsgt	isdigit@c& (0+255),b
 18361  005EC2  D002               	goto	l2957
 18362                           
 18363                           ; BSR set to: 0
 18364  005EC4  0E01               	movlw	1
 18365  005EC6  6F7E               	movwf	_isdigit$6150& (0+255),b
 18366  005EC8                     l2957:
 18367                           
 18368                           ; BSR set to: 0
 18369                           
 18370                           ; BSR set to: 0
 18371  005EC8  C07E  F07D         	movff	_isdigit$6150,??_isdigit
 18372  005ECC  317D               	rrcf	??_isdigit& (0+255),w,b
 18373  005ECE  0012               	return	
 18374  005ED0                     __end_of_isdigit:
 18375                           	opt stack 0
 18376                           tosu	equ	0xFFF
 18377                           tosh	equ	0xFFE
 18378                           tosl	equ	0xFFD
 18379                           pclath	equ	0xFFA
 18380                           tblptru	equ	0xFF8
 18381                           tblptrh	equ	0xFF7
 18382                           tblptrl	equ	0xFF6
 18383                           tablat	equ	0xFF5
 18384                           prodh	equ	0xFF4
 18385                           prodl	equ	0xFF3
 18386                           intcon	equ	0xFF2
 18387                           intcon2	equ	0xFF1
 18388                           intcon3	equ	0xFF0
 18389                           indf0	equ	0xFEF
 18390                           postinc0	equ	0xFEE
 18391                           plusw0	equ	0xFEB
 18392                           fsr0h	equ	0xFEA
 18393                           fsr0l	equ	0xFE9
 18394                           wreg	equ	0xFE8
 18395                           indf1	equ	0xFE7
 18396                           postinc1	equ	0xFE6
 18397                           postdec1	equ	0xFE5
 18398                           plusw1	equ	0xFE3
 18399                           fsr1h	equ	0xFE2
 18400                           fsr1l	equ	0xFE1
 18401                           indf2	equ	0xFDF
 18402                           postinc2	equ	0xFDE
 18403                           postdec2	equ	0xFDD
 18404                           plusw2	equ	0xFDB
 18405                           fsr2h	equ	0xFDA
 18406                           fsr2l	equ	0xFD9
 18407                           status	equ	0xFD8
 18408                           
 18409 ;; *************** function _OsTmr_Wait *****************
 18410 ;; Defined at:
 18411 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 18412 ;; Parameters:    Size  Location     Type
 18413 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 18414 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 18415 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 18416 ;; Auto vars:     Size  Location     Type
 18417 ;;  Ret             1   65[BANK0 ] enum E7749
 18418 ;; Return value:  Size  Location     Type
 18419 ;;                  1    wreg      enum E7749
 18420 ;; Registers used:
 18421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18422 ;; Tracked objects:
 18423 ;;		On entry : 0/0
 18424 ;;		On exit  : 0/0
 18425 ;;		Unchanged: 0/0
 18426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18427 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18428 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18430 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18431 ;;Total ram usage:        7 bytes
 18432 ;; Hardware stack levels used:    1
 18433 ;; Hardware stack levels required when called:   14
 18434 ;; This function calls:
 18435 ;;		_OsTmr_GetTimerStatus
 18436 ;;		_OsTmr_StartTimer
 18437 ;; This function is called by:
 18438 ;;		_Terminal
 18439 ;;		_I2cSlv_QueryI2cData
 18440 ;; This function uses a non-reentrant model
 18441 ;;
 18442                           
 18443                           	psect	text78
 18444  004B82                     __ptext78:
 18445                           	opt stack 0
 18446  004B82                     _OsTmr_Wait:
 18447                           	opt stack 11
 18448                           
 18449                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 18450                           
 18451                           ; BSR set to: 0
 18452                           ;incstack = 0
 18453  004B82  0E00               	movlw	0
 18454  004B84  0100               	movlb	0	; () banked
 18455  004B86  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18456                           
 18457                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 18458  004B88  D02D               	goto	l855
 18459  004B8A                     
 18460                           ; BSR set to: 0
 18461                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 18462                           
 18463                           ; BSR set to: 0
 18464  004B8A  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 18465  004B8E  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 18466  004B92  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 18467  004B96  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 18468  004B9A  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 18469  004B9E  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 18470  004BA2  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 18471                           
 18472                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 18473  004BA6  0100               	movlb	0	; () banked
 18474  004BA8  EE20 F00A          	lfsr	2,10
 18475  004BAC  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18476  004BAE  26D9               	addwf	fsr2l,f,c
 18477  004BB0  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18478  004BB2  22DA               	addwfc	fsr2h,f,c
 18479  004BB4  0E01               	movlw	1
 18480  004BB6  6EDF               	movwf	indf2,c
 18481                           
 18482                           ;os_timers.c: 165: break;
 18483  004BB8  D022               	goto	l857
 18484  004BBA                     
 18485                           ; BSR set to: 0
 18486                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 18487                           
 18488                           ; BSR set to: 0
 18489  004BBA  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 18490  004BBE  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 18491  004BC2  EC67  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 18492  004BC6  06E8               	decf	wreg,f,c
 18493  004BC8  A4D8               	btfss	status,2,c
 18494  004BCA  D019               	goto	l857
 18495                           
 18496                           ;os_timers.c: 170: {
 18497                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 18498  004BCC  0100               	movlb	0	; () banked
 18499  004BCE  EE20 F00A          	lfsr	2,10
 18500  004BD2  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18501  004BD4  26D9               	addwf	fsr2l,f,c
 18502  004BD6  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18503  004BD8  22DA               	addwfc	fsr2h,f,c
 18504  004BDA  0E00               	movlw	0
 18505  004BDC  6EDF               	movwf	indf2,c
 18506                           
 18507                           ; BSR set to: 0
 18508                           ;os_timers.c: 174: Ret = DelayExpired;
 18509  004BDE  0E01               	movlw	1
 18510  004BE0  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18511                           
 18512                           ; BSR set to: 0
 18513                           ;os_timers.c: 180: }
 18514                           
 18515                           ; BSR set to: 0
 18516                           ;os_timers.c: 179: break;
 18517                           
 18518                           ;os_timers.c: 178: default:
 18519                           
 18520                           ; BSR set to: 0
 18521                           ;os_timers.c: 175: }
 18522                           ;os_timers.c: 176: break;
 18523  004BE2  D00D               	goto	l857
 18524  004BE4                     l855:
 18525                           
 18526                           ; BSR set to: 0
 18527                           
 18528                           ; BSR set to: 0
 18529  004BE4  EE20 F00A          	lfsr	2,10
 18530  004BE8  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18531  004BEA  26D9               	addwf	fsr2l,f,c
 18532  004BEC  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18533  004BEE  22DA               	addwfc	fsr2h,f,c
 18534  004BF0  50DF               	movf	indf2,w,c
 18535                           
 18536                           ; Switch size 1, requested type "space"
 18537                           ; Number of cases is 2, Range of values is 0 to 1
 18538                           ; switch strategies available:
 18539                           ; Name         Instructions Cycles
 18540                           ; simple_byte            7     4 (average)
 18541                           ;	Chosen strategy is simple_byte
 18542  004BF2  0A00               	xorlw	0	; case 0
 18543  004BF4  B4D8               	btfsc	status,2,c
 18544  004BF6  D7C9               	goto	l856
 18545  004BF8  0A01               	xorlw	1	; case 1
 18546  004BFA  B4D8               	btfsc	status,2,c
 18547  004BFC  D7DE               	goto	l858
 18548  004BFE                     l857:
 18549                           
 18550                           ;os_timers.c: 182: return Ret;
 18551                           
 18552                           ; BSR set to: 0
 18553  004BFE  0100               	movlb	0	; () banked
 18554  004C00  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 18555  004C02  0012               	return	
 18556  004C04                     __end_of_OsTmr_Wait:
 18557                           	opt stack 0
 18558                           tosu	equ	0xFFF
 18559                           tosh	equ	0xFFE
 18560                           tosl	equ	0xFFD
 18561                           pclath	equ	0xFFA
 18562                           tblptru	equ	0xFF8
 18563                           tblptrh	equ	0xFF7
 18564                           tblptrl	equ	0xFF6
 18565                           tablat	equ	0xFF5
 18566                           prodh	equ	0xFF4
 18567                           prodl	equ	0xFF3
 18568                           intcon	equ	0xFF2
 18569                           intcon2	equ	0xFF1
 18570                           intcon3	equ	0xFF0
 18571                           indf0	equ	0xFEF
 18572                           postinc0	equ	0xFEE
 18573                           plusw0	equ	0xFEB
 18574                           fsr0h	equ	0xFEA
 18575                           fsr0l	equ	0xFE9
 18576                           wreg	equ	0xFE8
 18577                           indf1	equ	0xFE7
 18578                           postinc1	equ	0xFE6
 18579                           postdec1	equ	0xFE5
 18580                           plusw1	equ	0xFE3
 18581                           fsr1h	equ	0xFE2
 18582                           fsr1l	equ	0xFE1
 18583                           indf2	equ	0xFDF
 18584                           postinc2	equ	0xFDE
 18585                           postdec2	equ	0xFDD
 18586                           plusw2	equ	0xFDB
 18587                           fsr2h	equ	0xFDA
 18588                           fsr2l	equ	0xFD9
 18589                           status	equ	0xFD8
 18590                           
 18591 ;; *************** function _I2cSlv_SendI2cMsg *****************
 18592 ;; Defined at:
 18593 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18594 ;; Parameters:    Size  Location     Type
 18595 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 18596 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 18597 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18598 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18599 ;; Auto vars:     Size  Location     Type
 18600 ;;  TxSts           1   36[BANK0 ] unsigned char 
 18601 ;; Return value:  Size  Location     Type
 18602 ;;                  1    wreg      unsigned char 
 18603 ;; Registers used:
 18604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18605 ;; Tracked objects:
 18606 ;;		On entry : 0/0
 18607 ;;		On exit  : 0/0
 18608 ;;		Unchanged: 0/0
 18609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18610 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18613 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18614 ;;Total ram usage:        5 bytes
 18615 ;; Hardware stack levels used:    1
 18616 ;; Hardware stack levels required when called:   12
 18617 ;; This function calls:
 18618 ;;		_GenerateEvt
 18619 ;; This function is called by:
 18620 ;;		_Terminal
 18621 ;;		_I2cSlv_QueryI2cData
 18622 ;;		_triggerRelay
 18623 ;; This function uses a non-reentrant model
 18624 ;;
 18625                           
 18626                           	psect	text79
 18627  005978                     __ptext79:
 18628                           	opt stack 0
 18629  005978                     _I2cSlv_SendI2cMsg:
 18630                           	opt stack 13
 18631                           
 18632                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 18633                           
 18634                           ; BSR set to: 0
 18635                           ;incstack = 0
 18636  005978  0E00               	movlw	0
 18637  00597A  0100               	movlb	0	; () banked
 18638  00597C  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18639                           
 18640                           ; BSR set to: 0
 18641                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 18642  00597E  05D4               	decf	_I2cComSts& (0+255),w,b
 18643  005980  B4D8               	btfsc	status,2,c
 18644  005982  D015               	goto	l1397
 18645                           
 18646                           ; BSR set to: 0
 18647                           ;i2c_slv.c: 257: {
 18648                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 18649  005984  C082  F39E         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 18653  005988  0E00               	movlw	0
 18654  00598A  0103               	movlb	3	; () banked
 18655  00598C  6F9F               	movwf	(_I2cTxPacket+1)& (0+255),b
 18656                           
 18657                           ; BSR set to: 3
 18658                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 18659  00598E  C083  F3A2         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 18660                           
 18661                           ; BSR set to: 3
 18662                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 18663  005992  C080  F3A0         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 18664  005996  C081  F3A1         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 18665                           
 18666                           ; BSR set to: 3
 18667                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 18668  00599A  0EDC               	movlw	low _I2cWriteDataEvt
 18669  00599C  0100               	movlb	0	; () banked
 18670  00599E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18671  0059A0  0E00               	movlw	high _I2cWriteDataEvt
 18672  0059A2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18673  0059A4  EC06  F030         	call	_GenerateEvt	;wreg free
 18674                           
 18675                           ;i2c_slv.c: 267: TxSts = 1u;
 18676  0059A8  0E01               	movlw	1
 18677  0059AA  0100               	movlb	0	; () banked
 18678  0059AC  D001               	goto	L18
 18679  0059AE                     l1397:
 18680                           
 18681                           ; BSR set to: 0
 18682                           ;i2c_slv.c: 269: else
 18683                           ;i2c_slv.c: 270: {
 18684                           ;i2c_slv.c: 272: TxSts = 0u;
 18685                           
 18686                           ; BSR set to: 0
 18687  0059AE  0E00               	movlw	0
 18688  0059B0                     L18:
 18689  0059B0  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18690                           
 18691                           ; BSR set to: 0
 18692                           ;i2c_slv.c: 273: }
 18693                           ;i2c_slv.c: 275: return TxSts;
 18694  0059B2  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 18695  0059B4  0012               	return	
 18696  0059B6                     __end_of_I2cSlv_SendI2cMsg:
 18697                           	opt stack 0
 18698                           tosu	equ	0xFFF
 18699                           tosh	equ	0xFFE
 18700                           tosl	equ	0xFFD
 18701                           pclath	equ	0xFFA
 18702                           tblptru	equ	0xFF8
 18703                           tblptrh	equ	0xFF7
 18704                           tblptrl	equ	0xFF6
 18705                           tablat	equ	0xFF5
 18706                           prodh	equ	0xFF4
 18707                           prodl	equ	0xFF3
 18708                           intcon	equ	0xFF2
 18709                           intcon2	equ	0xFF1
 18710                           intcon3	equ	0xFF0
 18711                           indf0	equ	0xFEF
 18712                           postinc0	equ	0xFEE
 18713                           plusw0	equ	0xFEB
 18714                           fsr0h	equ	0xFEA
 18715                           fsr0l	equ	0xFE9
 18716                           wreg	equ	0xFE8
 18717                           indf1	equ	0xFE7
 18718                           postinc1	equ	0xFE6
 18719                           postdec1	equ	0xFE5
 18720                           plusw1	equ	0xFE3
 18721                           fsr1h	equ	0xFE2
 18722                           fsr1l	equ	0xFE1
 18723                           indf2	equ	0xFDF
 18724                           postinc2	equ	0xFDE
 18725                           postdec2	equ	0xFDD
 18726                           plusw2	equ	0xFDB
 18727                           fsr2h	equ	0xFDA
 18728                           fsr2l	equ	0xFD9
 18729                           status	equ	0xFD8
 18730                           
 18731 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 18732 ;; Defined at:
 18733 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18734 ;; Parameters:    Size  Location     Type
 18735 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 18736 ;;		 -> Terminal@TermRxBuffer(50), 
 18737 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18738 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18739 ;; Auto vars:     Size  Location     Type
 18740 ;;  RxSts           1   36[BANK0 ] unsigned char 
 18741 ;; Return value:  Size  Location     Type
 18742 ;;                  1    wreg      unsigned char 
 18743 ;; Registers used:
 18744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18745 ;; Tracked objects:
 18746 ;;		On entry : 0/0
 18747 ;;		On exit  : 0/0
 18748 ;;		Unchanged: 0/0
 18749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18750 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18751 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18753 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18754 ;;Total ram usage:        5 bytes
 18755 ;; Hardware stack levels used:    1
 18756 ;; Hardware stack levels required when called:   12
 18757 ;; This function calls:
 18758 ;;		_GenerateEvt
 18759 ;; This function is called by:
 18760 ;;		_Terminal
 18761 ;;		_I2cSlv_QueryI2cData
 18762 ;; This function uses a non-reentrant model
 18763 ;;
 18764                           
 18765                           	psect	text80
 18766  0058BA                     __ptext80:
 18767                           	opt stack 0
 18768  0058BA                     _I2cSlv_ReceiveI2cMsg:
 18769                           	opt stack 13
 18770                           
 18771                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 18772                           
 18773                           ; BSR set to: 0
 18774                           ;incstack = 0
 18775  0058BA  0E00               	movlw	0
 18776  0058BC  0100               	movlb	0	; () banked
 18777  0058BE  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18778                           
 18779                           ; BSR set to: 0
 18780                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 18781  0058C0  0E02               	movlw	2
 18782  0058C2  19D4               	xorwf	_I2cComSts& (0+255),w,b
 18783  0058C4  B4D8               	btfsc	status,2,c
 18784  0058C6  D016               	goto	l1402
 18785                           
 18786                           ; BSR set to: 0
 18787                           ;i2c_slv.c: 294: {
 18788                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 18789  0058C8  C082  F398         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 18790                           
 18791                           ; BSR set to: 0
 18792                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 18793  0058CC  0E01               	movlw	1
 18794  0058CE  0103               	movlb	3	; () banked
 18795  0058D0  6F99               	movwf	(_I2cRxPacket+1)& (0+255),b
 18796                           
 18797                           ; BSR set to: 3
 18798                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 18799  0058D2  C083  F39C         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 18800                           
 18801                           ; BSR set to: 3
 18802                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 18803  0058D6  C080  F39A         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 18804  0058DA  C081  F39B         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 18805                           
 18806                           ; BSR set to: 3
 18807                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 18808  0058DE  0E36               	movlw	low _I2cReadDataEvt
 18809  0058E0  0100               	movlb	0	; () banked
 18810  0058E2  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18811  0058E4  0E00               	movlw	high _I2cReadDataEvt
 18812  0058E6  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18813  0058E8  EC06  F030         	call	_GenerateEvt	;wreg free
 18814                           
 18815                           ;i2c_slv.c: 304: RxSts = 1u;
 18816  0058EC  0E01               	movlw	1
 18817  0058EE  0100               	movlb	0	; () banked
 18818  0058F0  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18819                           
 18820                           ;i2c_slv.c: 305: }
 18821  0058F2  0012               	return	
 18822  0058F4                     l1402:
 18823                           
 18824                           ; BSR set to: 0
 18825                           ;i2c_slv.c: 306: else
 18826                           ;i2c_slv.c: 307: {
 18827                           ;i2c_slv.c: 309: RxSts = 0u;
 18828                           
 18829                           ; BSR set to: 0
 18830  0058F4  0E00               	movlw	0
 18831  0058F6  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18832                           
 18833                           ; BSR set to: 0
 18834  0058F8  0012               	return	
 18835  0058FA                     __end_of_I2cSlv_ReceiveI2cMsg:
 18836                           	opt stack 0
 18837                           tosu	equ	0xFFF
 18838                           tosh	equ	0xFFE
 18839                           tosl	equ	0xFFD
 18840                           pclath	equ	0xFFA
 18841                           tblptru	equ	0xFF8
 18842                           tblptrh	equ	0xFF7
 18843                           tblptrl	equ	0xFF6
 18844                           tablat	equ	0xFF5
 18845                           prodh	equ	0xFF4
 18846                           prodl	equ	0xFF3
 18847                           intcon	equ	0xFF2
 18848                           intcon2	equ	0xFF1
 18849                           intcon3	equ	0xFF0
 18850                           indf0	equ	0xFEF
 18851                           postinc0	equ	0xFEE
 18852                           plusw0	equ	0xFEB
 18853                           fsr0h	equ	0xFEA
 18854                           fsr0l	equ	0xFE9
 18855                           wreg	equ	0xFE8
 18856                           indf1	equ	0xFE7
 18857                           postinc1	equ	0xFE6
 18858                           postdec1	equ	0xFE5
 18859                           plusw1	equ	0xFE3
 18860                           fsr1h	equ	0xFE2
 18861                           fsr1l	equ	0xFE1
 18862                           indf2	equ	0xFDF
 18863                           postinc2	equ	0xFDE
 18864                           postdec2	equ	0xFDD
 18865                           plusw2	equ	0xFDB
 18866                           fsr2h	equ	0xFDA
 18867                           fsr2l	equ	0xFD9
 18868                           status	equ	0xFD8
 18869                           
 18870 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 18871 ;; Defined at:
 18872 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18873 ;; Parameters:    Size  Location     Type
 18874 ;;		None
 18875 ;; Auto vars:     Size  Location     Type
 18876 ;;  Result          1   33[BANK0 ] enum E8916
 18877 ;; Return value:  Size  Location     Type
 18878 ;;                  1    wreg      enum E8916
 18879 ;; Registers used:
 18880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18881 ;; Tracked objects:
 18882 ;;		On entry : 0/0
 18883 ;;		On exit  : 0/0
 18884 ;;		Unchanged: 0/0
 18885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18887 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18889 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18890 ;;Total ram usage:        1 bytes
 18891 ;; Hardware stack levels used:    1
 18892 ;; Hardware stack levels required when called:   12
 18893 ;; This function calls:
 18894 ;;		_ReceiveEvt
 18895 ;; This function is called by:
 18896 ;;		_Terminal
 18897 ;;		_I2cSlv_QueryI2cData
 18898 ;; This function uses a non-reentrant model
 18899 ;;
 18900                           
 18901                           	psect	text81
 18902  005ED0                     __ptext81:
 18903                           	opt stack 0
 18904  005ED0                     _I2cSlv_I2cReadMsgSts:
 18905                           	opt stack 13
 18906                           
 18907                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 18908                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 18909                           
 18910                           ; BSR set to: 0
 18911                           ;incstack = 0
 18912  005ED0  0E9D               	movlw	low (_I2cRxPacket+5)
 18913  005ED2  0100               	movlb	0	; () banked
 18914  005ED4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 18915  005ED6  0E03               	movlw	high (_I2cRxPacket+5)
 18916  005ED8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 18917  005EDA  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 18918  005EDE  0900               	iorlw	0
 18919  005EE0  B4D8               	btfsc	status,2,c
 18920  005EE2  D002               	goto	l1407
 18921                           
 18922                           ;i2c_slv.c: 331: {
 18923                           ;i2c_slv.c: 332: Result = MessageReceived;
 18924  005EE4  0E01               	movlw	1
 18925  005EE6  D001               	goto	L19
 18926  005EE8                     l1407:
 18927                           
 18928                           ;i2c_slv.c: 334: else
 18929                           ;i2c_slv.c: 335: {
 18930                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 18931                           
 18932                           ; BSR set to: 0
 18933  005EE8  0E00               	movlw	0
 18934  005EEA                     L19:
 18935  005EEA  0100               	movlb	0	; () banked
 18936  005EEC  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 18937                           
 18938                           ; BSR set to: 0
 18939                           ;i2c_slv.c: 337: }
 18940                           ;i2c_slv.c: 339: return Result;
 18941  005EEE  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 18942  005EF0  0012               	return	
 18943  005EF2                     __end_of_I2cSlv_I2cReadMsgSts:
 18944                           	opt stack 0
 18945                           tosu	equ	0xFFF
 18946                           tosh	equ	0xFFE
 18947                           tosl	equ	0xFFD
 18948                           pclath	equ	0xFFA
 18949                           tblptru	equ	0xFF8
 18950                           tblptrh	equ	0xFF7
 18951                           tblptrl	equ	0xFF6
 18952                           tablat	equ	0xFF5
 18953                           prodh	equ	0xFF4
 18954                           prodl	equ	0xFF3
 18955                           intcon	equ	0xFF2
 18956                           intcon2	equ	0xFF1
 18957                           intcon3	equ	0xFF0
 18958                           indf0	equ	0xFEF
 18959                           postinc0	equ	0xFEE
 18960                           plusw0	equ	0xFEB
 18961                           fsr0h	equ	0xFEA
 18962                           fsr0l	equ	0xFE9
 18963                           wreg	equ	0xFE8
 18964                           indf1	equ	0xFE7
 18965                           postinc1	equ	0xFE6
 18966                           postdec1	equ	0xFE5
 18967                           plusw1	equ	0xFE3
 18968                           fsr1h	equ	0xFE2
 18969                           fsr1l	equ	0xFE1
 18970                           indf2	equ	0xFDF
 18971                           postinc2	equ	0xFDE
 18972                           postdec2	equ	0xFDD
 18973                           plusw2	equ	0xFDB
 18974                           fsr2h	equ	0xFDA
 18975                           fsr2l	equ	0xFD9
 18976                           status	equ	0xFD8
 18977                           
 18978 ;; *************** function _Rtcm_SetRtccDate *****************
 18979 ;; Defined at:
 18980 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18981 ;; Parameters:    Size  Location     Type
 18982 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18983 ;; Auto vars:     Size  Location     Type
 18984 ;;		None
 18985 ;; Return value:  Size  Location     Type
 18986 ;;                  1    wreg      void 
 18987 ;; Registers used:
 18988 ;;		wreg, status,2, status,0, cstack
 18989 ;; Tracked objects:
 18990 ;;		On entry : 0/0
 18991 ;;		On exit  : 0/0
 18992 ;;		Unchanged: 0/0
 18993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18994 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18997 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18998 ;;Total ram usage:        8 bytes
 18999 ;; Hardware stack levels used:    1
 19000 ;; Hardware stack levels required when called:   13
 19001 ;; This function calls:
 19002 ;;		_Rtcc_LockRtc
 19003 ;;		_Rtcc_SetRtccValue
 19004 ;;		_Rtcc_UnlockRtc
 19005 ;; This function is called by:
 19006 ;;		_Rtcm_MainTask
 19007 ;; This function uses a non-reentrant model
 19008 ;;
 19009                           
 19010                           	psect	text82
 19011  005322                     __ptext82:
 19012                           	opt stack 0
 19013  005322                     _Rtcm_SetRtccDate:
 19014                           	opt stack 14
 19015                           
 19016                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 19017                           
 19018                           ; BSR set to: 0
 19019                           ;incstack = 0
 19020  005322  EC66  F030         	call	_Rtcc_UnlockRtc	;wreg free
 19021                           
 19022                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 19023  005326  0100               	movlb	0	; () banked
 19024  005328  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 19025  00532A  0F30               	addlw	48
 19026  00532C  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 19027  00532E  0E00               	movlw	0
 19028  005330  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19029                           
 19030                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 19031  005334  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 19032  005338  0E01               	movlw	1
 19033  00533A  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19034                           
 19035                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 19036  00533E  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 19037  005342  0E02               	movlw	2
 19038  005344  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19039                           
 19040                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 19041  005348  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 19042  00534C  0E03               	movlw	3
 19043  00534E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19044                           
 19045                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 19046  005352  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 19047  005356  0E04               	movlw	4
 19048  005358  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19049                           
 19050                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 19051  00535C  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 19052  005360  0E05               	movlw	5
 19053  005362  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19054                           
 19055                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 19056  005366  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 19057  00536A  0E06               	movlw	6
 19058  00536C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19059                           
 19060                           ;rtcm.c: 191: Rtcc_LockRtc();
 19061  005370  EC6E  F030         	call	_Rtcc_LockRtc	;wreg free
 19062  005374  0012               	return		;funcret
 19063  005376                     __end_of_Rtcm_SetRtccDate:
 19064                           	opt stack 0
 19065                           tosu	equ	0xFFF
 19066                           tosh	equ	0xFFE
 19067                           tosl	equ	0xFFD
 19068                           pclath	equ	0xFFA
 19069                           tblptru	equ	0xFF8
 19070                           tblptrh	equ	0xFF7
 19071                           tblptrl	equ	0xFF6
 19072                           tablat	equ	0xFF5
 19073                           prodh	equ	0xFF4
 19074                           prodl	equ	0xFF3
 19075                           intcon	equ	0xFF2
 19076                           intcon2	equ	0xFF1
 19077                           intcon3	equ	0xFF0
 19078                           indf0	equ	0xFEF
 19079                           postinc0	equ	0xFEE
 19080                           plusw0	equ	0xFEB
 19081                           fsr0h	equ	0xFEA
 19082                           fsr0l	equ	0xFE9
 19083                           wreg	equ	0xFE8
 19084                           indf1	equ	0xFE7
 19085                           postinc1	equ	0xFE6
 19086                           postdec1	equ	0xFE5
 19087                           plusw1	equ	0xFE3
 19088                           fsr1h	equ	0xFE2
 19089                           fsr1l	equ	0xFE1
 19090                           indf2	equ	0xFDF
 19091                           postinc2	equ	0xFDE
 19092                           postdec2	equ	0xFDD
 19093                           plusw2	equ	0xFDB
 19094                           fsr2h	equ	0xFDA
 19095                           fsr2l	equ	0xFD9
 19096                           status	equ	0xFD8
 19097                           
 19098 ;; *************** function _Rtcc_UnlockRtc *****************
 19099 ;; Defined at:
 19100 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19101 ;; Parameters:    Size  Location     Type
 19102 ;;		None
 19103 ;; Auto vars:     Size  Location     Type
 19104 ;;		None
 19105 ;; Return value:  Size  Location     Type
 19106 ;;                  1    wreg      void 
 19107 ;; Registers used:
 19108 ;;		None
 19109 ;; Tracked objects:
 19110 ;;		On entry : 0/0
 19111 ;;		On exit  : 0/0
 19112 ;;		Unchanged: 0/0
 19113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19118 ;;Total ram usage:        0 bytes
 19119 ;; Hardware stack levels used:    1
 19120 ;; Hardware stack levels required when called:   11
 19121 ;; This function calls:
 19122 ;;		Nothing
 19123 ;; This function is called by:
 19124 ;;		_Rtcm_MainTask
 19125 ;;		_Rtcm_SetRtccDate
 19126 ;;		_Rtcm_SetRtccAlarm
 19127 ;; This function uses a non-reentrant model
 19128 ;;
 19129                           
 19130                           	psect	text83
 19131  0060CC                     __ptext83:
 19132                           	opt stack 0
 19133  0060CC                     _Rtcc_UnlockRtc:
 19134                           	opt stack 15
 19135                           
 19136                           ;incstack = 0
 19137  0060CC  010F               	movlb	15	;# 
 19138  0060CE  0E55               	movlw	85	;# 
 19139  0060D0  6EA7               	movwf	4007,c	;# 
 19140  0060D2  0EAA               	movlw	170	;# 
 19141  0060D4  6EA7               	movwf	4007,c	;# 
 19142                           
 19143                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 19144  0060D6  010F               	movlb	15	; () banked
 19145  0060D8  8B3F               	bsf	63,5,b	;volatile
 19146                           
 19147                           ; BSR set to: 15
 19148  0060DA  0012               	return		;funcret
 19149  0060DC                     __end_of_Rtcc_UnlockRtc:
 19150                           	opt stack 0
 19151                           tosu	equ	0xFFF
 19152                           tosh	equ	0xFFE
 19153                           tosl	equ	0xFFD
 19154                           pclath	equ	0xFFA
 19155                           tblptru	equ	0xFF8
 19156                           tblptrh	equ	0xFF7
 19157                           tblptrl	equ	0xFF6
 19158                           tablat	equ	0xFF5
 19159                           prodh	equ	0xFF4
 19160                           prodl	equ	0xFF3
 19161                           intcon	equ	0xFF2
 19162                           intcon2	equ	0xFF1
 19163                           intcon3	equ	0xFF0
 19164                           indf0	equ	0xFEF
 19165                           postinc0	equ	0xFEE
 19166                           plusw0	equ	0xFEB
 19167                           fsr0h	equ	0xFEA
 19168                           fsr0l	equ	0xFE9
 19169                           wreg	equ	0xFE8
 19170                           indf1	equ	0xFE7
 19171                           postinc1	equ	0xFE6
 19172                           postdec1	equ	0xFE5
 19173                           plusw1	equ	0xFE3
 19174                           fsr1h	equ	0xFE2
 19175                           fsr1l	equ	0xFE1
 19176                           indf2	equ	0xFDF
 19177                           postinc2	equ	0xFDE
 19178                           postdec2	equ	0xFDD
 19179                           plusw2	equ	0xFDB
 19180                           fsr2h	equ	0xFDA
 19181                           fsr2l	equ	0xFD9
 19182                           status	equ	0xFD8
 19183                           
 19184 ;; *************** function _Rtcc_SetRtccValue *****************
 19185 ;; Defined at:
 19186 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19187 ;; Parameters:    Size  Location     Type
 19188 ;;  RtccPtrVal      1    wreg     enum E7757
 19189 ;;  Value           1   37[BANK0 ] unsigned char 
 19190 ;; Auto vars:     Size  Location     Type
 19191 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 19192 ;; Return value:  Size  Location     Type
 19193 ;;                  1    wreg      void 
 19194 ;; Registers used:
 19195 ;;		wreg, status,2, status,0, cstack
 19196 ;; Tracked objects:
 19197 ;;		On entry : 0/0
 19198 ;;		On exit  : 0/0
 19199 ;;		Unchanged: 0/0
 19200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19201 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19202 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19203 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19204 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19205 ;;Total ram usage:        4 bytes
 19206 ;; Hardware stack levels used:    1
 19207 ;; Hardware stack levels required when called:   12
 19208 ;; This function calls:
 19209 ;;		___awdiv
 19210 ;;		___awmod
 19211 ;; This function is called by:
 19212 ;;		_Rtcm_SetRtccDate
 19213 ;; This function uses a non-reentrant model
 19214 ;;
 19215                           
 19216                           	psect	text84
 19217  0015EE                     __ptext84:
 19218                           	opt stack 0
 19219  0015EE                     _Rtcc_SetRtccValue:
 19220                           	opt stack 14
 19221                           
 19222                           ; BSR set to: 15
 19223                           ;incstack = 0
 19224                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 19225  0015EE  0100               	movlb	0	; () banked
 19226  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 19227                           
 19228                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 19229  0015F2  D0FC               	goto	l441
 19230  0015F4                     l442:
 19231                           
 19232                           ; BSR set to: 0
 19233                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 19234  0015F4  010F               	movlb	15	; () banked
 19235  0015F6  833F               	bsf	63,1,b	;volatile
 19236                           
 19237                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 19238  0015F8  813F               	bsf	63,0,b	;volatile
 19239                           
 19240                           ; BSR set to: 15
 19241                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19242  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19243  0015FE  0100               	movlb	0	; () banked
 19244  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19245  001602  0E00               	movlw	0
 19246  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19247  001606  0E0A               	movlw	10
 19248  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 19249  00160A  EC7E  F026         	call	___awmod	;wreg free
 19250  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19251  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19252  001616  0E0F               	movlw	15
 19253  001618  0100               	movlb	0	; () banked
 19254  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19255  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19256  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19257  001622  0E00               	movlw	0
 19258  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19259  001626  0E0A               	movlw	10
 19260  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19261  00162A  EC3C  F025         	call	___awdiv	;wreg free
 19262  00162E  0100               	movlb	0	; () banked
 19263  001630  397D               	swapf	?___awdiv& (0+255),w,b
 19264  001632  0BF0               	andlw	240
 19265  001634  0BF0               	andlw	240
 19266  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19267  001638  6E98               	movwf	3992,c	;volatile
 19268                           
 19269                           ;rtcc_drv.c: 393: break;
 19270  00163A  0012               	return	
 19271  00163C                     l444:
 19272                           
 19273                           ; BSR set to: 0
 19274                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19275  00163C  010F               	movlb	15	; () banked
 19276  00163E  833F               	bsf	63,1,b	;volatile
 19277                           
 19278                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19279  001640  913F               	bcf	63,0,b	;volatile
 19280                           
 19281                           ; BSR set to: 15
 19282                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19283  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19284  001646  0100               	movlb	0	; () banked
 19285  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19286  00164A  0E00               	movlw	0
 19287  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19288  00164E  0E0A               	movlw	10
 19289  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 19290  001652  EC7E  F026         	call	___awmod	;wreg free
 19291  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19292  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19293  00165E  0E0F               	movlw	15
 19294  001660  0100               	movlb	0	; () banked
 19295  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19296  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19297  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19298  00166A  0E00               	movlw	0
 19299  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19300  00166E  0E0A               	movlw	10
 19301  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19302  001672  EC3C  F025         	call	___awdiv	;wreg free
 19303  001676  0100               	movlb	0	; () banked
 19304  001678  397D               	swapf	?___awdiv& (0+255),w,b
 19305  00167A  0BF0               	andlw	240
 19306  00167C  0BF0               	andlw	240
 19307  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19308  001680  6E99               	movwf	3993,c	;volatile
 19309                           
 19310                           ;rtcc_drv.c: 401: break;
 19311  001682  0012               	return	
 19312  001684                     l445:
 19313                           
 19314                           ; BSR set to: 0
 19315                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19316  001684  010F               	movlb	15	; () banked
 19317  001686  833F               	bsf	63,1,b	;volatile
 19318                           
 19319                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19320  001688  913F               	bcf	63,0,b	;volatile
 19321                           
 19322                           ; BSR set to: 15
 19323                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19324  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19325  00168E  0100               	movlb	0	; () banked
 19326  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19327  001692  0E00               	movlw	0
 19328  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19329  001696  0E0A               	movlw	10
 19330  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 19331  00169A  EC7E  F026         	call	___awmod	;wreg free
 19332  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19333  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19334  0016A6  0E0F               	movlw	15
 19335  0016A8  0100               	movlb	0	; () banked
 19336  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19337  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19338  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19339  0016B2  0E00               	movlw	0
 19340  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19341  0016B6  0E0A               	movlw	10
 19342  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19343  0016BA  EC3C  F025         	call	___awdiv	;wreg free
 19344  0016BE  0100               	movlb	0	; () banked
 19345  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 19346  0016C2  0BF0               	andlw	240
 19347  0016C4  0BF0               	andlw	240
 19348  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19349  0016C8  6E98               	movwf	3992,c	;volatile
 19350                           
 19351                           ;rtcc_drv.c: 409: break;
 19352  0016CA  0012               	return	
 19353  0016CC                     l446:
 19354                           
 19355                           ; BSR set to: 0
 19356                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19357  0016CC  010F               	movlb	15	; () banked
 19358  0016CE  933F               	bcf	63,1,b	;volatile
 19359                           
 19360                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19361  0016D0  813F               	bsf	63,0,b	;volatile
 19362                           
 19363                           ; BSR set to: 15
 19364                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19365  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19366  0016D6  0100               	movlb	0	; () banked
 19367  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19368  0016DA  0E00               	movlw	0
 19369  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19370  0016DE  0E0A               	movlw	10
 19371  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19372  0016E2  EC7E  F026         	call	___awmod	;wreg free
 19373  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19374  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19375  0016EE  0E0F               	movlw	15
 19376  0016F0  0100               	movlb	0	; () banked
 19377  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19378  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19379  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19380  0016FA  0E00               	movlw	0
 19381  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19382  0016FE  0E0A               	movlw	10
 19383  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19384  001702  EC3C  F025         	call	___awdiv	;wreg free
 19385  001706  0100               	movlb	0	; () banked
 19386  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19387  00170A  0BF0               	andlw	240
 19388  00170C  0BF0               	andlw	240
 19389  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19390  001710  6E99               	movwf	3993,c	;volatile
 19391                           
 19392                           ;rtcc_drv.c: 417: break;
 19393  001712  0012               	return	
 19394  001714                     l447:
 19395                           
 19396                           ; BSR set to: 0
 19397                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19398  001714  010F               	movlb	15	; () banked
 19399  001716  933F               	bcf	63,1,b	;volatile
 19400                           
 19401                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19402  001718  813F               	bsf	63,0,b	;volatile
 19403                           
 19404                           ; BSR set to: 15
 19405                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19406  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19407  00171E  0100               	movlb	0	; () banked
 19408  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19409  001722  0E00               	movlw	0
 19410  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19411  001726  0E0A               	movlw	10
 19412  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19413  00172A  EC7E  F026         	call	___awmod	;wreg free
 19414  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19415  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19416  001736  0E0F               	movlw	15
 19417  001738  0100               	movlb	0	; () banked
 19418  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19419  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19420  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19421  001742  0E00               	movlw	0
 19422  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19423  001746  0E0A               	movlw	10
 19424  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19425  00174A  EC3C  F025         	call	___awdiv	;wreg free
 19426  00174E  0100               	movlb	0	; () banked
 19427  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19428  001752  0BF0               	andlw	240
 19429  001754  0BF0               	andlw	240
 19430  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19431  001758  6E98               	movwf	3992,c	;volatile
 19432                           
 19433                           ;rtcc_drv.c: 425: break;
 19434  00175A  0012               	return	
 19435  00175C                     l448:
 19436                           
 19437                           ; BSR set to: 0
 19438                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19439  00175C  010F               	movlb	15	; () banked
 19440  00175E  933F               	bcf	63,1,b	;volatile
 19441                           
 19442                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19443  001760  913F               	bcf	63,0,b	;volatile
 19444                           
 19445                           ; BSR set to: 15
 19446                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19447  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19448  001766  0100               	movlb	0	; () banked
 19449  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19450  00176A  0E00               	movlw	0
 19451  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19452  00176E  0E0A               	movlw	10
 19453  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19454  001772  EC7E  F026         	call	___awmod	;wreg free
 19455  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19456  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19457  00177E  0E0F               	movlw	15
 19458  001780  0100               	movlb	0	; () banked
 19459  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19460  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19461  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19462  00178A  0E00               	movlw	0
 19463  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19464  00178E  0E0A               	movlw	10
 19465  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19466  001792  EC3C  F025         	call	___awdiv	;wreg free
 19467  001796  0100               	movlb	0	; () banked
 19468  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19469  00179A  0BF0               	andlw	240
 19470  00179C  0BF0               	andlw	240
 19471  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19472  0017A0  6E99               	movwf	3993,c	;volatile
 19473                           
 19474                           ;rtcc_drv.c: 433: break;
 19475  0017A2  0012               	return	
 19476  0017A4                     l449:
 19477                           
 19478                           ; BSR set to: 0
 19479                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19480  0017A4  010F               	movlb	15	; () banked
 19481  0017A6  933F               	bcf	63,1,b	;volatile
 19482                           
 19483                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19484  0017A8  913F               	bcf	63,0,b	;volatile
 19485                           
 19486                           ; BSR set to: 15
 19487                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19488  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19489  0017AE  0100               	movlb	0	; () banked
 19490  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19491  0017B2  0E00               	movlw	0
 19492  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19493  0017B6  0E0A               	movlw	10
 19494  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19495  0017BA  EC7E  F026         	call	___awmod	;wreg free
 19496  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19497  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19498  0017C6  0E0F               	movlw	15
 19499  0017C8  0100               	movlb	0	; () banked
 19500  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19501  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19502  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19503  0017D2  0E00               	movlw	0
 19504  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19505  0017D6  0E0A               	movlw	10
 19506  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19507  0017DA  EC3C  F025         	call	___awdiv	;wreg free
 19508  0017DE  0100               	movlb	0	; () banked
 19509  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19510  0017E2  0BF0               	andlw	240
 19511  0017E4  0BF0               	andlw	240
 19512  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19513  0017E8  6E98               	movwf	3992,c	;volatile
 19514                           
 19515                           ; BSR set to: 0
 19516                           ;rtcc_drv.c: 445: }
 19517                           
 19518                           ; BSR set to: 0
 19519                           ;rtcc_drv.c: 444: break;
 19520                           
 19521                           ;rtcc_drv.c: 443: default:
 19522                           
 19523                           ;rtcc_drv.c: 441: break;
 19524  0017EA  0012               	return	
 19525  0017EC                     l441:
 19526                           
 19527                           ; BSR set to: 0
 19528  0017EC  0100               	movlb	0	; () banked
 19529  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19530                           
 19531                           ; Switch size 1, requested type "space"
 19532                           ; Number of cases is 7, Range of values is 0 to 6
 19533                           ; switch strategies available:
 19534                           ; Name         Instructions Cycles
 19535                           ; simple_byte           22    12 (average)
 19536                           ;	Chosen strategy is simple_byte
 19537  0017F0  0A00               	xorlw	0	; case 0
 19538  0017F2  B4D8               	btfsc	status,2,c
 19539  0017F4  D6FF               	goto	l442
 19540  0017F6  0A01               	xorlw	1	; case 1
 19541  0017F8  B4D8               	btfsc	status,2,c
 19542  0017FA  D720               	goto	l444
 19543  0017FC  0A03               	xorlw	3	; case 2
 19544  0017FE  B4D8               	btfsc	status,2,c
 19545  001800  D741               	goto	l445
 19546  001802  0A01               	xorlw	1	; case 3
 19547  001804  B4D8               	btfsc	status,2,c
 19548  001806  D762               	goto	l446
 19549  001808  0A07               	xorlw	7	; case 4
 19550  00180A  B4D8               	btfsc	status,2,c
 19551  00180C  D783               	goto	l447
 19552  00180E  0A01               	xorlw	1	; case 5
 19553  001810  B4D8               	btfsc	status,2,c
 19554  001812  D7A4               	goto	l448
 19555  001814  0A03               	xorlw	3	; case 6
 19556  001816  A4D8               	btfss	status,2,c
 19557  001818  0012               	return	
 19558  00181A  D7C4               	goto	l449
 19559  00181C                     __end_of_Rtcc_SetRtccValue:
 19560                           	opt stack 0
 19561                           tosu	equ	0xFFF
 19562                           tosh	equ	0xFFE
 19563                           tosl	equ	0xFFD
 19564                           pclath	equ	0xFFA
 19565                           tblptru	equ	0xFF8
 19566                           tblptrh	equ	0xFF7
 19567                           tblptrl	equ	0xFF6
 19568                           tablat	equ	0xFF5
 19569                           prodh	equ	0xFF4
 19570                           prodl	equ	0xFF3
 19571                           intcon	equ	0xFF2
 19572                           intcon2	equ	0xFF1
 19573                           intcon3	equ	0xFF0
 19574                           indf0	equ	0xFEF
 19575                           postinc0	equ	0xFEE
 19576                           plusw0	equ	0xFEB
 19577                           fsr0h	equ	0xFEA
 19578                           fsr0l	equ	0xFE9
 19579                           wreg	equ	0xFE8
 19580                           indf1	equ	0xFE7
 19581                           postinc1	equ	0xFE6
 19582                           postdec1	equ	0xFE5
 19583                           plusw1	equ	0xFE3
 19584                           fsr1h	equ	0xFE2
 19585                           fsr1l	equ	0xFE1
 19586                           indf2	equ	0xFDF
 19587                           postinc2	equ	0xFDE
 19588                           postdec2	equ	0xFDD
 19589                           plusw2	equ	0xFDB
 19590                           fsr2h	equ	0xFDA
 19591                           fsr2l	equ	0xFD9
 19592                           status	equ	0xFD8
 19593                           
 19594 ;; *************** function ___awmod *****************
 19595 ;; Defined at:
 19596 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19597 ;; Parameters:    Size  Location     Type
 19598 ;;  dividend        2   29[BANK0 ] int 
 19599 ;;  divisor         2   31[BANK0 ] int 
 19600 ;; Auto vars:     Size  Location     Type
 19601 ;;  sign            1   34[BANK0 ] unsigned char 
 19602 ;;  counter         1   33[BANK0 ] unsigned char 
 19603 ;; Return value:  Size  Location     Type
 19604 ;;                  2   29[BANK0 ] int 
 19605 ;; Registers used:
 19606 ;;		wreg, status,2, status,0
 19607 ;; Tracked objects:
 19608 ;;		On entry : 0/0
 19609 ;;		On exit  : 0/0
 19610 ;;		Unchanged: 0/0
 19611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19612 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19613 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19615 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19616 ;;Total ram usage:        6 bytes
 19617 ;; Hardware stack levels used:    1
 19618 ;; Hardware stack levels required when called:   11
 19619 ;; This function calls:
 19620 ;;		Nothing
 19621 ;; This function is called by:
 19622 ;;		_Rtcc_SetRtccValue
 19623 ;;		_Rtcc_SetRtccAlarm
 19624 ;; This function uses a non-reentrant model
 19625 ;;
 19626                           
 19627                           	psect	text85
 19628  004CFC                     __ptext85:
 19629                           	opt stack 0
 19630  004CFC                     ___awmod:
 19631                           	opt stack 14
 19632                           
 19633                           ; BSR set to: 0
 19634                           ;incstack = 0
 19635  004CFC  0E00               	movlw	0
 19636  004CFE  0100               	movlb	0	; () banked
 19637  004D00  6F82               	movwf	___awmod@sign& (0+255),b
 19638                           
 19639                           ; BSR set to: 0
 19640  004D02  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19641  004D04  D006               	goto	l2808
 19642                           
 19643                           ; BSR set to: 0
 19644  004D06  6D7D               	negf	___awmod@dividend& (0+255),b
 19645  004D08  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19646  004D0A  B0D8               	btfsc	status,0,c
 19647  004D0C  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19648                           
 19649                           ; BSR set to: 0
 19650  004D0E  0E01               	movlw	1
 19651  004D10  6F82               	movwf	___awmod@sign& (0+255),b
 19652  004D12                     l2808:
 19653                           
 19654                           ; BSR set to: 0
 19655                           
 19656                           ; BSR set to: 0
 19657  004D12  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19658  004D14  D004               	goto	l2809
 19659                           
 19660                           ; BSR set to: 0
 19661  004D16  6D7F               	negf	___awmod@divisor& (0+255),b
 19662  004D18  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19663  004D1A  B0D8               	btfsc	status,0,c
 19664  004D1C  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19665  004D1E                     l2809:
 19666                           
 19667                           ; BSR set to: 0
 19668                           
 19669                           ; BSR set to: 0
 19670  004D1E  517F               	movf	___awmod@divisor& (0+255),w,b
 19671  004D20  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19672  004D22  B4D8               	btfsc	status,2,c
 19673  004D24  D018               	goto	l2816
 19674                           
 19675                           ; BSR set to: 0
 19676  004D26  0E01               	movlw	1
 19677  004D28  6F81               	movwf	___awmod@counter& (0+255),b
 19678  004D2A  D004               	goto	l2811
 19679  004D2C                     
 19680                           ; BSR set to: 0
 19681                           
 19682                           ; BSR set to: 0
 19683  004D2C  90D8               	bcf	status,0,c
 19684  004D2E  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19685  004D30  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19686  004D32  2B81               	incf	___awmod@counter& (0+255),f,b
 19687  004D34                     l2811:
 19688                           
 19689                           ; BSR set to: 0
 19690                           
 19691                           ; BSR set to: 0
 19692  004D34  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19693  004D36  D7FA               	goto	l2812
 19694  004D38                     u6930:
 19695                           
 19696                           ; BSR set to: 0
 19697                           
 19698                           ; BSR set to: 0
 19699                           
 19700                           ; BSR set to: 0
 19701  004D38  517F               	movf	___awmod@divisor& (0+255),w,b
 19702  004D3A  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19703  004D3C  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19704  004D3E  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19705  004D40  A0D8               	btfss	status,0,c
 19706  004D42  D004               	goto	l2815
 19707                           
 19708                           ; BSR set to: 0
 19709  004D44  517F               	movf	___awmod@divisor& (0+255),w,b
 19710  004D46  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19711  004D48  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19712  004D4A  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19713  004D4C                     l2815:
 19714                           
 19715                           ; BSR set to: 0
 19716                           
 19717                           ; BSR set to: 0
 19718  004D4C  90D8               	bcf	status,0,c
 19719  004D4E  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19720  004D50  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19721                           
 19722                           ; BSR set to: 0
 19723  004D52  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19724  004D54  D7F1               	goto	u6930
 19725  004D56                     l2816:
 19726                           
 19727                           ; BSR set to: 0
 19728                           
 19729                           ; BSR set to: 0
 19730                           
 19731                           ; BSR set to: 0
 19732  004D56  5182               	movf	___awmod@sign& (0+255),w,b
 19733  004D58  B4D8               	btfsc	status,2,c
 19734  004D5A  D004               	goto	l2817
 19735                           
 19736                           ; BSR set to: 0
 19737  004D5C  6D7D               	negf	___awmod@dividend& (0+255),b
 19738  004D5E  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19739  004D60  B0D8               	btfsc	status,0,c
 19740  004D62  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19741  004D64                     l2817:
 19742                           
 19743                           ; BSR set to: 0
 19744                           
 19745                           ; BSR set to: 0
 19746  004D64  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19747  004D68  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19748  004D6C  0012               	return	
 19749  004D6E                     __end_of___awmod:
 19750                           	opt stack 0
 19751                           tosu	equ	0xFFF
 19752                           tosh	equ	0xFFE
 19753                           tosl	equ	0xFFD
 19754                           pclath	equ	0xFFA
 19755                           tblptru	equ	0xFF8
 19756                           tblptrh	equ	0xFF7
 19757                           tblptrl	equ	0xFF6
 19758                           tablat	equ	0xFF5
 19759                           prodh	equ	0xFF4
 19760                           prodl	equ	0xFF3
 19761                           intcon	equ	0xFF2
 19762                           intcon2	equ	0xFF1
 19763                           intcon3	equ	0xFF0
 19764                           indf0	equ	0xFEF
 19765                           postinc0	equ	0xFEE
 19766                           plusw0	equ	0xFEB
 19767                           fsr0h	equ	0xFEA
 19768                           fsr0l	equ	0xFE9
 19769                           wreg	equ	0xFE8
 19770                           indf1	equ	0xFE7
 19771                           postinc1	equ	0xFE6
 19772                           postdec1	equ	0xFE5
 19773                           plusw1	equ	0xFE3
 19774                           fsr1h	equ	0xFE2
 19775                           fsr1l	equ	0xFE1
 19776                           indf2	equ	0xFDF
 19777                           postinc2	equ	0xFDE
 19778                           postdec2	equ	0xFDD
 19779                           plusw2	equ	0xFDB
 19780                           fsr2h	equ	0xFDA
 19781                           fsr2l	equ	0xFD9
 19782                           status	equ	0xFD8
 19783                           
 19784 ;; *************** function ___awdiv *****************
 19785 ;; Defined at:
 19786 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19787 ;; Parameters:    Size  Location     Type
 19788 ;;  dividend        2   29[BANK0 ] int 
 19789 ;;  divisor         2   31[BANK0 ] int 
 19790 ;; Auto vars:     Size  Location     Type
 19791 ;;  quotient        2   35[BANK0 ] int 
 19792 ;;  sign            1   34[BANK0 ] unsigned char 
 19793 ;;  counter         1   33[BANK0 ] unsigned char 
 19794 ;; Return value:  Size  Location     Type
 19795 ;;                  2   29[BANK0 ] int 
 19796 ;; Registers used:
 19797 ;;		wreg, status,2, status,0
 19798 ;; Tracked objects:
 19799 ;;		On entry : 0/0
 19800 ;;		On exit  : 0/0
 19801 ;;		Unchanged: 0/0
 19802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19803 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19804 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19806 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19807 ;;Total ram usage:        8 bytes
 19808 ;; Hardware stack levels used:    1
 19809 ;; Hardware stack levels required when called:   11
 19810 ;; This function calls:
 19811 ;;		Nothing
 19812 ;; This function is called by:
 19813 ;;		_Rtcc_SetRtccValue
 19814 ;;		_Rtcc_SetRtccAlarm
 19815 ;; This function uses a non-reentrant model
 19816 ;;
 19817                           
 19818                           	psect	text86
 19819  004A78                     __ptext86:
 19820                           	opt stack 0
 19821  004A78                     ___awdiv:
 19822                           	opt stack 14
 19823                           
 19824                           ; BSR set to: 0
 19825                           ;incstack = 0
 19826  004A78  0E00               	movlw	0
 19827  004A7A  0100               	movlb	0	; () banked
 19828  004A7C  6F82               	movwf	___awdiv@sign& (0+255),b
 19829                           
 19830                           ; BSR set to: 0
 19831  004A7E  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19832  004A80  D006               	goto	l2795
 19833                           
 19834                           ; BSR set to: 0
 19835  004A82  6D7F               	negf	___awdiv@divisor& (0+255),b
 19836  004A84  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19837  004A86  B0D8               	btfsc	status,0,c
 19838  004A88  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19839                           
 19840                           ; BSR set to: 0
 19841  004A8A  0E01               	movlw	1
 19842  004A8C  6F82               	movwf	___awdiv@sign& (0+255),b
 19843  004A8E                     l2795:
 19844                           
 19845                           ; BSR set to: 0
 19846                           
 19847                           ; BSR set to: 0
 19848  004A8E  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19849  004A90  D006               	goto	l2796
 19850                           
 19851                           ; BSR set to: 0
 19852  004A92  6D7D               	negf	___awdiv@dividend& (0+255),b
 19853  004A94  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19854  004A96  B0D8               	btfsc	status,0,c
 19855  004A98  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19856                           
 19857                           ; BSR set to: 0
 19858  004A9A  0E01               	movlw	1
 19859  004A9C  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19860  004A9E                     l2796:
 19861                           
 19862                           ; BSR set to: 0
 19863                           
 19864                           ; BSR set to: 0
 19865  004A9E  0E00               	movlw	0
 19866  004AA0  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19867  004AA2  0E00               	movlw	0
 19868  004AA4  6F83               	movwf	___awdiv@quotient& (0+255),b
 19869                           
 19870                           ; BSR set to: 0
 19871  004AA6  517F               	movf	___awdiv@divisor& (0+255),w,b
 19872  004AA8  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19873  004AAA  B4D8               	btfsc	status,2,c
 19874  004AAC  D01C               	goto	l2803
 19875                           
 19876                           ; BSR set to: 0
 19877  004AAE  0E01               	movlw	1
 19878  004AB0  6F81               	movwf	___awdiv@counter& (0+255),b
 19879  004AB2  D004               	goto	l2798
 19880  004AB4                     
 19881                           ; BSR set to: 0
 19882                           
 19883                           ; BSR set to: 0
 19884  004AB4  90D8               	bcf	status,0,c
 19885  004AB6  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19886  004AB8  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19887  004ABA  2B81               	incf	___awdiv@counter& (0+255),f,b
 19888  004ABC                     l2798:
 19889                           
 19890                           ; BSR set to: 0
 19891                           
 19892                           ; BSR set to: 0
 19893  004ABC  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19894  004ABE  D7FA               	goto	l2799
 19895  004AC0                     u6870:
 19896                           
 19897                           ; BSR set to: 0
 19898                           
 19899                           ; BSR set to: 0
 19900                           
 19901                           ; BSR set to: 0
 19902  004AC0  90D8               	bcf	status,0,c
 19903  004AC2  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19904  004AC4  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19905                           
 19906                           ; BSR set to: 0
 19907  004AC6  517F               	movf	___awdiv@divisor& (0+255),w,b
 19908  004AC8  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19909  004ACA  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19910  004ACC  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19911  004ACE  A0D8               	btfss	status,0,c
 19912  004AD0  D005               	goto	l2802
 19913                           
 19914                           ; BSR set to: 0
 19915  004AD2  517F               	movf	___awdiv@divisor& (0+255),w,b
 19916  004AD4  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19917  004AD6  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19918  004AD8  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19919                           
 19920                           ; BSR set to: 0
 19921  004ADA  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19922  004ADC                     l2802:
 19923                           
 19924                           ; BSR set to: 0
 19925                           
 19926                           ; BSR set to: 0
 19927  004ADC  90D8               	bcf	status,0,c
 19928  004ADE  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19929  004AE0  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19930                           
 19931                           ; BSR set to: 0
 19932  004AE2  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19933  004AE4  D7ED               	goto	u6870
 19934  004AE6                     l2803:
 19935                           
 19936                           ; BSR set to: 0
 19937                           
 19938                           ; BSR set to: 0
 19939                           
 19940                           ; BSR set to: 0
 19941  004AE6  5182               	movf	___awdiv@sign& (0+255),w,b
 19942  004AE8  B4D8               	btfsc	status,2,c
 19943  004AEA  D004               	goto	l2804
 19944                           
 19945                           ; BSR set to: 0
 19946  004AEC  6D83               	negf	___awdiv@quotient& (0+255),b
 19947  004AEE  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19948  004AF0  B0D8               	btfsc	status,0,c
 19949  004AF2  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19950  004AF4                     l2804:
 19951                           
 19952                           ; BSR set to: 0
 19953                           
 19954                           ; BSR set to: 0
 19955  004AF4  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19956  004AF8  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19957  004AFC  0012               	return	
 19958  004AFE                     __end_of___awdiv:
 19959                           	opt stack 0
 19960                           tosu	equ	0xFFF
 19961                           tosh	equ	0xFFE
 19962                           tosl	equ	0xFFD
 19963                           pclath	equ	0xFFA
 19964                           tblptru	equ	0xFF8
 19965                           tblptrh	equ	0xFF7
 19966                           tblptrl	equ	0xFF6
 19967                           tablat	equ	0xFF5
 19968                           prodh	equ	0xFF4
 19969                           prodl	equ	0xFF3
 19970                           intcon	equ	0xFF2
 19971                           intcon2	equ	0xFF1
 19972                           intcon3	equ	0xFF0
 19973                           indf0	equ	0xFEF
 19974                           postinc0	equ	0xFEE
 19975                           plusw0	equ	0xFEB
 19976                           fsr0h	equ	0xFEA
 19977                           fsr0l	equ	0xFE9
 19978                           wreg	equ	0xFE8
 19979                           indf1	equ	0xFE7
 19980                           postinc1	equ	0xFE6
 19981                           postdec1	equ	0xFE5
 19982                           plusw1	equ	0xFE3
 19983                           fsr1h	equ	0xFE2
 19984                           fsr1l	equ	0xFE1
 19985                           indf2	equ	0xFDF
 19986                           postinc2	equ	0xFDE
 19987                           postdec2	equ	0xFDD
 19988                           plusw2	equ	0xFDB
 19989                           fsr2h	equ	0xFDA
 19990                           fsr2l	equ	0xFD9
 19991                           status	equ	0xFD8
 19992                           
 19993 ;; *************** function _Rtcc_LockRtc *****************
 19994 ;; Defined at:
 19995 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19996 ;; Parameters:    Size  Location     Type
 19997 ;;		None
 19998 ;; Auto vars:     Size  Location     Type
 19999 ;;		None
 20000 ;; Return value:  Size  Location     Type
 20001 ;;                  1    wreg      void 
 20002 ;; Registers used:
 20003 ;;		None
 20004 ;; Tracked objects:
 20005 ;;		On entry : 0/0
 20006 ;;		On exit  : 0/0
 20007 ;;		Unchanged: 0/0
 20008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20013 ;;Total ram usage:        0 bytes
 20014 ;; Hardware stack levels used:    1
 20015 ;; Hardware stack levels required when called:   11
 20016 ;; This function calls:
 20017 ;;		Nothing
 20018 ;; This function is called by:
 20019 ;;		_Rtcm_MainTask
 20020 ;;		_Rtcm_SetRtccDate
 20021 ;;		_Rtcm_SetRtccAlarm
 20022 ;; This function uses a non-reentrant model
 20023 ;;
 20024                           
 20025                           	psect	text87
 20026  0060DC                     __ptext87:
 20027                           	opt stack 0
 20028  0060DC                     _Rtcc_LockRtc:
 20029                           	opt stack 15
 20030                           
 20031                           ; BSR set to: 0
 20032                           ;incstack = 0
 20033  0060DC  010F               	movlb	15	;# 
 20034  0060DE  0E55               	movlw	85	;# 
 20035  0060E0  6EA7               	movwf	4007,c	;# 
 20036  0060E2  0EAA               	movlw	170	;# 
 20037  0060E4  6EA7               	movwf	4007,c	;# 
 20038                           
 20039                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 20040  0060E6  010F               	movlb	15	; () banked
 20041  0060E8  9B3F               	bcf	63,5,b	;volatile
 20042                           
 20043                           ; BSR set to: 15
 20044  0060EA  0012               	return		;funcret
 20045  0060EC                     __end_of_Rtcc_LockRtc:
 20046                           	opt stack 0
 20047                           tosu	equ	0xFFF
 20048                           tosh	equ	0xFFE
 20049                           tosl	equ	0xFFD
 20050                           pclath	equ	0xFFA
 20051                           tblptru	equ	0xFF8
 20052                           tblptrh	equ	0xFF7
 20053                           tblptrl	equ	0xFF6
 20054                           tablat	equ	0xFF5
 20055                           prodh	equ	0xFF4
 20056                           prodl	equ	0xFF3
 20057                           intcon	equ	0xFF2
 20058                           intcon2	equ	0xFF1
 20059                           intcon3	equ	0xFF0
 20060                           indf0	equ	0xFEF
 20061                           postinc0	equ	0xFEE
 20062                           plusw0	equ	0xFEB
 20063                           fsr0h	equ	0xFEA
 20064                           fsr0l	equ	0xFE9
 20065                           wreg	equ	0xFE8
 20066                           indf1	equ	0xFE7
 20067                           postinc1	equ	0xFE6
 20068                           postdec1	equ	0xFE5
 20069                           plusw1	equ	0xFE3
 20070                           fsr1h	equ	0xFE2
 20071                           fsr1l	equ	0xFE1
 20072                           indf2	equ	0xFDF
 20073                           postinc2	equ	0xFDE
 20074                           postdec2	equ	0xFDD
 20075                           plusw2	equ	0xFDB
 20076                           fsr2h	equ	0xFDA
 20077                           fsr2l	equ	0xFD9
 20078                           status	equ	0xFD8
 20079                           
 20080 ;; *************** function _Rtcm_GetRtccDate *****************
 20081 ;; Defined at:
 20082 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 20083 ;; Parameters:    Size  Location     Type
 20084 ;;		None
 20085 ;; Auto vars:     Size  Location     Type
 20086 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 20087 ;; Return value:  Size  Location     Type
 20088 ;;                  8   33[BANK0 ] struct _RtccDateType
 20089 ;; Registers used:
 20090 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20091 ;; Tracked objects:
 20092 ;;		On entry : 0/0
 20093 ;;		On exit  : 0/0
 20094 ;;		Unchanged: 0/0
 20095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20096 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20097 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20098 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20099 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20100 ;;Total ram usage:       17 bytes
 20101 ;; Hardware stack levels used:    1
 20102 ;; Hardware stack levels required when called:   12
 20103 ;; This function calls:
 20104 ;;		_Rtcc_GetRtccValue
 20105 ;; This function is called by:
 20106 ;;		_Rtcm_MainTask
 20107 ;; This function uses a non-reentrant model
 20108 ;;
 20109                           
 20110                           	psect	text88
 20111  004F8E                     __ptext88:
 20112                           	opt stack 0
 20113  004F8E                     _Rtcm_GetRtccDate:
 20114                           	opt stack 15
 20115                           
 20116                           ;rtcm.c: 204: RtccDateType LocalDate;
 20117                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 20118                           
 20119                           ; BSR set to: 15
 20120                           ;incstack = 0
 20121  004F8E  0E00               	movlw	0
 20122  004F90  EC1D  F024         	call	_Rtcc_GetRtccValue
 20123  004F94  0100               	movlb	0	; () banked
 20124  004F96  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 20125  004F98  0ED0               	movlw	208
 20126  004F9A  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 20127  004F9C  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 20128  004F9E  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 20129  004FA0  0E07               	movlw	7
 20130  004FA2  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 20131                           
 20132                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 20133  004FA4  0E01               	movlw	1
 20134  004FA6  EC1D  F024         	call	_Rtcc_GetRtccValue
 20135  004FAA  0100               	movlb	0	; () banked
 20136  004FAC  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 20137                           
 20138                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 20139  004FAE  0E02               	movlw	2
 20140  004FB0  EC1D  F024         	call	_Rtcc_GetRtccValue
 20141  004FB4  0100               	movlb	0	; () banked
 20142  004FB6  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 20143                           
 20144                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 20145  004FB8  0E03               	movlw	3
 20146  004FBA  EC1D  F024         	call	_Rtcc_GetRtccValue
 20147  004FBE  0100               	movlb	0	; () banked
 20148  004FC0  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 20149                           
 20150                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 20151  004FC2  0E04               	movlw	4
 20152  004FC4  EC1D  F024         	call	_Rtcc_GetRtccValue
 20153  004FC8  0100               	movlb	0	; () banked
 20154  004FCA  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 20155                           
 20156                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 20157  004FCC  0E05               	movlw	5
 20158  004FCE  EC1D  F024         	call	_Rtcc_GetRtccValue
 20159  004FD2  0100               	movlb	0	; () banked
 20160  004FD4  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 20161                           
 20162                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 20163  004FD6  0E06               	movlw	6
 20164  004FD8  EC1D  F024         	call	_Rtcc_GetRtccValue
 20165  004FDC  0100               	movlb	0	; () banked
 20166  004FDE  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 20167                           
 20168                           ; BSR set to: 0
 20169                           ;rtcm.c: 216: return LocalDate;
 20170  004FE0  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 20171  004FE4  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 20172  004FE8  0E07               	movlw	7
 20173  004FEA                     u9171:
 20174  004FEA  CFDB FFEB          	movff	plusw2,plusw0
 20175  004FEE  06E8               	decf	wreg,f,c
 20176  004FF0  E2FC               	bc	u9171
 20177  004FF2  0012               	return	
 20178  004FF4                     __end_of_Rtcm_GetRtccDate:
 20179                           	opt stack 0
 20180                           tosu	equ	0xFFF
 20181                           tosh	equ	0xFFE
 20182                           tosl	equ	0xFFD
 20183                           pclath	equ	0xFFA
 20184                           tblptru	equ	0xFF8
 20185                           tblptrh	equ	0xFF7
 20186                           tblptrl	equ	0xFF6
 20187                           tablat	equ	0xFF5
 20188                           prodh	equ	0xFF4
 20189                           prodl	equ	0xFF3
 20190                           intcon	equ	0xFF2
 20191                           intcon2	equ	0xFF1
 20192                           intcon3	equ	0xFF0
 20193                           indf0	equ	0xFEF
 20194                           postinc0	equ	0xFEE
 20195                           plusw0	equ	0xFEB
 20196                           fsr0h	equ	0xFEA
 20197                           fsr0l	equ	0xFE9
 20198                           wreg	equ	0xFE8
 20199                           indf1	equ	0xFE7
 20200                           postinc1	equ	0xFE6
 20201                           postdec1	equ	0xFE5
 20202                           plusw1	equ	0xFE3
 20203                           fsr1h	equ	0xFE2
 20204                           fsr1l	equ	0xFE1
 20205                           indf2	equ	0xFDF
 20206                           postinc2	equ	0xFDE
 20207                           postdec2	equ	0xFDD
 20208                           plusw2	equ	0xFDB
 20209                           fsr2h	equ	0xFDA
 20210                           fsr2l	equ	0xFD9
 20211                           status	equ	0xFD8
 20212                           
 20213 ;; *************** function _Rtcc_GetRtccValue *****************
 20214 ;; Defined at:
 20215 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20216 ;; Parameters:    Size  Location     Type
 20217 ;;  RtccPtrVal      1    wreg     enum E7757
 20218 ;; Auto vars:     Size  Location     Type
 20219 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 20220 ;;  RegValue        1   32[BANK0 ] unsigned char 
 20221 ;;  RetValue        1   31[BANK0 ] unsigned char 
 20222 ;; Return value:  Size  Location     Type
 20223 ;;                  1    wreg      unsigned char 
 20224 ;; Registers used:
 20225 ;;		wreg, status,2, status,0, prodl, prodh
 20226 ;; Tracked objects:
 20227 ;;		On entry : 0/0
 20228 ;;		On exit  : 0/0
 20229 ;;		Unchanged: 0/0
 20230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20232 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20233 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20234 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20235 ;;Total ram usage:        4 bytes
 20236 ;; Hardware stack levels used:    1
 20237 ;; Hardware stack levels required when called:   11
 20238 ;; This function calls:
 20239 ;;		Nothing
 20240 ;; This function is called by:
 20241 ;;		_Rtcm_GetRtccDate
 20242 ;; This function uses a non-reentrant model
 20243 ;;
 20244                           
 20245                           	psect	text89
 20246  00483A                     __ptext89:
 20247                           	opt stack 0
 20248  00483A                     _Rtcc_GetRtccValue:
 20249                           	opt stack 15
 20250                           
 20251                           ; BSR set to: 0
 20252                           ;incstack = 0
 20253                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20254  00483A  0100               	movlb	0	; () banked
 20255  00483C  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20256                           
 20257                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20258                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20259                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20260  00483E  D02D               	goto	l416
 20261  004840                     l417:
 20262                           
 20263                           ; BSR set to: 0
 20264                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20265  004840  010F               	movlb	15	; () banked
 20266  004842  833F               	bsf	63,1,b	;volatile
 20267  004844                     
 20268                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20269  004844  813F               	bsf	63,0,b	;volatile
 20270  004846  D01C               	goto	L20
 20271  004848                     l419:
 20272                           
 20273                           ; BSR set to: 0
 20274                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20275  004848  010F               	movlb	15	; () banked
 20276  00484A  833F               	bsf	63,1,b	;volatile
 20277  00484C  D01E               	goto	L21
 20278  00484E                     l420:
 20279                           
 20280                           ; BSR set to: 0
 20281                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20282  00484E  010F               	movlb	15	; () banked
 20283  004850  833F               	bsf	63,1,b	;volatile
 20284  004852  D021               	goto	L24
 20285  004854                     l9059:
 20286                           
 20287                           ; BSR set to: 15
 20288                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20289  004854  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20290  004858  0E0F               	movlw	15
 20291  00485A  0100               	movlb	0	; () banked
 20292  00485C  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20293  00485E  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20294  004860  0B0F               	andlw	15
 20295  004862  0B0F               	andlw	15
 20296  004864  0D0A               	mullw	10
 20297  004866  50F3               	movf	prodl,w,c
 20298  004868  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20299  00486A  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20300                           
 20301                           ;rtcc_drv.c: 241: break;
 20302  00486C  D02D               	goto	l418
 20303  00486E                     l421:
 20304                           
 20305                           ; BSR set to: 0
 20306                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20307  00486E  010F               	movlb	15	; () banked
 20308  004870  933F               	bcf	63,1,b	;volatile
 20309                           
 20310                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20311  004872  813F               	bsf	63,0,b	;volatile
 20312                           
 20313                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20314  004874  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20315                           
 20316                           ;rtcc_drv.c: 249: break;
 20317  004878  D027               	goto	l418
 20318  00487A                     l422:
 20319                           
 20320                           ; BSR set to: 0
 20321                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20322  00487A  010F               	movlb	15	; () banked
 20323  00487C  933F               	bcf	63,1,b	;volatile
 20324  00487E  D7E2               	goto	L22
 20325  004880                     L20:
 20326                           
 20327                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20328  004880  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20329  004884  D7E7               	goto	l9059
 20330  004886                     l423:
 20331                           
 20332                           ; BSR set to: 0
 20333                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20334  004886  010F               	movlb	15	; () banked
 20335  004888  933F               	bcf	63,1,b	;volatile
 20336  00488A                     L21:
 20337                           
 20338                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20339  00488A  913F               	bcf	63,0,b	;volatile
 20340                           
 20341                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20342  00488C  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20343  004890  D7E1               	goto	l9059
 20344  004892                     l424:
 20345                           
 20346                           ; BSR set to: 0
 20347                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20348  004892  010F               	movlb	15	; () banked
 20349  004894  933F               	bcf	63,1,b	;volatile
 20350  004896                     L24:
 20351                           
 20352                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20353  004896  913F               	bcf	63,0,b	;volatile
 20354  004898  D7F3               	goto	L20
 20355  00489A                     l416:
 20356                           
 20357                           ; BSR set to: 0
 20358  00489A  0100               	movlb	0	; () banked
 20359  00489C  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20360                           
 20361                           ; Switch size 1, requested type "space"
 20362                           ; Number of cases is 7, Range of values is 0 to 6
 20363                           ; switch strategies available:
 20364                           ; Name         Instructions Cycles
 20365                           ; simple_byte           22    12 (average)
 20366                           ;	Chosen strategy is simple_byte
 20367  00489E  0A00               	xorlw	0	; case 0
 20368  0048A0  B4D8               	btfsc	status,2,c
 20369  0048A2  D7CE               	goto	l417
 20370  0048A4  0A01               	xorlw	1	; case 1
 20371  0048A6  B4D8               	btfsc	status,2,c
 20372  0048A8  D7CF               	goto	l419
 20373  0048AA  0A03               	xorlw	3	; case 2
 20374  0048AC  B4D8               	btfsc	status,2,c
 20375  0048AE  D7CF               	goto	l420
 20376  0048B0  0A01               	xorlw	1	; case 3
 20377  0048B2  B4D8               	btfsc	status,2,c
 20378  0048B4  D7DC               	goto	l421
 20379  0048B6  0A07               	xorlw	7	; case 4
 20380  0048B8  B4D8               	btfsc	status,2,c
 20381  0048BA  D7DF               	goto	l422
 20382  0048BC  0A01               	xorlw	1	; case 5
 20383  0048BE  B4D8               	btfsc	status,2,c
 20384  0048C0  D7E2               	goto	l423
 20385  0048C2  0A03               	xorlw	3	; case 6
 20386  0048C4  B4D8               	btfsc	status,2,c
 20387  0048C6  D7E5               	goto	l424
 20388  0048C8                     l418:
 20389                           
 20390                           ;rtcc_drv.c: 286: return RetValue;
 20391                           
 20392                           ; BSR set to: 0
 20393  0048C8  0100               	movlb	0	; () banked
 20394  0048CA  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20395  0048CC  0012               	return	
 20396  0048CE                     __end_of_Rtcc_GetRtccValue:
 20397                           	opt stack 0
 20398                           tosu	equ	0xFFF
 20399                           tosh	equ	0xFFE
 20400                           tosl	equ	0xFFD
 20401                           pclath	equ	0xFFA
 20402                           tblptru	equ	0xFF8
 20403                           tblptrh	equ	0xFF7
 20404                           tblptrl	equ	0xFF6
 20405                           tablat	equ	0xFF5
 20406                           prodh	equ	0xFF4
 20407                           prodl	equ	0xFF3
 20408                           intcon	equ	0xFF2
 20409                           intcon2	equ	0xFF1
 20410                           intcon3	equ	0xFF0
 20411                           indf0	equ	0xFEF
 20412                           postinc0	equ	0xFEE
 20413                           plusw0	equ	0xFEB
 20414                           fsr0h	equ	0xFEA
 20415                           fsr0l	equ	0xFE9
 20416                           wreg	equ	0xFE8
 20417                           indf1	equ	0xFE7
 20418                           postinc1	equ	0xFE6
 20419                           postdec1	equ	0xFE5
 20420                           plusw1	equ	0xFE3
 20421                           fsr1h	equ	0xFE2
 20422                           fsr1l	equ	0xFE1
 20423                           indf2	equ	0xFDF
 20424                           postinc2	equ	0xFDE
 20425                           postdec2	equ	0xFDD
 20426                           plusw2	equ	0xFDB
 20427                           fsr2h	equ	0xFDA
 20428                           fsr2l	equ	0xFD9
 20429                           status	equ	0xFD8
 20430                           
 20431 ;; *************** function _Rtcc_SetRtcStatus *****************
 20432 ;; Defined at:
 20433 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20434 ;; Parameters:    Size  Location     Type
 20435 ;;  Status          1    wreg     unsigned char 
 20436 ;; Auto vars:     Size  Location     Type
 20437 ;;  Status          1   29[BANK0 ] unsigned char 
 20438 ;; Return value:  Size  Location     Type
 20439 ;;                  1    wreg      void 
 20440 ;; Registers used:
 20441 ;;		wreg
 20442 ;; Tracked objects:
 20443 ;;		On entry : 0/0
 20444 ;;		On exit  : 0/0
 20445 ;;		Unchanged: 0/0
 20446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20448 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20450 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20451 ;;Total ram usage:        1 bytes
 20452 ;; Hardware stack levels used:    1
 20453 ;; Hardware stack levels required when called:   11
 20454 ;; This function calls:
 20455 ;;		Nothing
 20456 ;; This function is called by:
 20457 ;;		_Rtcm_MainTask
 20458 ;; This function uses a non-reentrant model
 20459 ;;
 20460                           
 20461                           	psect	text90
 20462  00603C                     __ptext90:
 20463                           	opt stack 0
 20464  00603C                     _Rtcc_SetRtcStatus:
 20465                           	opt stack 16
 20466                           
 20467                           ; BSR set to: 0
 20468                           ;incstack = 0
 20469                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20470  00603C  0100               	movlb	0	; () banked
 20471  00603E  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20472                           
 20473                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20474  006040  0100               	movlb	0	; () banked
 20475  006042  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20476  006044  D003               	bra	u8065
 20477  006046  010F               	movlb	15	; () banked
 20478  006048  9F3F               	bcf	63,7,b	;volatile
 20479  00604A  D002               	bra	u8066
 20480  00604C                     u8065:
 20481  00604C  010F               	movlb	15	; () banked
 20482  00604E  8F3F               	bsf	63,7,b	;volatile
 20483  006050                     u8066:
 20484                           
 20485                           ; BSR set to: 15
 20486  006050  0012               	return		;funcret
 20487  006052                     __end_of_Rtcc_SetRtcStatus:
 20488                           	opt stack 0
 20489                           tosu	equ	0xFFF
 20490                           tosh	equ	0xFFE
 20491                           tosl	equ	0xFFD
 20492                           pclath	equ	0xFFA
 20493                           tblptru	equ	0xFF8
 20494                           tblptrh	equ	0xFF7
 20495                           tblptrl	equ	0xFF6
 20496                           tablat	equ	0xFF5
 20497                           prodh	equ	0xFF4
 20498                           prodl	equ	0xFF3
 20499                           intcon	equ	0xFF2
 20500                           intcon2	equ	0xFF1
 20501                           intcon3	equ	0xFF0
 20502                           indf0	equ	0xFEF
 20503                           postinc0	equ	0xFEE
 20504                           plusw0	equ	0xFEB
 20505                           fsr0h	equ	0xFEA
 20506                           fsr0l	equ	0xFE9
 20507                           wreg	equ	0xFE8
 20508                           indf1	equ	0xFE7
 20509                           postinc1	equ	0xFE6
 20510                           postdec1	equ	0xFE5
 20511                           plusw1	equ	0xFE3
 20512                           fsr1h	equ	0xFE2
 20513                           fsr1l	equ	0xFE1
 20514                           indf2	equ	0xFDF
 20515                           postinc2	equ	0xFDE
 20516                           postdec2	equ	0xFDD
 20517                           plusw2	equ	0xFDB
 20518                           fsr2h	equ	0xFDA
 20519                           fsr2l	equ	0xFD9
 20520                           status	equ	0xFD8
 20521                           
 20522 ;; *************** function _Rtcc_RtcConfig *****************
 20523 ;; Defined at:
 20524 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20525 ;; Parameters:    Size  Location     Type
 20526 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20527 ;;		 -> RtcConfig(4), 
 20528 ;; Auto vars:     Size  Location     Type
 20529 ;;		None
 20530 ;; Return value:  Size  Location     Type
 20531 ;;                  1    wreg      void 
 20532 ;; Registers used:
 20533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20534 ;; Tracked objects:
 20535 ;;		On entry : 0/0
 20536 ;;		On exit  : 0/0
 20537 ;;		Unchanged: 0/0
 20538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20539 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20541 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20542 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20543 ;;Total ram usage:        3 bytes
 20544 ;; Hardware stack levels used:    1
 20545 ;; Hardware stack levels required when called:   12
 20546 ;; This function calls:
 20547 ;;		_RtccIrqInit
 20548 ;; This function is called by:
 20549 ;;		_Rtcm_MainTask
 20550 ;; This function uses a non-reentrant model
 20551 ;;
 20552                           
 20553                           	psect	text91
 20554  0044A4                     __ptext91:
 20555                           	opt stack 0
 20556  0044A4                     _Rtcc_RtcConfig:
 20557                           	opt stack 15
 20558                           
 20559                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20560                           
 20561                           ; BSR set to: 15
 20562                           ;incstack = 0
 20563  0044A4  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20564  0044A8  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20565  0044AC  50DF               	movf	indf2,w,c
 20566  0044AE  0100               	movlb	0	; () banked
 20567  0044B0  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20568  0044B2  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20569  0044B4  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20570  0044B6  010F               	movlb	15	; () banked
 20571  0044B8  513F               	movf	63,w,b	;volatile
 20572  0044BA  0100               	movlb	0	; () banked
 20573  0044BC  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20574  0044BE  0BFB               	andlw	-5
 20575  0044C0  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20576  0044C2  010F               	movlb	15	; () banked
 20577  0044C4  6F3F               	movwf	63,b	;volatile
 20578                           
 20579                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20580  0044C6  0100               	movlb	0	; () banked
 20581  0044C8  EE20 F001          	lfsr	2,1
 20582  0044CC  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20583  0044CE  26D9               	addwf	fsr2l,f,c
 20584  0044D0  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20585  0044D2  22DA               	addwfc	fsr2h,f,c
 20586  0044D4  50DF               	movf	indf2,w,c
 20587  0044D6  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20588  0044D8  0E01               	movlw	1
 20589  0044DA  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20590  0044DC  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20591  0044DE  010F               	movlb	15	; () banked
 20592  0044E0  513C               	movf	60,w,b	;volatile
 20593  0044E2  0100               	movlb	0	; () banked
 20594  0044E4  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20595  0044E6  0BFD               	andlw	-3
 20596  0044E8  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20597  0044EA  010F               	movlb	15	; () banked
 20598  0044EC  6F3C               	movwf	60,b	;volatile
 20599                           
 20600                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20601  0044EE  0100               	movlb	0	; () banked
 20602  0044F0  EE20 F001          	lfsr	2,1
 20603  0044F4  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20604  0044F6  26D9               	addwf	fsr2l,f,c
 20605  0044F8  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20606  0044FA  22DA               	addwfc	fsr2h,f,c
 20607  0044FC  50DF               	movf	indf2,w,c
 20608  0044FE  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20609  004500  90D8               	bcf	status,0,c
 20610  004502  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20611  004504  0E01               	movlw	1
 20612  004506  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20613  004508  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20614  00450A  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20615  00450C  010F               	movlb	15	; () banked
 20616  00450E  513C               	movf	60,w,b	;volatile
 20617  004510  0100               	movlb	0	; () banked
 20618  004512  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20619  004514  0BFB               	andlw	-5
 20620  004516  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20621  004518  010F               	movlb	15	; () banked
 20622  00451A  6F3C               	movwf	60,b	;volatile
 20623                           
 20624                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20625  00451C  0100               	movlb	0	; () banked
 20626  00451E  EE20 F002          	lfsr	2,2
 20627  004522  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20628  004524  26D9               	addwf	fsr2l,f,c
 20629  004526  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20630  004528  22DA               	addwfc	fsr2h,f,c
 20631  00452A  04DE               	decf	postinc2,w,c
 20632  00452C  A4D8               	btfss	status,2,c
 20633  00452E  0012               	return	
 20634                           
 20635                           ; BSR set to: 0
 20636                           ;rtcc_drv.c: 115: {
 20637                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20638  004530  EE20 F003          	lfsr	2,3
 20639  004534  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20640  004536  26D9               	addwf	fsr2l,f,c
 20641  004538  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20642  00453A  22DA               	addwfc	fsr2h,f,c
 20643  00453C  50DF               	movf	indf2,w,c
 20644  00453E  EC29  F030         	call	_RtccIrqInit
 20645  004542  0012               	return	
 20646  004544                     __end_of_Rtcc_RtcConfig:
 20647                           	opt stack 0
 20648                           tosu	equ	0xFFF
 20649                           tosh	equ	0xFFE
 20650                           tosl	equ	0xFFD
 20651                           pclath	equ	0xFFA
 20652                           tblptru	equ	0xFF8
 20653                           tblptrh	equ	0xFF7
 20654                           tblptrl	equ	0xFF6
 20655                           tablat	equ	0xFF5
 20656                           prodh	equ	0xFF4
 20657                           prodl	equ	0xFF3
 20658                           intcon	equ	0xFF2
 20659                           intcon2	equ	0xFF1
 20660                           intcon3	equ	0xFF0
 20661                           indf0	equ	0xFEF
 20662                           postinc0	equ	0xFEE
 20663                           plusw0	equ	0xFEB
 20664                           fsr0h	equ	0xFEA
 20665                           fsr0l	equ	0xFE9
 20666                           wreg	equ	0xFE8
 20667                           indf1	equ	0xFE7
 20668                           postinc1	equ	0xFE6
 20669                           postdec1	equ	0xFE5
 20670                           plusw1	equ	0xFE3
 20671                           fsr1h	equ	0xFE2
 20672                           fsr1l	equ	0xFE1
 20673                           indf2	equ	0xFDF
 20674                           postinc2	equ	0xFDE
 20675                           postdec2	equ	0xFDD
 20676                           plusw2	equ	0xFDB
 20677                           fsr2h	equ	0xFDA
 20678                           fsr2l	equ	0xFD9
 20679                           status	equ	0xFD8
 20680                           
 20681 ;; *************** function _RtccIrqInit *****************
 20682 ;; Defined at:
 20683 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20684 ;; Parameters:    Size  Location     Type
 20685 ;;  Priority        1    wreg     enum E7716
 20686 ;; Auto vars:     Size  Location     Type
 20687 ;;  Priority        1   29[BANK0 ] enum E7716
 20688 ;; Return value:  Size  Location     Type
 20689 ;;                  1    wreg      void 
 20690 ;; Registers used:
 20691 ;;		wreg
 20692 ;; Tracked objects:
 20693 ;;		On entry : 0/0
 20694 ;;		On exit  : 0/0
 20695 ;;		Unchanged: 0/0
 20696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20698 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20700 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20701 ;;Total ram usage:        1 bytes
 20702 ;; Hardware stack levels used:    1
 20703 ;; Hardware stack levels required when called:   11
 20704 ;; This function calls:
 20705 ;;		Nothing
 20706 ;; This function is called by:
 20707 ;;		_Rtcc_RtcConfig
 20708 ;; This function uses a non-reentrant model
 20709 ;;
 20710                           
 20711                           	psect	text92
 20712  006052                     __ptext92:
 20713                           	opt stack 0
 20714  006052                     _RtccIrqInit:
 20715                           	opt stack 15
 20716                           
 20717                           ;incstack = 0
 20718                           ;RtccIrqInit@Priority stored from wreg
 20719  006052  0100               	movlb	0	; () banked
 20720  006054  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20721                           
 20722                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20723  006056  90A4               	bcf	4004,0,c	;volatile
 20724                           
 20725                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20726  006058  0100               	movlb	0	; () banked
 20727  00605A  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20728  00605C  D002               	bra	u7085
 20729  00605E  90A5               	bcf	4005,0,c	;volatile
 20730  006060  D001               	bra	u7086
 20731  006062                     u7085:
 20732  006062  80A5               	bsf	4005,0,c	;volatile
 20733  006064                     u7086:
 20734                           
 20735                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20736  006064  80A3               	bsf	4003,0,c	;volatile
 20737  006066  0012               	return		;funcret
 20738  006068                     __end_of_RtccIrqInit:
 20739                           	opt stack 0
 20740                           tosu	equ	0xFFF
 20741                           tosh	equ	0xFFE
 20742                           tosl	equ	0xFFD
 20743                           pclath	equ	0xFFA
 20744                           tblptru	equ	0xFF8
 20745                           tblptrh	equ	0xFF7
 20746                           tblptrl	equ	0xFF6
 20747                           tablat	equ	0xFF5
 20748                           prodh	equ	0xFF4
 20749                           prodl	equ	0xFF3
 20750                           intcon	equ	0xFF2
 20751                           intcon2	equ	0xFF1
 20752                           intcon3	equ	0xFF0
 20753                           indf0	equ	0xFEF
 20754                           postinc0	equ	0xFEE
 20755                           plusw0	equ	0xFEB
 20756                           fsr0h	equ	0xFEA
 20757                           fsr0l	equ	0xFE9
 20758                           wreg	equ	0xFE8
 20759                           indf1	equ	0xFE7
 20760                           postinc1	equ	0xFE6
 20761                           postdec1	equ	0xFE5
 20762                           plusw1	equ	0xFE3
 20763                           fsr1h	equ	0xFE2
 20764                           fsr1l	equ	0xFE1
 20765                           indf2	equ	0xFDF
 20766                           postinc2	equ	0xFDE
 20767                           postdec2	equ	0xFDD
 20768                           plusw2	equ	0xFDB
 20769                           fsr2h	equ	0xFDA
 20770                           fsr2l	equ	0xFD9
 20771                           status	equ	0xFD8
 20772                           
 20773 ;; *************** function _Rtcc_AlarmConfig *****************
 20774 ;; Defined at:
 20775 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20776 ;; Parameters:    Size  Location     Type
 20777 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20778 ;;		 -> AlCfg(4), 
 20779 ;; Auto vars:     Size  Location     Type
 20780 ;;		None
 20781 ;; Return value:  Size  Location     Type
 20782 ;;                  1    wreg      void 
 20783 ;; Registers used:
 20784 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20785 ;; Tracked objects:
 20786 ;;		On entry : 0/0
 20787 ;;		On exit  : 0/0
 20788 ;;		Unchanged: 0/0
 20789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20790 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20792 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20793 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20794 ;;Total ram usage:        3 bytes
 20795 ;; Hardware stack levels used:    1
 20796 ;; Hardware stack levels required when called:   11
 20797 ;; This function calls:
 20798 ;;		Nothing
 20799 ;; This function is called by:
 20800 ;;		_Rtcm_MainTask
 20801 ;; This function uses a non-reentrant model
 20802 ;;
 20803                           
 20804                           	psect	text93
 20805  004EBC                     __ptext93:
 20806                           	opt stack 0
 20807  004EBC                     _Rtcc_AlarmConfig:
 20808                           	opt stack 16
 20809                           
 20810                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20811                           
 20812                           ;incstack = 0
 20813  004EBC  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20814  004EC0  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20815  004EC4  50DF               	movf	indf2,w,c
 20816  004EC6  0100               	movlb	0	; () banked
 20817  004EC8  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20818  004ECA  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20819  004ECC  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20820  004ECE  5091               	movf	3985,w,c	;volatile
 20821  004ED0  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20822  004ED2  0B7F               	andlw	-129
 20823  004ED4  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20824  004ED6  6E91               	movwf	3985,c	;volatile
 20825                           
 20826                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20827  004ED8  EE20 F001          	lfsr	2,1
 20828  004EDC  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20829  004EDE  26D9               	addwf	fsr2l,f,c
 20830  004EE0  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20831  004EE2  22DA               	addwfc	fsr2h,f,c
 20832  004EE4  50DF               	movf	indf2,w,c
 20833  004EE6  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20834  004EE8  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20835  004EEA  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20836  004EEC  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20837  004EEE  5091               	movf	3985,w,c	;volatile
 20838  004EF0  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20839  004EF2  0BBF               	andlw	-65
 20840  004EF4  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20841  004EF6  6E91               	movwf	3985,c	;volatile
 20842                           
 20843                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20844  004EF8  EE20 F002          	lfsr	2,2
 20845  004EFC  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20846  004EFE  26D9               	addwf	fsr2l,f,c
 20847  004F00  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20848  004F02  22DA               	addwfc	fsr2h,f,c
 20849  004F04  50DF               	movf	indf2,w,c
 20850  004F06  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20851  004F08  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20852  004F0A  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20853  004F0C  5091               	movf	3985,w,c	;volatile
 20854  004F0E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20855  004F10  0BC3               	andlw	-61
 20856  004F12  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20857  004F14  6E91               	movwf	3985,c	;volatile
 20858                           
 20859                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20860  004F16  EE20 F003          	lfsr	2,3
 20861  004F1A  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20862  004F1C  26D9               	addwf	fsr2l,f,c
 20863  004F1E  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20864  004F20  22DA               	addwfc	fsr2h,f,c
 20865  004F22  50DF               	movf	indf2,w,c
 20866  004F24  6E90               	movwf	3984,c	;volatile
 20867                           
 20868                           ; BSR set to: 0
 20869  004F26  0012               	return		;funcret
 20870  004F28                     __end_of_Rtcc_AlarmConfig:
 20871                           	opt stack 0
 20872                           tosu	equ	0xFFF
 20873                           tosh	equ	0xFFE
 20874                           tosl	equ	0xFFD
 20875                           pclath	equ	0xFFA
 20876                           tblptru	equ	0xFF8
 20877                           tblptrh	equ	0xFF7
 20878                           tblptrl	equ	0xFF6
 20879                           tablat	equ	0xFF5
 20880                           prodh	equ	0xFF4
 20881                           prodl	equ	0xFF3
 20882                           intcon	equ	0xFF2
 20883                           intcon2	equ	0xFF1
 20884                           intcon3	equ	0xFF0
 20885                           indf0	equ	0xFEF
 20886                           postinc0	equ	0xFEE
 20887                           plusw0	equ	0xFEB
 20888                           fsr0h	equ	0xFEA
 20889                           fsr0l	equ	0xFE9
 20890                           wreg	equ	0xFE8
 20891                           indf1	equ	0xFE7
 20892                           postinc1	equ	0xFE6
 20893                           postdec1	equ	0xFE5
 20894                           plusw1	equ	0xFE3
 20895                           fsr1h	equ	0xFE2
 20896                           fsr1l	equ	0xFE1
 20897                           indf2	equ	0xFDF
 20898                           postinc2	equ	0xFDE
 20899                           postdec2	equ	0xFDD
 20900                           plusw2	equ	0xFDB
 20901                           fsr2h	equ	0xFDA
 20902                           fsr2l	equ	0xFD9
 20903                           status	equ	0xFD8
 20904                           
 20905 ;; *************** function _initGprsModem *****************
 20906 ;; Defined at:
 20907 ;;		line 109 in file "../Source/c/04_App/app.c"
 20908 ;; Parameters:    Size  Location     Type
 20909 ;;		None
 20910 ;; Auto vars:     Size  Location     Type
 20911 ;;		None
 20912 ;; Return value:  Size  Location     Type
 20913 ;;                  1    wreg      unsigned char 
 20914 ;; Registers used:
 20915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20916 ;; Tracked objects:
 20917 ;;		On entry : 0/0
 20918 ;;		On exit  : 0/0
 20919 ;;		Unchanged: 0/0
 20920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20925 ;;Total ram usage:        0 bytes
 20926 ;; Hardware stack levels used:    1
 20927 ;; Hardware stack levels required when called:   14
 20928 ;; This function calls:
 20929 ;;		_Led_SetLedStatus
 20930 ;;		_Mdm_SetSmsFormat
 20931 ;;		_Uart_WriteConstString
 20932 ;;		_secondsAppTimer
 20933 ;; This function is called by:
 20934 ;;		_MyApp_Task
 20935 ;; This function uses a non-reentrant model
 20936 ;;
 20937                           
 20938                           	psect	text94
 20939  004C04                     __ptext94:
 20940                           	opt stack 0
 20941  004C04                     _initGprsModem:
 20942                           	opt stack 13
 20943                           
 20944                           ;app.c: 111: static uint16_t modemCounter = 0;
 20945                           ;app.c: 112: static bool isInitialized = 0;
 20946                           ;app.c: 113: static uint8_t initMdm = 0;
 20947                           ;app.c: 115: switch(initMdm)
 20948                           
 20949                           ; BSR set to: 0
 20950                           ;incstack = 0
 20951  004C04  D034               	goto	l2537
 20952  004C06                     
 20953                           ;app.c: 118: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 20954  004C06  0E03               	movlw	3
 20955  004C08  0100               	movlb	0	; () banked
 20956  004C0A  19D6               	xorwf	_MdmStatus& (0+255),w,b
 20957  004C0C  B4D8               	btfsc	status,2,c
 20958  004C0E  D003               	goto	u13290
 20959                           
 20960                           ; BSR set to: 0
 20961  004C10  05D6               	decf	_MdmStatus& (0+255),w,b
 20962  004C12  A4D8               	btfss	status,2,c
 20963  004C14  D034               	goto	l2543
 20964  004C16                     u13290:
 20965                           
 20966                           ; BSR set to: 0
 20967                           ;app.c: 119: {
 20968                           ;app.c: 120: if (secondsAppTimer(5, &modemCounter, 0))
 20969                           
 20970                           ; BSR set to: 0
 20971  004C16  0EB8               	movlw	low initGprsModem@modemCounter
 20972  004C18  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20973  004C1A  0E03               	movlw	high initGprsModem@modemCounter
 20974  004C1C  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20975  004C1E  0E00               	movlw	0
 20976  004C20  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20977  004C22  0E05               	movlw	5
 20978  004C24  EC01  F022         	call	_secondsAppTimer
 20979  004C28  0900               	iorlw	0
 20980  004C2A  B4D8               	btfsc	status,2,c
 20981  004C2C  D028               	goto	l2543
 20982                           
 20983                           ;app.c: 121: {
 20984                           ;app.c: 122: Mdm_SetSmsFormat(1);
 20985  004C2E  0E01               	movlw	1
 20986  004C30  EC89  F02A         	call	_Mdm_SetSmsFormat
 20987                           
 20988                           ;app.c: 123: Led_SetLedStatus(1u, LED_STS_ON);
 20989  004C34  0E01               	movlw	1
 20990  004C36  0100               	movlb	0	; () banked
 20991  004C38  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20992  004C3A  0E01               	movlw	1
 20993  004C3C  EC1E  F02E         	call	_Led_SetLedStatus
 20994                           
 20995                           ;app.c: 124: initMdm = 1;
 20996  004C40  0E01               	movlw	1
 20997  004C42  0101               	movlb	1	; () banked
 20998  004C44  D012               	goto	L25
 20999  004C46                     
 21000                           ; BSR set to: 1
 21001                           ;app.c: 129: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 21002                           
 21003                           ; BSR set to: 1
 21004  004C46  0E05               	movlw	low STR_29
 21005  004C48  0100               	movlb	0	; () banked
 21006  004C4A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21007  004C4C  0EFF               	movlw	high STR_29
 21008  004C4E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21009  004C50  0E01               	movlw	1
 21010  004C52  EC1A  F02C         	call	_Uart_WriteConstString
 21011                           
 21012                           ;app.c: 130: Led_SetLedStatus(1u, LED_STS_ON);
 21013  004C56  0E01               	movlw	1
 21014  004C58  0100               	movlb	0	; () banked
 21015  004C5A  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21016  004C5C  0E01               	movlw	1
 21017  004C5E  EC1E  F02E         	call	_Led_SetLedStatus
 21018                           
 21019                           ;app.c: 131: isInitialized = 1;
 21020  004C62  0E01               	movlw	1
 21021  004C64  0101               	movlb	1	; () banked
 21022  004C66  6FD5               	movwf	initGprsModem@isInitialized& (0+255),b
 21023                           
 21024                           ; BSR set to: 1
 21025                           ;app.c: 132: initMdm = 2;
 21026  004C68  0E02               	movlw	2
 21027  004C6A                     L25:
 21028  004C6A  6FD4               	movwf	initGprsModem@initMdm& (0+255),b
 21029                           
 21030                           ; BSR set to: 1
 21031                           ;app.c: 137: }
 21032                           
 21033                           ; BSR set to: 1
 21034                           ;app.c: 136: break;
 21035                           
 21036                           ;app.c: 135: default:
 21037                           
 21038                           ;app.c: 133: break;
 21039  004C6C  D008               	goto	l2543
 21040  004C6E                     l2537:
 21041                           
 21042                           ; BSR set to: 1
 21043  004C6E  0101               	movlb	1	; () banked
 21044  004C70  51D4               	movf	initGprsModem@initMdm& (0+255),w,b
 21045                           
 21046                           ; Switch size 1, requested type "space"
 21047                           ; Number of cases is 2, Range of values is 0 to 1
 21048                           ; switch strategies available:
 21049                           ; Name         Instructions Cycles
 21050                           ; simple_byte            7     4 (average)
 21051                           ;	Chosen strategy is simple_byte
 21052  004C72  0A00               	xorlw	0	; case 0
 21053  004C74  B4D8               	btfsc	status,2,c
 21054  004C76  D7C7               	goto	l2538
 21055  004C78  0A01               	xorlw	1	; case 1
 21056  004C7A  B4D8               	btfsc	status,2,c
 21057  004C7C  D7E4               	goto	l2544
 21058  004C7E                     l2543:
 21059                           
 21060                           ;app.c: 139: return isInitialized;
 21061                           
 21062                           ; BSR set to: 1
 21063  004C7E  0101               	movlb	1	; () banked
 21064  004C80  51D5               	movf	initGprsModem@isInitialized& (0+255),w,b
 21065  004C82  0012               	return	
 21066  004C84                     __end_of_initGprsModem:
 21067                           	opt stack 0
 21068                           tosu	equ	0xFFF
 21069                           tosh	equ	0xFFE
 21070                           tosl	equ	0xFFD
 21071                           pclath	equ	0xFFA
 21072                           tblptru	equ	0xFF8
 21073                           tblptrh	equ	0xFF7
 21074                           tblptrl	equ	0xFF6
 21075                           tablat	equ	0xFF5
 21076                           prodh	equ	0xFF4
 21077                           prodl	equ	0xFF3
 21078                           intcon	equ	0xFF2
 21079                           intcon2	equ	0xFF1
 21080                           intcon3	equ	0xFF0
 21081                           indf0	equ	0xFEF
 21082                           postinc0	equ	0xFEE
 21083                           plusw0	equ	0xFEB
 21084                           fsr0h	equ	0xFEA
 21085                           fsr0l	equ	0xFE9
 21086                           wreg	equ	0xFE8
 21087                           indf1	equ	0xFE7
 21088                           postinc1	equ	0xFE6
 21089                           postdec1	equ	0xFE5
 21090                           plusw1	equ	0xFE3
 21091                           fsr1h	equ	0xFE2
 21092                           fsr1l	equ	0xFE1
 21093                           indf2	equ	0xFDF
 21094                           postinc2	equ	0xFDE
 21095                           postdec2	equ	0xFDD
 21096                           plusw2	equ	0xFDB
 21097                           fsr2h	equ	0xFDA
 21098                           fsr2l	equ	0xFD9
 21099                           status	equ	0xFD8
 21100                           
 21101 ;; *************** function _Mdm_SetSmsFormat *****************
 21102 ;; Defined at:
 21103 ;;		line 819 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21104 ;; Parameters:    Size  Location     Type
 21105 ;;  TextFormat      1    wreg     unsigned char 
 21106 ;; Auto vars:     Size  Location     Type
 21107 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 21108 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 21109 ;;  Index           1   35[BANK0 ] unsigned char 
 21110 ;; Return value:  Size  Location     Type
 21111 ;;                  1    wreg      void 
 21112 ;; Registers used:
 21113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21114 ;; Tracked objects:
 21115 ;;		On entry : 0/0
 21116 ;;		On exit  : 0/0
 21117 ;;		Unchanged: 0/0
 21118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21120 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21122 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21123 ;;Total ram usage:       22 bytes
 21124 ;; Hardware stack levels used:    1
 21125 ;; Hardware stack levels required when called:   13
 21126 ;; This function calls:
 21127 ;;		_Uart_WriteString
 21128 ;; This function is called by:
 21129 ;;		_initGprsModem
 21130 ;; This function uses a non-reentrant model
 21131 ;;
 21132                           
 21133                           	psect	text95
 21134  005512                     __ptext95:
 21135                           	opt stack 0
 21136  005512                     _Mdm_SetSmsFormat:
 21137                           	opt stack 13
 21138                           
 21139                           ; BSR set to: 1
 21140                           ;incstack = 0
 21141                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 21142  005512  0100               	movlb	0	; () banked
 21143  005514  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 21144                           
 21145                           ;mdm_gsm_gprs.c: 821: UINT8 UartMessage[20];
 21146                           ;mdm_gsm_gprs.c: 822: UINT8 Index = 0;
 21147  005516  0E00               	movlw	0
 21148  005518  0100               	movlb	0	; () banked
 21149  00551A  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 21150                           
 21151                           ;mdm_gsm_gprs.c: 825: UartMessage[0] = 'A';
 21152  00551C  0E41               	movlw	65
 21153  00551E  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 21154                           
 21155                           ;mdm_gsm_gprs.c: 826: UartMessage[1] = 'T';
 21156  005520  0E54               	movlw	84
 21157  005522  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 21158                           
 21159                           ;mdm_gsm_gprs.c: 827: UartMessage[2] = '+';
 21160  005524  0E2B               	movlw	43
 21161  005526  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 21162                           
 21163                           ;mdm_gsm_gprs.c: 828: UartMessage[3] = 'C';
 21164  005528  0E43               	movlw	67
 21165  00552A  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 21166                           
 21167                           ;mdm_gsm_gprs.c: 829: UartMessage[4] = 'M';
 21168  00552C  0E4D               	movlw	77
 21169  00552E  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 21170                           
 21171                           ;mdm_gsm_gprs.c: 830: UartMessage[5] = 'G';
 21172  005530  0E47               	movlw	71
 21173  005532  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 21174                           
 21175                           ;mdm_gsm_gprs.c: 831: UartMessage[6] = 'F';
 21176  005534  0E46               	movlw	70
 21177  005536  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 21178                           
 21179                           ;mdm_gsm_gprs.c: 832: UartMessage[7] = '=';
 21180  005538  0E3D               	movlw	61
 21181  00553A  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 21182                           
 21183                           ; BSR set to: 0
 21184                           ;mdm_gsm_gprs.c: 835: if (TextFormat == 1u)
 21185  00553C  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 21186  00553E  A4D8               	btfss	status,2,c
 21187  005540  D002               	goto	l1113
 21188                           
 21189                           ; BSR set to: 0
 21190                           ;mdm_gsm_gprs.c: 836: {
 21191                           ;mdm_gsm_gprs.c: 837: UartMessage[8] = '1';
 21192  005542  0E31               	movlw	49
 21193  005544  D001               	goto	L26
 21194  005546                     l1113:
 21195                           
 21196                           ; BSR set to: 0
 21197                           ;mdm_gsm_gprs.c: 839: else
 21198                           ;mdm_gsm_gprs.c: 840: {
 21199                           ;mdm_gsm_gprs.c: 841: UartMessage[8] = '0';
 21200                           
 21201                           ; BSR set to: 0
 21202  005546  0E30               	movlw	48
 21203  005548                     L26:
 21204  005548  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 21205                           
 21206                           ; BSR set to: 0
 21207                           ;mdm_gsm_gprs.c: 842: }
 21208                           ;mdm_gsm_gprs.c: 844: UartMessage[9] = '\r';
 21209  00554A  0E0D               	movlw	13
 21210  00554C  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 21211                           
 21212                           ;mdm_gsm_gprs.c: 845: UartMessage[10] = (0);
 21213  00554E  0E00               	movlw	0
 21214  005550  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 21215                           
 21216                           ; BSR set to: 0
 21217                           ;mdm_gsm_gprs.c: 848: Uart_WriteString(1, UartMessage);
 21218  005552  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 21219  005554  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 21220  005556  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 21221  005558  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 21222  00555A  0E01               	movlw	1
 21223  00555C  ECDB  F02C         	call	_Uart_WriteString
 21224  005560  0012               	return		;funcret
 21225  005562                     __end_of_Mdm_SetSmsFormat:
 21226                           	opt stack 0
 21227                           tosu	equ	0xFFF
 21228                           tosh	equ	0xFFE
 21229                           tosl	equ	0xFFD
 21230                           pclath	equ	0xFFA
 21231                           tblptru	equ	0xFF8
 21232                           tblptrh	equ	0xFF7
 21233                           tblptrl	equ	0xFF6
 21234                           tablat	equ	0xFF5
 21235                           prodh	equ	0xFF4
 21236                           prodl	equ	0xFF3
 21237                           intcon	equ	0xFF2
 21238                           intcon2	equ	0xFF1
 21239                           intcon3	equ	0xFF0
 21240                           indf0	equ	0xFEF
 21241                           postinc0	equ	0xFEE
 21242                           plusw0	equ	0xFEB
 21243                           fsr0h	equ	0xFEA
 21244                           fsr0l	equ	0xFE9
 21245                           wreg	equ	0xFE8
 21246                           indf1	equ	0xFE7
 21247                           postinc1	equ	0xFE6
 21248                           postdec1	equ	0xFE5
 21249                           plusw1	equ	0xFE3
 21250                           fsr1h	equ	0xFE2
 21251                           fsr1l	equ	0xFE1
 21252                           indf2	equ	0xFDF
 21253                           postinc2	equ	0xFDE
 21254                           postdec2	equ	0xFDD
 21255                           plusw2	equ	0xFDB
 21256                           fsr2h	equ	0xFDA
 21257                           fsr2l	equ	0xFD9
 21258                           status	equ	0xFD8
 21259                           
 21260 ;; *************** function _blinkForSeconds *****************
 21261 ;; Defined at:
 21262 ;;		line 142 in file "../Source/c/04_App/app.c"
 21263 ;; Parameters:    Size  Location     Type
 21264 ;;  seconds         1    wreg     unsigned char 
 21265 ;;  blickTicks      2   51[BANK0 ] PTR unsigned int 
 21266 ;;		 -> MyApp_Task@blickTicks(2), 
 21267 ;; Auto vars:     Size  Location     Type
 21268 ;;  seconds         1   53[BANK0 ] unsigned char 
 21269 ;; Return value:  Size  Location     Type
 21270 ;;                  1    wreg      void 
 21271 ;; Registers used:
 21272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21273 ;; Tracked objects:
 21274 ;;		On entry : 0/0
 21275 ;;		On exit  : 0/0
 21276 ;;		Unchanged: 0/0
 21277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21278 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21281 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21282 ;;Total ram usage:        3 bytes
 21283 ;; Hardware stack levels used:    1
 21284 ;; Hardware stack levels required when called:   13
 21285 ;; This function calls:
 21286 ;;		_Led_SetLedStatus
 21287 ;;		_secondsAppTimer
 21288 ;; This function is called by:
 21289 ;;		_MyApp_Task
 21290 ;; This function uses a non-reentrant model
 21291 ;;
 21292                           
 21293                           	psect	text96
 21294  005A6A                     __ptext96:
 21295                           	opt stack 0
 21296  005A6A                     _blinkForSeconds:
 21297                           	opt stack 14
 21298                           
 21299                           ;incstack = 0
 21300                           ;blinkForSeconds@seconds stored from wreg
 21301  005A6A  0100               	movlb	0	; () banked
 21302  005A6C  6F95               	movwf	blinkForSeconds@seconds& (0+255),b
 21303                           
 21304                           ;app.c: 144: if (secondsAppTimer(seconds, blickTicks, 0))
 21305  005A6E  C093  F08A         	movff	blinkForSeconds@blickTicks,secondsAppTimer@counter
 21306  005A72  C094  F08B         	movff	blinkForSeconds@blickTicks+1,secondsAppTimer@counter+1
 21307  005A76  0E00               	movlw	0
 21308  005A78  0100               	movlb	0	; () banked
 21309  005A7A  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21310  005A7C  5195               	movf	blinkForSeconds@seconds& (0+255),w,b
 21311  005A7E  EC01  F022         	call	_secondsAppTimer
 21312  005A82  0900               	iorlw	0
 21313  005A84  B4D8               	btfsc	status,2,c
 21314  005A86  D007               	goto	l2549
 21315                           
 21316                           ;app.c: 145: {
 21317                           ;app.c: 146: Led_SetLedStatus(1u, LED_STS_ON);
 21318  005A88  0E01               	movlw	1
 21319  005A8A  0100               	movlb	0	; () banked
 21320  005A8C  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21321  005A8E  0E01               	movlw	1
 21322  005A90  EC1E  F02E         	call	_Led_SetLedStatus
 21323                           
 21324                           ;app.c: 147: }
 21325  005A94  0012               	return	
 21326  005A96                     l2549:
 21327                           
 21328                           ;app.c: 148: else
 21329                           ;app.c: 149: {
 21330                           ;app.c: 150: Led_SetLedStatus(1u, LED_STS_BLINK);
 21331  005A96  0E03               	movlw	3
 21332  005A98  0100               	movlb	0	; () banked
 21333  005A9A  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21334  005A9C  0E01               	movlw	1
 21335  005A9E  EC1E  F02E         	call	_Led_SetLedStatus
 21336  005AA2  0012               	return	
 21337  005AA4                     __end_of_blinkForSeconds:
 21338                           	opt stack 0
 21339                           tosu	equ	0xFFF
 21340                           tosh	equ	0xFFE
 21341                           tosl	equ	0xFFD
 21342                           pclath	equ	0xFFA
 21343                           tblptru	equ	0xFF8
 21344                           tblptrh	equ	0xFF7
 21345                           tblptrl	equ	0xFF6
 21346                           tablat	equ	0xFF5
 21347                           prodh	equ	0xFF4
 21348                           prodl	equ	0xFF3
 21349                           intcon	equ	0xFF2
 21350                           intcon2	equ	0xFF1
 21351                           intcon3	equ	0xFF0
 21352                           indf0	equ	0xFEF
 21353                           postinc0	equ	0xFEE
 21354                           plusw0	equ	0xFEB
 21355                           fsr0h	equ	0xFEA
 21356                           fsr0l	equ	0xFE9
 21357                           wreg	equ	0xFE8
 21358                           indf1	equ	0xFE7
 21359                           postinc1	equ	0xFE6
 21360                           postdec1	equ	0xFE5
 21361                           plusw1	equ	0xFE3
 21362                           fsr1h	equ	0xFE2
 21363                           fsr1l	equ	0xFE1
 21364                           indf2	equ	0xFDF
 21365                           postinc2	equ	0xFDE
 21366                           postdec2	equ	0xFDD
 21367                           plusw2	equ	0xFDB
 21368                           fsr2h	equ	0xFDA
 21369                           fsr2l	equ	0xFD9
 21370                           status	equ	0xFD8
 21371                           
 21372 ;; *************** function _secondsAppTimer *****************
 21373 ;; Defined at:
 21374 ;;		line 85 in file "../Source/c/04_App/app.c"
 21375 ;; Parameters:    Size  Location     Type
 21376 ;;  seconds         1    wreg     unsigned char 
 21377 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 21378 ;;		 -> MyApp_Task@blickTicks(2), initGprsModem@modemCounter(2), 
 21379 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 21380 ;; Auto vars:     Size  Location     Type
 21381 ;;  seconds         1   47[BANK0 ] unsigned char 
 21382 ;;  destinationT    2   49[BANK0 ] unsigned int 
 21383 ;;  isExpired       1   48[BANK0 ] unsigned char 
 21384 ;; Return value:  Size  Location     Type
 21385 ;;                  1    wreg      unsigned char 
 21386 ;; Registers used:
 21387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21388 ;; Tracked objects:
 21389 ;;		On entry : 0/0
 21390 ;;		On exit  : 0/0
 21391 ;;		Unchanged: 0/0
 21392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21393 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21394 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21395 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21396 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21397 ;;Total ram usage:        9 bytes
 21398 ;; Hardware stack levels used:    1
 21399 ;; Hardware stack levels required when called:   12
 21400 ;; This function calls:
 21401 ;;		___lwdiv
 21402 ;;		___wmul
 21403 ;; This function is called by:
 21404 ;;		_initGprsModem
 21405 ;;		_blinkForSeconds
 21406 ;; This function uses a non-reentrant model
 21407 ;;
 21408                           
 21409                           	psect	text97
 21410  004402                     __ptext97:
 21411                           	opt stack 0
 21412  004402                     _secondsAppTimer:
 21413                           	opt stack 14
 21414                           
 21415                           ;incstack = 0
 21416                           ;secondsAppTimer@seconds stored from wreg
 21417  004402  0100               	movlb	0	; () banked
 21418  004404  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 21419                           
 21420                           ;app.c: 87: bool isExpired = 1;
 21421  004406  0E01               	movlw	1
 21422  004408  0100               	movlb	0	; () banked
 21423  00440A  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21424                           
 21425                           ; BSR set to: 0
 21426                           ;app.c: 88: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(100));
 21427  00440C  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 21428  004410  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 21429  004412  0E03               	movlw	3
 21430  004414  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21431  004416  0EE8               	movlw	232
 21432  004418  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 21433  00441A  ECA4  F02E         	call	___wmul	;wreg free
 21434  00441E  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 21435  004422  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 21436  004426  0E00               	movlw	0
 21437  004428  0100               	movlb	0	; () banked
 21438  00442A  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21439  00442C  0E64               	movlw	100
 21440  00442E  6F85               	movwf	___lwdiv@divisor& (0+255),b
 21441  004430  ECE5  F029         	call	___lwdiv	;wreg free
 21442  004434  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 21443  004438  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 21444                           
 21445                           ;app.c: 90: if (*counter < destinationTicks)
 21446  00443C  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21447  004440  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21448  004444  0100               	movlb	0	; () banked
 21449  004446  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21450  004448  5CDE               	subwf	postinc2,w,c
 21451  00444A  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21452  00444C  58DE               	subwfb	postinc2,w,c
 21453  00444E  B0D8               	btfsc	status,0,c
 21454  004450  D009               	goto	l2524
 21455                           
 21456                           ; BSR set to: 0
 21457                           ;app.c: 91: {
 21458                           ;app.c: 92: *counter += 1;
 21459  004452  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21460  004456  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21461  00445A  2ADE               	incf	postinc2,f,c
 21462  00445C  0E00               	movlw	0
 21463  00445E  22DD               	addwfc	postdec2,f,c
 21464                           
 21465                           ; BSR set to: 0
 21466                           ;app.c: 93: isExpired = 0;
 21467  004460  0E00               	movlw	0
 21468  004462  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21469  004464                     l2524:
 21470                           
 21471                           ; BSR set to: 0
 21472                           ;app.c: 94: }
 21473                           ;app.c: 95: if (*counter == destinationTicks)
 21474                           
 21475                           ; BSR set to: 0
 21476  004464  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21477  004468  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21478  00446C  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21479  00446E  18DE               	xorwf	postinc2,w,c
 21480  004470  E117               	bnz	l12943
 21481  004472  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21482  004474  18DE               	xorwf	postinc2,w,c
 21483  004476  A4D8               	btfss	status,2,c
 21484  004478  D013               	goto	l2527
 21485                           
 21486                           ; BSR set to: 0
 21487                           ;app.c: 96: {
 21488                           ;app.c: 97: if (isCyclic)
 21489  00447A  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 21490  00447C  B4D8               	btfsc	status,2,c
 21491  00447E  D008               	goto	l2526
 21492                           
 21493                           ; BSR set to: 0
 21494                           ;app.c: 98: {
 21495                           ;app.c: 99: *counter = 0;
 21496  004480  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21497  004484  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21498  004488  0E00               	movlw	0
 21499  00448A  6EDE               	movwf	postinc2,c
 21500  00448C  0E00               	movlw	0
 21501  00448E  D007               	goto	L27
 21502  004490                     l2526:
 21503                           
 21504                           ; BSR set to: 0
 21505                           ;app.c: 101: else
 21506                           ;app.c: 102: {
 21507                           ;app.c: 103: *counter = 0xFFFF;
 21508                           
 21509                           ; BSR set to: 0
 21510  004490  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21511  004494  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21512  004498  0EFF               	movlw	255
 21513  00449A  6EDE               	movwf	postinc2,c
 21514  00449C  0EFF               	movlw	255
 21515  00449E                     L27:
 21516  00449E  6EDD               	movwf	postdec2,c
 21517  0044A0                     l2527:
 21518  0044A0                     l12943:
 21519                           
 21520                           ; BSR set to: 0
 21521                           ;app.c: 104: }
 21522                           ;app.c: 105: }
 21523                           ;app.c: 106: return isExpired;
 21524  0044A0  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 21525  0044A2  0012               	return	
 21526  0044A4                     __end_of_secondsAppTimer:
 21527                           	opt stack 0
 21528                           tosu	equ	0xFFF
 21529                           tosh	equ	0xFFE
 21530                           tosl	equ	0xFFD
 21531                           pclath	equ	0xFFA
 21532                           tblptru	equ	0xFF8
 21533                           tblptrh	equ	0xFF7
 21534                           tblptrl	equ	0xFF6
 21535                           tablat	equ	0xFF5
 21536                           prodh	equ	0xFF4
 21537                           prodl	equ	0xFF3
 21538                           intcon	equ	0xFF2
 21539                           intcon2	equ	0xFF1
 21540                           intcon3	equ	0xFF0
 21541                           indf0	equ	0xFEF
 21542                           postinc0	equ	0xFEE
 21543                           plusw0	equ	0xFEB
 21544                           fsr0h	equ	0xFEA
 21545                           fsr0l	equ	0xFE9
 21546                           wreg	equ	0xFE8
 21547                           indf1	equ	0xFE7
 21548                           postinc1	equ	0xFE6
 21549                           postdec1	equ	0xFE5
 21550                           plusw1	equ	0xFE3
 21551                           fsr1h	equ	0xFE2
 21552                           fsr1l	equ	0xFE1
 21553                           indf2	equ	0xFDF
 21554                           postinc2	equ	0xFDE
 21555                           postdec2	equ	0xFDD
 21556                           plusw2	equ	0xFDB
 21557                           fsr2h	equ	0xFDA
 21558                           fsr2l	equ	0xFD9
 21559                           status	equ	0xFD8
 21560                           
 21561 ;; *************** function _Mdm_RequestSmsData *****************
 21562 ;; Defined at:
 21563 ;;		line 859 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21564 ;; Parameters:    Size  Location     Type
 21565 ;;		None
 21566 ;; Auto vars:     Size  Location     Type
 21567 ;;		None
 21568 ;; Return value:  Size  Location     Type
 21569 ;;                  1    wreg      void 
 21570 ;; Registers used:
 21571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21572 ;; Tracked objects:
 21573 ;;		On entry : 0/0
 21574 ;;		On exit  : 0/0
 21575 ;;		Unchanged: 0/0
 21576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21581 ;;Total ram usage:        0 bytes
 21582 ;; Hardware stack levels used:    1
 21583 ;; Hardware stack levels required when called:   12
 21584 ;; This function calls:
 21585 ;;		_GenerateEvt
 21586 ;; This function is called by:
 21587 ;;		_MyApp_Task
 21588 ;; This function uses a non-reentrant model
 21589 ;;
 21590                           
 21591                           	psect	text98
 21592  0060EC                     __ptext98:
 21593                           	opt stack 0
 21594  0060EC                     _Mdm_RequestSmsData:
 21595                           	opt stack 15
 21596                           
 21597                           ;mdm_gsm_gprs.c: 862: GenerateEvt(&GetSmsText);
 21598                           
 21599                           ; BSR set to: 0
 21600                           ;incstack = 0
 21601  0060EC  0E39               	movlw	low _GetSmsText
 21602  0060EE  0100               	movlb	0	; () banked
 21603  0060F0  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21604  0060F2  0E00               	movlw	high _GetSmsText
 21605  0060F4  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21606  0060F6  EC06  F030         	call	_GenerateEvt	;wreg free
 21607  0060FA  0012               	return		;funcret
 21608  0060FC                     __end_of_Mdm_RequestSmsData:
 21609                           	opt stack 0
 21610                           tosu	equ	0xFFF
 21611                           tosh	equ	0xFFE
 21612                           tosl	equ	0xFFD
 21613                           pclath	equ	0xFFA
 21614                           tblptru	equ	0xFF8
 21615                           tblptrh	equ	0xFF7
 21616                           tblptrl	equ	0xFF6
 21617                           tablat	equ	0xFF5
 21618                           prodh	equ	0xFF4
 21619                           prodl	equ	0xFF3
 21620                           intcon	equ	0xFF2
 21621                           intcon2	equ	0xFF1
 21622                           intcon3	equ	0xFF0
 21623                           indf0	equ	0xFEF
 21624                           postinc0	equ	0xFEE
 21625                           plusw0	equ	0xFEB
 21626                           fsr0h	equ	0xFEA
 21627                           fsr0l	equ	0xFE9
 21628                           wreg	equ	0xFE8
 21629                           indf1	equ	0xFE7
 21630                           postinc1	equ	0xFE6
 21631                           postdec1	equ	0xFE5
 21632                           plusw1	equ	0xFE3
 21633                           fsr1h	equ	0xFE2
 21634                           fsr1l	equ	0xFE1
 21635                           indf2	equ	0xFDF
 21636                           postinc2	equ	0xFDE
 21637                           postdec2	equ	0xFDD
 21638                           plusw2	equ	0xFDB
 21639                           fsr2h	equ	0xFDA
 21640                           fsr2l	equ	0xFD9
 21641                           status	equ	0xFD8
 21642                           
 21643 ;; *************** function _Mdm_IsSmsReceived *****************
 21644 ;; Defined at:
 21645 ;;		line 924 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21646 ;; Parameters:    Size  Location     Type
 21647 ;;		None
 21648 ;; Auto vars:     Size  Location     Type
 21649 ;;  Ret             1   33[BANK0 ] enum E8914
 21650 ;; Return value:  Size  Location     Type
 21651 ;;                  1    wreg      enum E8914
 21652 ;; Registers used:
 21653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21654 ;; Tracked objects:
 21655 ;;		On entry : 0/0
 21656 ;;		On exit  : 0/0
 21657 ;;		Unchanged: 0/0
 21658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21662 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21663 ;;Total ram usage:        1 bytes
 21664 ;; Hardware stack levels used:    1
 21665 ;; Hardware stack levels required when called:   12
 21666 ;; This function calls:
 21667 ;;		_ReceiveEvt
 21668 ;; This function is called by:
 21669 ;;		_MyApp_Task
 21670 ;; This function uses a non-reentrant model
 21671 ;;
 21672                           
 21673                           	psect	text99
 21674  005DBA                     __ptext99:
 21675                           	opt stack 0
 21676  005DBA                     _Mdm_IsSmsReceived:
 21677                           	opt stack 15
 21678                           
 21679                           ;mdm_gsm_gprs.c: 926: SmsRxStsType Ret = SmsNotReceived;
 21680                           
 21681                           ;incstack = 0
 21682  005DBA  0E00               	movlw	0
 21683  005DBC  0100               	movlb	0	; () banked
 21684  005DBE  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21685                           
 21686                           ; BSR set to: 0
 21687                           ;mdm_gsm_gprs.c: 929: if (ReceiveEvt(&SmsEvent))
 21688  005DC0  0EDD               	movlw	low _SmsEvent
 21689  005DC2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21690  005DC4  0E00               	movlw	high _SmsEvent
 21691  005DC6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21692  005DC8  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 21693  005DCC  0900               	iorlw	0
 21694  005DCE  B4D8               	btfsc	status,2,c
 21695  005DD0  D003               	goto	l1128
 21696                           
 21697                           ;mdm_gsm_gprs.c: 930: {
 21698                           ;mdm_gsm_gprs.c: 931: Ret = SmsReceived;
 21699  005DD2  0E01               	movlw	1
 21700  005DD4  0100               	movlb	0	; () banked
 21701  005DD6  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21702  005DD8                     l1128:
 21703                           
 21704                           ;mdm_gsm_gprs.c: 932: }
 21705                           ;mdm_gsm_gprs.c: 934: return Ret;
 21706  005DD8  0100               	movlb	0	; () banked
 21707  005DDA  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 21708  005DDC  0012               	return	
 21709  005DDE                     __end_of_Mdm_IsSmsReceived:
 21710                           	opt stack 0
 21711                           tosu	equ	0xFFF
 21712                           tosh	equ	0xFFE
 21713                           tosl	equ	0xFFD
 21714                           pclath	equ	0xFFA
 21715                           tblptru	equ	0xFF8
 21716                           tblptrh	equ	0xFF7
 21717                           tblptrl	equ	0xFF6
 21718                           tablat	equ	0xFF5
 21719                           prodh	equ	0xFF4
 21720                           prodl	equ	0xFF3
 21721                           intcon	equ	0xFF2
 21722                           intcon2	equ	0xFF1
 21723                           intcon3	equ	0xFF0
 21724                           indf0	equ	0xFEF
 21725                           postinc0	equ	0xFEE
 21726                           plusw0	equ	0xFEB
 21727                           fsr0h	equ	0xFEA
 21728                           fsr0l	equ	0xFE9
 21729                           wreg	equ	0xFE8
 21730                           indf1	equ	0xFE7
 21731                           postinc1	equ	0xFE6
 21732                           postdec1	equ	0xFE5
 21733                           plusw1	equ	0xFE3
 21734                           fsr1h	equ	0xFE2
 21735                           fsr1l	equ	0xFE1
 21736                           indf2	equ	0xFDF
 21737                           postinc2	equ	0xFDE
 21738                           postdec2	equ	0xFDD
 21739                           plusw2	equ	0xFDB
 21740                           fsr2h	equ	0xFDA
 21741                           fsr2l	equ	0xFD9
 21742                           status	equ	0xFD8
 21743                           
 21744 ;; *************** function _Mdm_IsRinging *****************
 21745 ;; Defined at:
 21746 ;;		line 1007 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21747 ;; Parameters:    Size  Location     Type
 21748 ;;		None
 21749 ;; Auto vars:     Size  Location     Type
 21750 ;;  Ret             1   33[BANK0 ] enum E8910
 21751 ;; Return value:  Size  Location     Type
 21752 ;;                  1    wreg      enum E8910
 21753 ;; Registers used:
 21754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21755 ;; Tracked objects:
 21756 ;;		On entry : 0/0
 21757 ;;		On exit  : 0/0
 21758 ;;		Unchanged: 0/0
 21759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21763 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21764 ;;Total ram usage:        1 bytes
 21765 ;; Hardware stack levels used:    1
 21766 ;; Hardware stack levels required when called:   12
 21767 ;; This function calls:
 21768 ;;		_ReceiveEvt
 21769 ;; This function is called by:
 21770 ;;		_MyApp_Task
 21771 ;; This function uses a non-reentrant model
 21772 ;;
 21773                           
 21774                           	psect	text100
 21775  005DDE                     __ptext100:
 21776                           	opt stack 0
 21777  005DDE                     _Mdm_IsRinging:
 21778                           	opt stack 15
 21779                           
 21780                           ;mdm_gsm_gprs.c: 1009: RingStsType Ret = PhoneNotRinging;
 21781                           
 21782                           ; BSR set to: 0
 21783                           ;incstack = 0
 21784  005DDE  0E00               	movlw	0
 21785  005DE0  0100               	movlb	0	; () banked
 21786  005DE2  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21787                           
 21788                           ; BSR set to: 0
 21789                           ;mdm_gsm_gprs.c: 1012: if (ReceiveEvt(&RingEvent))
 21790  005DE4  0EDE               	movlw	low _RingEvent
 21791  005DE6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21792  005DE8  0E00               	movlw	high _RingEvent
 21793  005DEA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21794  005DEC  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 21795  005DF0  0900               	iorlw	0
 21796  005DF2  B4D8               	btfsc	status,2,c
 21797  005DF4  D003               	goto	l1144
 21798                           
 21799                           ;mdm_gsm_gprs.c: 1013: {
 21800                           ;mdm_gsm_gprs.c: 1014: Ret = PhoneRinging;
 21801  005DF6  0E01               	movlw	1
 21802  005DF8  0100               	movlb	0	; () banked
 21803  005DFA  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21804  005DFC                     l1144:
 21805                           
 21806                           ;mdm_gsm_gprs.c: 1015: }
 21807                           ;mdm_gsm_gprs.c: 1017: return Ret;
 21808  005DFC  0100               	movlb	0	; () banked
 21809  005DFE  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21810  005E00  0012               	return	
 21811  005E02                     __end_of_Mdm_IsRinging:
 21812                           	opt stack 0
 21813                           tosu	equ	0xFFF
 21814                           tosh	equ	0xFFE
 21815                           tosl	equ	0xFFD
 21816                           pclath	equ	0xFFA
 21817                           tblptru	equ	0xFF8
 21818                           tblptrh	equ	0xFF7
 21819                           tblptrl	equ	0xFF6
 21820                           tablat	equ	0xFF5
 21821                           prodh	equ	0xFF4
 21822                           prodl	equ	0xFF3
 21823                           intcon	equ	0xFF2
 21824                           intcon2	equ	0xFF1
 21825                           intcon3	equ	0xFF0
 21826                           indf0	equ	0xFEF
 21827                           postinc0	equ	0xFEE
 21828                           plusw0	equ	0xFEB
 21829                           fsr0h	equ	0xFEA
 21830                           fsr0l	equ	0xFE9
 21831                           wreg	equ	0xFE8
 21832                           indf1	equ	0xFE7
 21833                           postinc1	equ	0xFE6
 21834                           postdec1	equ	0xFE5
 21835                           plusw1	equ	0xFE3
 21836                           fsr1h	equ	0xFE2
 21837                           fsr1l	equ	0xFE1
 21838                           indf2	equ	0xFDF
 21839                           postinc2	equ	0xFDE
 21840                           postdec2	equ	0xFDD
 21841                           plusw2	equ	0xFDB
 21842                           fsr2h	equ	0xFDA
 21843                           fsr2l	equ	0xFD9
 21844                           status	equ	0xFD8
 21845                           
 21846 ;; *************** function _Mdm_GetSmsData *****************
 21847 ;; Defined at:
 21848 ;;		line 874 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21849 ;; Parameters:    Size  Location     Type
 21850 ;;  MessageText     2   39[BANK0 ] PTR unsigned char 
 21851 ;;		 -> MyApp_Task@smsText(50), 
 21852 ;;  MessageHeade    2   41[BANK0 ] PTR unsigned char 
 21853 ;;		 -> MyApp_Task@smsNumber(14), 
 21854 ;; Auto vars:     Size  Location     Type
 21855 ;;  GetSmsStatus    1   43[BANK0 ] enum E8906
 21856 ;; Return value:  Size  Location     Type
 21857 ;;                  1    wreg      enum E8906
 21858 ;; Registers used:
 21859 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21860 ;; Tracked objects:
 21861 ;;		On entry : 0/0
 21862 ;;		On exit  : 0/0
 21863 ;;		Unchanged: 0/0
 21864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21865 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21868 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21869 ;;Total ram usage:        5 bytes
 21870 ;; Hardware stack levels used:    1
 21871 ;; Hardware stack levels required when called:   12
 21872 ;; This function calls:
 21873 ;;		_ReceiveEvt
 21874 ;;		_StringCopy
 21875 ;; This function is called by:
 21876 ;;		_MyApp_Task
 21877 ;; This function uses a non-reentrant model
 21878 ;;
 21879                           
 21880                           	psect	text101
 21881  004C84                     __ptext101:
 21882                           	opt stack 0
 21883  004C84                     _Mdm_GetSmsData:
 21884                           	opt stack 15
 21885                           
 21886                           ;mdm_gsm_gprs.c: 876: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 21887                           
 21888                           ; BSR set to: 0
 21889                           ;incstack = 0
 21890  004C84  0E00               	movlw	0
 21891  004C86  0100               	movlb	0	; () banked
 21892  004C88  6F8B               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 21893                           
 21894                           ; BSR set to: 0
 21895                           ;mdm_gsm_gprs.c: 879: if (ReceiveEvt(&SmsTxtReady))
 21896  004C8A  0E38               	movlw	low _SmsTxtReady
 21897  004C8C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21898  004C8E  0E00               	movlw	high _SmsTxtReady
 21899  004C90  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21900  004C92  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 21901  004C96  0900               	iorlw	0
 21902  004C98  B4D8               	btfsc	status,2,c
 21903  004C9A  D02D               	goto	l1121
 21904                           
 21905                           ;mdm_gsm_gprs.c: 880: {
 21906                           ;mdm_gsm_gprs.c: 882: StringCopy(Mdm_SmsRx.MessageBuffer,MessageText,Mdm_SmsRx.TextLen +
      +                           1);
 21907  004C9C  0E50               	movlw	low (_Mdm_SmsRx+80)
 21908  004C9E  0100               	movlb	0	; () banked
 21909  004CA0  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21910  004CA2  0E07               	movlw	high (_Mdm_SmsRx+80)
 21911  004CA4  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21912  004CA6  C087  F07F         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 21913  004CAA  C088  F080         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 21914  004CAE  0E01               	movlw	1
 21915  004CB0  0107               	movlb	7	; () banked
 21916  004CB2  2583               	addwf	(_Mdm_SmsRx+131)& (0+255),w,b
 21917  004CB4  0100               	movlb	0	; () banked
 21918  004CB6  6F81               	movwf	StringCopy@Len& (0+255),b
 21919  004CB8  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 21920  004CBA  0E00               	movlw	0
 21921  004CBC  2382               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 21922  004CBE  ECFA  F027         	call	_StringCopy	;wreg free
 21923                           
 21924                           ;mdm_gsm_gprs.c: 883: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, MessageHeader,14);
 21925  004CC2  0E15               	movlw	low (_Mdm_SmsRx+21)
 21926  004CC4  0100               	movlb	0	; () banked
 21927  004CC6  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21928  004CC8  0E07               	movlw	high (_Mdm_SmsRx+21)
 21929  004CCA  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21930  004CCC  C089  F07F         	movff	Mdm_GetSmsData@MessageHeader,StringCopy@DestStr
 21931  004CD0  C08A  F080         	movff	Mdm_GetSmsData@MessageHeader+1,StringCopy@DestStr+1
 21932  004CD4  0E00               	movlw	0
 21933  004CD6  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 21934  004CD8  0E0E               	movlw	14
 21935  004CDA  6F81               	movwf	StringCopy@Len& (0+255),b
 21936  004CDC  ECFA  F027         	call	_StringCopy	;wreg free
 21937                           
 21938                           ;mdm_gsm_gprs.c: 884: MessageHeader[13] = '\0';
 21939  004CE0  0100               	movlb	0	; () banked
 21940  004CE2  EE20 F00D          	lfsr	2,13
 21941  004CE6  5189               	movf	Mdm_GetSmsData@MessageHeader& (0+255),w,b
 21942  004CE8  26D9               	addwf	fsr2l,f,c
 21943  004CEA  518A               	movf	(Mdm_GetSmsData@MessageHeader+1)& (0+255),w,b
 21944  004CEC  22DA               	addwfc	fsr2h,f,c
 21945  004CEE  0E00               	movlw	0
 21946  004CF0  6EDF               	movwf	indf2,c
 21947                           
 21948                           ; BSR set to: 0
 21949                           ;mdm_gsm_gprs.c: 886: GetSmsStatus = SmsDataReady;
 21950  004CF2  0E01               	movlw	1
 21951  004CF4  6F8B               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 21952  004CF6                     l1121:
 21953                           
 21954                           ;mdm_gsm_gprs.c: 887: }
 21955                           ;mdm_gsm_gprs.c: 890: return GetSmsStatus;
 21956                           
 21957                           ; BSR set to: 0
 21958  004CF6  0100               	movlb	0	; () banked
 21959  004CF8  518B               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 21960  004CFA  0012               	return	
 21961  004CFC                     __end_of_Mdm_GetSmsData:
 21962                           	opt stack 0
 21963                           tosu	equ	0xFFF
 21964                           tosh	equ	0xFFE
 21965                           tosl	equ	0xFFD
 21966                           pclath	equ	0xFFA
 21967                           tblptru	equ	0xFF8
 21968                           tblptrh	equ	0xFF7
 21969                           tblptrl	equ	0xFF6
 21970                           tablat	equ	0xFF5
 21971                           prodh	equ	0xFF4
 21972                           prodl	equ	0xFF3
 21973                           intcon	equ	0xFF2
 21974                           intcon2	equ	0xFF1
 21975                           intcon3	equ	0xFF0
 21976                           indf0	equ	0xFEF
 21977                           postinc0	equ	0xFEE
 21978                           plusw0	equ	0xFEB
 21979                           fsr0h	equ	0xFEA
 21980                           fsr0l	equ	0xFE9
 21981                           wreg	equ	0xFE8
 21982                           indf1	equ	0xFE7
 21983                           postinc1	equ	0xFE6
 21984                           postdec1	equ	0xFE5
 21985                           plusw1	equ	0xFE3
 21986                           fsr1h	equ	0xFE2
 21987                           fsr1l	equ	0xFE1
 21988                           indf2	equ	0xFDF
 21989                           postinc2	equ	0xFDE
 21990                           postdec2	equ	0xFDD
 21991                           plusw2	equ	0xFDB
 21992                           fsr2h	equ	0xFDA
 21993                           fsr2l	equ	0xFD9
 21994                           status	equ	0xFD8
 21995                           
 21996 ;; *************** function _Led_SetLedBlinkTime *****************
 21997 ;; Defined at:
 21998 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 21999 ;; Parameters:    Size  Location     Type
 22000 ;;  Led             1    wreg     unsigned char 
 22001 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 22002 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 22003 ;; Auto vars:     Size  Location     Type
 22004 ;;  Led             1   33[BANK0 ] unsigned char 
 22005 ;; Return value:  Size  Location     Type
 22006 ;;                  1    wreg      void 
 22007 ;; Registers used:
 22008 ;;		wreg, status,2, status,0
 22009 ;; Tracked objects:
 22010 ;;		On entry : 0/0
 22011 ;;		On exit  : 0/0
 22012 ;;		Unchanged: 0/0
 22013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22014 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22015 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22017 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22018 ;;Total ram usage:        5 bytes
 22019 ;; Hardware stack levels used:    1
 22020 ;; Hardware stack levels required when called:   11
 22021 ;; This function calls:
 22022 ;;		Nothing
 22023 ;; This function is called by:
 22024 ;;		_MyApp_Task
 22025 ;; This function uses a non-reentrant model
 22026 ;;
 22027                           
 22028                           	psect	text102
 22029  005376                     __ptext102:
 22030                           	opt stack 0
 22031  005376                     _Led_SetLedBlinkTime:
 22032                           	opt stack 16
 22033                           
 22034                           ; BSR set to: 0
 22035                           ;incstack = 0
 22036                           ;Led_SetLedBlinkTime@Led stored from wreg
 22037  005376  0100               	movlb	0	; () banked
 22038  005378  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 22039                           
 22040                           ;led.c: 374: switch (Led)
 22041  00537A  D01B               	goto	l2101
 22042  00537C                     l2102:
 22043                           
 22044                           ; BSR set to: 0
 22045                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 22046  00537C  C07D  F372         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 22047  005380  C07E  F373         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 22048                           
 22049                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 22050  005384  C07F  F374         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 22051  005388  C080  F375         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 22052                           
 22053                           ;led.c: 379: break;
 22054  00538C  0012               	return	
 22055  00538E                     l2104:
 22056                           
 22057                           ; BSR set to: 0
 22058                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 22059  00538E  C07D  F369         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 22060  005392  C07E  F36A         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 22061                           
 22062                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 22063  005396  C07F  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 22064  00539A  C080  F36C         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 22065                           
 22066                           ;led.c: 384: break;
 22067  00539E  0012               	return	
 22068  0053A0                     l2105:
 22069                           
 22070                           ; BSR set to: 0
 22071                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 22072  0053A0  C07D  F369         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 22073  0053A4  C07E  F36A         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 22074                           
 22075                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 22076  0053A8  C07F  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 22077  0053AC  C080  F36C         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 22078                           
 22079                           ; BSR set to: 0
 22080                           ;led.c: 393: }
 22081                           
 22082                           ; BSR set to: 0
 22083                           ;led.c: 392: break;
 22084                           
 22085                           ;led.c: 391: default:
 22086                           
 22087                           ;led.c: 389: break;
 22088  0053B0  0012               	return	
 22089  0053B2                     l2101:
 22090                           
 22091                           ; BSR set to: 0
 22092  0053B2  0100               	movlb	0	; () banked
 22093  0053B4  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 22094                           
 22095                           ; Switch size 1, requested type "space"
 22096                           ; Number of cases is 3, Range of values is 1 to 3
 22097                           ; switch strategies available:
 22098                           ; Name         Instructions Cycles
 22099                           ; simple_byte           10     6 (average)
 22100                           ;	Chosen strategy is simple_byte
 22101  0053B6  0A01               	xorlw	1	; case 1
 22102  0053B8  B4D8               	btfsc	status,2,c
 22103  0053BA  D7E0               	goto	l2102
 22104  0053BC  0A03               	xorlw	3	; case 2
 22105  0053BE  B4D8               	btfsc	status,2,c
 22106  0053C0  D7E6               	goto	l2104
 22107  0053C2  0A01               	xorlw	1	; case 3
 22108  0053C4  A4D8               	btfss	status,2,c
 22109  0053C6  0012               	return	
 22110  0053C8  D7EB               	goto	l2105
 22111  0053CA                     __end_of_Led_SetLedBlinkTime:
 22112                           	opt stack 0
 22113                           tosu	equ	0xFFF
 22114                           tosh	equ	0xFFE
 22115                           tosl	equ	0xFFD
 22116                           pclath	equ	0xFFA
 22117                           tblptru	equ	0xFF8
 22118                           tblptrh	equ	0xFF7
 22119                           tblptrl	equ	0xFF6
 22120                           tablat	equ	0xFF5
 22121                           prodh	equ	0xFF4
 22122                           prodl	equ	0xFF3
 22123                           intcon	equ	0xFF2
 22124                           intcon2	equ	0xFF1
 22125                           intcon3	equ	0xFF0
 22126                           indf0	equ	0xFEF
 22127                           postinc0	equ	0xFEE
 22128                           plusw0	equ	0xFEB
 22129                           fsr0h	equ	0xFEA
 22130                           fsr0l	equ	0xFE9
 22131                           wreg	equ	0xFE8
 22132                           indf1	equ	0xFE7
 22133                           postinc1	equ	0xFE6
 22134                           postdec1	equ	0xFE5
 22135                           plusw1	equ	0xFE3
 22136                           fsr1h	equ	0xFE2
 22137                           fsr1l	equ	0xFE1
 22138                           indf2	equ	0xFDF
 22139                           postinc2	equ	0xFDE
 22140                           postdec2	equ	0xFDD
 22141                           plusw2	equ	0xFDB
 22142                           fsr2h	equ	0xFDA
 22143                           fsr2l	equ	0xFD9
 22144                           status	equ	0xFD8
 22145                           
 22146 ;; *************** function _UartSetConfig *****************
 22147 ;; Defined at:
 22148 ;;		line 185 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22149 ;; Parameters:    Size  Location     Type
 22150 ;;		None
 22151 ;; Auto vars:     Size  Location     Type
 22152 ;;		None
 22153 ;; Return value:  Size  Location     Type
 22154 ;;                  1    wreg      void 
 22155 ;; Registers used:
 22156 ;;		wreg, status,2
 22157 ;; Tracked objects:
 22158 ;;		On entry : 0/0
 22159 ;;		On exit  : 0/0
 22160 ;;		Unchanged: 0/0
 22161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22166 ;;Total ram usage:        0 bytes
 22167 ;; Hardware stack levels used:    1
 22168 ;; Hardware stack levels required when called:   11
 22169 ;; This function calls:
 22170 ;;		Nothing
 22171 ;; This function is called by:
 22172 ;;		_Mdm_MainTask
 22173 ;; This function uses a non-reentrant model
 22174 ;;
 22175                           
 22176                           	psect	text103
 22177  00516E                     __ptext103:
 22178                           	opt stack 0
 22179  00516E                     _UartSetConfig:
 22180                           	opt stack 16
 22181                           
 22182                           ;mdm_gsm_gprs.c: 187: UartConfig.UartEnable = ((UINT8)(1));
 22183                           
 22184                           ; BSR set to: 0
 22185                           ;incstack = 0
 22186  00516E  0E01               	movlw	1
 22187  005170  0103               	movlb	3	; () banked
 22188  005172  6F32               	movwf	_UartConfig& (0+255),b
 22189                           
 22190                           ;mdm_gsm_gprs.c: 188: UartConfig.UartMode = ((UINT8)(0));
 22191  005174  0E00               	movlw	0
 22192  005176  6F33               	movwf	(_UartConfig+1)& (0+255),b
 22193                           
 22194                           ;mdm_gsm_gprs.c: 190: UartConfig.BaudRateMode = ((UINT8)(0));
 22195  005178  0E00               	movlw	0
 22196  00517A  6F34               	movwf	(_UartConfig+2)& (0+255),b
 22197                           
 22198                           ;mdm_gsm_gprs.c: 195: UartConfig.HighBaudMode = ((UINT8)(0));
 22199  00517C  0E00               	movlw	0
 22200  00517E  6F35               	movwf	(_UartConfig+3)& (0+255),b
 22201                           
 22202                           ;mdm_gsm_gprs.c: 199: UartConfig.Tx9bitMode = ((UINT8)(0));
 22203  005180  0E00               	movlw	0
 22204  005182  6F36               	movwf	(_UartConfig+4)& (0+255),b
 22205                           
 22206                           ;mdm_gsm_gprs.c: 200: UartConfig.Rx9bitMode = ((UINT8)(0));
 22207  005184  0E00               	movlw	0
 22208  005186  6F37               	movwf	(_UartConfig+5)& (0+255),b
 22209                           
 22210                           ;mdm_gsm_gprs.c: 201: UartConfig.TxEnable = ((UINT8)(1));
 22211  005188  0E01               	movlw	1
 22212  00518A  6F38               	movwf	(_UartConfig+6)& (0+255),b
 22213                           
 22214                           ;mdm_gsm_gprs.c: 202: UartConfig.RxEnable = ((UINT8)(1));
 22215  00518C  0E01               	movlw	1
 22216  00518E  6F39               	movwf	(_UartConfig+7)& (0+255),b
 22217                           
 22218                           ;mdm_gsm_gprs.c: 203: UartConfig.SendBreakEnable = ((UINT8)(0));
 22219  005190  0E00               	movlw	0
 22220  005192  6F3A               	movwf	(_UartConfig+8)& (0+255),b
 22221                           
 22222                           ;mdm_gsm_gprs.c: 204: UartConfig.AutobaudEnable = ((UINT8)(0));
 22223  005194  0E00               	movlw	0
 22224  005196  6F3B               	movwf	(_UartConfig+9)& (0+255),b
 22225                           
 22226                           ;mdm_gsm_gprs.c: 205: UartConfig.WakeUpEnable = ((UINT8)(0));
 22227  005198  0E00               	movlw	0
 22228  00519A  6F3C               	movwf	(_UartConfig+10)& (0+255),b
 22229                           
 22230                           ;mdm_gsm_gprs.c: 206: UartConfig.TxInterruptEnable = ((UINT8)(0));
 22231  00519C  0E00               	movlw	0
 22232  00519E  6F3D               	movwf	(_UartConfig+11)& (0+255),b
 22233                           
 22234                           ;mdm_gsm_gprs.c: 207: UartConfig.RxInterruptEnable = ((UINT8)(1));
 22235  0051A0  0E01               	movlw	1
 22236  0051A2  6F3E               	movwf	(_UartConfig+12)& (0+255),b
 22237                           
 22238                           ;mdm_gsm_gprs.c: 208: UartConfig.McuBusClock = ((UINT32)(48000000));
 22239  0051A4  0E00               	movlw	0
 22240  0051A6  6F3F               	movwf	(_UartConfig+13)& (0+255),b
 22241  0051A8  0E6C               	movlw	108
 22242  0051AA  6F40               	movwf	(_UartConfig+14)& (0+255),b
 22243  0051AC  0EDC               	movlw	220
 22244  0051AE  6F41               	movwf	(_UartConfig+15)& (0+255),b
 22245  0051B0  0E02               	movlw	2
 22246  0051B2  6F42               	movwf	(_UartConfig+16)& (0+255),b
 22247                           
 22248                           ;mdm_gsm_gprs.c: 210: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 22249  0051B4  0E80               	movlw	128
 22250  0051B6  6F43               	movwf	(_UartConfig+17)& (0+255),b
 22251  0051B8  0E25               	movlw	37
 22252  0051BA  6F44               	movwf	(_UartConfig+18)& (0+255),b
 22253  0051BC  0E00               	movlw	0
 22254  0051BE  6F45               	movwf	(_UartConfig+19)& (0+255),b
 22255  0051C0  0E00               	movlw	0
 22256  0051C2  6F46               	movwf	(_UartConfig+20)& (0+255),b
 22257                           
 22258                           ; BSR set to: 3
 22259  0051C4  0012               	return		;funcret
 22260  0051C6                     __end_of_UartSetConfig:
 22261                           	opt stack 0
 22262                           tosu	equ	0xFFF
 22263                           tosh	equ	0xFFE
 22264                           tosl	equ	0xFFD
 22265                           pclath	equ	0xFFA
 22266                           tblptru	equ	0xFF8
 22267                           tblptrh	equ	0xFF7
 22268                           tblptrl	equ	0xFF6
 22269                           tablat	equ	0xFF5
 22270                           prodh	equ	0xFF4
 22271                           prodl	equ	0xFF3
 22272                           intcon	equ	0xFF2
 22273                           intcon2	equ	0xFF1
 22274                           intcon3	equ	0xFF0
 22275                           indf0	equ	0xFEF
 22276                           postinc0	equ	0xFEE
 22277                           plusw0	equ	0xFEB
 22278                           fsr0h	equ	0xFEA
 22279                           fsr0l	equ	0xFE9
 22280                           wreg	equ	0xFE8
 22281                           indf1	equ	0xFE7
 22282                           postinc1	equ	0xFE6
 22283                           postdec1	equ	0xFE5
 22284                           plusw1	equ	0xFE3
 22285                           fsr1h	equ	0xFE2
 22286                           fsr1l	equ	0xFE1
 22287                           indf2	equ	0xFDF
 22288                           postinc2	equ	0xFDE
 22289                           postdec2	equ	0xFDD
 22290                           plusw2	equ	0xFDB
 22291                           fsr2h	equ	0xFDA
 22292                           fsr2l	equ	0xFD9
 22293                           status	equ	0xFD8
 22294                           
 22295 ;; *************** function _TurnOnModem *****************
 22296 ;; Defined at:
 22297 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22298 ;; Parameters:    Size  Location     Type
 22299 ;;		None
 22300 ;; Auto vars:     Size  Location     Type
 22301 ;;		None
 22302 ;; Return value:  Size  Location     Type
 22303 ;;                  1    wreg      void 
 22304 ;; Registers used:
 22305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22306 ;; Tracked objects:
 22307 ;;		On entry : 0/0
 22308 ;;		On exit  : 0/0
 22309 ;;		Unchanged: 0/0
 22310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22315 ;;Total ram usage:        0 bytes
 22316 ;; Hardware stack levels used:    1
 22317 ;; Hardware stack levels required when called:   12
 22318 ;; This function calls:
 22319 ;;		_GenerateEvt
 22320 ;; This function is called by:
 22321 ;;		_Mdm_MainTask
 22322 ;; This function uses a non-reentrant model
 22323 ;;
 22324                           
 22325                           	psect	text104
 22326  00564A                     __ptext104:
 22327                           	opt stack 0
 22328  00564A                     _TurnOnModem:
 22329                           	opt stack 15
 22330                           
 22331                           ;mdm_gsm_gprs.c: 373: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 22332                           ;mdm_gsm_gprs.c: 374: static UINT16 Counter = 0;
 22333                           ;mdm_gsm_gprs.c: 376: switch (TurnOnMdmState)
 22334                           
 22335                           ; BSR set to: 3
 22336                           ;incstack = 0
 22337  00564A  D01B               	goto	l1005
 22338  00564C                     
 22339                           ;mdm_gsm_gprs.c: 380: Counter++;
 22340  00564C  0103               	movlb	3	; () banked
 22341  00564E  4B2C               	infsnz	TurnOnModem@Counter& (0+255),f,b
 22342  005650  2B2D               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 22343                           
 22344                           ; BSR set to: 3
 22345                           ;mdm_gsm_gprs.c: 382: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 22346  005652  0EB8               	movlw	184
 22347  005654  5D2C               	subwf	TurnOnModem@Counter& (0+255),w,b
 22348  005656  0E0B               	movlw	11
 22349  005658  592D               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 22350  00565A  A0D8               	btfss	status,0,c
 22351  00565C  0012               	return	
 22352                           
 22353                           ; BSR set to: 3
 22354                           ;mdm_gsm_gprs.c: 383: {
 22355                           ;mdm_gsm_gprs.c: 385: TurnOnMdmState = TurnOnModuleReq;
 22356  00565E  0E01               	movlw	1
 22357  005660  0101               	movlb	1	; () banked
 22358  005662  6FF0               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 22359                           
 22360                           ; BSR set to: 1
 22361                           ;mdm_gsm_gprs.c: 386: }
 22362                           ;mdm_gsm_gprs.c: 387: break;
 22363  005664  0012               	return	
 22364  005666                     
 22365                           ; BSR set to: 1
 22366                           ;mdm_gsm_gprs.c: 391: GenerateEvt(&MdmOnOffPulseRequest);
 22367                           
 22368                           ; BSR set to: 1
 22369  005666  0EE0               	movlw	low _MdmOnOffPulseRequest
 22370  005668  0100               	movlb	0	; () banked
 22371  00566A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22372  00566C  0E00               	movlw	high _MdmOnOffPulseRequest
 22373  00566E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22374  005670  EC06  F030         	call	_GenerateEvt	;wreg free
 22375                           
 22376                           ;mdm_gsm_gprs.c: 393: MdmStatus = ModemOn;
 22377  005674  0E01               	movlw	1
 22378  005676  0100               	movlb	0	; () banked
 22379  005678  6FD6               	movwf	_MdmStatus& (0+255),b
 22380                           
 22381                           ; BSR set to: 0
 22382                           ;mdm_gsm_gprs.c: 395: TurnOnMdmState = Stop;
 22383  00567A  0E02               	movlw	2
 22384  00567C  0101               	movlb	1	; () banked
 22385  00567E  6FF0               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 22386                           
 22387                           ; BSR set to: 1
 22388                           ;mdm_gsm_gprs.c: 403: }
 22389                           
 22390                           ; BSR set to: 1
 22391                           ;mdm_gsm_gprs.c: 402: break;
 22392                           
 22393                           ;mdm_gsm_gprs.c: 401: default:
 22394                           
 22395                           ; BSR set to: 1
 22396                           ;mdm_gsm_gprs.c: 399: break;
 22397                           
 22398                           ;mdm_gsm_gprs.c: 398: case Stop:
 22399                           
 22400                           ;mdm_gsm_gprs.c: 396: break;
 22401  005680  0012               	return	
 22402  005682                     l1005:
 22403                           
 22404                           ; BSR set to: 1
 22405  005682  0101               	movlb	1	; () banked
 22406  005684  51F0               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 22407                           
 22408                           ; Switch size 1, requested type "space"
 22409                           ; Number of cases is 3, Range of values is 0 to 2
 22410                           ; switch strategies available:
 22411                           ; Name         Instructions Cycles
 22412                           ; simple_byte           10     6 (average)
 22413                           ;	Chosen strategy is simple_byte
 22414  005686  0A00               	xorlw	0	; case 0
 22415  005688  B4D8               	btfsc	status,2,c
 22416  00568A  D7E0               	goto	l1006
 22417  00568C  0A01               	xorlw	1	; case 1
 22418  00568E  B4D8               	btfsc	status,2,c
 22419  005690  D7EA               	goto	l1009
 22420  005692  0A03               	xorlw	3	; case 2
 22421  005694  0012               	return	
 22422  005696                     __end_of_TurnOnModem:
 22423                           	opt stack 0
 22424                           tosu	equ	0xFFF
 22425                           tosh	equ	0xFFE
 22426                           tosl	equ	0xFFD
 22427                           pclath	equ	0xFFA
 22428                           tblptru	equ	0xFF8
 22429                           tblptrh	equ	0xFF7
 22430                           tblptrl	equ	0xFF6
 22431                           tablat	equ	0xFF5
 22432                           prodh	equ	0xFF4
 22433                           prodl	equ	0xFF3
 22434                           intcon	equ	0xFF2
 22435                           intcon2	equ	0xFF1
 22436                           intcon3	equ	0xFF0
 22437                           indf0	equ	0xFEF
 22438                           postinc0	equ	0xFEE
 22439                           plusw0	equ	0xFEB
 22440                           fsr0h	equ	0xFEA
 22441                           fsr0l	equ	0xFE9
 22442                           wreg	equ	0xFE8
 22443                           indf1	equ	0xFE7
 22444                           postinc1	equ	0xFE6
 22445                           postdec1	equ	0xFE5
 22446                           plusw1	equ	0xFE3
 22447                           fsr1h	equ	0xFE2
 22448                           fsr1l	equ	0xFE1
 22449                           indf2	equ	0xFDF
 22450                           postinc2	equ	0xFDE
 22451                           postdec2	equ	0xFDD
 22452                           plusw2	equ	0xFDB
 22453                           fsr2h	equ	0xFDA
 22454                           fsr2l	equ	0xFD9
 22455                           status	equ	0xFD8
 22456                           
 22457 ;; *************** function _SendSmsSm *****************
 22458 ;; Defined at:
 22459 ;;		line 638 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22460 ;; Parameters:    Size  Location     Type
 22461 ;;		None
 22462 ;; Auto vars:     Size  Location     Type
 22463 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 22464 ;; Return value:  Size  Location     Type
 22465 ;;                  1    wreg      void 
 22466 ;; Registers used:
 22467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22468 ;; Tracked objects:
 22469 ;;		On entry : 0/0
 22470 ;;		On exit  : 0/0
 22471 ;;		Unchanged: 0/0
 22472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22474 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22475 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22476 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22477 ;;Total ram usage:       52 bytes
 22478 ;; Hardware stack levels used:    1
 22479 ;; Hardware stack levels required when called:   14
 22480 ;; This function calls:
 22481 ;;		_OsTmr_GetTimerStatus
 22482 ;;		_OsTmr_StartTimer
 22483 ;;		_ReceiveEvt
 22484 ;;		_StringCopy
 22485 ;;		_Uart_WriteStringLen
 22486 ;; This function is called by:
 22487 ;;		_Mdm_MainTask
 22488 ;; This function uses a non-reentrant model
 22489 ;;
 22490                           
 22491                           	psect	text105
 22492  0019F2                     __ptext105:
 22493                           	opt stack 0
 22494  0019F2                     _SendSmsSm:
 22495                           	opt stack 13
 22496                           
 22497                           ;mdm_gsm_gprs.c: 640: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 22498                           ;mdm_gsm_gprs.c: 641: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 22499                           ;mdm_gsm_gprs.c: 642: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 22500                           ;mdm_gsm_gprs.c: 643: UINT8 UartMessage[50];
 22501                           ;mdm_gsm_gprs.c: 646: if (MdmStatus == ModemConfigured)
 22502                           
 22503                           ;incstack = 0
 22504  0019F2  0E03               	movlw	3
 22505  0019F4  0100               	movlb	0	; () banked
 22506  0019F6  19D6               	xorwf	_MdmStatus& (0+255),w,b
 22507  0019F8  A4D8               	btfss	status,2,c
 22508  0019FA  0012               	return	
 22509  0019FC  D0C1               	goto	l1083
 22510  0019FE                     
 22511                           ;mdm_gsm_gprs.c: 652: if (ReceiveEvt(&SendSmsEvent))
 22512                           
 22513                           ; BSR set to: 0
 22514  0019FE  0EDF               	movlw	low _SendSmsEvent
 22515  001A00  0100               	movlb	0	; () banked
 22516  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22517  001A04  0E00               	movlw	high _SendSmsEvent
 22518  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22519  001A08  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 22520  001A0C  0900               	iorlw	0
 22521  001A0E  B4D8               	btfsc	status,2,c
 22522  001A10  0012               	return	
 22523                           
 22524                           ;mdm_gsm_gprs.c: 653: {
 22525                           ;mdm_gsm_gprs.c: 655: SendSms_State = SendSms_CmgsCmd;
 22526  001A12  0E01               	movlw	1
 22527  001A14  0101               	movlb	1	; () banked
 22528  001A16  6FEC               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22529                           
 22530                           ; BSR set to: 1
 22531                           ;mdm_gsm_gprs.c: 656: }
 22532                           ;mdm_gsm_gprs.c: 657: break;
 22533  001A18  0012               	return	
 22534  001A1A                     
 22535                           ; BSR set to: 1
 22536                           ;mdm_gsm_gprs.c: 661: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 22537                           
 22538                           ; BSR set to: 1
 22539  001A1A  0ECD               	movlw	low STR_5
 22540  001A1C  0100               	movlb	0	; () banked
 22541  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22542  001A20  0EFF               	movlw	high STR_5
 22543  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22544  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 22545  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22546  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 22547  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22548  001A2C  0E00               	movlw	0
 22549  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 22550  001A30  0E09               	movlw	9
 22551  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 22552  001A34  ECFA  F027         	call	_StringCopy	;wreg free
 22553                           
 22554                           ;mdm_gsm_gprs.c: 663: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 22555  001A38  0EB8               	movlw	low _PhoneNumber
 22556  001A3A  0100               	movlb	0	; () banked
 22557  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22558  001A3E  0E04               	movlw	high _PhoneNumber
 22559  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22560  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 22561  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22562  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 22563  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22564  001A4A  C0D7  F081         	movff	_PhoneNumbLen,StringCopy@Len
 22565  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22566  001A50  ECFA  F027         	call	_StringCopy	;wreg free
 22567                           
 22568                           ;mdm_gsm_gprs.c: 665: UartMessage[PhoneNumbLen + 9] = '"';
 22569  001A54  0100               	movlb	0	; () banked
 22570  001A56  51D7               	movf	_PhoneNumbLen& (0+255),w,b
 22571  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 22572  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 22573  001A5C  0E09               	movlw	9
 22574  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 22575  001A60  0E00               	movlw	0
 22576  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 22577  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 22578  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 22579  001A68  6ED9               	movwf	fsr2l,c
 22580  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 22581  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 22582  001A6E  6EDA               	movwf	fsr2h,c
 22583  001A70  0E22               	movlw	34
 22584  001A72  6EDF               	movwf	indf2,c
 22585                           
 22586                           ; BSR set to: 0
 22587                           ;mdm_gsm_gprs.c: 666: UartMessage[PhoneNumbLen + 10] = '\r';
 22588  001A74  51D7               	movf	_PhoneNumbLen& (0+255),w,b
 22589  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 22590  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 22591  001A7A  0E0A               	movlw	10
 22592  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 22593  001A7E  0E00               	movlw	0
 22594  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 22595  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 22596  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 22597  001A86  6ED9               	movwf	fsr2l,c
 22598  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 22599  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 22600  001A8C  6EDA               	movwf	fsr2h,c
 22601  001A8E  0E0D               	movlw	13
 22602  001A90  6EDF               	movwf	indf2,c
 22603                           
 22604                           ; BSR set to: 0
 22605                           ;mdm_gsm_gprs.c: 668: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 22606  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 22607  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22608  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 22609  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22610  001A9A  51D7               	movf	_PhoneNumbLen& (0+255),w,b
 22611  001A9C  0F0B               	addlw	11
 22612  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22613  001AA0  0E01               	movlw	1
 22614  001AA2  EC7D  F02C         	call	_Uart_WriteStringLen
 22615                           
 22616                           ;mdm_gsm_gprs.c: 670: OsTmr_StartTimer(&SwTimer,2500);
 22617  001AA6  0EE4               	movlw	low SendSmsSm@SwTimer
 22618  001AA8  0100               	movlb	0	; () banked
 22619  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 22620  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 22621  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 22622  001AB0  0EC4               	movlw	196
 22623  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 22624  001AB4  0E09               	movlw	9
 22625  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 22626  001AB8  0E00               	movlw	0
 22627  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 22628  001ABC  0E00               	movlw	0
 22629  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 22630  001AC0  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 22631                           
 22632                           ;mdm_gsm_gprs.c: 671: SendSms_State = SendSms_Delay;
 22633  001AC4  0E05               	movlw	5
 22634  001AC6  0101               	movlb	1	; () banked
 22635  001AC8  6FEC               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22636                           
 22637                           ; BSR set to: 1
 22638                           ;mdm_gsm_gprs.c: 672: SendSms_NextState = SendSms_EnterCmd;
 22639  001ACA  0E02               	movlw	2
 22640  001ACC  6FEB               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 22641                           
 22642                           ;mdm_gsm_gprs.c: 673: break;
 22643  001ACE  0012               	return	
 22644  001AD0                     
 22645                           ; BSR set to: 1
 22646                           ;mdm_gsm_gprs.c: 677: UartMessage[0] = '\n';
 22647                           
 22648                           ; BSR set to: 1
 22649  001AD0  0E0A               	movlw	10
 22650  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 22651                           
 22652                           ;mdm_gsm_gprs.c: 678: UartMessage[1] = '\r';
 22653  001AD4  0E0D               	movlw	13
 22654  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 22655                           
 22656                           ; BSR set to: 1
 22657                           ;mdm_gsm_gprs.c: 680: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 22658  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 22659  001ADA  0100               	movlb	0	; () banked
 22660  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22661  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 22662  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22663  001AE2  0E02               	movlw	2
 22664  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22665  001AE6  0E01               	movlw	1
 22666  001AE8  EC7D  F02C         	call	_Uart_WriteStringLen
 22667                           
 22668                           ;mdm_gsm_gprs.c: 682: SendSms_State = SendSms_WaitConf;
 22669  001AEC  0E03               	movlw	3
 22670  001AEE  0101               	movlb	1	; () banked
 22671  001AF0  6FEC               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22672                           
 22673                           ;mdm_gsm_gprs.c: 683: break;
 22674  001AF2  0012               	return	
 22675  001AF4                     
 22676                           ; BSR set to: 1
 22677                           ;mdm_gsm_gprs.c: 687: if (ReceiveEvt(&NewStringReceived))
 22678                           
 22679                           ; BSR set to: 1
 22680  001AF4  0E3C               	movlw	low _NewStringReceived
 22681  001AF6  0100               	movlb	0	; () banked
 22682  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22683  001AFA  0E00               	movlw	high _NewStringReceived
 22684  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22685  001AFE  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 22686  001B02  0900               	iorlw	0
 22687  001B04  B4D8               	btfsc	status,2,c
 22688  001B06  0012               	return	
 22689                           
 22690                           ;mdm_gsm_gprs.c: 688: {
 22691                           ;mdm_gsm_gprs.c: 690: if (RxBuffer[0] == '>')
 22692  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 22693  001B0C  0A3E               	xorlw	62
 22694  001B0E  A4D8               	btfss	status,2,c
 22695  001B10  0012               	return	
 22696                           
 22697                           ;mdm_gsm_gprs.c: 691: {
 22698                           ;mdm_gsm_gprs.c: 693: SendSms_State = SendSms_SendSmsText;
 22699  001B12  0E04               	movlw	4
 22700  001B14  0101               	movlb	1	; () banked
 22701  001B16  6FEC               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22702                           
 22703                           ; BSR set to: 1
 22704                           ;mdm_gsm_gprs.c: 694: }
 22705                           ;mdm_gsm_gprs.c: 695: }
 22706                           ;mdm_gsm_gprs.c: 696: break;
 22707                           
 22708                           ; BSR set to: 1
 22709  001B18  0012               	return	
 22710  001B1A                     
 22711                           ; BSR set to: 1
 22712                           ;mdm_gsm_gprs.c: 700: StringCopy(MessageText,UartMessage,SmsLen);
 22713                           
 22714                           ; BSR set to: 1
 22715  001B1A  0EC4               	movlw	low _MessageText
 22716  001B1C  0100               	movlb	0	; () banked
 22717  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22718  001B20  0E07               	movlw	high _MessageText
 22719  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22720  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 22721  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22722  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 22723  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22724  001B2C  C0D8  F081         	movff	_SmsLen,StringCopy@Len
 22725  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22726  001B32  ECFA  F027         	call	_StringCopy	;wreg free
 22727                           
 22728                           ;mdm_gsm_gprs.c: 702: UartMessage[SmsLen] = 0x1A;
 22729  001B36  0100               	movlb	0	; () banked
 22730  001B38  51D8               	movf	_SmsLen& (0+255),w,b
 22731  001B3A  0D01               	mullw	1
 22732  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 22733  001B3E  24F3               	addwf	prodl,w,c
 22734  001B40  6ED9               	movwf	fsr2l,c
 22735  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 22736  001B44  20F4               	addwfc	prodh,w,c
 22737  001B46  6EDA               	movwf	fsr2h,c
 22738  001B48  0E1A               	movlw	26
 22739  001B4A  6EDF               	movwf	indf2,c
 22740                           
 22741                           ; BSR set to: 0
 22742                           ;mdm_gsm_gprs.c: 704: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 22743  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 22744  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22745  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 22746  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22747  001B54  29D8               	incf	_SmsLen& (0+255),w,b
 22748  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22749  001B58  0E01               	movlw	1
 22750  001B5A  EC7D  F02C         	call	_Uart_WriteStringLen
 22751                           
 22752                           ;mdm_gsm_gprs.c: 706: SendSms_State = SendSms_WaitEvt;
 22753  001B5E  0E00               	movlw	0
 22754  001B60  0101               	movlb	1	; () banked
 22755  001B62  6FEC               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22756                           
 22757                           ;mdm_gsm_gprs.c: 707: break;
 22758  001B64  0012               	return	
 22759  001B66                     
 22760                           ; BSR set to: 1
 22761                           ;mdm_gsm_gprs.c: 711: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 22762                           
 22763                           ; BSR set to: 1
 22764  001B66  0EE4               	movlw	low SendSmsSm@SwTimer
 22765  001B68  0100               	movlb	0	; () banked
 22766  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 22767  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 22768  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 22769  001B70  EC67  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 22770  001B74  06E8               	decf	wreg,f,c
 22771  001B76  A4D8               	btfss	status,2,c
 22772  001B78  0012               	return	
 22773                           
 22774                           ;mdm_gsm_gprs.c: 712: {
 22775                           ;mdm_gsm_gprs.c: 714: SendSms_State = SendSms_NextState;
 22776  001B7A  C1EB  F1EC         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 22777                           
 22778                           ;mdm_gsm_gprs.c: 720: }
 22779                           
 22780                           ;mdm_gsm_gprs.c: 719: break;
 22781                           
 22782                           ;mdm_gsm_gprs.c: 718: default:
 22783                           
 22784                           ;mdm_gsm_gprs.c: 715: }
 22785                           ;mdm_gsm_gprs.c: 716: break;
 22786  001B7E  0012               	return	
 22787  001B80                     l1083:
 22788  001B80  0101               	movlb	1	; () banked
 22789  001B82  51EC               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 22790                           
 22791                           ; Switch size 1, requested type "space"
 22792                           ; Number of cases is 6, Range of values is 0 to 5
 22793                           ; switch strategies available:
 22794                           ; Name         Instructions Cycles
 22795                           ; simple_byte           19    10 (average)
 22796                           ;	Chosen strategy is simple_byte
 22797  001B84  0A00               	xorlw	0	; case 0
 22798  001B86  B4D8               	btfsc	status,2,c
 22799  001B88  D73A               	goto	l1084
 22800  001B8A  0A01               	xorlw	1	; case 1
 22801  001B8C  B4D8               	btfsc	status,2,c
 22802  001B8E  D745               	goto	l1087
 22803  001B90  0A03               	xorlw	3	; case 2
 22804  001B92  B4D8               	btfsc	status,2,c
 22805  001B94  D79D               	goto	l1088
 22806  001B96  0A01               	xorlw	1	; case 3
 22807  001B98  B4D8               	btfsc	status,2,c
 22808  001B9A  D7AC               	goto	l1089
 22809  001B9C  0A07               	xorlw	7	; case 4
 22810  001B9E  B4D8               	btfsc	status,2,c
 22811  001BA0  D7BC               	goto	l1092
 22812  001BA2  0A01               	xorlw	1	; case 5
 22813  001BA4  A4D8               	btfss	status,2,c
 22814                           
 22815                           ; BSR set to: 1
 22816  001BA6  0012               	return	
 22817  001BA8  D7DE               	goto	l1093
 22818  001BAA                     __end_of_SendSmsSm:
 22819                           	opt stack 0
 22820                           tosu	equ	0xFFF
 22821                           tosh	equ	0xFFE
 22822                           tosl	equ	0xFFD
 22823                           pclath	equ	0xFFA
 22824                           tblptru	equ	0xFF8
 22825                           tblptrh	equ	0xFF7
 22826                           tblptrl	equ	0xFF6
 22827                           tablat	equ	0xFF5
 22828                           prodh	equ	0xFF4
 22829                           prodl	equ	0xFF3
 22830                           intcon	equ	0xFF2
 22831                           intcon2	equ	0xFF1
 22832                           intcon3	equ	0xFF0
 22833                           indf0	equ	0xFEF
 22834                           postinc0	equ	0xFEE
 22835                           plusw0	equ	0xFEB
 22836                           fsr0h	equ	0xFEA
 22837                           fsr0l	equ	0xFE9
 22838                           wreg	equ	0xFE8
 22839                           indf1	equ	0xFE7
 22840                           postinc1	equ	0xFE6
 22841                           postdec1	equ	0xFE5
 22842                           plusw1	equ	0xFE3
 22843                           fsr1h	equ	0xFE2
 22844                           fsr1l	equ	0xFE1
 22845                           indf2	equ	0xFDF
 22846                           postinc2	equ	0xFDE
 22847                           postdec2	equ	0xFDD
 22848                           plusw2	equ	0xFDB
 22849                           fsr2h	equ	0xFDA
 22850                           fsr2l	equ	0xFD9
 22851                           status	equ	0xFD8
 22852                           
 22853 ;; *************** function _Uart_WriteStringLen *****************
 22854 ;; Defined at:
 22855 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 22856 ;; Parameters:    Size  Location     Type
 22857 ;;  Module          1    wreg     unsigned char 
 22858 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 22859 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 22860 ;;  Len             1   34[BANK0 ] unsigned char 
 22861 ;; Auto vars:     Size  Location     Type
 22862 ;;  Module          1   36[BANK0 ] unsigned char 
 22863 ;;  Index           1   35[BANK0 ] unsigned char 
 22864 ;; Return value:  Size  Location     Type
 22865 ;;                  1    wreg      void 
 22866 ;; Registers used:
 22867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22868 ;; Tracked objects:
 22869 ;;		On entry : 0/0
 22870 ;;		On exit  : 0/0
 22871 ;;		Unchanged: 0/0
 22872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22873 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22874 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22876 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22877 ;;Total ram usage:        5 bytes
 22878 ;; Hardware stack levels used:    1
 22879 ;; Hardware stack levels required when called:   12
 22880 ;; This function calls:
 22881 ;;		_UartTxBufferStatus
 22882 ;;		_UartWriteByte
 22883 ;; This function is called by:
 22884 ;;		_SendSmsSm
 22885 ;;		_GsmGprsTerminal
 22886 ;; This function uses a non-reentrant model
 22887 ;;
 22888                           
 22889                           	psect	text106
 22890  0058FA                     __ptext106:
 22891                           	opt stack 0
 22892  0058FA                     _Uart_WriteStringLen:
 22893                           	opt stack 14
 22894                           
 22895                           ;incstack = 0
 22896                           ;Uart_WriteStringLen@Module stored from wreg
 22897  0058FA  0100               	movlb	0	; () banked
 22898  0058FC  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 22899                           
 22900                           ;uart_drv.c: 544: UINT8 Index;
 22901                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 22902  0058FE  0E00               	movlw	0
 22903  005900  0100               	movlb	0	; () banked
 22904  005902  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 22905  005904  D015               	goto	l715
 22906  005906                     
 22907                           ; BSR set to: 0
 22908                           ;uart_drv.c: 547: {
 22909                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 22910                           
 22911                           ; BSR set to: 0
 22912  005906  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 22913  00590A  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 22914  00590E  50DF               	movf	indf2,w,c
 22915  005910  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 22916  005912  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 22917  005914  EC89  F02F         	call	_UartWriteByte
 22918                           
 22919                           ;uart_drv.c: 551: StringToWrite++;
 22920  005918  0100               	movlb	0	; () banked
 22921  00591A  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 22922  00591C  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 22923  00591E                     
 22924                           ; BSR set to: 0
 22925                           
 22926                           ; BSR set to: 0
 22927  00591E  0100               	movlb	0	; () banked
 22928  005920  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 22929  005922  ECB1  F02A         	call	_UartTxBufferStatus
 22930  005926  06E8               	decf	wreg,f,c
 22931  005928  B4D8               	btfsc	status,2,c
 22932  00592A  D7F9               	goto	l718
 22933  00592C  0100               	movlb	0	; () banked
 22934  00592E  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 22935  005930                     l715:
 22936                           
 22937                           ; BSR set to: 0
 22938                           
 22939                           ; BSR set to: 0
 22940  005930  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 22941  005932  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 22942  005934  B0D8               	btfsc	status,0,c
 22943  005936  0012               	return	
 22944  005938  D7E6               	goto	l716
 22945  00593A                     __end_of_Uart_WriteStringLen:
 22946                           	opt stack 0
 22947                           tosu	equ	0xFFF
 22948                           tosh	equ	0xFFE
 22949                           tosl	equ	0xFFD
 22950                           pclath	equ	0xFFA
 22951                           tblptru	equ	0xFF8
 22952                           tblptrh	equ	0xFF7
 22953                           tblptrl	equ	0xFF6
 22954                           tablat	equ	0xFF5
 22955                           prodh	equ	0xFF4
 22956                           prodl	equ	0xFF3
 22957                           intcon	equ	0xFF2
 22958                           intcon2	equ	0xFF1
 22959                           intcon3	equ	0xFF0
 22960                           indf0	equ	0xFEF
 22961                           postinc0	equ	0xFEE
 22962                           plusw0	equ	0xFEB
 22963                           fsr0h	equ	0xFEA
 22964                           fsr0l	equ	0xFE9
 22965                           wreg	equ	0xFE8
 22966                           indf1	equ	0xFE7
 22967                           postinc1	equ	0xFE6
 22968                           postdec1	equ	0xFE5
 22969                           plusw1	equ	0xFE3
 22970                           fsr1h	equ	0xFE2
 22971                           fsr1l	equ	0xFE1
 22972                           indf2	equ	0xFDF
 22973                           postinc2	equ	0xFDE
 22974                           postdec2	equ	0xFDD
 22975                           plusw2	equ	0xFDB
 22976                           fsr2h	equ	0xFDA
 22977                           fsr2l	equ	0xFD9
 22978                           status	equ	0xFD8
 22979                           
 22980 ;; *************** function _ModemEvtParser *****************
 22981 ;; Defined at:
 22982 ;;		line 494 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22983 ;; Parameters:    Size  Location     Type
 22984 ;;		None
 22985 ;; Auto vars:     Size  Location     Type
 22986 ;;  CallReadyStr   10   40[BANK0 ] unsigned char [10]
 22987 ;;  SmsString       5   50[BANK0 ] unsigned char [5]
 22988 ;;  RingString      4   55[BANK0 ] unsigned char [4]
 22989 ;;  CompareIdx      1   60[BANK0 ] unsigned char 
 22990 ;;  Match           1   59[BANK0 ] unsigned char 
 22991 ;; Return value:  Size  Location     Type
 22992 ;;                  1    wreg      void 
 22993 ;; Registers used:
 22994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22995 ;; Tracked objects:
 22996 ;;		On entry : 0/0
 22997 ;;		On exit  : 0/0
 22998 ;;		Unchanged: 0/0
 22999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23001 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23003 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23004 ;;Total ram usage:       21 bytes
 23005 ;; Hardware stack levels used:    1
 23006 ;; Hardware stack levels required when called:   12
 23007 ;; This function calls:
 23008 ;;		_GenerateEvt
 23009 ;;		_ReceiveEvt
 23010 ;;		_StringCompare
 23011 ;;		_Uart_ClearRxBuffer
 23012 ;; This function is called by:
 23013 ;;		_Mdm_MainTask
 23014 ;; This function uses a non-reentrant model
 23015 ;;
 23016                           
 23017                           	psect	text107
 23018  002F06                     __ptext107:
 23019                           	opt stack 0
 23020  002F06                     _ModemEvtParser:
 23021                           	opt stack 15
 23022                           
 23023                           ;mdm_gsm_gprs.c: 496: UINT8 RingString[] = {'R','I','N','G'};
 23024                           
 23025                           ; BSR set to: 0
 23026                           ;incstack = 0
 23027  002F06  C3BF  F097         	movff	ModemEvtParser@F9087,ModemEvtParser@RingString
 23028  002F0A  C3C0  F098         	movff	ModemEvtParser@F9087+1,ModemEvtParser@RingString+1
 23029  002F0E  C3C1  F099         	movff	ModemEvtParser@F9087+2,ModemEvtParser@RingString+2
 23030  002F12  C3C2  F09A         	movff	ModemEvtParser@F9087+3,ModemEvtParser@RingString+3
 23031                           
 23032                           ;mdm_gsm_gprs.c: 497: UINT8 SmsString[] = {'+','C','M','T','I'};
 23033  002F16  EE23  F0BA         	lfsr	2,ModemEvtParser@F9089
 23034  002F1A  EE10  F092         	lfsr	1,ModemEvtParser@SmsString
 23035  002F1E  0E04               	movlw	4
 23036  002F20                     u12261:
 23037  002F20  CFDB FFE3          	movff	plusw2,plusw1
 23038  002F24  06E8               	decf	wreg,f,c
 23039  002F26  E2FC               	bc	u12261
 23040                           
 23041                           ;mdm_gsm_gprs.c: 498: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 23042  002F28  EE24  F0EF         	lfsr	2,ModemEvtParser@F9091
 23043  002F2C  EE10  F088         	lfsr	1,ModemEvtParser@CallReadyString
 23044  002F30  0E09               	movlw	9
 23045  002F32                     u12271:
 23046  002F32  CFDB FFE3          	movff	plusw2,plusw1
 23047  002F36  06E8               	decf	wreg,f,c
 23048  002F38  E2FC               	bc	u12271
 23049                           
 23050                           ;mdm_gsm_gprs.c: 499: UINT8 CompareIdx = 0;
 23051  002F3A  0E00               	movlw	0
 23052  002F3C  0100               	movlb	0	; () banked
 23053  002F3E  6F9C               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23054                           
 23055                           ; BSR set to: 0
 23056                           ;mdm_gsm_gprs.c: 500: UINT8 Match = 0;
 23057  002F40  0E00               	movlw	0
 23058  002F42  6F9B               	movwf	ModemEvtParser@Match& (0+255),b
 23059                           
 23060                           ; BSR set to: 0
 23061                           ;mdm_gsm_gprs.c: 503: if (ReceiveEvt(&NewMdmEvtParserRequest))
 23062  002F44  0E3B               	movlw	low _NewMdmEvtParserRequest
 23063  002F46  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23064  002F48  0E00               	movlw	high _NewMdmEvtParserRequest
 23065  002F4A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23066  002F4C  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 23067  002F50  0900               	iorlw	0
 23068  002F52  B4D8               	btfsc	status,2,c
 23069  002F54  0012               	return	
 23070                           
 23071                           ;mdm_gsm_gprs.c: 504: {
 23072                           ;mdm_gsm_gprs.c: 505: for (CompareIdx = 0; CompareIdx < ((UINT8)(3)); CompareIdx++)
 23073  002F56  0E00               	movlw	0
 23074  002F58  0100               	movlb	0	; () banked
 23075  002F5A  6F9C               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23076  002F5C                     l13127:
 23077                           
 23078                           ; BSR set to: 0
 23079  002F5C  0E02               	movlw	2
 23080  002F5E  659C               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 23081  002F60  D04C               	goto	l1046
 23082  002F62  D058               	goto	u12330
 23083  002F64                     
 23084                           ; BSR set to: 0
 23085                           ;mdm_gsm_gprs.c: 511: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 23086                           
 23087                           ; BSR set to: 0
 23088  002F64  0E97               	movlw	low ModemEvtParser@RingString
 23089  002F66  6F7D               	movwf	StringCompare@String1& (0+255),b
 23090  002F68  0E00               	movlw	high ModemEvtParser@RingString
 23091  002F6A  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 23092  002F6C  0E58               	movlw	low _RxBuffer
 23093  002F6E  6F7F               	movwf	StringCompare@String2& (0+255),b
 23094  002F70  0E0C               	movlw	high _RxBuffer
 23095  002F72  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 23096  002F74  0E00               	movlw	0
 23097  002F76  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 23098  002F78  0E04               	movlw	4
 23099  002F7A  6F81               	movwf	StringCompare@Len& (0+255),b
 23100  002F7C  EC38  F02A         	call	_StringCompare	;wreg free
 23101  002F80  0900               	iorlw	0
 23102  002F82  B4D8               	btfsc	status,2,c
 23103  002F84  D044               	goto	l1049
 23104                           
 23105                           ;mdm_gsm_gprs.c: 512: {
 23106                           ;mdm_gsm_gprs.c: 514: GenerateEvt(&RingEvent);
 23107  002F86  0EDE               	movlw	low _RingEvent
 23108  002F88  0100               	movlb	0	; () banked
 23109  002F8A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23110  002F8C  0E00               	movlw	high _RingEvent
 23111  002F8E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23112  002F90  EC06  F030         	call	_GenerateEvt	;wreg free
 23113  002F94  D018               	goto	l13141
 23114  002F96                     
 23115                           ; BSR set to: 0
 23116                           ;mdm_gsm_gprs.c: 522: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 23117                           
 23118                           ; BSR set to: 0
 23119  002F96  0E92               	movlw	low ModemEvtParser@SmsString
 23120  002F98  6F7D               	movwf	StringCompare@String1& (0+255),b
 23121  002F9A  0E00               	movlw	high ModemEvtParser@SmsString
 23122  002F9C  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 23123  002F9E  0E58               	movlw	low _RxBuffer
 23124  002FA0  6F7F               	movwf	StringCompare@String2& (0+255),b
 23125  002FA2  0E0C               	movlw	high _RxBuffer
 23126  002FA4  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 23127  002FA6  0E00               	movlw	0
 23128  002FA8  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 23129  002FAA  0E05               	movlw	5
 23130  002FAC  6F81               	movwf	StringCompare@Len& (0+255),b
 23131  002FAE  EC38  F02A         	call	_StringCompare	;wreg free
 23132  002FB2  0900               	iorlw	0
 23133  002FB4  B4D8               	btfsc	status,2,c
 23134  002FB6  D02B               	goto	l1049
 23135                           
 23136                           ;mdm_gsm_gprs.c: 523: {
 23137                           ;mdm_gsm_gprs.c: 525: GenerateEvt(&SmsEvent);
 23138  002FB8  0EDD               	movlw	low _SmsEvent
 23139  002FBA  0100               	movlb	0	; () banked
 23140  002FBC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23141  002FBE  0E00               	movlw	high _SmsEvent
 23142  002FC0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23143  002FC2  EC06  F030         	call	_GenerateEvt	;wreg free
 23144  002FC6                     l13141:
 23145                           
 23146                           ;mdm_gsm_gprs.c: 527: Match = 1;
 23147  002FC6  0E01               	movlw	1
 23148  002FC8  0100               	movlb	0	; () banked
 23149  002FCA  D015               	goto	L28
 23150  002FCC                     
 23151                           ; BSR set to: 0
 23152                           ;mdm_gsm_gprs.c: 533: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 23153                           
 23154                           ; BSR set to: 0
 23155  002FCC  0E88               	movlw	low ModemEvtParser@CallReadyString
 23156  002FCE  6F7D               	movwf	StringCompare@String1& (0+255),b
 23157  002FD0  0E00               	movlw	high ModemEvtParser@CallReadyString
 23158  002FD2  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 23159  002FD4  0E58               	movlw	low _RxBuffer
 23160  002FD6  6F7F               	movwf	StringCompare@String2& (0+255),b
 23161  002FD8  0E0C               	movlw	high _RxBuffer
 23162  002FDA  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 23163  002FDC  0E00               	movlw	0
 23164  002FDE  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 23165  002FE0  0E0A               	movlw	10
 23166  002FE2  6F81               	movwf	StringCompare@Len& (0+255),b
 23167  002FE4  EC38  F02A         	call	_StringCompare	;wreg free
 23168  002FE8  0900               	iorlw	0
 23169  002FEA  B4D8               	btfsc	status,2,c
 23170  002FEC  D010               	goto	l1049
 23171                           
 23172                           ;mdm_gsm_gprs.c: 534: {
 23173                           ;mdm_gsm_gprs.c: 536: MdmStatus = ModemReady;
 23174  002FEE  0E02               	movlw	2
 23175  002FF0  0100               	movlb	0	; () banked
 23176  002FF2  6FD6               	movwf	_MdmStatus& (0+255),b
 23177                           
 23178                           ;mdm_gsm_gprs.c: 538: Match = 1;
 23179  002FF4  0E01               	movlw	1
 23180  002FF6                     L28:
 23181  002FF6  6F9B               	movwf	ModemEvtParser@Match& (0+255),b
 23182                           
 23183                           ; BSR set to: 0
 23184                           ;mdm_gsm_gprs.c: 544: }
 23185                           
 23186                           ; BSR set to: 0
 23187                           ;mdm_gsm_gprs.c: 543: break;
 23188                           
 23189                           ;mdm_gsm_gprs.c: 542: default:
 23190                           
 23191                           ; BSR set to: 0
 23192                           ;mdm_gsm_gprs.c: 539: }
 23193                           ;mdm_gsm_gprs.c: 540: break;
 23194  002FF8  D00A               	goto	l1049
 23195  002FFA                     l1046:
 23196                           
 23197                           ; BSR set to: 0
 23198                           
 23199                           ; BSR set to: 0
 23200  002FFA  519C               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 23201                           
 23202                           ; Switch size 1, requested type "space"
 23203                           ; Number of cases is 3, Range of values is 0 to 2
 23204                           ; switch strategies available:
 23205                           ; Name         Instructions Cycles
 23206                           ; simple_byte           10     6 (average)
 23207                           ;	Chosen strategy is simple_byte
 23208  002FFC  0A00               	xorlw	0	; case 0
 23209  002FFE  B4D8               	btfsc	status,2,c
 23210  003000  D7B1               	goto	l1047
 23211  003002  0A01               	xorlw	1	; case 1
 23212  003004  B4D8               	btfsc	status,2,c
 23213  003006  D7C7               	goto	l1050
 23214  003008  0A03               	xorlw	3	; case 2
 23215  00300A  B4D8               	btfsc	status,2,c
 23216  00300C  D7DF               	goto	l1052
 23217  00300E                     l1049:
 23218                           
 23219                           ; BSR set to: 0
 23220  00300E  0100               	movlb	0	; () banked
 23221  003010  2B9C               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 23222  003012  D7A4               	goto	l13127
 23223  003014                     u12330:
 23224                           
 23225                           ; BSR set to: 0
 23226                           ;mdm_gsm_gprs.c: 545: }
 23227                           ;mdm_gsm_gprs.c: 548: if (Match == 1)
 23228                           
 23229                           ; BSR set to: 0
 23230  003014  059B               	decf	ModemEvtParser@Match& (0+255),w,b
 23231  003016  A4D8               	btfss	status,2,c
 23232  003018  0012               	return	
 23233                           
 23234                           ; BSR set to: 0
 23235                           ;mdm_gsm_gprs.c: 549: {
 23236                           ;mdm_gsm_gprs.c: 552: Uart_ClearRxBuffer();
 23237  00301A  EC8A  F02D         	call	_Uart_ClearRxBuffer	;wreg free
 23238  00301E  0012               	return	
 23239  003020                     __end_of_ModemEvtParser:
 23240                           	opt stack 0
 23241                           tosu	equ	0xFFF
 23242                           tosh	equ	0xFFE
 23243                           tosl	equ	0xFFD
 23244                           pclath	equ	0xFFA
 23245                           tblptru	equ	0xFF8
 23246                           tblptrh	equ	0xFF7
 23247                           tblptrl	equ	0xFF6
 23248                           tablat	equ	0xFF5
 23249                           prodh	equ	0xFF4
 23250                           prodl	equ	0xFF3
 23251                           intcon	equ	0xFF2
 23252                           intcon2	equ	0xFF1
 23253                           intcon3	equ	0xFF0
 23254                           indf0	equ	0xFEF
 23255                           postinc0	equ	0xFEE
 23256                           plusw0	equ	0xFEB
 23257                           fsr0h	equ	0xFEA
 23258                           fsr0l	equ	0xFE9
 23259                           wreg	equ	0xFE8
 23260                           indf1	equ	0xFE7
 23261                           postinc1	equ	0xFE6
 23262                           postdec1	equ	0xFE5
 23263                           plusw1	equ	0xFE3
 23264                           fsr1h	equ	0xFE2
 23265                           fsr1l	equ	0xFE1
 23266                           indf2	equ	0xFDF
 23267                           postinc2	equ	0xFDE
 23268                           postdec2	equ	0xFDD
 23269                           plusw2	equ	0xFDB
 23270                           fsr2h	equ	0xFDA
 23271                           fsr2l	equ	0xFD9
 23272                           status	equ	0xFD8
 23273                           
 23274 ;; *************** function _Uart_ClearRxBuffer *****************
 23275 ;; Defined at:
 23276 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23277 ;; Parameters:    Size  Location     Type
 23278 ;;		None
 23279 ;; Auto vars:     Size  Location     Type
 23280 ;;  Index           2   29[BANK0 ] unsigned short 
 23281 ;; Return value:  Size  Location     Type
 23282 ;;                  1    wreg      void 
 23283 ;; Registers used:
 23284 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23285 ;; Tracked objects:
 23286 ;;		On entry : 0/0
 23287 ;;		On exit  : 0/0
 23288 ;;		Unchanged: 0/0
 23289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23291 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23293 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23294 ;;Total ram usage:        2 bytes
 23295 ;; Hardware stack levels used:    1
 23296 ;; Hardware stack levels required when called:   11
 23297 ;; This function calls:
 23298 ;;		Nothing
 23299 ;; This function is called by:
 23300 ;;		_ModemEvtParser
 23301 ;; This function uses a non-reentrant model
 23302 ;;
 23303                           
 23304                           	psect	text108
 23305  005B14                     __ptext108:
 23306                           	opt stack 0
 23307  005B14                     _Uart_ClearRxBuffer:
 23308                           	opt stack 15
 23309                           
 23310                           ;uart_drv.c: 567: UINT16 Index = 0;
 23311                           
 23312                           ;incstack = 0
 23313  005B14  0E00               	movlw	0
 23314  005B16  0100               	movlb	0	; () banked
 23315  005B18  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23316  005B1A  0E00               	movlw	0
 23317  005B1C  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23318                           
 23319                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 23320  005B1E  0E00               	movlw	0
 23321  005B20  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23322  005B22  0E00               	movlw	0
 23323  005B24  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23324  005B26                     l9195:
 23325                           
 23326                           ; BSR set to: 0
 23327  005B26  0E90               	movlw	144
 23328  005B28  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23329  005B2A  0E01               	movlw	1
 23330  005B2C  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23331  005B2E  B0D8               	btfsc	status,0,c
 23332  005B30  0012               	return	
 23333                           
 23334                           ; BSR set to: 0
 23335                           ;uart_drv.c: 571: {
 23336                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 23337                           
 23338                           ; BSR set to: 0
 23339                           
 23340                           ; BSR set to: 0
 23341  005B32  0E58               	movlw	low _RxBuffer
 23342  005B34  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23343  005B36  6ED9               	movwf	fsr2l,c
 23344  005B38  0E0C               	movlw	high _RxBuffer
 23345  005B3A  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23346  005B3C  6EDA               	movwf	fsr2h,c
 23347  005B3E  0E00               	movlw	0
 23348  005B40  6EDF               	movwf	indf2,c
 23349                           
 23350                           ; BSR set to: 0
 23351  005B42  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 23352  005B44  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 23353  005B46  D7EF               	goto	l9195
 23354  005B48                     __end_of_Uart_ClearRxBuffer:
 23355                           	opt stack 0
 23356                           tosu	equ	0xFFF
 23357                           tosh	equ	0xFFE
 23358                           tosl	equ	0xFFD
 23359                           pclath	equ	0xFFA
 23360                           tblptru	equ	0xFF8
 23361                           tblptrh	equ	0xFF7
 23362                           tblptrl	equ	0xFF6
 23363                           tablat	equ	0xFF5
 23364                           prodh	equ	0xFF4
 23365                           prodl	equ	0xFF3
 23366                           intcon	equ	0xFF2
 23367                           intcon2	equ	0xFF1
 23368                           intcon3	equ	0xFF0
 23369                           indf0	equ	0xFEF
 23370                           postinc0	equ	0xFEE
 23371                           plusw0	equ	0xFEB
 23372                           fsr0h	equ	0xFEA
 23373                           fsr0l	equ	0xFE9
 23374                           wreg	equ	0xFE8
 23375                           indf1	equ	0xFE7
 23376                           postinc1	equ	0xFE6
 23377                           postdec1	equ	0xFE5
 23378                           plusw1	equ	0xFE3
 23379                           fsr1h	equ	0xFE2
 23380                           fsr1l	equ	0xFE1
 23381                           indf2	equ	0xFDF
 23382                           postinc2	equ	0xFDE
 23383                           postdec2	equ	0xFDD
 23384                           plusw2	equ	0xFDB
 23385                           fsr2h	equ	0xFDA
 23386                           fsr2l	equ	0xFD9
 23387                           status	equ	0xFD8
 23388                           
 23389 ;; *************** function _StringCompare *****************
 23390 ;; Defined at:
 23391 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 23392 ;; Parameters:    Size  Location     Type
 23393 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 23394 ;;		 -> MyApp_Task@smsNumber(14), MyApp_Task@smsText(50), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5
      +), 
 23395 ;;		 -> ModemEvtParser@RingString(4), 
 23396 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 23397 ;;		 -> MyApp_Task@cmpString(3), MyApp_Task@phone(13), RxBuffer(400), 
 23398 ;;  Len             2   33[BANK0 ] unsigned short 
 23399 ;; Auto vars:     Size  Location     Type
 23400 ;;  Index           2   38[BANK0 ] unsigned short 
 23401 ;;  Result          1   37[BANK0 ] unsigned char 
 23402 ;; Return value:  Size  Location     Type
 23403 ;;                  1    wreg      unsigned char 
 23404 ;; Registers used:
 23405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23406 ;; Tracked objects:
 23407 ;;		On entry : 0/0
 23408 ;;		On exit  : 0/0
 23409 ;;		Unchanged: 0/0
 23410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23411 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23412 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23413 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23414 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23415 ;;Total ram usage:       11 bytes
 23416 ;; Hardware stack levels used:    1
 23417 ;; Hardware stack levels required when called:   11
 23418 ;; This function calls:
 23419 ;;		Nothing
 23420 ;; This function is called by:
 23421 ;;		_ModemEvtParser
 23422 ;;		_MyApp_Task
 23423 ;; This function uses a non-reentrant model
 23424 ;;
 23425                           
 23426                           	psect	text109
 23427  005470                     __ptext109:
 23428                           	opt stack 0
 23429  005470                     _StringCompare:
 23430                           	opt stack 16
 23431                           
 23432                           ;sf.c: 77: UINT16 Index = 0;
 23433                           
 23434                           ; BSR set to: 0
 23435                           ;incstack = 0
 23436  005470  0E00               	movlw	0
 23437  005472  0100               	movlb	0	; () banked
 23438  005474  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 23439  005476  0E00               	movlw	0
 23440  005478  6F86               	movwf	StringCompare@Index& (0+255),b
 23441                           
 23442                           ;sf.c: 78: UINT8 Result = 1;
 23443  00547A  0E01               	movlw	1
 23444  00547C  6F85               	movwf	StringCompare@Result& (0+255),b
 23445                           
 23446                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 23447  00547E  0E00               	movlw	0
 23448  005480  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 23449  005482  0E00               	movlw	0
 23450  005484  6F86               	movwf	StringCompare@Index& (0+255),b
 23451  005486  D015               	goto	l2199
 23452  005488                     
 23453                           ; BSR set to: 0
 23454                           ;sf.c: 82: {
 23455                           ;sf.c: 83: if (String1[Index] != String2[Index])
 23456                           
 23457                           ; BSR set to: 0
 23458  005488  5186               	movf	StringCompare@Index& (0+255),w,b
 23459  00548A  257F               	addwf	StringCompare@String2& (0+255),w,b
 23460  00548C  6ED9               	movwf	fsr2l,c
 23461  00548E  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 23462  005490  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 23463  005492  6EDA               	movwf	fsr2h,c
 23464  005494  5186               	movf	StringCompare@Index& (0+255),w,b
 23465  005496  257D               	addwf	StringCompare@String1& (0+255),w,b
 23466  005498  6EE1               	movwf	fsr1l,c
 23467  00549A  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 23468  00549C  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 23469  00549E  6EE2               	movwf	fsr1h,c
 23470  0054A0  50DE               	movf	postinc2,w,c
 23471  0054A2  18E6               	xorwf	postinc1,w,c
 23472  0054A4  B4D8               	btfsc	status,2,c
 23473  0054A6  D003               	goto	l2201
 23474                           
 23475                           ; BSR set to: 0
 23476                           ;sf.c: 84: {
 23477                           ;sf.c: 85: Result = 0;
 23478  0054A8  0E00               	movlw	0
 23479  0054AA  6F85               	movwf	StringCompare@Result& (0+255),b
 23480                           
 23481                           ;sf.c: 86: break;
 23482  0054AC  D008               	goto	u11540
 23483  0054AE                     l2201:
 23484                           
 23485                           ; BSR set to: 0
 23486                           
 23487                           ; BSR set to: 0
 23488  0054AE  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 23489  0054B0  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 23490  0054B2                     l2199:
 23491                           
 23492                           ; BSR set to: 0
 23493                           
 23494                           ; BSR set to: 0
 23495  0054B2  5181               	movf	StringCompare@Len& (0+255),w,b
 23496  0054B4  5D86               	subwf	StringCompare@Index& (0+255),w,b
 23497  0054B6  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 23498  0054B8  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 23499  0054BA  A0D8               	btfss	status,0,c
 23500  0054BC  D7E5               	goto	l2200
 23501  0054BE                     u11540:
 23502                           
 23503                           ; BSR set to: 0
 23504                           ;sf.c: 87: }
 23505                           ;sf.c: 88: }
 23506                           ;sf.c: 91: return Result;
 23507                           
 23508                           ; BSR set to: 0
 23509  0054BE  5185               	movf	StringCompare@Result& (0+255),w,b
 23510  0054C0  0012               	return	
 23511  0054C2                     __end_of_StringCompare:
 23512                           	opt stack 0
 23513                           tosu	equ	0xFFF
 23514                           tosh	equ	0xFFE
 23515                           tosl	equ	0xFFD
 23516                           pclath	equ	0xFFA
 23517                           tblptru	equ	0xFF8
 23518                           tblptrh	equ	0xFF7
 23519                           tblptrl	equ	0xFF6
 23520                           tablat	equ	0xFF5
 23521                           prodh	equ	0xFF4
 23522                           prodl	equ	0xFF3
 23523                           intcon	equ	0xFF2
 23524                           intcon2	equ	0xFF1
 23525                           intcon3	equ	0xFF0
 23526                           indf0	equ	0xFEF
 23527                           postinc0	equ	0xFEE
 23528                           plusw0	equ	0xFEB
 23529                           fsr0h	equ	0xFEA
 23530                           fsr0l	equ	0xFE9
 23531                           wreg	equ	0xFE8
 23532                           indf1	equ	0xFE7
 23533                           postinc1	equ	0xFE6
 23534                           postdec1	equ	0xFE5
 23535                           plusw1	equ	0xFE3
 23536                           fsr1h	equ	0xFE2
 23537                           fsr1l	equ	0xFE1
 23538                           indf2	equ	0xFDF
 23539                           postinc2	equ	0xFDE
 23540                           postdec2	equ	0xFDD
 23541                           plusw2	equ	0xFDB
 23542                           fsr2h	equ	0xFDA
 23543                           fsr2l	equ	0xFD9
 23544                           status	equ	0xFD8
 23545                           
 23546 ;; *************** function _GetSmsSm *****************
 23547 ;; Defined at:
 23548 ;;		line 566 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23549 ;; Parameters:    Size  Location     Type
 23550 ;;		None
 23551 ;; Auto vars:     Size  Location     Type
 23552 ;;		None
 23553 ;; Return value:  Size  Location     Type
 23554 ;;                  1    wreg      void 
 23555 ;; Registers used:
 23556 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23557 ;; Tracked objects:
 23558 ;;		On entry : 0/0
 23559 ;;		On exit  : 0/0
 23560 ;;		Unchanged: 0/0
 23561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23566 ;;Total ram usage:        0 bytes
 23567 ;; Hardware stack levels used:    1
 23568 ;; Hardware stack levels required when called:   13
 23569 ;; This function calls:
 23570 ;;		_ClearBuffer
 23571 ;;		_GenerateEvt
 23572 ;;		_ReceiveEvt
 23573 ;;		_StringCopy
 23574 ;;		_Uart_WriteConstString
 23575 ;; This function is called by:
 23576 ;;		_Mdm_MainTask
 23577 ;; This function uses a non-reentrant model
 23578 ;;
 23579                           
 23580                           	psect	text110
 23581  002A60                     __ptext110:
 23582                           	opt stack 0
 23583  002A60                     _GetSmsSm:
 23584                           	opt stack 14
 23585                           
 23586                           ;mdm_gsm_gprs.c: 568: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 23587                           ;mdm_gsm_gprs.c: 571: if (MdmStatus == ModemConfigured)
 23588                           
 23589                           ; BSR set to: 0
 23590                           ;incstack = 0
 23591  002A60  0E03               	movlw	3
 23592  002A62  0100               	movlb	0	; () banked
 23593  002A64  19D6               	xorwf	_MdmStatus& (0+255),w,b
 23594  002A66  A4D8               	btfss	status,2,c
 23595  002A68  0012               	return	
 23596  002A6A  D084               	goto	l1062
 23597  002A6C                     
 23598                           ;mdm_gsm_gprs.c: 577: if (ReceiveEvt(&GetSmsText))
 23599                           
 23600                           ; BSR set to: 0
 23601  002A6C  0E39               	movlw	low _GetSmsText
 23602  002A6E  0100               	movlb	0	; () banked
 23603  002A70  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23604  002A72  0E00               	movlw	high _GetSmsText
 23605  002A74  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23606  002A76  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 23607  002A7A  0900               	iorlw	0
 23608  002A7C  B4D8               	btfsc	status,2,c
 23609  002A7E  0012               	return	
 23610                           
 23611                           ;mdm_gsm_gprs.c: 578: {
 23612                           ;mdm_gsm_gprs.c: 580: GetSmsState = GetSms_SendAtCmd;
 23613  002A80  0E01               	movlw	1
 23614  002A82  0101               	movlb	1	; () banked
 23615  002A84  6FED               	movwf	GetSmsSm@GetSmsState& (0+255),b
 23616                           
 23617                           ; BSR set to: 1
 23618                           ;mdm_gsm_gprs.c: 581: }
 23619                           ;mdm_gsm_gprs.c: 582: break;
 23620  002A86  0012               	return	
 23621  002A88                     
 23622                           ; BSR set to: 1
 23623                           ;mdm_gsm_gprs.c: 586: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 23624                           
 23625                           ; BSR set to: 1
 23626  002A88  0EC1               	movlw	low STR_4
 23627  002A8A  0100               	movlb	0	; () banked
 23628  002A8C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23629  002A8E  0EFF               	movlw	high STR_4
 23630  002A90  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23631  002A92  0E01               	movlw	1
 23632  002A94  EC1A  F02C         	call	_Uart_WriteConstString
 23633                           
 23634                           ;mdm_gsm_gprs.c: 588: GetSmsState = GetSms_StoreHeader;
 23635  002A98  0E02               	movlw	2
 23636  002A9A  0101               	movlb	1	; () banked
 23637  002A9C  6FED               	movwf	GetSmsSm@GetSmsState& (0+255),b
 23638                           
 23639                           ;mdm_gsm_gprs.c: 589: break;
 23640  002A9E  0012               	return	
 23641  002AA0                     
 23642                           ; BSR set to: 1
 23643                           ;mdm_gsm_gprs.c: 593: if (ReceiveEvt(&NewStringReceived))
 23644                           
 23645                           ; BSR set to: 1
 23646  002AA0  0E3C               	movlw	low _NewStringReceived
 23647  002AA2  0100               	movlb	0	; () banked
 23648  002AA4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23649  002AA6  0E00               	movlw	high _NewStringReceived
 23650  002AA8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23651  002AAA  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 23652  002AAE  0900               	iorlw	0
 23653  002AB0  B4D8               	btfsc	status,2,c
 23654  002AB2  0012               	return	
 23655                           
 23656                           ;mdm_gsm_gprs.c: 594: {
 23657                           ;mdm_gsm_gprs.c: 595: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 23658  002AB4  CC58  FFE8         	movff	_RxBuffer,wreg
 23659  002AB8  0A2B               	xorlw	43
 23660  002ABA  A4D8               	btfss	status,2,c
 23661  002ABC  0012               	return	
 23662  002ABE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 23663  002AC2  0A43               	xorlw	67
 23664  002AC4  A4D8               	btfss	status,2,c
 23665  002AC6  0012               	return	
 23666  002AC8  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 23667  002ACC  0A4D               	xorlw	77
 23668  002ACE  A4D8               	btfss	status,2,c
 23669  002AD0  0012               	return	
 23670                           
 23671                           ;mdm_gsm_gprs.c: 596: {
 23672                           ;mdm_gsm_gprs.c: 598: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 23673  002AD2  0E00               	movlw	low _Mdm_SmsRx
 23674  002AD4  0100               	movlb	0	; () banked
 23675  002AD6  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23676  002AD8  0E07               	movlw	high _Mdm_SmsRx
 23677  002ADA  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23678  002ADC  0E00               	movlw	0
 23679  002ADE  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23680  002AE0  0E50               	movlw	80
 23681  002AE2  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23682  002AE4  EC6F  F02D         	call	_ClearBuffer	;wreg free
 23683                           
 23684                           ;mdm_gsm_gprs.c: 599: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 23685  002AE8  0E58               	movlw	low _RxBuffer
 23686  002AEA  0100               	movlb	0	; () banked
 23687  002AEC  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23688  002AEE  0E0C               	movlw	high _RxBuffer
 23689  002AF0  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23690  002AF2  0E00               	movlw	low _Mdm_SmsRx
 23691  002AF4  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23692  002AF6  0E07               	movlw	high _Mdm_SmsRx
 23693  002AF8  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23694  002AFA  C0CA  F081         	movff	_RxLen,StringCopy@Len
 23695  002AFE  C0CB  F082         	movff	_RxLen+1,StringCopy@Len+1
 23696  002B02  ECFA  F027         	call	_StringCopy	;wreg free
 23697                           
 23698                           ;mdm_gsm_gprs.c: 601: Mdm_SmsRx.HeadLen = RxLen;
 23699  002B06  C0CA  F782         	movff	_RxLen,_Mdm_SmsRx+130
 23700                           
 23701                           ;mdm_gsm_gprs.c: 603: GetSmsState = GetSms_StoreText;
 23702  002B0A  0E03               	movlw	3
 23703  002B0C  0101               	movlb	1	; () banked
 23704  002B0E  6FED               	movwf	GetSmsSm@GetSmsState& (0+255),b
 23705                           
 23706                           ; BSR set to: 1
 23707                           ;mdm_gsm_gprs.c: 604: }
 23708                           ;mdm_gsm_gprs.c: 605: }
 23709                           ;mdm_gsm_gprs.c: 606: break;
 23710                           
 23711                           ; BSR set to: 1
 23712  002B10  0012               	return	
 23713  002B12                     
 23714                           ; BSR set to: 1
 23715                           ;mdm_gsm_gprs.c: 610: if (ReceiveEvt(&NewStringReceived))
 23716                           
 23717                           ; BSR set to: 1
 23718  002B12  0E3C               	movlw	low _NewStringReceived
 23719  002B14  0100               	movlb	0	; () banked
 23720  002B16  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23721  002B18  0E00               	movlw	high _NewStringReceived
 23722  002B1A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23723  002B1C  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 23724  002B20  0900               	iorlw	0
 23725  002B22  B4D8               	btfsc	status,2,c
 23726  002B24  0012               	return	
 23727                           
 23728                           ;mdm_gsm_gprs.c: 611: {
 23729                           ;mdm_gsm_gprs.c: 613: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 23730  002B26  0E50               	movlw	low (_Mdm_SmsRx+80)
 23731  002B28  0100               	movlb	0	; () banked
 23732  002B2A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23733  002B2C  0E07               	movlw	high (_Mdm_SmsRx+80)
 23734  002B2E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23735  002B30  0E00               	movlw	0
 23736  002B32  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23737  002B34  0E32               	movlw	50
 23738  002B36  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23739  002B38  EC6F  F02D         	call	_ClearBuffer	;wreg free
 23740                           
 23741                           ;mdm_gsm_gprs.c: 614: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 23742  002B3C  0E58               	movlw	low _RxBuffer
 23743  002B3E  0100               	movlb	0	; () banked
 23744  002B40  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23745  002B42  0E0C               	movlw	high _RxBuffer
 23746  002B44  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23747  002B46  0E50               	movlw	low (_Mdm_SmsRx+80)
 23748  002B48  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23749  002B4A  0E07               	movlw	high (_Mdm_SmsRx+80)
 23750  002B4C  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23751  002B4E  C0CA  F081         	movff	_RxLen,StringCopy@Len
 23752  002B52  C0CB  F082         	movff	_RxLen+1,StringCopy@Len+1
 23753  002B56  ECFA  F027         	call	_StringCopy	;wreg free
 23754                           
 23755                           ;mdm_gsm_gprs.c: 616: Mdm_SmsRx.TextLen = RxLen;
 23756  002B5A  C0CA  F783         	movff	_RxLen,_Mdm_SmsRx+131
 23757                           
 23758                           ;mdm_gsm_gprs.c: 618: GetSmsState = GetSms_CheckReq;
 23759  002B5E  0E00               	movlw	0
 23760  002B60  0101               	movlb	1	; () banked
 23761  002B62  6FED               	movwf	GetSmsSm@GetSmsState& (0+255),b
 23762                           
 23763                           ; BSR set to: 1
 23764                           ;mdm_gsm_gprs.c: 620: GenerateEvt(&SmsTxtReady);
 23765  002B64  0E38               	movlw	low _SmsTxtReady
 23766  002B66  0100               	movlb	0	; () banked
 23767  002B68  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23768  002B6A  0E00               	movlw	high _SmsTxtReady
 23769  002B6C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23770  002B6E  EC06  F030         	call	_GenerateEvt	;wreg free
 23771                           
 23772                           ;mdm_gsm_gprs.c: 626: }
 23773                           
 23774                           ;mdm_gsm_gprs.c: 625: break;
 23775                           
 23776                           ;mdm_gsm_gprs.c: 624: default:
 23777                           
 23778                           ;mdm_gsm_gprs.c: 621: }
 23779                           ;mdm_gsm_gprs.c: 622: break;
 23780  002B72  0012               	return	
 23781  002B74                     l1062:
 23782  002B74  0101               	movlb	1	; () banked
 23783  002B76  51ED               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 23784                           
 23785                           ; Switch size 1, requested type "space"
 23786                           ; Number of cases is 4, Range of values is 0 to 3
 23787                           ; switch strategies available:
 23788                           ; Name         Instructions Cycles
 23789                           ; simple_byte           13     7 (average)
 23790                           ;	Chosen strategy is simple_byte
 23791  002B78  0A00               	xorlw	0	; case 0
 23792  002B7A  B4D8               	btfsc	status,2,c
 23793  002B7C  D777               	goto	l1063
 23794  002B7E  0A01               	xorlw	1	; case 1
 23795  002B80  B4D8               	btfsc	status,2,c
 23796  002B82  D782               	goto	l1066
 23797  002B84  0A03               	xorlw	3	; case 2
 23798  002B86  B4D8               	btfsc	status,2,c
 23799  002B88  D78B               	goto	l1067
 23800  002B8A  0A01               	xorlw	1	; case 3
 23801  002B8C  A4D8               	btfss	status,2,c
 23802                           
 23803                           ; BSR set to: 1
 23804  002B8E  0012               	return	
 23805  002B90  D7C0               	goto	l1070
 23806  002B92                     __end_of_GetSmsSm:
 23807                           	opt stack 0
 23808                           tosu	equ	0xFFF
 23809                           tosh	equ	0xFFE
 23810                           tosl	equ	0xFFD
 23811                           pclath	equ	0xFFA
 23812                           tblptru	equ	0xFF8
 23813                           tblptrh	equ	0xFF7
 23814                           tblptrl	equ	0xFF6
 23815                           tablat	equ	0xFF5
 23816                           prodh	equ	0xFF4
 23817                           prodl	equ	0xFF3
 23818                           intcon	equ	0xFF2
 23819                           intcon2	equ	0xFF1
 23820                           intcon3	equ	0xFF0
 23821                           indf0	equ	0xFEF
 23822                           postinc0	equ	0xFEE
 23823                           plusw0	equ	0xFEB
 23824                           fsr0h	equ	0xFEA
 23825                           fsr0l	equ	0xFE9
 23826                           wreg	equ	0xFE8
 23827                           indf1	equ	0xFE7
 23828                           postinc1	equ	0xFE6
 23829                           postdec1	equ	0xFE5
 23830                           plusw1	equ	0xFE3
 23831                           fsr1h	equ	0xFE2
 23832                           fsr1l	equ	0xFE1
 23833                           indf2	equ	0xFDF
 23834                           postinc2	equ	0xFDE
 23835                           postdec2	equ	0xFDD
 23836                           plusw2	equ	0xFDB
 23837                           fsr2h	equ	0xFDA
 23838                           fsr2l	equ	0xFD9
 23839                           status	equ	0xFD8
 23840                           
 23841 ;; *************** function _ConfigureModem *****************
 23842 ;; Defined at:
 23843 ;;		line 414 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23844 ;; Parameters:    Size  Location     Type
 23845 ;;		None
 23846 ;; Auto vars:     Size  Location     Type
 23847 ;;		None
 23848 ;; Return value:  Size  Location     Type
 23849 ;;                  1    wreg      void 
 23850 ;; Registers used:
 23851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23852 ;; Tracked objects:
 23853 ;;		On entry : 0/0
 23854 ;;		On exit  : 0/0
 23855 ;;		Unchanged: 0/0
 23856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23861 ;;Total ram usage:        0 bytes
 23862 ;; Hardware stack levels used:    1
 23863 ;; Hardware stack levels required when called:   14
 23864 ;; This function calls:
 23865 ;;		_GenerateEvt
 23866 ;;		_UartSetConfigLow
 23867 ;;		_Uart_InitUartModule
 23868 ;;		_Uart_WriteConstString
 23869 ;; This function is called by:
 23870 ;;		_Mdm_MainTask
 23871 ;; This function uses a non-reentrant model
 23872 ;;
 23873                           
 23874                           	psect	text111
 23875  003754                     __ptext111:
 23876                           	opt stack 0
 23877  003754                     _ConfigureModem:
 23878                           	opt stack 13
 23879                           
 23880                           ;mdm_gsm_gprs.c: 416: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 23881                           ;mdm_gsm_gprs.c: 417: static MdmConfigStateType NextState = MdmCfg_Init;
 23882                           ;mdm_gsm_gprs.c: 418: static UINT16 DelayValueMs = 0;
 23883                           ;mdm_gsm_gprs.c: 419: static UINT16 DelayCounter = 0;
 23884                           ;mdm_gsm_gprs.c: 421: switch (MdmConfigState)
 23885                           
 23886                           ;incstack = 0
 23887  003754  D056               	goto	l1023
 23888  003756                     
 23889                           ;mdm_gsm_gprs.c: 425: if (MdmStatus == ModemReady)
 23890  003756  0E02               	movlw	2
 23891  003758  0100               	movlb	0	; () banked
 23892  00375A  19D6               	xorwf	_MdmStatus& (0+255),w,b
 23893  00375C  A4D8               	btfss	status,2,c
 23894  00375E  0012               	return	
 23895                           
 23896                           ; BSR set to: 0
 23897                           ;mdm_gsm_gprs.c: 426: {
 23898                           ;mdm_gsm_gprs.c: 428: MdmConfigState = MdmCfg_ChangeBaud;
 23899  003760  0E01               	movlw	1
 23900  003762  0101               	movlb	1	; () banked
 23901  003764  6FEF               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 23902                           
 23903                           ; BSR set to: 1
 23904                           ;mdm_gsm_gprs.c: 429: }
 23905                           ;mdm_gsm_gprs.c: 430: break;
 23906  003766  0012               	return	
 23907  003768                     
 23908                           ; BSR set to: 1
 23909                           ;mdm_gsm_gprs.c: 434: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 23910                           
 23911                           ; BSR set to: 1
 23912  003768  0E80               	movlw	low STR_2
 23913  00376A  0100               	movlb	0	; () banked
 23914  00376C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23915  00376E  0EFF               	movlw	high STR_2
 23916  003770  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23917  003772  0E01               	movlw	1
 23918  003774  EC1A  F02C         	call	_Uart_WriteConstString
 23919                           
 23920                           ;mdm_gsm_gprs.c: 436: UartSetConfigLow();
 23921  003778  EC0F  F029         	call	_UartSetConfigLow	;wreg free
 23922                           
 23923                           ;mdm_gsm_gprs.c: 438: Uart_InitUartModule(1,&UartConfig);
 23924  00377C  0E32               	movlw	low _UartConfig
 23925  00377E  0100               	movlb	0	; () banked
 23926  003780  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 23927  003782  0E03               	movlw	high _UartConfig
 23928  003784  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 23929  003786  0E01               	movlw	1
 23930  003788  EC5E  F005         	call	_Uart_InitUartModule
 23931                           
 23932                           ;mdm_gsm_gprs.c: 440: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 23933  00378C  0E03               	movlw	3
 23934  00378E  0103               	movlb	3	; () banked
 23935  003790  6F2B               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 23936  003792  0EE8               	movlw	232
 23937  003794  6F2A               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 23938                           
 23939                           ; BSR set to: 3
 23940                           ;mdm_gsm_gprs.c: 442: NextState = MdmCfg_SetMdmEchoMode;
 23941  003796  0E02               	movlw	2
 23942  003798  0101               	movlb	1	; () banked
 23943  00379A  6FEE               	movwf	ConfigureModem@NextState& (0+255),b
 23944                           
 23945                           ; BSR set to: 1
 23946                           ;mdm_gsm_gprs.c: 443: MdmConfigState = MdmCfg_Delay;
 23947  00379C  0E04               	movlw	4
 23948  00379E  6FEF               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 23949                           
 23950                           ;mdm_gsm_gprs.c: 444: break;
 23951  0037A0  0012               	return	
 23952  0037A2                     
 23953                           ; BSR set to: 1
 23954                           ;mdm_gsm_gprs.c: 448: Uart_WriteConstString(1,"ATE0\r\n");
 23955                           
 23956                           ; BSR set to: 1
 23957  0037A2  0EDE               	movlw	low STR_3
 23958  0037A4  0100               	movlb	0	; () banked
 23959  0037A6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23960  0037A8  0EFF               	movlw	high STR_3
 23961  0037AA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23962  0037AC  0E01               	movlw	1
 23963  0037AE  EC1A  F02C         	call	_Uart_WriteConstString
 23964                           
 23965                           ;mdm_gsm_gprs.c: 450: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 23966  0037B2  0E03               	movlw	3
 23967  0037B4  0103               	movlb	3	; () banked
 23968  0037B6  6F2B               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 23969  0037B8  0EE8               	movlw	232
 23970  0037BA  6F2A               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 23971                           
 23972                           ; BSR set to: 3
 23973                           ;mdm_gsm_gprs.c: 452: NextState = MdmCfg_UpdateMdmSts;
 23974  0037BC  0E05               	movlw	5
 23975  0037BE  0101               	movlb	1	; () banked
 23976  0037C0  6FEE               	movwf	ConfigureModem@NextState& (0+255),b
 23977                           
 23978                           ; BSR set to: 1
 23979                           ;mdm_gsm_gprs.c: 453: MdmConfigState = MdmCfg_Delay;
 23980  0037C2  0E04               	movlw	4
 23981  0037C4  6FEF               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 23982                           
 23983                           ;mdm_gsm_gprs.c: 454: break;
 23984  0037C6  0012               	return	
 23985  0037C8                     
 23986                           ; BSR set to: 1
 23987                           ;mdm_gsm_gprs.c: 458: DelayCounter++;
 23988                           
 23989                           ; BSR set to: 1
 23990  0037C8  0103               	movlb	3	; () banked
 23991  0037CA  4B28               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 23992  0037CC  2B29               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 23993                           
 23994                           ; BSR set to: 3
 23995                           ;mdm_gsm_gprs.c: 460: if (DelayCounter >= DelayValueMs)
 23996  0037CE  512A               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 23997  0037D0  5D28               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 23998  0037D2  512B               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 23999  0037D4  5929               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 24000  0037D6  A0D8               	btfss	status,0,c
 24001  0037D8  0012               	return	
 24002                           
 24003                           ; BSR set to: 3
 24004                           ;mdm_gsm_gprs.c: 461: {
 24005                           ;mdm_gsm_gprs.c: 463: DelayCounter = 0;
 24006  0037DA  0E00               	movlw	0
 24007  0037DC  6F29               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 24008  0037DE  0E00               	movlw	0
 24009  0037E0  6F28               	movwf	ConfigureModem@DelayCounter& (0+255),b
 24010                           
 24011                           ; BSR set to: 3
 24012                           ;mdm_gsm_gprs.c: 465: MdmConfigState = NextState;
 24013  0037E2  C1EE  F1EF         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 24014                           
 24015                           ; BSR set to: 3
 24016                           ;mdm_gsm_gprs.c: 466: }
 24017                           ;mdm_gsm_gprs.c: 467: break;
 24018  0037E6  0012               	return	
 24019  0037E8                     
 24020                           ;mdm_gsm_gprs.c: 471: MdmStatus = ModemConfigured;
 24021                           
 24022                           ; BSR set to: 3
 24023  0037E8  0E03               	movlw	3
 24024  0037EA  0100               	movlb	0	; () banked
 24025  0037EC  6FD6               	movwf	_MdmStatus& (0+255),b
 24026                           
 24027                           ; BSR set to: 0
 24028                           ;mdm_gsm_gprs.c: 473: GenerateEvt(&MdmStsReady);
 24029  0037EE  0EFE               	movlw	low _MdmStsReady
 24030  0037F0  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24031  0037F2  0E01               	movlw	high _MdmStsReady
 24032  0037F4  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24033  0037F6  EC06  F030         	call	_GenerateEvt	;wreg free
 24034                           
 24035                           ;mdm_gsm_gprs.c: 475: MdmConfigState = MdmCfg_Stop;
 24036  0037FA  0E06               	movlw	6
 24037  0037FC  0101               	movlb	1	; () banked
 24038  0037FE  6FEF               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 24039                           
 24040                           ; BSR set to: 1
 24041                           ;mdm_gsm_gprs.c: 483: }
 24042                           
 24043                           ; BSR set to: 1
 24044                           ;mdm_gsm_gprs.c: 482: break;
 24045                           
 24046                           ;mdm_gsm_gprs.c: 481: default:
 24047                           
 24048                           ; BSR set to: 1
 24049                           ;mdm_gsm_gprs.c: 479: break;
 24050                           
 24051                           ;mdm_gsm_gprs.c: 478: case MdmCfg_Stop:
 24052                           
 24053                           ;mdm_gsm_gprs.c: 476: break;
 24054  003800  0012               	return	
 24055  003802                     l1023:
 24056                           
 24057                           ; BSR set to: 1
 24058  003802  0101               	movlb	1	; () banked
 24059  003804  51EF               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 24060                           
 24061                           ; Switch size 1, requested type "space"
 24062                           ; Number of cases is 6, Range of values is 0 to 6
 24063                           ; switch strategies available:
 24064                           ; Name         Instructions Cycles
 24065                           ; simple_byte           19    10 (average)
 24066                           ;	Chosen strategy is simple_byte
 24067  003806  0A00               	xorlw	0	; case 0
 24068  003808  B4D8               	btfsc	status,2,c
 24069  00380A  D7A5               	goto	l1024
 24070  00380C  0A01               	xorlw	1	; case 1
 24071  00380E  B4D8               	btfsc	status,2,c
 24072  003810  D7AB               	goto	l1027
 24073  003812  0A03               	xorlw	3	; case 2
 24074  003814  B4D8               	btfsc	status,2,c
 24075  003816  D7C5               	goto	l1028
 24076  003818  0A06               	xorlw	6	; case 4
 24077  00381A  B4D8               	btfsc	status,2,c
 24078  00381C  D7D5               	goto	l1029
 24079  00381E  0A01               	xorlw	1	; case 5
 24080  003820  B4D8               	btfsc	status,2,c
 24081  003822  D7E2               	goto	l1031
 24082  003824  0A03               	xorlw	3	; case 6
 24083  003826  0012               	return	
 24084  003828                     __end_of_ConfigureModem:
 24085                           	opt stack 0
 24086                           tosu	equ	0xFFF
 24087                           tosh	equ	0xFFE
 24088                           tosl	equ	0xFFD
 24089                           pclath	equ	0xFFA
 24090                           tblptru	equ	0xFF8
 24091                           tblptrh	equ	0xFF7
 24092                           tblptrl	equ	0xFF6
 24093                           tablat	equ	0xFF5
 24094                           prodh	equ	0xFF4
 24095                           prodl	equ	0xFF3
 24096                           intcon	equ	0xFF2
 24097                           intcon2	equ	0xFF1
 24098                           intcon3	equ	0xFF0
 24099                           indf0	equ	0xFEF
 24100                           postinc0	equ	0xFEE
 24101                           plusw0	equ	0xFEB
 24102                           fsr0h	equ	0xFEA
 24103                           fsr0l	equ	0xFE9
 24104                           wreg	equ	0xFE8
 24105                           indf1	equ	0xFE7
 24106                           postinc1	equ	0xFE6
 24107                           postdec1	equ	0xFE5
 24108                           plusw1	equ	0xFE3
 24109                           fsr1h	equ	0xFE2
 24110                           fsr1l	equ	0xFE1
 24111                           indf2	equ	0xFDF
 24112                           postinc2	equ	0xFDE
 24113                           postdec2	equ	0xFDD
 24114                           plusw2	equ	0xFDB
 24115                           fsr2h	equ	0xFDA
 24116                           fsr2l	equ	0xFD9
 24117                           status	equ	0xFD8
 24118                           
 24119 ;; *************** function _Uart_InitUartModule *****************
 24120 ;; Defined at:
 24121 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24122 ;; Parameters:    Size  Location     Type
 24123 ;;  Module          1    wreg     unsigned char 
 24124 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 24125 ;;		 -> UartConfig(21), 
 24126 ;; Auto vars:     Size  Location     Type
 24127 ;;  Module          1   65[BANK0 ] unsigned char 
 24128 ;; Return value:  Size  Location     Type
 24129 ;;                  1    wreg      void 
 24130 ;; Registers used:
 24131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24132 ;; Tracked objects:
 24133 ;;		On entry : 0/0
 24134 ;;		On exit  : 0/0
 24135 ;;		Unchanged: 0/0
 24136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24137 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24139 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24140 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24141 ;;Total ram usage:        5 bytes
 24142 ;; Hardware stack levels used:    1
 24143 ;; Hardware stack levels required when called:   13
 24144 ;; This function calls:
 24145 ;;		_SetUartBaudRate
 24146 ;; This function is called by:
 24147 ;;		_ConfigureModem
 24148 ;;		_Mdm_MainTask
 24149 ;; This function uses a non-reentrant model
 24150 ;;
 24151                           
 24152                           	psect	text112
 24153  000ABC                     __ptext112:
 24154                           	opt stack 0
 24155  000ABC                     _Uart_InitUartModule:
 24156                           	opt stack 14
 24157                           
 24158                           ;incstack = 0
 24159                           ;Uart_InitUartModule@Module stored from wreg
 24160  000ABC  0100               	movlb	0	; () banked
 24161  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 24162                           
 24163                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 24164  000AC0  0100               	movlb	0	; () banked
 24165  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 24166  000AC4  A4D8               	btfss	status,2,c
 24167  000AC6  D0BE               	goto	l668
 24168                           
 24169                           ; BSR set to: 0
 24170                           ;uart_drv.c: 291: {
 24171                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 24172  000AC8  9C94               	bcf	3988,6,c	;volatile
 24173                           
 24174                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 24175  000ACA  8E94               	bsf	3988,7,c	;volatile
 24176                           
 24177                           ; BSR set to: 0
 24178                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 24179  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24180  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24181  000AD4  0E01               	movlw	1
 24182  000AD6  EC94  F014         	call	_SetUartBaudRate
 24183                           
 24184                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 24185  000ADA  0E00               	movlw	0
 24186  000ADC  6EAD               	movwf	4013,c	;volatile
 24187                           
 24188                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24189  000ADE  0100               	movlb	0	; () banked
 24190  000AE0  EE20 F004          	lfsr	2,4
 24191  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24192  000AE6  26D9               	addwf	fsr2l,f,c
 24193  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24194  000AEA  22DA               	addwfc	fsr2h,f,c
 24195  000AEC  50DF               	movf	indf2,w,c
 24196  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24197  000AF0  0E06               	movlw	6
 24198  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24199  000AF4                     u11425:
 24200  000AF4  90D8               	bcf	status,0,c
 24201  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24202  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24203  000AFA  D7FC               	goto	u11425
 24204  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24205  000AFE  12AD               	iorwf	4013,f,c	;volatile
 24206                           
 24207                           ; BSR set to: 0
 24208                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24209  000B00  EE20 F006          	lfsr	2,6
 24210  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24211  000B06  26D9               	addwf	fsr2l,f,c
 24212  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24213  000B0A  22DA               	addwfc	fsr2h,f,c
 24214  000B0C  50DF               	movf	indf2,w,c
 24215  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24216  000B10  0E05               	movlw	5
 24217  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24218  000B14                     u11435:
 24219  000B14  90D8               	bcf	status,0,c
 24220  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24221  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24222  000B1A  D7FC               	goto	u11435
 24223  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24224  000B1E  12AD               	iorwf	4013,f,c	;volatile
 24225                           
 24226                           ; BSR set to: 0
 24227                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 24228  000B20  EE20 F001          	lfsr	2,1
 24229  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24230  000B26  26D9               	addwf	fsr2l,f,c
 24231  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24232  000B2A  22DA               	addwfc	fsr2h,f,c
 24233  000B2C  50DF               	movf	indf2,w,c
 24234  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24235  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24236  000B32  0BF0               	andlw	240
 24237  000B34  12AD               	iorwf	4013,f,c	;volatile
 24238                           
 24239                           ; BSR set to: 0
 24240                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 24241  000B36  EE20 F008          	lfsr	2,8
 24242  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24243  000B3C  26D9               	addwf	fsr2l,f,c
 24244  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24245  000B40  22DA               	addwfc	fsr2h,f,c
 24246  000B42  50DF               	movf	indf2,w,c
 24247  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24248  000B46  90D8               	bcf	status,0,c
 24249  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24250  000B4A  90D8               	bcf	status,0,c
 24251  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24252  000B4E  90D8               	bcf	status,0,c
 24253  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24254  000B52  12AD               	iorwf	4013,f,c	;volatile
 24255                           
 24256                           ; BSR set to: 0
 24257                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 24258  000B54  EE20 F003          	lfsr	2,3
 24259  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24260  000B5A  26D9               	addwf	fsr2l,f,c
 24261  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24262  000B5E  22DA               	addwfc	fsr2h,f,c
 24263  000B60  50DF               	movf	indf2,w,c
 24264  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24265  000B64  90D8               	bcf	status,0,c
 24266  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24267  000B68  90D8               	bcf	status,0,c
 24268  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24269  000B6C  12AD               	iorwf	4013,f,c	;volatile
 24270                           
 24271                           ; BSR set to: 0
 24272                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 24273  000B6E  0E00               	movlw	0
 24274  000B70  6EAC               	movwf	4012,c	;volatile
 24275                           
 24276                           ; BSR set to: 0
 24277                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 24278  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 24279  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 24280  000B7A  50DF               	movf	indf2,w,c
 24281  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24282  000B7E  0E00               	movlw	0
 24283  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 24284  000B82  0E80               	movlw	128
 24285  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24286  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24287  000B88  12AC               	iorwf	4012,f,c	;volatile
 24288                           
 24289                           ; BSR set to: 0
 24290                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 24291  000B8A  EE20 F005          	lfsr	2,5
 24292  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24293  000B90  26D9               	addwf	fsr2l,f,c
 24294  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24295  000B94  22DA               	addwfc	fsr2h,f,c
 24296  000B96  50DF               	movf	indf2,w,c
 24297  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24298  000B9A  0E06               	movlw	6
 24299  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24300  000B9E                     u11445:
 24301  000B9E  90D8               	bcf	status,0,c
 24302  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24303  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24304  000BA4  D7FC               	goto	u11445
 24305  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24306  000BA8  12AC               	iorwf	4012,f,c	;volatile
 24307                           
 24308                           ; BSR set to: 0
 24309                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 24310  000BAA  EE20 F007          	lfsr	2,7
 24311  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24312  000BB0  26D9               	addwf	fsr2l,f,c
 24313  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24314  000BB4  22DA               	addwfc	fsr2h,f,c
 24315  000BB6  50DF               	movf	indf2,w,c
 24316  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24317  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24318  000BBC  0BF0               	andlw	240
 24319  000BBE  12AC               	iorwf	4012,f,c	;volatile
 24320                           
 24321                           ; BSR set to: 0
 24322                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 24323  000BC0  0E00               	movlw	0
 24324  000BC2  6E7E               	movwf	3966,c	;volatile
 24325                           
 24326                           ; BSR set to: 0
 24327                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 24328  000BC4  EE20 F002          	lfsr	2,2
 24329  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24330  000BCA  26D9               	addwf	fsr2l,f,c
 24331  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24332  000BCE  22DA               	addwfc	fsr2h,f,c
 24333  000BD0  50DF               	movf	indf2,w,c
 24334  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24335  000BD4  90D8               	bcf	status,0,c
 24336  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24337  000BD8  90D8               	bcf	status,0,c
 24338  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24339  000BDC  90D8               	bcf	status,0,c
 24340  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24341  000BE0  127E               	iorwf	3966,f,c	;volatile
 24342                           
 24343                           ; BSR set to: 0
 24344                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 24345  000BE2  EE20 F00A          	lfsr	2,10
 24346  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24347  000BE8  26D9               	addwf	fsr2l,f,c
 24348  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24349  000BEC  22DA               	addwfc	fsr2h,f,c
 24350  000BEE  50DF               	movf	indf2,w,c
 24351  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24352  000BF2  90D8               	bcf	status,0,c
 24353  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24354  000BF6  127E               	iorwf	3966,f,c	;volatile
 24355                           
 24356                           ; BSR set to: 0
 24357                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 24358  000BF8  EE20 F009          	lfsr	2,9
 24359  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24360  000BFE  26D9               	addwf	fsr2l,f,c
 24361  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24362  000C02  22DA               	addwfc	fsr2h,f,c
 24363  000C04  50DF               	movf	indf2,w,c
 24364  000C06  127E               	iorwf	3966,f,c	;volatile
 24365                           
 24366                           ; BSR set to: 0
 24367                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 24368  000C08  EE20 F00B          	lfsr	2,11
 24369  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24370  000C0E  26D9               	addwf	fsr2l,f,c
 24371  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24372  000C12  22DA               	addwfc	fsr2h,f,c
 24373  000C14  50DF               	movf	indf2,w,c
 24374  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24375  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24376  000C1A  509D               	movf	3997,w,c	;volatile
 24377  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24378  000C1E  0BEF               	andlw	-17
 24379  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24380  000C22  6E9D               	movwf	3997,c	;volatile
 24381                           
 24382                           ; BSR set to: 0
 24383                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 24384  000C24  EE20 F00C          	lfsr	2,12
 24385  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24386  000C2A  26D9               	addwf	fsr2l,f,c
 24387  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24388  000C2E  22DA               	addwfc	fsr2h,f,c
 24389  000C30  50DF               	movf	indf2,w,c
 24390  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24391  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24392  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 24393  000C38  509D               	movf	3997,w,c	;volatile
 24394  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24395  000C3C  0BDF               	andlw	-33
 24396  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24397  000C40  6E9D               	movwf	3997,c	;volatile
 24398                           
 24399                           ;uart_drv.c: 326: }
 24400  000C42  0012               	return	
 24401  000C44                     l668:
 24402                           
 24403                           ; BSR set to: 0
 24404                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 24405                           
 24406                           ; BSR set to: 0
 24407  000C44  0E02               	movlw	2
 24408  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 24409  000C48  A4D8               	btfss	status,2,c
 24410  000C4A  0012               	return	
 24411                           
 24412                           ; BSR set to: 0
 24413                           ;uart_drv.c: 328: {
 24414                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 24415  000C4C  9094               	bcf	3988,0,c	;volatile
 24416                           
 24417                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 24418  000C4E  8294               	bsf	3988,1,c	;volatile
 24419                           
 24420                           ; BSR set to: 0
 24421                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 24422  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24423  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24424  000C58  0E02               	movlw	2
 24425  000C5A  EC94  F014         	call	_SetUartBaudRate
 24426                           
 24427                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 24428  000C5E  0E00               	movlw	0
 24429  000C60  6EA8               	movwf	4008,c	;volatile
 24430                           
 24431                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24432  000C62  0100               	movlb	0	; () banked
 24433  000C64  EE20 F004          	lfsr	2,4
 24434  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24435  000C6A  26D9               	addwf	fsr2l,f,c
 24436  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24437  000C6E  22DA               	addwfc	fsr2h,f,c
 24438  000C70  50DF               	movf	indf2,w,c
 24439  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24440  000C74  0E06               	movlw	6
 24441  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24442  000C78                     u11465:
 24443  000C78  90D8               	bcf	status,0,c
 24444  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24445  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24446  000C7E  D7FC               	goto	u11465
 24447  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24448  000C82  12A8               	iorwf	4008,f,c	;volatile
 24449                           
 24450                           ; BSR set to: 0
 24451                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24452  000C84  EE20 F006          	lfsr	2,6
 24453  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24454  000C8A  26D9               	addwf	fsr2l,f,c
 24455  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24456  000C8E  22DA               	addwfc	fsr2h,f,c
 24457  000C90  50DF               	movf	indf2,w,c
 24458  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24459  000C94  0E05               	movlw	5
 24460  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24461  000C98                     u11475:
 24462  000C98  90D8               	bcf	status,0,c
 24463  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24464  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24465  000C9E  D7FC               	goto	u11475
 24466  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24467  000CA2  12A8               	iorwf	4008,f,c	;volatile
 24468                           
 24469                           ; BSR set to: 0
 24470                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 24471  000CA4  EE20 F001          	lfsr	2,1
 24472  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24473  000CAA  26D9               	addwf	fsr2l,f,c
 24474  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24475  000CAE  22DA               	addwfc	fsr2h,f,c
 24476  000CB0  50DF               	movf	indf2,w,c
 24477  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24478  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24479  000CB6  0BF0               	andlw	240
 24480  000CB8  12A8               	iorwf	4008,f,c	;volatile
 24481                           
 24482                           ; BSR set to: 0
 24483                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 24484  000CBA  EE20 F008          	lfsr	2,8
 24485  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24486  000CC0  26D9               	addwf	fsr2l,f,c
 24487  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24488  000CC4  22DA               	addwfc	fsr2h,f,c
 24489  000CC6  50DF               	movf	indf2,w,c
 24490  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24491  000CCA  90D8               	bcf	status,0,c
 24492  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24493  000CCE  90D8               	bcf	status,0,c
 24494  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24495  000CD2  90D8               	bcf	status,0,c
 24496  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24497  000CD6  12A8               	iorwf	4008,f,c	;volatile
 24498                           
 24499                           ; BSR set to: 0
 24500                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 24501  000CD8  EE20 F003          	lfsr	2,3
 24502  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24503  000CDE  26D9               	addwf	fsr2l,f,c
 24504  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24505  000CE2  22DA               	addwfc	fsr2h,f,c
 24506  000CE4  50DF               	movf	indf2,w,c
 24507  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24508  000CE8  90D8               	bcf	status,0,c
 24509  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24510  000CEC  90D8               	bcf	status,0,c
 24511  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24512  000CF0  12A8               	iorwf	4008,f,c	;volatile
 24513                           
 24514                           ; BSR set to: 0
 24515                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 24516  000CF2  0E00               	movlw	0
 24517  000CF4  6E9C               	movwf	3996,c	;volatile
 24518                           
 24519                           ; BSR set to: 0
 24520                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 24521  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 24522  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 24523  000CFE  50DF               	movf	indf2,w,c
 24524  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24525  000D02  0E00               	movlw	0
 24526  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 24527  000D06  0E80               	movlw	128
 24528  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24529  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24530  000D0C  129C               	iorwf	3996,f,c	;volatile
 24531                           
 24532                           ; BSR set to: 0
 24533                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 24534  000D0E  EE20 F005          	lfsr	2,5
 24535  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24536  000D14  26D9               	addwf	fsr2l,f,c
 24537  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24538  000D18  22DA               	addwfc	fsr2h,f,c
 24539  000D1A  50DF               	movf	indf2,w,c
 24540  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24541  000D1E  0E06               	movlw	6
 24542  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24543  000D22                     u11485:
 24544  000D22  90D8               	bcf	status,0,c
 24545  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24546  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24547  000D28  D7FC               	goto	u11485
 24548  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24549  000D2C  129C               	iorwf	3996,f,c	;volatile
 24550                           
 24551                           ; BSR set to: 0
 24552                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 24553  000D2E  EE20 F007          	lfsr	2,7
 24554  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24555  000D34  26D9               	addwf	fsr2l,f,c
 24556  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24557  000D38  22DA               	addwfc	fsr2h,f,c
 24558  000D3A  50DF               	movf	indf2,w,c
 24559  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24560  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24561  000D40  0BF0               	andlw	240
 24562  000D42  129C               	iorwf	3996,f,c	;volatile
 24563                           
 24564                           ; BSR set to: 0
 24565                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 24566  000D44  0E00               	movlw	0
 24567  000D46  6E7C               	movwf	3964,c	;volatile
 24568                           
 24569                           ; BSR set to: 0
 24570                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 24571  000D48  EE20 F002          	lfsr	2,2
 24572  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24573  000D4E  26D9               	addwf	fsr2l,f,c
 24574  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24575  000D52  22DA               	addwfc	fsr2h,f,c
 24576  000D54  50DF               	movf	indf2,w,c
 24577  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24578  000D58  90D8               	bcf	status,0,c
 24579  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24580  000D5C  90D8               	bcf	status,0,c
 24581  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24582  000D60  90D8               	bcf	status,0,c
 24583  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24584  000D64  127C               	iorwf	3964,f,c	;volatile
 24585                           
 24586                           ; BSR set to: 0
 24587                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 24588  000D66  EE20 F00A          	lfsr	2,10
 24589  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24590  000D6C  26D9               	addwf	fsr2l,f,c
 24591  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24592  000D70  22DA               	addwfc	fsr2h,f,c
 24593  000D72  50DF               	movf	indf2,w,c
 24594  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24595  000D76  90D8               	bcf	status,0,c
 24596  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24597  000D7A  127C               	iorwf	3964,f,c	;volatile
 24598                           
 24599                           ; BSR set to: 0
 24600                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 24601  000D7C  EE20 F009          	lfsr	2,9
 24602  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24603  000D82  26D9               	addwf	fsr2l,f,c
 24604  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24605  000D86  22DA               	addwfc	fsr2h,f,c
 24606  000D88  50DF               	movf	indf2,w,c
 24607  000D8A  127C               	iorwf	3964,f,c	;volatile
 24608                           
 24609                           ; BSR set to: 0
 24610                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 24611  000D8C  EE20 F00B          	lfsr	2,11
 24612  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24613  000D92  26D9               	addwf	fsr2l,f,c
 24614  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24615  000D96  22DA               	addwfc	fsr2h,f,c
 24616  000D98  50DF               	movf	indf2,w,c
 24617  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24618  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24619  000D9E  50A3               	movf	4003,w,c	;volatile
 24620  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24621  000DA2  0BEF               	andlw	-17
 24622  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24623  000DA6  6EA3               	movwf	4003,c	;volatile
 24624                           
 24625                           ; BSR set to: 0
 24626                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 24627  000DA8  EE20 F00C          	lfsr	2,12
 24628  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24629  000DAE  26D9               	addwf	fsr2l,f,c
 24630  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24631  000DB2  22DA               	addwfc	fsr2h,f,c
 24632  000DB4  50DF               	movf	indf2,w,c
 24633  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24634  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24635  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 24636  000DBC  50A3               	movf	4003,w,c	;volatile
 24637  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24638  000DC0  0BDF               	andlw	-33
 24639  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24640  000DC4  6EA3               	movwf	4003,c	;volatile
 24641                           
 24642                           ; BSR set to: 0
 24643  000DC6  0012               	return	
 24644  000DC8                     __end_of_Uart_InitUartModule:
 24645                           	opt stack 0
 24646                           tosu	equ	0xFFF
 24647                           tosh	equ	0xFFE
 24648                           tosl	equ	0xFFD
 24649                           pclath	equ	0xFFA
 24650                           tblptru	equ	0xFF8
 24651                           tblptrh	equ	0xFF7
 24652                           tblptrl	equ	0xFF6
 24653                           tablat	equ	0xFF5
 24654                           prodh	equ	0xFF4
 24655                           prodl	equ	0xFF3
 24656                           intcon	equ	0xFF2
 24657                           intcon2	equ	0xFF1
 24658                           intcon3	equ	0xFF0
 24659                           indf0	equ	0xFEF
 24660                           postinc0	equ	0xFEE
 24661                           plusw0	equ	0xFEB
 24662                           fsr0h	equ	0xFEA
 24663                           fsr0l	equ	0xFE9
 24664                           wreg	equ	0xFE8
 24665                           indf1	equ	0xFE7
 24666                           postinc1	equ	0xFE6
 24667                           postdec1	equ	0xFE5
 24668                           plusw1	equ	0xFE3
 24669                           fsr1h	equ	0xFE2
 24670                           fsr1l	equ	0xFE1
 24671                           indf2	equ	0xFDF
 24672                           postinc2	equ	0xFDE
 24673                           postdec2	equ	0xFDD
 24674                           plusw2	equ	0xFDB
 24675                           fsr2h	equ	0xFDA
 24676                           fsr2l	equ	0xFD9
 24677                           status	equ	0xFD8
 24678                           
 24679 ;; *************** function _SetUartBaudRate *****************
 24680 ;; Defined at:
 24681 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24682 ;; Parameters:    Size  Location     Type
 24683 ;;  Module          1    wreg     unsigned char 
 24684 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 24685 ;;		 -> UartConfig(21), 
 24686 ;; Auto vars:     Size  Location     Type
 24687 ;;  Module          1   57[BANK0 ] unsigned char 
 24688 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 24689 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 24690 ;; Return value:  Size  Location     Type
 24691 ;;                  1    wreg      void 
 24692 ;; Registers used:
 24693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24694 ;; Tracked objects:
 24695 ;;		On entry : 0/0
 24696 ;;		On exit  : 0/0
 24697 ;;		Unchanged: 0/0
 24698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24700 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24701 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24702 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24703 ;;Total ram usage:        7 bytes
 24704 ;; Hardware stack levels used:    1
 24705 ;; Hardware stack levels required when called:   12
 24706 ;; This function calls:
 24707 ;;		___lldiv
 24708 ;;		___lmul
 24709 ;; This function is called by:
 24710 ;;		_Uart_InitUartModule
 24711 ;; This function uses a non-reentrant model
 24712 ;;
 24713                           
 24714                           	psect	text113
 24715  002928                     __ptext113:
 24716                           	opt stack 0
 24717  002928                     _SetUartBaudRate:
 24718                           	opt stack 14
 24719                           
 24720                           ; BSR set to: 0
 24721                           ;incstack = 0
 24722                           ;SetUartBaudRate@Module stored from wreg
 24723  002928  0100               	movlb	0	; () banked
 24724  00292A  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 24725                           
 24726                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 24727  00292C  0E00               	movlw	0
 24728  00292E  0100               	movlb	0	; () banked
 24729  002930  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 24730  002932  0E00               	movlw	0
 24731  002934  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 24732                           
 24733                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 24734  002936  0E00               	movlw	0
 24735  002938  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 24736                           
 24737                           ; BSR set to: 0
 24738                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 24739  00293A  EE20 F002          	lfsr	2,2
 24740  00293E  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24741  002940  26D9               	addwf	fsr2l,f,c
 24742  002942  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24743  002944  22DA               	addwfc	fsr2h,f,c
 24744  002946  50DF               	movf	indf2,w,c
 24745  002948  A4D8               	btfss	status,2,c
 24746  00294A  D00B               	goto	l625
 24747                           
 24748                           ; BSR set to: 0
 24749  00294C  EE20 F002          	lfsr	2,2
 24750  002950  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24751  002952  26D9               	addwf	fsr2l,f,c
 24752  002954  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24753  002956  22DA               	addwfc	fsr2h,f,c
 24754  002958  50DF               	movf	indf2,w,c
 24755  00295A  A4D8               	btfss	status,2,c
 24756  00295C  D002               	goto	l625
 24757                           
 24758                           ; BSR set to: 0
 24759                           ;uart_drv.c: 128: {
 24760                           ;uart_drv.c: 129: DivisionFactor = 64;
 24761  00295E  0E40               	movlw	64
 24762  002960  D039               	goto	L30
 24763  002962                     l625:
 24764                           
 24765                           ; BSR set to: 0
 24766                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 24767                           
 24768                           ; BSR set to: 0
 24769  002962  EE20 F002          	lfsr	2,2
 24770  002966  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24771  002968  26D9               	addwf	fsr2l,f,c
 24772  00296A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24773  00296C  22DA               	addwfc	fsr2h,f,c
 24774  00296E  04DE               	decf	postinc2,w,c
 24775  002970  A4D8               	btfss	status,2,c
 24776  002972  D009               	goto	l627
 24777                           
 24778                           ; BSR set to: 0
 24779  002974  EE20 F002          	lfsr	2,2
 24780  002978  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24781  00297A  26D9               	addwf	fsr2l,f,c
 24782  00297C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24783  00297E  22DA               	addwfc	fsr2h,f,c
 24784  002980  50DF               	movf	indf2,w,c
 24785  002982  B4D8               	btfsc	status,2,c
 24786  002984  D012               	goto	u10840
 24787  002986                     l627:
 24788                           
 24789                           ; BSR set to: 0
 24790                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 24791                           
 24792                           ; BSR set to: 0
 24793  002986  EE20 F002          	lfsr	2,2
 24794  00298A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24795  00298C  26D9               	addwf	fsr2l,f,c
 24796  00298E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24797  002990  22DA               	addwfc	fsr2h,f,c
 24798  002992  50DF               	movf	indf2,w,c
 24799  002994  A4D8               	btfss	status,2,c
 24800  002996  D00B               	goto	l629
 24801                           
 24802                           ; BSR set to: 0
 24803  002998  EE20 F002          	lfsr	2,2
 24804  00299C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24805  00299E  26D9               	addwf	fsr2l,f,c
 24806  0029A0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24807  0029A2  22DA               	addwfc	fsr2h,f,c
 24808  0029A4  04DE               	decf	postinc2,w,c
 24809  0029A6  A4D8               	btfss	status,2,c
 24810  0029A8  D002               	goto	l629
 24811  0029AA                     u10840:
 24812                           
 24813                           ; BSR set to: 0
 24814                           ;uart_drv.c: 136: {
 24815                           ;uart_drv.c: 137: DivisionFactor = 16;
 24816  0029AA  0E10               	movlw	16
 24817  0029AC  D013               	goto	L30
 24818  0029AE                     l629:
 24819                           
 24820                           ; BSR set to: 0
 24821                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 24822                           
 24823                           ; BSR set to: 0
 24824  0029AE  EE20 F002          	lfsr	2,2
 24825  0029B2  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24826  0029B4  26D9               	addwf	fsr2l,f,c
 24827  0029B6  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24828  0029B8  22DA               	addwfc	fsr2h,f,c
 24829  0029BA  04DE               	decf	postinc2,w,c
 24830  0029BC  A4D8               	btfss	status,2,c
 24831  0029BE  D00B               	goto	l631
 24832                           
 24833                           ; BSR set to: 0
 24834  0029C0  EE20 F002          	lfsr	2,2
 24835  0029C4  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24836  0029C6  26D9               	addwf	fsr2l,f,c
 24837  0029C8  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24838  0029CA  22DA               	addwfc	fsr2h,f,c
 24839  0029CC  04DE               	decf	postinc2,w,c
 24840  0029CE  A4D8               	btfss	status,2,c
 24841  0029D0  D002               	goto	l631
 24842                           
 24843                           ; BSR set to: 0
 24844                           ;uart_drv.c: 140: {
 24845                           ;uart_drv.c: 141: DivisionFactor = 4;
 24846  0029D2  0E04               	movlw	4
 24847  0029D4                     L30:
 24848  0029D4  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 24849  0029D6                     l631:
 24850                           
 24851                           ; BSR set to: 0
 24852                           ;uart_drv.c: 146: }
 24853                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 24854                           
 24855                           ; BSR set to: 0
 24856                           
 24857                           ; BSR set to: 0
 24858                           
 24859                           ; BSR set to: 0
 24860                           
 24861                           ; BSR set to: 0
 24862                           
 24863                           ;uart_drv.c: 143: else
 24864                           ;uart_drv.c: 144: {
 24865                           
 24866                           ; BSR set to: 0
 24867  0029D6  EE20 F00D          	lfsr	2,13
 24868  0029DA  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24869  0029DC  26D9               	addwf	fsr2l,f,c
 24870  0029DE  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24871  0029E0  22DA               	addwfc	fsr2h,f,c
 24872  0029E2  CFDE F089          	movff	postinc2,___lldiv@dividend
 24873  0029E6  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 24874  0029EA  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 24875  0029EE  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 24876  0029F2  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 24877  0029F4  6F7D               	movwf	___lmul@multiplier& (0+255),b
 24878  0029F6  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 24879  0029F8  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 24880  0029FA  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 24881  0029FC  EE20 F011          	lfsr	2,17
 24882  002A00  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24883  002A02  26D9               	addwf	fsr2l,f,c
 24884  002A04  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24885  002A06  22DA               	addwfc	fsr2h,f,c
 24886  002A08  CFDE F081          	movff	postinc2,___lmul@multiplicand
 24887  002A0C  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 24888  002A10  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 24889  002A14  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 24890  002A18  ECE3  F028         	call	___lmul	;wreg free
 24891  002A1C  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 24892  002A20  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 24893  002A24  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 24894  002A28  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 24895  002A2C  EC7F  F025         	call	___lldiv	;wreg free
 24896  002A30  0EFF               	movlw	255
 24897  002A32  0100               	movlb	0	; () banked
 24898  002A34  2589               	addwf	?___lldiv& (0+255),w,b
 24899  002A36  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 24900  002A38  0EFF               	movlw	255
 24901  002A3A  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 24902  002A3C  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 24903                           
 24904                           ; BSR set to: 0
 24905                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 24906  002A3E  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 24907  002A40  A4D8               	btfss	status,2,c
 24908  002A42  D005               	goto	l633
 24909                           
 24910                           ; BSR set to: 0
 24911                           ;uart_drv.c: 152: {
 24912                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 24913  002A44  0E00               	movlw	0
 24914  002A46  6E7F               	movwf	3967,c	;volatile
 24915                           
 24916                           ; BSR set to: 0
 24917                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 24918  002A48  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 24919                           
 24920                           ;uart_drv.c: 156: }
 24921  002A4C  0012               	return	
 24922  002A4E                     l633:
 24923                           
 24924                           ; BSR set to: 0
 24925                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 24926                           
 24927                           ; BSR set to: 0
 24928  002A4E  0E02               	movlw	2
 24929  002A50  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 24930  002A52  A4D8               	btfss	status,2,c
 24931  002A54  0012               	return	
 24932                           
 24933                           ; BSR set to: 0
 24934                           ;uart_drv.c: 158: {
 24935                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 24936  002A56  0E00               	movlw	0
 24937  002A58  6E7D               	movwf	3965,c	;volatile
 24938                           
 24939                           ; BSR set to: 0
 24940                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 24941  002A5A  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 24942                           
 24943                           ; BSR set to: 0
 24944  002A5E  0012               	return	
 24945  002A60                     __end_of_SetUartBaudRate:
 24946                           	opt stack 0
 24947                           tosu	equ	0xFFF
 24948                           tosh	equ	0xFFE
 24949                           tosl	equ	0xFFD
 24950                           pclath	equ	0xFFA
 24951                           tblptru	equ	0xFF8
 24952                           tblptrh	equ	0xFF7
 24953                           tblptrl	equ	0xFF6
 24954                           tablat	equ	0xFF5
 24955                           prodh	equ	0xFF4
 24956                           prodl	equ	0xFF3
 24957                           intcon	equ	0xFF2
 24958                           intcon2	equ	0xFF1
 24959                           intcon3	equ	0xFF0
 24960                           indf0	equ	0xFEF
 24961                           postinc0	equ	0xFEE
 24962                           plusw0	equ	0xFEB
 24963                           fsr0h	equ	0xFEA
 24964                           fsr0l	equ	0xFE9
 24965                           wreg	equ	0xFE8
 24966                           indf1	equ	0xFE7
 24967                           postinc1	equ	0xFE6
 24968                           postdec1	equ	0xFE5
 24969                           plusw1	equ	0xFE3
 24970                           fsr1h	equ	0xFE2
 24971                           fsr1l	equ	0xFE1
 24972                           indf2	equ	0xFDF
 24973                           postinc2	equ	0xFDE
 24974                           postdec2	equ	0xFDD
 24975                           plusw2	equ	0xFDB
 24976                           fsr2h	equ	0xFDA
 24977                           fsr2l	equ	0xFD9
 24978                           status	equ	0xFD8
 24979                           
 24980 ;; *************** function ___lmul *****************
 24981 ;; Defined at:
 24982 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 24983 ;; Parameters:    Size  Location     Type
 24984 ;;  multiplier      4   29[BANK0 ] unsigned long 
 24985 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 24986 ;; Auto vars:     Size  Location     Type
 24987 ;;  product         4   37[BANK0 ] unsigned long 
 24988 ;; Return value:  Size  Location     Type
 24989 ;;                  4   29[BANK0 ] unsigned long 
 24990 ;; Registers used:
 24991 ;;		wreg, status,2, status,0
 24992 ;; Tracked objects:
 24993 ;;		On entry : 0/0
 24994 ;;		On exit  : 0/0
 24995 ;;		Unchanged: 0/0
 24996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24997 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24998 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25000 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25001 ;;Total ram usage:       12 bytes
 25002 ;; Hardware stack levels used:    1
 25003 ;; Hardware stack levels required when called:   11
 25004 ;; This function calls:
 25005 ;;		Nothing
 25006 ;; This function is called by:
 25007 ;;		_Tmr_TmrBPrSet
 25008 ;;		_SetUartBaudRate
 25009 ;;		_strtol
 25010 ;; This function uses a non-reentrant model
 25011 ;;
 25012                           
 25013                           	psect	text114
 25014  0051C6                     __ptext114:
 25015                           	opt stack 0
 25016  0051C6                     ___lmul:
 25017                           	opt stack 15
 25018                           
 25019                           ; BSR set to: 0
 25020                           ;incstack = 0
 25021  0051C6  0E00               	movlw	0
 25022  0051C8  0100               	movlb	0	; () banked
 25023  0051CA  6F85               	movwf	___lmul@product& (0+255),b
 25024  0051CC  0E00               	movlw	0
 25025  0051CE  6F86               	movwf	(___lmul@product+1)& (0+255),b
 25026  0051D0  0E00               	movlw	0
 25027  0051D2  6F87               	movwf	(___lmul@product+2)& (0+255),b
 25028  0051D4  0E00               	movlw	0
 25029  0051D6  6F88               	movwf	(___lmul@product+3)& (0+255),b
 25030  0051D8                     
 25031                           ; BSR set to: 0
 25032                           
 25033                           ; BSR set to: 0
 25034  0051D8  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 25035  0051DA  D008               	goto	l2625
 25036                           
 25037                           ; BSR set to: 0
 25038  0051DC  5181               	movf	___lmul@multiplicand& (0+255),w,b
 25039  0051DE  2785               	addwf	___lmul@product& (0+255),f,b
 25040  0051E0  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 25041  0051E2  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 25042  0051E4  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 25043  0051E6  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 25044  0051E8  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 25045  0051EA  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 25046  0051EC                     l2625:
 25047                           
 25048                           ; BSR set to: 0
 25049                           
 25050                           ; BSR set to: 0
 25051  0051EC  90D8               	bcf	status,0,c
 25052  0051EE  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 25053  0051F0  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 25054  0051F2  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 25055  0051F4  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 25056                           
 25057                           ; BSR set to: 0
 25058  0051F6  90D8               	bcf	status,0,c
 25059  0051F8  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 25060  0051FA  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 25061  0051FC  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 25062  0051FE  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 25063  005200  517D               	movf	___lmul@multiplier& (0+255),w,b
 25064  005202  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 25065  005204  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 25066  005206  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 25067  005208  A4D8               	btfss	status,2,c
 25068  00520A  D7E6               	goto	l2624
 25069                           
 25070                           ; BSR set to: 0
 25071  00520C  C085  F07D         	movff	___lmul@product,?___lmul
 25072  005210  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 25073  005214  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 25074  005218  C088  F080         	movff	___lmul@product+3,?___lmul+3
 25075                           
 25076                           ; BSR set to: 0
 25077  00521C  0012               	return		;funcret
 25078  00521E                     __end_of___lmul:
 25079                           	opt stack 0
 25080                           tosu	equ	0xFFF
 25081                           tosh	equ	0xFFE
 25082                           tosl	equ	0xFFD
 25083                           pclath	equ	0xFFA
 25084                           tblptru	equ	0xFF8
 25085                           tblptrh	equ	0xFF7
 25086                           tblptrl	equ	0xFF6
 25087                           tablat	equ	0xFF5
 25088                           prodh	equ	0xFF4
 25089                           prodl	equ	0xFF3
 25090                           intcon	equ	0xFF2
 25091                           intcon2	equ	0xFF1
 25092                           intcon3	equ	0xFF0
 25093                           indf0	equ	0xFEF
 25094                           postinc0	equ	0xFEE
 25095                           plusw0	equ	0xFEB
 25096                           fsr0h	equ	0xFEA
 25097                           fsr0l	equ	0xFE9
 25098                           wreg	equ	0xFE8
 25099                           indf1	equ	0xFE7
 25100                           postinc1	equ	0xFE6
 25101                           postdec1	equ	0xFE5
 25102                           plusw1	equ	0xFE3
 25103                           fsr1h	equ	0xFE2
 25104                           fsr1l	equ	0xFE1
 25105                           indf2	equ	0xFDF
 25106                           postinc2	equ	0xFDE
 25107                           postdec2	equ	0xFDD
 25108                           plusw2	equ	0xFDB
 25109                           fsr2h	equ	0xFDA
 25110                           fsr2l	equ	0xFD9
 25111                           status	equ	0xFD8
 25112                           
 25113 ;; *************** function _UartSetConfigLow *****************
 25114 ;; Defined at:
 25115 ;;		line 224 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25116 ;; Parameters:    Size  Location     Type
 25117 ;;		None
 25118 ;; Auto vars:     Size  Location     Type
 25119 ;;		None
 25120 ;; Return value:  Size  Location     Type
 25121 ;;                  1    wreg      void 
 25122 ;; Registers used:
 25123 ;;		wreg, status,2
 25124 ;; Tracked objects:
 25125 ;;		On entry : 0/0
 25126 ;;		On exit  : 0/0
 25127 ;;		Unchanged: 0/0
 25128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25133 ;;Total ram usage:        0 bytes
 25134 ;; Hardware stack levels used:    1
 25135 ;; Hardware stack levels required when called:   11
 25136 ;; This function calls:
 25137 ;;		Nothing
 25138 ;; This function is called by:
 25139 ;;		_ConfigureModem
 25140 ;; This function uses a non-reentrant model
 25141 ;;
 25142                           
 25143                           	psect	text115
 25144  00521E                     __ptext115:
 25145                           	opt stack 0
 25146  00521E                     _UartSetConfigLow:
 25147                           	opt stack 15
 25148                           
 25149                           ;mdm_gsm_gprs.c: 226: UartConfig.UartEnable = ((UINT8)(1));
 25150                           
 25151                           ; BSR set to: 0
 25152                           ;incstack = 0
 25153  00521E  0E01               	movlw	1
 25154  005220  0103               	movlb	3	; () banked
 25155  005222  6F32               	movwf	_UartConfig& (0+255),b
 25156                           
 25157                           ;mdm_gsm_gprs.c: 227: UartConfig.UartMode = ((UINT8)(0));
 25158  005224  0E00               	movlw	0
 25159  005226  6F33               	movwf	(_UartConfig+1)& (0+255),b
 25160                           
 25161                           ;mdm_gsm_gprs.c: 228: UartConfig.BaudRateMode = ((UINT8)(0));
 25162  005228  0E00               	movlw	0
 25163  00522A  6F34               	movwf	(_UartConfig+2)& (0+255),b
 25164                           
 25165                           ;mdm_gsm_gprs.c: 229: UartConfig.HighBaudMode = ((UINT8)(0));
 25166  00522C  0E00               	movlw	0
 25167  00522E  6F35               	movwf	(_UartConfig+3)& (0+255),b
 25168                           
 25169                           ;mdm_gsm_gprs.c: 230: UartConfig.Tx9bitMode = ((UINT8)(0));
 25170  005230  0E00               	movlw	0
 25171  005232  6F36               	movwf	(_UartConfig+4)& (0+255),b
 25172                           
 25173                           ;mdm_gsm_gprs.c: 231: UartConfig.Rx9bitMode = ((UINT8)(0));
 25174  005234  0E00               	movlw	0
 25175  005236  6F37               	movwf	(_UartConfig+5)& (0+255),b
 25176                           
 25177                           ;mdm_gsm_gprs.c: 232: UartConfig.TxEnable = ((UINT8)(1));
 25178  005238  0E01               	movlw	1
 25179  00523A  6F38               	movwf	(_UartConfig+6)& (0+255),b
 25180                           
 25181                           ;mdm_gsm_gprs.c: 233: UartConfig.RxEnable = ((UINT8)(1));
 25182  00523C  0E01               	movlw	1
 25183  00523E  6F39               	movwf	(_UartConfig+7)& (0+255),b
 25184                           
 25185                           ;mdm_gsm_gprs.c: 234: UartConfig.SendBreakEnable = ((UINT8)(0));
 25186  005240  0E00               	movlw	0
 25187  005242  6F3A               	movwf	(_UartConfig+8)& (0+255),b
 25188                           
 25189                           ;mdm_gsm_gprs.c: 235: UartConfig.AutobaudEnable = ((UINT8)(0));
 25190  005244  0E00               	movlw	0
 25191  005246  6F3B               	movwf	(_UartConfig+9)& (0+255),b
 25192                           
 25193                           ;mdm_gsm_gprs.c: 236: UartConfig.WakeUpEnable = ((UINT8)(0));
 25194  005248  0E00               	movlw	0
 25195  00524A  6F3C               	movwf	(_UartConfig+10)& (0+255),b
 25196                           
 25197                           ;mdm_gsm_gprs.c: 237: UartConfig.TxInterruptEnable = ((UINT8)(0));
 25198  00524C  0E00               	movlw	0
 25199  00524E  6F3D               	movwf	(_UartConfig+11)& (0+255),b
 25200                           
 25201                           ;mdm_gsm_gprs.c: 238: UartConfig.RxInterruptEnable = ((UINT8)(1));
 25202  005250  0E01               	movlw	1
 25203  005252  6F3E               	movwf	(_UartConfig+12)& (0+255),b
 25204                           
 25205                           ;mdm_gsm_gprs.c: 239: UartConfig.McuBusClock = ((UINT32)(48000000));
 25206  005254  0E00               	movlw	0
 25207  005256  6F3F               	movwf	(_UartConfig+13)& (0+255),b
 25208  005258  0E6C               	movlw	108
 25209  00525A  6F40               	movwf	(_UartConfig+14)& (0+255),b
 25210  00525C  0EDC               	movlw	220
 25211  00525E  6F41               	movwf	(_UartConfig+15)& (0+255),b
 25212  005260  0E02               	movlw	2
 25213  005262  6F42               	movwf	(_UartConfig+16)& (0+255),b
 25214                           
 25215                           ;mdm_gsm_gprs.c: 240: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 25216  005264  0E80               	movlw	128
 25217  005266  6F43               	movwf	(_UartConfig+17)& (0+255),b
 25218  005268  0E25               	movlw	37
 25219  00526A  6F44               	movwf	(_UartConfig+18)& (0+255),b
 25220  00526C  0E00               	movlw	0
 25221  00526E  6F45               	movwf	(_UartConfig+19)& (0+255),b
 25222  005270  0E00               	movlw	0
 25223  005272  6F46               	movwf	(_UartConfig+20)& (0+255),b
 25224                           
 25225                           ; BSR set to: 3
 25226  005274  0012               	return		;funcret
 25227  005276                     __end_of_UartSetConfigLow:
 25228                           	opt stack 0
 25229                           tosu	equ	0xFFF
 25230                           tosh	equ	0xFFE
 25231                           tosl	equ	0xFFD
 25232                           pclath	equ	0xFFA
 25233                           tblptru	equ	0xFF8
 25234                           tblptrh	equ	0xFF7
 25235                           tblptrl	equ	0xFF6
 25236                           tablat	equ	0xFF5
 25237                           prodh	equ	0xFF4
 25238                           prodl	equ	0xFF3
 25239                           intcon	equ	0xFF2
 25240                           intcon2	equ	0xFF1
 25241                           intcon3	equ	0xFF0
 25242                           indf0	equ	0xFEF
 25243                           postinc0	equ	0xFEE
 25244                           plusw0	equ	0xFEB
 25245                           fsr0h	equ	0xFEA
 25246                           fsr0l	equ	0xFE9
 25247                           wreg	equ	0xFE8
 25248                           indf1	equ	0xFE7
 25249                           postinc1	equ	0xFE6
 25250                           postdec1	equ	0xFE5
 25251                           plusw1	equ	0xFE3
 25252                           fsr1h	equ	0xFE2
 25253                           fsr1l	equ	0xFE1
 25254                           indf2	equ	0xFDF
 25255                           postinc2	equ	0xFDE
 25256                           postdec2	equ	0xFDD
 25257                           plusw2	equ	0xFDB
 25258                           fsr2h	equ	0xFDA
 25259                           fsr2l	equ	0xFD9
 25260                           status	equ	0xFD8
 25261                           
 25262 ;; *************** function _CheckModem *****************
 25263 ;; Defined at:
 25264 ;;		line 278 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25265 ;; Parameters:    Size  Location     Type
 25266 ;;		None
 25267 ;; Auto vars:     Size  Location     Type
 25268 ;;		None
 25269 ;; Return value:  Size  Location     Type
 25270 ;;                  1    wreg      void 
 25271 ;; Registers used:
 25272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25273 ;; Tracked objects:
 25274 ;;		On entry : 0/0
 25275 ;;		On exit  : 0/0
 25276 ;;		Unchanged: 0/0
 25277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25282 ;;Total ram usage:        0 bytes
 25283 ;; Hardware stack levels used:    1
 25284 ;; Hardware stack levels required when called:   14
 25285 ;; This function calls:
 25286 ;;		_GenerateEvt
 25287 ;;		_OsTmr_GetTimerStatus
 25288 ;;		_OsTmr_StartTimer
 25289 ;;		_ReceiveEvt
 25290 ;;		_Uart_WriteConstString
 25291 ;; This function is called by:
 25292 ;;		_Mdm_MainTask
 25293 ;; This function uses a non-reentrant model
 25294 ;;
 25295                           
 25296                           	psect	text116
 25297  001E9E                     __ptext116:
 25298                           	opt stack 0
 25299  001E9E                     _CheckModem:
 25300                           	opt stack 13
 25301                           
 25302                           ;mdm_gsm_gprs.c: 280: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 25303                           ;mdm_gsm_gprs.c: 281: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 25304                           ;mdm_gsm_gprs.c: 283: switch (CheckMdmSts)
 25305                           
 25306                           ; BSR set to: 3
 25307                           ;incstack = 0
 25308  001E9E  D09C               	goto	l978
 25309  001EA0                     
 25310                           ;mdm_gsm_gprs.c: 287: OsTmr_StartTimer(&Timeout,2000);
 25311  001EA0  0EEF               	movlw	low CheckModem@Timeout
 25312  001EA2  0100               	movlb	0	; () banked
 25313  001EA4  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25314  001EA6  0E03               	movlw	high CheckModem@Timeout
 25315  001EA8  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25316  001EAA  0ED0               	movlw	208
 25317  001EAC  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25318  001EAE  0E07               	movlw	7
 25319  001EB0  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25320  001EB2  0E00               	movlw	0
 25321  001EB4  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25322  001EB6  0E00               	movlw	0
 25323  001EB8  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25324  001EBA  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 25325                           
 25326                           ;mdm_gsm_gprs.c: 289: CheckMdmSts = MdmCh_InitialDelay;
 25327  001EBE  0E01               	movlw	1
 25328  001EC0  0101               	movlb	1	; () banked
 25329  001EC2  6FF1               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25330                           
 25331                           ;mdm_gsm_gprs.c: 290: break;
 25332  001EC4  0012               	return	
 25333  001EC6                     
 25334                           ; BSR set to: 1
 25335                           ;mdm_gsm_gprs.c: 294: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25336                           
 25337                           ; BSR set to: 1
 25338  001EC6  0EEF               	movlw	low CheckModem@Timeout
 25339  001EC8  0100               	movlb	0	; () banked
 25340  001ECA  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25341  001ECC  0E03               	movlw	high CheckModem@Timeout
 25342  001ECE  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25343  001ED0  EC67  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 25344  001ED4  06E8               	decf	wreg,f,c
 25345  001ED6  A4D8               	btfss	status,2,c
 25346  001ED8  0012               	return	
 25347                           
 25348                           ;mdm_gsm_gprs.c: 295: {
 25349                           ;mdm_gsm_gprs.c: 297: CheckMdmSts = MdmCh_SendATE1;
 25350  001EDA  0E02               	movlw	2
 25351  001EDC  0101               	movlb	1	; () banked
 25352  001EDE  6FF1               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25353                           
 25354                           ; BSR set to: 1
 25355                           ;mdm_gsm_gprs.c: 298: }
 25356                           ;mdm_gsm_gprs.c: 299: break;
 25357  001EE0  0012               	return	
 25358  001EE2                     
 25359                           ; BSR set to: 1
 25360                           ;mdm_gsm_gprs.c: 303: Uart_WriteConstString(1,"AT\r\n");
 25361                           
 25362                           ; BSR set to: 1
 25363  001EE2  0EE5               	movlw	low STR_1
 25364  001EE4  0100               	movlb	0	; () banked
 25365  001EE6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25366  001EE8  0EFF               	movlw	high STR_1
 25367  001EEA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25368  001EEC  0E01               	movlw	1
 25369  001EEE  EC1A  F02C         	call	_Uart_WriteConstString
 25370                           
 25371                           ;mdm_gsm_gprs.c: 305: OsTmr_StartTimer(&Timeout,2000u);
 25372  001EF2  0EEF               	movlw	low CheckModem@Timeout
 25373  001EF4  0100               	movlb	0	; () banked
 25374  001EF6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25375  001EF8  0E03               	movlw	high CheckModem@Timeout
 25376  001EFA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25377  001EFC  0ED0               	movlw	208
 25378  001EFE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25379  001F00  0E07               	movlw	7
 25380  001F02  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25381  001F04  0E00               	movlw	0
 25382  001F06  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25383  001F08  0E00               	movlw	0
 25384  001F0A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25385  001F0C  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 25386                           
 25387                           ;mdm_gsm_gprs.c: 307: CheckMdmSts = MdmCh_WaitEcho;
 25388  001F10  0E03               	movlw	3
 25389  001F12  0101               	movlb	1	; () banked
 25390  001F14  6FF1               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25391                           
 25392                           ;mdm_gsm_gprs.c: 308: break;
 25393  001F16  0012               	return	
 25394  001F18                     
 25395                           ; BSR set to: 1
 25396                           ;mdm_gsm_gprs.c: 312: if (ReceiveEvt(&NewStringReceived))
 25397                           
 25398                           ; BSR set to: 1
 25399  001F18  0E3C               	movlw	low _NewStringReceived
 25400  001F1A  0100               	movlb	0	; () banked
 25401  001F1C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25402  001F1E  0E00               	movlw	high _NewStringReceived
 25403  001F20  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25404  001F22  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 25405  001F26  0900               	iorlw	0
 25406  001F28  B4D8               	btfsc	status,2,c
 25407  001F2A  D030               	goto	l985
 25408                           
 25409                           ;mdm_gsm_gprs.c: 313: {
 25410                           ;mdm_gsm_gprs.c: 315: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 25411  001F2C  CC58  FFE8         	movff	_RxBuffer,wreg
 25412  001F30  0A4F               	xorlw	79
 25413  001F32  A4D8               	btfss	status,2,c
 25414  001F34  D005               	goto	u12180
 25415  001F36  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25416  001F3A  0A4B               	xorlw	75
 25417  001F3C  B4D8               	btfsc	status,2,c
 25418  001F3E  D00A               	goto	u12200
 25419  001F40                     u12180:
 25420  001F40  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25421  001F44  0A4F               	xorlw	79
 25422  001F46  A4D8               	btfss	status,2,c
 25423  001F48  0012               	return	
 25424  001F4A  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 25425  001F4E  0A4B               	xorlw	75
 25426  001F50  A4D8               	btfss	status,2,c
 25427  001F52  0012               	return	
 25428  001F54                     u12200:
 25429                           
 25430                           ;mdm_gsm_gprs.c: 316: {
 25431                           ;mdm_gsm_gprs.c: 317: MdmStatus = ModemReady;
 25432  001F54  0E02               	movlw	2
 25433  001F56  0100               	movlb	0	; () banked
 25434  001F58  6FD6               	movwf	_MdmStatus& (0+255),b
 25435                           
 25436                           ; BSR set to: 0
 25437                           ;mdm_gsm_gprs.c: 319: GenerateEvt(&MdmOnOffPulseRequest);
 25438  001F5A  0EE0               	movlw	low _MdmOnOffPulseRequest
 25439  001F5C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25440  001F5E  0E00               	movlw	high _MdmOnOffPulseRequest
 25441  001F60  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25442  001F62  EC06  F030         	call	_GenerateEvt	;wreg free
 25443                           
 25444                           ;mdm_gsm_gprs.c: 321: OsTmr_StartTimer(&Timeout,1000u);
 25445  001F66  0EEF               	movlw	low CheckModem@Timeout
 25446  001F68  0100               	movlb	0	; () banked
 25447  001F6A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25448  001F6C  0E03               	movlw	high CheckModem@Timeout
 25449  001F6E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25450  001F70  0EE8               	movlw	232
 25451  001F72  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25452  001F74  0E03               	movlw	3
 25453  001F76  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25454  001F78  0E00               	movlw	0
 25455  001F7A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25456  001F7C  0E00               	movlw	0
 25457  001F7E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25458  001F80  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 25459                           
 25460                           ;mdm_gsm_gprs.c: 323: CheckMdmSts = MdmCh_Delay;
 25461  001F84  0E04               	movlw	4
 25462  001F86  0101               	movlb	1	; () banked
 25463  001F88  6FF1               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25464                           
 25465                           ; BSR set to: 1
 25466                           ;mdm_gsm_gprs.c: 324: }
 25467                           ;mdm_gsm_gprs.c: 325: }
 25468  001F8A  0012               	return	
 25469  001F8C                     l985:
 25470                           
 25471                           ;mdm_gsm_gprs.c: 326: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25472                           
 25473                           ; BSR set to: 1
 25474  001F8C  0EEF               	movlw	low CheckModem@Timeout
 25475  001F8E  0100               	movlb	0	; () banked
 25476  001F90  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25477  001F92  0E03               	movlw	high CheckModem@Timeout
 25478  001F94  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25479  001F96  EC67  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 25480  001F9A  06E8               	decf	wreg,f,c
 25481  001F9C  A4D8               	btfss	status,2,c
 25482  001F9E  0012               	return	
 25483                           
 25484                           ;mdm_gsm_gprs.c: 327: {
 25485                           ;mdm_gsm_gprs.c: 329: MdmStatus = ModemOff;
 25486  001FA0  0E00               	movlw	0
 25487  001FA2  0100               	movlb	0	; () banked
 25488  001FA4  6FD6               	movwf	_MdmStatus& (0+255),b
 25489                           
 25490                           ;mdm_gsm_gprs.c: 331: ComChecCompleted = 1u;
 25491  001FA6  0E01               	movlw	1
 25492  001FA8  0101               	movlb	1	; () banked
 25493  001FAA  6FF2               	movwf	_ComChecCompleted& (0+255),b
 25494                           
 25495                           ;mdm_gsm_gprs.c: 333: CheckMdmSts = MdmCh_Done;
 25496  001FAC  0E05               	movlw	5
 25497  001FAE  6FF1               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25498                           
 25499                           ; BSR set to: 1
 25500                           ;mdm_gsm_gprs.c: 338: }
 25501                           ;mdm_gsm_gprs.c: 339: break;
 25502                           
 25503                           ; BSR set to: 1
 25504                           
 25505                           ;mdm_gsm_gprs.c: 335: else
 25506                           ;mdm_gsm_gprs.c: 336: {
 25507                           
 25508                           ; BSR set to: 1
 25509                           
 25510                           ;mdm_gsm_gprs.c: 334: }
 25511  001FB0  0012               	return	
 25512  001FB2                     
 25513                           ; BSR set to: 1
 25514                           ;mdm_gsm_gprs.c: 343: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25515                           
 25516                           ; BSR set to: 1
 25517  001FB2  0EEF               	movlw	low CheckModem@Timeout
 25518  001FB4  0100               	movlb	0	; () banked
 25519  001FB6  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25520  001FB8  0E03               	movlw	high CheckModem@Timeout
 25521  001FBA  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25522  001FBC  EC67  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 25523  001FC0  06E8               	decf	wreg,f,c
 25524  001FC2  A4D8               	btfss	status,2,c
 25525  001FC4  0012               	return	
 25526                           
 25527                           ;mdm_gsm_gprs.c: 344: {
 25528                           ;mdm_gsm_gprs.c: 346: MdmStatus = ModemOff;
 25529  001FC6  0E00               	movlw	0
 25530  001FC8  0100               	movlb	0	; () banked
 25531  001FCA  6FD6               	movwf	_MdmStatus& (0+255),b
 25532                           
 25533                           ;mdm_gsm_gprs.c: 348: ComChecCompleted = 1u;
 25534  001FCC  0E01               	movlw	1
 25535  001FCE  0101               	movlb	1	; () banked
 25536  001FD0  6FF2               	movwf	_ComChecCompleted& (0+255),b
 25537                           
 25538                           ;mdm_gsm_gprs.c: 350: CheckMdmSts = MdmCh_Done;
 25539  001FD2  0E05               	movlw	5
 25540  001FD4  6FF1               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25541                           
 25542                           ; BSR set to: 1
 25543                           ;mdm_gsm_gprs.c: 360: }
 25544                           
 25545                           ; BSR set to: 1
 25546                           ;mdm_gsm_gprs.c: 359: break;
 25547                           
 25548                           ;mdm_gsm_gprs.c: 358: default:
 25549                           
 25550                           ; BSR set to: 1
 25551                           ;mdm_gsm_gprs.c: 356: break;
 25552                           
 25553                           ;mdm_gsm_gprs.c: 354: case MdmCh_Done:
 25554                           
 25555                           ; BSR set to: 1
 25556                           ;mdm_gsm_gprs.c: 351: }
 25557                           ;mdm_gsm_gprs.c: 352: break;
 25558  001FD6  0012               	return	
 25559  001FD8                     l978:
 25560                           
 25561                           ; BSR set to: 1
 25562  001FD8  0101               	movlb	1	; () banked
 25563  001FDA  51F1               	movf	CheckModem@CheckMdmSts& (0+255),w,b
 25564                           
 25565                           ; Switch size 1, requested type "space"
 25566                           ; Number of cases is 6, Range of values is 0 to 5
 25567                           ; switch strategies available:
 25568                           ; Name         Instructions Cycles
 25569                           ; simple_byte           19    10 (average)
 25570                           ;	Chosen strategy is simple_byte
 25571  001FDC  0A00               	xorlw	0	; case 0
 25572  001FDE  B4D8               	btfsc	status,2,c
 25573  001FE0  D75F               	goto	l979
 25574  001FE2  0A01               	xorlw	1	; case 1
 25575  001FE4  B4D8               	btfsc	status,2,c
 25576  001FE6  D76F               	goto	l981
 25577  001FE8  0A03               	xorlw	3	; case 2
 25578  001FEA  B4D8               	btfsc	status,2,c
 25579  001FEC  D77A               	goto	l983
 25580  001FEE  0A01               	xorlw	1	; case 3
 25581  001FF0  B4D8               	btfsc	status,2,c
 25582  001FF2  D792               	goto	l984
 25583  001FF4  0A07               	xorlw	7	; case 4
 25584  001FF6  B4D8               	btfsc	status,2,c
 25585  001FF8  D7DC               	goto	l994
 25586  001FFA  0A01               	xorlw	1	; case 5
 25587  001FFC  0012               	return	
 25588  001FFE                     __end_of_CheckModem:
 25589                           	opt stack 0
 25590                           tosu	equ	0xFFF
 25591                           tosh	equ	0xFFE
 25592                           tosl	equ	0xFFD
 25593                           pclath	equ	0xFFA
 25594                           tblptru	equ	0xFF8
 25595                           tblptrh	equ	0xFF7
 25596                           tblptrl	equ	0xFF6
 25597                           tablat	equ	0xFF5
 25598                           prodh	equ	0xFF4
 25599                           prodl	equ	0xFF3
 25600                           intcon	equ	0xFF2
 25601                           intcon2	equ	0xFF1
 25602                           intcon3	equ	0xFF0
 25603                           indf0	equ	0xFEF
 25604                           postinc0	equ	0xFEE
 25605                           plusw0	equ	0xFEB
 25606                           fsr0h	equ	0xFEA
 25607                           fsr0l	equ	0xFE9
 25608                           wreg	equ	0xFE8
 25609                           indf1	equ	0xFE7
 25610                           postinc1	equ	0xFE6
 25611                           postdec1	equ	0xFE5
 25612                           plusw1	equ	0xFE3
 25613                           fsr1h	equ	0xFE2
 25614                           fsr1l	equ	0xFE1
 25615                           indf2	equ	0xFDF
 25616                           postinc2	equ	0xFDE
 25617                           postdec2	equ	0xFDD
 25618                           plusw2	equ	0xFDB
 25619                           fsr2h	equ	0xFDA
 25620                           fsr2l	equ	0xFD9
 25621                           status	equ	0xFD8
 25622                           
 25623 ;; *************** function _MdmCntSm *****************
 25624 ;; Defined at:
 25625 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 25626 ;; Parameters:    Size  Location     Type
 25627 ;;		None
 25628 ;; Auto vars:     Size  Location     Type
 25629 ;;		None
 25630 ;; Return value:  Size  Location     Type
 25631 ;;                  1    wreg      void 
 25632 ;; Registers used:
 25633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25634 ;; Tracked objects:
 25635 ;;		On entry : 0/0
 25636 ;;		On exit  : 0/0
 25637 ;;		Unchanged: 0/0
 25638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25643 ;;Total ram usage:        0 bytes
 25644 ;; Hardware stack levels used:    1
 25645 ;; Hardware stack levels required when called:   12
 25646 ;; This function calls:
 25647 ;;		_InitModemInterface
 25648 ;;		_ReceiveEvt
 25649 ;; This function is called by:
 25650 ;;		_Mdm_DrvMainFn
 25651 ;; This function uses a non-reentrant model
 25652 ;;
 25653                           
 25654                           	psect	text117
 25655  0042B2                     __ptext117:
 25656                           	opt stack 0
 25657  0042B2                     _MdmCntSm:
 25658                           	opt stack 15
 25659                           
 25660                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 25661                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 25662                           ;mdm_drv.c: 204: switch (MdmCntState)
 25663                           
 25664                           ;incstack = 0
 25665  0042B2  D045               	goto	l315
 25666  0042B4                     
 25667                           ;mdm_drv.c: 208: InitModemInterface();
 25668  0042B4  ECBB  F030         	call	_InitModemInterface	;wreg free
 25669                           
 25670                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 25671  0042B8  0E01               	movlw	1
 25672  0042BA  6E2B               	movwf	MdmCntSm@MdmCntState,c
 25673                           
 25674                           ;mdm_drv.c: 211: break;
 25675  0042BC  0012               	return	
 25676  0042BE                     
 25677                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 25678  0042BE  0EE0               	movlw	low _MdmOnOffPulseRequest
 25679  0042C0  0100               	movlb	0	; () banked
 25680  0042C2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25681  0042C4  0E00               	movlw	high _MdmOnOffPulseRequest
 25682  0042C6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25683  0042C8  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 25684  0042CC  0900               	iorlw	0
 25685  0042CE  B4D8               	btfsc	status,2,c
 25686  0042D0  D009               	goto	l319
 25687                           
 25688                           ;mdm_drv.c: 216: {
 25689                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 25690  0042D2  0E02               	movlw	2
 25691  0042D4  6E2B               	movwf	MdmCntSm@MdmCntState,c
 25692                           
 25693                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 25694  0042D6  8284               	bsf	3972,1,c	;volatile
 25695                           
 25696                           ;mdm_drv.c: 222: Counter = 0;
 25697  0042D8  0E00               	movlw	0
 25698  0042DA  0102               	movlb	2	; () banked
 25699  0042DC  6FD7               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 25700  0042DE  0E00               	movlw	0
 25701  0042E0  6FD6               	movwf	MdmCntSm@Counter& (0+255),b
 25702                           
 25703                           ;mdm_drv.c: 223: }
 25704  0042E2  0012               	return	
 25705  0042E4                     l319:
 25706                           
 25707                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 25708                           
 25709                           ; BSR set to: 2
 25710  0042E4  0E3D               	movlw	low _MdmResetRequest
 25711  0042E6  0100               	movlb	0	; () banked
 25712  0042E8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25713  0042EA  0E00               	movlw	high _MdmResetRequest
 25714  0042EC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25715  0042EE  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 25716  0042F2  0900               	iorlw	0
 25717  0042F4  B4D8               	btfsc	status,2,c
 25718  0042F6  0012               	return	
 25719                           
 25720                           ;mdm_drv.c: 225: {
 25721                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 25722  0042F8  0E03               	movlw	3
 25723  0042FA  6E2B               	movwf	MdmCntSm@MdmCntState,c
 25724                           
 25725                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 25726  0042FC  8084               	bsf	3972,0,c	;volatile
 25727                           
 25728                           ;mdm_drv.c: 231: Counter = 0;
 25729  0042FE  0E00               	movlw	0
 25730  004300  0102               	movlb	2	; () banked
 25731  004302  6FD7               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 25732  004304  0E00               	movlw	0
 25733  004306  6FD6               	movwf	MdmCntSm@Counter& (0+255),b
 25734                           
 25735                           ; BSR set to: 2
 25736                           ;mdm_drv.c: 236: }
 25737                           ;mdm_drv.c: 237: break;
 25738                           
 25739                           ; BSR set to: 2
 25740                           
 25741                           ;mdm_drv.c: 233: else
 25742                           ;mdm_drv.c: 234: {
 25743                           
 25744                           ; BSR set to: 2
 25745                           
 25746                           ;mdm_drv.c: 232: }
 25747  004308  0012               	return	
 25748  00430A                     
 25749                           ;mdm_drv.c: 241: Counter++;
 25750                           
 25751                           ; BSR set to: 2
 25752  00430A  0102               	movlb	2	; () banked
 25753  00430C  4BD6               	infsnz	MdmCntSm@Counter& (0+255),f,b
 25754  00430E  2BD7               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 25755                           
 25756                           ; BSR set to: 2
 25757                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 25758  004310  51D7               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 25759  004312  E104               	bnz	u12120
 25760  004314  0E96               	movlw	150
 25761  004316  5DD6               	subwf	MdmCntSm@Counter& (0+255),w,b
 25762  004318  A0D8               	btfss	status,0,c
 25763  00431A  0012               	return	
 25764  00431C                     u12120:
 25765                           
 25766                           ; BSR set to: 2
 25767                           ;mdm_drv.c: 244: {
 25768                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 25769  00431C  9284               	bcf	3972,1,c	;volatile
 25770                           
 25771                           ; BSR set to: 2
 25772                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 25773  00431E  0E01               	movlw	1
 25774  004320  6E2B               	movwf	MdmCntSm@MdmCntState,c
 25775                           
 25776                           ; BSR set to: 2
 25777                           ;mdm_drv.c: 249: }
 25778                           ;mdm_drv.c: 250: break;
 25779  004322  0012               	return	
 25780  004324                     
 25781                           ;mdm_drv.c: 254: Counter++;
 25782                           
 25783                           ; BSR set to: 2
 25784  004324  0102               	movlb	2	; () banked
 25785  004326  4BD6               	infsnz	MdmCntSm@Counter& (0+255),f,b
 25786  004328  2BD7               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 25787                           
 25788                           ; BSR set to: 2
 25789                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 25790  00432A  51D7               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 25791  00432C  E104               	bnz	u12130
 25792  00432E  0E0A               	movlw	10
 25793  004330  5DD6               	subwf	MdmCntSm@Counter& (0+255),w,b
 25794  004332  A0D8               	btfss	status,0,c
 25795  004334  0012               	return	
 25796  004336                     u12130:
 25797                           
 25798                           ; BSR set to: 2
 25799                           ;mdm_drv.c: 257: {
 25800                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 25801  004336  9084               	bcf	3972,0,c	;volatile
 25802                           
 25803                           ; BSR set to: 2
 25804                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 25805  004338  0E01               	movlw	1
 25806  00433A  6E2B               	movwf	MdmCntSm@MdmCntState,c
 25807                           
 25808                           ; BSR set to: 2
 25809                           ;mdm_drv.c: 267: }
 25810                           
 25811                           ; BSR set to: 2
 25812                           ;mdm_drv.c: 266: break;
 25813                           
 25814                           ;mdm_drv.c: 265: default:
 25815                           
 25816                           ; BSR set to: 2
 25817                           ;mdm_drv.c: 262: }
 25818                           ;mdm_drv.c: 263: break;
 25819  00433C  0012               	return	
 25820  00433E                     l315:
 25821                           
 25822                           ; BSR set to: 2
 25823  00433E  502B               	movf	MdmCntSm@MdmCntState,w,c
 25824                           
 25825                           ; Switch size 1, requested type "space"
 25826                           ; Number of cases is 4, Range of values is 0 to 3
 25827                           ; switch strategies available:
 25828                           ; Name         Instructions Cycles
 25829                           ; simple_byte           13     7 (average)
 25830                           ;	Chosen strategy is simple_byte
 25831  004340  0A00               	xorlw	0	; case 0
 25832  004342  B4D8               	btfsc	status,2,c
 25833  004344  D7B7               	goto	l316
 25834  004346  0A01               	xorlw	1	; case 1
 25835  004348  B4D8               	btfsc	status,2,c
 25836  00434A  D7B9               	goto	l318
 25837  00434C  0A03               	xorlw	3	; case 2
 25838  00434E  B4D8               	btfsc	status,2,c
 25839  004350  D7DC               	goto	l323
 25840  004352  0A01               	xorlw	1	; case 3
 25841  004354  A4D8               	btfss	status,2,c
 25842  004356  0012               	return	
 25843  004358  D7E5               	goto	l325
 25844  00435A                     __end_of_MdmCntSm:
 25845                           	opt stack 0
 25846                           tosu	equ	0xFFF
 25847                           tosh	equ	0xFFE
 25848                           tosl	equ	0xFFD
 25849                           pclath	equ	0xFFA
 25850                           tblptru	equ	0xFF8
 25851                           tblptrh	equ	0xFF7
 25852                           tblptrl	equ	0xFF6
 25853                           tablat	equ	0xFF5
 25854                           prodh	equ	0xFF4
 25855                           prodl	equ	0xFF3
 25856                           intcon	equ	0xFF2
 25857                           intcon2	equ	0xFF1
 25858                           intcon3	equ	0xFF0
 25859                           indf0	equ	0xFEF
 25860                           postinc0	equ	0xFEE
 25861                           plusw0	equ	0xFEB
 25862                           fsr0h	equ	0xFEA
 25863                           fsr0l	equ	0xFE9
 25864                           wreg	equ	0xFE8
 25865                           indf1	equ	0xFE7
 25866                           postinc1	equ	0xFE6
 25867                           postdec1	equ	0xFE5
 25868                           plusw1	equ	0xFE3
 25869                           fsr1h	equ	0xFE2
 25870                           fsr1l	equ	0xFE1
 25871                           indf2	equ	0xFDF
 25872                           postinc2	equ	0xFDE
 25873                           postdec2	equ	0xFDD
 25874                           plusw2	equ	0xFDB
 25875                           fsr2h	equ	0xFDA
 25876                           fsr2l	equ	0xFD9
 25877                           status	equ	0xFD8
 25878                           
 25879 ;; *************** function _InitModemInterface *****************
 25880 ;; Defined at:
 25881 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 25882 ;; Parameters:    Size  Location     Type
 25883 ;;		None
 25884 ;; Auto vars:     Size  Location     Type
 25885 ;;		None
 25886 ;; Return value:  Size  Location     Type
 25887 ;;                  1    wreg      void 
 25888 ;; Registers used:
 25889 ;;		None
 25890 ;; Tracked objects:
 25891 ;;		On entry : 0/0
 25892 ;;		On exit  : 0/0
 25893 ;;		Unchanged: 0/0
 25894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25899 ;;Total ram usage:        0 bytes
 25900 ;; Hardware stack levels used:    1
 25901 ;; Hardware stack levels required when called:   11
 25902 ;; This function calls:
 25903 ;;		Nothing
 25904 ;; This function is called by:
 25905 ;;		_MdmCntSm
 25906 ;; This function uses a non-reentrant model
 25907 ;;
 25908                           
 25909                           	psect	text118
 25910  006176                     __ptext118:
 25911                           	opt stack 0
 25912  006176                     _InitModemInterface:
 25913                           	opt stack 15
 25914                           
 25915                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 25916                           
 25917                           ;incstack = 0
 25918  006176  9096               	bcf	3990,0,c	;volatile
 25919                           
 25920                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 25921  006178  9296               	bcf	3990,1,c	;volatile
 25922                           
 25923                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 25924  00617A  8496               	bsf	3990,2,c	;volatile
 25925  00617C  0012               	return		;funcret
 25926  00617E                     __end_of_InitModemInterface:
 25927                           	opt stack 0
 25928                           tosu	equ	0xFFF
 25929                           tosh	equ	0xFFE
 25930                           tosl	equ	0xFFD
 25931                           pclath	equ	0xFFA
 25932                           tblptru	equ	0xFF8
 25933                           tblptrh	equ	0xFF7
 25934                           tblptrl	equ	0xFF6
 25935                           tablat	equ	0xFF5
 25936                           prodh	equ	0xFF4
 25937                           prodl	equ	0xFF3
 25938                           intcon	equ	0xFF2
 25939                           intcon2	equ	0xFF1
 25940                           intcon3	equ	0xFF0
 25941                           indf0	equ	0xFEF
 25942                           postinc0	equ	0xFEE
 25943                           plusw0	equ	0xFEB
 25944                           fsr0h	equ	0xFEA
 25945                           fsr0l	equ	0xFE9
 25946                           wreg	equ	0xFE8
 25947                           indf1	equ	0xFE7
 25948                           postinc1	equ	0xFE6
 25949                           postdec1	equ	0xFE5
 25950                           plusw1	equ	0xFE3
 25951                           fsr1h	equ	0xFE2
 25952                           fsr1l	equ	0xFE1
 25953                           indf2	equ	0xFDF
 25954                           postinc2	equ	0xFDE
 25955                           postdec2	equ	0xFDD
 25956                           plusw2	equ	0xFDB
 25957                           fsr2h	equ	0xFDA
 25958                           fsr2l	equ	0xFD9
 25959                           status	equ	0xFD8
 25960                           
 25961 ;; *************** function _InitGprsNetwork *****************
 25962 ;; Defined at:
 25963 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 25964 ;; Parameters:    Size  Location     Type
 25965 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 25966 ;;		 -> NULL(0), 
 25967 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 25968 ;; Auto vars:     Size  Location     Type
 25969 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 25970 ;;  Index           1   50[BANK1 ] unsigned char 
 25971 ;; Return value:  Size  Location     Type
 25972 ;;                  1    wreg      enum E8906
 25973 ;; Registers used:
 25974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25975 ;; Tracked objects:
 25976 ;;		On entry : 0/0
 25977 ;;		On exit  : 0/0
 25978 ;;		Unchanged: 0/0
 25979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25980 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25981 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25982 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25983 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25984 ;;Total ram usage:       56 bytes
 25985 ;; Hardware stack levels used:    1
 25986 ;; Hardware stack levels required when called:   14
 25987 ;; This function calls:
 25988 ;;		_ClearBuffer
 25989 ;;		_OsTmr_GetTimerStatus
 25990 ;;		_OsTmr_StartTimer
 25991 ;;		_ReceiveEvt
 25992 ;;		_StringCopy
 25993 ;;		_Uart_WriteConstString
 25994 ;;		_Uart_WriteString
 25995 ;; This function is called by:
 25996 ;;		_MdmHttp_MainTask
 25997 ;; This function uses a non-reentrant model
 25998 ;;
 25999                           
 26000                           	psect	text119
 26001  000DC8                     __ptext119:
 26002                           	opt stack 0
 26003  000DC8                     _InitGprsNetwork:
 26004                           	opt stack 13
 26005                           
 26006                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 26007                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 26008                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 26009                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 26010                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 26011                           
 26012                           ;incstack = 0
 26013  000DC8  0E00               	movlw	0
 26014  000DCA  0101               	movlb	1	; () banked
 26015  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26016                           
 26017                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 26018  000DCE  D154               	goto	l1204
 26019  000DD0                     
 26020                           ; BSR set to: 1
 26021                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 26022                           
 26023                           ; BSR set to: 1
 26024  000DD0  0E37               	movlw	low _InitNetwork
 26025  000DD2  0100               	movlb	0	; () banked
 26026  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26027  000DD6  0E00               	movlw	high _InitNetwork
 26028  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26029  000DDA  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 26030  000DDE  0900               	iorlw	0
 26031  000DE0  B4D8               	btfsc	status,2,c
 26032  000DE2  D166               	goto	l1207
 26033                           
 26034                           ;mdm_gsm_gprs_http.c: 137: {
 26035                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 26036  000DE4  0E01               	movlw	1
 26037  000DE6  D141               	goto	L70
 26038  000DE8                     
 26039                           ; BSR set to: 1
 26040                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 26041                           
 26042                           ; BSR set to: 1
 26043  000DE8  0E94               	movlw	low STR_8
 26044  000DEA  0100               	movlb	0	; () banked
 26045  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26046  000DEE  0EFE               	movlw	high STR_8
 26047  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26048  000DF2  0E01               	movlw	1
 26049  000DF4  EC1A  F02C         	call	_Uart_WriteConstString
 26050                           
 26051                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 26052  000DF8  0E07               	movlw	7
 26053  000DFA  0101               	movlb	1	; () banked
 26054  000DFC  6FE6               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26055                           
 26056                           ; BSR set to: 1
 26057                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 26058  000DFE  0E02               	movlw	2
 26059  000E00  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26060                           
 26061                           ; BSR set to: 1
 26062                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 26063  000E02  0EF5               	movlw	low _ConnTimeout
 26064  000E04  0100               	movlb	0	; () banked
 26065  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26066  000E08  0E02               	movlw	high _ConnTimeout
 26067  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26068  000E0C  0E20               	movlw	32
 26069  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26070  000E10  0E4E               	movlw	78
 26071  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26072  000E14  0E00               	movlw	0
 26073  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26074  000E18  0E00               	movlw	0
 26075  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26076  000E1C  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 26077  000E20  D0C7               	goto	l13343
 26078  000E22                     
 26079                           ; BSR set to: 1
 26080                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 26081                           
 26082                           ; BSR set to: 1
 26083  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 26084  000E24  0100               	movlb	0	; () banked
 26085  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26086  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 26087  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26088  000E2C  0E00               	movlw	0
 26089  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26090  000E30  0E32               	movlw	50
 26091  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26092  000E34  EC6F  F02D         	call	_ClearBuffer	;wreg free
 26093                           
 26094                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 26095  000E38  0EC8               	movlw	low STR_9
 26096  000E3A  0100               	movlb	0	; () banked
 26097  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26098  000E3E  0EFE               	movlw	high STR_9
 26099  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26100  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 26101  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26102  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 26103  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26104  000E4A  0E00               	movlw	0
 26105  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26106  000E4E  0E14               	movlw	20
 26107  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 26108  000E52  ECFA  F027         	call	_StringCopy	;wreg free
 26109                           
 26110                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 26111  000E56  0E00               	movlw	0
 26112  000E58  0101               	movlb	1	; () banked
 26113  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26114  000E5C  D01C               	goto	l1210
 26115  000E5E                     
 26116                           ; BSR set to: 1
 26117                           ;mdm_gsm_gprs_http.c: 161: {
 26118                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 26119                           
 26120                           ; BSR set to: 1
 26121  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26122  000E60  0D01               	mullw	1
 26123  000E62  50F3               	movf	prodl,w,c
 26124  000E64  0100               	movlb	0	; () banked
 26125  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 26126  000E68  6ED9               	movwf	fsr2l,c
 26127  000E6A  50F4               	movf	prodh,w,c
 26128  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 26129  000E6E  6EDA               	movwf	fsr2h,c
 26130  000E70  0101               	movlb	1	; () banked
 26131  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26132  000E74  0100               	movlb	0	; () banked
 26133  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26134  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26135  000E7A  0E14               	movlw	20
 26136  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26137  000E7E  0E00               	movlw	0
 26138  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26139  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 26140  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26141  000E86  6EE1               	movwf	fsr1l,c
 26142  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 26143  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26144  000E8C  6EE2               	movwf	fsr1h,c
 26145  000E8E  CFDF FFE7          	movff	indf2,indf1
 26146                           
 26147                           ; BSR set to: 0
 26148  000E92  0101               	movlb	1	; () banked
 26149  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 26150  000E96                     l1210:
 26151                           
 26152                           ; BSR set to: 1
 26153                           
 26154                           ; BSR set to: 1
 26155  000E96  0100               	movlb	0	; () banked
 26156  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 26157  000E9A  0101               	movlb	1	; () banked
 26158  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 26159  000E9E  A0D8               	btfss	status,0,c
 26160  000EA0  D7DE               	goto	l1211
 26161                           
 26162                           ; BSR set to: 1
 26163                           ;mdm_gsm_gprs_http.c: 163: }
 26164                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 26165                           
 26166                           ; BSR set to: 1
 26167  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26168  000EA4  0100               	movlb	0	; () banked
 26169  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26170  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26171  000EAA  0E14               	movlw	20
 26172  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26173  000EAE  0E00               	movlw	0
 26174  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26175  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 26176  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26177  000EB6  6ED9               	movwf	fsr2l,c
 26178  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 26179  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26180  000EBC  6EDA               	movwf	fsr2h,c
 26181  000EBE  0E22               	movlw	34
 26182  000EC0  6EDF               	movwf	indf2,c
 26183                           
 26184                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 26185  000EC2  0101               	movlb	1	; () banked
 26186  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26187  000EC6  0100               	movlb	0	; () banked
 26188  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26189  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26190  000ECC  0E15               	movlw	21
 26191  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26192  000ED0  0E00               	movlw	0
 26193  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26194  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 26195  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26196  000ED8  6ED9               	movwf	fsr2l,c
 26197  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 26198  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26199  000EDE  6EDA               	movwf	fsr2h,c
 26200  000EE0  0E0D               	movlw	13
 26201  000EE2  6EDF               	movwf	indf2,c
 26202                           
 26203                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 26204  000EE4  0101               	movlb	1	; () banked
 26205  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26206  000EE8  0100               	movlb	0	; () banked
 26207  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26208  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26209  000EEE  0E16               	movlw	22
 26210  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26211  000EF2  0E00               	movlw	0
 26212  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26213  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 26214  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26215  000EFA  6ED9               	movwf	fsr2l,c
 26216  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 26217  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26218  000F00  6EDA               	movwf	fsr2h,c
 26219  000F02  0E00               	movlw	0
 26220  000F04  6EDF               	movwf	indf2,c
 26221                           
 26222                           ; BSR set to: 0
 26223                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 26224  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 26225  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 26226  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 26227  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 26228  000F0E  0E01               	movlw	1
 26229  000F10  ECDB  F02C         	call	_Uart_WriteString
 26230                           
 26231                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 26232  000F14  0E07               	movlw	7
 26233  000F16  0101               	movlb	1	; () banked
 26234  000F18  6FE6               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26235                           
 26236                           ; BSR set to: 1
 26237                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 26238  000F1A  0E03               	movlw	3
 26239  000F1C  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26240                           
 26241                           ; BSR set to: 1
 26242                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 26243  000F1E  0EF5               	movlw	low _ConnTimeout
 26244  000F20  0100               	movlb	0	; () banked
 26245  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26246  000F24  0E02               	movlw	high _ConnTimeout
 26247  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26248  000F28  0E20               	movlw	32
 26249  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26250  000F2C  0E4E               	movlw	78
 26251  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26252  000F30  0E00               	movlw	0
 26253  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26254  000F34  0E00               	movlw	0
 26255  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26256  000F38  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 26257  000F3C  D039               	goto	l13343
 26258  000F3E                     
 26259                           ; BSR set to: 1
 26260                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 26261                           
 26262                           ; BSR set to: 1
 26263  000F3E  0E56               	movlw	low STR_10
 26264  000F40  0100               	movlb	0	; () banked
 26265  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26266  000F44  0EFF               	movlw	high STR_10
 26267  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26268  000F48  0E01               	movlw	1
 26269  000F4A  EC1A  F02C         	call	_Uart_WriteConstString
 26270                           
 26271                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 26272  000F4E  0E07               	movlw	7
 26273  000F50  0101               	movlb	1	; () banked
 26274  000F52  6FE6               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26275                           
 26276                           ; BSR set to: 1
 26277                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 26278  000F54  0E05               	movlw	5
 26279  000F56  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26280                           
 26281                           ; BSR set to: 1
 26282                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 26283  000F58  0EF5               	movlw	low _ConnTimeout
 26284  000F5A  0100               	movlb	0	; () banked
 26285  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26286  000F5E  0E02               	movlw	high _ConnTimeout
 26287  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26288  000F62  0E20               	movlw	32
 26289  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26290  000F66  0E4E               	movlw	78
 26291  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26292  000F6A  0E00               	movlw	0
 26293  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26294  000F6E  0E00               	movlw	0
 26295  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26296  000F72  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 26297  000F76  D01C               	goto	l13343
 26298  000F78                     
 26299                           ; BSR set to: 1
 26300                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 26301                           
 26302                           ; BSR set to: 1
 26303  000F78  0E64               	movlw	low STR_11
 26304  000F7A  0100               	movlb	0	; () banked
 26305  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26306  000F7E  0EFF               	movlw	high STR_11
 26307  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26308  000F82  0E01               	movlw	1
 26309  000F84  EC1A  F02C         	call	_Uart_WriteConstString
 26310                           
 26311                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 26312  000F88  0E08               	movlw	8
 26313  000F8A  0101               	movlb	1	; () banked
 26314  000F8C  6FE6               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26315                           
 26316                           ; BSR set to: 1
 26317                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 26318  000F8E  0E05               	movlw	5
 26319  000F90  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26320                           
 26321                           ; BSR set to: 1
 26322                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 26323  000F92  0EF5               	movlw	low _ConnTimeout
 26324  000F94  0100               	movlb	0	; () banked
 26325  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26326  000F98  0E02               	movlw	high _ConnTimeout
 26327  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26328  000F9C  0E20               	movlw	32
 26329  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26330  000FA0  0E4E               	movlw	78
 26331  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26332  000FA4  0E00               	movlw	0
 26333  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26334  000FA8  0E00               	movlw	0
 26335  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26336  000FAC  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 26337  000FB0                     l13343:
 26338                           
 26339                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 26340  000FB0  0E01               	movlw	1
 26341  000FB2  0101               	movlb	1	; () banked
 26342  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26343                           
 26344                           ;mdm_gsm_gprs_http.c: 201: break;
 26345  000FB6  D07C               	goto	l1207
 26346  000FB8                     
 26347                           ; BSR set to: 1
 26348                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 26349                           
 26350                           ; BSR set to: 1
 26351  000FB8  0E02               	movlw	2
 26352  000FBA  D05A               	goto	L69
 26353  000FBC                     
 26354                           ; BSR set to: 1
 26355                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 26356                           
 26357                           ; BSR set to: 1
 26358  000FBC  0E3C               	movlw	low _NewStringReceived
 26359  000FBE  0100               	movlb	0	; () banked
 26360  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26361  000FC2  0E00               	movlw	high _NewStringReceived
 26362  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26363  000FC6  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 26364  000FCA  0900               	iorlw	0
 26365  000FCC  B4D8               	btfsc	status,2,c
 26366  000FCE  D018               	goto	l1217
 26367                           
 26368                           ;mdm_gsm_gprs_http.c: 212: {
 26369                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 26370  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 26371  000FD4  0A4F               	xorlw	79
 26372  000FD6  A4D8               	btfss	status,2,c
 26373  000FD8  D06B               	goto	l1207
 26374  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26375  000FDE  0A4B               	xorlw	75
 26376  000FE0  A4D8               	btfss	status,2,c
 26377  000FE2  D066               	goto	l1207
 26378                           
 26379                           ;mdm_gsm_gprs_http.c: 215: {
 26380                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 26381  000FE4  C02A  F1E6         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26382                           
 26383                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 26384  000FE8  0E58               	movlw	low _RxBuffer
 26385  000FEA  0100               	movlb	0	; () banked
 26386  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26387  000FEE  0E0C               	movlw	high _RxBuffer
 26388  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26389  000FF2  0E01               	movlw	1
 26390  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26391  000FF6  0E90               	movlw	144
 26392  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26393  000FFA  EC6F  F02D         	call	_ClearBuffer	;wreg free
 26394                           
 26395                           ;mdm_gsm_gprs_http.c: 220: }
 26396                           ;mdm_gsm_gprs_http.c: 221: }
 26397  000FFE  D058               	goto	l1207
 26398  001000                     l1217:
 26399                           
 26400                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26401  001000  0EF5               	movlw	low _ConnTimeout
 26402  001002  0100               	movlb	0	; () banked
 26403  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26404  001006  0E02               	movlw	high _ConnTimeout
 26405  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26406  00100A  EC67  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 26407  00100E  D029               	goto	L34
 26408  001010                     
 26409                           ; BSR set to: 1
 26410                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 26411                           
 26412                           ; BSR set to: 1
 26413  001010  0E3C               	movlw	low _NewStringReceived
 26414  001012  0100               	movlb	0	; () banked
 26415  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26416  001016  0E00               	movlw	high _NewStringReceived
 26417  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26418  00101A  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 26419  00101E  0900               	iorlw	0
 26420  001020  B4D8               	btfsc	status,2,c
 26421  001022  D018               	goto	l1222
 26422                           
 26423                           ;mdm_gsm_gprs_http.c: 232: {
 26424                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 26425  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 26426  001028  0A2B               	xorlw	43
 26427  00102A  A4D8               	btfss	status,2,c
 26428  00102C  D041               	goto	l1207
 26429  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26430  001032  0A53               	xorlw	83
 26431  001034  A4D8               	btfss	status,2,c
 26432  001036  D03C               	goto	l1207
 26433                           
 26434                           ;mdm_gsm_gprs_http.c: 235: {
 26435                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 26436  001038  C02A  F1E6         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26437                           
 26438                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 26439  00103C  0E58               	movlw	low _RxBuffer
 26440  00103E  0100               	movlb	0	; () banked
 26441  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26442  001042  0E0C               	movlw	high _RxBuffer
 26443  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26444  001046  0E01               	movlw	1
 26445  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26446  00104A  0E90               	movlw	144
 26447  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26448  00104E  EC6F  F02D         	call	_ClearBuffer	;wreg free
 26449                           
 26450                           ;mdm_gsm_gprs_http.c: 240: }
 26451                           ;mdm_gsm_gprs_http.c: 241: }
 26452  001052  D02E               	goto	l1207
 26453  001054                     l1222:
 26454                           
 26455                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26456  001054  0EF5               	movlw	low _ConnTimeout
 26457  001056  0100               	movlb	0	; () banked
 26458  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26459  00105A  0E02               	movlw	high _ConnTimeout
 26460  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26461  00105E  EC67  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 26462  001062                     L34:
 26463  001062  06E8               	decf	wreg,f,c
 26464  001064  A4D8               	btfss	status,2,c
 26465  001066  D024               	goto	l1207
 26466                           
 26467                           ;mdm_gsm_gprs_http.c: 243: {
 26468                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 26469  001068  0E06               	movlw	6
 26470  00106A                     L70:
 26471  00106A  0101               	movlb	1	; () banked
 26472  00106C  D003               	goto	L33
 26473  00106E                     
 26474                           ; BSR set to: 1
 26475                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 26476                           
 26477                           ; BSR set to: 1
 26478  00106E  0E03               	movlw	3
 26479  001070                     L69:
 26480  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26481                           
 26482                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 26483  001072  0E00               	movlw	0
 26484  001074                     L33:
 26485  001074  6FE6               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26486                           
 26487                           ; BSR set to: 1
 26488                           ;mdm_gsm_gprs_http.c: 257: }
 26489                           
 26490                           ; BSR set to: 1
 26491                           ;mdm_gsm_gprs_http.c: 256: break;
 26492                           
 26493                           ;mdm_gsm_gprs_http.c: 255: default:
 26494                           
 26495                           ;mdm_gsm_gprs_http.c: 253: break;
 26496  001076  D01C               	goto	l1207
 26497  001078                     l1204:
 26498                           
 26499                           ; BSR set to: 1
 26500                           
 26501                           ; BSR set to: 1
 26502  001078  51E6               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 26503                           
 26504                           ; Switch size 1, requested type "space"
 26505                           ; Number of cases is 9, Range of values is 0 to 8
 26506                           ; switch strategies available:
 26507                           ; Name         Instructions Cycles
 26508                           ; simple_byte           28    15 (average)
 26509                           ;	Chosen strategy is simple_byte
 26510  00107A  0A00               	xorlw	0	; case 0
 26511  00107C  B4D8               	btfsc	status,2,c
 26512  00107E  D6A8               	goto	l1205
 26513  001080  0A01               	xorlw	1	; case 1
 26514  001082  B4D8               	btfsc	status,2,c
 26515  001084  D6B1               	goto	l1208
 26516  001086  0A03               	xorlw	3	; case 2
 26517  001088  B4D8               	btfsc	status,2,c
 26518  00108A  D6CB               	goto	l1209
 26519  00108C  0A01               	xorlw	1	; case 3
 26520  00108E  B4D8               	btfsc	status,2,c
 26521  001090  D756               	goto	l1213
 26522  001092  0A07               	xorlw	7	; case 4
 26523  001094  B4D8               	btfsc	status,2,c
 26524  001096  D770               	goto	l1214
 26525  001098  0A01               	xorlw	1	; case 5
 26526  00109A  B4D8               	btfsc	status,2,c
 26527  00109C  D78D               	goto	l1215
 26528  00109E  0A03               	xorlw	3	; case 6
 26529  0010A0  B4D8               	btfsc	status,2,c
 26530  0010A2  D7E5               	goto	l1226
 26531  0010A4  0A01               	xorlw	1	; case 7
 26532  0010A6  B4D8               	btfsc	status,2,c
 26533  0010A8  D789               	goto	l1216
 26534  0010AA  0A0F               	xorlw	15	; case 8
 26535  0010AC  B4D8               	btfsc	status,2,c
 26536  0010AE  D7B0               	goto	l1221
 26537  0010B0                     l1207:
 26538                           
 26539                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 26540                           
 26541                           ; BSR set to: 1
 26542  0010B0  0101               	movlb	1	; () banked
 26543  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 26544  0010B4  0012               	return	
 26545  0010B6                     __end_of_InitGprsNetwork:
 26546                           	opt stack 0
 26547                           tosu	equ	0xFFF
 26548                           tosh	equ	0xFFE
 26549                           tosl	equ	0xFFD
 26550                           pclath	equ	0xFFA
 26551                           tblptru	equ	0xFF8
 26552                           tblptrh	equ	0xFF7
 26553                           tblptrl	equ	0xFF6
 26554                           tablat	equ	0xFF5
 26555                           prodh	equ	0xFF4
 26556                           prodl	equ	0xFF3
 26557                           intcon	equ	0xFF2
 26558                           intcon2	equ	0xFF1
 26559                           intcon3	equ	0xFF0
 26560                           indf0	equ	0xFEF
 26561                           postinc0	equ	0xFEE
 26562                           plusw0	equ	0xFEB
 26563                           fsr0h	equ	0xFEA
 26564                           fsr0l	equ	0xFE9
 26565                           wreg	equ	0xFE8
 26566                           indf1	equ	0xFE7
 26567                           postinc1	equ	0xFE6
 26568                           postdec1	equ	0xFE5
 26569                           plusw1	equ	0xFE3
 26570                           fsr1h	equ	0xFE2
 26571                           fsr1l	equ	0xFE1
 26572                           indf2	equ	0xFDF
 26573                           postinc2	equ	0xFDE
 26574                           postdec2	equ	0xFDD
 26575                           plusw2	equ	0xFDB
 26576                           fsr2h	equ	0xFDA
 26577                           fsr2l	equ	0xFD9
 26578                           status	equ	0xFD8
 26579                           
 26580 ;; *************** function _HttpGetMethod *****************
 26581 ;; Defined at:
 26582 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 26583 ;; Parameters:    Size  Location     Type
 26584 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 26585 ;;		 -> HttpGetDataLocal(5), 
 26586 ;; Auto vars:     Size  Location     Type
 26587 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 26588 ;;  Index           1  200[BANK1 ] unsigned char 
 26589 ;; Return value:  Size  Location     Type
 26590 ;;                  1    wreg      enum E8906
 26591 ;; Registers used:
 26592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26593 ;; Tracked objects:
 26594 ;;		On entry : 0/0
 26595 ;;		On exit  : 0/0
 26596 ;;		Unchanged: 0/0
 26597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26598 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26599 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26600 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26601 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26602 ;;Total ram usage:      207 bytes
 26603 ;; Hardware stack levels used:    1
 26604 ;; Hardware stack levels required when called:   14
 26605 ;; This function calls:
 26606 ;;		_ClearBuffer
 26607 ;;		_OsTmr_GetTimerStatus
 26608 ;;		_OsTmr_StartTimer
 26609 ;;		_ReceiveEvt
 26610 ;;		_StringCopy
 26611 ;;		_Uart_WriteConstString
 26612 ;;		_Uart_WriteString
 26613 ;; This function is called by:
 26614 ;;		_MdmHttp_MainTask
 26615 ;; This function uses a non-reentrant model
 26616 ;;
 26617                           
 26618                           	psect	text120
 26619  0005EC                     __ptext120:
 26620                           	opt stack 0
 26621  0005EC                     _HttpGetMethod:
 26622                           	opt stack 13
 26623                           
 26624                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 26625                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 26626                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 26627                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 26628                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 26629                           
 26630                           ; BSR set to: 1
 26631                           ;incstack = 0
 26632  0005EC  0E00               	movlw	0
 26633  0005EE  0101               	movlb	1	; () banked
 26634  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 26635                           
 26636                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 26637  0005F2  D230               	goto	l1237
 26638  0005F4                     
 26639                           ; BSR set to: 1
 26640                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 26641                           
 26642                           ; BSR set to: 1
 26643  0005F4  0EFD               	movlw	low _GetMethod
 26644  0005F6  0100               	movlb	0	; () banked
 26645  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26646  0005FA  0E01               	movlw	high _GetMethod
 26647  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26648  0005FE  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 26649  000602  0900               	iorlw	0
 26650  000604  B4D8               	btfsc	status,2,c
 26651  000606  D257               	goto	l1240
 26652                           
 26653                           ;mdm_gsm_gprs_http.c: 284: {
 26654                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 26655  000608  0E01               	movlw	1
 26656  00060A  D18C               	goto	L36
 26657  00060C                     
 26658                           ; BSR set to: 1
 26659                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 26660                           
 26661                           ; BSR set to: 1
 26662  00060C  0EA8               	movlw	low STR_12
 26663  00060E  0100               	movlb	0	; () banked
 26664  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26665  000612  0EFF               	movlw	high STR_12
 26666  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26667  000616  0E01               	movlw	1
 26668  000618  EC1A  F02C         	call	_Uart_WriteConstString
 26669                           
 26670                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 26671  00061C  0E0A               	movlw	10
 26672  00061E  0101               	movlb	1	; () banked
 26673  000620  6FE5               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26674                           
 26675                           ; BSR set to: 1
 26676                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 26677  000622  0E02               	movlw	2
 26678  000624  0100               	movlb	0	; () banked
 26679  000626  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26680                           
 26681                           ; BSR set to: 0
 26682                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 26683  000628  0EF5               	movlw	low _ConnTimeout
 26684  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26685  00062C  0E02               	movlw	high _ConnTimeout
 26686  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26687  000630  0E20               	movlw	32
 26688  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26689  000634  0E4E               	movlw	78
 26690  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26691  000638  0E00               	movlw	0
 26692  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26693  00063C  0E00               	movlw	0
 26694  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26695  000640  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 26696  000644  D1AF               	goto	l13509
 26697  000646                     
 26698                           ; BSR set to: 1
 26699                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 26700                           
 26701                           ; BSR set to: 1
 26702  000646  0E72               	movlw	low STR_13
 26703  000648  0100               	movlb	0	; () banked
 26704  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26705  00064C  0EFF               	movlw	high STR_13
 26706  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26707  000650  0E01               	movlw	1
 26708  000652  EC1A  F02C         	call	_Uart_WriteConstString
 26709                           
 26710                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 26711  000656  0E0A               	movlw	10
 26712  000658  0101               	movlb	1	; () banked
 26713  00065A  6FE5               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26714                           
 26715                           ; BSR set to: 1
 26716                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 26717  00065C  0E03               	movlw	3
 26718  00065E  0100               	movlb	0	; () banked
 26719  000660  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26720                           
 26721                           ; BSR set to: 0
 26722                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 26723  000662  0EF5               	movlw	low _ConnTimeout
 26724  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26725  000666  0E02               	movlw	high _ConnTimeout
 26726  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26727  00066A  0E20               	movlw	32
 26728  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26729  00066E  0E4E               	movlw	78
 26730  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26731  000672  0E00               	movlw	0
 26732  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26733  000676  0E00               	movlw	0
 26734  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26735  00067A  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 26736  00067E  D192               	goto	l13509
 26737  000680                     
 26738                           ; BSR set to: 1
 26739                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 26740                           
 26741                           ; BSR set to: 1
 26742  000680  0EB3               	movlw	low STR_14
 26743  000682  0100               	movlb	0	; () banked
 26744  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26745  000686  0EFE               	movlw	high STR_14
 26746  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26747  00068A  0E01               	movlw	1
 26748  00068C  EC1A  F02C         	call	_Uart_WriteConstString
 26749                           
 26750                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 26751  000690  0E0A               	movlw	10
 26752  000692  0101               	movlb	1	; () banked
 26753  000694  6FE5               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26754                           
 26755                           ; BSR set to: 1
 26756                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 26757  000696  0E04               	movlw	4
 26758  000698  0100               	movlb	0	; () banked
 26759  00069A  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26760                           
 26761                           ; BSR set to: 0
 26762                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 26763  00069C  0EF5               	movlw	low _ConnTimeout
 26764  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26765  0006A0  0E02               	movlw	high _ConnTimeout
 26766  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26767  0006A4  0E20               	movlw	32
 26768  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26769  0006A8  0E4E               	movlw	78
 26770  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26771  0006AC  0E00               	movlw	0
 26772  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26773  0006B0  0E00               	movlw	0
 26774  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26775  0006B4  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 26776  0006B8  D175               	goto	l13509
 26777  0006BA                     
 26778                           ; BSR set to: 1
 26779                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 26780                           
 26781                           ; BSR set to: 1
 26782  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 26783  0006BC  0100               	movlb	0	; () banked
 26784  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26785  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 26786  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26787  0006C4  0E00               	movlw	0
 26788  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26789  0006C8  0EC8               	movlw	200
 26790  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26791  0006CC  EC6F  F02D         	call	_ClearBuffer	;wreg free
 26792                           
 26793                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 26794  0006D0  0EF1               	movlw	low STR_15
 26795  0006D2  0100               	movlb	0	; () banked
 26796  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26797  0006D6  0EFE               	movlw	high STR_15
 26798  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26799  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 26800  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26801  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 26802  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26803  0006E2  0E00               	movlw	0
 26804  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26805  0006E6  0E13               	movlw	19
 26806  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 26807  0006EA  ECFA  F027         	call	_StringCopy	;wreg free
 26808                           
 26809                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 26810  0006EE  0E00               	movlw	0
 26811  0006F0  0101               	movlb	1	; () banked
 26812  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 26813  0006F4  D024               	goto	l1245
 26814  0006F6                     
 26815                           ; BSR set to: 1
 26816                           ;mdm_gsm_gprs_http.c: 332: {
 26817                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 26818                           
 26819                           ; BSR set to: 1
 26820  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26821  0006F8  0D01               	mullw	1
 26822  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 26823  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 26824  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 26825  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 26826  00070A  50F3               	movf	prodl,w,c
 26827  00070C  0100               	movlb	0	; () banked
 26828  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26829  000710  6ED9               	movwf	fsr2l,c
 26830  000712  50F4               	movf	prodh,w,c
 26831  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26832  000716  6EDA               	movwf	fsr2h,c
 26833  000718  0101               	movlb	1	; () banked
 26834  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26835  00071C  0100               	movlb	0	; () banked
 26836  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 26837  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 26838  000722  0E13               	movlw	19
 26839  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 26840  000726  0E00               	movlw	0
 26841  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 26842  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 26843  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 26844  00072E  6EE1               	movwf	fsr1l,c
 26845  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 26846  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 26847  000734  6EE2               	movwf	fsr1h,c
 26848  000736  CFDF FFE7          	movff	indf2,indf1
 26849                           
 26850                           ; BSR set to: 0
 26851  00073A  0101               	movlb	1	; () banked
 26852  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 26853  00073E                     l1245:
 26854                           
 26855                           ; BSR set to: 1
 26856                           
 26857                           ; BSR set to: 1
 26858  00073E  0100               	movlb	0	; () banked
 26859  000740  EE20 F002          	lfsr	2,2
 26860  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 26861  000746  26D9               	addwf	fsr2l,f,c
 26862  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 26863  00074A  22DA               	addwfc	fsr2h,f,c
 26864  00074C  50DE               	movf	postinc2,w,c
 26865  00074E  0101               	movlb	1	; () banked
 26866  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 26867  000752  A0D8               	btfss	status,0,c
 26868  000754  D7D0               	goto	l1246
 26869                           
 26870                           ; BSR set to: 1
 26871                           ;mdm_gsm_gprs_http.c: 334: }
 26872                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 26873                           
 26874                           ; BSR set to: 1
 26875  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26876  000758  0100               	movlb	0	; () banked
 26877  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26878  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26879  00075E  0E13               	movlw	19
 26880  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26881  000762  0E00               	movlw	0
 26882  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26883  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 26884  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26885  00076A  6ED9               	movwf	fsr2l,c
 26886  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 26887  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26888  000770  6EDA               	movwf	fsr2h,c
 26889  000772  0E22               	movlw	34
 26890  000774  6EDF               	movwf	indf2,c
 26891                           
 26892                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 26893  000776  0101               	movlb	1	; () banked
 26894  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26895  00077A  0100               	movlb	0	; () banked
 26896  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26897  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26898  000780  0E14               	movlw	20
 26899  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26900  000784  0E00               	movlw	0
 26901  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26902  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 26903  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26904  00078C  6ED9               	movwf	fsr2l,c
 26905  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 26906  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26907  000792  6EDA               	movwf	fsr2h,c
 26908  000794  0E0D               	movlw	13
 26909  000796  6EDF               	movwf	indf2,c
 26910                           
 26911                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 26912  000798  0101               	movlb	1	; () banked
 26913  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26914  00079C  0100               	movlb	0	; () banked
 26915  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26916  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26917  0007A2  0E15               	movlw	21
 26918  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26919  0007A6  0E00               	movlw	0
 26920  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26921  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 26922  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26923  0007AE  6ED9               	movwf	fsr2l,c
 26924  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 26925  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26926  0007B4  6EDA               	movwf	fsr2h,c
 26927  0007B6  0E00               	movlw	0
 26928  0007B8  6EDF               	movwf	indf2,c
 26929                           
 26930                           ; BSR set to: 0
 26931                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 26932  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 26933  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 26934  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 26935  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 26936  0007C2  0E01               	movlw	1
 26937  0007C4  ECDB  F02C         	call	_Uart_WriteString
 26938                           
 26939                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 26940  0007C8  0E0A               	movlw	10
 26941  0007CA  0101               	movlb	1	; () banked
 26942  0007CC  6FE5               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26943                           
 26944                           ; BSR set to: 1
 26945                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 26946  0007CE  0E05               	movlw	5
 26947  0007D0  0100               	movlb	0	; () banked
 26948  0007D2  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26949                           
 26950                           ; BSR set to: 0
 26951                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 26952  0007D4  0EF5               	movlw	low _ConnTimeout
 26953  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26954  0007D8  0E02               	movlw	high _ConnTimeout
 26955  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26956  0007DC  0E20               	movlw	32
 26957  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26958  0007E0  0E4E               	movlw	78
 26959  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26960  0007E4  0E00               	movlw	0
 26961  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26962  0007E8  0E00               	movlw	0
 26963  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26964  0007EC  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 26965  0007F0  D0D9               	goto	l13509
 26966  0007F2                     
 26967                           ; BSR set to: 1
 26968                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 26969                           
 26970                           ; BSR set to: 1
 26971  0007F2  0E29               	movlw	low STR_16
 26972  0007F4  0100               	movlb	0	; () banked
 26973  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26974  0007F8  0EFF               	movlw	high STR_16
 26975  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26976  0007FC  0E01               	movlw	1
 26977  0007FE  EC1A  F02C         	call	_Uart_WriteConstString
 26978                           
 26979                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 26980  000802  0E0A               	movlw	10
 26981  000804  0101               	movlb	1	; () banked
 26982  000806  6FE5               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26983                           
 26984                           ; BSR set to: 1
 26985                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 26986  000808  0E06               	movlw	6
 26987  00080A  0100               	movlb	0	; () banked
 26988  00080C  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26989                           
 26990                           ; BSR set to: 0
 26991                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 26992  00080E  0EF5               	movlw	low _ConnTimeout
 26993  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26994  000812  0E02               	movlw	high _ConnTimeout
 26995  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26996  000816  0E20               	movlw	32
 26997  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26998  00081A  0E4E               	movlw	78
 26999  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27000  00081E  0E00               	movlw	0
 27001  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27002  000822  0E00               	movlw	0
 27003  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27004  000826  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 27005                           
 27006                           ;mdm_gsm_gprs_http.c: 358: break;
 27007  00082A  D145               	goto	l1240
 27008  00082C                     
 27009                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 27010  00082C  0E07               	movlw	7
 27011  00082E  0101               	movlb	1	; () banked
 27012  000830  6FE5               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27013                           
 27014                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 27015  000832  0E09               	movlw	9
 27016  000834  0100               	movlb	0	; () banked
 27017  000836  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27018                           
 27019                           ; BSR set to: 0
 27020                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 27021  000838  0EF5               	movlw	low _ConnTimeout
 27022  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27023  00083C  0E02               	movlw	high _ConnTimeout
 27024  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27025  000840  0E20               	movlw	32
 27026  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27027  000844  0E4E               	movlw	78
 27028  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27029  000848  0E00               	movlw	0
 27030  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27031  00084C  0E00               	movlw	0
 27032  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27033  000850  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 27034                           
 27035                           ;mdm_gsm_gprs_http.c: 371: break;
 27036  000854  D130               	goto	l1240
 27037  000856                     
 27038                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 27039  000856  0E8E               	movlw	low STR_17
 27040  000858  0100               	movlb	0	; () banked
 27041  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27042  00085C  0EFF               	movlw	high STR_17
 27043  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27044  000860  0E01               	movlw	1
 27045  000862  EC1A  F02C         	call	_Uart_WriteConstString
 27046                           
 27047                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 27048  000866  0E0D               	movlw	13
 27049  000868  0101               	movlb	1	; () banked
 27050  00086A  6FE5               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27051                           
 27052                           ; BSR set to: 1
 27053                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 27054  00086C  0E09               	movlw	9
 27055  00086E  0100               	movlb	0	; () banked
 27056  000870  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27057                           
 27058                           ; BSR set to: 0
 27059                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 27060  000872  0EF5               	movlw	low _ConnTimeout
 27061  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27062  000876  0E02               	movlw	high _ConnTimeout
 27063  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27064  00087A  0E20               	movlw	32
 27065  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27066  00087E  0E4E               	movlw	78
 27067  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27068  000882  0E00               	movlw	0
 27069  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27070  000886  0E00               	movlw	0
 27071  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27072  00088A  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 27073  00088E  D08A               	goto	l13509
 27074  000890                     
 27075                           ; BSR set to: 1
 27076                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 27077                           
 27078                           ; BSR set to: 1
 27079  000890  0E9B               	movlw	low STR_18
 27080  000892  0100               	movlb	0	; () banked
 27081  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27082  000896  0EFF               	movlw	high STR_18
 27083  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27084  00089A  0E01               	movlw	1
 27085  00089C  EC1A  F02C         	call	_Uart_WriteConstString
 27086                           
 27087                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 27088  0008A0  0E0A               	movlw	10
 27089  0008A2  0101               	movlb	1	; () banked
 27090  0008A4  6FE5               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27091                           
 27092                           ; BSR set to: 1
 27093                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 27094  0008A6  0E0E               	movlw	14
 27095  0008A8  0100               	movlb	0	; () banked
 27096  0008AA  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27097                           
 27098                           ; BSR set to: 0
 27099                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 27100  0008AC  0EF5               	movlw	low _ConnTimeout
 27101  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27102  0008B0  0E02               	movlw	high _ConnTimeout
 27103  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27104  0008B4  0E20               	movlw	32
 27105  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27106  0008B8  0E4E               	movlw	78
 27107  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27108  0008BC  0E00               	movlw	0
 27109  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27110  0008C0  0E00               	movlw	0
 27111  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27112  0008C4  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 27113  0008C8  D06D               	goto	l13509
 27114  0008CA                     
 27115                           ; BSR set to: 1
 27116                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 27117                           
 27118                           ; BSR set to: 1
 27119  0008CA  0E3C               	movlw	low _NewStringReceived
 27120  0008CC  0100               	movlb	0	; () banked
 27121  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27122  0008D0  0E00               	movlw	high _NewStringReceived
 27123  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27124  0008D4  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 27125  0008D8  0900               	iorlw	0
 27126  0008DA  B4D8               	btfsc	status,2,c
 27127  0008DC  D018               	goto	l1253
 27128                           
 27129                           ;mdm_gsm_gprs_http.c: 400: {
 27130                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 27131  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 27132  0008E2  0A4F               	xorlw	79
 27133  0008E4  A4D8               	btfss	status,2,c
 27134  0008E6  D0E7               	goto	l1240
 27135  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27136  0008EC  0A4B               	xorlw	75
 27137  0008EE  A4D8               	btfss	status,2,c
 27138  0008F0  D0E2               	goto	l1240
 27139                           
 27140                           ;mdm_gsm_gprs_http.c: 403: {
 27141                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 27142  0008F2  C0D5  F1E5         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27143                           
 27144                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 27145  0008F6  0E58               	movlw	low _RxBuffer
 27146  0008F8  0100               	movlb	0	; () banked
 27147  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27148  0008FC  0E0C               	movlw	high _RxBuffer
 27149  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27150  000900  0E01               	movlw	1
 27151  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27152  000904  0E90               	movlw	144
 27153  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27154  000908  EC6F  F02D         	call	_ClearBuffer	;wreg free
 27155                           
 27156                           ;mdm_gsm_gprs_http.c: 408: }
 27157                           ;mdm_gsm_gprs_http.c: 409: }
 27158  00090C  D0D4               	goto	l1240
 27159  00090E                     l1253:
 27160                           
 27161                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27162  00090E  0EF5               	movlw	low _ConnTimeout
 27163  000910  0100               	movlb	0	; () banked
 27164  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27165  000914  0E02               	movlw	high _ConnTimeout
 27166  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27167  000918  EC67  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27168  00091C                     L37:
 27169  00091C  06E8               	decf	wreg,f,c
 27170  00091E  A4D8               	btfss	status,2,c
 27171  000920  D0CA               	goto	l1240
 27172                           
 27173                           ;mdm_gsm_gprs_http.c: 411: {
 27174                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 27175  000922  0E0F               	movlw	15
 27176  000924                     L36:
 27177  000924  0101               	movlb	1	; () banked
 27178  000926  6FE5               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27179                           
 27180                           ; BSR set to: 1
 27181                           ;mdm_gsm_gprs_http.c: 414: }
 27182                           ;mdm_gsm_gprs_http.c: 415: break;
 27183                           
 27184                           ; BSR set to: 1
 27185  000928  D0C6               	goto	l1240
 27186  00092A                     
 27187                           ; BSR set to: 1
 27188                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 27189                           
 27190                           ; BSR set to: 1
 27191  00092A  0E3C               	movlw	low _NewStringReceived
 27192  00092C  0100               	movlb	0	; () banked
 27193  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27194  000930  0E00               	movlw	high _NewStringReceived
 27195  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27196  000934  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 27197  000938  0900               	iorlw	0
 27198  00093A  B4D8               	btfsc	status,2,c
 27199  00093C  D018               	goto	l1258
 27200                           
 27201                           ;mdm_gsm_gprs_http.c: 420: {
 27202                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 27203  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 27204  000942  0A2B               	xorlw	43
 27205  000944  A4D8               	btfss	status,2,c
 27206  000946  D0B7               	goto	l1240
 27207  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27208  00094C  0A48               	xorlw	72
 27209  00094E  A4D8               	btfss	status,2,c
 27210  000950  D0B2               	goto	l1240
 27211                           
 27212                           ;mdm_gsm_gprs_http.c: 423: {
 27213                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 27214  000952  C0D5  F1E5         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27215                           
 27216                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 27217  000956  0E58               	movlw	low _RxBuffer
 27218  000958  0100               	movlb	0	; () banked
 27219  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27220  00095C  0E0C               	movlw	high _RxBuffer
 27221  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27222  000960  0E01               	movlw	1
 27223  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27224  000964  0E90               	movlw	144
 27225  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27226  000968  EC6F  F02D         	call	_ClearBuffer	;wreg free
 27227                           
 27228                           ;mdm_gsm_gprs_http.c: 428: }
 27229                           ;mdm_gsm_gprs_http.c: 429: }
 27230  00096C  D0A4               	goto	l1240
 27231  00096E                     l1258:
 27232                           
 27233                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27234  00096E  0EF5               	movlw	low _ConnTimeout
 27235  000970  0100               	movlb	0	; () banked
 27236  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27237  000974  0E02               	movlw	high _ConnTimeout
 27238  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27239  000978  EC67  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27240  00097C  D7CF               	goto	L37
 27241  00097E                     
 27242                           ; BSR set to: 1
 27243                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 27244                           
 27245                           ; BSR set to: 1
 27246  00097E  0E0C               	movlw	12
 27247  000980  6FE5               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27248                           
 27249                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 27250  000982  0E05               	movlw	5
 27251  000984  0100               	movlb	0	; () banked
 27252  000986  6FD5               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27253                           
 27254                           ; BSR set to: 0
 27255                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 27256  000988  0ED9               	movlw	low _ConnWait
 27257  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27258  00098C  0E03               	movlw	high _ConnWait
 27259  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27260  000990  0EE8               	movlw	232
 27261  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27262  000994  0E03               	movlw	3
 27263  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27264  000998  0E00               	movlw	0
 27265  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27266  00099C  0E00               	movlw	0
 27267  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27268  0009A0  EC5A  F028         	call	_OsTmr_StartTimer	;wreg free
 27269  0009A4                     l13509:
 27270                           
 27271                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 27272  0009A4  0E01               	movlw	1
 27273  0009A6  0101               	movlb	1	; () banked
 27274  0009A8  D053               	goto	L39
 27275  0009AA                     
 27276                           ; BSR set to: 1
 27277                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 27278                           
 27279                           ; BSR set to: 1
 27280  0009AA  0ED9               	movlw	low _ConnWait
 27281  0009AC  0100               	movlb	0	; () banked
 27282  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27283  0009B0  0E03               	movlw	high _ConnWait
 27284  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27285  0009B4  EC67  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27286  0009B8  06E8               	decf	wreg,f,c
 27287  0009BA  A4D8               	btfss	status,2,c
 27288  0009BC  D07C               	goto	l1240
 27289                           
 27290                           ;mdm_gsm_gprs_http.c: 450: {
 27291                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 27292  0009BE  C0D5  F1E5         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27293                           
 27294                           ;mdm_gsm_gprs_http.c: 453: }
 27295                           ;mdm_gsm_gprs_http.c: 454: break;
 27296  0009C2  D079               	goto	l1240
 27297  0009C4                     
 27298                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 27299  0009C4  0E3C               	movlw	low _NewStringReceived
 27300  0009C6  0100               	movlb	0	; () banked
 27301  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27302  0009CA  0E00               	movlw	high _NewStringReceived
 27303  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27304  0009CE  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 27305  0009D2  0900               	iorlw	0
 27306  0009D4  B4D8               	btfsc	status,2,c
 27307  0009D6  D02D               	goto	l1266
 27308                           
 27309                           ;mdm_gsm_gprs_http.c: 459: {
 27310                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 27311  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 27312  0009DC  0A2B               	xorlw	43
 27313  0009DE  A4D8               	btfss	status,2,c
 27314  0009E0  D06A               	goto	l1240
 27315  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27316  0009E6  0A48               	xorlw	72
 27317  0009E8  A4D8               	btfss	status,2,c
 27318  0009EA  D065               	goto	l1240
 27319                           
 27320                           ;mdm_gsm_gprs_http.c: 462: {
 27321                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 27322  0009EC  C0D5  F1E5         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27323                           
 27324                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 27325  0009F0  0E58               	movlw	low _RxBuffer
 27326  0009F2  0100               	movlb	0	; () banked
 27327  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27328  0009F6  0E0C               	movlw	high _RxBuffer
 27329  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27330  0009FA  EE20 F003          	lfsr	2,3
 27331  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 27332  000A00  26D9               	addwf	fsr2l,f,c
 27333  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 27334  000A04  22DA               	addwfc	fsr2h,f,c
 27335  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 27336  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 27337  000A0E  0E01               	movlw	1
 27338  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27339  000A12  0E90               	movlw	144
 27340  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 27341  000A16  ECFA  F027         	call	_StringCopy	;wreg free
 27342                           
 27343                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 27344  000A1A  0E58               	movlw	low _RxBuffer
 27345  000A1C  0100               	movlb	0	; () banked
 27346  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27347  000A20  0E0C               	movlw	high _RxBuffer
 27348  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27349  000A24  0E01               	movlw	1
 27350  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27351  000A28  0E90               	movlw	144
 27352  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27353  000A2C  EC6F  F02D         	call	_ClearBuffer	;wreg free
 27354                           
 27355                           ;mdm_gsm_gprs_http.c: 469: }
 27356                           ;mdm_gsm_gprs_http.c: 470: }
 27357  000A30  D042               	goto	l1240
 27358  000A32                     l1266:
 27359                           
 27360                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27361  000A32  0EF5               	movlw	low _ConnTimeout
 27362  000A34  0100               	movlb	0	; () banked
 27363  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27364  000A38  0E02               	movlw	high _ConnTimeout
 27365  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27366  000A3C  EC67  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27367  000A40  D76D               	goto	L37
 27368  000A42                     
 27369                           ; BSR set to: 1
 27370                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 27371                           
 27372                           ; BSR set to: 1
 27373  000A42  0E00               	movlw	0
 27374  000A44  6FE5               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27375                           
 27376                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 27377  000A46  0E02               	movlw	2
 27378  000A48  D003               	goto	L39
 27379  000A4A                     
 27380                           ; BSR set to: 1
 27381                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 27382                           
 27383                           ; BSR set to: 1
 27384  000A4A  0E00               	movlw	0
 27385  000A4C  6FE5               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27386                           
 27387                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 27388  000A4E  0E03               	movlw	3
 27389  000A50                     L39:
 27390  000A50  6FE4               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 27391                           
 27392                           ; BSR set to: 1
 27393                           ;mdm_gsm_gprs_http.c: 494: }
 27394                           
 27395                           ; BSR set to: 1
 27396                           ;mdm_gsm_gprs_http.c: 493: break;
 27397                           
 27398                           ;mdm_gsm_gprs_http.c: 492: default:
 27399                           
 27400                           ;mdm_gsm_gprs_http.c: 490: break;
 27401  000A52  D031               	goto	l1240
 27402  000A54                     l1237:
 27403                           
 27404                           ; BSR set to: 1
 27405                           
 27406                           ; BSR set to: 1
 27407  000A54  51E5               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 27408                           
 27409                           ; Switch size 1, requested type "space"
 27410                           ; Number of cases is 16, Range of values is 0 to 15
 27411                           ; switch strategies available:
 27412                           ; Name         Instructions Cycles
 27413                           ; simple_byte           49    25 (average)
 27414                           ;	Chosen strategy is simple_byte
 27415  000A56  0A00               	xorlw	0	; case 0
 27416  000A58  B4D8               	btfsc	status,2,c
 27417  000A5A  D5CC               	goto	l1238
 27418  000A5C  0A01               	xorlw	1	; case 1
 27419  000A5E  B4D8               	btfsc	status,2,c
 27420  000A60  D5D5               	goto	l1241
 27421  000A62  0A03               	xorlw	3	; case 2
 27422  000A64  B4D8               	btfsc	status,2,c
 27423  000A66  D5EF               	goto	l1242
 27424  000A68  0A01               	xorlw	1	; case 3
 27425  000A6A  B4D8               	btfsc	status,2,c
 27426  000A6C  D609               	goto	l1243
 27427  000A6E  0A07               	xorlw	7	; case 4
 27428  000A70  B4D8               	btfsc	status,2,c
 27429  000A72  D623               	goto	l1244
 27430  000A74  0A01               	xorlw	1	; case 5
 27431  000A76  B4D8               	btfsc	status,2,c
 27432  000A78  D6BC               	goto	l1248
 27433  000A7A  0A03               	xorlw	3	; case 6
 27434  000A7C  B4D8               	btfsc	status,2,c
 27435  000A7E  D6D6               	goto	l1249
 27436  000A80  0A01               	xorlw	1	; case 7
 27437  000A82  B4D8               	btfsc	status,2,c
 27438  000A84  D752               	goto	l1257
 27439  000A86  0A0F               	xorlw	15	; case 8
 27440  000A88  B4D8               	btfsc	status,2,c
 27441  000A8A  D6E5               	goto	l1250
 27442  000A8C  0A01               	xorlw	1	; case 9
 27443  000A8E  B4D8               	btfsc	status,2,c
 27444  000A90  D6FF               	goto	l1251
 27445  000A92  0A03               	xorlw	3	; case 10
 27446  000A94  B4D8               	btfsc	status,2,c
 27447  000A96  D719               	goto	l1252
 27448  000A98  0A01               	xorlw	1	; case 11
 27449  000A9A  B4D8               	btfsc	status,2,c
 27450  000A9C  D770               	goto	l1262
 27451  000A9E  0A07               	xorlw	7	; case 12
 27452  000AA0  B4D8               	btfsc	status,2,c
 27453  000AA2  D783               	goto	l1263
 27454  000AA4  0A01               	xorlw	1	; case 13
 27455  000AA6  B4D8               	btfsc	status,2,c
 27456  000AA8  D78D               	goto	l1265
 27457  000AAA  0A03               	xorlw	3	; case 14
 27458  000AAC  B4D8               	btfsc	status,2,c
 27459  000AAE  D7C9               	goto	l1270
 27460  000AB0  0A01               	xorlw	1	; case 15
 27461  000AB2  B4D8               	btfsc	status,2,c
 27462  000AB4  D7CA               	goto	l1271
 27463  000AB6                     l1240:
 27464                           
 27465                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 27466                           
 27467                           ; BSR set to: 1
 27468  000AB6  0101               	movlb	1	; () banked
 27469  000AB8  51E4               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 27470  000ABA  0012               	return	
 27471  000ABC                     __end_of_HttpGetMethod:
 27472                           	opt stack 0
 27473                           tosu	equ	0xFFF
 27474                           tosh	equ	0xFFE
 27475                           tosl	equ	0xFFD
 27476                           pclath	equ	0xFFA
 27477                           tblptru	equ	0xFF8
 27478                           tblptrh	equ	0xFF7
 27479                           tblptrl	equ	0xFF6
 27480                           tablat	equ	0xFF5
 27481                           prodh	equ	0xFF4
 27482                           prodl	equ	0xFF3
 27483                           intcon	equ	0xFF2
 27484                           intcon2	equ	0xFF1
 27485                           intcon3	equ	0xFF0
 27486                           indf0	equ	0xFEF
 27487                           postinc0	equ	0xFEE
 27488                           plusw0	equ	0xFEB
 27489                           fsr0h	equ	0xFEA
 27490                           fsr0l	equ	0xFE9
 27491                           wreg	equ	0xFE8
 27492                           indf1	equ	0xFE7
 27493                           postinc1	equ	0xFE6
 27494                           postdec1	equ	0xFE5
 27495                           plusw1	equ	0xFE3
 27496                           fsr1h	equ	0xFE2
 27497                           fsr1l	equ	0xFE1
 27498                           indf2	equ	0xFDF
 27499                           postinc2	equ	0xFDE
 27500                           postdec2	equ	0xFDD
 27501                           plusw2	equ	0xFDB
 27502                           fsr2h	equ	0xFDA
 27503                           fsr2l	equ	0xFD9
 27504                           status	equ	0xFD8
 27505                           
 27506 ;; *************** function _Uart_WriteString *****************
 27507 ;; Defined at:
 27508 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27509 ;; Parameters:    Size  Location     Type
 27510 ;;  Module          1    wreg     unsigned char 
 27511 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 27512 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 27513 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 27514 ;; Auto vars:     Size  Location     Type
 27515 ;;  Module          1   34[BANK0 ] unsigned char 
 27516 ;; Return value:  Size  Location     Type
 27517 ;;                  1    wreg      void 
 27518 ;; Registers used:
 27519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27520 ;; Tracked objects:
 27521 ;;		On entry : 0/0
 27522 ;;		On exit  : 0/0
 27523 ;;		Unchanged: 0/0
 27524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27525 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27526 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27528 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27529 ;;Total ram usage:        3 bytes
 27530 ;; Hardware stack levels used:    1
 27531 ;; Hardware stack levels required when called:   12
 27532 ;; This function calls:
 27533 ;;		_UartTxBufferStatus
 27534 ;;		_UartWriteByte
 27535 ;; This function is called by:
 27536 ;;		_Mdm_SetSmsFormat
 27537 ;;		_InitGprsNetwork
 27538 ;;		_HttpGetMethod
 27539 ;;		_Mdm_PinUnlock
 27540 ;;		_Mdm_MakePhoneCall
 27541 ;; This function uses a non-reentrant model
 27542 ;;
 27543                           
 27544                           	psect	text121
 27545  0059B6                     __ptext121:
 27546                           	opt stack 0
 27547  0059B6                     _Uart_WriteString:
 27548                           	opt stack 13
 27549                           
 27550                           ; BSR set to: 1
 27551                           ;incstack = 0
 27552                           ;Uart_WriteString@Module stored from wreg
 27553  0059B6  0100               	movlb	0	; () banked
 27554  0059B8  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 27555                           
 27556                           ;uart_drv.c: 521: while (*StringToWrite)
 27557  0059BA  D014               	goto	u10890
 27558  0059BC                     
 27559                           ;uart_drv.c: 522: {
 27560                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 27561  0059BC  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 27562  0059C0  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 27563  0059C4  50DF               	movf	indf2,w,c
 27564  0059C6  0100               	movlb	0	; () banked
 27565  0059C8  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 27566  0059CA  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 27567  0059CC  EC89  F02F         	call	_UartWriteByte
 27568                           
 27569                           ;uart_drv.c: 526: StringToWrite++;
 27570  0059D0  0100               	movlb	0	; () banked
 27571  0059D2  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 27572  0059D4  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 27573  0059D6                     
 27574                           ; BSR set to: 0
 27575                           
 27576                           ; BSR set to: 0
 27577  0059D6  0100               	movlb	0	; () banked
 27578  0059D8  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 27579  0059DA  ECB1  F02A         	call	_UartTxBufferStatus
 27580  0059DE  06E8               	decf	wreg,f,c
 27581  0059E0  B4D8               	btfsc	status,2,c
 27582  0059E2  D7F9               	goto	l709
 27583  0059E4                     u10890:
 27584  0059E4  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 27585  0059E8  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 27586  0059EC  50DF               	movf	indf2,w,c
 27587  0059EE  B4D8               	btfsc	status,2,c
 27588  0059F0  0012               	return	
 27589  0059F2  D7E4               	goto	l707
 27590  0059F4                     __end_of_Uart_WriteString:
 27591                           	opt stack 0
 27592                           tosu	equ	0xFFF
 27593                           tosh	equ	0xFFE
 27594                           tosl	equ	0xFFD
 27595                           pclath	equ	0xFFA
 27596                           tblptru	equ	0xFF8
 27597                           tblptrh	equ	0xFF7
 27598                           tblptrl	equ	0xFF6
 27599                           tablat	equ	0xFF5
 27600                           prodh	equ	0xFF4
 27601                           prodl	equ	0xFF3
 27602                           intcon	equ	0xFF2
 27603                           intcon2	equ	0xFF1
 27604                           intcon3	equ	0xFF0
 27605                           indf0	equ	0xFEF
 27606                           postinc0	equ	0xFEE
 27607                           plusw0	equ	0xFEB
 27608                           fsr0h	equ	0xFEA
 27609                           fsr0l	equ	0xFE9
 27610                           wreg	equ	0xFE8
 27611                           indf1	equ	0xFE7
 27612                           postinc1	equ	0xFE6
 27613                           postdec1	equ	0xFE5
 27614                           plusw1	equ	0xFE3
 27615                           fsr1h	equ	0xFE2
 27616                           fsr1l	equ	0xFE1
 27617                           indf2	equ	0xFDF
 27618                           postinc2	equ	0xFDE
 27619                           postdec2	equ	0xFDD
 27620                           plusw2	equ	0xFDB
 27621                           fsr2h	equ	0xFDA
 27622                           fsr2l	equ	0xFD9
 27623                           status	equ	0xFD8
 27624                           
 27625 ;; *************** function _Uart_WriteConstString *****************
 27626 ;; Defined at:
 27627 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27628 ;; Parameters:    Size  Location     Type
 27629 ;;  Module          1    wreg     unsigned char 
 27630 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 27631 ;;		 -> STR_30(14), STR_29(19), STR_20(14), STR_19(14), 
 27632 ;;		 -> STR_18(13), STR_17(13), STR_16(17), STR_14(21), 
 27633 ;;		 -> STR_13(14), STR_12(13), STR_11(14), STR_10(14), 
 27634 ;;		 -> STR_8(31), STR_7(5), STR_6(5), STR_4(12), 
 27635 ;;		 -> STR_3(7), STR_2(14), STR_1(5), 
 27636 ;; Auto vars:     Size  Location     Type
 27637 ;;  Module          1   34[BANK0 ] unsigned char 
 27638 ;; Return value:  Size  Location     Type
 27639 ;;                  1    wreg      void 
 27640 ;; Registers used:
 27641 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27642 ;; Tracked objects:
 27643 ;;		On entry : 0/0
 27644 ;;		On exit  : 0/0
 27645 ;;		Unchanged: 0/0
 27646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27647 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27650 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27651 ;;Total ram usage:        3 bytes
 27652 ;; Hardware stack levels used:    1
 27653 ;; Hardware stack levels required when called:   12
 27654 ;; This function calls:
 27655 ;;		_UartTxBufferStatus
 27656 ;;		_UartWriteByte
 27657 ;; This function is called by:
 27658 ;;		_CheckModem
 27659 ;;		_ConfigureModem
 27660 ;;		_GetSmsSm
 27661 ;;		_InitGprsNetwork
 27662 ;;		_HttpGetMethod
 27663 ;;		_initGprsModem
 27664 ;;		_MyApp_Task
 27665 ;;		_Mdm_HangPhoneCall
 27666 ;;		_Mdm_GetPhoneCall
 27667 ;;		_MdmHttp_SetSsl
 27668 ;; This function uses a non-reentrant model
 27669 ;;
 27670                           
 27671                           	psect	text122
 27672  005834                     __ptext122:
 27673                           	opt stack 0
 27674  005834                     _Uart_WriteConstString:
 27675                           	opt stack 14
 27676                           
 27677                           ;incstack = 0
 27678                           ;Uart_WriteConstString@Module stored from wreg
 27679  005834  0100               	movlb	0	; () banked
 27680  005836  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 27681                           
 27682                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 27683  005838  D015               	goto	u11490
 27684  00583A                     
 27685                           ;uart_drv.c: 500: {
 27686                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 27687  00583A  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 27688  00583E  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 27689  005842                     	if	0	;tblptru may be non-zero
 27690  005842                     	endif
 27691  005842                     	if	0	;tblptru may be non-zero
 27692  005842                     	endif
 27693  005842  0008               	tblrd		*
 27694  005844  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 27695  005848  0100               	movlb	0	; () banked
 27696  00584A  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 27697  00584C  EC89  F02F         	call	_UartWriteByte
 27698                           
 27699                           ;uart_drv.c: 504: ConstStringToWrite++;
 27700  005850  0100               	movlb	0	; () banked
 27701  005852  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 27702  005854  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 27703  005856                     
 27704                           ; BSR set to: 0
 27705                           
 27706                           ; BSR set to: 0
 27707  005856  0100               	movlb	0	; () banked
 27708  005858  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 27709  00585A  ECB1  F02A         	call	_UartTxBufferStatus
 27710  00585E  06E8               	decf	wreg,f,c
 27711  005860  B4D8               	btfsc	status,2,c
 27712  005862  D7F9               	goto	l700
 27713  005864                     u11490:
 27714  005864  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 27715  005868  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 27716  00586C                     	if	0	;tblptru may be non-zero
 27717  00586C                     	endif
 27718  00586C                     	if	0	;tblptru may be non-zero
 27719  00586C                     	endif
 27720  00586C  0008               	tblrd		*
 27721  00586E  50F5               	movf	tablat,w,c
 27722  005870  0900               	iorlw	0
 27723  005872  B4D8               	btfsc	status,2,c
 27724  005874  0012               	return	
 27725  005876  D7E1               	goto	l698
 27726  005878                     __end_of_Uart_WriteConstString:
 27727                           	opt stack 0
 27728                           tosu	equ	0xFFF
 27729                           tosh	equ	0xFFE
 27730                           tosl	equ	0xFFD
 27731                           pclath	equ	0xFFA
 27732                           tblptru	equ	0xFF8
 27733                           tblptrh	equ	0xFF7
 27734                           tblptrl	equ	0xFF6
 27735                           tablat	equ	0xFF5
 27736                           prodh	equ	0xFF4
 27737                           prodl	equ	0xFF3
 27738                           intcon	equ	0xFF2
 27739                           intcon2	equ	0xFF1
 27740                           intcon3	equ	0xFF0
 27741                           indf0	equ	0xFEF
 27742                           postinc0	equ	0xFEE
 27743                           plusw0	equ	0xFEB
 27744                           fsr0h	equ	0xFEA
 27745                           fsr0l	equ	0xFE9
 27746                           wreg	equ	0xFE8
 27747                           indf1	equ	0xFE7
 27748                           postinc1	equ	0xFE6
 27749                           postdec1	equ	0xFE5
 27750                           plusw1	equ	0xFE3
 27751                           fsr1h	equ	0xFE2
 27752                           fsr1l	equ	0xFE1
 27753                           indf2	equ	0xFDF
 27754                           postinc2	equ	0xFDE
 27755                           postdec2	equ	0xFDD
 27756                           plusw2	equ	0xFDB
 27757                           fsr2h	equ	0xFDA
 27758                           fsr2l	equ	0xFD9
 27759                           status	equ	0xFD8
 27760                           
 27761 ;; *************** function _UartWriteByte *****************
 27762 ;; Defined at:
 27763 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27764 ;; Parameters:    Size  Location     Type
 27765 ;;  Module          1    wreg     unsigned char 
 27766 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 27767 ;; Auto vars:     Size  Location     Type
 27768 ;;  Module          1   30[BANK0 ] unsigned char 
 27769 ;; Return value:  Size  Location     Type
 27770 ;;                  1    wreg      void 
 27771 ;; Registers used:
 27772 ;;		wreg, status,2, status,0
 27773 ;; Tracked objects:
 27774 ;;		On entry : 0/0
 27775 ;;		On exit  : 0/0
 27776 ;;		Unchanged: 0/0
 27777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27778 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27779 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27781 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27782 ;;Total ram usage:        2 bytes
 27783 ;; Hardware stack levels used:    1
 27784 ;; Hardware stack levels required when called:   11
 27785 ;; This function calls:
 27786 ;;		Nothing
 27787 ;; This function is called by:
 27788 ;;		_Uart_WriteConstString
 27789 ;;		_Uart_WriteString
 27790 ;;		_Uart_WriteStringLen
 27791 ;; This function uses a non-reentrant model
 27792 ;;
 27793                           
 27794                           	psect	text123
 27795  005F12                     __ptext123:
 27796                           	opt stack 0
 27797  005F12                     _UartWriteByte:
 27798                           	opt stack 14
 27799                           
 27800                           ;incstack = 0
 27801                           ;UartWriteByte@Module stored from wreg
 27802  005F12  0100               	movlb	0	; () banked
 27803  005F14  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 27804                           
 27805                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 27806  005F16  0100               	movlb	0	; () banked
 27807  005F18  057E               	decf	UartWriteByte@Module& (0+255),w,b
 27808  005F1A  A4D8               	btfss	status,2,c
 27809  005F1C  D003               	goto	l639
 27810                           
 27811                           ; BSR set to: 0
 27812                           ;uart_drv.c: 176: {
 27813                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 27814  005F1E  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 27815                           
 27816                           ;uart_drv.c: 179: }
 27817  005F22  0012               	return	
 27818  005F24                     l639:
 27819                           
 27820                           ; BSR set to: 0
 27821                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 27822                           
 27823                           ; BSR set to: 0
 27824  005F24  0E02               	movlw	2
 27825  005F26  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 27826  005F28  A4D8               	btfss	status,2,c
 27827  005F2A  0012               	return	
 27828                           
 27829                           ; BSR set to: 0
 27830                           ;uart_drv.c: 181: {
 27831                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 27832  005F2C  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 27833                           
 27834                           ; BSR set to: 0
 27835  005F30  0012               	return	
 27836  005F32                     __end_of_UartWriteByte:
 27837                           	opt stack 0
 27838                           tosu	equ	0xFFF
 27839                           tosh	equ	0xFFE
 27840                           tosl	equ	0xFFD
 27841                           pclath	equ	0xFFA
 27842                           tblptru	equ	0xFF8
 27843                           tblptrh	equ	0xFF7
 27844                           tblptrl	equ	0xFF6
 27845                           tablat	equ	0xFF5
 27846                           prodh	equ	0xFF4
 27847                           prodl	equ	0xFF3
 27848                           intcon	equ	0xFF2
 27849                           intcon2	equ	0xFF1
 27850                           intcon3	equ	0xFF0
 27851                           indf0	equ	0xFEF
 27852                           postinc0	equ	0xFEE
 27853                           plusw0	equ	0xFEB
 27854                           fsr0h	equ	0xFEA
 27855                           fsr0l	equ	0xFE9
 27856                           wreg	equ	0xFE8
 27857                           indf1	equ	0xFE7
 27858                           postinc1	equ	0xFE6
 27859                           postdec1	equ	0xFE5
 27860                           plusw1	equ	0xFE3
 27861                           fsr1h	equ	0xFE2
 27862                           fsr1l	equ	0xFE1
 27863                           indf2	equ	0xFDF
 27864                           postinc2	equ	0xFDE
 27865                           postdec2	equ	0xFDD
 27866                           plusw2	equ	0xFDB
 27867                           fsr2h	equ	0xFDA
 27868                           fsr2l	equ	0xFD9
 27869                           status	equ	0xFD8
 27870                           
 27871 ;; *************** function _UartTxBufferStatus *****************
 27872 ;; Defined at:
 27873 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27874 ;; Parameters:    Size  Location     Type
 27875 ;;  Module          1    wreg     unsigned char 
 27876 ;; Auto vars:     Size  Location     Type
 27877 ;;  Module          1   30[BANK0 ] unsigned char 
 27878 ;;  TxBufferStat    1   31[BANK0 ] enum E9018
 27879 ;; Return value:  Size  Location     Type
 27880 ;;                  1    wreg      enum E9018
 27881 ;; Registers used:
 27882 ;;		wreg, status,2, status,0
 27883 ;; Tracked objects:
 27884 ;;		On entry : 0/0
 27885 ;;		On exit  : 0/0
 27886 ;;		Unchanged: 0/0
 27887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27889 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27890 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27891 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27892 ;;Total ram usage:        3 bytes
 27893 ;; Hardware stack levels used:    1
 27894 ;; Hardware stack levels required when called:   11
 27895 ;; This function calls:
 27896 ;;		Nothing
 27897 ;; This function is called by:
 27898 ;;		_Uart_WriteConstString
 27899 ;;		_Uart_WriteString
 27900 ;;		_Uart_WriteStringLen
 27901 ;; This function uses a non-reentrant model
 27902 ;;
 27903                           
 27904                           	psect	text124
 27905  005562                     __ptext124:
 27906                           	opt stack 0
 27907  005562                     _UartTxBufferStatus:
 27908                           	opt stack 14
 27909                           
 27910                           ; BSR set to: 0
 27911                           ;incstack = 0
 27912                           ;UartTxBufferStatus@Module stored from wreg
 27913  005562  0100               	movlb	0	; () banked
 27914  005564  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 27915                           
 27916                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 27917  005566  0E00               	movlw	0
 27918  005568  0100               	movlb	0	; () banked
 27919  00556A  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 27920                           
 27921                           ; BSR set to: 0
 27922                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 27923  00556C  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 27924  00556E  A4D8               	btfss	status,2,c
 27925  005570  D00B               	goto	l651
 27926                           
 27927                           ; BSR set to: 0
 27928                           ;uart_drv.c: 228: {
 27929                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 27930  005572  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 27931  005576  90D8               	bcf	status,0,c
 27932  005578  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27933  00557A  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 27934  00557C  D002               	goto	l652
 27935  00557E                     u10510:
 27936                           
 27937                           ; BSR set to: 0
 27938                           ;uart_drv.c: 231: {
 27939                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 27940  00557E  0E01               	movlw	1
 27941  005580  D014               	goto	L42
 27942  005582                     l652:
 27943                           
 27944                           ; BSR set to: 0
 27945                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 27946                           
 27947                           ; BSR set to: 0
 27948  005582  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 27949  005586  D00C               	goto	L71
 27950  005588                     l651:
 27951                           
 27952                           ; BSR set to: 0
 27953                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 27954                           
 27955                           ; BSR set to: 0
 27956  005588  0E02               	movlw	2
 27957  00558A  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 27958  00558C  A4D8               	btfss	status,2,c
 27959  00558E  D00E               	goto	l660
 27960                           
 27961                           ; BSR set to: 0
 27962                           ;uart_drv.c: 244: {
 27963                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 27964  005590  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 27965  005594  90D8               	bcf	status,0,c
 27966  005596  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27967  005598  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 27968  00559A  D7F1               	goto	u10510
 27969                           
 27970                           ; BSR set to: 0
 27971                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 27972                           
 27973                           ; BSR set to: 0
 27974                           
 27975                           ;uart_drv.c: 249: }
 27976                           
 27977                           ; BSR set to: 0
 27978                           ;uart_drv.c: 247: {
 27979                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 27980  00559C  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 27981  0055A0                     L71:
 27982  0055A0  90D8               	bcf	status,0,c
 27983  0055A2  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27984  0055A4  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 27985  0055A6  D002               	goto	l660
 27986                           
 27987                           ; BSR set to: 0
 27988                           ;uart_drv.c: 251: {
 27989                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 27990  0055A8  0E02               	movlw	2
 27991  0055AA                     L42:
 27992  0055AA  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 27993  0055AC                     l660:
 27994                           
 27995                           ; BSR set to: 0
 27996                           ;uart_drv.c: 257: }
 27997                           ;uart_drv.c: 258: }
 27998                           ;uart_drv.c: 260: return TxBufferStatus;
 27999                           
 28000                           ; BSR set to: 0
 28001                           
 28002                           ; BSR set to: 0
 28003                           
 28004                           ; BSR set to: 0
 28005                           
 28006                           ; BSR set to: 0
 28007                           
 28008                           ;uart_drv.c: 254: else
 28009                           ;uart_drv.c: 255: {
 28010                           
 28011                           ; BSR set to: 0
 28012  0055AC  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 28013  0055AE  0012               	return	
 28014  0055B0                     __end_of_UartTxBufferStatus:
 28015                           	opt stack 0
 28016                           tosu	equ	0xFFF
 28017                           tosh	equ	0xFFE
 28018                           tosl	equ	0xFFD
 28019                           pclath	equ	0xFFA
 28020                           tblptru	equ	0xFF8
 28021                           tblptrh	equ	0xFF7
 28022                           tblptrl	equ	0xFF6
 28023                           tablat	equ	0xFF5
 28024                           prodh	equ	0xFF4
 28025                           prodl	equ	0xFF3
 28026                           intcon	equ	0xFF2
 28027                           intcon2	equ	0xFF1
 28028                           intcon3	equ	0xFF0
 28029                           indf0	equ	0xFEF
 28030                           postinc0	equ	0xFEE
 28031                           plusw0	equ	0xFEB
 28032                           fsr0h	equ	0xFEA
 28033                           fsr0l	equ	0xFE9
 28034                           wreg	equ	0xFE8
 28035                           indf1	equ	0xFE7
 28036                           postinc1	equ	0xFE6
 28037                           postdec1	equ	0xFE5
 28038                           plusw1	equ	0xFE3
 28039                           fsr1h	equ	0xFE2
 28040                           fsr1l	equ	0xFE1
 28041                           indf2	equ	0xFDF
 28042                           postinc2	equ	0xFDE
 28043                           postdec2	equ	0xFDD
 28044                           plusw2	equ	0xFDB
 28045                           fsr2h	equ	0xFDA
 28046                           fsr2l	equ	0xFD9
 28047                           status	equ	0xFD8
 28048                           
 28049 ;; *************** function _StringCopy *****************
 28050 ;; Defined at:
 28051 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28052 ;; Parameters:    Size  Location     Type
 28053 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 28054 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 28055 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(132), RxBuffer(400), 
 28056 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 28057 ;;		 -> MyApp_Task@smsNumber(14), MyApp_Task@smsText(50), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50
      +), 
 28058 ;;		 -> MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(132), 
 28059 ;;  Len             2   33[BANK0 ] unsigned short 
 28060 ;; Auto vars:     Size  Location     Type
 28061 ;;  Index           2   37[BANK0 ] unsigned short 
 28062 ;; Return value:  Size  Location     Type
 28063 ;;                  1    wreg      void 
 28064 ;; Registers used:
 28065 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28066 ;; Tracked objects:
 28067 ;;		On entry : 0/0
 28068 ;;		On exit  : 0/0
 28069 ;;		Unchanged: 0/0
 28070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28071 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28072 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28073 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28074 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28075 ;;Total ram usage:       10 bytes
 28076 ;; Hardware stack levels used:    1
 28077 ;; Hardware stack levels required when called:   11
 28078 ;; This function calls:
 28079 ;;		Nothing
 28080 ;; This function is called by:
 28081 ;;		_GetSmsSm
 28082 ;;		_SendSmsSm
 28083 ;;		_Mdm_GetSmsData
 28084 ;;		_InitGprsNetwork
 28085 ;;		_HttpGetMethod
 28086 ;;		_Mdm_SendSmsData
 28087 ;; This function uses a non-reentrant model
 28088 ;;
 28089                           
 28090                           	psect	text125
 28091  004FF4                     __ptext125:
 28092                           	opt stack 0
 28093  004FF4                     _StringCopy:
 28094                           	opt stack 15
 28095                           
 28096                           ;sf.c: 106: UINT16 Index = 0;
 28097                           
 28098                           ; BSR set to: 0
 28099                           ;incstack = 0
 28100  004FF4  0E00               	movlw	0
 28101  004FF6  0100               	movlb	0	; () banked
 28102  004FF8  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 28103  004FFA  0E00               	movlw	0
 28104  004FFC  6F85               	movwf	StringCopy@Index& (0+255),b
 28105                           
 28106                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 28107  004FFE  0E00               	movlw	0
 28108  005000  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 28109  005002  0E00               	movlw	0
 28110  005004  6F85               	movwf	StringCopy@Index& (0+255),b
 28111  005006  D020               	goto	l2206
 28112  005008                     
 28113                           ; BSR set to: 0
 28114                           ;sf.c: 110: {
 28115                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 28116                           
 28117                           ; BSR set to: 0
 28118  005008  5185               	movf	StringCopy@Index& (0+255),w,b
 28119  00500A  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 28120  00500C  6F83               	movwf	??_StringCopy& (0+255),b
 28121  00500E  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 28122  005010  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 28123  005012  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 28124  005014  C083  FFF6         	movff	??_StringCopy,tblptrl
 28125  005018  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 28126  00501C  6AF8               	clrf	tblptru,c
 28127  00501E  5185               	movf	StringCopy@Index& (0+255),w,b
 28128  005020  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 28129  005022  6ED9               	movwf	fsr2l,c
 28130  005024  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 28131  005026  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 28132  005028  6EDA               	movwf	fsr2h,c
 28133  00502A  0E0E               	movlw	(high __ramtop+-1)
 28134  00502C  64F7               	cpfsgt	tblptrh,c
 28135  00502E  D003               	bra	u11567
 28136  005030  0008               	tblrd		*
 28137  005032  50F5               	movf	tablat,w,c
 28138  005034  D005               	bra	u11560
 28139  005036                     u11567:
 28140  005036  CFF6 FFE9          	movff	tblptrl,fsr0l
 28141  00503A  CFF7 FFEA          	movff	tblptrh,fsr0h
 28142  00503E  50EF               	movf	indf0,w,c
 28143  005040                     u11560:
 28144  005040  6EDF               	movwf	indf2,c
 28145  005042  0100               	movlb	0	; () banked
 28146  005044  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 28147  005046  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 28148  005048                     l2206:
 28149                           
 28150                           ; BSR set to: 0
 28151                           
 28152                           ; BSR set to: 0
 28153  005048  5181               	movf	StringCopy@Len& (0+255),w,b
 28154  00504A  5D85               	subwf	StringCopy@Index& (0+255),w,b
 28155  00504C  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 28156  00504E  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 28157  005050  B0D8               	btfsc	status,0,c
 28158  005052  0012               	return	
 28159  005054  D7D9               	goto	l2207
 28160  005056                     __end_of_StringCopy:
 28161                           	opt stack 0
 28162                           tosu	equ	0xFFF
 28163                           tosh	equ	0xFFE
 28164                           tosl	equ	0xFFD
 28165                           pclath	equ	0xFFA
 28166                           tblptru	equ	0xFF8
 28167                           tblptrh	equ	0xFF7
 28168                           tblptrl	equ	0xFF6
 28169                           tablat	equ	0xFF5
 28170                           prodh	equ	0xFF4
 28171                           prodl	equ	0xFF3
 28172                           intcon	equ	0xFF2
 28173                           intcon2	equ	0xFF1
 28174                           intcon3	equ	0xFF0
 28175                           indf0	equ	0xFEF
 28176                           postinc0	equ	0xFEE
 28177                           plusw0	equ	0xFEB
 28178                           fsr0h	equ	0xFEA
 28179                           fsr0l	equ	0xFE9
 28180                           wreg	equ	0xFE8
 28181                           indf1	equ	0xFE7
 28182                           postinc1	equ	0xFE6
 28183                           postdec1	equ	0xFE5
 28184                           plusw1	equ	0xFE3
 28185                           fsr1h	equ	0xFE2
 28186                           fsr1l	equ	0xFE1
 28187                           indf2	equ	0xFDF
 28188                           postinc2	equ	0xFDE
 28189                           postdec2	equ	0xFDD
 28190                           plusw2	equ	0xFDB
 28191                           fsr2h	equ	0xFDA
 28192                           fsr2l	equ	0xFD9
 28193                           status	equ	0xFD8
 28194                           
 28195 ;; *************** function _OsTmr_StartTimer *****************
 28196 ;; Defined at:
 28197 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28198 ;; Parameters:    Size  Location     Type
 28199 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 28200 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 28201 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 28202 ;;  Timeout         4   35[BANK0 ] unsigned long 
 28203 ;; Auto vars:     Size  Location     Type
 28204 ;;		None
 28205 ;; Return value:  Size  Location     Type
 28206 ;;                  1    wreg      void 
 28207 ;; Registers used:
 28208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28209 ;; Tracked objects:
 28210 ;;		On entry : 0/0
 28211 ;;		On exit  : 0/0
 28212 ;;		Unchanged: 0/0
 28213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28214 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28217 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28218 ;;Total ram usage:        6 bytes
 28219 ;; Hardware stack levels used:    1
 28220 ;; Hardware stack levels required when called:   12
 28221 ;; This function calls:
 28222 ;;		_GetOsTickCounter
 28223 ;; This function is called by:
 28224 ;;		_OsTmr_Wait
 28225 ;;		_CheckModem
 28226 ;;		_SendSmsSm
 28227 ;;		_InitGprsNetwork
 28228 ;;		_HttpGetMethod
 28229 ;;		_Term_MainSm
 28230 ;;		_I2cSlv_QueryI2cData
 28231 ;; This function uses a non-reentrant model
 28232 ;;
 28233                           
 28234                           	psect	text126
 28235  0050B4                     __ptext126:
 28236                           	opt stack 0
 28237  0050B4                     _OsTmr_StartTimer:
 28238                           	opt stack 12
 28239                           
 28240                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 28241                           
 28242                           ; BSR set to: 0
 28243                           ;incstack = 0
 28244  0050B4  0100               	movlb	0	; () banked
 28245  0050B6  EE20 F001          	lfsr	2,1
 28246  0050BA  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28247  0050BC  26D9               	addwf	fsr2l,f,c
 28248  0050BE  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28249  0050C0  22DA               	addwfc	fsr2h,f,c
 28250  0050C2  0E00               	movlw	0
 28251  0050C4  6EDF               	movwf	indf2,c
 28252                           
 28253                           ; BSR set to: 0
 28254                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 28255  0050C6  EC5D  F030         	call	_GetOsTickCounter	;wreg free
 28256  0050CA  0100               	movlb	0	; () banked
 28257  0050CC  EE20 F002          	lfsr	2,2
 28258  0050D0  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28259  0050D2  26D9               	addwf	fsr2l,f,c
 28260  0050D4  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28261  0050D6  22DA               	addwfc	fsr2h,f,c
 28262  0050D8  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 28263  0050DC  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 28264  0050E0  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 28265  0050E4  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 28266                           
 28267                           ; BSR set to: 0
 28268                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 28269  0050E8  EE20 F006          	lfsr	2,6
 28270  0050EC  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28271  0050EE  26D9               	addwf	fsr2l,f,c
 28272  0050F0  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28273  0050F2  22DA               	addwfc	fsr2h,f,c
 28274  0050F4  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 28275  0050F8  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 28276  0050FC  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 28277  005100  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 28278                           
 28279                           ; BSR set to: 0
 28280                           ;os_timers.c: 127: Timer->Enabled = 1u;
 28281  005104  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 28282  005108  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 28283  00510C  0E01               	movlw	1
 28284  00510E  6EDF               	movwf	indf2,c
 28285                           
 28286                           ; BSR set to: 0
 28287  005110  0012               	return		;funcret
 28288  005112                     __end_of_OsTmr_StartTimer:
 28289                           	opt stack 0
 28290                           tosu	equ	0xFFF
 28291                           tosh	equ	0xFFE
 28292                           tosl	equ	0xFFD
 28293                           pclath	equ	0xFFA
 28294                           tblptru	equ	0xFF8
 28295                           tblptrh	equ	0xFF7
 28296                           tblptrl	equ	0xFF6
 28297                           tablat	equ	0xFF5
 28298                           prodh	equ	0xFF4
 28299                           prodl	equ	0xFF3
 28300                           intcon	equ	0xFF2
 28301                           intcon2	equ	0xFF1
 28302                           intcon3	equ	0xFF0
 28303                           indf0	equ	0xFEF
 28304                           postinc0	equ	0xFEE
 28305                           plusw0	equ	0xFEB
 28306                           fsr0h	equ	0xFEA
 28307                           fsr0l	equ	0xFE9
 28308                           wreg	equ	0xFE8
 28309                           indf1	equ	0xFE7
 28310                           postinc1	equ	0xFE6
 28311                           postdec1	equ	0xFE5
 28312                           plusw1	equ	0xFE3
 28313                           fsr1h	equ	0xFE2
 28314                           fsr1l	equ	0xFE1
 28315                           indf2	equ	0xFDF
 28316                           postinc2	equ	0xFDE
 28317                           postdec2	equ	0xFDD
 28318                           plusw2	equ	0xFDB
 28319                           fsr2h	equ	0xFDA
 28320                           fsr2l	equ	0xFD9
 28321                           status	equ	0xFD8
 28322                           
 28323 ;; *************** function _OsTmr_GetTimerStatus *****************
 28324 ;; Defined at:
 28325 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28326 ;; Parameters:    Size  Location     Type
 28327 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 28328 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 28329 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 28330 ;; Auto vars:     Size  Location     Type
 28331 ;;		None
 28332 ;; Return value:  Size  Location     Type
 28333 ;;                  1    wreg      enum E7740
 28334 ;; Registers used:
 28335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28336 ;; Tracked objects:
 28337 ;;		On entry : 0/0
 28338 ;;		On exit  : 0/0
 28339 ;;		Unchanged: 0/0
 28340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28341 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28343 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28344 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28345 ;;Total ram usage:        6 bytes
 28346 ;; Hardware stack levels used:    1
 28347 ;; Hardware stack levels required when called:   13
 28348 ;; This function calls:
 28349 ;;		_GetElapsedTime
 28350 ;; This function is called by:
 28351 ;;		_OsTmr_Wait
 28352 ;;		_CheckModem
 28353 ;;		_SendSmsSm
 28354 ;;		_InitGprsNetwork
 28355 ;;		_HttpGetMethod
 28356 ;;		_Term_MainSm
 28357 ;;		_I2cSlv_QueryI2cData
 28358 ;; This function uses a non-reentrant model
 28359 ;;
 28360                           
 28361                           	psect	text127
 28362  0048CE                     __ptext127:
 28363                           	opt stack 0
 28364  0048CE                     _OsTmr_GetTimerStatus:
 28365                           	opt stack 11
 28366                           
 28367                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 28368                           
 28369                           ; BSR set to: 0
 28370                           ;incstack = 0
 28371  0048CE  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28372  0048D2  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28373  0048D6  04DE               	decf	postinc2,w,c
 28374  0048D8  A4D8               	btfss	status,2,c
 28375  0048DA  D030               	goto	l864
 28376                           
 28377                           ;os_timers.c: 197: {
 28378                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 28379  0048DC  0100               	movlb	0	; () banked
 28380  0048DE  EE20 F006          	lfsr	2,6
 28381  0048E2  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28382  0048E4  26D9               	addwf	fsr2l,f,c
 28383  0048E6  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28384  0048E8  22DA               	addwfc	fsr2h,f,c
 28385  0048EA  EE10 F002          	lfsr	1,2
 28386  0048EE  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28387  0048F0  26E1               	addwf	fsr1l,f,c
 28388  0048F2  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28389  0048F4  22E2               	addwfc	fsr1h,f,c
 28390  0048F6  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 28391  0048FA  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 28392  0048FE  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 28393  004902  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 28394  004906  EC13  F01E         	call	_GetElapsedTime	;wreg free
 28395  00490A  50DE               	movf	postinc2,w,c
 28396  00490C  0100               	movlb	0	; () banked
 28397  00490E  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 28398  004910  50DE               	movf	postinc2,w,c
 28399  004912  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 28400  004914  50DE               	movf	postinc2,w,c
 28401  004916  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 28402  004918  50DE               	movf	postinc2,w,c
 28403  00491A  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 28404  00491C  A0D8               	btfss	status,0,c
 28405  00491E  D017               	goto	l867
 28406                           
 28407                           ; BSR set to: 0
 28408                           ;os_timers.c: 200: {
 28409                           ;os_timers.c: 202: Timer->Enabled = 0u;
 28410  004920  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28411  004924  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28412  004928  0E00               	movlw	0
 28413  00492A  6EDF               	movwf	indf2,c
 28414                           
 28415                           ; BSR set to: 0
 28416                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 28417  00492C  EE20 F001          	lfsr	2,1
 28418  004930  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28419  004932  26D9               	addwf	fsr2l,f,c
 28420  004934  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28421  004936  22DA               	addwfc	fsr2h,f,c
 28422  004938  0E01               	movlw	1
 28423  00493A  D008               	goto	L72
 28424  00493C                     l864:
 28425                           
 28426                           ;os_timers.c: 211: else
 28427                           ;os_timers.c: 212: {
 28428                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 28429                           
 28430                           ; BSR set to: 0
 28431  00493C  0100               	movlb	0	; () banked
 28432  00493E  EE20 F001          	lfsr	2,1
 28433  004942  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28434  004944  26D9               	addwf	fsr2l,f,c
 28435  004946  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28436  004948  22DA               	addwfc	fsr2h,f,c
 28437  00494A  0E02               	movlw	2
 28438  00494C                     L72:
 28439  00494C  6EDF               	movwf	indf2,c
 28440  00494E                     l867:
 28441                           
 28442                           ; BSR set to: 0
 28443                           ;os_timers.c: 215: }
 28444                           ;os_timers.c: 218: return Timer->Status;
 28445  00494E  EE20 F001          	lfsr	2,1
 28446  004952  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28447  004954  26D9               	addwf	fsr2l,f,c
 28448  004956  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28449  004958  22DA               	addwfc	fsr2h,f,c
 28450  00495A  50DF               	movf	indf2,w,c
 28451  00495C  0012               	return	
 28452  00495E                     __end_of_OsTmr_GetTimerStatus:
 28453                           	opt stack 0
 28454                           tosu	equ	0xFFF
 28455                           tosh	equ	0xFFE
 28456                           tosl	equ	0xFFD
 28457                           pclath	equ	0xFFA
 28458                           tblptru	equ	0xFF8
 28459                           tblptrh	equ	0xFF7
 28460                           tblptrl	equ	0xFF6
 28461                           tablat	equ	0xFF5
 28462                           prodh	equ	0xFF4
 28463                           prodl	equ	0xFF3
 28464                           intcon	equ	0xFF2
 28465                           intcon2	equ	0xFF1
 28466                           intcon3	equ	0xFF0
 28467                           indf0	equ	0xFEF
 28468                           postinc0	equ	0xFEE
 28469                           plusw0	equ	0xFEB
 28470                           fsr0h	equ	0xFEA
 28471                           fsr0l	equ	0xFE9
 28472                           wreg	equ	0xFE8
 28473                           indf1	equ	0xFE7
 28474                           postinc1	equ	0xFE6
 28475                           postdec1	equ	0xFE5
 28476                           plusw1	equ	0xFE3
 28477                           fsr1h	equ	0xFE2
 28478                           fsr1l	equ	0xFE1
 28479                           indf2	equ	0xFDF
 28480                           postinc2	equ	0xFDE
 28481                           postdec2	equ	0xFDD
 28482                           plusw2	equ	0xFDB
 28483                           fsr2h	equ	0xFDA
 28484                           fsr2l	equ	0xFD9
 28485                           status	equ	0xFD8
 28486                           
 28487 ;; *************** function _GetElapsedTime *****************
 28488 ;; Defined at:
 28489 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28490 ;; Parameters:    Size  Location     Type
 28491 ;;  StartTime       4   33[BANK0 ] unsigned long 
 28492 ;; Auto vars:     Size  Location     Type
 28493 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 28494 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 28495 ;; Return value:  Size  Location     Type
 28496 ;;                  4   33[BANK0 ] unsigned long 
 28497 ;; Registers used:
 28498 ;;		wreg, status,2, status,0, cstack
 28499 ;; Tracked objects:
 28500 ;;		On entry : 0/0
 28501 ;;		On exit  : 0/0
 28502 ;;		Unchanged: 0/0
 28503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28504 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28505 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28506 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28507 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28508 ;;Total ram usage:       20 bytes
 28509 ;; Hardware stack levels used:    1
 28510 ;; Hardware stack levels required when called:   12
 28511 ;; This function calls:
 28512 ;;		_GetOsTickCounter
 28513 ;; This function is called by:
 28514 ;;		_OsTmr_GetTimerStatus
 28515 ;;		_OsTmr_GetRemainingTime
 28516 ;; This function uses a non-reentrant model
 28517 ;;
 28518                           
 28519                           	psect	text128
 28520  003C26                     __ptext128:
 28521                           	opt stack 0
 28522  003C26                     _GetElapsedTime:
 28523                           	opt stack 11
 28524                           
 28525                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 28526                           ;os_timers.c: 87: UINT32 TimeValue;
 28527                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 28528                           
 28529                           ; BSR set to: 0
 28530                           ;incstack = 0
 28531  003C26  EC5D  F030         	call	_GetOsTickCounter	;wreg free
 28532  003C2A  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 28533  003C2E  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 28534  003C32  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 28535  003C36  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 28536                           
 28537                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 28538  003C3A  0100               	movlb	0	; () banked
 28539  003C3C  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 28540  003C3E  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28541  003C40  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 28542  003C42  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28543  003C44  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 28544  003C46  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28545  003C48  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 28546  003C4A  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28547  003C4C  A0D8               	btfss	status,0,c
 28548  003C4E  D01D               	goto	l844
 28549                           
 28550                           ; BSR set to: 0
 28551                           ;os_timers.c: 94: {
 28552                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 28553  003C50  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 28554  003C54  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 28555  003C58  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 28556  003C5C  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 28557  003C60  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 28558  003C62  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 28559  003C64  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 28560  003C66  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 28561  003C68  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 28562  003C6A  0E00               	movlw	0
 28563  003C6C  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 28564  003C6E  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 28565  003C70  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 28566  003C72  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28567  003C74  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 28568  003C76  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 28569  003C78  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28570  003C7A  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 28571  003C7C  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 28572  003C7E  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28573  003C80  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 28574  003C82  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 28575  003C84  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28576  003C86  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 28577  003C88  D028               	goto	L43
 28578  003C8A                     l844:
 28579                           
 28580                           ; BSR set to: 0
 28581                           ;os_timers.c: 97: else
 28582                           ;os_timers.c: 98: {
 28583                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 28584                           
 28585                           ; BSR set to: 0
 28586  003C8A  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 28587  003C8E  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 28588  003C92  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 28589  003C96  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 28590  003C9A  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 28591  003C9C  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 28592  003C9E  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 28593  003CA0  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 28594  003CA2  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 28595  003CA4  0E00               	movlw	0
 28596  003CA6  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 28597  003CA8  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 28598  003CAA  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 28599  003CAC  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28600  003CAE  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 28601  003CB0  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 28602  003CB2  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28603  003CB4  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 28604  003CB6  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 28605  003CB8  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28606  003CBA  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 28607  003CBC  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 28608  003CBE  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28609  003CC0  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 28610  003CC2  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 28611  003CC4  0EFF               	movlw	255
 28612  003CC6  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 28613  003CC8  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 28614  003CCA  0EFF               	movlw	255
 28615  003CCC  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 28616  003CCE  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 28617  003CD0  0EFF               	movlw	255
 28618  003CD2  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 28619  003CD4  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 28620  003CD6  0EFF               	movlw	255
 28621  003CD8  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 28622  003CDA                     L43:
 28623  003CDA  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 28624                           
 28625                           ; BSR set to: 0
 28626                           ;os_timers.c: 100: }
 28627                           ;os_timers.c: 102: return TimeValue;
 28628                           
 28629                           ; BSR set to: 0
 28630  003CDC  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 28631  003CE0  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 28632  003CE4  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 28633  003CE8  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 28634  003CEC  0012               	return	
 28635  003CEE                     __end_of_GetElapsedTime:
 28636                           	opt stack 0
 28637                           tosu	equ	0xFFF
 28638                           tosh	equ	0xFFE
 28639                           tosl	equ	0xFFD
 28640                           pclath	equ	0xFFA
 28641                           tblptru	equ	0xFF8
 28642                           tblptrh	equ	0xFF7
 28643                           tblptrl	equ	0xFF6
 28644                           tablat	equ	0xFF5
 28645                           prodh	equ	0xFF4
 28646                           prodl	equ	0xFF3
 28647                           intcon	equ	0xFF2
 28648                           intcon2	equ	0xFF1
 28649                           intcon3	equ	0xFF0
 28650                           indf0	equ	0xFEF
 28651                           postinc0	equ	0xFEE
 28652                           plusw0	equ	0xFEB
 28653                           fsr0h	equ	0xFEA
 28654                           fsr0l	equ	0xFE9
 28655                           wreg	equ	0xFE8
 28656                           indf1	equ	0xFE7
 28657                           postinc1	equ	0xFE6
 28658                           postdec1	equ	0xFE5
 28659                           plusw1	equ	0xFE3
 28660                           fsr1h	equ	0xFE2
 28661                           fsr1l	equ	0xFE1
 28662                           indf2	equ	0xFDF
 28663                           postinc2	equ	0xFDE
 28664                           postdec2	equ	0xFDD
 28665                           plusw2	equ	0xFDB
 28666                           fsr2h	equ	0xFDA
 28667                           fsr2l	equ	0xFD9
 28668                           status	equ	0xFD8
 28669                           
 28670 ;; *************** function _GetOsTickCounter *****************
 28671 ;; Defined at:
 28672 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28673 ;; Parameters:    Size  Location     Type
 28674 ;;		None
 28675 ;; Auto vars:     Size  Location     Type
 28676 ;;		None
 28677 ;; Return value:  Size  Location     Type
 28678 ;;                  4   29[BANK0 ] unsigned long 
 28679 ;; Registers used:
 28680 ;;		None
 28681 ;; Tracked objects:
 28682 ;;		On entry : 0/0
 28683 ;;		On exit  : 0/0
 28684 ;;		Unchanged: 0/0
 28685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28686 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28689 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28690 ;;Total ram usage:        4 bytes
 28691 ;; Hardware stack levels used:    1
 28692 ;; Hardware stack levels required when called:   11
 28693 ;; This function calls:
 28694 ;;		Nothing
 28695 ;; This function is called by:
 28696 ;;		_GetElapsedTime
 28697 ;;		_OsTmr_StartTimer
 28698 ;;		_OsTmr_GetElapsedTime
 28699 ;; This function uses a non-reentrant model
 28700 ;;
 28701                           
 28702                           	psect	text129
 28703  0060BA                     __ptext129:
 28704                           	opt stack 0
 28705  0060BA                     _GetOsTickCounter:
 28706                           	opt stack 12
 28707                           
 28708                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 28709                           
 28710                           ; BSR set to: 0
 28711                           ;incstack = 0
 28712  0060BA  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 28713  0060BE  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 28714  0060C2  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 28715  0060C6  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 28716  0060CA  0012               	return		;funcret
 28717  0060CC                     __end_of_GetOsTickCounter:
 28718                           	opt stack 0
 28719                           tosu	equ	0xFFF
 28720                           tosh	equ	0xFFE
 28721                           tosl	equ	0xFFD
 28722                           pclath	equ	0xFFA
 28723                           tblptru	equ	0xFF8
 28724                           tblptrh	equ	0xFF7
 28725                           tblptrl	equ	0xFF6
 28726                           tablat	equ	0xFF5
 28727                           prodh	equ	0xFF4
 28728                           prodl	equ	0xFF3
 28729                           intcon	equ	0xFF2
 28730                           intcon2	equ	0xFF1
 28731                           intcon3	equ	0xFF0
 28732                           indf0	equ	0xFEF
 28733                           postinc0	equ	0xFEE
 28734                           plusw0	equ	0xFEB
 28735                           fsr0h	equ	0xFEA
 28736                           fsr0l	equ	0xFE9
 28737                           wreg	equ	0xFE8
 28738                           indf1	equ	0xFE7
 28739                           postinc1	equ	0xFE6
 28740                           postdec1	equ	0xFE5
 28741                           plusw1	equ	0xFE3
 28742                           fsr1h	equ	0xFE2
 28743                           fsr1l	equ	0xFE1
 28744                           indf2	equ	0xFDF
 28745                           postinc2	equ	0xFDE
 28746                           postdec2	equ	0xFDD
 28747                           plusw2	equ	0xFDB
 28748                           fsr2h	equ	0xFDA
 28749                           fsr2l	equ	0xFD9
 28750                           status	equ	0xFD8
 28751                           
 28752 ;; *************** function _ClearBuffer *****************
 28753 ;; Defined at:
 28754 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28755 ;; Parameters:    Size  Location     Type
 28756 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 28757 ;;		 -> MyApp_Task@smsNumber(14), MyApp_Task@smsText(50), GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200
      +), 
 28758 ;;		 -> InitGprsNetwork@UartMessage(50), Mdm_SmsRx(132), RxBuffer(400), 
 28759 ;;  Len             2   31[BANK0 ] unsigned short 
 28760 ;; Auto vars:     Size  Location     Type
 28761 ;;  Index           2   33[BANK0 ] unsigned short 
 28762 ;; Return value:  Size  Location     Type
 28763 ;;                  1    wreg      void 
 28764 ;; Registers used:
 28765 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28766 ;; Tracked objects:
 28767 ;;		On entry : 0/0
 28768 ;;		On exit  : 0/0
 28769 ;;		Unchanged: 0/0
 28770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28771 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28772 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28774 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28775 ;;Total ram usage:        6 bytes
 28776 ;; Hardware stack levels used:    1
 28777 ;; Hardware stack levels required when called:   11
 28778 ;; This function calls:
 28779 ;;		Nothing
 28780 ;; This function is called by:
 28781 ;;		_GetSmsSm
 28782 ;;		_InitGprsNetwork
 28783 ;;		_HttpGetMethod
 28784 ;;		_MyApp_Task
 28785 ;;		_GsmGprsTerminal
 28786 ;; This function uses a non-reentrant model
 28787 ;;
 28788                           
 28789                           	psect	text130
 28790  005ADE                     __ptext130:
 28791                           	opt stack 0
 28792  005ADE                     _ClearBuffer:
 28793                           	opt stack 16
 28794                           
 28795                           ;sf.c: 126: UINT16 Index = 0;
 28796                           
 28797                           ;incstack = 0
 28798  005ADE  0E00               	movlw	0
 28799  005AE0  0100               	movlb	0	; () banked
 28800  005AE2  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 28801  005AE4  0E00               	movlw	0
 28802  005AE6  6F81               	movwf	ClearBuffer@Index& (0+255),b
 28803                           
 28804                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 28805  005AE8  0E00               	movlw	0
 28806  005AEA  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 28807  005AEC  0E00               	movlw	0
 28808  005AEE  6F81               	movwf	ClearBuffer@Index& (0+255),b
 28809  005AF0  D00A               	goto	l2212
 28810  005AF2                     
 28811                           ; BSR set to: 0
 28812                           ;sf.c: 130: {
 28813                           ;sf.c: 131: *(Buffer + Index) = 0;
 28814                           
 28815                           ; BSR set to: 0
 28816  005AF2  5181               	movf	ClearBuffer@Index& (0+255),w,b
 28817  005AF4  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 28818  005AF6  6ED9               	movwf	fsr2l,c
 28819  005AF8  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 28820  005AFA  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 28821  005AFC  6EDA               	movwf	fsr2h,c
 28822  005AFE  0E00               	movlw	0
 28823  005B00  6EDF               	movwf	indf2,c
 28824                           
 28825                           ; BSR set to: 0
 28826  005B02  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 28827  005B04  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 28828  005B06                     l2212:
 28829                           
 28830                           ; BSR set to: 0
 28831                           
 28832                           ; BSR set to: 0
 28833  005B06  5181               	movf	ClearBuffer@Index& (0+255),w,b
 28834  005B08  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 28835  005B0A  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 28836  005B0C  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 28837  005B0E  A0D8               	btfss	status,0,c
 28838  005B10  0012               	return	
 28839  005B12  D7EF               	goto	l2213
 28840  005B14                     __end_of_ClearBuffer:
 28841                           	opt stack 0
 28842                           tosu	equ	0xFFF
 28843                           tosh	equ	0xFFE
 28844                           tosl	equ	0xFFD
 28845                           pclath	equ	0xFFA
 28846                           tblptru	equ	0xFF8
 28847                           tblptrh	equ	0xFF7
 28848                           tblptrl	equ	0xFF6
 28849                           tablat	equ	0xFF5
 28850                           prodh	equ	0xFF4
 28851                           prodl	equ	0xFF3
 28852                           intcon	equ	0xFF2
 28853                           intcon2	equ	0xFF1
 28854                           intcon3	equ	0xFF0
 28855                           indf0	equ	0xFEF
 28856                           postinc0	equ	0xFEE
 28857                           plusw0	equ	0xFEB
 28858                           fsr0h	equ	0xFEA
 28859                           fsr0l	equ	0xFE9
 28860                           wreg	equ	0xFE8
 28861                           indf1	equ	0xFE7
 28862                           postinc1	equ	0xFE6
 28863                           postdec1	equ	0xFE5
 28864                           plusw1	equ	0xFE3
 28865                           fsr1h	equ	0xFE2
 28866                           fsr1l	equ	0xFE1
 28867                           indf2	equ	0xFDF
 28868                           postinc2	equ	0xFDE
 28869                           postdec2	equ	0xFDD
 28870                           plusw2	equ	0xFDB
 28871                           fsr2h	equ	0xFDA
 28872                           fsr2l	equ	0xFD9
 28873                           status	equ	0xFD8
 28874                           
 28875 ;; *************** function _LedStateMachine *****************
 28876 ;; Defined at:
 28877 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28878 ;; Parameters:    Size  Location     Type
 28879 ;;  Led             1    wreg     unsigned char 
 28880 ;;  LedSts          2   47[BANK0 ] PTR enum E8935
 28881 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 28882 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 28883 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 28884 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 28885 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 28886 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 28887 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 28888 ;; Auto vars:     Size  Location     Type
 28889 ;;  Led             1   57[BANK0 ] unsigned char 
 28890 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 28891 ;; Return value:  Size  Location     Type
 28892 ;;                  1    wreg      unsigned char 
 28893 ;; Registers used:
 28894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28895 ;; Tracked objects:
 28896 ;;		On entry : 0/0
 28897 ;;		On exit  : 0/0
 28898 ;;		Unchanged: 0/0
 28899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28900 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28901 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28902 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28903 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28904 ;;Total ram usage:       11 bytes
 28905 ;; Hardware stack levels used:    1
 28906 ;; Hardware stack levels required when called:   13
 28907 ;; This function calls:
 28908 ;;		_LedBlinkStateMachine
 28909 ;;		_LedPulseStateMachine
 28910 ;;		_Led_SetLedStatus
 28911 ;; This function is called by:
 28912 ;;		_Led_MainTask
 28913 ;; This function uses a non-reentrant model
 28914 ;;
 28915                           
 28916                           	psect	text131
 28917  00435A                     __ptext131:
 28918                           	opt stack 0
 28919  00435A                     _LedStateMachine:
 28920                           	opt stack 14
 28921                           
 28922                           ; BSR set to: 0
 28923                           ;incstack = 0
 28924                           ;LedStateMachine@Led stored from wreg
 28925  00435A  0100               	movlb	0	; () banked
 28926  00435C  6F99               	movwf	LedStateMachine@Led& (0+255),b
 28927                           
 28928                           ;led.c: 238: UINT8 LedOutSts = 0u;
 28929  00435E  0E00               	movlw	0
 28930  004360  0100               	movlb	0	; () banked
 28931  004362  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28932                           
 28933                           ;led.c: 241: switch (*LedSts)
 28934  004364  D037               	goto	l2071
 28935  004366                     
 28936                           ; BSR set to: 0
 28937                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 28938                           
 28939                           ; BSR set to: 0
 28940  004366  0E00               	movlw	0
 28941  004368  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28942                           
 28943                           ; BSR set to: 0
 28944                           ;led.c: 246: *LedOut = ((UINT8)(0));
 28945  00436A  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28946  00436E  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28947  004372  0E00               	movlw	0
 28948  004374  D007               	goto	L44
 28949  004376                     
 28950                           ; BSR set to: 0
 28951                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 28952                           
 28953                           ; BSR set to: 0
 28954  004376  0E01               	movlw	1
 28955  004378  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28956                           
 28957                           ; BSR set to: 0
 28958                           ;led.c: 252: *LedOut = ((UINT8)(1));
 28959  00437A  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28960  00437E  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28961  004382  0E01               	movlw	1
 28962  004384                     L44:
 28963  004384  6EDF               	movwf	indf2,c
 28964                           
 28965                           ;led.c: 253: break;
 28966  004386  D03A               	goto	l2073
 28967  004388                     
 28968                           ; BSR set to: 0
 28969                           ;led.c: 257: if (*LedOut == 1)
 28970                           
 28971                           ; BSR set to: 0
 28972  004388  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28973  00438C  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28974  004390  04DE               	decf	postinc2,w,c
 28975  004392  A4D8               	btfss	status,2,c
 28976  004394  D006               	goto	l2076
 28977                           
 28978                           ; BSR set to: 0
 28979                           ;led.c: 258: {
 28980                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 28981  004396  0E00               	movlw	0
 28982  004398  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 28983  00439A  5199               	movf	LedStateMachine@Led& (0+255),w,b
 28984  00439C  EC1E  F02E         	call	_Led_SetLedStatus
 28985                           
 28986                           ;led.c: 261: }
 28987  0043A0  D02D               	goto	l2073
 28988  0043A2                     l2076:
 28989                           
 28990                           ;led.c: 262: else
 28991                           ;led.c: 263: {
 28992                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 28993  0043A2  0E01               	movlw	1
 28994  0043A4  0100               	movlb	0	; () banked
 28995  0043A6  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 28996  0043A8  5199               	movf	LedStateMachine@Led& (0+255),w,b
 28997  0043AA  EC1E  F02E         	call	_Led_SetLedStatus
 28998                           
 28999                           ;led.c: 266: }
 29000                           ;led.c: 267: break;
 29001  0043AE  D026               	goto	l2073
 29002  0043B0                     
 29003                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 29004  0043B0  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 29005  0043B4  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 29006  0043B8  ECB1  F012         	call	_LedBlinkStateMachine	;wreg free
 29007  0043BC  D008               	goto	L45
 29008  0043BE                     
 29009                           ; BSR set to: 0
 29010                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 29011                           
 29012                           ; BSR set to: 0
 29013  0043BE  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 29014  0043C2  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 29015  0043C6  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 29016  0043CA  EC06  F019         	call	_LedPulseStateMachine	;wreg free
 29017  0043CE                     L45:
 29018  0043CE  0100               	movlb	0	; () banked
 29019  0043D0  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29020                           
 29021                           ; BSR set to: 0
 29022                           ;led.c: 281: }
 29023                           
 29024                           ; BSR set to: 0
 29025                           ;led.c: 280: break;
 29026                           
 29027                           ;led.c: 279: default:
 29028                           
 29029                           ;led.c: 277: break;
 29030  0043D2  D014               	goto	l2073
 29031  0043D4                     l2071:
 29032                           
 29033                           ; BSR set to: 0
 29034                           
 29035                           ; BSR set to: 0
 29036  0043D4  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 29037  0043D8  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 29038  0043DC  50DF               	movf	indf2,w,c
 29039                           
 29040                           ; Switch size 1, requested type "space"
 29041                           ; Number of cases is 5, Range of values is 0 to 4
 29042                           ; switch strategies available:
 29043                           ; Name         Instructions Cycles
 29044                           ; simple_byte           16     9 (average)
 29045                           ;	Chosen strategy is simple_byte
 29046  0043DE  0A00               	xorlw	0	; case 0
 29047  0043E0  B4D8               	btfsc	status,2,c
 29048  0043E2  D7C1               	goto	l2072
 29049  0043E4  0A01               	xorlw	1	; case 1
 29050  0043E6  B4D8               	btfsc	status,2,c
 29051  0043E8  D7C6               	goto	l2074
 29052  0043EA  0A03               	xorlw	3	; case 2
 29053  0043EC  B4D8               	btfsc	status,2,c
 29054  0043EE  D7CC               	goto	l2075
 29055  0043F0  0A01               	xorlw	1	; case 3
 29056  0043F2  B4D8               	btfsc	status,2,c
 29057  0043F4  D7DD               	goto	l2078
 29058  0043F6  0A07               	xorlw	7	; case 4
 29059  0043F8  B4D8               	btfsc	status,2,c
 29060  0043FA  D7E1               	goto	l2079
 29061  0043FC                     l2073:
 29062                           
 29063                           ;led.c: 283: return LedOutSts;
 29064                           
 29065                           ; BSR set to: 0
 29066  0043FC  0100               	movlb	0	; () banked
 29067  0043FE  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 29068  004400  0012               	return	
 29069  004402                     __end_of_LedStateMachine:
 29070                           	opt stack 0
 29071                           tosu	equ	0xFFF
 29072                           tosh	equ	0xFFE
 29073                           tosl	equ	0xFFD
 29074                           pclath	equ	0xFFA
 29075                           tblptru	equ	0xFF8
 29076                           tblptrh	equ	0xFF7
 29077                           tblptrl	equ	0xFF6
 29078                           tablat	equ	0xFF5
 29079                           prodh	equ	0xFF4
 29080                           prodl	equ	0xFF3
 29081                           intcon	equ	0xFF2
 29082                           intcon2	equ	0xFF1
 29083                           intcon3	equ	0xFF0
 29084                           indf0	equ	0xFEF
 29085                           postinc0	equ	0xFEE
 29086                           plusw0	equ	0xFEB
 29087                           fsr0h	equ	0xFEA
 29088                           fsr0l	equ	0xFE9
 29089                           wreg	equ	0xFE8
 29090                           indf1	equ	0xFE7
 29091                           postinc1	equ	0xFE6
 29092                           postdec1	equ	0xFE5
 29093                           plusw1	equ	0xFE3
 29094                           fsr1h	equ	0xFE2
 29095                           fsr1l	equ	0xFE1
 29096                           indf2	equ	0xFDF
 29097                           postinc2	equ	0xFDE
 29098                           postdec2	equ	0xFDD
 29099                           plusw2	equ	0xFDB
 29100                           fsr2h	equ	0xFDA
 29101                           fsr2l	equ	0xFD9
 29102                           status	equ	0xFD8
 29103                           
 29104 ;; *************** function _LedPulseStateMachine *****************
 29105 ;; Defined at:
 29106 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29107 ;; Parameters:    Size  Location     Type
 29108 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 29109 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 29110 ;;  Led             1   44[BANK0 ] unsigned char 
 29111 ;; Auto vars:     Size  Location     Type
 29112 ;;		None
 29113 ;; Return value:  Size  Location     Type
 29114 ;;                  1    wreg      unsigned char 
 29115 ;; Registers used:
 29116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29117 ;; Tracked objects:
 29118 ;;		On entry : 0/0
 29119 ;;		On exit  : 0/0
 29120 ;;		Unchanged: 0/0
 29121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29122 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29124 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29125 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29126 ;;Total ram usage:        5 bytes
 29127 ;; Hardware stack levels used:    1
 29128 ;; Hardware stack levels required when called:   12
 29129 ;; This function calls:
 29130 ;;		_Led_SetLedStatus
 29131 ;;		___lwdiv
 29132 ;; This function is called by:
 29133 ;;		_LedStateMachine
 29134 ;; This function uses a non-reentrant model
 29135 ;;
 29136                           
 29137                           	psect	text132
 29138  00320C                     __ptext132:
 29139                           	opt stack 0
 29140  00320C                     _LedPulseStateMachine:
 29141                           	opt stack 14
 29142                           
 29143                           ;led.c: 185: switch (LedPulse->LedPulseState)
 29144                           
 29145                           ; BSR set to: 0
 29146                           ;incstack = 0
 29147  00320C  D05C               	goto	l2061
 29148  00320E                     
 29149                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 29150  00320E  0100               	movlb	0	; () banked
 29151  003210  EE20 F001          	lfsr	2,1
 29152  003214  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29153  003216  26D9               	addwf	fsr2l,f,c
 29154  003218  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29155  00321A  22DA               	addwfc	fsr2h,f,c
 29156  00321C  0E01               	movlw	1
 29157  00321E  6EDF               	movwf	indf2,c
 29158                           
 29159                           ; BSR set to: 0
 29160                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 29161  003220  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29162  003224  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29163  003228  0E01               	movlw	1
 29164  00322A  D036               	goto	L46
 29165  00322C                     
 29166                           ;led.c: 196: LedPulse->LedPulseCounter++;
 29167                           
 29168                           ; BSR set to: 0
 29169  00322C  0100               	movlb	0	; () banked
 29170  00322E  EE20 F002          	lfsr	2,2
 29171  003232  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29172  003234  26D9               	addwf	fsr2l,f,c
 29173  003236  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29174  003238  22DA               	addwfc	fsr2h,f,c
 29175  00323A  2ADE               	incf	postinc2,f,c
 29176  00323C  0E00               	movlw	0
 29177  00323E  22DD               	addwfc	postdec2,f,c
 29178                           
 29179                           ; BSR set to: 0
 29180                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 29181  003240  EE20 F004          	lfsr	2,4
 29182  003244  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29183  003246  26D9               	addwf	fsr2l,f,c
 29184  003248  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29185  00324A  22DA               	addwfc	fsr2h,f,c
 29186  00324C  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29187  003250  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29188  003254  0E00               	movlw	0
 29189  003256  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29190  003258  0E32               	movlw	50
 29191  00325A  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29192  00325C  ECE5  F029         	call	___lwdiv	;wreg free
 29193  003260  0100               	movlb	0	; () banked
 29194  003262  EE20 F002          	lfsr	2,2
 29195  003266  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29196  003268  26D9               	addwf	fsr2l,f,c
 29197  00326A  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29198  00326C  22DA               	addwfc	fsr2h,f,c
 29199  00326E  5183               	movf	?___lwdiv& (0+255),w,b
 29200  003270  5CDE               	subwf	postinc2,w,c
 29201  003272  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29202  003274  58DE               	subwfb	postinc2,w,c
 29203  003276  A0D8               	btfss	status,0,c
 29204  003278  D034               	goto	l2063
 29205                           
 29206                           ; BSR set to: 0
 29207                           ;led.c: 199: {
 29208                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 29209  00327A  EE20 F002          	lfsr	2,2
 29210  00327E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29211  003280  26D9               	addwf	fsr2l,f,c
 29212  003282  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29213  003284  22DA               	addwfc	fsr2h,f,c
 29214  003286  0E00               	movlw	0
 29215  003288  6EDE               	movwf	postinc2,c
 29216  00328A  0E00               	movlw	0
 29217  00328C  6EDD               	movwf	postdec2,c
 29218                           
 29219                           ; BSR set to: 0
 29220                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 29221  00328E  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29222  003292  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29223  003296  0E02               	movlw	2
 29224  003298                     L46:
 29225  003298  6EDF               	movwf	indf2,c
 29226                           
 29227                           ; BSR set to: 0
 29228                           ;led.c: 204: }
 29229                           ;led.c: 205: break;
 29230  00329A  D023               	goto	l2063
 29231  00329C                     
 29232                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 29233                           
 29234                           ; BSR set to: 0
 29235  00329C  0100               	movlb	0	; () banked
 29236  00329E  EE20 F001          	lfsr	2,1
 29237  0032A2  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29238  0032A4  26D9               	addwf	fsr2l,f,c
 29239  0032A6  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29240  0032A8  22DA               	addwfc	fsr2h,f,c
 29241  0032AA  0E00               	movlw	0
 29242  0032AC  6EDF               	movwf	indf2,c
 29243                           
 29244                           ; BSR set to: 0
 29245                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 29246  0032AE  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29247  0032B2  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29248  0032B6  0E00               	movlw	0
 29249  0032B8  6EDF               	movwf	indf2,c
 29250                           
 29251                           ; BSR set to: 0
 29252                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 29253  0032BA  0E00               	movlw	0
 29254  0032BC  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29255  0032BE  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 29256  0032C0  EC1E  F02E         	call	_Led_SetLedStatus
 29257                           
 29258                           ;led.c: 218: }
 29259                           
 29260                           ;led.c: 217: break;
 29261                           
 29262                           ;led.c: 216: default:
 29263                           
 29264                           ;led.c: 214: break;
 29265  0032C4  D00E               	goto	l2063
 29266  0032C6                     l2061:
 29267  0032C6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29268  0032CA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29269  0032CE  50DF               	movf	indf2,w,c
 29270                           
 29271                           ; Switch size 1, requested type "space"
 29272                           ; Number of cases is 3, Range of values is 0 to 2
 29273                           ; switch strategies available:
 29274                           ; Name         Instructions Cycles
 29275                           ; simple_byte           10     6 (average)
 29276                           ;	Chosen strategy is simple_byte
 29277  0032D0  0A00               	xorlw	0	; case 0
 29278  0032D2  B4D8               	btfsc	status,2,c
 29279  0032D4  D79C               	goto	l2062
 29280  0032D6  0A01               	xorlw	1	; case 1
 29281  0032D8  B4D8               	btfsc	status,2,c
 29282  0032DA  D7A8               	goto	l2064
 29283  0032DC  0A03               	xorlw	3	; case 2
 29284  0032DE  B4D8               	btfsc	status,2,c
 29285  0032E0  D7DD               	goto	l2066
 29286  0032E2                     l2063:
 29287                           
 29288                           ;led.c: 221: return (LedPulse->LedOutState);
 29289  0032E2  0100               	movlb	0	; () banked
 29290  0032E4  EE20 F001          	lfsr	2,1
 29291  0032E8  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29292  0032EA  26D9               	addwf	fsr2l,f,c
 29293  0032EC  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29294  0032EE  22DA               	addwfc	fsr2h,f,c
 29295  0032F0  50DF               	movf	indf2,w,c
 29296  0032F2  0012               	return	
 29297  0032F4                     __end_of_LedPulseStateMachine:
 29298                           	opt stack 0
 29299                           tosu	equ	0xFFF
 29300                           tosh	equ	0xFFE
 29301                           tosl	equ	0xFFD
 29302                           pclath	equ	0xFFA
 29303                           tblptru	equ	0xFF8
 29304                           tblptrh	equ	0xFF7
 29305                           tblptrl	equ	0xFF6
 29306                           tablat	equ	0xFF5
 29307                           prodh	equ	0xFF4
 29308                           prodl	equ	0xFF3
 29309                           intcon	equ	0xFF2
 29310                           intcon2	equ	0xFF1
 29311                           intcon3	equ	0xFF0
 29312                           indf0	equ	0xFEF
 29313                           postinc0	equ	0xFEE
 29314                           plusw0	equ	0xFEB
 29315                           fsr0h	equ	0xFEA
 29316                           fsr0l	equ	0xFE9
 29317                           wreg	equ	0xFE8
 29318                           indf1	equ	0xFE7
 29319                           postinc1	equ	0xFE6
 29320                           postdec1	equ	0xFE5
 29321                           plusw1	equ	0xFE3
 29322                           fsr1h	equ	0xFE2
 29323                           fsr1l	equ	0xFE1
 29324                           indf2	equ	0xFDF
 29325                           postinc2	equ	0xFDE
 29326                           postdec2	equ	0xFDD
 29327                           plusw2	equ	0xFDB
 29328                           fsr2h	equ	0xFDA
 29329                           fsr2l	equ	0xFD9
 29330                           status	equ	0xFD8
 29331                           
 29332 ;; *************** function _Led_SetLedStatus *****************
 29333 ;; Defined at:
 29334 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29335 ;; Parameters:    Size  Location     Type
 29336 ;;  Led             1    wreg     unsigned char 
 29337 ;;  LedSts          1   29[BANK0 ] enum E8935
 29338 ;; Auto vars:     Size  Location     Type
 29339 ;;  Led             1   30[BANK0 ] unsigned char 
 29340 ;; Return value:  Size  Location     Type
 29341 ;;                  1    wreg      void 
 29342 ;; Registers used:
 29343 ;;		wreg, status,2, status,0
 29344 ;; Tracked objects:
 29345 ;;		On entry : 0/0
 29346 ;;		On exit  : 0/0
 29347 ;;		Unchanged: 0/0
 29348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29349 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29352 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29353 ;;Total ram usage:        2 bytes
 29354 ;; Hardware stack levels used:    1
 29355 ;; Hardware stack levels required when called:   11
 29356 ;; This function calls:
 29357 ;;		Nothing
 29358 ;; This function is called by:
 29359 ;;		_LedPulseStateMachine
 29360 ;;		_LedStateMachine
 29361 ;;		_initGprsModem
 29362 ;;		_blinkForSeconds
 29363 ;; This function uses a non-reentrant model
 29364 ;;
 29365                           
 29366                           	psect	text133
 29367  005C3C                     __ptext133:
 29368                           	opt stack 0
 29369  005C3C                     _Led_SetLedStatus:
 29370                           	opt stack 15
 29371                           
 29372                           ; BSR set to: 0
 29373                           ;incstack = 0
 29374                           ;Led_SetLedStatus@Led stored from wreg
 29375  005C3C  0100               	movlb	0	; () banked
 29376  005C3E  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 29377                           
 29378                           ;led.c: 341: switch (Led)
 29379  005C40  D009               	goto	l2092
 29380  005C42                     l2093:
 29381                           
 29382                           ; BSR set to: 0
 29383                           ;led.c: 344: Led1Sts = LedSts;
 29384  005C42  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 29385                           
 29386                           ;led.c: 345: break;
 29387  005C46  0012               	return	
 29388  005C48                     l2095:
 29389                           
 29390                           ; BSR set to: 0
 29391                           ;led.c: 348: Led2Sts = LedSts;
 29392  005C48  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 29393                           
 29394                           ;led.c: 349: break;
 29395  005C4C  0012               	return	
 29396  005C4E                     l2096:
 29397                           
 29398                           ; BSR set to: 0
 29399                           ;led.c: 352: Led3Sts = LedSts;
 29400  005C4E  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 29401                           
 29402                           ; BSR set to: 0
 29403                           ;led.c: 357: }
 29404                           
 29405                           ; BSR set to: 0
 29406                           ;led.c: 356: break;
 29407                           
 29408                           ;led.c: 355: default:
 29409                           
 29410                           ;led.c: 353: break;
 29411  005C52  0012               	return	
 29412  005C54                     l2092:
 29413                           
 29414                           ; BSR set to: 0
 29415  005C54  0100               	movlb	0	; () banked
 29416  005C56  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 29417                           
 29418                           ; Switch size 1, requested type "space"
 29419                           ; Number of cases is 3, Range of values is 1 to 3
 29420                           ; switch strategies available:
 29421                           ; Name         Instructions Cycles
 29422                           ; simple_byte           10     6 (average)
 29423                           ;	Chosen strategy is simple_byte
 29424  005C58  0A01               	xorlw	1	; case 1
 29425  005C5A  B4D8               	btfsc	status,2,c
 29426  005C5C  D7F2               	goto	l2093
 29427  005C5E  0A03               	xorlw	3	; case 2
 29428  005C60  B4D8               	btfsc	status,2,c
 29429  005C62  D7F2               	goto	l2095
 29430  005C64  0A01               	xorlw	1	; case 3
 29431  005C66  A4D8               	btfss	status,2,c
 29432  005C68  0012               	return	
 29433  005C6A  D7F1               	goto	l2096
 29434  005C6C                     __end_of_Led_SetLedStatus:
 29435                           	opt stack 0
 29436                           tosu	equ	0xFFF
 29437                           tosh	equ	0xFFE
 29438                           tosl	equ	0xFFD
 29439                           pclath	equ	0xFFA
 29440                           tblptru	equ	0xFF8
 29441                           tblptrh	equ	0xFF7
 29442                           tblptrl	equ	0xFF6
 29443                           tablat	equ	0xFF5
 29444                           prodh	equ	0xFF4
 29445                           prodl	equ	0xFF3
 29446                           intcon	equ	0xFF2
 29447                           intcon2	equ	0xFF1
 29448                           intcon3	equ	0xFF0
 29449                           indf0	equ	0xFEF
 29450                           postinc0	equ	0xFEE
 29451                           plusw0	equ	0xFEB
 29452                           fsr0h	equ	0xFEA
 29453                           fsr0l	equ	0xFE9
 29454                           wreg	equ	0xFE8
 29455                           indf1	equ	0xFE7
 29456                           postinc1	equ	0xFE6
 29457                           postdec1	equ	0xFE5
 29458                           plusw1	equ	0xFE3
 29459                           fsr1h	equ	0xFE2
 29460                           fsr1l	equ	0xFE1
 29461                           indf2	equ	0xFDF
 29462                           postinc2	equ	0xFDE
 29463                           postdec2	equ	0xFDD
 29464                           plusw2	equ	0xFDB
 29465                           fsr2h	equ	0xFDA
 29466                           fsr2l	equ	0xFD9
 29467                           status	equ	0xFD8
 29468                           
 29469 ;; *************** function _LedBlinkStateMachine *****************
 29470 ;; Defined at:
 29471 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29472 ;; Parameters:    Size  Location     Type
 29473 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 29474 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 29475 ;; Auto vars:     Size  Location     Type
 29476 ;;		None
 29477 ;; Return value:  Size  Location     Type
 29478 ;;                  1    wreg      unsigned char 
 29479 ;; Registers used:
 29480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29481 ;; Tracked objects:
 29482 ;;		On entry : 0/0
 29483 ;;		On exit  : 0/0
 29484 ;;		Unchanged: 0/0
 29485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29486 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29488 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29489 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29490 ;;Total ram usage:        4 bytes
 29491 ;; Hardware stack levels used:    1
 29492 ;; Hardware stack levels required when called:   12
 29493 ;; This function calls:
 29494 ;;		___lwdiv
 29495 ;; This function is called by:
 29496 ;;		_LedStateMachine
 29497 ;; This function uses a non-reentrant model
 29498 ;;
 29499                           
 29500                           	psect	text134
 29501  002562                     __ptext134:
 29502                           	opt stack 0
 29503  002562                     _LedBlinkStateMachine:
 29504                           	opt stack 14
 29505                           
 29506                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 29507                           
 29508                           ; BSR set to: 0
 29509                           ;incstack = 0
 29510  002562  D08F               	goto	l2048
 29511  002564                     
 29512                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 29513  002564  0100               	movlb	0	; () banked
 29514  002566  EE20 F008          	lfsr	2,8
 29515  00256A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29516  00256C  26D9               	addwf	fsr2l,f,c
 29517  00256E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29518  002570  22DA               	addwfc	fsr2h,f,c
 29519  002572  EE10 F001          	lfsr	1,1
 29520  002576  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29521  002578  26E1               	addwf	fsr1l,f,c
 29522  00257A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29523  00257C  22E2               	addwfc	fsr1h,f,c
 29524  00257E  CFDF FFE7          	movff	indf2,indf1
 29525                           
 29526                           ; BSR set to: 0
 29527                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 29528  002582  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 29529  002586  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 29530  00258A  D040               	goto	L47
 29531  00258C                     
 29532                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 29533                           
 29534                           ; BSR set to: 0
 29535  00258C  0100               	movlb	0	; () banked
 29536  00258E  EE20 F002          	lfsr	2,2
 29537  002592  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29538  002594  26D9               	addwf	fsr2l,f,c
 29539  002596  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29540  002598  22DA               	addwfc	fsr2h,f,c
 29541  00259A  2ADE               	incf	postinc2,f,c
 29542  00259C  0E00               	movlw	0
 29543  00259E  22DD               	addwfc	postdec2,f,c
 29544                           
 29545                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 29546  0025A0  EE20 F001          	lfsr	2,1
 29547  0025A4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29548  0025A6  26D9               	addwf	fsr2l,f,c
 29549  0025A8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29550  0025AA  22DA               	addwfc	fsr2h,f,c
 29551  0025AC  50DF               	movf	indf2,w,c
 29552  0025AE  A4D8               	btfss	status,2,c
 29553  0025B0  D02F               	goto	l2052
 29554                           
 29555                           ; BSR set to: 0
 29556                           ;led.c: 142: {
 29557                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 29558  0025B2  EE20 F006          	lfsr	2,6
 29559  0025B6  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29560  0025B8  26D9               	addwf	fsr2l,f,c
 29561  0025BA  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29562  0025BC  22DA               	addwfc	fsr2h,f,c
 29563  0025BE  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29564  0025C2  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29565  0025C6  0E00               	movlw	0
 29566  0025C8  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29567  0025CA  0E32               	movlw	50
 29568  0025CC  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29569  0025CE  ECE5  F029         	call	___lwdiv	;wreg free
 29570  0025D2  0100               	movlb	0	; () banked
 29571  0025D4  EE20 F002          	lfsr	2,2
 29572  0025D8  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29573  0025DA  26D9               	addwf	fsr2l,f,c
 29574  0025DC  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29575  0025DE  22DA               	addwfc	fsr2h,f,c
 29576  0025E0  5183               	movf	?___lwdiv& (0+255),w,b
 29577  0025E2  5CDE               	subwf	postinc2,w,c
 29578  0025E4  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29579  0025E6  58DE               	subwfb	postinc2,w,c
 29580  0025E8  A0D8               	btfss	status,0,c
 29581  0025EA  D056               	goto	l2050
 29582                           
 29583                           ; BSR set to: 0
 29584                           ;led.c: 145: {
 29585                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 29586  0025EC  EE20 F002          	lfsr	2,2
 29587  0025F0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29588  0025F2  26D9               	addwf	fsr2l,f,c
 29589  0025F4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29590  0025F6  22DA               	addwfc	fsr2h,f,c
 29591  0025F8  0E00               	movlw	0
 29592  0025FA  6EDE               	movwf	postinc2,c
 29593  0025FC  0E00               	movlw	0
 29594  0025FE  6EDD               	movwf	postdec2,c
 29595                           
 29596                           ;led.c: 149: LedBlink->LedOutState = OnState;
 29597  002600  EE20 F001          	lfsr	2,1
 29598  002604  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29599  002606  26D9               	addwf	fsr2l,f,c
 29600  002608  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29601  00260A  22DA               	addwfc	fsr2h,f,c
 29602  00260C                     L47:
 29603  00260C  0E01               	movlw	1
 29604  00260E  D037               	goto	L48
 29605  002610                     l2052:
 29606                           
 29607                           ; BSR set to: 0
 29608                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 29609                           
 29610                           ; BSR set to: 0
 29611  002610  EE20 F001          	lfsr	2,1
 29612  002614  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29613  002616  26D9               	addwf	fsr2l,f,c
 29614  002618  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29615  00261A  22DA               	addwfc	fsr2h,f,c
 29616  00261C  04DE               	decf	postinc2,w,c
 29617  00261E  A4D8               	btfss	status,2,c
 29618  002620  D03B               	goto	l2050
 29619                           
 29620                           ; BSR set to: 0
 29621                           ;led.c: 153: {
 29622                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 29623  002622  EE20 F004          	lfsr	2,4
 29624  002626  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29625  002628  26D9               	addwf	fsr2l,f,c
 29626  00262A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29627  00262C  22DA               	addwfc	fsr2h,f,c
 29628  00262E  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29629  002632  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29630  002636  0E00               	movlw	0
 29631  002638  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29632  00263A  0E32               	movlw	50
 29633  00263C  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29634  00263E  ECE5  F029         	call	___lwdiv	;wreg free
 29635  002642  0100               	movlb	0	; () banked
 29636  002644  EE20 F002          	lfsr	2,2
 29637  002648  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29638  00264A  26D9               	addwf	fsr2l,f,c
 29639  00264C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29640  00264E  22DA               	addwfc	fsr2h,f,c
 29641  002650  5183               	movf	?___lwdiv& (0+255),w,b
 29642  002652  5CDE               	subwf	postinc2,w,c
 29643  002654  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29644  002656  58DE               	subwfb	postinc2,w,c
 29645  002658  A0D8               	btfss	status,0,c
 29646  00265A  D01E               	goto	l2050
 29647                           
 29648                           ; BSR set to: 0
 29649                           ;led.c: 156: {
 29650                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 29651  00265C  EE20 F002          	lfsr	2,2
 29652  002660  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29653  002662  26D9               	addwf	fsr2l,f,c
 29654  002664  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29655  002666  22DA               	addwfc	fsr2h,f,c
 29656  002668  0E00               	movlw	0
 29657  00266A  6EDE               	movwf	postinc2,c
 29658  00266C  0E00               	movlw	0
 29659  00266E  6EDD               	movwf	postdec2,c
 29660                           
 29661                           ;led.c: 160: LedBlink->LedOutState = OffState;
 29662  002670  EE20 F001          	lfsr	2,1
 29663  002674  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29664  002676  26D9               	addwf	fsr2l,f,c
 29665  002678  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29666  00267A  22DA               	addwfc	fsr2h,f,c
 29667  00267C  0E00               	movlw	0
 29668  00267E                     L48:
 29669  00267E  6EDF               	movwf	indf2,c
 29670                           
 29671                           ; BSR set to: 0
 29672                           ;led.c: 167: }
 29673                           
 29674                           ; BSR set to: 0
 29675                           ;led.c: 166: break;
 29676                           
 29677                           ;led.c: 165: default:
 29678                           
 29679                           ; BSR set to: 0
 29680                           ;led.c: 161: }
 29681                           ;led.c: 162: }
 29682                           ;led.c: 163: break;
 29683                           
 29684                           ; BSR set to: 0
 29685                           
 29686                           ; BSR set to: 0
 29687  002680  D00B               	goto	l2050
 29688  002682                     l2048:
 29689                           
 29690                           ; BSR set to: 0
 29691  002682  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 29692  002686  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 29693  00268A  50DF               	movf	indf2,w,c
 29694                           
 29695                           ; Switch size 1, requested type "space"
 29696                           ; Number of cases is 2, Range of values is 0 to 1
 29697                           ; switch strategies available:
 29698                           ; Name         Instructions Cycles
 29699                           ; simple_byte            7     4 (average)
 29700                           ;	Chosen strategy is simple_byte
 29701  00268C  0A00               	xorlw	0	; case 0
 29702  00268E  B4D8               	btfsc	status,2,c
 29703  002690  D769               	goto	l2049
 29704  002692  0A01               	xorlw	1	; case 1
 29705  002694  B4D8               	btfsc	status,2,c
 29706  002696  D77A               	goto	l2051
 29707  002698                     l2050:
 29708                           
 29709                           ;led.c: 170: return (LedBlink->LedOutState);
 29710  002698  0100               	movlb	0	; () banked
 29711  00269A  EE20 F001          	lfsr	2,1
 29712  00269E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29713  0026A0  26D9               	addwf	fsr2l,f,c
 29714  0026A2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29715  0026A4  22DA               	addwfc	fsr2h,f,c
 29716  0026A6  50DF               	movf	indf2,w,c
 29717  0026A8  0012               	return	
 29718  0026AA                     __end_of_LedBlinkStateMachine:
 29719                           	opt stack 0
 29720                           tosu	equ	0xFFF
 29721                           tosh	equ	0xFFE
 29722                           tosl	equ	0xFFD
 29723                           pclath	equ	0xFFA
 29724                           tblptru	equ	0xFF8
 29725                           tblptrh	equ	0xFF7
 29726                           tblptrl	equ	0xFF6
 29727                           tablat	equ	0xFF5
 29728                           prodh	equ	0xFF4
 29729                           prodl	equ	0xFF3
 29730                           intcon	equ	0xFF2
 29731                           intcon2	equ	0xFF1
 29732                           intcon3	equ	0xFF0
 29733                           indf0	equ	0xFEF
 29734                           postinc0	equ	0xFEE
 29735                           plusw0	equ	0xFEB
 29736                           fsr0h	equ	0xFEA
 29737                           fsr0l	equ	0xFE9
 29738                           wreg	equ	0xFE8
 29739                           indf1	equ	0xFE7
 29740                           postinc1	equ	0xFE6
 29741                           postdec1	equ	0xFE5
 29742                           plusw1	equ	0xFE3
 29743                           fsr1h	equ	0xFE2
 29744                           fsr1l	equ	0xFE1
 29745                           indf2	equ	0xFDF
 29746                           postinc2	equ	0xFDE
 29747                           postdec2	equ	0xFDD
 29748                           plusw2	equ	0xFDB
 29749                           fsr2h	equ	0xFDA
 29750                           fsr2l	equ	0xFD9
 29751                           status	equ	0xFD8
 29752                           
 29753 ;; *************** function ___lwdiv *****************
 29754 ;; Defined at:
 29755 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 29756 ;; Parameters:    Size  Location     Type
 29757 ;;  dividend        2   35[BANK0 ] unsigned int 
 29758 ;;  divisor         2   37[BANK0 ] unsigned int 
 29759 ;; Auto vars:     Size  Location     Type
 29760 ;;  quotient        2   40[BANK0 ] unsigned int 
 29761 ;;  counter         1   39[BANK0 ] unsigned char 
 29762 ;; Return value:  Size  Location     Type
 29763 ;;                  2   35[BANK0 ] unsigned int 
 29764 ;; Registers used:
 29765 ;;		wreg, status,2, status,0
 29766 ;; Tracked objects:
 29767 ;;		On entry : 0/0
 29768 ;;		On exit  : 0/0
 29769 ;;		Unchanged: 0/0
 29770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29771 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29772 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29774 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29775 ;;Total ram usage:        7 bytes
 29776 ;; Hardware stack levels used:    1
 29777 ;; Hardware stack levels required when called:   11
 29778 ;; This function calls:
 29779 ;;		Nothing
 29780 ;; This function is called by:
 29781 ;;		_LedBlinkStateMachine
 29782 ;;		_LedPulseStateMachine
 29783 ;;		_secondsAppTimer
 29784 ;;		_utoa
 29785 ;; This function uses a non-reentrant model
 29786 ;;
 29787                           
 29788                           	psect	text135
 29789  0053CA                     __ptext135:
 29790                           	opt stack 0
 29791  0053CA                     ___lwdiv:
 29792                           	opt stack 14
 29793                           
 29794                           ; BSR set to: 0
 29795                           ;incstack = 0
 29796  0053CA  0E00               	movlw	0
 29797  0053CC  0100               	movlb	0	; () banked
 29798  0053CE  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 29799  0053D0  0E00               	movlw	0
 29800  0053D2  6F88               	movwf	___lwdiv@quotient& (0+255),b
 29801                           
 29802                           ; BSR set to: 0
 29803  0053D4  5185               	movf	___lwdiv@divisor& (0+255),w,b
 29804  0053D6  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 29805  0053D8  B4D8               	btfsc	status,2,c
 29806  0053DA  D01C               	goto	l3055
 29807                           
 29808                           ; BSR set to: 0
 29809  0053DC  0E01               	movlw	1
 29810  0053DE  6F87               	movwf	___lwdiv@counter& (0+255),b
 29811  0053E0  D004               	goto	l3050
 29812  0053E2                     
 29813                           ; BSR set to: 0
 29814                           
 29815                           ; BSR set to: 0
 29816  0053E2  90D8               	bcf	status,0,c
 29817  0053E4  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 29818  0053E6  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 29819  0053E8  2B87               	incf	___lwdiv@counter& (0+255),f,b
 29820  0053EA                     l3050:
 29821                           
 29822                           ; BSR set to: 0
 29823                           
 29824                           ; BSR set to: 0
 29825  0053EA  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 29826  0053EC  D7FA               	goto	l3051
 29827  0053EE                     u10400:
 29828                           
 29829                           ; BSR set to: 0
 29830                           
 29831                           ; BSR set to: 0
 29832                           
 29833                           ; BSR set to: 0
 29834  0053EE  90D8               	bcf	status,0,c
 29835  0053F0  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 29836  0053F2  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 29837                           
 29838                           ; BSR set to: 0
 29839  0053F4  5185               	movf	___lwdiv@divisor& (0+255),w,b
 29840  0053F6  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 29841  0053F8  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29842  0053FA  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 29843  0053FC  A0D8               	btfss	status,0,c
 29844  0053FE  D005               	goto	l3054
 29845                           
 29846                           ; BSR set to: 0
 29847  005400  5185               	movf	___lwdiv@divisor& (0+255),w,b
 29848  005402  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 29849  005404  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29850  005406  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 29851                           
 29852                           ; BSR set to: 0
 29853  005408  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 29854  00540A                     l3054:
 29855                           
 29856                           ; BSR set to: 0
 29857                           
 29858                           ; BSR set to: 0
 29859  00540A  90D8               	bcf	status,0,c
 29860  00540C  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 29861  00540E  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 29862                           
 29863                           ; BSR set to: 0
 29864  005410  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 29865  005412  D7ED               	goto	u10400
 29866  005414                     l3055:
 29867                           
 29868                           ; BSR set to: 0
 29869                           
 29870                           ; BSR set to: 0
 29871  005414  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 29872  005418  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29873                           
 29874                           ; BSR set to: 0
 29875  00541C  0012               	return		;funcret
 29876  00541E                     __end_of___lwdiv:
 29877                           	opt stack 0
 29878                           tosu	equ	0xFFF
 29879                           tosh	equ	0xFFE
 29880                           tosl	equ	0xFFD
 29881                           pclath	equ	0xFFA
 29882                           tblptru	equ	0xFF8
 29883                           tblptrh	equ	0xFF7
 29884                           tblptrl	equ	0xFF6
 29885                           tablat	equ	0xFF5
 29886                           prodh	equ	0xFF4
 29887                           prodl	equ	0xFF3
 29888                           intcon	equ	0xFF2
 29889                           intcon2	equ	0xFF1
 29890                           intcon3	equ	0xFF0
 29891                           indf0	equ	0xFEF
 29892                           postinc0	equ	0xFEE
 29893                           plusw0	equ	0xFEB
 29894                           fsr0h	equ	0xFEA
 29895                           fsr0l	equ	0xFE9
 29896                           wreg	equ	0xFE8
 29897                           indf1	equ	0xFE7
 29898                           postinc1	equ	0xFE6
 29899                           postdec1	equ	0xFE5
 29900                           plusw1	equ	0xFE3
 29901                           fsr1h	equ	0xFE2
 29902                           fsr1l	equ	0xFE1
 29903                           indf2	equ	0xFDF
 29904                           postinc2	equ	0xFDE
 29905                           postdec2	equ	0xFDD
 29906                           plusw2	equ	0xFDB
 29907                           fsr2h	equ	0xFDA
 29908                           fsr2l	equ	0xFD9
 29909                           status	equ	0xFD8
 29910                           
 29911 ;; *************** function _OsAlrm_SetOsAlarm *****************
 29912 ;; Defined at:
 29913 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 29914 ;; Parameters:    Size  Location     Type
 29915 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 29916 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 29917 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 29918 ;;		 -> I2cDummyTx(1), 
 29919 ;; Auto vars:     Size  Location     Type
 29920 ;;		None
 29921 ;; Return value:  Size  Location     Type
 29922 ;;                  1    wreg      void 
 29923 ;; Registers used:
 29924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29925 ;; Tracked objects:
 29926 ;;		On entry : 0/0
 29927 ;;		On exit  : 0/0
 29928 ;;		Unchanged: 0/0
 29929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29930 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29933 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29934 ;;Total ram usage:        8 bytes
 29935 ;; Hardware stack levels used:    1
 29936 ;; Hardware stack levels required when called:   12
 29937 ;; This function calls:
 29938 ;;		___wmul
 29939 ;; This function is called by:
 29940 ;;		_I2cSlv_MainTask
 29941 ;; This function uses a non-reentrant model
 29942 ;;
 29943                           
 29944                           	psect	text136
 29945  003CEE                     __ptext136:
 29946                           	opt stack 0
 29947  003CEE                     _OsAlrm_SetOsAlarm:
 29948                           	opt stack 15
 29949                           
 29950                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 29951                           
 29952                           ; BSR set to: 0
 29953                           ;incstack = 0
 29954  003CEE  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29955  003CF2  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29956  003CF6  0E00               	movlw	0
 29957  003CF8  0100               	movlb	0	; () banked
 29958  003CFA  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29959  003CFC  0E0B               	movlw	11
 29960  003CFE  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29961  003D00  ECA4  F02E         	call	___wmul	;wreg free
 29962  003D04  0E00               	movlw	low _OsAlarms
 29963  003D06  0100               	movlb	0	; () banked
 29964  003D08  257D               	addwf	?___wmul& (0+255),w,b
 29965  003D0A  6ED9               	movwf	fsr2l,c
 29966  003D0C  0E06               	movlw	high _OsAlarms
 29967  003D0E  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29968  003D10  6EDA               	movwf	fsr2h,c
 29969  003D12  0E01               	movlw	1
 29970  003D14  6EDF               	movwf	indf2,c
 29971                           
 29972                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 29973  003D16  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29974  003D1A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29975  003D1E  0E00               	movlw	0
 29976  003D20  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29977  003D22  0E0B               	movlw	11
 29978  003D24  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29979  003D26  ECA4  F02E         	call	___wmul	;wreg free
 29980  003D2A  0E01               	movlw	1
 29981  003D2C  0100               	movlb	0	; () banked
 29982  003D2E  277D               	addwf	?___wmul& (0+255),f,b
 29983  003D30  0E00               	movlw	0
 29984  003D32  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 29985  003D34  0E00               	movlw	low _OsAlarms
 29986  003D36  257D               	addwf	?___wmul& (0+255),w,b
 29987  003D38  6ED9               	movwf	fsr2l,c
 29988  003D3A  0E06               	movlw	high _OsAlarms
 29989  003D3C  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29990  003D3E  6EDA               	movwf	fsr2h,c
 29991  003D40  6ADE               	clrf	postinc2,c
 29992  003D42  6ADE               	clrf	postinc2,c
 29993  003D44  6ADE               	clrf	postinc2,c
 29994  003D46  6ADD               	clrf	postdec2,c
 29995                           
 29996                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 29997  003D48  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29998  003D4C  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29999  003D50  0E00               	movlw	0
 30000  003D52  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30001  003D54  0E0B               	movlw	11
 30002  003D56  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30003  003D58  ECA4  F02E         	call	___wmul	;wreg free
 30004  003D5C  0E05               	movlw	5
 30005  003D5E  0100               	movlb	0	; () banked
 30006  003D60  277D               	addwf	?___wmul& (0+255),f,b
 30007  003D62  0E00               	movlw	0
 30008  003D64  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30009  003D66  0E00               	movlw	low _OsAlarms
 30010  003D68  257D               	addwf	?___wmul& (0+255),w,b
 30011  003D6A  6ED9               	movwf	fsr2l,c
 30012  003D6C  0E06               	movlw	high _OsAlarms
 30013  003D6E  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30014  003D70  6EDA               	movwf	fsr2h,c
 30015  003D72  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 30016  003D76  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 30017  003D7A  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 30018  003D7E  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 30019                           
 30020                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 30021  003D82  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30022  003D86  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30023  003D8A  0E00               	movlw	0
 30024  003D8C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30025  003D8E  0E0B               	movlw	11
 30026  003D90  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30027  003D92  ECA4  F02E         	call	___wmul	;wreg free
 30028  003D96  0E09               	movlw	9
 30029  003D98  0100               	movlb	0	; () banked
 30030  003D9A  277D               	addwf	?___wmul& (0+255),f,b
 30031  003D9C  0E00               	movlw	0
 30032  003D9E  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30033  003DA0  0E00               	movlw	low _OsAlarms
 30034  003DA2  257D               	addwf	?___wmul& (0+255),w,b
 30035  003DA4  6ED9               	movwf	fsr2l,c
 30036  003DA6  0E06               	movlw	high _OsAlarms
 30037  003DA8  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30038  003DAA  6EDA               	movwf	fsr2h,c
 30039  003DAC  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 30040  003DB0  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 30041                           
 30042                           ; BSR set to: 0
 30043  003DB4  0012               	return		;funcret
 30044  003DB6                     __end_of_OsAlrm_SetOsAlarm:
 30045                           	opt stack 0
 30046                           tosu	equ	0xFFF
 30047                           tosh	equ	0xFFE
 30048                           tosl	equ	0xFFD
 30049                           pclath	equ	0xFFA
 30050                           tblptru	equ	0xFF8
 30051                           tblptrh	equ	0xFF7
 30052                           tblptrl	equ	0xFF6
 30053                           tablat	equ	0xFF5
 30054                           prodh	equ	0xFF4
 30055                           prodl	equ	0xFF3
 30056                           intcon	equ	0xFF2
 30057                           intcon2	equ	0xFF1
 30058                           intcon3	equ	0xFF0
 30059                           indf0	equ	0xFEF
 30060                           postinc0	equ	0xFEE
 30061                           plusw0	equ	0xFEB
 30062                           fsr0h	equ	0xFEA
 30063                           fsr0l	equ	0xFE9
 30064                           wreg	equ	0xFE8
 30065                           indf1	equ	0xFE7
 30066                           postinc1	equ	0xFE6
 30067                           postdec1	equ	0xFE5
 30068                           plusw1	equ	0xFE3
 30069                           fsr1h	equ	0xFE2
 30070                           fsr1l	equ	0xFE1
 30071                           indf2	equ	0xFDF
 30072                           postinc2	equ	0xFDE
 30073                           postdec2	equ	0xFDD
 30074                           plusw2	equ	0xFDB
 30075                           fsr2h	equ	0xFDA
 30076                           fsr2l	equ	0xFD9
 30077                           status	equ	0xFD8
 30078                           
 30079 ;; *************** function ___wmul *****************
 30080 ;; Defined at:
 30081 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 30082 ;; Parameters:    Size  Location     Type
 30083 ;;  multiplier      2   29[BANK0 ] unsigned int 
 30084 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 30085 ;; Auto vars:     Size  Location     Type
 30086 ;;  product         2   33[BANK0 ] unsigned int 
 30087 ;; Return value:  Size  Location     Type
 30088 ;;                  2   29[BANK0 ] unsigned int 
 30089 ;; Registers used:
 30090 ;;		wreg, status,2, status,0, prodl, prodh
 30091 ;; Tracked objects:
 30092 ;;		On entry : 0/0
 30093 ;;		On exit  : 0/0
 30094 ;;		Unchanged: 0/0
 30095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30096 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30097 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30099 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30100 ;;Total ram usage:        6 bytes
 30101 ;; Hardware stack levels used:    1
 30102 ;; Hardware stack levels required when called:   11
 30103 ;; This function calls:
 30104 ;;		Nothing
 30105 ;; This function is called by:
 30106 ;;		_OsAlrm_SetOsAlarm
 30107 ;;		_secondsAppTimer
 30108 ;;		_atoi
 30109 ;; This function uses a non-reentrant model
 30110 ;;
 30111                           
 30112                           	psect	text137
 30113  005D48                     __ptext137:
 30114                           	opt stack 0
 30115  005D48                     ___wmul:
 30116                           	opt stack 13
 30117                           
 30118                           ; BSR set to: 0
 30119                           ;incstack = 0
 30120  005D48  0100               	movlb	0	; () banked
 30121  005D4A  517D               	movf	___wmul@multiplier& (0+255),w,b
 30122  005D4C  037F               	mulwf	___wmul@multiplicand& (0+255),b
 30123  005D4E  CFF3 F081          	movff	prodl,___wmul@product
 30124  005D52  CFF4 F082          	movff	prodh,___wmul@product+1
 30125  005D56  517D               	movf	___wmul@multiplier& (0+255),w,b
 30126  005D58  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 30127  005D5A  50F3               	movf	prodl,w,c
 30128  005D5C  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 30129  005D5E  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 30130  005D60  037F               	mulwf	___wmul@multiplicand& (0+255),b
 30131  005D62  50F3               	movf	prodl,w,c
 30132  005D64  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 30133                           
 30134                           ; BSR set to: 0
 30135  005D66  C081  F07D         	movff	___wmul@product,?___wmul
 30136  005D6A  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 30137  005D6E  0012               	return	
 30138  005D70                     __end_of___wmul:
 30139                           	opt stack 0
 30140                           tosu	equ	0xFFF
 30141                           tosh	equ	0xFFE
 30142                           tosl	equ	0xFFD
 30143                           pclath	equ	0xFFA
 30144                           tblptru	equ	0xFF8
 30145                           tblptrh	equ	0xFF7
 30146                           tblptrl	equ	0xFF6
 30147                           tablat	equ	0xFF5
 30148                           prodh	equ	0xFF4
 30149                           prodl	equ	0xFF3
 30150                           intcon	equ	0xFF2
 30151                           intcon2	equ	0xFF1
 30152                           intcon3	equ	0xFF0
 30153                           indf0	equ	0xFEF
 30154                           postinc0	equ	0xFEE
 30155                           plusw0	equ	0xFEB
 30156                           fsr0h	equ	0xFEA
 30157                           fsr0l	equ	0xFE9
 30158                           wreg	equ	0xFE8
 30159                           indf1	equ	0xFE7
 30160                           postinc1	equ	0xFE6
 30161                           postdec1	equ	0xFE5
 30162                           plusw1	equ	0xFE3
 30163                           fsr1h	equ	0xFE2
 30164                           fsr1l	equ	0xFE1
 30165                           indf2	equ	0xFDF
 30166                           postinc2	equ	0xFDE
 30167                           postdec2	equ	0xFDD
 30168                           plusw2	equ	0xFDB
 30169                           fsr2h	equ	0xFDA
 30170                           fsr2l	equ	0xFD9
 30171                           status	equ	0xFD8
 30172                           
 30173 ;; *************** function _I2c_InitI2cModule *****************
 30174 ;; Defined at:
 30175 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30176 ;; Parameters:    Size  Location     Type
 30177 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 30178 ;;		 -> I2cConfig(10), 
 30179 ;; Auto vars:     Size  Location     Type
 30180 ;;		None
 30181 ;; Return value:  Size  Location     Type
 30182 ;;                  1    wreg      void 
 30183 ;; Registers used:
 30184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30185 ;; Tracked objects:
 30186 ;;		On entry : 0/0
 30187 ;;		On exit  : 0/0
 30188 ;;		Unchanged: 0/0
 30189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30190 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30192 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30193 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30194 ;;Total ram usage:        4 bytes
 30195 ;; Hardware stack levels used:    1
 30196 ;; Hardware stack levels required when called:   13
 30197 ;; This function calls:
 30198 ;;		_SetBaudRate
 30199 ;; This function is called by:
 30200 ;;		_I2cSlv_MainTask
 30201 ;; This function uses a non-reentrant model
 30202 ;;
 30203                           
 30204                           	psect	text138
 30205  004D6E                     __ptext138:
 30206                           	opt stack 0
 30207  004D6E                     _I2c_InitI2cModule:
 30208                           	opt stack 14
 30209                           
 30210                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 30211                           
 30212                           ; BSR set to: 0
 30213                           ;incstack = 0
 30214  004D6E  8295               	bsf	3989,1,c	;volatile
 30215                           
 30216                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 30217  004D70  8095               	bsf	3989,0,c	;volatile
 30218                           
 30219                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 30220  004D72  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 30221  004D76  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 30222  004D7A  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 30223  004D7E  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 30224  004D82  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 30225  004D86  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 30226  004D8A  0100               	movlb	0	; () banked
 30227  004D8C  EE20 F004          	lfsr	2,4
 30228  004D90  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30229  004D92  26D9               	addwf	fsr2l,f,c
 30230  004D94  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30231  004D96  22DA               	addwfc	fsr2h,f,c
 30232  004D98  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 30233  004D9C  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 30234  004DA0  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 30235  004DA4  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 30236  004DA8  ECD8  F02A         	call	_SetBaudRate	;wreg free
 30237                           
 30238                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 30239  004DAC  0100               	movlb	0	; () banked
 30240  004DAE  EE20 F008          	lfsr	2,8
 30241  004DB2  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30242  004DB4  26D9               	addwf	fsr2l,f,c
 30243  004DB6  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30244  004DB8  22DA               	addwfc	fsr2h,f,c
 30245  004DBA  50DF               	movf	indf2,w,c
 30246  004DBC  1272               	iorwf	3954,f,c	;volatile
 30247                           
 30248                           ; BSR set to: 0
 30249                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 30250  004DBE  EE20 F009          	lfsr	2,9
 30251  004DC2  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30252  004DC4  26D9               	addwf	fsr2l,f,c
 30253  004DC6  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30254  004DC8  22DA               	addwfc	fsr2h,f,c
 30255  004DCA  50DF               	movf	indf2,w,c
 30256  004DCC  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 30257  004DCE  0E05               	movlw	5
 30258  004DD0  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 30259  004DD2                     u7995:
 30260  004DD2  90D8               	bcf	status,0,c
 30261  004DD4  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 30262  004DD6  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 30263  004DD8  D7FC               	goto	u7995
 30264  004DDA  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 30265  004DDC  1272               	iorwf	3954,f,c	;volatile
 30266                           
 30267                           ; BSR set to: 0
 30268  004DDE  0012               	return		;funcret
 30269  004DE0                     __end_of_I2c_InitI2cModule:
 30270                           	opt stack 0
 30271                           tosu	equ	0xFFF
 30272                           tosh	equ	0xFFE
 30273                           tosl	equ	0xFFD
 30274                           pclath	equ	0xFFA
 30275                           tblptru	equ	0xFF8
 30276                           tblptrh	equ	0xFF7
 30277                           tblptrl	equ	0xFF6
 30278                           tablat	equ	0xFF5
 30279                           prodh	equ	0xFF4
 30280                           prodl	equ	0xFF3
 30281                           intcon	equ	0xFF2
 30282                           intcon2	equ	0xFF1
 30283                           intcon3	equ	0xFF0
 30284                           indf0	equ	0xFEF
 30285                           postinc0	equ	0xFEE
 30286                           plusw0	equ	0xFEB
 30287                           fsr0h	equ	0xFEA
 30288                           fsr0l	equ	0xFE9
 30289                           wreg	equ	0xFE8
 30290                           indf1	equ	0xFE7
 30291                           postinc1	equ	0xFE6
 30292                           postdec1	equ	0xFE5
 30293                           plusw1	equ	0xFE3
 30294                           fsr1h	equ	0xFE2
 30295                           fsr1l	equ	0xFE1
 30296                           indf2	equ	0xFDF
 30297                           postinc2	equ	0xFDE
 30298                           postdec2	equ	0xFDD
 30299                           plusw2	equ	0xFDB
 30300                           fsr2h	equ	0xFDA
 30301                           fsr2l	equ	0xFD9
 30302                           status	equ	0xFD8
 30303                           
 30304 ;; *************** function _SetBaudRate *****************
 30305 ;; Defined at:
 30306 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30307 ;; Parameters:    Size  Location     Type
 30308 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 30309 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 30310 ;; Auto vars:     Size  Location     Type
 30311 ;;		None
 30312 ;; Return value:  Size  Location     Type
 30313 ;;                  1    wreg      void 
 30314 ;; Registers used:
 30315 ;;		wreg, status,2, status,0, cstack
 30316 ;; Tracked objects:
 30317 ;;		On entry : 0/0
 30318 ;;		On exit  : 0/0
 30319 ;;		Unchanged: 0/0
 30320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30321 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30323 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30324 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30325 ;;Total ram usage:       12 bytes
 30326 ;; Hardware stack levels used:    1
 30327 ;; Hardware stack levels required when called:   12
 30328 ;; This function calls:
 30329 ;;		___lldiv
 30330 ;; This function is called by:
 30331 ;;		_I2c_InitI2cModule
 30332 ;; This function uses a non-reentrant model
 30333 ;;
 30334                           
 30335                           	psect	text139
 30336  0055B0                     __ptext139:
 30337                           	opt stack 0
 30338  0055B0                     _SetBaudRate:
 30339                           	opt stack 14
 30340                           
 30341                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 30342                           
 30343                           ; BSR set to: 0
 30344                           ;incstack = 0
 30345  0055B0  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 30346  0055B4  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 30347  0055B8  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 30348  0055BC  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 30349  0055C0  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 30350  0055C4  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 30351  0055C8  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 30352  0055CC  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 30353  0055D0  0E02               	movlw	2
 30354  0055D2                     u6965:
 30355  0055D2  90D8               	bcf	status,0,c
 30356  0055D4  0100               	movlb	0	; () banked
 30357  0055D6  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 30358  0055D8  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 30359  0055DA  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 30360  0055DC  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 30361  0055DE  2EE8               	decfsz	wreg,f,c
 30362  0055E0  D7F8               	goto	u6965
 30363  0055E2  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 30364  0055E6  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 30365  0055EA  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 30366  0055EE  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 30367  0055F2  EC7F  F025         	call	___lldiv	;wreg free
 30368  0055F6  0100               	movlb	0	; () banked
 30369  0055F8  0589               	decf	?___lldiv& (0+255),w,b
 30370  0055FA  6E74               	movwf	3956,c	;volatile
 30371                           
 30372                           ; BSR set to: 0
 30373  0055FC  0012               	return		;funcret
 30374  0055FE                     __end_of_SetBaudRate:
 30375                           	opt stack 0
 30376                           tosu	equ	0xFFF
 30377                           tosh	equ	0xFFE
 30378                           tosl	equ	0xFFD
 30379                           pclath	equ	0xFFA
 30380                           tblptru	equ	0xFF8
 30381                           tblptrh	equ	0xFF7
 30382                           tblptrl	equ	0xFF6
 30383                           tablat	equ	0xFF5
 30384                           prodh	equ	0xFF4
 30385                           prodl	equ	0xFF3
 30386                           intcon	equ	0xFF2
 30387                           intcon2	equ	0xFF1
 30388                           intcon3	equ	0xFF0
 30389                           indf0	equ	0xFEF
 30390                           postinc0	equ	0xFEE
 30391                           plusw0	equ	0xFEB
 30392                           fsr0h	equ	0xFEA
 30393                           fsr0l	equ	0xFE9
 30394                           wreg	equ	0xFE8
 30395                           indf1	equ	0xFE7
 30396                           postinc1	equ	0xFE6
 30397                           postdec1	equ	0xFE5
 30398                           plusw1	equ	0xFE3
 30399                           fsr1h	equ	0xFE2
 30400                           fsr1l	equ	0xFE1
 30401                           indf2	equ	0xFDF
 30402                           postinc2	equ	0xFDE
 30403                           postdec2	equ	0xFDD
 30404                           plusw2	equ	0xFDB
 30405                           fsr2h	equ	0xFDA
 30406                           fsr2l	equ	0xFD9
 30407                           status	equ	0xFD8
 30408                           
 30409 ;; *************** function ___lldiv *****************
 30410 ;; Defined at:
 30411 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 30412 ;; Parameters:    Size  Location     Type
 30413 ;;  dividend        4   41[BANK0 ] unsigned long 
 30414 ;;  divisor         4   45[BANK0 ] unsigned long 
 30415 ;; Auto vars:     Size  Location     Type
 30416 ;;  quotient        4   49[BANK0 ] unsigned long 
 30417 ;;  counter         1   53[BANK0 ] unsigned char 
 30418 ;; Return value:  Size  Location     Type
 30419 ;;                  4   41[BANK0 ] unsigned long 
 30420 ;; Registers used:
 30421 ;;		wreg, status,2, status,0
 30422 ;; Tracked objects:
 30423 ;;		On entry : 0/0
 30424 ;;		On exit  : 0/0
 30425 ;;		Unchanged: 0/0
 30426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30427 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30428 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30430 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30431 ;;Total ram usage:       13 bytes
 30432 ;; Hardware stack levels used:    1
 30433 ;; Hardware stack levels required when called:   11
 30434 ;; This function calls:
 30435 ;;		Nothing
 30436 ;; This function is called by:
 30437 ;;		_SetBaudRate
 30438 ;;		_Tmr_TmrBPrSet
 30439 ;;		_SetUartBaudRate
 30440 ;; This function uses a non-reentrant model
 30441 ;;
 30442                           
 30443                           	psect	text140
 30444  004AFE                     __ptext140:
 30445                           	opt stack 0
 30446  004AFE                     ___lldiv:
 30447                           	opt stack 15
 30448                           
 30449                           ; BSR set to: 0
 30450                           ;incstack = 0
 30451  004AFE  0E00               	movlw	0
 30452  004B00  0100               	movlb	0	; () banked
 30453  004B02  6F91               	movwf	___lldiv@quotient& (0+255),b
 30454  004B04  0E00               	movlw	0
 30455  004B06  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 30456  004B08  0E00               	movlw	0
 30457  004B0A  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 30458  004B0C  0E00               	movlw	0
 30459  004B0E  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 30460                           
 30461                           ; BSR set to: 0
 30462  004B10  518D               	movf	___lldiv@divisor& (0+255),w,b
 30463  004B12  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30464  004B14  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30465  004B16  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30466  004B18  B4D8               	btfsc	status,2,c
 30467  004B1A  D02A               	goto	l3002
 30468                           
 30469                           ; BSR set to: 0
 30470  004B1C  0E01               	movlw	1
 30471  004B1E  6F95               	movwf	___lldiv@counter& (0+255),b
 30472  004B20  D006               	goto	l2997
 30473  004B22                     
 30474                           ; BSR set to: 0
 30475                           
 30476                           ; BSR set to: 0
 30477  004B22  90D8               	bcf	status,0,c
 30478  004B24  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 30479  004B26  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30480  004B28  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30481  004B2A  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30482  004B2C  2B95               	incf	___lldiv@counter& (0+255),f,b
 30483  004B2E                     l2997:
 30484                           
 30485                           ; BSR set to: 0
 30486                           
 30487                           ; BSR set to: 0
 30488  004B2E  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 30489  004B30  D7F8               	goto	l2998
 30490  004B32                     u6060:
 30491                           
 30492                           ; BSR set to: 0
 30493                           
 30494                           ; BSR set to: 0
 30495                           
 30496                           ; BSR set to: 0
 30497  004B32  90D8               	bcf	status,0,c
 30498  004B34  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 30499  004B36  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30500  004B38  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 30501  004B3A  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 30502                           
 30503                           ; BSR set to: 0
 30504  004B3C  518D               	movf	___lldiv@divisor& (0+255),w,b
 30505  004B3E  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 30506  004B40  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30507  004B42  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 30508  004B44  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30509  004B46  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 30510  004B48  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30511  004B4A  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 30512  004B4C  A0D8               	btfss	status,0,c
 30513  004B4E  D009               	goto	l3001
 30514                           
 30515                           ; BSR set to: 0
 30516  004B50  518D               	movf	___lldiv@divisor& (0+255),w,b
 30517  004B52  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 30518  004B54  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30519  004B56  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 30520  004B58  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30521  004B5A  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 30522  004B5C  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30523  004B5E  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 30524                           
 30525                           ; BSR set to: 0
 30526  004B60  8191               	bsf	___lldiv@quotient& (0+255),0,b
 30527  004B62                     l3001:
 30528                           
 30529                           ; BSR set to: 0
 30530                           
 30531                           ; BSR set to: 0
 30532  004B62  90D8               	bcf	status,0,c
 30533  004B64  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 30534  004B66  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 30535  004B68  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 30536  004B6A  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 30537                           
 30538                           ; BSR set to: 0
 30539  004B6C  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 30540  004B6E  D7E1               	goto	u6060
 30541  004B70                     l3002:
 30542                           
 30543                           ; BSR set to: 0
 30544                           
 30545                           ; BSR set to: 0
 30546  004B70  C091  F089         	movff	___lldiv@quotient,?___lldiv
 30547  004B74  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 30548  004B78  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 30549  004B7C  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 30550                           
 30551                           ; BSR set to: 0
 30552  004B80  0012               	return		;funcret
 30553  004B82                     __end_of___lldiv:
 30554                           	opt stack 0
 30555                           tosu	equ	0xFFF
 30556                           tosh	equ	0xFFE
 30557                           tosl	equ	0xFFD
 30558                           pclath	equ	0xFFA
 30559                           tblptru	equ	0xFF8
 30560                           tblptrh	equ	0xFF7
 30561                           tblptrl	equ	0xFF6
 30562                           tablat	equ	0xFF5
 30563                           prodh	equ	0xFF4
 30564                           prodl	equ	0xFF3
 30565                           intcon	equ	0xFF2
 30566                           intcon2	equ	0xFF1
 30567                           intcon3	equ	0xFF0
 30568                           indf0	equ	0xFEF
 30569                           postinc0	equ	0xFEE
 30570                           plusw0	equ	0xFEB
 30571                           fsr0h	equ	0xFEA
 30572                           fsr0l	equ	0xFE9
 30573                           wreg	equ	0xFE8
 30574                           indf1	equ	0xFE7
 30575                           postinc1	equ	0xFE6
 30576                           postdec1	equ	0xFE5
 30577                           plusw1	equ	0xFE3
 30578                           fsr1h	equ	0xFE2
 30579                           fsr1l	equ	0xFE1
 30580                           indf2	equ	0xFDF
 30581                           postinc2	equ	0xFDE
 30582                           postdec2	equ	0xFDD
 30583                           plusw2	equ	0xFDB
 30584                           fsr2h	equ	0xFDA
 30585                           fsr2l	equ	0xFD9
 30586                           status	equ	0xFD8
 30587                           
 30588 ;; *************** function _I2cSetConfig *****************
 30589 ;; Defined at:
 30590 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 30591 ;; Parameters:    Size  Location     Type
 30592 ;;		None
 30593 ;; Auto vars:     Size  Location     Type
 30594 ;;		None
 30595 ;; Return value:  Size  Location     Type
 30596 ;;                  1    wreg      void 
 30597 ;; Registers used:
 30598 ;;		wreg, status,2
 30599 ;; Tracked objects:
 30600 ;;		On entry : 0/0
 30601 ;;		On exit  : 0/0
 30602 ;;		Unchanged: 0/0
 30603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30608 ;;Total ram usage:        0 bytes
 30609 ;; Hardware stack levels used:    1
 30610 ;; Hardware stack levels required when called:   11
 30611 ;; This function calls:
 30612 ;;		Nothing
 30613 ;; This function is called by:
 30614 ;;		_I2cSlv_MainTask
 30615 ;; This function uses a non-reentrant model
 30616 ;;
 30617                           
 30618                           	psect	text141
 30619  005CC8                     __ptext141:
 30620                           	opt stack 0
 30621  005CC8                     _I2cSetConfig:
 30622                           	opt stack 16
 30623                           
 30624                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 30625                           
 30626                           ; BSR set to: 0
 30627                           ;incstack = 0
 30628  005CC8  0E80               	movlw	128
 30629  005CCA  0103               	movlb	3	; () banked
 30630  005CCC  6F52               	movwf	_I2cConfig& (0+255),b
 30631  005CCE  0E1A               	movlw	26
 30632  005CD0  6F53               	movwf	(_I2cConfig+1)& (0+255),b
 30633  005CD2  0E06               	movlw	6
 30634  005CD4  6F54               	movwf	(_I2cConfig+2)& (0+255),b
 30635  005CD6  0E00               	movlw	0
 30636  005CD8  6F55               	movwf	(_I2cConfig+3)& (0+255),b
 30637                           
 30638                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 30639  005CDA  0E00               	movlw	0
 30640  005CDC  6F56               	movwf	(_I2cConfig+4)& (0+255),b
 30641  005CDE  0E6C               	movlw	108
 30642  005CE0  6F57               	movwf	(_I2cConfig+5)& (0+255),b
 30643  005CE2  0EDC               	movlw	220
 30644  005CE4  6F58               	movwf	(_I2cConfig+6)& (0+255),b
 30645  005CE6  0E02               	movlw	2
 30646  005CE8  6F59               	movwf	(_I2cConfig+7)& (0+255),b
 30647                           
 30648                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 30649  005CEA  0E08               	movlw	8
 30650  005CEC  6F5A               	movwf	(_I2cConfig+8)& (0+255),b
 30651                           
 30652                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 30653  005CEE  0E01               	movlw	1
 30654  005CF0  6F5B               	movwf	(_I2cConfig+9)& (0+255),b
 30655                           
 30656                           ; BSR set to: 3
 30657  005CF2  0012               	return		;funcret
 30658  005CF4                     __end_of_I2cSetConfig:
 30659                           	opt stack 0
 30660                           tosu	equ	0xFFF
 30661                           tosh	equ	0xFFE
 30662                           tosl	equ	0xFFD
 30663                           pclath	equ	0xFFA
 30664                           tblptru	equ	0xFF8
 30665                           tblptrh	equ	0xFF7
 30666                           tblptrl	equ	0xFF6
 30667                           tablat	equ	0xFF5
 30668                           prodh	equ	0xFF4
 30669                           prodl	equ	0xFF3
 30670                           intcon	equ	0xFF2
 30671                           intcon2	equ	0xFF1
 30672                           intcon3	equ	0xFF0
 30673                           indf0	equ	0xFEF
 30674                           postinc0	equ	0xFEE
 30675                           plusw0	equ	0xFEB
 30676                           fsr0h	equ	0xFEA
 30677                           fsr0l	equ	0xFE9
 30678                           wreg	equ	0xFE8
 30679                           indf1	equ	0xFE7
 30680                           postinc1	equ	0xFE6
 30681                           postdec1	equ	0xFE5
 30682                           plusw1	equ	0xFE3
 30683                           fsr1h	equ	0xFE2
 30684                           fsr1l	equ	0xFE1
 30685                           indf2	equ	0xFDF
 30686                           postinc2	equ	0xFDE
 30687                           postdec2	equ	0xFDD
 30688                           plusw2	equ	0xFDB
 30689                           fsr2h	equ	0xFDA
 30690                           fsr2l	equ	0xFD9
 30691                           status	equ	0xFD8
 30692                           
 30693 ;; *************** function _I2cSendMsgSm *****************
 30694 ;; Defined at:
 30695 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 30696 ;; Parameters:    Size  Location     Type
 30697 ;;		None
 30698 ;; Auto vars:     Size  Location     Type
 30699 ;;		None
 30700 ;; Return value:  Size  Location     Type
 30701 ;;                  1    wreg      void 
 30702 ;; Registers used:
 30703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30704 ;; Tracked objects:
 30705 ;;		On entry : 0/0
 30706 ;;		On exit  : 0/0
 30707 ;;		Unchanged: 0/0
 30708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30713 ;;Total ram usage:        0 bytes
 30714 ;; Hardware stack levels used:    1
 30715 ;; Hardware stack levels required when called:   13
 30716 ;; This function calls:
 30717 ;;		_I2c_ReadData
 30718 ;;		_I2c_WriteData
 30719 ;;		_ReceiveEvt
 30720 ;; This function is called by:
 30721 ;;		_I2cSlv_MainTask
 30722 ;; This function uses a non-reentrant model
 30723 ;;
 30724                           
 30725                           	psect	text142
 30726  003DB6                     __ptext142:
 30727                           	opt stack 0
 30728  003DB6                     _I2cSendMsgSm:
 30729                           	opt stack 14
 30730                           
 30731                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 30732                           ;i2c_slv.c: 122: switch(I2cComState)
 30733                           
 30734                           ; BSR set to: 3
 30735                           ;incstack = 0
 30736  003DB6  D04F               	goto	l1367
 30737  003DB8                     
 30738                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 30739  003DB8  0EDC               	movlw	low _I2cWriteDataEvt
 30740  003DBA  0100               	movlb	0	; () banked
 30741  003DBC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30742  003DBE  0E00               	movlw	high _I2cWriteDataEvt
 30743  003DC0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30744  003DC2  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 30745  003DC6  0900               	iorlw	0
 30746  003DC8  B4D8               	btfsc	status,2,c
 30747  003DCA  D007               	goto	l1369
 30748                           
 30749                           ;i2c_slv.c: 127: {
 30750                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 30751  003DCC  0E01               	movlw	1
 30752  003DCE  0101               	movlb	1	; () banked
 30753  003DD0  6FE2               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30754                           
 30755                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 30756  003DD2  0E01               	movlw	1
 30757  003DD4  0100               	movlb	0	; () banked
 30758  003DD6  6FD4               	movwf	_I2cComSts& (0+255),b
 30759                           
 30760                           ;i2c_slv.c: 132: }
 30761  003DD8  0012               	return	
 30762  003DDA                     l1369:
 30763                           
 30764                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 30765                           
 30766                           ; BSR set to: 0
 30767  003DDA  0E36               	movlw	low _I2cReadDataEvt
 30768  003DDC  0100               	movlb	0	; () banked
 30769  003DDE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30770  003DE0  0E00               	movlw	high _I2cReadDataEvt
 30771  003DE2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30772  003DE4  EC4D  F02E         	call	_ReceiveEvt	;wreg free
 30773  003DE8  0900               	iorlw	0
 30774  003DEA  B4D8               	btfsc	status,2,c
 30775  003DEC  D007               	goto	l1371
 30776                           
 30777                           ;i2c_slv.c: 134: {
 30778                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 30779  003DEE  0E02               	movlw	2
 30780  003DF0  0101               	movlb	1	; () banked
 30781  003DF2  6FE2               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30782                           
 30783                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 30784  003DF4  0E02               	movlw	2
 30785  003DF6  0100               	movlb	0	; () banked
 30786  003DF8  6FD4               	movwf	_I2cComSts& (0+255),b
 30787                           
 30788                           ;i2c_slv.c: 139: }
 30789  003DFA  0012               	return	
 30790  003DFC                     l1371:
 30791                           
 30792                           ;i2c_slv.c: 140: else
 30793                           ;i2c_slv.c: 141: {
 30794                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 30795                           
 30796                           ; BSR set to: 0
 30797  003DFC  0E00               	movlw	0
 30798  003DFE  0100               	movlb	0	; () banked
 30799  003E00  6FD4               	movwf	_I2cComSts& (0+255),b
 30800                           
 30801                           ; BSR set to: 0
 30802                           ;i2c_slv.c: 144: }
 30803                           ;i2c_slv.c: 145: break;
 30804                           
 30805                           ; BSR set to: 0
 30806  003E02  0012               	return	
 30807  003E04                     
 30808                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 30809                           
 30810                           ; BSR set to: 0
 30811  003E04  0E9E               	movlw	low _I2cTxPacket
 30812  003E06  0100               	movlb	0	; () banked
 30813  003E08  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 30814  003E0A  0E03               	movlw	high _I2cTxPacket
 30815  003E0C  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 30816  003E0E  EC98  F00E         	call	_I2c_WriteData	;wreg free
 30817  003E12  0900               	iorlw	0
 30818  003E14  B4D8               	btfsc	status,2,c
 30819  003E16  0012               	return	
 30820                           
 30821                           ;i2c_slv.c: 150: {
 30822                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 30823  003E18  0E03               	movlw	3
 30824  003E1A  0101               	movlb	1	; () banked
 30825  003E1C  6FE2               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30826                           
 30827                           ; BSR set to: 1
 30828                           ;i2c_slv.c: 153: }
 30829                           ;i2c_slv.c: 154: break;
 30830  003E1E  0012               	return	
 30831  003E20                     
 30832                           ; BSR set to: 1
 30833                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 30834                           
 30835                           ; BSR set to: 1
 30836  003E20  0E98               	movlw	low _I2cRxPacket
 30837  003E22  0100               	movlb	0	; () banked
 30838  003E24  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 30839  003E26  0E03               	movlw	high _I2cRxPacket
 30840  003E28  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 30841  003E2A  ECAE  F010         	call	_I2c_ReadData	;wreg free
 30842  003E2E  0900               	iorlw	0
 30843  003E30  B4D8               	btfsc	status,2,c
 30844  003E32  0012               	return	
 30845                           
 30846                           ;i2c_slv.c: 159: {
 30847                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 30848  003E34  0E04               	movlw	4
 30849  003E36  0101               	movlb	1	; () banked
 30850  003E38  6FE2               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30851                           
 30852                           ; BSR set to: 1
 30853                           ;i2c_slv.c: 162: }
 30854                           ;i2c_slv.c: 164: break;
 30855  003E3A  0012               	return	
 30856  003E3C                     
 30857                           ; BSR set to: 1
 30858                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 30859                           
 30860                           ; BSR set to: 1
 30861  003E3C  0E00               	movlw	0
 30862  003E3E  6FE2               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30863                           
 30864                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 30865  003E40  0E00               	movlw	0
 30866  003E42  0100               	movlb	0	; () banked
 30867  003E44  6FD4               	movwf	_I2cComSts& (0+255),b
 30868                           
 30869                           ;i2c_slv.c: 171: break;
 30870  003E46  0012               	return	
 30871  003E48                     
 30872                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 30873                           
 30874                           ; BSR set to: 0
 30875  003E48  0E00               	movlw	0
 30876  003E4A  0101               	movlb	1	; () banked
 30877  003E4C  6FE2               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30878                           
 30879                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 30880  003E4E  0E00               	movlw	0
 30881  003E50  0100               	movlb	0	; () banked
 30882  003E52  6FD4               	movwf	_I2cComSts& (0+255),b
 30883                           
 30884                           ; BSR set to: 0
 30885                           ;i2c_slv.c: 182: }
 30886                           
 30887                           ; BSR set to: 0
 30888                           ;i2c_slv.c: 181: break;
 30889                           
 30890                           ;i2c_slv.c: 180: default:
 30891                           
 30892                           ;i2c_slv.c: 178: break;
 30893  003E54  0012               	return	
 30894  003E56                     l1367:
 30895                           
 30896                           ; BSR set to: 0
 30897  003E56  0101               	movlb	1	; () banked
 30898  003E58  51E2               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 30899                           
 30900                           ; Switch size 1, requested type "space"
 30901                           ; Number of cases is 5, Range of values is 0 to 4
 30902                           ; switch strategies available:
 30903                           ; Name         Instructions Cycles
 30904                           ; simple_byte           16     9 (average)
 30905                           ;	Chosen strategy is simple_byte
 30906  003E5A  0A00               	xorlw	0	; case 0
 30907  003E5C  B4D8               	btfsc	status,2,c
 30908  003E5E  D7AC               	goto	l1368
 30909  003E60  0A01               	xorlw	1	; case 1
 30910  003E62  B4D8               	btfsc	status,2,c
 30911  003E64  D7CF               	goto	l1374
 30912  003E66  0A03               	xorlw	3	; case 2
 30913  003E68  B4D8               	btfsc	status,2,c
 30914  003E6A  D7DA               	goto	l1376
 30915  003E6C  0A01               	xorlw	1	; case 3
 30916  003E6E  B4D8               	btfsc	status,2,c
 30917  003E70  D7E5               	goto	l1378
 30918  003E72  0A07               	xorlw	7	; case 4
 30919  003E74  A4D8               	btfss	status,2,c
 30920  003E76  0012               	return	
 30921  003E78  D7E7               	goto	l1379
 30922  003E7A                     __end_of_I2cSendMsgSm:
 30923                           	opt stack 0
 30924                           tosu	equ	0xFFF
 30925                           tosh	equ	0xFFE
 30926                           tosl	equ	0xFFD
 30927                           pclath	equ	0xFFA
 30928                           tblptru	equ	0xFF8
 30929                           tblptrh	equ	0xFF7
 30930                           tblptrl	equ	0xFF6
 30931                           tablat	equ	0xFF5
 30932                           prodh	equ	0xFF4
 30933                           prodl	equ	0xFF3
 30934                           intcon	equ	0xFF2
 30935                           intcon2	equ	0xFF1
 30936                           intcon3	equ	0xFF0
 30937                           indf0	equ	0xFEF
 30938                           postinc0	equ	0xFEE
 30939                           plusw0	equ	0xFEB
 30940                           fsr0h	equ	0xFEA
 30941                           fsr0l	equ	0xFE9
 30942                           wreg	equ	0xFE8
 30943                           indf1	equ	0xFE7
 30944                           postinc1	equ	0xFE6
 30945                           postdec1	equ	0xFE5
 30946                           plusw1	equ	0xFE3
 30947                           fsr1h	equ	0xFE2
 30948                           fsr1l	equ	0xFE1
 30949                           indf2	equ	0xFDF
 30950                           postinc2	equ	0xFDE
 30951                           postdec2	equ	0xFDD
 30952                           plusw2	equ	0xFDB
 30953                           fsr2h	equ	0xFDA
 30954                           fsr2l	equ	0xFD9
 30955                           status	equ	0xFD8
 30956                           
 30957 ;; *************** function _ReceiveEvt *****************
 30958 ;; Defined at:
 30959 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 30960 ;; Parameters:    Size  Location     Type
 30961 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 30962 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 30963 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 30964 ;;		 -> RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), 
 30965 ;;		 -> NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), ActivateRiDetection(1), 
 30966 ;; Auto vars:     Size  Location     Type
 30967 ;;  EventStatus     1   32[BANK0 ] enum E7727
 30968 ;; Return value:  Size  Location     Type
 30969 ;;                  1    wreg      enum E7699
 30970 ;; Registers used:
 30971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30972 ;; Tracked objects:
 30973 ;;		On entry : 0/0
 30974 ;;		On exit  : 0/0
 30975 ;;		Unchanged: 0/0
 30976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30977 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30978 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30979 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30980 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30981 ;;Total ram usage:        4 bytes
 30982 ;; Hardware stack levels used:    1
 30983 ;; Hardware stack levels required when called:   11
 30984 ;; This function calls:
 30985 ;;		Nothing
 30986 ;; This function is called by:
 30987 ;;		_MdmCntSm
 30988 ;;		_CheckModem
 30989 ;;		_ModemEvtParser
 30990 ;;		_GetSmsSm
 30991 ;;		_SendSmsSm
 30992 ;;		_Mdm_GetSmsData
 30993 ;;		_Mdm_IsSmsReceived
 30994 ;;		_Mdm_IsRinging
 30995 ;;		_InitGprsNetwork
 30996 ;;		_HttpGetMethod
 30997 ;;		_I2cSendMsgSm
 30998 ;;		_I2cSlv_I2cReadMsgSts
 30999 ;;		_RiSm
 31000 ;;		_GsmGprsTerminal
 31001 ;; This function uses a non-reentrant model
 31002 ;;
 31003                           
 31004                           	psect	text143
 31005  005C9A                     __ptext143:
 31006                           	opt stack 0
 31007  005C9A                     _ReceiveEvt:
 31008                           	opt stack 13
 31009                           
 31010                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 31011                           
 31012                           ;incstack = 0
 31013  005C9A  0E00               	movlw	0
 31014  005C9C  0100               	movlb	0	; () banked
 31015  005C9E  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31016                           
 31017                           ; BSR set to: 0
 31018                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 31019  005CA0  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31020  005CA4  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31021  005CA8  0E02               	movlw	2
 31022  005CAA  18DE               	xorwf	postinc2,w,c
 31023  005CAC  A4D8               	btfss	status,2,c
 31024  005CAE  D008               	goto	l832
 31025                           
 31026                           ; BSR set to: 0
 31027                           ;os_ser.c: 106: {
 31028                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 31029  005CB0  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31030  005CB4  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31031  005CB8  0E01               	movlw	1
 31032  005CBA  6EDF               	movwf	indf2,c
 31033                           
 31034                           ; BSR set to: 0
 31035                           ;os_ser.c: 110: EventStatus = EventReceived;
 31036  005CBC  0E01               	movlw	1
 31037  005CBE  D001               	goto	L49
 31038  005CC0                     l832:
 31039                           
 31040                           ; BSR set to: 0
 31041                           ;os_ser.c: 112: else
 31042                           ;os_ser.c: 113: {
 31043                           ;os_ser.c: 115: EventStatus = EventIdle;
 31044                           
 31045                           ; BSR set to: 0
 31046  005CC0  0E00               	movlw	0
 31047  005CC2                     L49:
 31048  005CC2  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31049                           
 31050                           ; BSR set to: 0
 31051                           ;os_ser.c: 116: }
 31052                           ;os_ser.c: 119: return(EventStatus);
 31053  005CC4  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 31054  005CC6  0012               	return	
 31055  005CC8                     __end_of_ReceiveEvt:
 31056                           	opt stack 0
 31057                           tosu	equ	0xFFF
 31058                           tosh	equ	0xFFE
 31059                           tosl	equ	0xFFD
 31060                           pclath	equ	0xFFA
 31061                           tblptru	equ	0xFF8
 31062                           tblptrh	equ	0xFF7
 31063                           tblptrl	equ	0xFF6
 31064                           tablat	equ	0xFF5
 31065                           prodh	equ	0xFF4
 31066                           prodl	equ	0xFF3
 31067                           intcon	equ	0xFF2
 31068                           intcon2	equ	0xFF1
 31069                           intcon3	equ	0xFF0
 31070                           indf0	equ	0xFEF
 31071                           postinc0	equ	0xFEE
 31072                           plusw0	equ	0xFEB
 31073                           fsr0h	equ	0xFEA
 31074                           fsr0l	equ	0xFE9
 31075                           wreg	equ	0xFE8
 31076                           indf1	equ	0xFE7
 31077                           postinc1	equ	0xFE6
 31078                           postdec1	equ	0xFE5
 31079                           plusw1	equ	0xFE3
 31080                           fsr1h	equ	0xFE2
 31081                           fsr1l	equ	0xFE1
 31082                           indf2	equ	0xFDF
 31083                           postinc2	equ	0xFDE
 31084                           postdec2	equ	0xFDD
 31085                           plusw2	equ	0xFDB
 31086                           fsr2h	equ	0xFDA
 31087                           fsr2l	equ	0xFD9
 31088                           status	equ	0xFD8
 31089                           
 31090 ;; *************** function _I2c_WriteData *****************
 31091 ;; Defined at:
 31092 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31093 ;; Parameters:    Size  Location     Type
 31094 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 31095 ;;		 -> I2cTxPacket(5), 
 31096 ;; Auto vars:     Size  Location     Type
 31097 ;;		None
 31098 ;; Return value:  Size  Location     Type
 31099 ;;                  1    wreg      enum E7740
 31100 ;; Registers used:
 31101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31102 ;; Tracked objects:
 31103 ;;		On entry : 0/0
 31104 ;;		On exit  : 0/0
 31105 ;;		Unchanged: 0/0
 31106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31107 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31109 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31110 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31111 ;;Total ram usage:        4 bytes
 31112 ;; Hardware stack levels used:    1
 31113 ;; Hardware stack levels required when called:   12
 31114 ;; This function calls:
 31115 ;;		_CheckAckStatus
 31116 ;;		_CheckTxStatus
 31117 ;;		_StartCondition
 31118 ;;		_StopCondition
 31119 ;;		_WriteByte
 31120 ;; This function is called by:
 31121 ;;		_I2cSendMsgSm
 31122 ;; This function uses a non-reentrant model
 31123 ;;
 31124                           
 31125                           	psect	text144
 31126  001D30                     __ptext144:
 31127                           	opt stack 0
 31128  001D30                     _I2c_WriteData:
 31129                           	opt stack 14
 31130                           
 31131                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 31132                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 31133                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 31134                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 31135                           ;i2c_drv.c: 260: switch (I2cWriteState)
 31136                           
 31137                           ; BSR set to: 0
 31138                           ;incstack = 0
 31139  001D30  D095               	goto	l160
 31140  001D32                     
 31141                           ;i2c_drv.c: 264: StartCondition();
 31142  001D32  ECC9  F030         	call	_StartCondition	;wreg free
 31143                           
 31144                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 31145  001D36  0E00               	movlw	0
 31146  001D38  6E32               	movwf	I2c_WriteData@WriteStatus,c
 31147                           
 31148                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 31149  001D3A  0E01               	movlw	1
 31150  001D3C  D084               	goto	L56
 31151  001D3E                     
 31152                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 31153  001D3E  0100               	movlb	0	; () banked
 31154  001D40  EE20 F001          	lfsr	2,1
 31155  001D44  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31156  001D46  26D9               	addwf	fsr2l,f,c
 31157  001D48  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31158  001D4A  22DA               	addwfc	fsr2h,f,c
 31159  001D4C  50DF               	movf	indf2,w,c
 31160  001D4E  6F80               	movwf	??_I2c_WriteData& (0+255),b
 31161  001D50  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31162  001D54  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31163  001D58  50DF               	movf	indf2,w,c
 31164  001D5A  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 31165  001D5C  90D8               	bcf	status,0,c
 31166  001D5E  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 31167  001D60  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 31168  001D62  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31169  001D66  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31170  001D6A  6EDF               	movwf	indf2,c
 31171                           
 31172                           ; BSR set to: 0
 31173                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 31174  001D6C  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31175  001D70  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31176  001D74  50DF               	movf	indf2,w,c
 31177  001D76  ECA7  F030         	call	_WriteByte
 31178                           
 31179                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 31180  001D7A  0E02               	movlw	2
 31181  001D7C  6E35               	movwf	I2c_WriteData@I2cWriteState,c
 31182  001D7E                     
 31183                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 31184  001D7E  ECB1  F030         	call	_CheckTxStatus	;wreg free
 31185  001D82  0900               	iorlw	0
 31186  001D84  A4D8               	btfss	status,2,c
 31187  001D86  D089               	goto	l162
 31188                           
 31189                           ;i2c_drv.c: 282: {
 31190                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 31191  001D88  0E03               	movlw	3
 31192  001D8A  D01A               	goto	L58
 31193  001D8C                     
 31194                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 31195  001D8C  0100               	movlb	0	; () banked
 31196  001D8E  EE20 F002          	lfsr	2,2
 31197  001D92  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31198  001D94  26D9               	addwf	fsr2l,f,c
 31199  001D96  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31200  001D98  22DA               	addwfc	fsr2h,f,c
 31201  001D9A  CFDE F080          	movff	postinc2,??_I2c_WriteData
 31202  001D9E  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 31203  001DA2  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 31204  001DA6  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 31205  001DAA  50DF               	movf	indf2,w,c
 31206  001DAC  ECA7  F030         	call	_WriteByte
 31207                           
 31208                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 31209  001DB0  0E04               	movlw	4
 31210  001DB2  D049               	goto	L56
 31211  001DB4                     
 31212                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 31213  001DB4  ECB1  F030         	call	_CheckTxStatus	;wreg free
 31214  001DB8  0900               	iorlw	0
 31215  001DBA  A4D8               	btfss	status,2,c
 31216  001DBC  D06E               	goto	l162
 31217                           
 31218                           ;i2c_drv.c: 300: {
 31219                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 31220  001DBE  0E05               	movlw	5
 31221  001DC0                     L58:
 31222  001DC0  6E34               	movwf	I2c_WriteData@I2cNextState,c
 31223                           
 31224                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 31225  001DC2  0E08               	movlw	8
 31226  001DC4  D040               	goto	L56
 31227  001DC6                     
 31228                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 31229  001DC6  0100               	movlb	0	; () banked
 31230  001DC8  EE20 F004          	lfsr	2,4
 31231  001DCC  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31232  001DCE  26D9               	addwf	fsr2l,f,c
 31233  001DD0  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31234  001DD2  22DA               	addwfc	fsr2h,f,c
 31235  001DD4  50DF               	movf	indf2,w,c
 31236  001DD6  B4D8               	btfsc	status,2,c
 31237  001DD8  D010               	goto	l170
 31238                           
 31239                           ; BSR set to: 0
 31240                           ;i2c_drv.c: 310: {
 31241                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 31242  001DDA  EE20 F004          	lfsr	2,4
 31243  001DDE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31244  001DE0  26D9               	addwf	fsr2l,f,c
 31245  001DE2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31246  001DE4  22DA               	addwfc	fsr2h,f,c
 31247  001DE6  06DF               	decf	indf2,f,c
 31248                           
 31249                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 31250  001DE8  EE20 F002          	lfsr	2,2
 31251  001DEC  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31252  001DEE  26D9               	addwf	fsr2l,f,c
 31253  001DF0  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31254  001DF2  22DA               	addwfc	fsr2h,f,c
 31255  001DF4  2ADE               	incf	postinc2,f,c
 31256  001DF6  0E00               	movlw	0
 31257  001DF8  22DD               	addwfc	postdec2,f,c
 31258  001DFA                     l170:
 31259                           
 31260                           ; BSR set to: 0
 31261                           ;i2c_drv.c: 315: }
 31262                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 31263  001DFA  EE20 F004          	lfsr	2,4
 31264  001DFE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31265  001E00  26D9               	addwf	fsr2l,f,c
 31266  001E02  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31267  001E04  22DA               	addwfc	fsr2h,f,c
 31268  001E06  50DF               	movf	indf2,w,c
 31269  001E08  A4D8               	btfss	status,2,c
 31270  001E0A  D002               	goto	l171
 31271                           
 31272                           ; BSR set to: 0
 31273                           ;i2c_drv.c: 319: {
 31274                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 31275  001E0C  0E06               	movlw	6
 31276  001E0E  D01B               	goto	L56
 31277  001E10                     l171:
 31278                           
 31279                           ; BSR set to: 0
 31280                           ;i2c_drv.c: 323: else
 31281                           ;i2c_drv.c: 324: {
 31282                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 31283                           
 31284                           ; BSR set to: 0
 31285  001E10  0E03               	movlw	3
 31286  001E12  D019               	goto	L56
 31287  001E14                     
 31288                           ;i2c_drv.c: 332: StopCondition();
 31289                           
 31290                           ; BSR set to: 0
 31291  001E14  ECC7  F030         	call	_StopCondition	;wreg free
 31292                           
 31293                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 31294  001E18  0E07               	movlw	7
 31295  001E1A  D015               	goto	L56
 31296  001E1C                     
 31297                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 31298  001E1C  0E00               	movlw	0
 31299  001E1E  6E35               	movwf	I2c_WriteData@I2cWriteState,c
 31300                           
 31301                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 31302  001E20  0E00               	movlw	0
 31303  001E22  6E34               	movwf	I2c_WriteData@I2cNextState,c
 31304                           
 31305                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 31306  001E24  0E02               	movlw	2
 31307  001E26  D018               	goto	L57
 31308  001E28                     
 31309                           ;i2c_drv.c: 347: TentativeCounter++;
 31310  001E28  2A33               	incf	I2c_WriteData@TentativeCounter,f,c
 31311                           
 31312                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 31313  001E2A  ECB6  F030         	call	_CheckAckStatus	;wreg free
 31314  001E2E  0900               	iorlw	0
 31315  001E30  A4D8               	btfss	status,2,c
 31316  001E32  D005               	goto	l176
 31317                           
 31318                           ;i2c_drv.c: 350: {
 31319                           ;i2c_drv.c: 352: TentativeCounter = 0;
 31320  001E34  0E00               	movlw	0
 31321  001E36  6E33               	movwf	I2c_WriteData@TentativeCounter,c
 31322                           
 31323                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 31324  001E38  C034  F035         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 31325                           
 31326                           ;i2c_drv.c: 355: }
 31327  001E3C  D02E               	goto	l162
 31328  001E3E                     l176:
 31329                           
 31330                           ;i2c_drv.c: 356: else
 31331                           ;i2c_drv.c: 357: {
 31332                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 31333  001E3E  0E02               	movlw	2
 31334  001E40  6433               	cpfsgt	I2c_WriteData@TentativeCounter,c
 31335  001E42  D02B               	goto	l162
 31336                           
 31337                           ;i2c_drv.c: 360: {
 31338                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 31339  001E44  0E09               	movlw	9
 31340  001E46                     L56:
 31341  001E46  6E35               	movwf	I2c_WriteData@I2cWriteState,c
 31342                           
 31343                           ;i2c_drv.c: 363: }
 31344                           ;i2c_drv.c: 364: }
 31345                           ;i2c_drv.c: 365: break;
 31346  001E48  D028               	goto	l162
 31347  001E4A                     
 31348                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 31349  001E4A  0E00               	movlw	0
 31350  001E4C  6E35               	movwf	I2c_WriteData@I2cWriteState,c
 31351                           
 31352                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 31353  001E4E  0E00               	movlw	0
 31354  001E50  6E34               	movwf	I2c_WriteData@I2cNextState,c
 31355                           
 31356                           ;i2c_drv.c: 372: TentativeCounter = 0;
 31357  001E52  0E00               	movlw	0
 31358  001E54  6E33               	movwf	I2c_WriteData@TentativeCounter,c
 31359                           
 31360                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 31361  001E56  0E01               	movlw	1
 31362  001E58                     L57:
 31363  001E58  6E32               	movwf	I2c_WriteData@WriteStatus,c
 31364                           
 31365                           ;i2c_drv.c: 379: }
 31366                           
 31367                           ;i2c_drv.c: 378: break;
 31368                           
 31369                           ;i2c_drv.c: 377: default:
 31370                           
 31371                           ;i2c_drv.c: 375: break;
 31372  001E5A  D01F               	goto	l162
 31373  001E5C                     l160:
 31374  001E5C  5035               	movf	I2c_WriteData@I2cWriteState,w,c
 31375                           
 31376                           ; Switch size 1, requested type "space"
 31377                           ; Number of cases is 10, Range of values is 0 to 9
 31378                           ; switch strategies available:
 31379                           ; Name         Instructions Cycles
 31380                           ; simple_byte           31    16 (average)
 31381                           ;	Chosen strategy is simple_byte
 31382  001E5E  0A00               	xorlw	0	; case 0
 31383  001E60  B4D8               	btfsc	status,2,c
 31384  001E62  D767               	goto	l161
 31385  001E64  0A01               	xorlw	1	; case 1
 31386  001E66  B4D8               	btfsc	status,2,c
 31387  001E68  D76A               	goto	l163
 31388  001E6A  0A03               	xorlw	3	; case 2
 31389  001E6C  B4D8               	btfsc	status,2,c
 31390  001E6E  D787               	goto	l164
 31391  001E70  0A01               	xorlw	1	; case 3
 31392  001E72  B4D8               	btfsc	status,2,c
 31393  001E74  D78B               	goto	l166
 31394  001E76  0A07               	xorlw	7	; case 4
 31395  001E78  B4D8               	btfsc	status,2,c
 31396  001E7A  D79C               	goto	l167
 31397  001E7C  0A01               	xorlw	1	; case 5
 31398  001E7E  B4D8               	btfsc	status,2,c
 31399  001E80  D7A2               	goto	l169
 31400  001E82  0A03               	xorlw	3	; case 6
 31401  001E84  B4D8               	btfsc	status,2,c
 31402  001E86  D7C6               	goto	l173
 31403  001E88  0A01               	xorlw	1	; case 7
 31404  001E8A  B4D8               	btfsc	status,2,c
 31405  001E8C  D7C7               	goto	l174
 31406  001E8E  0A0F               	xorlw	15	; case 8
 31407  001E90  B4D8               	btfsc	status,2,c
 31408  001E92  D7CA               	goto	l175
 31409  001E94  0A01               	xorlw	1	; case 9
 31410  001E96  B4D8               	btfsc	status,2,c
 31411  001E98  D7D8               	goto	l179
 31412  001E9A                     l162:
 31413                           
 31414                           ;i2c_drv.c: 382: return WriteStatus;
 31415  001E9A  5032               	movf	I2c_WriteData@WriteStatus,w,c
 31416  001E9C  0012               	return	
 31417  001E9E                     __end_of_I2c_WriteData:
 31418                           	opt stack 0
 31419                           tosu	equ	0xFFF
 31420                           tosh	equ	0xFFE
 31421                           tosl	equ	0xFFD
 31422                           pclath	equ	0xFFA
 31423                           tblptru	equ	0xFF8
 31424                           tblptrh	equ	0xFF7
 31425                           tblptrl	equ	0xFF6
 31426                           tablat	equ	0xFF5
 31427                           prodh	equ	0xFF4
 31428                           prodl	equ	0xFF3
 31429                           intcon	equ	0xFF2
 31430                           intcon2	equ	0xFF1
 31431                           intcon3	equ	0xFF0
 31432                           indf0	equ	0xFEF
 31433                           postinc0	equ	0xFEE
 31434                           plusw0	equ	0xFEB
 31435                           fsr0h	equ	0xFEA
 31436                           fsr0l	equ	0xFE9
 31437                           wreg	equ	0xFE8
 31438                           indf1	equ	0xFE7
 31439                           postinc1	equ	0xFE6
 31440                           postdec1	equ	0xFE5
 31441                           plusw1	equ	0xFE3
 31442                           fsr1h	equ	0xFE2
 31443                           fsr1l	equ	0xFE1
 31444                           indf2	equ	0xFDF
 31445                           postinc2	equ	0xFDE
 31446                           postdec2	equ	0xFDD
 31447                           plusw2	equ	0xFDB
 31448                           fsr2h	equ	0xFDA
 31449                           fsr2l	equ	0xFD9
 31450                           status	equ	0xFD8
 31451                           
 31452 ;; *************** function _I2c_ReadData *****************
 31453 ;; Defined at:
 31454 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31455 ;; Parameters:    Size  Location     Type
 31456 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 31457 ;;		 -> I2cRxPacket(6), 
 31458 ;; Auto vars:     Size  Location     Type
 31459 ;;		None
 31460 ;; Return value:  Size  Location     Type
 31461 ;;                  1    wreg      enum E7787
 31462 ;; Registers used:
 31463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31464 ;; Tracked objects:
 31465 ;;		On entry : 0/0
 31466 ;;		On exit  : 0/0
 31467 ;;		Unchanged: 0/0
 31468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31469 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31471 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31472 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31473 ;;Total ram usage:        4 bytes
 31474 ;; Hardware stack levels used:    1
 31475 ;; Hardware stack levels required when called:   12
 31476 ;; This function calls:
 31477 ;;		_CheckAckStatus
 31478 ;;		_CheckTxStatus
 31479 ;;		_EnableReceiver
 31480 ;;		_GenerateEvt
 31481 ;;		_ReadByte
 31482 ;;		_SetAckStatus
 31483 ;;		_StartCondition
 31484 ;;		_StopCondition
 31485 ;;		_WriteByte
 31486 ;; This function is called by:
 31487 ;;		_I2cSendMsgSm
 31488 ;; This function uses a non-reentrant model
 31489 ;;
 31490                           
 31491                           	psect	text145
 31492  00215C                     __ptext145:
 31493                           	opt stack 0
 31494  00215C                     _I2c_ReadData:
 31495                           	opt stack 14
 31496                           
 31497                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 31498                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 31499                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 31500                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 31501                           ;i2c_drv.c: 402: switch (I2cReadState)
 31502                           
 31503                           ;incstack = 0
 31504  00215C  D090               	goto	l192
 31505  00215E                     
 31506                           ;i2c_drv.c: 406: StartCondition();
 31507  00215E  ECC9  F030         	call	_StartCondition	;wreg free
 31508                           
 31509                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 31510  002162  0E00               	movlw	0
 31511  002164  6E2E               	movwf	I2c_ReadData@ReadStatus,c
 31512                           
 31513                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 31514  002166  0E01               	movlw	1
 31515  002168  D083               	goto	L66
 31516  00216A                     
 31517                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 31518  00216A  0100               	movlb	0	; () banked
 31519  00216C  EE20 F001          	lfsr	2,1
 31520  002170  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31521  002172  26D9               	addwf	fsr2l,f,c
 31522  002174  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31523  002176  22DA               	addwfc	fsr2h,f,c
 31524  002178  50DF               	movf	indf2,w,c
 31525  00217A  6F82               	movwf	??_I2c_ReadData& (0+255),b
 31526  00217C  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31527  002180  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31528  002184  50DF               	movf	indf2,w,c
 31529  002186  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 31530  002188  90D8               	bcf	status,0,c
 31531  00218A  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 31532  00218C  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 31533  00218E  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31534  002192  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31535  002196  6EDF               	movwf	indf2,c
 31536                           
 31537                           ; BSR set to: 0
 31538                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 31539  002198  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31540  00219C  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31541  0021A0  50DF               	movf	indf2,w,c
 31542  0021A2  ECA7  F030         	call	_WriteByte
 31543                           
 31544                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 31545  0021A6  0E02               	movlw	2
 31546  0021A8  D063               	goto	L66
 31547  0021AA                     
 31548                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 31549  0021AA  ECB1  F030         	call	_CheckTxStatus	;wreg free
 31550  0021AE  0900               	iorlw	0
 31551  0021B0  A4D8               	btfss	status,2,c
 31552  0021B2  D081               	goto	l194
 31553                           
 31554                           ;i2c_drv.c: 425: {
 31555                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 31556  0021B4  0E03               	movlw	3
 31557  0021B6  D05C               	goto	L66
 31558  0021B8                     
 31559                           ;i2c_drv.c: 433: TentativeCounter++;
 31560  0021B8  2A2F               	incf	I2c_ReadData@TentativeCounter,f,c
 31561                           
 31562                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 31563  0021BA  ECB6  F030         	call	_CheckAckStatus	;wreg free
 31564  0021BE  0900               	iorlw	0
 31565  0021C0  A4D8               	btfss	status,2,c
 31566  0021C2  D004               	goto	l199
 31567                           
 31568                           ;i2c_drv.c: 436: {
 31569                           ;i2c_drv.c: 438: TentativeCounter = 0;
 31570  0021C4  0E00               	movlw	0
 31571  0021C6  6E2F               	movwf	I2c_ReadData@TentativeCounter,c
 31572  0021C8                     
 31573                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 31574  0021C8  0E04               	movlw	4
 31575  0021CA  D052               	goto	L66
 31576  0021CC                     l199:
 31577                           
 31578                           ;i2c_drv.c: 442: else
 31579                           ;i2c_drv.c: 443: {
 31580                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 31581  0021CC  0E02               	movlw	2
 31582  0021CE  642F               	cpfsgt	I2c_ReadData@TentativeCounter,c
 31583  0021D0  D072               	goto	l194
 31584                           
 31585                           ;i2c_drv.c: 446: {
 31586                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 31587  0021D2  0E08               	movlw	8
 31588  0021D4  D04D               	goto	L66
 31589  0021D6                     
 31590                           ;i2c_drv.c: 455: EnableReceiver();
 31591  0021D6  ECCB  F030         	call	_EnableReceiver	;wreg free
 31592                           
 31593                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 31594  0021DA  0E05               	movlw	5
 31595  0021DC  D049               	goto	L66
 31596  0021DE                     
 31597                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 31598  0021DE  ECB1  F030         	call	_CheckTxStatus	;wreg free
 31599  0021E2  0900               	iorlw	0
 31600  0021E4  A4D8               	btfss	status,2,c
 31601  0021E6  D067               	goto	l194
 31602                           
 31603                           ;i2c_drv.c: 463: {
 31604                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 31605  0021E8  0100               	movlb	0	; () banked
 31606  0021EA  EE20 F002          	lfsr	2,2
 31607  0021EE  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31608  0021F0  26D9               	addwf	fsr2l,f,c
 31609  0021F2  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31610  0021F4  22DA               	addwfc	fsr2h,f,c
 31611  0021F6  CFDE F082          	movff	postinc2,??_I2c_ReadData
 31612  0021FA  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 31613  0021FE  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 31614  002202  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 31615  002206  ECAC  F030         	call	_ReadByte	;wreg free
 31616  00220A  6EDF               	movwf	indf2,c
 31617                           
 31618                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 31619  00220C  0100               	movlb	0	; () banked
 31620  00220E  EE20 F002          	lfsr	2,2
 31621  002212  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31622  002214  26D9               	addwf	fsr2l,f,c
 31623  002216  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31624  002218  22DA               	addwfc	fsr2h,f,c
 31625  00221A  2ADE               	incf	postinc2,f,c
 31626  00221C  0E00               	movlw	0
 31627  00221E  22DD               	addwfc	postdec2,f,c
 31628                           
 31629                           ; BSR set to: 0
 31630                           ;i2c_drv.c: 469: DataCounter++;
 31631  002220  2A30               	incf	I2c_ReadData@DataCounter,f,c
 31632                           
 31633                           ; BSR set to: 0
 31634                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 31635  002222  0E06               	movlw	6
 31636  002224  D025               	goto	L66
 31637  002226                     
 31638                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 31639                           
 31640                           ; BSR set to: 0
 31641  002226  0100               	movlb	0	; () banked
 31642  002228  EE20 F004          	lfsr	2,4
 31643  00222C  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31644  00222E  26D9               	addwf	fsr2l,f,c
 31645  002230  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31646  002232  22DA               	addwfc	fsr2h,f,c
 31647  002234  50DE               	movf	postinc2,w,c
 31648  002236  5C30               	subwf	I2c_ReadData@DataCounter,w,c
 31649  002238  A0D8               	btfss	status,0,c
 31650  00223A  D008               	goto	l206
 31651                           
 31652                           ; BSR set to: 0
 31653                           ;i2c_drv.c: 478: {
 31654                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 31655  00223C  0E01               	movlw	1
 31656  00223E  EC4A  F030         	call	_SetAckStatus
 31657                           
 31658                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 31659  002242  0E07               	movlw	7
 31660  002244  6E31               	movwf	I2c_ReadData@I2cReadState,c
 31661                           
 31662                           ;i2c_drv.c: 484: DataCounter = 0;
 31663  002246  0E00               	movlw	0
 31664  002248  6E30               	movwf	I2c_ReadData@DataCounter,c
 31665                           
 31666                           ;i2c_drv.c: 485: }
 31667  00224A  D035               	goto	l194
 31668  00224C                     l206:
 31669                           
 31670                           ;i2c_drv.c: 486: else
 31671                           ;i2c_drv.c: 487: {
 31672                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 31673  00224C  0E00               	movlw	0
 31674  00224E  EC4A  F030         	call	_SetAckStatus
 31675  002252  D7BA               	goto	L67
 31676  002254                     
 31677                           ;i2c_drv.c: 497: StopCondition();
 31678  002254  ECC7  F030         	call	_StopCondition	;wreg free
 31679                           
 31680                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 31681  002258  0E02               	movlw	2
 31682  00225A  6E2E               	movwf	I2c_ReadData@ReadStatus,c
 31683                           
 31684                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 31685  00225C  0E05               	movlw	5
 31686  00225E  0100               	movlb	0	; () banked
 31687  002260  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 31688  002262  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 31689  002264  0E00               	movlw	0
 31690  002266  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31691  002268  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 31692  00226A  EC06  F030         	call	_GenerateEvt	;wreg free
 31693                           
 31694                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 31695  00226E  0E00               	movlw	0
 31696  002270                     L66:
 31697  002270  6E31               	movwf	I2c_ReadData@I2cReadState,c
 31698                           
 31699                           ;i2c_drv.c: 504: break;
 31700  002272  D021               	goto	l194
 31701  002274                     
 31702                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 31703  002274  0E00               	movlw	0
 31704  002276  6E31               	movwf	I2c_ReadData@I2cReadState,c
 31705                           
 31706                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 31707  002278  0E01               	movlw	1
 31708  00227A  6E2E               	movwf	I2c_ReadData@ReadStatus,c
 31709                           
 31710                           ;i2c_drv.c: 515: }
 31711                           
 31712                           ;i2c_drv.c: 514: break;
 31713                           
 31714                           ;i2c_drv.c: 513: default:
 31715                           
 31716                           ;i2c_drv.c: 511: break;
 31717  00227C  D01C               	goto	l194
 31718  00227E                     l192:
 31719  00227E  5031               	movf	I2c_ReadData@I2cReadState,w,c
 31720                           
 31721                           ; Switch size 1, requested type "space"
 31722                           ; Number of cases is 9, Range of values is 0 to 8
 31723                           ; switch strategies available:
 31724                           ; Name         Instructions Cycles
 31725                           ; simple_byte           28    15 (average)
 31726                           ;	Chosen strategy is simple_byte
 31727  002280  0A00               	xorlw	0	; case 0
 31728  002282  B4D8               	btfsc	status,2,c
 31729  002284  D76C               	goto	l193
 31730  002286  0A01               	xorlw	1	; case 1
 31731  002288  B4D8               	btfsc	status,2,c
 31732  00228A  D76F               	goto	l195
 31733  00228C  0A03               	xorlw	3	; case 2
 31734  00228E  B4D8               	btfsc	status,2,c
 31735  002290  D78C               	goto	l196
 31736  002292  0A01               	xorlw	1	; case 3
 31737  002294  B4D8               	btfsc	status,2,c
 31738  002296  D790               	goto	l198
 31739  002298  0A07               	xorlw	7	; case 4
 31740  00229A  B4D8               	btfsc	status,2,c
 31741  00229C  D79C               	goto	l202
 31742  00229E  0A01               	xorlw	1	; case 5
 31743  0022A0  B4D8               	btfsc	status,2,c
 31744  0022A2  D79D               	goto	l203
 31745  0022A4  0A03               	xorlw	3	; case 6
 31746  0022A6  B4D8               	btfsc	status,2,c
 31747  0022A8  D7BE               	goto	l205
 31748  0022AA  0A01               	xorlw	1	; case 7
 31749  0022AC  B4D8               	btfsc	status,2,c
 31750  0022AE  D7D2               	goto	l208
 31751  0022B0  0A0F               	xorlw	15	; case 8
 31752  0022B2  B4D8               	btfsc	status,2,c
 31753  0022B4  D7DF               	goto	l209
 31754  0022B6                     l194:
 31755                           
 31756                           ;i2c_drv.c: 518: return ReadStatus;
 31757  0022B6  502E               	movf	I2c_ReadData@ReadStatus,w,c
 31758  0022B8  0012               	return	
 31759  0022BA                     __end_of_I2c_ReadData:
 31760                           	opt stack 0
 31761                           tosu	equ	0xFFF
 31762                           tosh	equ	0xFFE
 31763                           tosl	equ	0xFFD
 31764                           pclath	equ	0xFFA
 31765                           tblptru	equ	0xFF8
 31766                           tblptrh	equ	0xFF7
 31767                           tblptrl	equ	0xFF6
 31768                           tablat	equ	0xFF5
 31769                           prodh	equ	0xFF4
 31770                           prodl	equ	0xFF3
 31771                           intcon	equ	0xFF2
 31772                           intcon2	equ	0xFF1
 31773                           intcon3	equ	0xFF0
 31774                           indf0	equ	0xFEF
 31775                           postinc0	equ	0xFEE
 31776                           plusw0	equ	0xFEB
 31777                           fsr0h	equ	0xFEA
 31778                           fsr0l	equ	0xFE9
 31779                           wreg	equ	0xFE8
 31780                           indf1	equ	0xFE7
 31781                           postinc1	equ	0xFE6
 31782                           postdec1	equ	0xFE5
 31783                           plusw1	equ	0xFE3
 31784                           fsr1h	equ	0xFE2
 31785                           fsr1l	equ	0xFE1
 31786                           indf2	equ	0xFDF
 31787                           postinc2	equ	0xFDE
 31788                           postdec2	equ	0xFDD
 31789                           plusw2	equ	0xFDB
 31790                           fsr2h	equ	0xFDA
 31791                           fsr2l	equ	0xFD9
 31792                           status	equ	0xFD8
 31793                           
 31794 ;; *************** function _WriteByte *****************
 31795 ;; Defined at:
 31796 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31797 ;; Parameters:    Size  Location     Type
 31798 ;;  Byte            1    wreg     unsigned char 
 31799 ;; Auto vars:     Size  Location     Type
 31800 ;;  Byte            1   29[BANK0 ] unsigned char 
 31801 ;; Return value:  Size  Location     Type
 31802 ;;                  1    wreg      void 
 31803 ;; Registers used:
 31804 ;;		wreg
 31805 ;; Tracked objects:
 31806 ;;		On entry : 0/0
 31807 ;;		On exit  : 0/0
 31808 ;;		Unchanged: 0/0
 31809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31813 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31814 ;;Total ram usage:        1 bytes
 31815 ;; Hardware stack levels used:    1
 31816 ;; Hardware stack levels required when called:   11
 31817 ;; This function calls:
 31818 ;;		Nothing
 31819 ;; This function is called by:
 31820 ;;		_I2c_WriteData
 31821 ;;		_I2c_ReadData
 31822 ;; This function uses a non-reentrant model
 31823 ;;
 31824                           
 31825                           	psect	text146
 31826  00614E                     __ptext146:
 31827                           	opt stack 0
 31828  00614E                     _WriteByte:
 31829                           	opt stack 14
 31830                           
 31831                           ;incstack = 0
 31832                           ;WriteByte@Byte stored from wreg
 31833  00614E  0100               	movlb	0	; () banked
 31834  006150  6F7D               	movwf	WriteByte@Byte& (0+255),b
 31835                           
 31836                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 31837  006152  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 31838  006156  0012               	return		;funcret
 31839  006158                     __end_of_WriteByte:
 31840                           	opt stack 0
 31841                           tosu	equ	0xFFF
 31842                           tosh	equ	0xFFE
 31843                           tosl	equ	0xFFD
 31844                           pclath	equ	0xFFA
 31845                           tblptru	equ	0xFF8
 31846                           tblptrh	equ	0xFF7
 31847                           tblptrl	equ	0xFF6
 31848                           tablat	equ	0xFF5
 31849                           prodh	equ	0xFF4
 31850                           prodl	equ	0xFF3
 31851                           intcon	equ	0xFF2
 31852                           intcon2	equ	0xFF1
 31853                           intcon3	equ	0xFF0
 31854                           indf0	equ	0xFEF
 31855                           postinc0	equ	0xFEE
 31856                           plusw0	equ	0xFEB
 31857                           fsr0h	equ	0xFEA
 31858                           fsr0l	equ	0xFE9
 31859                           wreg	equ	0xFE8
 31860                           indf1	equ	0xFE7
 31861                           postinc1	equ	0xFE6
 31862                           postdec1	equ	0xFE5
 31863                           plusw1	equ	0xFE3
 31864                           fsr1h	equ	0xFE2
 31865                           fsr1l	equ	0xFE1
 31866                           indf2	equ	0xFDF
 31867                           postinc2	equ	0xFDE
 31868                           postdec2	equ	0xFDD
 31869                           plusw2	equ	0xFDB
 31870                           fsr2h	equ	0xFDA
 31871                           fsr2l	equ	0xFD9
 31872                           status	equ	0xFD8
 31873                           
 31874 ;; *************** function _StopCondition *****************
 31875 ;; Defined at:
 31876 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31877 ;; Parameters:    Size  Location     Type
 31878 ;;		None
 31879 ;; Auto vars:     Size  Location     Type
 31880 ;;		None
 31881 ;; Return value:  Size  Location     Type
 31882 ;;                  1    wreg      void 
 31883 ;; Registers used:
 31884 ;;		status,2, status,0
 31885 ;; Tracked objects:
 31886 ;;		On entry : 0/0
 31887 ;;		On exit  : 0/0
 31888 ;;		Unchanged: 0/0
 31889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31894 ;;Total ram usage:        0 bytes
 31895 ;; Hardware stack levels used:    1
 31896 ;; Hardware stack levels required when called:   11
 31897 ;; This function calls:
 31898 ;;		Nothing
 31899 ;; This function is called by:
 31900 ;;		_I2c_WriteData
 31901 ;;		_I2c_ReadData
 31902 ;; This function uses a non-reentrant model
 31903 ;;
 31904                           
 31905                           	psect	text147
 31906  00618E                     __ptext147:
 31907                           	opt stack 0
 31908  00618E                     _StopCondition:
 31909                           	opt stack 14
 31910                           
 31911                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 31912                           
 31913                           ;incstack = 0
 31914  00618E  8471               	bsf	3953,2,c	;volatile
 31915  006190  0012               	return		;funcret
 31916  006192                     __end_of_StopCondition:
 31917                           	opt stack 0
 31918                           tosu	equ	0xFFF
 31919                           tosh	equ	0xFFE
 31920                           tosl	equ	0xFFD
 31921                           pclath	equ	0xFFA
 31922                           tblptru	equ	0xFF8
 31923                           tblptrh	equ	0xFF7
 31924                           tblptrl	equ	0xFF6
 31925                           tablat	equ	0xFF5
 31926                           prodh	equ	0xFF4
 31927                           prodl	equ	0xFF3
 31928                           intcon	equ	0xFF2
 31929                           intcon2	equ	0xFF1
 31930                           intcon3	equ	0xFF0
 31931                           indf0	equ	0xFEF
 31932                           postinc0	equ	0xFEE
 31933                           plusw0	equ	0xFEB
 31934                           fsr0h	equ	0xFEA
 31935                           fsr0l	equ	0xFE9
 31936                           wreg	equ	0xFE8
 31937                           indf1	equ	0xFE7
 31938                           postinc1	equ	0xFE6
 31939                           postdec1	equ	0xFE5
 31940                           plusw1	equ	0xFE3
 31941                           fsr1h	equ	0xFE2
 31942                           fsr1l	equ	0xFE1
 31943                           indf2	equ	0xFDF
 31944                           postinc2	equ	0xFDE
 31945                           postdec2	equ	0xFDD
 31946                           plusw2	equ	0xFDB
 31947                           fsr2h	equ	0xFDA
 31948                           fsr2l	equ	0xFD9
 31949                           status	equ	0xFD8
 31950                           
 31951 ;; *************** function _StartCondition *****************
 31952 ;; Defined at:
 31953 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31954 ;; Parameters:    Size  Location     Type
 31955 ;;		None
 31956 ;; Auto vars:     Size  Location     Type
 31957 ;;		None
 31958 ;; Return value:  Size  Location     Type
 31959 ;;                  1    wreg      void 
 31960 ;; Registers used:
 31961 ;;		status,2, status,0
 31962 ;; Tracked objects:
 31963 ;;		On entry : 0/0
 31964 ;;		On exit  : 0/0
 31965 ;;		Unchanged: 0/0
 31966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31971 ;;Total ram usage:        0 bytes
 31972 ;; Hardware stack levels used:    1
 31973 ;; Hardware stack levels required when called:   11
 31974 ;; This function calls:
 31975 ;;		Nothing
 31976 ;; This function is called by:
 31977 ;;		_I2c_WriteData
 31978 ;;		_I2c_ReadData
 31979 ;; This function uses a non-reentrant model
 31980 ;;
 31981                           
 31982                           	psect	text148
 31983  006192                     __ptext148:
 31984                           	opt stack 0
 31985  006192                     _StartCondition:
 31986                           	opt stack 14
 31987                           
 31988                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 31989                           
 31990                           ;incstack = 0
 31991  006192  8071               	bsf	3953,0,c	;volatile
 31992  006194  0012               	return		;funcret
 31993  006196                     __end_of_StartCondition:
 31994                           	opt stack 0
 31995                           tosu	equ	0xFFF
 31996                           tosh	equ	0xFFE
 31997                           tosl	equ	0xFFD
 31998                           pclath	equ	0xFFA
 31999                           tblptru	equ	0xFF8
 32000                           tblptrh	equ	0xFF7
 32001                           tblptrl	equ	0xFF6
 32002                           tablat	equ	0xFF5
 32003                           prodh	equ	0xFF4
 32004                           prodl	equ	0xFF3
 32005                           intcon	equ	0xFF2
 32006                           intcon2	equ	0xFF1
 32007                           intcon3	equ	0xFF0
 32008                           indf0	equ	0xFEF
 32009                           postinc0	equ	0xFEE
 32010                           plusw0	equ	0xFEB
 32011                           fsr0h	equ	0xFEA
 32012                           fsr0l	equ	0xFE9
 32013                           wreg	equ	0xFE8
 32014                           indf1	equ	0xFE7
 32015                           postinc1	equ	0xFE6
 32016                           postdec1	equ	0xFE5
 32017                           plusw1	equ	0xFE3
 32018                           fsr1h	equ	0xFE2
 32019                           fsr1l	equ	0xFE1
 32020                           indf2	equ	0xFDF
 32021                           postinc2	equ	0xFDE
 32022                           postdec2	equ	0xFDD
 32023                           plusw2	equ	0xFDB
 32024                           fsr2h	equ	0xFDA
 32025                           fsr2l	equ	0xFD9
 32026                           status	equ	0xFD8
 32027                           
 32028 ;; *************** function _SetAckStatus *****************
 32029 ;; Defined at:
 32030 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32031 ;; Parameters:    Size  Location     Type
 32032 ;;  AckSts          1    wreg     unsigned char 
 32033 ;; Auto vars:     Size  Location     Type
 32034 ;;  AckSts          1   29[BANK0 ] unsigned char 
 32035 ;; Return value:  Size  Location     Type
 32036 ;;                  1    wreg      void 
 32037 ;; Registers used:
 32038 ;;		wreg
 32039 ;; Tracked objects:
 32040 ;;		On entry : 0/0
 32041 ;;		On exit  : 0/0
 32042 ;;		Unchanged: 0/0
 32043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32045 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32047 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32048 ;;Total ram usage:        1 bytes
 32049 ;; Hardware stack levels used:    1
 32050 ;; Hardware stack levels required when called:   11
 32051 ;; This function calls:
 32052 ;;		Nothing
 32053 ;; This function is called by:
 32054 ;;		_I2c_ReadData
 32055 ;; This function uses a non-reentrant model
 32056 ;;
 32057                           
 32058                           	psect	text149
 32059  006094                     __ptext149:
 32060                           	opt stack 0
 32061  006094                     _SetAckStatus:
 32062                           	opt stack 14
 32063                           
 32064                           ;incstack = 0
 32065                           ;SetAckStatus@AckSts stored from wreg
 32066  006094  0100               	movlb	0	; () banked
 32067  006096  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 32068                           
 32069                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 32070  006098  0100               	movlb	0	; () banked
 32071  00609A  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 32072  00609C  D002               	bra	u6235
 32073  00609E  9A71               	bcf	3953,5,c	;volatile
 32074  0060A0  D001               	bra	u6236
 32075  0060A2                     u6235:
 32076  0060A2  8A71               	bsf	3953,5,c	;volatile
 32077  0060A4                     u6236:
 32078                           
 32079                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 32080  0060A4  8871               	bsf	3953,4,c	;volatile
 32081  0060A6  0012               	return		;funcret
 32082  0060A8                     __end_of_SetAckStatus:
 32083                           	opt stack 0
 32084                           tosu	equ	0xFFF
 32085                           tosh	equ	0xFFE
 32086                           tosl	equ	0xFFD
 32087                           pclath	equ	0xFFA
 32088                           tblptru	equ	0xFF8
 32089                           tblptrh	equ	0xFF7
 32090                           tblptrl	equ	0xFF6
 32091                           tablat	equ	0xFF5
 32092                           prodh	equ	0xFF4
 32093                           prodl	equ	0xFF3
 32094                           intcon	equ	0xFF2
 32095                           intcon2	equ	0xFF1
 32096                           intcon3	equ	0xFF0
 32097                           indf0	equ	0xFEF
 32098                           postinc0	equ	0xFEE
 32099                           plusw0	equ	0xFEB
 32100                           fsr0h	equ	0xFEA
 32101                           fsr0l	equ	0xFE9
 32102                           wreg	equ	0xFE8
 32103                           indf1	equ	0xFE7
 32104                           postinc1	equ	0xFE6
 32105                           postdec1	equ	0xFE5
 32106                           plusw1	equ	0xFE3
 32107                           fsr1h	equ	0xFE2
 32108                           fsr1l	equ	0xFE1
 32109                           indf2	equ	0xFDF
 32110                           postinc2	equ	0xFDE
 32111                           postdec2	equ	0xFDD
 32112                           plusw2	equ	0xFDB
 32113                           fsr2h	equ	0xFDA
 32114                           fsr2l	equ	0xFD9
 32115                           status	equ	0xFD8
 32116                           
 32117 ;; *************** function _ReadByte *****************
 32118 ;; Defined at:
 32119 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32120 ;; Parameters:    Size  Location     Type
 32121 ;;		None
 32122 ;; Auto vars:     Size  Location     Type
 32123 ;;  Byte            1   29[BANK0 ] unsigned char 
 32124 ;; Return value:  Size  Location     Type
 32125 ;;                  1    wreg      unsigned char 
 32126 ;; Registers used:
 32127 ;;		wreg, status,2
 32128 ;; Tracked objects:
 32129 ;;		On entry : 0/0
 32130 ;;		On exit  : 0/0
 32131 ;;		Unchanged: 0/0
 32132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32137 ;;Total ram usage:        1 bytes
 32138 ;; Hardware stack levels used:    1
 32139 ;; Hardware stack levels required when called:   11
 32140 ;; This function calls:
 32141 ;;		Nothing
 32142 ;; This function is called by:
 32143 ;;		_I2c_ReadData
 32144 ;; This function uses a non-reentrant model
 32145 ;;
 32146                           
 32147                           	psect	text150
 32148  006158                     __ptext150:
 32149                           	opt stack 0
 32150  006158                     _ReadByte:
 32151                           	opt stack 14
 32152                           
 32153                           ;i2c_drv.c: 207: UINT8 Byte;
 32154                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 32155                           
 32156                           ;incstack = 0
 32157  006158  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 32158                           
 32159                           ;i2c_drv.c: 213: return Byte;
 32160  00615C  0100               	movlb	0	; () banked
 32161  00615E  517D               	movf	ReadByte@Byte& (0+255),w,b
 32162  006160  0012               	return	
 32163  006162                     __end_of_ReadByte:
 32164                           	opt stack 0
 32165                           tosu	equ	0xFFF
 32166                           tosh	equ	0xFFE
 32167                           tosl	equ	0xFFD
 32168                           pclath	equ	0xFFA
 32169                           tblptru	equ	0xFF8
 32170                           tblptrh	equ	0xFF7
 32171                           tblptrl	equ	0xFF6
 32172                           tablat	equ	0xFF5
 32173                           prodh	equ	0xFF4
 32174                           prodl	equ	0xFF3
 32175                           intcon	equ	0xFF2
 32176                           intcon2	equ	0xFF1
 32177                           intcon3	equ	0xFF0
 32178                           indf0	equ	0xFEF
 32179                           postinc0	equ	0xFEE
 32180                           plusw0	equ	0xFEB
 32181                           fsr0h	equ	0xFEA
 32182                           fsr0l	equ	0xFE9
 32183                           wreg	equ	0xFE8
 32184                           indf1	equ	0xFE7
 32185                           postinc1	equ	0xFE6
 32186                           postdec1	equ	0xFE5
 32187                           plusw1	equ	0xFE3
 32188                           fsr1h	equ	0xFE2
 32189                           fsr1l	equ	0xFE1
 32190                           indf2	equ	0xFDF
 32191                           postinc2	equ	0xFDE
 32192                           postdec2	equ	0xFDD
 32193                           plusw2	equ	0xFDB
 32194                           fsr2h	equ	0xFDA
 32195                           fsr2l	equ	0xFD9
 32196                           status	equ	0xFD8
 32197                           
 32198 ;; *************** function _GenerateEvt *****************
 32199 ;; Defined at:
 32200 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 32201 ;; Parameters:    Size  Location     Type
 32202 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 32203 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 32204 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 32205 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 32206 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 32207 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 32208 ;; Auto vars:     Size  Location     Type
 32209 ;;  EventStatus     1   31[BANK0 ] enum E7727
 32210 ;; Return value:  Size  Location     Type
 32211 ;;                  1    wreg      enum E7699
 32212 ;; Registers used:
 32213 ;;		wreg, fsr2l, fsr2h, status,2
 32214 ;; Tracked objects:
 32215 ;;		On entry : 0/0
 32216 ;;		On exit  : 0/0
 32217 ;;		Unchanged: 0/0
 32218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32219 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32220 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32222 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32223 ;;Total ram usage:        3 bytes
 32224 ;; Hardware stack levels used:    1
 32225 ;; Hardware stack levels required when called:   11
 32226 ;; This function calls:
 32227 ;;		Nothing
 32228 ;; This function is called by:
 32229 ;;		_I2c_ReadData
 32230 ;;		_CheckModem
 32231 ;;		_TurnOnModem
 32232 ;;		_ConfigureModem
 32233 ;;		_ModemEvtParser
 32234 ;;		_GetSmsSm
 32235 ;;		_Mdm_RequestSmsData
 32236 ;;		_I2cSlv_SendI2cMsg
 32237 ;;		_I2cSlv_ReceiveI2cMsg
 32238 ;;		_RiSm
 32239 ;;		_Mdm_SendSmsData
 32240 ;;		_MdmHttp_InitGprsNetwork
 32241 ;;		_MdmHttp_GetMethod
 32242 ;;		_Alarm
 32243 ;; This function uses a non-reentrant model
 32244 ;;
 32245                           
 32246                           	psect	text151
 32247  00600C                     __ptext151:
 32248                           	opt stack 0
 32249  00600C                     _GenerateEvt:
 32250                           	opt stack 13
 32251                           
 32252                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 32253                           
 32254                           ; BSR set to: 0
 32255                           ;incstack = 0
 32256  00600C  0E00               	movlw	0
 32257  00600E  0100               	movlb	0	; () banked
 32258  006010  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 32259                           
 32260                           ; BSR set to: 0
 32261                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 32262  006012  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 32263  006016  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 32264  00601A  0E02               	movlw	2
 32265  00601C  6EDF               	movwf	indf2,c
 32266                           
 32267                           ; BSR set to: 0
 32268                           ;os_ser.c: 83: EventStatus = EventSent;
 32269  00601E  0E02               	movlw	2
 32270  006020  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 32271  006022  0012               	return	
 32272  006024                     __end_of_GenerateEvt:
 32273                           	opt stack 0
 32274                           tosu	equ	0xFFF
 32275                           tosh	equ	0xFFE
 32276                           tosl	equ	0xFFD
 32277                           pclath	equ	0xFFA
 32278                           tblptru	equ	0xFF8
 32279                           tblptrh	equ	0xFF7
 32280                           tblptrl	equ	0xFF6
 32281                           tablat	equ	0xFF5
 32282                           prodh	equ	0xFF4
 32283                           prodl	equ	0xFF3
 32284                           intcon	equ	0xFF2
 32285                           intcon2	equ	0xFF1
 32286                           intcon3	equ	0xFF0
 32287                           indf0	equ	0xFEF
 32288                           postinc0	equ	0xFEE
 32289                           plusw0	equ	0xFEB
 32290                           fsr0h	equ	0xFEA
 32291                           fsr0l	equ	0xFE9
 32292                           wreg	equ	0xFE8
 32293                           indf1	equ	0xFE7
 32294                           postinc1	equ	0xFE6
 32295                           postdec1	equ	0xFE5
 32296                           plusw1	equ	0xFE3
 32297                           fsr1h	equ	0xFE2
 32298                           fsr1l	equ	0xFE1
 32299                           indf2	equ	0xFDF
 32300                           postinc2	equ	0xFDE
 32301                           postdec2	equ	0xFDD
 32302                           plusw2	equ	0xFDB
 32303                           fsr2h	equ	0xFDA
 32304                           fsr2l	equ	0xFD9
 32305                           status	equ	0xFD8
 32306                           
 32307 ;; *************** function _EnableReceiver *****************
 32308 ;; Defined at:
 32309 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32310 ;; Parameters:    Size  Location     Type
 32311 ;;		None
 32312 ;; Auto vars:     Size  Location     Type
 32313 ;;		None
 32314 ;; Return value:  Size  Location     Type
 32315 ;;                  1    wreg      void 
 32316 ;; Registers used:
 32317 ;;		status,2, status,0
 32318 ;; Tracked objects:
 32319 ;;		On entry : 0/0
 32320 ;;		On exit  : 0/0
 32321 ;;		Unchanged: 0/0
 32322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32327 ;;Total ram usage:        0 bytes
 32328 ;; Hardware stack levels used:    1
 32329 ;; Hardware stack levels required when called:   11
 32330 ;; This function calls:
 32331 ;;		Nothing
 32332 ;; This function is called by:
 32333 ;;		_I2c_ReadData
 32334 ;; This function uses a non-reentrant model
 32335 ;;
 32336                           
 32337                           	psect	text152
 32338  006196                     __ptext152:
 32339                           	opt stack 0
 32340  006196                     _EnableReceiver:
 32341                           	opt stack 14
 32342                           
 32343                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 32344                           
 32345                           ; BSR set to: 0
 32346                           ;incstack = 0
 32347  006196  8671               	bsf	3953,3,c	;volatile
 32348  006198  0012               	return		;funcret
 32349  00619A                     __end_of_EnableReceiver:
 32350                           	opt stack 0
 32351                           tosu	equ	0xFFF
 32352                           tosh	equ	0xFFE
 32353                           tosl	equ	0xFFD
 32354                           pclath	equ	0xFFA
 32355                           tblptru	equ	0xFF8
 32356                           tblptrh	equ	0xFF7
 32357                           tblptrl	equ	0xFF6
 32358                           tablat	equ	0xFF5
 32359                           prodh	equ	0xFF4
 32360                           prodl	equ	0xFF3
 32361                           intcon	equ	0xFF2
 32362                           intcon2	equ	0xFF1
 32363                           intcon3	equ	0xFF0
 32364                           indf0	equ	0xFEF
 32365                           postinc0	equ	0xFEE
 32366                           plusw0	equ	0xFEB
 32367                           fsr0h	equ	0xFEA
 32368                           fsr0l	equ	0xFE9
 32369                           wreg	equ	0xFE8
 32370                           indf1	equ	0xFE7
 32371                           postinc1	equ	0xFE6
 32372                           postdec1	equ	0xFE5
 32373                           plusw1	equ	0xFE3
 32374                           fsr1h	equ	0xFE2
 32375                           fsr1l	equ	0xFE1
 32376                           indf2	equ	0xFDF
 32377                           postinc2	equ	0xFDE
 32378                           postdec2	equ	0xFDD
 32379                           plusw2	equ	0xFDB
 32380                           fsr2h	equ	0xFDA
 32381                           fsr2l	equ	0xFD9
 32382                           status	equ	0xFD8
 32383                           
 32384 ;; *************** function _CheckTxStatus *****************
 32385 ;; Defined at:
 32386 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32387 ;; Parameters:    Size  Location     Type
 32388 ;;		None
 32389 ;; Auto vars:     Size  Location     Type
 32390 ;;		None
 32391 ;; Return value:  Size  Location     Type
 32392 ;;                  1    wreg      unsigned char 
 32393 ;; Registers used:
 32394 ;;		wreg, status,2, status,0
 32395 ;; Tracked objects:
 32396 ;;		On entry : 0/0
 32397 ;;		On exit  : 0/0
 32398 ;;		Unchanged: 0/0
 32399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32404 ;;Total ram usage:        0 bytes
 32405 ;; Hardware stack levels used:    1
 32406 ;; Hardware stack levels required when called:   11
 32407 ;; This function calls:
 32408 ;;		Nothing
 32409 ;; This function is called by:
 32410 ;;		_I2c_WriteData
 32411 ;;		_I2c_ReadData
 32412 ;; This function uses a non-reentrant model
 32413 ;;
 32414                           
 32415                           	psect	text153
 32416  006162                     __ptext153:
 32417                           	opt stack 0
 32418  006162                     _CheckTxStatus:
 32419                           	opt stack 14
 32420                           
 32421                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 32422                           
 32423                           ;incstack = 0
 32424  006162  4073               	rrncf	3955,w,c	;volatile
 32425  006164  42E8               	rrncf	wreg,f,c
 32426  006166  0B3F               	andlw	63
 32427  006168  0B01               	andlw	1
 32428  00616A  0012               	return	
 32429  00616C                     __end_of_CheckTxStatus:
 32430                           	opt stack 0
 32431                           tosu	equ	0xFFF
 32432                           tosh	equ	0xFFE
 32433                           tosl	equ	0xFFD
 32434                           pclath	equ	0xFFA
 32435                           tblptru	equ	0xFF8
 32436                           tblptrh	equ	0xFF7
 32437                           tblptrl	equ	0xFF6
 32438                           tablat	equ	0xFF5
 32439                           prodh	equ	0xFF4
 32440                           prodl	equ	0xFF3
 32441                           intcon	equ	0xFF2
 32442                           intcon2	equ	0xFF1
 32443                           intcon3	equ	0xFF0
 32444                           indf0	equ	0xFEF
 32445                           postinc0	equ	0xFEE
 32446                           plusw0	equ	0xFEB
 32447                           fsr0h	equ	0xFEA
 32448                           fsr0l	equ	0xFE9
 32449                           wreg	equ	0xFE8
 32450                           indf1	equ	0xFE7
 32451                           postinc1	equ	0xFE6
 32452                           postdec1	equ	0xFE5
 32453                           plusw1	equ	0xFE3
 32454                           fsr1h	equ	0xFE2
 32455                           fsr1l	equ	0xFE1
 32456                           indf2	equ	0xFDF
 32457                           postinc2	equ	0xFDE
 32458                           postdec2	equ	0xFDD
 32459                           plusw2	equ	0xFDB
 32460                           fsr2h	equ	0xFDA
 32461                           fsr2l	equ	0xFD9
 32462                           status	equ	0xFD8
 32463                           
 32464 ;; *************** function _CheckAckStatus *****************
 32465 ;; Defined at:
 32466 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32467 ;; Parameters:    Size  Location     Type
 32468 ;;		None
 32469 ;; Auto vars:     Size  Location     Type
 32470 ;;		None
 32471 ;; Return value:  Size  Location     Type
 32472 ;;                  1    wreg      unsigned char 
 32473 ;; Registers used:
 32474 ;;		wreg, status,2, status,0
 32475 ;; Tracked objects:
 32476 ;;		On entry : 0/0
 32477 ;;		On exit  : 0/0
 32478 ;;		Unchanged: 0/0
 32479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32484 ;;Total ram usage:        0 bytes
 32485 ;; Hardware stack levels used:    1
 32486 ;; Hardware stack levels required when called:   11
 32487 ;; This function calls:
 32488 ;;		Nothing
 32489 ;; This function is called by:
 32490 ;;		_I2c_WriteData
 32491 ;;		_I2c_ReadData
 32492 ;; This function uses a non-reentrant model
 32493 ;;
 32494                           
 32495                           	psect	text154
 32496  00616C                     __ptext154:
 32497                           	opt stack 0
 32498  00616C                     _CheckAckStatus:
 32499                           	opt stack 14
 32500                           
 32501                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 32502                           
 32503                           ;incstack = 0
 32504  00616C  4471               	rlncf	3953,w,c	;volatile
 32505  00616E  46E8               	rlncf	wreg,f,c
 32506  006170  0B03               	andlw	3
 32507  006172  0B01               	andlw	1
 32508  006174  0012               	return	
 32509  006176                     __end_of_CheckAckStatus:
 32510                           	opt stack 0
 32511                           tosu	equ	0xFFF
 32512                           tosh	equ	0xFFE
 32513                           tosl	equ	0xFFD
 32514                           pclath	equ	0xFFA
 32515                           tblptru	equ	0xFF8
 32516                           tblptrh	equ	0xFF7
 32517                           tblptrl	equ	0xFF6
 32518                           tablat	equ	0xFF5
 32519                           prodh	equ	0xFF4
 32520                           prodl	equ	0xFF3
 32521                           intcon	equ	0xFF2
 32522                           intcon2	equ	0xFF1
 32523                           intcon3	equ	0xFF0
 32524                           indf0	equ	0xFEF
 32525                           postinc0	equ	0xFEE
 32526                           plusw0	equ	0xFEB
 32527                           fsr0h	equ	0xFEA
 32528                           fsr0l	equ	0xFE9
 32529                           wreg	equ	0xFE8
 32530                           indf1	equ	0xFE7
 32531                           postinc1	equ	0xFE6
 32532                           postdec1	equ	0xFE5
 32533                           plusw1	equ	0xFE3
 32534                           fsr1h	equ	0xFE2
 32535                           fsr1l	equ	0xFE1
 32536                           indf2	equ	0xFDF
 32537                           postinc2	equ	0xFDE
 32538                           postdec2	equ	0xFDD
 32539                           plusw2	equ	0xFDB
 32540                           fsr2h	equ	0xFDA
 32541                           fsr2l	equ	0xFD9
 32542                           status	equ	0xFD8
 32543                           
 32544 ;; *************** function _LowPriorityIsr *****************
 32545 ;; Defined at:
 32546 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 32547 ;; Parameters:    Size  Location     Type
 32548 ;;		None
 32549 ;; Auto vars:     Size  Location     Type
 32550 ;;		None
 32551 ;; Return value:  Size  Location     Type
 32552 ;;                  1    wreg      void 
 32553 ;; Registers used:
 32554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32555 ;; Tracked objects:
 32556 ;;		On entry : 0/0
 32557 ;;		On exit  : 0/0
 32558 ;;		Unchanged: 0/0
 32559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32562 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32563 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32564 ;;Total ram usage:       21 bytes
 32565 ;; Hardware stack levels used:    1
 32566 ;; Hardware stack levels required when called:   10
 32567 ;; This function calls:
 32568 ;;		_Tmr_Tmr2Isr
 32569 ;; This function is called by:
 32570 ;;		Interrupt level 1
 32571 ;; This function uses a non-reentrant model
 32572 ;;
 32573                           
 32574                           	psect	intcodelo
 32575  000018                     __pintcodelo:
 32576                           	opt stack 0
 32577  000018                     _LowPriorityIsr:
 32578                           	opt stack 8
 32579                           
 32580                           ;incstack = 0
 32581  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 32582  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 32583  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 32584  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 32585  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 32586  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 32587  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 32588  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 32589  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 32590  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 32591  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 32592  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 32593  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 32594  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 32595  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 32596  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 32597  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 32598  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 32599  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 32600  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 32601  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 32602  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 32603                           
 32604                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 32605  00006E  B29E               	btfsc	3998,1,c	;volatile
 32606                           
 32607                           ;irq.c: 259: {
 32608                           ;irq.c: 261: Tmr_Tmr2Isr();
 32609  000070  EC01  F02F         	call	_Tmr_Tmr2Isr	;wreg free
 32610  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 32611  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 32612  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 32613  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 32614  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 32615  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 32616  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 32617  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 32618  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 32619  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 32620  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 32621  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 32622  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 32623  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 32624  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 32625  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 32626  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 32627  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 32628  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 32629  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 32630  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 32631  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 32632  0000CA  0010               	retfie	
 32633  0000CC                     __end_of_LowPriorityIsr:
 32634                           	opt stack 0
 32635                           tosu	equ	0xFFF
 32636                           tosh	equ	0xFFE
 32637                           tosl	equ	0xFFD
 32638                           pclatu	equ	0xFFB
 32639                           pclath	equ	0xFFA
 32640                           tblptru	equ	0xFF8
 32641                           tblptrh	equ	0xFF7
 32642                           tblptrl	equ	0xFF6
 32643                           tablat	equ	0xFF5
 32644                           prodh	equ	0xFF4
 32645                           prodl	equ	0xFF3
 32646                           intcon	equ	0xFF2
 32647                           intcon2	equ	0xFF1
 32648                           intcon3	equ	0xFF0
 32649                           indf0	equ	0xFEF
 32650                           postinc0	equ	0xFEE
 32651                           plusw0	equ	0xFEB
 32652                           fsr0h	equ	0xFEA
 32653                           fsr0l	equ	0xFE9
 32654                           wreg	equ	0xFE8
 32655                           indf1	equ	0xFE7
 32656                           postinc1	equ	0xFE6
 32657                           postdec1	equ	0xFE5
 32658                           plusw1	equ	0xFE3
 32659                           fsr1h	equ	0xFE2
 32660                           fsr1l	equ	0xFE1
 32661                           bsr	equ	0xFE0
 32662                           indf2	equ	0xFDF
 32663                           postinc2	equ	0xFDE
 32664                           postdec2	equ	0xFDD
 32665                           plusw2	equ	0xFDB
 32666                           fsr2h	equ	0xFDA
 32667                           fsr2l	equ	0xFD9
 32668                           status	equ	0xFD8
 32669                           
 32670 ;; *************** function _Tmr_Tmr2Isr *****************
 32671 ;; Defined at:
 32672 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 32673 ;; Parameters:    Size  Location     Type
 32674 ;;		None
 32675 ;; Auto vars:     Size  Location     Type
 32676 ;;		None
 32677 ;; Return value:  Size  Location     Type
 32678 ;;                  1    wreg      void 
 32679 ;; Registers used:
 32680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32681 ;; Tracked objects:
 32682 ;;		On entry : 0/0
 32683 ;;		On exit  : 0/0
 32684 ;;		Unchanged: 0/0
 32685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32690 ;;Total ram usage:        0 bytes
 32691 ;; Hardware stack levels used:    1
 32692 ;; Hardware stack levels required when called:    9
 32693 ;; This function calls:
 32694 ;;		Absolute function
 32695 ;;		_Sch_SchmIntService
 32696 ;; This function is called by:
 32697 ;;		_LowPriorityIsr
 32698 ;; This function uses a non-reentrant model
 32699 ;;
 32700                           
 32701                           	psect	text156
 32702  005E02                     __ptext156:
 32703                           	opt stack 0
 32704  005E02                     _Tmr_Tmr2Isr:
 32705                           	opt stack 8
 32706                           
 32707                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 32708                           
 32709                           ;incstack = 0
 32710  005E02  929E               	bcf	3998,1,c	;volatile
 32711                           
 32712                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 32713  005E04  0102               	movlb	2	; () banked
 32714  005E06  51E0               	movf	_Tmr2IsrCallback& (0+255),w,b
 32715  005E08  11E1               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 32716  005E0A  B4D8               	btfsc	status,2,c
 32717  005E0C  0012               	return	
 32718                           
 32719                           ; BSR set to: 2
 32720                           ;tmr_drv.c: 315: {
 32721                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 32722  005E0E  D801               	call	i1u1359_28
 32723  005E10  0012               	return	
 32724  005E12                     i1u1359_28:
 32725  005E12  0005               	push	
 32726  005E14  6EFA               	movwf	pclath,c
 32727  005E16  51E0               	movf	_Tmr2IsrCallback& (0+255),w,b
 32728  005E18  6EFD               	movwf	tosl,c
 32729  005E1A  51E1               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 32730  005E1C  6EFE               	movwf	tosh,c
 32731  005E1E  50F8               	movf	tblptru,w,c
 32732  005E20  6EFF               	movwf	tosu,c
 32733  005E22  50FA               	movf	pclath,w,c
 32734  005E24  0012               	return		;indir
 32735  005E26                     __end_of_Tmr_Tmr2Isr:
 32736                           	opt stack 0
 32737                           tosu	equ	0xFFF
 32738                           tosh	equ	0xFFE
 32739                           tosl	equ	0xFFD
 32740                           pclatu	equ	0xFFB
 32741                           pclath	equ	0xFFA
 32742                           tblptru	equ	0xFF8
 32743                           tblptrh	equ	0xFF7
 32744                           tblptrl	equ	0xFF6
 32745                           tablat	equ	0xFF5
 32746                           prodh	equ	0xFF4
 32747                           prodl	equ	0xFF3
 32748                           intcon	equ	0xFF2
 32749                           intcon2	equ	0xFF1
 32750                           intcon3	equ	0xFF0
 32751                           indf0	equ	0xFEF
 32752                           postinc0	equ	0xFEE
 32753                           plusw0	equ	0xFEB
 32754                           fsr0h	equ	0xFEA
 32755                           fsr0l	equ	0xFE9
 32756                           wreg	equ	0xFE8
 32757                           indf1	equ	0xFE7
 32758                           postinc1	equ	0xFE6
 32759                           postdec1	equ	0xFE5
 32760                           plusw1	equ	0xFE3
 32761                           fsr1h	equ	0xFE2
 32762                           fsr1l	equ	0xFE1
 32763                           bsr	equ	0xFE0
 32764                           indf2	equ	0xFDF
 32765                           postinc2	equ	0xFDE
 32766                           postdec2	equ	0xFDD
 32767                           plusw2	equ	0xFDB
 32768                           fsr2h	equ	0xFDA
 32769                           fsr2l	equ	0xFD9
 32770                           status	equ	0xFD8
 32771                           
 32772 ;; *************** function _Sch_SchmIntService *****************
 32773 ;; Defined at:
 32774 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 32775 ;; Parameters:    Size  Location     Type
 32776 ;;		None
 32777 ;; Auto vars:     Size  Location     Type
 32778 ;;		None
 32779 ;; Return value:  Size  Location     Type
 32780 ;;                  1    wreg      void 
 32781 ;; Registers used:
 32782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32783 ;; Tracked objects:
 32784 ;;		On entry : 0/0
 32785 ;;		On exit  : 0/0
 32786 ;;		Unchanged: 0/0
 32787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32792 ;;Total ram usage:        0 bytes
 32793 ;; Hardware stack levels used:    1
 32794 ;; Hardware stack levels required when called:    8
 32795 ;; This function calls:
 32796 ;;		_OsAlrm_ProcessOsAlarms
 32797 ;;		_UpdateOsCounters
 32798 ;;		_UpdateSchFlag
 32799 ;; This function is called by:
 32800 ;;		_SystemInit
 32801 ;;		_Tmr_Tmr2Isr
 32802 ;; This function uses a non-reentrant model
 32803 ;;
 32804                           
 32805                           	psect	text157
 32806  00612A                     __ptext157:
 32807                           	opt stack 0
 32808  00612A                     _Sch_SchmIntService:
 32809                           	opt stack 8
 32810                           
 32811                           ;os_sched.c: 217: UpdateSchFlag();
 32812                           
 32813                           ;incstack = 0
 32814  00612A  ECB7  F02F         	call	_UpdateSchFlag	;wreg free
 32815                           
 32816                           ;os_sched.c: 219: UpdateOsCounters();
 32817  00612E  EC7E  F030         	call	_UpdateOsCounters	;wreg free
 32818                           
 32819                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 32820  006132  EC5D  F011         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 32821  006136  0012               	return		;funcret
 32822  006138                     __end_of_Sch_SchmIntService:
 32823                           	opt stack 0
 32824                           tosu	equ	0xFFF
 32825                           tosh	equ	0xFFE
 32826                           tosl	equ	0xFFD
 32827                           pclatu	equ	0xFFB
 32828                           pclath	equ	0xFFA
 32829                           tblptru	equ	0xFF8
 32830                           tblptrh	equ	0xFF7
 32831                           tblptrl	equ	0xFF6
 32832                           tablat	equ	0xFF5
 32833                           prodh	equ	0xFF4
 32834                           prodl	equ	0xFF3
 32835                           intcon	equ	0xFF2
 32836                           intcon2	equ	0xFF1
 32837                           intcon3	equ	0xFF0
 32838                           indf0	equ	0xFEF
 32839                           postinc0	equ	0xFEE
 32840                           plusw0	equ	0xFEB
 32841                           fsr0h	equ	0xFEA
 32842                           fsr0l	equ	0xFE9
 32843                           wreg	equ	0xFE8
 32844                           indf1	equ	0xFE7
 32845                           postinc1	equ	0xFE6
 32846                           postdec1	equ	0xFE5
 32847                           plusw1	equ	0xFE3
 32848                           fsr1h	equ	0xFE2
 32849                           fsr1l	equ	0xFE1
 32850                           bsr	equ	0xFE0
 32851                           indf2	equ	0xFDF
 32852                           postinc2	equ	0xFDE
 32853                           postdec2	equ	0xFDD
 32854                           plusw2	equ	0xFDB
 32855                           fsr2h	equ	0xFDA
 32856                           fsr2l	equ	0xFD9
 32857                           status	equ	0xFD8
 32858                           
 32859 ;; *************** function _UpdateSchFlag *****************
 32860 ;; Defined at:
 32861 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 32862 ;; Parameters:    Size  Location     Type
 32863 ;;		None
 32864 ;; Auto vars:     Size  Location     Type
 32865 ;;		None
 32866 ;; Return value:  Size  Location     Type
 32867 ;;                  1    wreg      void 
 32868 ;; Registers used:
 32869 ;;		wreg, status,2, status,0
 32870 ;; Tracked objects:
 32871 ;;		On entry : 0/0
 32872 ;;		On exit  : 0/0
 32873 ;;		Unchanged: 0/0
 32874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32879 ;;Total ram usage:        0 bytes
 32880 ;; Hardware stack levels used:    1
 32881 ;; Hardware stack levels required when called:    4
 32882 ;; This function calls:
 32883 ;;		Nothing
 32884 ;; This function is called by:
 32885 ;;		_Sch_SchmIntService
 32886 ;; This function uses a non-reentrant model
 32887 ;;
 32888                           
 32889                           	psect	text158
 32890  005F6E                     __ptext158:
 32891                           	opt stack 0
 32892  005F6E                     _UpdateSchFlag:
 32893                           	opt stack 11
 32894                           
 32895                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 32896                           ;os_sched.c: 138: InterruptCounter++;
 32897                           
 32898                           ;incstack = 0
 32899  005F6E  0103               	movlb	3	; () banked
 32900  005F70  4B2E               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 32901  005F72  2B2F               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 32902                           
 32903                           ; BSR set to: 3
 32904                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 32905  005F74  512E               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 32906  005F76  112F               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 32907  005F78  B4D8               	btfsc	status,2,c
 32908  005F7A  0012               	return	
 32909                           
 32910                           ; BSR set to: 3
 32911                           ;os_sched.c: 141: {
 32912                           ;os_sched.c: 143: InterruptCounter = 0;
 32913  005F7C  0E00               	movlw	0
 32914  005F7E  6F2F               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 32915  005F80  0E00               	movlw	0
 32916  005F82  6F2E               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 32917                           
 32918                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 32919  005F84  0E00               	movlw	0
 32920  005F86  0102               	movlb	2	; () banked
 32921  005F88  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 32922  005F8A  0012               	return	
 32923  005F8C                     __end_of_UpdateSchFlag:
 32924                           	opt stack 0
 32925                           tosu	equ	0xFFF
 32926                           tosh	equ	0xFFE
 32927                           tosl	equ	0xFFD
 32928                           pclatu	equ	0xFFB
 32929                           pclath	equ	0xFFA
 32930                           tblptru	equ	0xFF8
 32931                           tblptrh	equ	0xFF7
 32932                           tblptrl	equ	0xFF6
 32933                           tablat	equ	0xFF5
 32934                           prodh	equ	0xFF4
 32935                           prodl	equ	0xFF3
 32936                           intcon	equ	0xFF2
 32937                           intcon2	equ	0xFF1
 32938                           intcon3	equ	0xFF0
 32939                           indf0	equ	0xFEF
 32940                           postinc0	equ	0xFEE
 32941                           plusw0	equ	0xFEB
 32942                           fsr0h	equ	0xFEA
 32943                           fsr0l	equ	0xFE9
 32944                           wreg	equ	0xFE8
 32945                           indf1	equ	0xFE7
 32946                           postinc1	equ	0xFE6
 32947                           postdec1	equ	0xFE5
 32948                           plusw1	equ	0xFE3
 32949                           fsr1h	equ	0xFE2
 32950                           fsr1l	equ	0xFE1
 32951                           bsr	equ	0xFE0
 32952                           indf2	equ	0xFDF
 32953                           postinc2	equ	0xFDE
 32954                           postdec2	equ	0xFDD
 32955                           plusw2	equ	0xFDB
 32956                           fsr2h	equ	0xFDA
 32957                           fsr2l	equ	0xFD9
 32958                           status	equ	0xFD8
 32959                           
 32960 ;; *************** function _UpdateOsCounters *****************
 32961 ;; Defined at:
 32962 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 32963 ;; Parameters:    Size  Location     Type
 32964 ;;		None
 32965 ;; Auto vars:     Size  Location     Type
 32966 ;;		None
 32967 ;; Return value:  Size  Location     Type
 32968 ;;                  1    wreg      void 
 32969 ;; Registers used:
 32970 ;;		wreg, status,2, status,0
 32971 ;; Tracked objects:
 32972 ;;		On entry : 0/0
 32973 ;;		On exit  : 0/0
 32974 ;;		Unchanged: 0/0
 32975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32980 ;;Total ram usage:        0 bytes
 32981 ;; Hardware stack levels used:    1
 32982 ;; Hardware stack levels required when called:    4
 32983 ;; This function calls:
 32984 ;;		Nothing
 32985 ;; This function is called by:
 32986 ;;		_Sch_SchmIntService
 32987 ;; This function uses a non-reentrant model
 32988 ;;
 32989                           
 32990                           	psect	text159
 32991  0060FC                     __ptext159:
 32992                           	opt stack 0
 32993  0060FC                     _UpdateOsCounters:
 32994                           	opt stack 11
 32995                           
 32996                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 32997                           
 32998                           ;incstack = 0
 32999  0060FC  0E01               	movlw	1
 33000  0060FE  0103               	movlb	3	; () banked
 33001  006100  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 33002  006102  0E00               	movlw	0
 33003  006104  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 33004  006106  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 33005  006108  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 33006                           
 33007                           ; BSR set to: 3
 33008  00610A  0012               	return		;funcret
 33009  00610C                     __end_of_UpdateOsCounters:
 33010                           	opt stack 0
 33011                           tosu	equ	0xFFF
 33012                           tosh	equ	0xFFE
 33013                           tosl	equ	0xFFD
 33014                           pclatu	equ	0xFFB
 33015                           pclath	equ	0xFFA
 33016                           tblptru	equ	0xFF8
 33017                           tblptrh	equ	0xFF7
 33018                           tblptrl	equ	0xFF6
 33019                           tablat	equ	0xFF5
 33020                           prodh	equ	0xFF4
 33021                           prodl	equ	0xFF3
 33022                           intcon	equ	0xFF2
 33023                           intcon2	equ	0xFF1
 33024                           intcon3	equ	0xFF0
 33025                           indf0	equ	0xFEF
 33026                           postinc0	equ	0xFEE
 33027                           plusw0	equ	0xFEB
 33028                           fsr0h	equ	0xFEA
 33029                           fsr0l	equ	0xFE9
 33030                           wreg	equ	0xFE8
 33031                           indf1	equ	0xFE7
 33032                           postinc1	equ	0xFE6
 33033                           postdec1	equ	0xFE5
 33034                           plusw1	equ	0xFE3
 33035                           fsr1h	equ	0xFE2
 33036                           fsr1l	equ	0xFE1
 33037                           bsr	equ	0xFE0
 33038                           indf2	equ	0xFDF
 33039                           postinc2	equ	0xFDE
 33040                           postdec2	equ	0xFDD
 33041                           plusw2	equ	0xFDB
 33042                           fsr2h	equ	0xFDA
 33043                           fsr2l	equ	0xFD9
 33044                           status	equ	0xFD8
 33045                           
 33046 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 33047 ;; Defined at:
 33048 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33049 ;; Parameters:    Size  Location     Type
 33050 ;;		None
 33051 ;; Auto vars:     Size  Location     Type
 33052 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 33053 ;; Return value:  Size  Location     Type
 33054 ;;                  1    wreg      void 
 33055 ;; Registers used:
 33056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33057 ;; Tracked objects:
 33058 ;;		On entry : 0/0
 33059 ;;		On exit  : 0/0
 33060 ;;		Unchanged: 0/0
 33061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33064 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33065 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33066 ;;Total ram usage:       10 bytes
 33067 ;; Hardware stack levels used:    1
 33068 ;; Hardware stack levels required when called:    7
 33069 ;; This function calls:
 33070 ;;		_I2cDummyTx
 33071 ;;		_OsAlrm_ClearOsAlarm
 33072 ;;		i1___wmul
 33073 ;; This function is called by:
 33074 ;;		_Sch_SchmIntService
 33075 ;; This function uses a non-reentrant model
 33076 ;;
 33077                           
 33078                           	psect	text160
 33079  0022BA                     __ptext160:
 33080                           	opt stack 0
 33081  0022BA                     _OsAlrm_ProcessOsAlarms:
 33082                           	opt stack 8
 33083                           
 33084                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 33085                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 33086                           
 33087                           ; BSR set to: 3
 33088                           ;incstack = 0
 33089  0022BA  0E00               	movlw	0
 33090  0022BC  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 33091  0022BE  0E00               	movlw	0
 33092  0022C0  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 33093  0022C2  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 33094  0022C4  E105               	bnz	i1u1334_20
 33095  0022C6  0E14               	movlw	20
 33096  0022C8  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 33097  0022CA  B0D8               	btfsc	status,0,c
 33098  0022CC  0012               	return	
 33099  0022CE  D001               	goto	i1l742
 33100  0022D0                     i1u1334_20:
 33101  0022D0  0012               	return	
 33102  0022D2                     i1l742:
 33103                           
 33104                           ;os_alarms.c: 121: {
 33105                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 33106  0022D2  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33107  0022D6  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33108  0022DA  0E00               	movlw	0
 33109  0022DC  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33110  0022DE  0E0B               	movlw	11
 33111  0022E0  6E1B               	movwf	i1___wmul@multiplicand,c
 33112  0022E2  ECB8  F02E         	call	i1___wmul	;wreg free
 33113  0022E6  0E00               	movlw	low _OsAlarms
 33114  0022E8  2419               	addwf	?i1___wmul,w,c
 33115  0022EA  6ED9               	movwf	fsr2l,c
 33116  0022EC  0E06               	movlw	high _OsAlarms
 33117  0022EE  201A               	addwfc	?i1___wmul+1,w,c
 33118  0022F0  6EDA               	movwf	fsr2h,c
 33119  0022F2  04DE               	decf	postinc2,w,c
 33120  0022F4  A4D8               	btfss	status,2,c
 33121  0022F6  D086               	goto	i1u1338_29
 33122                           
 33123                           ;os_alarms.c: 124: {
 33124                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 33125  0022F8  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33126  0022FC  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33127  002300  0E00               	movlw	0
 33128  002302  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33129  002304  0E0B               	movlw	11
 33130  002306  6E1B               	movwf	i1___wmul@multiplicand,c
 33131  002308  ECB8  F02E         	call	i1___wmul	;wreg free
 33132  00230C  0E01               	movlw	1
 33133  00230E  2619               	addwf	?i1___wmul,f,c
 33134  002310  0E00               	movlw	0
 33135  002312  221A               	addwfc	?i1___wmul+1,f,c
 33136  002314  0E00               	movlw	low _OsAlarms
 33137  002316  2419               	addwf	?i1___wmul,w,c
 33138  002318  6ED9               	movwf	fsr2l,c
 33139  00231A  0E06               	movlw	high _OsAlarms
 33140  00231C  201A               	addwfc	?i1___wmul+1,w,c
 33141  00231E  6EDA               	movwf	fsr2h,c
 33142  002320  2ADE               	incf	postinc2,f,c
 33143  002322  0E00               	movlw	0
 33144  002324  22DE               	addwfc	postinc2,f,c
 33145  002326  22DE               	addwfc	postinc2,f,c
 33146  002328  22DE               	addwfc	postinc2,f,c
 33147                           
 33148                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 33149  00232A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33150  00232E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33151  002332  0E00               	movlw	0
 33152  002334  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33153  002336  0E0B               	movlw	11
 33154  002338  6E1B               	movwf	i1___wmul@multiplicand,c
 33155  00233A  ECB8  F02E         	call	i1___wmul	;wreg free
 33156  00233E  0E05               	movlw	5
 33157  002340  2619               	addwf	?i1___wmul,f,c
 33158  002342  0E00               	movlw	0
 33159  002344  221A               	addwfc	?i1___wmul+1,f,c
 33160  002346  0E00               	movlw	low _OsAlarms
 33161  002348  2419               	addwf	?i1___wmul,w,c
 33162  00234A  6ED9               	movwf	fsr2l,c
 33163  00234C  0E06               	movlw	high _OsAlarms
 33164  00234E  201A               	addwfc	?i1___wmul+1,w,c
 33165  002350  6EDA               	movwf	fsr2h,c
 33166  002352  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33167  002356  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33168  00235A  0E00               	movlw	0
 33169  00235C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33170  00235E  0E0B               	movlw	11
 33171  002360  6E1B               	movwf	i1___wmul@multiplicand,c
 33172  002362  ECB8  F02E         	call	i1___wmul	;wreg free
 33173  002366  0E01               	movlw	1
 33174  002368  2619               	addwf	?i1___wmul,f,c
 33175  00236A  0E00               	movlw	0
 33176  00236C  221A               	addwfc	?i1___wmul+1,f,c
 33177  00236E  0E00               	movlw	low _OsAlarms
 33178  002370  2419               	addwf	?i1___wmul,w,c
 33179  002372  6EE1               	movwf	fsr1l,c
 33180  002374  0E06               	movlw	high _OsAlarms
 33181  002376  201A               	addwfc	?i1___wmul+1,w,c
 33182  002378  6EE2               	movwf	fsr1h,c
 33183  00237A  50DE               	movf	postinc2,w,c
 33184  00237C  5CE6               	subwf	postinc1,w,c
 33185  00237E  50DE               	movf	postinc2,w,c
 33186  002380  58E6               	subwfb	postinc1,w,c
 33187  002382  50DE               	movf	postinc2,w,c
 33188  002384  58E6               	subwfb	postinc1,w,c
 33189  002386  50DE               	movf	postinc2,w,c
 33190  002388  58E6               	subwfb	postinc1,w,c
 33191  00238A  A0D8               	btfss	status,0,c
 33192  00238C  D03B               	goto	i1u1338_29
 33193                           
 33194                           ;os_alarms.c: 129: {
 33195                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 33196  00238E  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 33197  002390  EC3B  F029         	call	_OsAlrm_ClearOsAlarm
 33198                           
 33199                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 33200  002394  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33201  002398  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33202  00239C  0E00               	movlw	0
 33203  00239E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33204  0023A0  0E0B               	movlw	11
 33205  0023A2  6E1B               	movwf	i1___wmul@multiplicand,c
 33206  0023A4  ECB8  F02E         	call	i1___wmul	;wreg free
 33207  0023A8  0E09               	movlw	9
 33208  0023AA  2619               	addwf	?i1___wmul,f,c
 33209  0023AC  0E00               	movlw	0
 33210  0023AE  221A               	addwfc	?i1___wmul+1,f,c
 33211  0023B0  0E00               	movlw	low _OsAlarms
 33212  0023B2  2419               	addwf	?i1___wmul,w,c
 33213  0023B4  6ED9               	movwf	fsr2l,c
 33214  0023B6  0E06               	movlw	high _OsAlarms
 33215  0023B8  201A               	addwfc	?i1___wmul+1,w,c
 33216  0023BA  6EDA               	movwf	fsr2h,c
 33217  0023BC  50DE               	movf	postinc2,w,c
 33218  0023BE  10DE               	iorwf	postinc2,w,c
 33219  0023C0  B4D8               	btfsc	status,2,c
 33220  0023C2  D020               	goto	i1u1338_29
 33221                           
 33222                           ;os_alarms.c: 134: {
 33223                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 33224  0023C4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33225  0023C8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33226  0023CC  0E00               	movlw	0
 33227  0023CE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33228  0023D0  0E0B               	movlw	11
 33229  0023D2  6E1B               	movwf	i1___wmul@multiplicand,c
 33230  0023D4  ECB8  F02E         	call	i1___wmul	;wreg free
 33231  0023D8  0E09               	movlw	9
 33232  0023DA  2619               	addwf	?i1___wmul,f,c
 33233  0023DC  0E00               	movlw	0
 33234  0023DE  221A               	addwfc	?i1___wmul+1,f,c
 33235  0023E0  0E00               	movlw	low _OsAlarms
 33236  0023E2  2419               	addwf	?i1___wmul,w,c
 33237  0023E4  6ED9               	movwf	fsr2l,c
 33238  0023E6  0E06               	movlw	high _OsAlarms
 33239  0023E8  201A               	addwfc	?i1___wmul+1,w,c
 33240  0023EA  6EDA               	movwf	fsr2h,c
 33241  0023EC  D801               	call	i1u1338_28
 33242  0023EE  D00A               	goto	i1u1338_29
 33243  0023F0                     i1u1338_28:
 33244  0023F0  0005               	push	
 33245  0023F2  6EFA               	movwf	pclath,c
 33246  0023F4  50DE               	movf	postinc2,w,c
 33247  0023F6  6EFD               	movwf	tosl,c
 33248  0023F8  50DE               	movf	postinc2,w,c
 33249  0023FA  6EFE               	movwf	tosh,c
 33250  0023FC  50F8               	movf	tblptru,w,c
 33251  0023FE  6EFF               	movwf	tosu,c
 33252  002400  50FA               	movf	pclath,w,c
 33253  002402  0012               	return		;indir
 33254  002404                     i1u1338_29:
 33255  002404  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 33256  002406  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 33257  002408  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 33258  00240A  E101               	bnz	i1l747
 33259  00240C  D75C               	goto	L68
 33260  00240E                     i1l747:
 33261  00240E  0012               	return		;funcret
 33262  002410                     __end_of_OsAlrm_ProcessOsAlarms:
 33263                           	opt stack 0
 33264                           tosu	equ	0xFFF
 33265                           tosh	equ	0xFFE
 33266                           tosl	equ	0xFFD
 33267                           pclatu	equ	0xFFB
 33268                           pclath	equ	0xFFA
 33269                           tblptru	equ	0xFF8
 33270                           tblptrh	equ	0xFF7
 33271                           tblptrl	equ	0xFF6
 33272                           tablat	equ	0xFF5
 33273                           prodh	equ	0xFF4
 33274                           prodl	equ	0xFF3
 33275                           intcon	equ	0xFF2
 33276                           intcon2	equ	0xFF1
 33277                           intcon3	equ	0xFF0
 33278                           indf0	equ	0xFEF
 33279                           postinc0	equ	0xFEE
 33280                           plusw0	equ	0xFEB
 33281                           fsr0h	equ	0xFEA
 33282                           fsr0l	equ	0xFE9
 33283                           wreg	equ	0xFE8
 33284                           indf1	equ	0xFE7
 33285                           postinc1	equ	0xFE6
 33286                           postdec1	equ	0xFE5
 33287                           plusw1	equ	0xFE3
 33288                           fsr1h	equ	0xFE2
 33289                           fsr1l	equ	0xFE1
 33290                           bsr	equ	0xFE0
 33291                           indf2	equ	0xFDF
 33292                           postinc2	equ	0xFDE
 33293                           postdec2	equ	0xFDD
 33294                           plusw2	equ	0xFDB
 33295                           fsr2h	equ	0xFDA
 33296                           fsr2l	equ	0xFD9
 33297                           status	equ	0xFD8
 33298                           
 33299 ;; *************** function i1___wmul *****************
 33300 ;; Defined at:
 33301 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 33302 ;; Parameters:    Size  Location     Type
 33303 ;;  multiplier      2   24[COMRAM] unsigned int 
 33304 ;;  multiplicand    2   26[COMRAM] unsigned int 
 33305 ;; Auto vars:     Size  Location     Type
 33306 ;;  __wmul          2   28[COMRAM] unsigned int 
 33307 ;; Return value:  Size  Location     Type
 33308 ;;                  2   24[COMRAM] unsigned int 
 33309 ;; Registers used:
 33310 ;;		wreg, status,2, status,0, prodl, prodh
 33311 ;; Tracked objects:
 33312 ;;		On entry : 0/0
 33313 ;;		On exit  : 0/0
 33314 ;;		Unchanged: 0/0
 33315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33316 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33317 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33319 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33320 ;;Total ram usage:        6 bytes
 33321 ;; Hardware stack levels used:    1
 33322 ;; Hardware stack levels required when called:    4
 33323 ;; This function calls:
 33324 ;;		Nothing
 33325 ;; This function is called by:
 33326 ;;		_OsAlrm_ProcessOsAlarms
 33327 ;; This function uses a non-reentrant model
 33328 ;;
 33329                           
 33330                           	psect	text161
 33331  005D70                     __ptext161:
 33332                           	opt stack 0
 33333  005D70                     i1___wmul:
 33334                           	opt stack 10
 33335                           
 33336                           ;incstack = 0
 33337  005D70  5019               	movf	i1___wmul@multiplier,w,c
 33338  005D72  021B               	mulwf	i1___wmul@multiplicand,c
 33339  005D74  CFF3 F01D          	movff	prodl,i1___wmul@product
 33340  005D78  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 33341  005D7C  5019               	movf	i1___wmul@multiplier,w,c
 33342  005D7E  021C               	mulwf	i1___wmul@multiplicand+1,c
 33343  005D80  50F3               	movf	prodl,w,c
 33344  005D82  261E               	addwf	i1___wmul@product+1,f,c
 33345  005D84  501A               	movf	i1___wmul@multiplier+1,w,c
 33346  005D86  021B               	mulwf	i1___wmul@multiplicand,c
 33347  005D88  50F3               	movf	prodl,w,c
 33348  005D8A  261E               	addwf	i1___wmul@product+1,f,c
 33349  005D8C  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 33350  005D90  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 33351  005D94  0012               	return	
 33352  005D96                     __end_ofi1___wmul:
 33353                           	opt stack 0
 33354                           tosu	equ	0xFFF
 33355                           tosh	equ	0xFFE
 33356                           tosl	equ	0xFFD
 33357                           pclatu	equ	0xFFB
 33358                           pclath	equ	0xFFA
 33359                           tblptru	equ	0xFF8
 33360                           tblptrh	equ	0xFF7
 33361                           tblptrl	equ	0xFF6
 33362                           tablat	equ	0xFF5
 33363                           prodh	equ	0xFF4
 33364                           prodl	equ	0xFF3
 33365                           intcon	equ	0xFF2
 33366                           intcon2	equ	0xFF1
 33367                           intcon3	equ	0xFF0
 33368                           indf0	equ	0xFEF
 33369                           postinc0	equ	0xFEE
 33370                           plusw0	equ	0xFEB
 33371                           fsr0h	equ	0xFEA
 33372                           fsr0l	equ	0xFE9
 33373                           wreg	equ	0xFE8
 33374                           indf1	equ	0xFE7
 33375                           postinc1	equ	0xFE6
 33376                           postdec1	equ	0xFE5
 33377                           plusw1	equ	0xFE3
 33378                           fsr1h	equ	0xFE2
 33379                           fsr1l	equ	0xFE1
 33380                           bsr	equ	0xFE0
 33381                           indf2	equ	0xFDF
 33382                           postinc2	equ	0xFDE
 33383                           postdec2	equ	0xFDD
 33384                           plusw2	equ	0xFDB
 33385                           fsr2h	equ	0xFDA
 33386                           fsr2l	equ	0xFD9
 33387                           status	equ	0xFD8
 33388                           
 33389 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 33390 ;; Defined at:
 33391 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33392 ;; Parameters:    Size  Location     Type
 33393 ;;  OsAlarmId       1    wreg     unsigned char 
 33394 ;; Auto vars:     Size  Location     Type
 33395 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 33396 ;; Return value:  Size  Location     Type
 33397 ;;                  1    wreg      void 
 33398 ;; Registers used:
 33399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33400 ;; Tracked objects:
 33401 ;;		On entry : 0/0
 33402 ;;		On exit  : 0/0
 33403 ;;		Unchanged: 0/0
 33404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33409 ;;Total ram usage:        1 bytes
 33410 ;; Hardware stack levels used:    1
 33411 ;; Hardware stack levels required when called:    4
 33412 ;; This function calls:
 33413 ;;		Nothing
 33414 ;; This function is called by:
 33415 ;;		_OsAlrm_ProcessOsAlarms
 33416 ;; This function uses a non-reentrant model
 33417 ;;
 33418                           
 33419                           	psect	text162
 33420  005276                     __ptext162:
 33421                           	opt stack 0
 33422  005276                     _OsAlrm_ClearOsAlarm:
 33423                           	opt stack 10
 33424                           
 33425                           ;incstack = 0
 33426                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 33427  005276  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 33428                           
 33429                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 33430  005278  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33431  00527A  0D0B               	mullw	11
 33432  00527C  0E00               	movlw	low _OsAlarms
 33433  00527E  24F3               	addwf	prodl,w,c
 33434  005280  6ED9               	movwf	fsr2l,c
 33435  005282  0E06               	movlw	high _OsAlarms
 33436  005284  20F4               	addwfc	prodh,w,c
 33437  005286  6EDA               	movwf	fsr2h,c
 33438  005288  0E00               	movlw	0
 33439  00528A  6EDF               	movwf	indf2,c
 33440                           
 33441                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 33442  00528C  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33443  00528E  0D0B               	mullw	11
 33444  005290  0E01               	movlw	1
 33445  005292  26F3               	addwf	prodl,f,c
 33446  005294  0E00               	movlw	0
 33447  005296  22F4               	addwfc	prodh,f,c
 33448  005298  0E00               	movlw	low _OsAlarms
 33449  00529A  24F3               	addwf	prodl,w,c
 33450  00529C  6ED9               	movwf	fsr2l,c
 33451  00529E  0E06               	movlw	high _OsAlarms
 33452  0052A0  20F4               	addwfc	prodh,w,c
 33453  0052A2  6EDA               	movwf	fsr2h,c
 33454  0052A4  6ADE               	clrf	postinc2,c
 33455  0052A6  6ADE               	clrf	postinc2,c
 33456  0052A8  6ADE               	clrf	postinc2,c
 33457  0052AA  6ADD               	clrf	postdec2,c
 33458                           
 33459                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 33460  0052AC  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33461  0052AE  0D0B               	mullw	11
 33462  0052B0  0E05               	movlw	5
 33463  0052B2  26F3               	addwf	prodl,f,c
 33464  0052B4  0E00               	movlw	0
 33465  0052B6  22F4               	addwfc	prodh,f,c
 33466  0052B8  0E00               	movlw	low _OsAlarms
 33467  0052BA  24F3               	addwf	prodl,w,c
 33468  0052BC  6ED9               	movwf	fsr2l,c
 33469  0052BE  0E06               	movlw	high _OsAlarms
 33470  0052C0  20F4               	addwfc	prodh,w,c
 33471  0052C2  6EDA               	movwf	fsr2h,c
 33472  0052C4  6ADE               	clrf	postinc2,c
 33473  0052C6  6ADE               	clrf	postinc2,c
 33474  0052C8  6ADE               	clrf	postinc2,c
 33475  0052CA  6ADD               	clrf	postdec2,c
 33476  0052CC  0012               	return		;funcret
 33477  0052CE                     __end_of_OsAlrm_ClearOsAlarm:
 33478                           	opt stack 0
 33479                           tosu	equ	0xFFF
 33480                           tosh	equ	0xFFE
 33481                           tosl	equ	0xFFD
 33482                           pclatu	equ	0xFFB
 33483                           pclath	equ	0xFFA
 33484                           tblptru	equ	0xFF8
 33485                           tblptrh	equ	0xFF7
 33486                           tblptrl	equ	0xFF6
 33487                           tablat	equ	0xFF5
 33488                           prodh	equ	0xFF4
 33489                           prodl	equ	0xFF3
 33490                           intcon	equ	0xFF2
 33491                           intcon2	equ	0xFF1
 33492                           intcon3	equ	0xFF0
 33493                           indf0	equ	0xFEF
 33494                           postinc0	equ	0xFEE
 33495                           plusw0	equ	0xFEB
 33496                           fsr0h	equ	0xFEA
 33497                           fsr0l	equ	0xFE9
 33498                           wreg	equ	0xFE8
 33499                           indf1	equ	0xFE7
 33500                           postinc1	equ	0xFE6
 33501                           postdec1	equ	0xFE5
 33502                           plusw1	equ	0xFE3
 33503                           fsr1h	equ	0xFE2
 33504                           fsr1l	equ	0xFE1
 33505                           bsr	equ	0xFE0
 33506                           indf2	equ	0xFDF
 33507                           postinc2	equ	0xFDE
 33508                           postdec2	equ	0xFDD
 33509                           plusw2	equ	0xFDB
 33510                           fsr2h	equ	0xFDA
 33511                           fsr2l	equ	0xFD9
 33512                           status	equ	0xFD8
 33513                           
 33514 ;; *************** function _I2cDummyTx *****************
 33515 ;; Defined at:
 33516 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33517 ;; Parameters:    Size  Location     Type
 33518 ;;		None
 33519 ;; Auto vars:     Size  Location     Type
 33520 ;;		None
 33521 ;; Return value:  Size  Location     Type
 33522 ;;                  1    wreg      void 
 33523 ;; Registers used:
 33524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33525 ;; Tracked objects:
 33526 ;;		On entry : 0/0
 33527 ;;		On exit  : 0/0
 33528 ;;		Unchanged: 0/0
 33529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33534 ;;Total ram usage:        0 bytes
 33535 ;; Hardware stack levels used:    1
 33536 ;; Hardware stack levels required when called:    6
 33537 ;; This function calls:
 33538 ;;		i1_I2cSlv_SendI2cMsg
 33539 ;; This function is called by:
 33540 ;;		_I2cSlv_MainTask
 33541 ;;		_OsAlrm_ProcessOsAlarms
 33542 ;; This function uses a non-reentrant model
 33543 ;;
 33544                           
 33545                           	psect	text163
 33546  005F8C                     __ptext163:
 33547                           	opt stack 0
 33548  005F8C                     _I2cDummyTx:
 33549                           	opt stack 8
 33550                           
 33551                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 33552                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 33553                           
 33554                           ;incstack = 0
 33555  005F8C  0EFC               	movlw	low I2cDummyTx@DummyBuffer
 33556  005F8E  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 33557  005F90  0E01               	movlw	high I2cDummyTx@DummyBuffer
 33558  005F92  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 33559  005F94  0E00               	movlw	0
 33560  005F96  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 33561  005F98  0E01               	movlw	1
 33562  005F9A  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 33563  005F9C  EC52  F02D         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 33564                           
 33565                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 33566  005FA0  0E01               	movlw	1
 33567  005FA2  0101               	movlb	1	; () banked
 33568  005FA4  6FE3               	movwf	_I2cBusStatus& (0+255),b
 33569                           
 33570                           ; BSR set to: 1
 33571  005FA6  0012               	return		;funcret
 33572  005FA8                     __end_of_I2cDummyTx:
 33573                           	opt stack 0
 33574                           tosu	equ	0xFFF
 33575                           tosh	equ	0xFFE
 33576                           tosl	equ	0xFFD
 33577                           pclatu	equ	0xFFB
 33578                           pclath	equ	0xFFA
 33579                           tblptru	equ	0xFF8
 33580                           tblptrh	equ	0xFF7
 33581                           tblptrl	equ	0xFF6
 33582                           tablat	equ	0xFF5
 33583                           prodh	equ	0xFF4
 33584                           prodl	equ	0xFF3
 33585                           intcon	equ	0xFF2
 33586                           intcon2	equ	0xFF1
 33587                           intcon3	equ	0xFF0
 33588                           indf0	equ	0xFEF
 33589                           postinc0	equ	0xFEE
 33590                           plusw0	equ	0xFEB
 33591                           fsr0h	equ	0xFEA
 33592                           fsr0l	equ	0xFE9
 33593                           wreg	equ	0xFE8
 33594                           indf1	equ	0xFE7
 33595                           postinc1	equ	0xFE6
 33596                           postdec1	equ	0xFE5
 33597                           plusw1	equ	0xFE3
 33598                           fsr1h	equ	0xFE2
 33599                           fsr1l	equ	0xFE1
 33600                           bsr	equ	0xFE0
 33601                           indf2	equ	0xFDF
 33602                           postinc2	equ	0xFDE
 33603                           postdec2	equ	0xFDD
 33604                           plusw2	equ	0xFDB
 33605                           fsr2h	equ	0xFDA
 33606                           fsr2l	equ	0xFD9
 33607                           status	equ	0xFD8
 33608                           
 33609 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 33610 ;; Defined at:
 33611 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33612 ;; Parameters:    Size  Location     Type
 33613 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 33614 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 33615 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 33616 ;;  DataLenght      1   30[COMRAM] unsigned char 
 33617 ;; Auto vars:     Size  Location     Type
 33618 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 33619 ;; Return value:  Size  Location     Type
 33620 ;;                  1    wreg      unsigned char 
 33621 ;; Registers used:
 33622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33623 ;; Tracked objects:
 33624 ;;		On entry : 0/0
 33625 ;;		On exit  : 0/0
 33626 ;;		Unchanged: 0/0
 33627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33631 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33632 ;;Total ram usage:        5 bytes
 33633 ;; Hardware stack levels used:    1
 33634 ;; Hardware stack levels required when called:    5
 33635 ;; This function calls:
 33636 ;;		i1_GenerateEvt
 33637 ;; This function is called by:
 33638 ;;		_I2cDummyTx
 33639 ;; This function uses a non-reentrant model
 33640 ;;
 33641                           
 33642                           	psect	text164
 33643  005AA4                     __ptext164:
 33644                           	opt stack 0
 33645  005AA4                     i1_I2cSlv_SendI2cMsg:
 33646                           	opt stack 8
 33647                           
 33648                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 33649                           
 33650                           ; BSR set to: 1
 33651                           ;incstack = 0
 33652  005AA4  0E00               	movlw	0
 33653  005AA6  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33654                           
 33655                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 33656  005AA8  0100               	movlb	0	; () banked
 33657  005AAA  05D4               	decf	_I2cComSts& (0+255),w,b
 33658  005AAC  B4D8               	btfsc	status,2,c
 33659  005AAE  D014               	goto	i1l1397
 33660                           
 33661                           ; BSR set to: 0
 33662                           ;i2c_slv.c: 257: {
 33663                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 33664  005AB0  C01E  F39E         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 33665                           
 33666                           ; BSR set to: 0
 33667                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 33668  005AB4  0E00               	movlw	0
 33669  005AB6  0103               	movlb	3	; () banked
 33670  005AB8  6F9F               	movwf	(_I2cTxPacket+1)& (0+255),b
 33671                           
 33672                           ; BSR set to: 3
 33673                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 33674  005ABA  C01F  F3A2         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 33675                           
 33676                           ; BSR set to: 3
 33677                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 33678  005ABE  C01C  F3A0         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 33679  005AC2  C01D  F3A1         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 33680                           
 33681                           ; BSR set to: 3
 33682                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 33683  005AC6  0EDC               	movlw	low _I2cWriteDataEvt
 33684  005AC8  6E19               	movwf	i1GenerateEvt@Event,c
 33685  005ACA  0E00               	movlw	high _I2cWriteDataEvt
 33686  005ACC  6E1A               	movwf	i1GenerateEvt@Event+1,c
 33687  005ACE  EC34  F030         	call	i1_GenerateEvt	;wreg free
 33688                           
 33689                           ;i2c_slv.c: 267: TxSts = 1u;
 33690  005AD2  0E01               	movlw	1
 33691  005AD4  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33692                           
 33693                           ;i2c_slv.c: 268: }
 33694  005AD6  0012               	return	
 33695  005AD8                     i1l1397:
 33696                           
 33697                           ;i2c_slv.c: 269: else
 33698                           ;i2c_slv.c: 270: {
 33699                           ;i2c_slv.c: 272: TxSts = 0u;
 33700  005AD8  0E00               	movlw	0
 33701  005ADA  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33702  005ADC  0012               	return	
 33703  005ADE                     __end_ofi1_I2cSlv_SendI2cMsg:
 33704                           	opt stack 0
 33705                           tosu	equ	0xFFF
 33706                           tosh	equ	0xFFE
 33707                           tosl	equ	0xFFD
 33708                           pclatu	equ	0xFFB
 33709                           pclath	equ	0xFFA
 33710                           tblptru	equ	0xFF8
 33711                           tblptrh	equ	0xFF7
 33712                           tblptrl	equ	0xFF6
 33713                           tablat	equ	0xFF5
 33714                           prodh	equ	0xFF4
 33715                           prodl	equ	0xFF3
 33716                           intcon	equ	0xFF2
 33717                           intcon2	equ	0xFF1
 33718                           intcon3	equ	0xFF0
 33719                           indf0	equ	0xFEF
 33720                           postinc0	equ	0xFEE
 33721                           plusw0	equ	0xFEB
 33722                           fsr0h	equ	0xFEA
 33723                           fsr0l	equ	0xFE9
 33724                           wreg	equ	0xFE8
 33725                           indf1	equ	0xFE7
 33726                           postinc1	equ	0xFE6
 33727                           postdec1	equ	0xFE5
 33728                           plusw1	equ	0xFE3
 33729                           fsr1h	equ	0xFE2
 33730                           fsr1l	equ	0xFE1
 33731                           bsr	equ	0xFE0
 33732                           indf2	equ	0xFDF
 33733                           postinc2	equ	0xFDE
 33734                           postdec2	equ	0xFDD
 33735                           plusw2	equ	0xFDB
 33736                           fsr2h	equ	0xFDA
 33737                           fsr2l	equ	0xFD9
 33738                           status	equ	0xFD8
 33739                           
 33740 ;; *************** function i1_GenerateEvt *****************
 33741 ;; Defined at:
 33742 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33743 ;; Parameters:    Size  Location     Type
 33744 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 33745 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 33746 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 33747 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 33748 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 33749 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 33750 ;; Auto vars:     Size  Location     Type
 33751 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 33752 ;; Return value:  Size  Location     Type
 33753 ;;                  1    wreg      enum E7699
 33754 ;; Registers used:
 33755 ;;		wreg, fsr2l, fsr2h, status,2
 33756 ;; Tracked objects:
 33757 ;;		On entry : 0/0
 33758 ;;		On exit  : 0/0
 33759 ;;		Unchanged: 0/0
 33760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33764 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33765 ;;Total ram usage:        3 bytes
 33766 ;; Hardware stack levels used:    1
 33767 ;; Hardware stack levels required when called:    4
 33768 ;; This function calls:
 33769 ;;		Nothing
 33770 ;; This function is called by:
 33771 ;;		i1_I2cSlv_SendI2cMsg
 33772 ;; This function uses a non-reentrant model
 33773 ;;
 33774                           
 33775                           	psect	text165
 33776  006068                     __ptext165:
 33777                           	opt stack 0
 33778  006068                     i1_GenerateEvt:
 33779                           	opt stack 8
 33780                           
 33781                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 33782                           
 33783                           ;incstack = 0
 33784  006068  0E00               	movlw	0
 33785  00606A  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 33786                           
 33787                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 33788  00606C  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 33789  006070  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 33790  006074  0E02               	movlw	2
 33791  006076  6EDF               	movwf	indf2,c
 33792                           
 33793                           ;os_ser.c: 83: EventStatus = EventSent;
 33794  006078  0E02               	movlw	2
 33795  00607A  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 33796  00607C  0012               	return	
 33797  00607E                     __end_ofi1_GenerateEvt:
 33798                           	opt stack 0
 33799                           tosu	equ	0xFFF
 33800                           tosh	equ	0xFFE
 33801                           tosl	equ	0xFFD
 33802                           pclatu	equ	0xFFB
 33803                           pclath	equ	0xFFA
 33804                           tblptru	equ	0xFF8
 33805                           tblptrh	equ	0xFF7
 33806                           tblptrl	equ	0xFF6
 33807                           tablat	equ	0xFF5
 33808                           prodh	equ	0xFF4
 33809                           prodl	equ	0xFF3
 33810                           intcon	equ	0xFF2
 33811                           intcon2	equ	0xFF1
 33812                           intcon3	equ	0xFF0
 33813                           indf0	equ	0xFEF
 33814                           postinc0	equ	0xFEE
 33815                           plusw0	equ	0xFEB
 33816                           fsr0h	equ	0xFEA
 33817                           fsr0l	equ	0xFE9
 33818                           wreg	equ	0xFE8
 33819                           indf1	equ	0xFE7
 33820                           postinc1	equ	0xFE6
 33821                           postdec1	equ	0xFE5
 33822                           plusw1	equ	0xFE3
 33823                           fsr1h	equ	0xFE2
 33824                           fsr1l	equ	0xFE1
 33825                           bsr	equ	0xFE0
 33826                           indf2	equ	0xFDF
 33827                           postinc2	equ	0xFDE
 33828                           postdec2	equ	0xFDD
 33829                           plusw2	equ	0xFDB
 33830                           fsr2h	equ	0xFDA
 33831                           fsr2l	equ	0xFD9
 33832                           status	equ	0xFD8
 33833                           
 33834 ;; *************** function _HighPriorityIsr *****************
 33835 ;; Defined at:
 33836 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 33837 ;; Parameters:    Size  Location     Type
 33838 ;;		None
 33839 ;; Auto vars:     Size  Location     Type
 33840 ;;		None
 33841 ;; Return value:  Size  Location     Type
 33842 ;;                  1    wreg      void 
 33843 ;; Registers used:
 33844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33845 ;; Tracked objects:
 33846 ;;		On entry : 0/0
 33847 ;;		On exit  : 0/0
 33848 ;;		Unchanged: 0/0
 33849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33852 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33853 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33854 ;;Total ram usage:       18 bytes
 33855 ;; Hardware stack levels used:    1
 33856 ;; Hardware stack levels required when called:    3
 33857 ;; This function calls:
 33858 ;;		_Mcu_Int0Isr
 33859 ;;		_Mcu_Int1Isr
 33860 ;;		_Rtcc_RtcIsr
 33861 ;;		_Uart_Uart1RxIsr
 33862 ;; This function is called by:
 33863 ;;		Interrupt level 2
 33864 ;; This function uses a non-reentrant model
 33865 ;;
 33866                           
 33867                           	psect	intcode
 33868  000008                     __pintcode:
 33869                           	opt stack 0
 33870  000008                     _HighPriorityIsr:
 33871                           	opt stack 8
 33872                           
 33873                           ;incstack = 0
 33874  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 33875  00000A  EFAE  F020         	goto	int_func
 33876                           tosu	equ	0xFFF
 33877                           tosh	equ	0xFFE
 33878                           tosl	equ	0xFFD
 33879                           pclatu	equ	0xFFB
 33880                           pclath	equ	0xFFA
 33881                           tblptru	equ	0xFF8
 33882                           tblptrh	equ	0xFF7
 33883                           tblptrl	equ	0xFF6
 33884                           tablat	equ	0xFF5
 33885                           prodh	equ	0xFF4
 33886                           prodl	equ	0xFF3
 33887                           intcon	equ	0xFF2
 33888                           intcon2	equ	0xFF1
 33889                           intcon3	equ	0xFF0
 33890                           indf0	equ	0xFEF
 33891                           postinc0	equ	0xFEE
 33892                           plusw0	equ	0xFEB
 33893                           fsr0h	equ	0xFEA
 33894                           fsr0l	equ	0xFE9
 33895                           wreg	equ	0xFE8
 33896                           indf1	equ	0xFE7
 33897                           postinc1	equ	0xFE6
 33898                           postdec1	equ	0xFE5
 33899                           plusw1	equ	0xFE3
 33900                           fsr1h	equ	0xFE2
 33901                           fsr1l	equ	0xFE1
 33902                           bsr	equ	0xFE0
 33903                           indf2	equ	0xFDF
 33904                           postinc2	equ	0xFDE
 33905                           postdec2	equ	0xFDD
 33906                           plusw2	equ	0xFDB
 33907                           fsr2h	equ	0xFDA
 33908                           fsr2l	equ	0xFD9
 33909                           status	equ	0xFD8
 33910                           
 33911                           	psect	intcode_body
 33912  00415C                     __pintcode_body:
 33913                           	opt stack 8
 33914  00415C                     int_func:
 33915                           	opt stack 8
 33916  00415C  CFFA F007          	movff	pclath,??_HighPriorityIsr
 33917  004160  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 33918  004164  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 33919  004168  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 33920  00416C  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 33921  004170  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 33922  004174  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 33923  004178  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 33924  00417C  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 33925  004180  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 33926  004184  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 33927  004188  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 33928  00418C  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 33929  004190  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 33930  004194  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 33931  004198  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 33932  00419C  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 33933  0041A0  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 33934                           
 33935                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 33936  0041A4  B2F2               	btfsc	intcon,1,c	;volatile
 33937                           
 33938                           ;irq.c: 158: {
 33939                           ;irq.c: 160: Mcu_Int0Isr();
 33940  0041A6  ECD1  F030         	call	_Mcu_Int0Isr	;wreg free
 33941                           
 33942                           ;irq.c: 161: }
 33943                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 33944  0041AA  B0F0               	btfsc	intcon3,0,c	;volatile
 33945                           
 33946                           ;irq.c: 167: {
 33947                           ;irq.c: 169: Mcu_Int1Isr();
 33948  0041AC  ECCF  F030         	call	_Mcu_Int1Isr	;wreg free
 33949                           
 33950                           ;irq.c: 170: }
 33951                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 33952  0041B0  B0A4               	btfsc	4004,0,c	;volatile
 33953                           
 33954                           ;irq.c: 203: {
 33955                           ;irq.c: 205: Rtcc_RtcIsr();
 33956  0041B2  ECCD  F030         	call	_Rtcc_RtcIsr	;wreg free
 33957                           
 33958                           ;irq.c: 206: }
 33959                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 33960  0041B6  BA9E               	btfsc	3998,5,c	;volatile
 33961                           
 33962                           ;irq.c: 212: {
 33963                           ;irq.c: 214: Uart_Uart1RxIsr();
 33964  0041B8  EC86  F030         	call	_Uart_Uart1RxIsr	;wreg free
 33965  0041BC  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 33966  0041C0  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 33967  0041C4  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 33968  0041C8  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 33969  0041CC  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 33970  0041D0  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 33971  0041D4  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 33972  0041D8  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 33973  0041DC  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 33974  0041E0  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 33975  0041E4  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 33976  0041E8  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 33977  0041EC  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 33978  0041F0  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 33979  0041F4  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 33980  0041F8  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 33981  0041FC  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 33982  004200  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 33983  004204  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33984  004206  0011               	retfie		f
 33985  004208                     __end_of_HighPriorityIsr:
 33986                           	opt stack 0
 33987                           tosu	equ	0xFFF
 33988                           tosh	equ	0xFFE
 33989                           tosl	equ	0xFFD
 33990                           pclatu	equ	0xFFB
 33991                           pclath	equ	0xFFA
 33992                           tblptru	equ	0xFF8
 33993                           tblptrh	equ	0xFF7
 33994                           tblptrl	equ	0xFF6
 33995                           tablat	equ	0xFF5
 33996                           prodh	equ	0xFF4
 33997                           prodl	equ	0xFF3
 33998                           intcon	equ	0xFF2
 33999                           intcon2	equ	0xFF1
 34000                           intcon3	equ	0xFF0
 34001                           indf0	equ	0xFEF
 34002                           postinc0	equ	0xFEE
 34003                           plusw0	equ	0xFEB
 34004                           fsr0h	equ	0xFEA
 34005                           fsr0l	equ	0xFE9
 34006                           wreg	equ	0xFE8
 34007                           indf1	equ	0xFE7
 34008                           postinc1	equ	0xFE6
 34009                           postdec1	equ	0xFE5
 34010                           plusw1	equ	0xFE3
 34011                           fsr1h	equ	0xFE2
 34012                           fsr1l	equ	0xFE1
 34013                           bsr	equ	0xFE0
 34014                           indf2	equ	0xFDF
 34015                           postinc2	equ	0xFDE
 34016                           postdec2	equ	0xFDD
 34017                           plusw2	equ	0xFDB
 34018                           fsr2h	equ	0xFDA
 34019                           fsr2l	equ	0xFD9
 34020                           status	equ	0xFD8
 34021                           
 34022 ;; *************** function _Uart_Uart1RxIsr *****************
 34023 ;; Defined at:
 34024 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34025 ;; Parameters:    Size  Location     Type
 34026 ;;		None
 34027 ;; Auto vars:     Size  Location     Type
 34028 ;;		None
 34029 ;; Return value:  Size  Location     Type
 34030 ;;                  1    wreg      void 
 34031 ;; Registers used:
 34032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34033 ;; Tracked objects:
 34034 ;;		On entry : 0/0
 34035 ;;		On exit  : 0/0
 34036 ;;		Unchanged: 0/0
 34037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34042 ;;Total ram usage:        0 bytes
 34043 ;; Hardware stack levels used:    1
 34044 ;; Hardware stack levels required when called:    2
 34045 ;; This function calls:
 34046 ;;		_Uart_MdmGsmGprsReadService
 34047 ;; This function is called by:
 34048 ;;		_HighPriorityIsr
 34049 ;; This function uses a non-reentrant model
 34050 ;;
 34051                           
 34052                           	psect	text167
 34053  00610C                     __ptext167:
 34054                           	opt stack 0
 34055  00610C                     _Uart_Uart1RxIsr:
 34056                           	opt stack 8
 34057                           
 34058                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 34059                           ;uart_drv.c: 590: UartRxData = RCREG1;
 34060                           
 34061                           ;incstack = 0
 34062  00610C  CFAF F1F3          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 34063                           
 34064                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 34065  006110  C1F3  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 34066  006114  0E01               	movlw	1
 34067  006116  EC14  F01C         	call	_Uart_MdmGsmGprsReadService
 34068  00611A  0012               	return		;funcret
 34069  00611C                     __end_of_Uart_Uart1RxIsr:
 34070                           	opt stack 0
 34071                           tosu	equ	0xFFF
 34072                           tosh	equ	0xFFE
 34073                           tosl	equ	0xFFD
 34074                           pclatu	equ	0xFFB
 34075                           pclath	equ	0xFFA
 34076                           tblptru	equ	0xFF8
 34077                           tblptrh	equ	0xFF7
 34078                           tblptrl	equ	0xFF6
 34079                           tablat	equ	0xFF5
 34080                           prodh	equ	0xFF4
 34081                           prodl	equ	0xFF3
 34082                           intcon	equ	0xFF2
 34083                           intcon2	equ	0xFF1
 34084                           intcon3	equ	0xFF0
 34085                           indf0	equ	0xFEF
 34086                           postinc0	equ	0xFEE
 34087                           plusw0	equ	0xFEB
 34088                           fsr0h	equ	0xFEA
 34089                           fsr0l	equ	0xFE9
 34090                           wreg	equ	0xFE8
 34091                           indf1	equ	0xFE7
 34092                           postinc1	equ	0xFE6
 34093                           postdec1	equ	0xFE5
 34094                           plusw1	equ	0xFE3
 34095                           fsr1h	equ	0xFE2
 34096                           fsr1l	equ	0xFE1
 34097                           bsr	equ	0xFE0
 34098                           indf2	equ	0xFDF
 34099                           postinc2	equ	0xFDE
 34100                           postdec2	equ	0xFDD
 34101                           plusw2	equ	0xFDB
 34102                           fsr2h	equ	0xFDA
 34103                           fsr2l	equ	0xFD9
 34104                           status	equ	0xFD8
 34105                           
 34106 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 34107 ;; Defined at:
 34108 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34109 ;; Parameters:    Size  Location     Type
 34110 ;;  Module          1    wreg     unsigned char 
 34111 ;;  UartData        1    3[COMRAM] unsigned char 
 34112 ;; Auto vars:     Size  Location     Type
 34113 ;;  Module          1    0[COMRAM] unsigned char 
 34114 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 34115 ;; Return value:  Size  Location     Type
 34116 ;;                  1    wreg      void 
 34117 ;; Registers used:
 34118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34119 ;; Tracked objects:
 34120 ;;		On entry : 0/0
 34121 ;;		On exit  : 0/0
 34122 ;;		Unchanged: 0/0
 34123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34124 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34127 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34128 ;;Total ram usage:        3 bytes
 34129 ;; Hardware stack levels used:    1
 34130 ;; Hardware stack levels required when called:    1
 34131 ;; This function calls:
 34132 ;;		i2_GenerateEvt
 34133 ;; This function is called by:
 34134 ;;		_Uart_Uart1RxIsr
 34135 ;; This function uses a non-reentrant model
 34136 ;;
 34137                           
 34138                           	psect	text168
 34139  003828                     __ptext168:
 34140                           	opt stack 0
 34141  003828                     _Uart_MdmGsmGprsReadService:
 34142                           	opt stack 8
 34143                           
 34144                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 34145                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 34146                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 34147                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 34148                           
 34149                           ;incstack = 0
 34150  003828  0E00               	movlw	0
 34151  00382A  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 34152  00382C  0E00               	movlw	0
 34153  00382E  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 34154                           
 34155                           ;uart_drv.c: 383: switch (RxState)
 34156  003830  D05A               	goto	i2l680
 34157  003832                     
 34158                           ;uart_drv.c: 387: if (UartData == '\r')
 34159  003832  0E0D               	movlw	13
 34160  003834  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 34161  003836  A4D8               	btfss	status,2,c
 34162  003838  D004               	goto	i2l682
 34163                           
 34164                           ;uart_drv.c: 388: {
 34165                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 34166  00383A  0E01               	movlw	1
 34167  00383C  0101               	movlb	1	; () banked
 34168  00383E  6FF4               	movwf	Uart_MdmGsmGprsReadService@RxState& (0+255),b
 34169                           
 34170                           ;uart_drv.c: 391: }
 34171  003840  0012               	return	
 34172  003842                     i2l682:
 34173                           
 34174                           ;uart_drv.c: 392: else
 34175                           ;uart_drv.c: 393: {
 34176                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 34177                           
 34178                           ; BSR set to: 1
 34179  003842  0E90               	movlw	144
 34180  003844  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34181  003846  0E01               	movlw	1
 34182  003848  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34183  00384A  B0D8               	btfsc	status,0,c
 34184  00384C  0012               	return	
 34185                           
 34186                           ;uart_drv.c: 395: {
 34187                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 34188  00384E  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 34189  003850  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34190  003852  6ED9               	movwf	fsr2l,c
 34191  003854  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 34192  003856  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34193  003858  6EDA               	movwf	fsr2h,c
 34194  00385A  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 34195                           
 34196                           ;uart_drv.c: 399: RxCounter++;
 34197  00385E  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 34198  003860  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 34199                           
 34200                           ;uart_drv.c: 400: }
 34201                           ;uart_drv.c: 401: }
 34202                           ;uart_drv.c: 402: break;
 34203  003862  0012               	return	
 34204  003864                     
 34205                           ;uart_drv.c: 406: if (UartData == '\n')
 34206  003864  0E0A               	movlw	10
 34207  003866  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 34208  003868  A4D8               	btfss	status,2,c
 34209  00386A  D035               	goto	i2l688
 34210                           
 34211                           ;uart_drv.c: 407: {
 34212                           ;uart_drv.c: 409: if (RxCounter > 0)
 34213  00386C  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34214  00386E  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34215  003870  B4D8               	btfsc	status,2,c
 34216  003872  D031               	goto	i2l688
 34217                           
 34218                           ;uart_drv.c: 410: {
 34219                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 34220  003874  0E00               	movlw	0
 34221  003876  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 34222  003878  0E00               	movlw	0
 34223  00387A  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 34224  00387C  D010               	goto	i2l689
 34225  00387E                     
 34226                           ;uart_drv.c: 413: {
 34227                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 34228  00387E  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 34229  003880  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34230  003882  6ED9               	movwf	fsr2l,c
 34231  003884  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 34232  003886  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34233  003888  6EDA               	movwf	fsr2h,c
 34234  00388A  0E58               	movlw	low _RxBuffer
 34235  00388C  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34236  00388E  6EE1               	movwf	fsr1l,c
 34237  003890  0E0C               	movlw	high _RxBuffer
 34238  003892  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34239  003894  6EE2               	movwf	fsr1h,c
 34240  003896  CFDF FFE7          	movff	indf2,indf1
 34241  00389A  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 34242  00389C  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 34243  00389E                     i2l689:
 34244  00389E  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34245  0038A0  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34246  0038A2  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34247  0038A4  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34248  0038A6  A0D8               	btfss	status,0,c
 34249  0038A8  D7EA               	goto	i2l690
 34250                           
 34251                           ;uart_drv.c: 415: }
 34252                           ;uart_drv.c: 417: RxLen = RxCounter;
 34253  0038AA  C023  F0CA         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 34254  0038AE  C024  F0CB         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 34255                           
 34256                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 34257  0038B2  0E3C               	movlw	low _NewStringReceived
 34258  0038B4  6E01               	movwf	i2GenerateEvt@Event,c
 34259  0038B6  0E00               	movlw	high _NewStringReceived
 34260  0038B8  6E02               	movwf	i2GenerateEvt@Event+1,c
 34261  0038BA  EC3F  F030         	call	i2_GenerateEvt	;wreg free
 34262                           
 34263                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 34264  0038BE  0E3B               	movlw	low _NewMdmEvtParserRequest
 34265  0038C0  6E01               	movwf	i2GenerateEvt@Event,c
 34266  0038C2  0E00               	movlw	high _NewMdmEvtParserRequest
 34267  0038C4  6E02               	movwf	i2GenerateEvt@Event+1,c
 34268  0038C6  EC3F  F030         	call	i2_GenerateEvt	;wreg free
 34269                           
 34270                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 34271  0038CA  0E3A               	movlw	low _NewStringMdmTerminal
 34272  0038CC  6E01               	movwf	i2GenerateEvt@Event,c
 34273  0038CE  0E00               	movlw	high _NewStringMdmTerminal
 34274  0038D0  6E02               	movwf	i2GenerateEvt@Event+1,c
 34275  0038D2  EC3F  F030         	call	i2_GenerateEvt	;wreg free
 34276  0038D6                     i2l688:
 34277                           
 34278                           ;uart_drv.c: 427: }
 34279                           ;uart_drv.c: 429: RxState = ReadData;
 34280                           
 34281                           ;uart_drv.c: 424: else
 34282                           ;uart_drv.c: 425: {
 34283                           
 34284                           ;uart_drv.c: 422: }
 34285                           ;uart_drv.c: 423: }
 34286  0038D6  0E00               	movlw	0
 34287  0038D8  0101               	movlb	1	; () banked
 34288  0038DA  6FF4               	movwf	Uart_MdmGsmGprsReadService@RxState& (0+255),b
 34289                           
 34290                           ;uart_drv.c: 431: RxCounter = 0;
 34291  0038DC  0E00               	movlw	0
 34292  0038DE  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 34293  0038E0  0E00               	movlw	0
 34294  0038E2  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 34295                           
 34296                           ; BSR set to: 1
 34297                           ;uart_drv.c: 436: }
 34298                           
 34299                           ; BSR set to: 1
 34300                           ;uart_drv.c: 435: break;
 34301                           
 34302                           ;uart_drv.c: 434: default:
 34303                           
 34304                           ;uart_drv.c: 432: break;
 34305  0038E4  0012               	return	
 34306  0038E6                     i2l680:
 34307                           
 34308                           ; BSR set to: 1
 34309  0038E6  0101               	movlb	1	; () banked
 34310  0038E8  51F4               	movf	Uart_MdmGsmGprsReadService@RxState& (0+255),w,b
 34311                           
 34312                           ; Switch size 1, requested type "space"
 34313                           ; Number of cases is 2, Range of values is 0 to 1
 34314                           ; switch strategies available:
 34315                           ; Name         Instructions Cycles
 34316                           ; simple_byte            7     4 (average)
 34317                           ;	Chosen strategy is simple_byte
 34318  0038EA  0A00               	xorlw	0	; case 0
 34319  0038EC  B4D8               	btfsc	status,2,c
 34320  0038EE  D7A1               	goto	i2l681
 34321  0038F0  0A01               	xorlw	1	; case 1
 34322  0038F2  A4D8               	btfss	status,2,c
 34323  0038F4  0012               	return	
 34324  0038F6  D7B6               	goto	i2l686
 34325  0038F8                     __end_of_Uart_MdmGsmGprsReadService:
 34326                           	opt stack 0
 34327                           tosu	equ	0xFFF
 34328                           tosh	equ	0xFFE
 34329                           tosl	equ	0xFFD
 34330                           pclatu	equ	0xFFB
 34331                           pclath	equ	0xFFA
 34332                           tblptru	equ	0xFF8
 34333                           tblptrh	equ	0xFF7
 34334                           tblptrl	equ	0xFF6
 34335                           tablat	equ	0xFF5
 34336                           prodh	equ	0xFF4
 34337                           prodl	equ	0xFF3
 34338                           intcon	equ	0xFF2
 34339                           intcon2	equ	0xFF1
 34340                           intcon3	equ	0xFF0
 34341                           indf0	equ	0xFEF
 34342                           postinc0	equ	0xFEE
 34343                           plusw0	equ	0xFEB
 34344                           fsr0h	equ	0xFEA
 34345                           fsr0l	equ	0xFE9
 34346                           wreg	equ	0xFE8
 34347                           indf1	equ	0xFE7
 34348                           postinc1	equ	0xFE6
 34349                           postdec1	equ	0xFE5
 34350                           plusw1	equ	0xFE3
 34351                           fsr1h	equ	0xFE2
 34352                           fsr1l	equ	0xFE1
 34353                           bsr	equ	0xFE0
 34354                           indf2	equ	0xFDF
 34355                           postinc2	equ	0xFDE
 34356                           postdec2	equ	0xFDD
 34357                           plusw2	equ	0xFDB
 34358                           fsr2h	equ	0xFDA
 34359                           fsr2l	equ	0xFD9
 34360                           status	equ	0xFD8
 34361                           
 34362 ;; *************** function i2_GenerateEvt *****************
 34363 ;; Defined at:
 34364 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34365 ;; Parameters:    Size  Location     Type
 34366 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 34367 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34368 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34369 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 34370 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 34371 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34372 ;; Auto vars:     Size  Location     Type
 34373 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 34374 ;; Return value:  Size  Location     Type
 34375 ;;                  1    wreg      enum E7699
 34376 ;; Registers used:
 34377 ;;		wreg, fsr2l, fsr2h, status,2
 34378 ;; Tracked objects:
 34379 ;;		On entry : 0/0
 34380 ;;		On exit  : 0/0
 34381 ;;		Unchanged: 0/0
 34382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34386 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34387 ;;Total ram usage:        3 bytes
 34388 ;; Hardware stack levels used:    1
 34389 ;; This function calls:
 34390 ;;		Nothing
 34391 ;; This function is called by:
 34392 ;;		_Uart_MdmGsmGprsReadService
 34393 ;; This function uses a non-reentrant model
 34394 ;;
 34395                           
 34396                           	psect	text169
 34397  00607E                     __ptext169:
 34398                           	opt stack 0
 34399  00607E                     i2_GenerateEvt:
 34400                           	opt stack 8
 34401                           
 34402                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34403                           
 34404                           ;incstack = 0
 34405  00607E  0E00               	movlw	0
 34406  006080  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34407                           
 34408                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34409  006082  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 34410  006086  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 34411  00608A  0E02               	movlw	2
 34412  00608C  6EDF               	movwf	indf2,c
 34413                           
 34414                           ;os_ser.c: 83: EventStatus = EventSent;
 34415  00608E  0E02               	movlw	2
 34416  006090  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34417  006092  0012               	return	
 34418  006094                     __end_ofi2_GenerateEvt:
 34419                           	opt stack 0
 34420                           tosu	equ	0xFFF
 34421                           tosh	equ	0xFFE
 34422                           tosl	equ	0xFFD
 34423                           pclatu	equ	0xFFB
 34424                           pclath	equ	0xFFA
 34425                           tblptru	equ	0xFF8
 34426                           tblptrh	equ	0xFF7
 34427                           tblptrl	equ	0xFF6
 34428                           tablat	equ	0xFF5
 34429                           prodh	equ	0xFF4
 34430                           prodl	equ	0xFF3
 34431                           intcon	equ	0xFF2
 34432                           intcon2	equ	0xFF1
 34433                           intcon3	equ	0xFF0
 34434                           indf0	equ	0xFEF
 34435                           postinc0	equ	0xFEE
 34436                           plusw0	equ	0xFEB
 34437                           fsr0h	equ	0xFEA
 34438                           fsr0l	equ	0xFE9
 34439                           wreg	equ	0xFE8
 34440                           indf1	equ	0xFE7
 34441                           postinc1	equ	0xFE6
 34442                           postdec1	equ	0xFE5
 34443                           plusw1	equ	0xFE3
 34444                           fsr1h	equ	0xFE2
 34445                           fsr1l	equ	0xFE1
 34446                           bsr	equ	0xFE0
 34447                           indf2	equ	0xFDF
 34448                           postinc2	equ	0xFDE
 34449                           postdec2	equ	0xFDD
 34450                           plusw2	equ	0xFDB
 34451                           fsr2h	equ	0xFDA
 34452                           fsr2l	equ	0xFD9
 34453                           status	equ	0xFD8
 34454                           
 34455 ;; *************** function _Rtcc_RtcIsr *****************
 34456 ;; Defined at:
 34457 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 34458 ;; Parameters:    Size  Location     Type
 34459 ;;		None
 34460 ;; Auto vars:     Size  Location     Type
 34461 ;;		None
 34462 ;; Return value:  Size  Location     Type
 34463 ;;                  1    wreg      void 
 34464 ;; Registers used:
 34465 ;;		wreg, status,2, status,0
 34466 ;; Tracked objects:
 34467 ;;		On entry : 0/0
 34468 ;;		On exit  : 0/0
 34469 ;;		Unchanged: 0/0
 34470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34475 ;;Total ram usage:        0 bytes
 34476 ;; Hardware stack levels used:    1
 34477 ;; This function calls:
 34478 ;;		Nothing
 34479 ;; This function is called by:
 34480 ;;		_HighPriorityIsr
 34481 ;; This function uses a non-reentrant model
 34482 ;;
 34483                           
 34484                           	psect	text170
 34485  00619A                     __ptext170:
 34486                           	opt stack 0
 34487  00619A                     _Rtcc_RtcIsr:
 34488                           	opt stack 10
 34489                           
 34490                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 34491                           
 34492                           ;incstack = 0
 34493  00619A  90A4               	bcf	4004,0,c	;volatile
 34494  00619C  0012               	return	
 34495  00619E                     __end_of_Rtcc_RtcIsr:
 34496                           	opt stack 0
 34497                           tosu	equ	0xFFF
 34498                           tosh	equ	0xFFE
 34499                           tosl	equ	0xFFD
 34500                           pclatu	equ	0xFFB
 34501                           pclath	equ	0xFFA
 34502                           tblptru	equ	0xFF8
 34503                           tblptrh	equ	0xFF7
 34504                           tblptrl	equ	0xFF6
 34505                           tablat	equ	0xFF5
 34506                           prodh	equ	0xFF4
 34507                           prodl	equ	0xFF3
 34508                           intcon	equ	0xFF2
 34509                           intcon2	equ	0xFF1
 34510                           intcon3	equ	0xFF0
 34511                           indf0	equ	0xFEF
 34512                           postinc0	equ	0xFEE
 34513                           plusw0	equ	0xFEB
 34514                           fsr0h	equ	0xFEA
 34515                           fsr0l	equ	0xFE9
 34516                           wreg	equ	0xFE8
 34517                           indf1	equ	0xFE7
 34518                           postinc1	equ	0xFE6
 34519                           postdec1	equ	0xFE5
 34520                           plusw1	equ	0xFE3
 34521                           fsr1h	equ	0xFE2
 34522                           fsr1l	equ	0xFE1
 34523                           bsr	equ	0xFE0
 34524                           indf2	equ	0xFDF
 34525                           postinc2	equ	0xFDE
 34526                           postdec2	equ	0xFDD
 34527                           plusw2	equ	0xFDB
 34528                           fsr2h	equ	0xFDA
 34529                           fsr2l	equ	0xFD9
 34530                           status	equ	0xFD8
 34531                           
 34532 ;; *************** function _Mcu_Int1Isr *****************
 34533 ;; Defined at:
 34534 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 34535 ;; Parameters:    Size  Location     Type
 34536 ;;		None
 34537 ;; Auto vars:     Size  Location     Type
 34538 ;;		None
 34539 ;; Return value:  Size  Location     Type
 34540 ;;                  1    wreg      void 
 34541 ;; Registers used:
 34542 ;;		wreg, status,2, status,0
 34543 ;; Tracked objects:
 34544 ;;		On entry : 0/0
 34545 ;;		On exit  : 0/0
 34546 ;;		Unchanged: 0/0
 34547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34552 ;;Total ram usage:        0 bytes
 34553 ;; Hardware stack levels used:    1
 34554 ;; This function calls:
 34555 ;;		Nothing
 34556 ;; This function is called by:
 34557 ;;		_HighPriorityIsr
 34558 ;; This function uses a non-reentrant model
 34559 ;;
 34560                           
 34561                           	psect	text171
 34562  00619E                     __ptext171:
 34563                           	opt stack 0
 34564  00619E                     _Mcu_Int1Isr:
 34565                           	opt stack 10
 34566                           
 34567                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 34568                           
 34569                           ;incstack = 0
 34570  00619E  90F0               	bcf	intcon3,0,c	;volatile
 34571  0061A0  0012               	return	
 34572  0061A2                     __end_of_Mcu_Int1Isr:
 34573                           	opt stack 0
 34574                           tosu	equ	0xFFF
 34575                           tosh	equ	0xFFE
 34576                           tosl	equ	0xFFD
 34577                           pclatu	equ	0xFFB
 34578                           pclath	equ	0xFFA
 34579                           tblptru	equ	0xFF8
 34580                           tblptrh	equ	0xFF7
 34581                           tblptrl	equ	0xFF6
 34582                           tablat	equ	0xFF5
 34583                           prodh	equ	0xFF4
 34584                           prodl	equ	0xFF3
 34585                           intcon	equ	0xFF2
 34586                           intcon2	equ	0xFF1
 34587                           intcon3	equ	0xFF0
 34588                           indf0	equ	0xFEF
 34589                           postinc0	equ	0xFEE
 34590                           plusw0	equ	0xFEB
 34591                           fsr0h	equ	0xFEA
 34592                           fsr0l	equ	0xFE9
 34593                           wreg	equ	0xFE8
 34594                           indf1	equ	0xFE7
 34595                           postinc1	equ	0xFE6
 34596                           postdec1	equ	0xFE5
 34597                           plusw1	equ	0xFE3
 34598                           fsr1h	equ	0xFE2
 34599                           fsr1l	equ	0xFE1
 34600                           bsr	equ	0xFE0
 34601                           indf2	equ	0xFDF
 34602                           postinc2	equ	0xFDE
 34603                           postdec2	equ	0xFDD
 34604                           plusw2	equ	0xFDB
 34605                           fsr2h	equ	0xFDA
 34606                           fsr2l	equ	0xFD9
 34607                           status	equ	0xFD8
 34608                           
 34609 ;; *************** function _Mcu_Int0Isr *****************
 34610 ;; Defined at:
 34611 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 34612 ;; Parameters:    Size  Location     Type
 34613 ;;		None
 34614 ;; Auto vars:     Size  Location     Type
 34615 ;;		None
 34616 ;; Return value:  Size  Location     Type
 34617 ;;                  1    wreg      void 
 34618 ;; Registers used:
 34619 ;;		wreg, status,2, status,0
 34620 ;; Tracked objects:
 34621 ;;		On entry : 0/0
 34622 ;;		On exit  : 0/0
 34623 ;;		Unchanged: 0/0
 34624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34629 ;;Total ram usage:        0 bytes
 34630 ;; Hardware stack levels used:    1
 34631 ;; This function calls:
 34632 ;;		Nothing
 34633 ;; This function is called by:
 34634 ;;		_HighPriorityIsr
 34635 ;; This function uses a non-reentrant model
 34636 ;;
 34637                           
 34638                           	psect	text172
 34639  0061A2                     __ptext172:
 34640                           	opt stack 0
 34641  0061A2                     _Mcu_Int0Isr:
 34642                           	opt stack 10
 34643                           
 34644                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 34645                           
 34646                           ;incstack = 0
 34647  0061A2  92F2               	bcf	intcon,1,c	;volatile
 34648  0061A4  0012               	return	
 34649  0061A6                     __end_of_Mcu_Int0Isr:
 34650                           	opt stack 0
 34651                           tosu	equ	0xFFF
 34652                           tosh	equ	0xFFE
 34653                           tosl	equ	0xFFD
 34654                           pclatu	equ	0xFFB
 34655                           pclath	equ	0xFFA
 34656                           tblptru	equ	0xFF8
 34657                           tblptrh	equ	0xFF7
 34658                           tblptrl	equ	0xFF6
 34659                           tablat	equ	0xFF5
 34660                           prodh	equ	0xFF4
 34661                           prodl	equ	0xFF3
 34662                           intcon	equ	0xFF2
 34663                           intcon2	equ	0xFF1
 34664                           intcon3	equ	0xFF0
 34665                           indf0	equ	0xFEF
 34666                           postinc0	equ	0xFEE
 34667                           plusw0	equ	0xFEB
 34668                           fsr0h	equ	0xFEA
 34669                           fsr0l	equ	0xFE9
 34670                           wreg	equ	0xFE8
 34671                           indf1	equ	0xFE7
 34672                           postinc1	equ	0xFE6
 34673                           postdec1	equ	0xFE5
 34674                           plusw1	equ	0xFE3
 34675                           fsr1h	equ	0xFE2
 34676                           fsr1l	equ	0xFE1
 34677                           bsr	equ	0xFE0
 34678                           indf2	equ	0xFDF
 34679                           postinc2	equ	0xFDE
 34680                           postdec2	equ	0xFDD
 34681                           plusw2	equ	0xFDB
 34682                           fsr2h	equ	0xFDA
 34683                           fsr2l	equ	0xFD9
 34684                           status	equ	0xFD8
 34685                           tosu	equ	0xFFF
 34686                           tosh	equ	0xFFE
 34687                           tosl	equ	0xFFD
 34688                           pclatu	equ	0xFFB
 34689                           pclath	equ	0xFFA
 34690                           tblptru	equ	0xFF8
 34691                           tblptrh	equ	0xFF7
 34692                           tblptrl	equ	0xFF6
 34693                           tablat	equ	0xFF5
 34694                           prodh	equ	0xFF4
 34695                           prodl	equ	0xFF3
 34696                           intcon	equ	0xFF2
 34697                           intcon2	equ	0xFF1
 34698                           intcon3	equ	0xFF0
 34699                           indf0	equ	0xFEF
 34700                           postinc0	equ	0xFEE
 34701                           plusw0	equ	0xFEB
 34702                           fsr0h	equ	0xFEA
 34703                           fsr0l	equ	0xFE9
 34704                           wreg	equ	0xFE8
 34705                           indf1	equ	0xFE7
 34706                           postinc1	equ	0xFE6
 34707                           postdec1	equ	0xFE5
 34708                           plusw1	equ	0xFE3
 34709                           fsr1h	equ	0xFE2
 34710                           fsr1l	equ	0xFE1
 34711                           bsr	equ	0xFE0
 34712                           indf2	equ	0xFDF
 34713                           postinc2	equ	0xFDE
 34714                           postdec2	equ	0xFDD
 34715                           plusw2	equ	0xFDB
 34716                           fsr2h	equ	0xFDA
 34717                           fsr2l	equ	0xFD9
 34718                           status	equ	0xFD8
 34719                           
 34720                           	psect	text173
 34721  000000                     __ptext173:
 34722                           	opt stack 0
 34723                           tosu	equ	0xFFF
 34724                           tosh	equ	0xFFE
 34725                           tosl	equ	0xFFD
 34726                           pclatu	equ	0xFFB
 34727                           pclath	equ	0xFFA
 34728                           tblptru	equ	0xFF8
 34729                           tblptrh	equ	0xFF7
 34730                           tblptrl	equ	0xFF6
 34731                           tablat	equ	0xFF5
 34732                           prodh	equ	0xFF4
 34733                           prodl	equ	0xFF3
 34734                           intcon	equ	0xFF2
 34735                           intcon2	equ	0xFF1
 34736                           intcon3	equ	0xFF0
 34737                           indf0	equ	0xFEF
 34738                           postinc0	equ	0xFEE
 34739                           plusw0	equ	0xFEB
 34740                           fsr0h	equ	0xFEA
 34741                           fsr0l	equ	0xFE9
 34742                           wreg	equ	0xFE8
 34743                           indf1	equ	0xFE7
 34744                           postinc1	equ	0xFE6
 34745                           postdec1	equ	0xFE5
 34746                           plusw1	equ	0xFE3
 34747                           fsr1h	equ	0xFE2
 34748                           fsr1l	equ	0xFE1
 34749                           bsr	equ	0xFE0
 34750                           indf2	equ	0xFDF
 34751                           postinc2	equ	0xFDE
 34752                           postdec2	equ	0xFDD
 34753                           plusw2	equ	0xFDB
 34754                           fsr2h	equ	0xFDA
 34755                           fsr2l	equ	0xFD9
 34756                           status	equ	0xFD8
 34757                           
 34758                           	psect	rparam
 34759  0000                     tosu	equ	0xFFF
 34760                           tosh	equ	0xFFE
 34761                           tosl	equ	0xFFD
 34762                           pclatu	equ	0xFFB
 34763                           pclath	equ	0xFFA
 34764                           tblptru	equ	0xFF8
 34765                           tblptrh	equ	0xFF7
 34766                           tblptrl	equ	0xFF6
 34767                           tablat	equ	0xFF5
 34768                           prodh	equ	0xFF4
 34769                           prodl	equ	0xFF3
 34770                           intcon	equ	0xFF2
 34771                           intcon2	equ	0xFF1
 34772                           intcon3	equ	0xFF0
 34773                           indf0	equ	0xFEF
 34774                           postinc0	equ	0xFEE
 34775                           plusw0	equ	0xFEB
 34776                           fsr0h	equ	0xFEA
 34777                           fsr0l	equ	0xFE9
 34778                           wreg	equ	0xFE8
 34779                           indf1	equ	0xFE7
 34780                           postinc1	equ	0xFE6
 34781                           postdec1	equ	0xFE5
 34782                           plusw1	equ	0xFE3
 34783                           fsr1h	equ	0xFE2
 34784                           fsr1l	equ	0xFE1
 34785                           bsr	equ	0xFE0
 34786                           indf2	equ	0xFDF
 34787                           postinc2	equ	0xFDE
 34788                           postdec2	equ	0xFDD
 34789                           plusw2	equ	0xFDB
 34790                           fsr2h	equ	0xFDA
 34791                           fsr2l	equ	0xFD9
 34792                           status	equ	0xFD8
 34793                           
 34794                           	psect	temp
 34795  000042                     btemp:
 34796                           	opt stack 0
 34797  000042                     	ds	1
 34798  0000                     int$flags	set	btemp
 34799  0000                     wtemp6	set	btemp+1
 34800                           tosu	equ	0xFFF
 34801                           tosh	equ	0xFFE
 34802                           tosl	equ	0xFFD
 34803                           pclatu	equ	0xFFB
 34804                           pclath	equ	0xFFA
 34805                           tblptru	equ	0xFF8
 34806                           tblptrh	equ	0xFF7
 34807                           tblptrl	equ	0xFF6
 34808                           tablat	equ	0xFF5
 34809                           prodh	equ	0xFF4
 34810                           prodl	equ	0xFF3
 34811                           intcon	equ	0xFF2
 34812                           intcon2	equ	0xFF1
 34813                           intcon3	equ	0xFF0
 34814                           indf0	equ	0xFEF
 34815                           postinc0	equ	0xFEE
 34816                           plusw0	equ	0xFEB
 34817                           fsr0h	equ	0xFEA
 34818                           fsr0l	equ	0xFE9
 34819                           wreg	equ	0xFE8
 34820                           indf1	equ	0xFE7
 34821                           postinc1	equ	0xFE6
 34822                           postdec1	equ	0xFE5
 34823                           plusw1	equ	0xFE3
 34824                           fsr1h	equ	0xFE2
 34825                           fsr1l	equ	0xFE1
 34826                           bsr	equ	0xFE0
 34827                           indf2	equ	0xFDF
 34828                           postinc2	equ	0xFDE
 34829                           postdec2	equ	0xFDD
 34830                           plusw2	equ	0xFDB
 34831                           fsr2h	equ	0xFDA
 34832                           fsr2l	equ	0xFD9
 34833                           status	equ	0xFD8


Data Sizes:
    Strings     396
    Constant    567
    Data        184
    BSS         2326
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     88     129
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      0     252
    BANK4           192      0     185
    BANK5           256      0     224
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK0[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK5[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    blinkForSeconds@blickTicks	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blickTicks(BANK3[2]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blickTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK5[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> MyApp_Task@smsNumber(BANK1[14]), MyApp_Task@smsText(BANK1[50]), GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[132]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK7[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[132]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> MyApp_Task@smsNumber(BANK1[14]), MyApp_Task@smsText(BANK1[50]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> MessageText(BANK7[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[132]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> MyApp_Task@cmpString(BANK1[3]), MyApp_Task@phone(BANK1[13]), RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@smsNumber(BANK1[14]), MyApp_Task@smsText(BANK1[50]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8935 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK4[50]), Terminal@Payload(BANK5[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4604$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4604$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4604$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4604$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3057$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3047$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3047$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3023$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3023$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3023$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3023$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2524_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2524_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    Mdm_GetSmsData@MessageHeader	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@smsNumber(BANK1[14]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@smsText(BANK1[50]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK1[1]), 
		 -> InitNetwork(COMRAM[1]), SmsTxtReady(COMRAM[1]), GetSmsText(COMRAM[1]), SmsEvent(BANK0[1]), 
		 -> RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), 
		 -> NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK1[1]), InitNetwork(COMRAM[1]), MdmStsReady(BANK1[1]), SmsTxtReady(COMRAM[1]), 
		 -> GetSmsText(COMRAM[1]), SmsEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), 
		 -> NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_30(CODE[14]), STR_29(CODE[19]), STR_20(CODE[14]), STR_19(CODE[14]), 
		 -> STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), STR_14(CODE[21]), 
		 -> STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), STR_10(CODE[14]), 
		 -> STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), STR_4(CODE[12]), 
		 -> STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_ScheduleTasks
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _initGprsModem->_Mdm_SetSmsFormat
    _Mdm_SetSmsFormat->_Uart_WriteString
    _blinkForSeconds->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_GetSmsData->_StringCopy
    _Mdm_MainTask->_Uart_InitUartModule
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainSm->_Terminal
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  594394
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4410
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4032
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    3786
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2368
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  589984
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  295085
                                             83 BANK0      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  294899
                                             83 BANK0      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      22
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   50664
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   46532
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    1900
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   26819
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     410
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   26180
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   20173
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    7743
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      46
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6469
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5915
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2764
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     733
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     400
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     114
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     115
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0      92
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   57663
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   57663
                                             71 BANK0     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     268
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1166
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     430
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    1698
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41208
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3295
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2752
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    7334
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    6426
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    6177
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2610
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2614
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     488
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     321
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     221
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     177
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          87    87      0   49971
                                              0 BANK1     86    86      0
                        _ClearBuffer
                _Led_SetLedBlinkTime
                     _Mdm_GetSmsData
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
              _Uart_WriteConstString
                    _blinkForSeconds
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (4) _initGprsModem                                        0     0      0   16081
                   _Led_SetLedStatus
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _blinkForSeconds                                      3     1      2   11928
                                             51 BANK0      3     1      2
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   10910
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2019
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsRinging                                        1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_GetSmsData                                       5     1      4    6875
                                             39 BANK0      5     1      4
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   63086
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2019
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   14845
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      21    21      0    6734
                                             40 BANK0     21    21      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0      69
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _StringCompare                                       11     5      6    1792
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   13832
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8318
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3652
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2514
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13686
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2598
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2598
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   40227
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   20150
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   20077
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (6) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteConstString                                3     1      2    2647
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (6) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                          10     4      6    3939
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    6931
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    6931
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2669
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1     852
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16270
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1375
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1198
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     976
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5459
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2598
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2447
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      23
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2019
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _Led_SetLedBlinkTime
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _Led_SetLedBlinkTime
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      E0      16       87.5%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FC      12       98.4%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      B9      14       96.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      81       5       80.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     981       8        0.0%
DATA                 0      0     CA1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 13 21:39:54 2022

                  __size_of_StringCompare 0052               Mdm_GetSmsData@MessageHeader 0089  
                __end_of_UartSetConfigLow 5276                                _USB_SD_Ptr FC33  
               __size_of_Mdm_SetSmsFormat 0050                      __size_of_TurnOnModem 004C  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 5F32  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 2410                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 002E                                       l202 21D6  
                                     l203 21DE                                       l205 2226  
                                     l206 224C                                       l208 2254  
                                     l160 1E5C                                       l209 2274  
                                     l161 1D32                                       l162 1E9A  
                                     l170 1DFA                                       l171 1E10  
                                     l163 1D3E                                       l315 433E  
                                     l323 430A                                       l164 1D7E  
                                     l316 42B4                                       l420 484E  
                                     l500 46FE                                       l173 1E14  
                                     l325 4324                                       l421 486E  
                                     l237 5F3E                                       l174 1E1C  
                                     l166 1D8C                                       l318 42BE  
                                     l422 487A               __end_of_USBStdGetDscHandler 2CC0  
                                     l510 46D0                                       l502 4690  
                                     l175 1E28                                       l167 1DB4  
                                     l319 42E4                                       l423 4886  
                                     l511 46C0                                       l503 4680  
                                     l192 227E                                       l176 1E3E  
                                     l416 489A                                       l424 4892  
                                     l512 46E4                                       l504 46A6  
                                     l520 5638                                       l193 215E  
                                     l169 1DC6                                       l417 4840  
                                     l441 17EC                                       l513 46C4  
                                     l505 4684                                       l521 5604  
                                     l194 22B6                                       l418 48C8  
                                     l442 15F4                                       l514 46CA  
                                     l506 468A                                       l530 319A  
                                     l195 216A                                       l179 1E4A  
                                     l419 4848                                       l523 561E  
                                     l531 3200                                       l196 21AA  
                                     l700 5856                                       l444 163C  
                                     l532 31C6                                       l445 1684  
                                     l541 5EFC                                       l198 21B8  
                                     l446 16CC                                       l199 21CC  
                                     l631 29D6                                       l447 1714  
                                     l448 175C                                       l528 3206  
                                     l633 2A4E                                       l625 2962  
                                     l449 17A4                                       l529 31F2  
                                     l538 5F00                                       l546 3BB6  
                                     l651 5588                                       l707 59BC  
                                     l627 2986                                       l715 5930  
                                     l539 5EF8                                       l547 3BD2  
                                     l660 55AC                                       l652 5582  
                                     l716 5906                                       l709 59D6  
                                     l629 29AE                                       l718 591E  
                                     l639 5F24                                       l832 5CC0  
                                     l844 3C8A                                       l668 0C44  
                                     _BDT 000400                                       l790 5F5A  
                                     l855 4BE4                                       l775 2F02  
                                     l864 493C                                       l856 4B8A  
                                     l857 4BFE                                       l698 583A  
                                     l858 4BBA                                       l867 494E  
                                     l981 1EC6                                       l983 1EE2  
                                     l984 1F18                                       l985 1F8C  
                                     l978 1FD8                                       l994 1FB2  
                                     l979 1EA0                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                          ?_blinkForSeconds 0093  
                 __end_of_HighPriorityIsr 4208                            ??_Mdm_MainTask 00A2  
                     ?_Mcu_StartSystemPll 0001                                _USBSuspend 5B48  
                            ___awmod@sign 0082                      USBStdSetCfgHandler@i 0091  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8              I2cSlv_ReceiveI2cMsg@RxBuffer 0080  
                          _USBDeviceTasks 1BAA                              __CFG_IESO$ON 000000  
                          _USBDeviceState 00D3               Rtcc_AlarmConfig@AlarmConfig 007D  
            __end_of_I2cSlv_ReceiveI2cMsg 58FA                             ??_Mcu_Int0Isr 0001  
                           ??_Mcu_Int1Isr 0001                     ??_USBCtrlTrfRxService 007D  
                          ??_getsUSBUSART 0087                  USBEnableEndpoint@options 0085  
                              _CheckModem 1E9E             ??_Tmr_RegisterTmr2IsrCallback 007F  
         InitGprsNetwork@GprsNetInitState 01E6                                      l1100 5420  
                                    l1005 5682                                      l1006 564C  
                                    l1102 5436                               RiSm@Counter 0330  
                                    l1023 3802                                      l1031 37E8  
                                    l1103 544C                                      l1024 3756  
                                    l1009 5666                                      l1121 4CF6  
                                    l1113 5546                                      l1210 0E96  
                                    l1050 2F96                                      l1211 0E5E  
                                    l1027 3768                                      l1204 1078  
                                    l1028 37A2                                      l1052 2FCC  
                                    l1221 1010                                      l1213 0F3E  
                                    l1205 0DD0                                      l1029 37C8  
                                    l2101 53B2                                      l1222 1054  
                                    l1214 0F78                                      l1062 2B74  
                                    l1070 2B12                                      l1046 2FFA  
                                    l2102 537C                                      l1207 10B0  
                                    l1215 0FB8                                      l1063 2A6C  
                                    l1047 2F64                                      l1240 0AB6  
                                    l1216 0FBC                                      l1208 0DE8  
                                    l2200 5488                                      l2104 538E  
                                    l1144 5DFC                                      l1128 5DD8  
                                    l3001 4B62                                      l1241 060C  
                                    l1217 1000                                      l1209 0E22  
                                    l2201 54AE                                      l1049 300E  
                                    l2105 53A0                                      l3002 4B70  
                                    l2050 2698                                      l1250 0856  
                                    l1242 0646                                      l1226 106E  
                                    l1066 2A88                                      l1402 58F4  
                                    l2051 258C                                      l1251 0890  
                                    l1243 0680                                      l1067 2AA0  
                                    l1083 1B80                                      l2052 2610  
                                    l2212 5B06                                      l1252 08CA  
                                    l1244 06BA                                      l1092 1B1A  
                                    l1084 19FE                                      l2061 32C6  
                                    l2213 5AF2                                      l1237 0A54  
                                    l1253 090E                                      l1245 073E  
                                    l1093 1B66                                      l2062 320E  
                                    l2206 5048                                      l1270 0A42  
                                    l1262 097E                                      l1246 06F6  
                                    l1238 05F4                                      l2063 32E2  
                                    l2071 43D4                                      l2207 5008  
                                    l1271 0A4A                                      l1263 09AA  
                                    l1087 1A1A                                      l1407 5EE8  
                                    l2048 2682                                      l2064 322C  
                                    l2072 4366                                      l1248 07F2  
                                    l1088 1AD0                                      l2400 0524  
                                    l1600 1BD6                                      l2049 2564  
                                    l2073 43FC                                      l1265 09C4  
                                    l1257 092A                                      l1249 082C  
                                    l1089 1AF4                                      l2401 0570  
                                    l1601 1BCC                                      l3050 53EA  
                                    l2066 329C                                      l2074 4376  
                                    l1266 0A32                                      l1258 096E  
                                    l3210 5132                                      l1602 1BCA  
                                    l2170 49DA                                      l1371 3DFC  
                                    l3051 53E2                                      l2075 4388  
                                    l1611 1C54                                      l1099 545E  
                                    l2171 4960                                      l2092 5C54  
                                    l2076 43A2                                      l3060 5808  
                                    l2420 10FA                                      l1276 5712  
                                    l2084 3A80                                      l2093 5C42  
                                    l3061 5800                                      l3221 594A  
                                    l1701 2D94                                      l1621 1CE4  
                                    l1613 1C68                                      l1605 1BF2  
                                    l2085 39C8                                      l2173 49C6  
                                    l1374 3E04                                      l3054 540A  
                                    l2078 43B0                                      l3206 5122  
                                    l3222 5944                                      l1702 2D7A  
                                    l1710 3342                                      l1614 1C74  
                                    l1606 1C02                                      l1390 52D0  
                                    l1367 3E56                                      l3055 5414  
                                    l2095 5C48                                      l2079 43BE  
                                    l3215 5B8E                                      l3207 511C  
                                    l2415 131E                                      l2431 128E  
                                    l1623 1D08                                      l1615 1C9E  
                                    l1607 1C0A                                      l1279 56E0  
                                    l2087 39D6                                      l1376 3E20  
                                    l1368 3DB8                                      l2096 5C4E  
                                    l3064 5820                                      l3216 5B84  
                                    l2360 01E2                                      l3080 5BF8  
                                    l2600 391E                                      l2416 10B8  
                                    l1712 33B6                                      l1800 3500  
                                    l1616 1CAA                                      l1608 1C20  
                                    l1392 530A                                      l2440 5FCA  
                                    l1369 3DDA                                      l1633 3F56  
                                    l3065 582A                                      l3313 5C32  
                                    l3241 18C8                                      l3081 5BE6  
                                    l2601 3980                                      l3209 513C  
                                    l2433 12F8                                      l2425 110E  
                                    l1721 2BB8                                      l1625 1D26  
                                    l1609 1C2C                                      l1378 3E3C  
                                    l3250 1902                                      l3330 5A26  
                                    l2362 01AE                                      l2610 39A0  
                                    l2418 10DE                                      l1810 137E  
                                    l1722 2C40                                      l1802 3506  
                                    l3074 56CA                                      l1618 1CBE  
                                    l1379 3E48                                      l1635 3F80  
                                    l3323 5E84                                      l2355 05D2  
                                    l2363 019C                                      l2435 1318  
                                    l2427 112E                                      l1811 1384  
                                    l1731 4080                                      l1803 3524  
                                    l3075 56A8                                      l2443 5FC4  
                                    l2524 4464                                      l2356 00E2  
                                    l2604 3924                                      l1652 3ADA  
                                    l1628 577C                                      l1724 2C48  
                                    l1732 4006                                      l1804 3540  
                                    l1660 45AE                                      l2460 5E36  
              USBConfigureEndpoint@handle 0083                                      l1397 59AE  
                                    l1637 3FDC                                      l3261 6008  
                                    l3253 1914                                      l3237 185C  
                                    l2373 0392                                      l2429 114E  
                                    l1629 578C                                      l1821 14B2  
                                    l1813 13F6                                      l1725 2C98  
                                    l2461 5E28                                      l1389 5310  
                                    l2526 4490                                      l3318 5D40  
                                    l3254 1980                                      l3334 5FF0  
                                    l2374 0326                                      l2606 396C  
                                    l1822 14D0                                      l1718 2CA8  
                                    l1670 3046                                      l2199 54B2  
                                    l2527 44A0                                      l2543 4C7E  
                                    l3247 18D8                                      l3239 1874  
                                    l2391 041E                                      l2375 02B4  
                                    l2359 0152                                      l2607 394E  
                                    l1831 15C6                                      l1815 143E  
                                    l1727 2CA0                                      l1719 2BA4  
                                    l1735 4096                                      l1591 2482  
                                    l2463 5E30                                      l2624 51D8  
                                    l2544 4C46                                      l1912 474E  
                                    l3256 19A6                                      l3248 18E8  
                                    l2376 0250                                      l2368 01D0  
                                    l1664 4648                                      l1824 1532  
                                    l1816 1440                                      l1736 4018  
                                    l1760 4822                                      l2625 51EC  
                                    l2537 4C6E                                      l1913 477A  
                                    l3257 19E0                                      l3281 3478  
                                    l2393 045E                                      l2385 0402  
                                    l1825 153E                                      l1817 145C  
                                    l1737 401E                                      l1593 24BE  
                                    l1745 5764                                      l1753 5A5E  
                                    l2538 4C06                                      l2802 4ADC  
                                    l1914 4754                                      l3282 3430  
                                    l2394 0578                                      l2386 03D2  
                                    l2378 0304                                      l1770 4F38  
                                    l1826 15BA                                      l1738 403E  
                                    l1658 4594                                      l1674 30C8  
                                    l1746 5762                                      l1754 5A5C  
                                    l2803 4AE6                                      l2811 4D34  
                                    l3283 3448                                      l3275 33F0  
                                    l2379 02C6                                      l1691 3674  
                                    l1683 35C4                                      l1819 14EA  
                                    l2804 4AF4                                      l2812 4D2C  
                                    l3284 3458                                      l3276 33EA  
                                    l2396 04B4                                      l1692 363A  
                                    l1780 3F2E                                      l1772 4F86  
                                    l2580 214A                                      l2549 5A96  
                                    l1909 47A0                                      l2397 0478  
                                    l1941 2702                                      l1685 35CE  
                                    l1781 3EF4                                      l1829 1570  
                                    l1669 309E                                      l1589 245A  
                                    l2581 2036                                      l3278 3418  
                                    l2815 4D4C                                      l3287 34B6  
                                    l1951 27B2                                      l1687 3632  
                                    l1783 3F14                                      l1759 4828  
                                    l2583 2050                                      l2816 4D56  
                                    l2808 4D12                                      l1952 277A  
                                    l1944 2714                                      l1688 35F8  
                                    l2817 4D64                                      l2809 4D1E  
                                    l1945 2718                                      l1937 26C0  
                                    l1793 3560                                      l2585 2074  
                                    l1778 3EAC                                      l1698 2D1C  
                                    l1890 40EA                                      l1794 34D0  
                                    l1955 27CC                                      l1947 2770  
                                    l1939 26CE                                      l1779 3EB2  
                                    l1699 2CF6                                      l1891 40F8  
                                    l2587 2136                                      l1956 27D0  
                                    l1948 2738                                      l1892 4116  
                                    l1796 34DA                                      l1980 5D9E  
                                    l1893 412E                                      l1797 34E0  
                                    l2589 210A                                      l2782 3716  
                                    l1798 34E6                                      l2783 36D8  
                                    l2599 3904                                      l1887 4138  
                                    l1991 5058                                      l1799 34FA  
              __size_of_Mdm_IsSmsReceived 0024                                      l2776 3684  
                                    l1888 40D2                                _Led1OutSts 01FA  
                                    l2785 374A                                      l2777 367E  
                                    l1985 5064                                      l1993 505E  
                                    l1977 5DA8                                      l2970 428E  
                                    l1978 5D98                                      l2795 4A8E  
                                    l2779 36C6                                      l2963 57D2  
                                    l2796 4A9E                                      l2957 5EC8  
                                    l2798 4ABC                                      l2799 4AB4  
                                    l2967 4210                                      l2969 424C  
                                    l2997 4B2E                                      l2998 4B22  
                                    l9059 4854                                      l7707 35CE  
                                    l9261 2452                                      l8535 56A8  
                                    l9195 5B26                                      l7669 5BE6  
                                    l9289 24B6                                      STR_1 FFE5  
                                    STR_2 FF80                                      STR_3 FFDE  
                                    STR_4 FFC1                                      STR_5 FFCD  
                                    STR_6 FFEF                                      STR_7 FFEA  
                                    STR_8 FE94                                      STR_9 FEC8  
                              _Led2OutSts 01F8                                _Led3OutSts 01F6  
                                    u5230 3620                                      u5400 2C3A  
                                    u5250 3662                                      u6060 4B32  
                                    u5420 2C8C                                      u5237 3616  
                                    u5407 2C30                                      u5257 3658  
                                    u6235 60A2                                      u5427 2C82  
                                    u6236 60A4                                      u7300 2476  
                                    u8005 60B6                                      u5390 2C0A  
                                    u8006 60B8                                      u8105 5634  
                                    u7330 251A                                      u8106 5636  
                                    u7085 6062                                      u5397 2C00  
                                    u7086 6064                     ??_USBCtrlTrfTxService 007D  
                                    u8065 604C                                      u8066 6050  
                                    u8075 560E                                      u8076 5610  
                                    u8085 561A                                      u8086 561C  
                                    u8095 5628                                      _UCFG 000F39  
                                    u8096 562A                                      u6930 4D38  
                                    u9171 4FEA                                      _UEP0 000F26  
                                    u9421 49B8                                      _UEP1 000F27  
                                    u6870 4AC0                                      u9431 49D0  
                                    u9515 5D02                                      _UEIE 000F37  
                                    u7940 39B8                                      u9516 5D04  
                                    u6965 55D2                                      u9525 5D0E  
                __size_of_Uart_Uart1RxIsr 0010                                      u9526 5D10  
                                    u9535 5D1A                                      u7880 5164  
                                    u9536 5D1C                                      u7887 515A  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u7995 4DD2                                _AlarmEvent 01F5  
                          ?_StopCondition 0001                           ??_Mdm_DrvMainFn 0081  
                     _OsTmr_OsTickCounter 031C                             __CFG_FCMEN$ON 000000  
                      _InitModemInterface 6176                  secondsAppTimer@isExpired 0090  
                         _CDCDataInHandle 01D1              I2c_ReadData@TentativeCounter 002F  
             Led_SetLedBlinkTime@OnTimeMs 007D    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D4                      _NewStringMdmTerminal 003A  
                                    _atoi 367C                                      _main 6138  
                         ??_Mdm_IsRinging 0081                                      _itoa 57AC  
                        ?_SetUartBaudRate 0096                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0314  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 4208                                      _xtoi 33DA  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 617E  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 483A  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 593A                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
 Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8                         ??_secondsAppTimer 008D  
                     __end_of_GenerateEvt 6024                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D                __end_of_USBCheckStdRequest 35A4  
                         _Rtcm_SystemDate 0300                    ??_USBCtrlTrfOutHandler 007F  
                __end_of_GetOsTickCounter 60CC                        ?_Rtcc_GetRtccValue 0001  
                     ?_InitModemInterface 0001                        StringCompare@Index 0086  
                          _GetElapsedTime 3C26             I2cSlv_ReceiveI2cMsg@SlaveAddr 0082  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0091  
                     StringCopy@SourceStr 007D               __end_of_OsAlrm_ClearOsAlarm 52CE  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                       __size_of_I2cDummyTx 001C  
                        ??_Mdm_GetSmsData 008B                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 59B6  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDB6  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 0039                                     l13003 3206  
                                   l13141 2FC6                                     l11621 333A  
                                   l13127 2F5C                                     l12239 3712  
                                   l14061 2DEE                                     l13343 0FB0  
                                   l14049 4DEA                                     l10971 5F3E  
                                   l13509 09A4                                     l12943 44A0  
                                   l14385 507E                                     l14387 50AE  
                                   l13659 1CB6                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 0093  
                         __end_of___awdiv 4AFE                                     STR_10 FF56  
                                   STR_11 FF64                                     STR_12 FFA8  
                                   STR_20 FF48                                     STR_13 FF72  
                                   STR_21 FE6A                                     STR_30 FF3A  
                                   STR_14 FEB3                                     STR_31 FFD7  
                                   STR_15 FEF1                                     STR_23 FEDD  
                                   STR_24 FFF4                                     STR_16 FF29  
                                   STR_25 FFF4                                     STR_17 FF8E  
                                   STR_26 FE91                                     STR_18 FF9B  
                                   STR_27 FF18                                     STR_28 FFB5  
                         __end_of___awmod 4D6E                                     STR_29 FF05  
       __size_of_USBCtrlEPServiceComplete 00FE                           __end_of___lldiv 4B82  
                                   ?_utoa 008A                                     u10400 53EE  
                                   u11200 18AE                                     u10170 336E  
                                   u12020 04BE                                     u10510 557E  
                                   u10430 580C                                     u11150 1864  
                                   u10350 1554                                     u12120 431C  
                                   u12200 1F54                                     u12130 4336  
                                   u11180 189E                           ___awdiv@divisor 007F  
                                   u13040 1D2C                                     u11425 0AF4  
                                   u12330 3014                                     u13130 2760  
                  __end_of_USBDeviceTasks 1D30                                     u11435 0B14  
                                   u12180 1F40                                     u11540 54BE  
                                   u10660 5D3C                                     u11445 0B9E  
                                   u12261 2F20                                     u10750 5A0A  
                                   u13150 27A2                                     u12271 2F32  
                                   ?_xtoi 0083                                     u11560 5040  
                                   u10840 29AA                                     u10680 5C22  
                                   u13160 27BA                                     u11465 0C78  
                                   u13137 2756                                     u11490 5864  
                                   u10770 5A16                                     u11475 0C98  
                                   u11485 0D22                                     u13157 2798  
                                   u11567 5036                                     u13431 2020  
                                   u10960 472A                                     u10890 59E4  
                                   u13290 4C16                                     u13518 4E1C  
                                   u13519 4E4A                 ?_USBCtrlEPServiceComplete 0001  
                                   u13558 2EB6                                     u13559 2EE4  
                         __end_of___lwdiv 541E                           __end_of___lwmod 5834  
               TurnOnModem@TurnOnMdmState 01F0                        ??_UpdateOsCounters 0019  
                                   i1l742 22D2                                     i1l747 240E  
                                   i2l680 38E6                                     i2l681 3832  
                                   i2l690 387E                                     i2l682 3842  
                                   i2l686 3864                                     i2l688 38D6  
                                   i2l689 389E                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B0  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E2  
                                   _USTAT 000F64                   __end_of_LedStateMachine 4402  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00CA  
         __end_of_USBCtrlEPAllowDataStage 45E2                             _StringCompare 5470  
                                   _sd000 FE66                                     _sd001 FE1F  
                                   _sd002 FDF9            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3A92  
                             _ApnLenLocal 01EA                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_isalpha 5C3C  
                         __end_of_isdigit 5ED0                                     atoi@a 0088  
                                   atoi@s 0083                               _ClearBuffer 5ADE  
                         __end_of_isspace 5D48                I2c_WriteData@I2cWriteState 0035  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 5E8C                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 5D96  
               __end_of_Rtcc_GetRtccValue 48CE                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 4EBC                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 52CE  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                                   wtemp6 0043                           __end_of_sprintf 39C6  
                         __end_of_tolower 5FF4                       __end_of_Mcu_Int0Isr 61A6  
                     __end_of_Mcu_Int1Isr 61A2                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 600C  
                  __end_of_GetElapsedTime 3CEE                     __end_of_UartSetConfig 51C6  
                  __size_of_initGprsModem 0080               Rtcc_SetRtccValue@RtccPtrVal 0088  
                   __end_of_Term_MainTask 5FDC                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2B92                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 5CF4  
                          _InitSchedTimer 5C6C                           __initialization 27F0  
                        __end_of_MdmCntSm 435A                      __end_of_I2c_ReadData 22BA  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 3E7A  
                 LedStateMachine@LedPulse 0095                                _MyApp_Task 1FFE  
                            __end_of_atoi 3754                              __end_of_main 6144  
                     StringCompare@Result 0085                              __end_of_itoa 57F0  
                  ??_LedPulseStateMachine 008D                     _control_signal_bitmap 01DA  
                            __end_of_utoa 42B2                              __end_of_xtoi 34C0  
                __end_of_Rtcm_SetRtccDate 5376                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 6162  
                    initGprsModem@initMdm 01D4                      Term_MainSm@TermDelay 03CE  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE54  
               __size_of_USBCtrlEPService 0094                                    ??_atoi 0085  
                                  ??_main 00B8              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 4710  
                              _ReceiveEvt 5C9A          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 60EC  
                          ?_StringCompare 007D                          __end_of_Terminal 05EC  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 4B82                              _cdc_mem_type 01DB  
                      ??_Mcu_ConfigExtInt 007D                         CheckModem@Timeout 03EF  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00C4                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 38F8                _Uart_MdmGsmGprsReadService 3828  
              __end_of_UsbDevice_MainTask 5DBA                           getsUSBUSART@len 0086  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 5F32  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F        Irq_InitIntController@IntPriorityEn 007F  
                   __size_of_CDCTxService 0146                                    i1l1397 5AD8  
                             _GenerateEvt 600C                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
               Uart_Uart1RxIsr@UartRxData 01F3                             CDCTxService@i 0084  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FC3B                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F5                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 4F28                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 5C9A                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 6196  
                              _UartConfig 0332                      __end_of_Mdm_MainTask 5470  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00D2  
                           ??_Term_MainSm 00A7                                    _Relay1 02EA  
                                  _Relay2 02E9                                    _Relay3 02E8  
                                  _Relay4 02E7                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 5724  
                                  _SmsLen 00D8                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 55FE                                    ___lmul 51C6  
                    _I2cSlv_ReceiveI2cMsg 58BA                        TurnOnModem@Counter 032C  
                            ?_putUSBUSART 0083                                    ___wmul 5D48  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 5512  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5376  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 47A6  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
                       _USBEnableEndpoint 5768           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                                  _memcpy 5696                    __size_of_HttpGetMethod 04D0  
                                  _memset 5BDC                                    clear_0 288A  
                                  clear_1 289C                                    clear_2 28A8  
                                  clear_3 28B4                                    clear_4 28C0  
                                  clear_5 28CC                                    clear_6 28D8  
                                  clear_7 28E4                                    clear_8 28F0  
                                  clear_9 28FC                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02DA                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01E7                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01ED  
                      ?_USBEnableEndpoint 0085                                    _strcat 5112  
                                  _strcpy 5B7A                                    _strlen 593A  
                                  _strtol 181C                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 5A30  
                HttpGetMethod@UartMessage 0100                             _initGprsModem 4C04  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                              _CDCTxService 26AA  
                     ModemEvtParser@F9091 04EF                       ModemEvtParser@F9087 03BF  
                     ModemEvtParser@F9089 03BA                       MdmCntSm@MdmCntState 002B  
                            MyApp_Task@on 0141                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC32  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                                  tblptrh 000FF7                                 ??_isupper 007D  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                    __end_of_Mcu_ClearWdg 618E                       ??_USBEnableEndpoint 0086  
                             _MdmStsReady 01FE                   __end_of_I2cSlv_MainTask 5322  
                         _InitGprsNetwork 0DC8                             ??_Tmr_Tmr2Isr 0023  
                            ??_I2cDummyTx 0021                 OsTmr_GetTimerStatus@Timer 0095  
                             _Mcu_Int0Isr 61A2                               _Mcu_Int1Isr 619E  
                    ?_Led_SetLedBlinkTime 007D                                 ??_sprintf 0083  
                               ??_tolower 007D                    __size_of_ScheduleTasks 0122  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 009B                      _controlTransferState 00D1  
                   __end_ofi1_GenerateEvt 607E                     __end_of_Rtcm_MainTask 49EC  
              __size_of_Rtcc_GetRtccValue 0094                        _ExtInt1IsrCallback 02D8  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 291A                    Tmr_TmrBPrSet@Prescaler 0098  
                            __pbssBIGRAMl 0AC8                    __end_of_EnableReceiver 619A  
                      __size_of_WriteByte 000A                   __size_of_ModemEvtParser 011A  
             Uart_WriteConstString@Module 0082                 Uart_WriteStringLen@Module 0084  
                           ___rparam_used 000001                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 55B0  
         I2cSlv_QueryI2cData@TimeoutTimer 0347                      Terminal@FormatOption 02EC  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 4FF4  
                          __pcstackBANK10 0A00                     I2cDummyTx@DummyBuffer 01FC  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
Uart_MdmGsmGprsReadService@ServiceCounter 0005                           MdmCntSm@Counter 02D6  
                   ?_I2cSlv_ReceiveI2cMsg 0080                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 57AC                               _InitNetwork 0037  
                             ?_MyApp_Task 0001                  LedStateMachine@LedOutSts 0098  
                           __end_of_sd000 FE6A                             __end_of_sd001 FE3D  
                           __end_of_sd002 FE1F                              __pidataBANK1 61A6  
                            __pidataBANK2 611C                              __pidataBANK3 5878  
                            __pidataBANK4 6024                              __pidataBANK5 54C2  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 5834                       __size_of_CheckModem 0160  
              __end_of_Uart_ClearRxBuffer 5B48             __size_of_USBConfigureEndpoint 0098  
                __size_of_InitializeTasks 0070                        __end_of_I2cDummyTx 5FA8  
             __end_of_USBCtrlTrfInHandler 3F3C                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 007D                      StringCompare@String2 007F  
                      ??_UartSetConfigLow 007D                       __end_of_Term_MainSm 135A  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 6068  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 0083  
           I2cSlv_QueryI2cData@I2cOpState 01E1                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 0040                                _SystemInit 5BAC  
                              _cdc_notice 044A                     __end_of_Tmr_TmrBPrSet 320C  
                     __end_of_Rtcc_RtcIsr 619E                                _cdc_rx_len 00CE  
                       __end_of_MsgFormat FD2D                                _cdc_tx_len 00CC  
                     Terminal@UsbRxBuffer 0A00                               ?_OsTmr_Wait 009B  
                   ??_Led_SetLedBlinkTime 0081                       Terminal@UsbTxBuffer 0200  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 5ADE  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01DC  
                          ClearBuffer@Len 007F                           _secondsAppTimer 4402  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 5CF4  
                  _USBStdGetStatusHandler 3FFA                         __end_of_SendSmsSm 1BAA  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01E9  
                          _Rtcc_RtcConfig 44A4                                __pbssBANK0 00B8  
                              __pbssBANK1 01C9                                __pbssBANK2 02C8  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                             _HttpGetMethod 05EC  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 07C4  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 6094  
                __end_of_Uart_WriteString 59F4                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 5E26  
                             _SetBaudRate 55B0                 initGprsModem@modemCounter 03B8  
             __size_of_USBWakeFromSuspend 003A                SendSmsSm@SendSms_NextState 01EB  
                             _pBDTEntryIn 00BE          UartTxBufferStatus@TxBufferStatus 007F  
        __end_of_USBCtrlEPServiceComplete 311E                                 ?_TmrBInit 007D  
                           _CheckTxStatus 6162                             ??_TurnOnModem 0080  
                 __size_of_Tmr_TmrBConfig 00C8               __size_of_USBCheckCDCRequest 00B0  
                Uart_WriteStringLen@Index 0083                         ?_GetOsTickCounter 007D  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 007D  
                     MyApp_Task@cmpString 0153                                 ?_Terminal 0001  
                                 ?___lmul 007D                              _Led_MainTask 39C6  
                          _Rtcc_UnlockRtc 60CC                              _I2cBusStatus 01E3  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2DE4                 Uart_InitUartModule@Module 00A1  
                   MyApp_Task@I2cStsReady 02E2                     __end_of_I2c_WriteData 1E9E  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE54                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 47A6                     __end_of_UpdateSchFlag 5F8C  
                       MyApp_Task@smsText 0100                                _ep_data_in 02D1  
                         _I2cWriteDataEvt 00DC                  i1GenerateEvt@EventStatus 001B  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 007D  
                              ??i1___wmul 001D                   __end_of_InitGprsNetwork 10B6  
                                 ?_strcpy 007D                                   ?_strlen 007D  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 2DE4                         __end_of_WriteByte 6158  
                      _USBCheckStdRequest 34C0                         _configDescriptor1 FDB6  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 04B8  
             __end_of_USBCtrlTrfTxService 367C                       _USBStdSetCfgHandler 32F4  
                       triggerRelay@F8967 03CC                   __size_of_ConfigureModem 00D4  
                  I2cSlv_QueryI2cData@Ret 01E0                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 5CC8                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 4544  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 0087  
                                 _SSP2BUF 000F75                              _I2c_ReadData 215C  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 3DB6                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01D8            __end_of_Pm_DsReleasePinControl 6184  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 015E                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00E0                  __size_of_blinkForSeconds 003A  
                                 _UIRbits 000F62                     CheckModem@CheckMdmSts 01F1  
               __size_of_UpdateOsCounters 0010                                   _Led1Sts 01FB  
                                 _Led2Sts 01F9                                   _Led3Sts 01F7  
              __end_of_Sch_SchmIntService 6138                     __size_of_Mdm_MainTask 0052  
           ModemEvtParser@CallReadyString 0088                             _cdc_trf_state 00CD  
                              ??_ReadByte 007D                       _Uart_InitUartModule 0ABC  
                   __end_of_Mdm_DrvMainFn 618A                          _ComChecCompleted 01F2  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C8                     __end_of_Mdm_IsRinging 5E02  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                                   _RelayB1 01D7  
                                 _RelayB2 01D6                               ?_StringCopy 007D  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 0036  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 4E50                    __end_of_Rtcc_UnlockRtc 60DC  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 60A8                               _Term_MainSm 10B6  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD2D  
              __size_of_USBEnableEndpoint 0044                       MyApp_Task@smsNumber 0145  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 5F50                    ?_Uart_WriteConstString 0080  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 6052             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 4A78                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 4CFC                                   ___lldiv 4AFE  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                                 ___lwdiv 53CA                         ??_USBStallHandler 007D  
                                 ___lwmod 57F0                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                         ??_initGprsModem 0099                               _Rtcc_RtcIsr 619A  
                    __size_of_putUSBUSART 0022                                   __pcinit 27F0  
                      getsUSBUSART@buffer 0084                           __size_of_memcpy 0048  
                               _I2cComSts 00D4                       __end_of_TurnOnModem 5696  
                         __size_of_memset 0030                                 _I2cConfig 0352  
                          ??_Rtcc_LockRtc 007D                 __end_of_configDescriptor1 FDF9  
                                 __ramtop 0F00                Mdm_GetSmsData@GetSmsStatus 008B  
                   MyApp_Task@countRelay1 02F2                     MyApp_Task@countRelay2 03CA  
                             Terminal@Len 03AC                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 6138                                   __ptext1 5BAC  
                                 __ptext2 6144                                   __ptext3 617E  
                                 __ptext4 5F32                                   __ptext5 5FA8  
                                 __ptext6 5CF4                                   __ptext7 5C6C  
                                 __ptext8 3B5E                                   __ptext9 311E  
                                 _inPipes 00B8                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 44A4  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 5C0C                                   _isdigit 5EAE  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00B8  
                             ?_SystemInit 0001                                   clear_10 2908  
                                 clear_11 2914                          ___awmod@dividend 007D  
                       ??_InitializeTasks 00B3                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 02E0       __end_of_Tmr_RegisterTmr2IsrCallback 614E  
             _Tmr_RegisterTmr2IsrCallback 6144                                   _isspace 5D1E  
                            _Mdm_MainTask 541E                                   _isupper 5E6A  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                    Term_MainSm@FwkBuildStr 00AF  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 22BA  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC3B  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 5E02  
                                 _sprintf 38F8                                   _tolower 5FDC  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 610C  
                        _HttpGetDataLocal 03A3                  __end_of_Mdm_SetSmsFormat 5562  
                  Term_MainSm@FwkMajorStr 00A7                            __pintcode_body 415C  
                                 _toupper 5FF4           secondsAppTimer@destinationTicks 0091  
                       ClearBuffer@Buffer 007D                      end_of_initialization 291A  
                            _getsUSBUSART 4710                          ??_GetElapsedTime 0085  
                             _SmsTxtReady 0038               ?_Uart_MdmGsmGprsReadService 0004  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F4             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC39       Irq_InitIntController@PerInt_LowPInt 007E  
                                 memcpy@d 0083                                   memcpy@n 0081  
                                 memcpy@s 0085                       _pBDTEntryEP0OutNext 00C6  
                                 itoa@buf 0093                                   memset@c 007F  
                  Term_MainSm@FwkMinorStr 00AB                                   itoa@val 0095  
                                 memset@n 0081                                   memset@p 0083  
                           __Lmediumconst FC32                            _ModemEvtParser 2F06  
                                 int_func 415C                                 i1u1334_20 22D0  
                         _USB1msTickCount 0318                                 i1u1338_28 23F0  
                               i1u1338_29 2404           _dummy_encapsulated_cmd_response 0377  
                               i1u1359_28 5E12                  ?_USBStdFeatureReqHandler 0001  
               __size_of_Mcu_ConfigExtInt 001A                             MyApp_Task@off 013F  
                       ?_Rtcc_AlarmConfig 007D                     ??_USBStdSetCfgHandler 0091  
                         ___lldiv@divisor 008D                 __end_of_Sch_MainScheduler 5F6E  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0080  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0095  
                       _Rtcc_SetRtccValue 15EE                         _Rtcc_SetRtcStatus 603C  
                     _ActivateRiDetection 0041                           ?_Rtcc_UnlockRtc 0001  
                      ??_Rtcc_AlarmConfig 007F                        __end_of_USBSuspend 5B7A  
                           StringCopy@Len 0081                         ?_MdmHttp_MainTask 0001  
                 _USBCtrlEPAllowDataStage 4544                        _UsbDevice_MainTask 5D96  
                            _Mcu_ClearWdg 618A                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                                 utoa@buf 008A                        ??_MdmHttp_MainTask 00A1  
                _USBCtrlEPServiceComplete 3020                                   utoa@val 008C  
                 HttpGetMethod@GetMOutSts 01E4                     i1___wmul@multiplicand 001B  
                      __end_of_CheckModem 1FFE                           _RtccIsrCallback 02DC  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0021                        Terminal@EchoOption 02F3  
           __size_of_LedPulseStateMachine 00E8                                   strlen@s 007D  
              _USBStatusStageEnabledFlag1 0028                _USBStatusStageEnabledFlag2 0027  
                   ??_Uart_InitUartModule 009F                      __end_of_Wdg_MainTask 5E48  
                                 strtol@a 0094                                   strtol@c 0098  
                          _Rtcm_RtccAlarm 0308                                   strtol@s 0089  
                      USBEnableEndpoint@p 0086                       ?_UsbDevice_MainTask 0001  
                                 xtoi@val 0088                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                       ??_Rtcc_SetRtccValue 0086  
                     ??_Rtcc_SetRtcStatus 007D                          __CFG_DSBOREN$OFF 000000  
                        ?_InitGprsNetwork 009B                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 5EF2                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 007F                          __CFG_CPUDIV$OSC1 000000  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 02DE  
                        _HttpGetMethodSts 01E8                                 _TRISBbits 000F93  
                    SendSmsSm@UartMessage 0100                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0062                        _BothEP0OutUOWNsSet 01DD  
                         ??_HttpGetMethod 009D                   __size_of_Mdm_GetSmsData 0078  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0034  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 3020                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00DA  
                   __end_of_StopCondition 6192                  __size_of_HighPriorityIsr 4200  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 036E  
                               _Led2Blink 0365                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 035C              __end_of_USBTransferOnePacket 3FFA  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0392  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 181C                 __end_of_Rtcc_SetRtcStatus 6052  
                               _Led2Pulse 038C                                 _Led3Pulse 0386  
                       _I2cSlv_SendI2cMsg 5978           SetBaudRate@DesiredI2cBusClockHz 0096  
                       ??_blinkForSeconds 0095                           ??_ScheduleTasks 00B3  
                          _Tmr_TmrBConfig 3B5E                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 60BA                         _OsAlrm_SetOsAlarm 3CEE  
                    Terminal@TermRxBuffer 0486                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 55FE  
                     __CFG_MSSP7B_EN$MSK7 000000                               _TurnOnModem 564A  
                            ??_MyApp_Task 0099                      Terminal@TermTxBuffer 0100  
                               _GetMethod 01FD                    _USBCtrlTrfSetupHandler 49EC  
                      ?_OsAlrm_SetOsAlarm 0083                     __end_of_USBDeviceInit 2562  
   __end_of_USBIncrement1msInternalTimers 5E6A    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 5E48               __size_of_Mdm_RequestSmsData 0010  
                          __end_of___lmul 521E                            _CheckAckStatus 616C  
                          __end_of___wmul 5D70                       ??_I2cSlv_SendI2cMsg 0084  
                  __size_of_UartWriteByte 0020                            __end_of_memcpy 56DE  
                      Terminal@PackageLen 02EE         Uart_MdmGsmGprsReadService@RxState 01F4  
                          __end_of_memset 5C0C                        _UartTxBufferStatus 5562  
                     ??_OsAlrm_SetOsAlarm 008B                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01DE  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 611C  
                               _MdmStatus 00D6                            __end_of_strcat 516E  
                          __end_of_strcpy 5BAC                            __end_of_strlen 5978  
                          __end_of_strtol 19F2                       start_initialization 27F0  
                       __size_ofi1___wmul 0026                   ?_USBStdGetStatusHandler 0001  
                          _ConfigureModem 3754                              ??_OsTmr_Wait 00A1  
                  Uart_WriteString@Module 0082             USBCtrlTrfRxService@byteToRead 007E  
                 __size_of_StartCondition 0004                      Rtcm_SetRtccDate@Date 0089  
                         _MdmResetRequest 003D                       ?_UartTxBufferStatus 0001  
                      _Uart_ClearRxBuffer 5B14                 __size_of_UartSetConfigLow 0058  
                        ??_EnableReceiver 007D                               _cdc_data_rx 0550  
                             _cdc_data_tx 0784              __end_of_USBConfigureEndpoint 467A  
         __end_of_USBStdFeatureReqHandler 15EE                                 _MsgFormat FC3D  
                      __end_of_MyApp_Task 215C                          _UpdateOsCounters 60FC  
                         ?_ModemEvtParser 0001                I2c_InitI2cModule@I2cConfig 00A2  
                       __size_of_GetSmsSm 0132         __end_of_USBCtrlEPAllowStatusStage 3B5E  
               __end_of_I2cSlv_SendI2cMsg 59B6                    Uart_WriteStringLen@Len 0082  
                __size_of_LedStateMachine 00A8                  __end_of_USBCtrlEPService 483A  
                       __size_of_MdmCntSm 00A8                         ?_Uart_WriteString 0080  
                   __size_of_SetAckStatus 0014                      __size_of_ClearBuffer 0036  
                    __end_of_Rtcc_LockRtc 60EC                       ?_Uart_ClearRxBuffer 0001  
                            ?_SetBaudRate 0096                    __end_of_Tmr_TmrBConfig 3C26  
                               _SendSmsSm 19F2                 __end_of_OsAlrm_SetOsAlarm 3DB6  
                  __end_of_Tmr_TmrBIrqSet 564A                                 _TaskTable 0590  
                               _RingEvent 00DE                 ??_USBCtrlEPAllowDataStage 007E  
                      ??_Uart_WriteString 0082                               _SystemState 00D9  
                       __size_of_ReadByte 000A                                 _RtcConfig 03B4  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 009D  
                             ??_CDCInitEP 0089                            USBDeviceInit@i 0085  
                           _UartSetConfig 516E                    Led_SetLedBlinkTime@Led 0081  
                      __end_of_ReceiveEvt 5CC8                    _pBDTEntryEP0OutCurrent 00C8  
                           _Term_MainTask 5FC2                   USBTransferOnePacket@dir 007D  
                    ??_UartTxBufferStatus 007D                   USBTransferOnePacket@len 0080  
                   Tmr_TmrBConfig@TmrNumb 00A3                   __size_of_LowPriorityIsr 00B4  
                  __end_of_CheckAckStatus 6176                                  ??___lmul 0085  
                           _isxdigit$6426 0081                                 Terminal@i 00A4  
                                ??___wmul 0081                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 007D                       _USBStdGetDscHandler 2B92  
              I2cSlv_SendI2cMsg@SlaveAddr 0082                        __end_of_OsTmr_Wait 4C04  
                      HttpGetMethod@Index 01C8                               __pdataBANK1 01FF  
                             __pdataBANK2 02F2                               __pdataBANK3 03BA  
                             __pdataBANK4 04E2                               __pdataBANK5 0590  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00D0  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 53CA  
                  __end_of_ConfigureModem 3828                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00DB            __end_of_USBStdGetStatusHandler 40AC  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC3D  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 54C2                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200              __size_of_USBCtrlTrfInHandler 00C2  
                         RiSm@MdmDrvState 002C                    MyApp_Task@blinkSeconds 01D3  
                            _SetAckStatus 6094                              _isalpha$6416 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 614E  
                            _isdigit$6150 007E                      ?_USBStdGetDscHandler 0001  
           UpdateSchFlag@InterruptCounter 032E                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 58FA       InitGprsNetwork@GprsNetInitNextState 002A  
                    MyApp_Task@blickTicks 03FA                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 5F12                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 5A6A              __end_of_LedBlinkStateMachine 26AA  
                             sprintf@flag 0083                           _USBStallHandler 5724  
                              ?_SendSmsSm 0001                              _pBDTEntryOut 030E  
              __size_of_Rtcc_SetRtccValue 022E                      __size_of_GenerateEvt 0018  
                         ?_Tmr_TmrBConfig 00A0                __size_of_Rtcc_SetRtcStatus 0016  
                        _Mcu_ConfigExtInt 5FA8                __end_of_USBCheckCDCRequest 415C  
            __size_ofi1_I2cSlv_SendI2cMsg 003A                       _OsAlrm_ClearOsAlarm 5276  
                         ?_Tmr_TmrBIrqSet 007D                   ??_Uart_WriteConstString 0082  
                          ?_UartSetConfig 0001                      __end_of_Tmr_StartTmr 5F12  
                            ??_StringCopy 0083                          _Led_SetLedStatus 5C3C  
                       ??_HighPriorityIsr 0007                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0083                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts 5ED0                          GenerateEvt@Event 007D  
                  __size_of_Tmr_TmrBPrSet 00EE                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008             Uart_WriteString@StringToWrite 0080  
                           __pmediumconst FC32                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 007E  
                       __size_of_isxdigit 003C                                  ?___awdiv 007D  
                               __ptext100 5DDE                                 __ptext101 4C84  
                               __ptext110 2A60                                 __ptext102 5376  
                               __ptext111 3754                                 __ptext103 516E  
                               __ptext120 05EC                                 __ptext112 0ABC  
                               __ptext104 564A                                 __ptext121 59B6  
                               __ptext113 2928                                 __ptext105 19F2  
                               __ptext130 5ADE                                 __ptext122 5834  
                               __ptext114 51C6                                 __ptext106 58FA  
                           Terminal@Index 00A6                                 __ptext131 435A  
                               __ptext123 5F12                                 __ptext115 521E  
                               __ptext107 2F06                                 __ptext140 4AFE  
                               __ptext132 320C                                 __ptext124 5562  
                               __ptext116 1E9E                                 __ptext108 5B14  
                               __ptext141 5CC8                                 __ptext133 5C3C  
                               __ptext125 4FF4                                 __ptext117 42B2  
                               __ptext109 5470                                 __ptext150 6158  
                               __ptext142 3DB6                                 __ptext134 2562  
                               __ptext126 50B4                                 __ptext118 6176  
                               __ptext151 600C                                 __ptext143 5C9A  
                               __ptext135 53CA                                 __ptext127 48CE  
                               __ptext119 0DC8                                 __ptext160 22BA  
                               __ptext152 6196                                 __ptext144 1D30  
                               __ptext136 3CEE                                 __ptext128 3C26  
                               __ptext161 5D70                                 __ptext153 6162  
                               __ptext145 215C                                 __ptext137 5D48  
                               __ptext129 60BA                                 __ptext170 619A  
                               __ptext162 5276                                 __ptext154 616C  
                               __ptext146 614E                                 __ptext138 4D6E  
                               __ptext171 619E                                 __ptext163 5F8C  
                               __ptext147 618E                                 __ptext139 55B0  
                               __ptext172 61A2                                 __ptext164 5AA4  
                               __ptext156 5E02                                 __ptext148 6192  
                               __ptext173 0000                                 __ptext165 6068  
                               __ptext157 612A                                 __ptext149 6094  
                               __ptext158 5F6E                                 __ptext167 610C  
                               __ptext159 60FC                                 __ptext168 3828  
                               __ptext169 607E                                  ?___awmod 007D  
                      _Sch_SchmIntService 612A                           _InitializeTasks 4DE0  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 04D7                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 0398  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 3F3C                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F                      MyApp_Task@isRelay1On 02E5  
                    MyApp_Task@isRelay2On 02E4        Uart_MdmGsmGprsReadService@UartData 0004  
                             _I2cTxBuffer 0440                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 039E            InitializeTasks@ActiveTaskIndex 00B5  
                    __CFG_RTCOSC$T1OSCREF 000000                                  ?_isspace 0001  
                          _Mdm_GetSmsData 4C84                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02EB  
                         Terminal@Payload 0500                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 4F8E                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 4F8E  
              ConfigureModem@DelayCounter 0328                        __end_of_StringCopy 5056  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00DF  
                         Terminal@SwTimer 04CC                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                  _I2cReady 02E6  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 032A  
                        _OsTmr_StartTimer 50B4                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 6068  
              __end_of_Mcu_StartSystemPll 5F50                              _PhoneNumbLen 00D7  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 5E26  
                           _Rtcm_MainTask 495E                            ___wmul@product 0081  
                        SendSmsSm@SwTimer 03E4                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001E  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 008C                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 01EF           HttpGetMethod@GetMethodNextState 00D5  
                   ?_I2cSlv_I2cReadMsgSts 0001                         _I2c_InitI2cModule 4D6E  
                       _IncomingCallEvent 003F                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0097                        __end_of_SystemInit 5BDC  
                                _RCONbits 000FD0                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 495E  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 009C                      _USBConfigureEndpoint 45E2  
        __size_of_USBStdFeatureReqHandler 0294                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 2410                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 5D70                     __end_of_initGprsModem 4C84  
                     ??_I2c_InitI2cModule 00A4                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 617E                    __end_of_Mdm_GetSmsData 4CFC  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                              _RemoteWakeup 01DF  
                                _ApnLocal 0326                            _StartCondition 6192  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01E5                             _Tmr_TmrBPrSet 311E  
                       _NewStringReceived 003C                              _isspace$6419 007E  
                        _UartSetConfigLow 521E                                  _GetSmsSm 2A60  
                 __end_of_USBStallHandler 5768                      Mdm_DrvMainFn@Options 0001  
                         _blinkForSeconds 5A6A                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03D9                                  _MdmCntSm 42B2  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 2804                                 copy_data1 2824  
                               copy_data2 2844                                 copy_data3 2876  
            __end_of_LedPulseStateMachine 32F4                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 33DA  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 6158                             i2_GenerateEvt 607E  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE66                 __end_of_I2c_InitI2cModule 4DE0  
                                _MsgReady FE3D                           ??_Term_MainTask 00B3  
                 __end_of_InitializeTasks 4E50                initGprsModem@isInitialized 01D5  
                 ?_USBCtrlTrfSetupHandler 0001                                _ANCON1bits 000F49  
                                _RxBuffer 0C58                   USBStdGetStatusHandler@p 007E  
                                __Hrparam 0000                                  _TmrBInit 467A  
                    __size_of_SetBaudRate 004E                              ?_TurnOnModem 0001  
                                _TxBuffer 0322                            _LowPriorityIsr 0018  
                               memcpy@tmp 0087                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DD  
                         _SetUartBaudRate 2928              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1D30                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                           MyApp_Task@F9001 04E2  
                         MyApp_Task@F9008 03C3                  __end_of_UpdateOsCounters 610C  
                        __size_of___lldiv 0084                           MyApp_Task@F8992 03C8  
                         MyApp_Task@F8995 03C6                           MyApp_Task@F8998 0320  
                       Terminal@SlaveAddr 02ED                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                        __size_of___lwmod 0044                  I2c_WriteData@WritePacket 007E  
                       Terminal@TermState 02EF                             _UpdateSchFlag 5F6E  
                     __end_of_putUSBUSART 5EAE                               _line_coding 037F  
                            _Rtcc_LockRtc 60DC                      _LedBlinkStateMachine 2562  
                  __end_of_StartCondition 6196                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01EC  
               Rtcm_GetRtccDate@LocalDate 008A                           ?_Mdm_GetSmsData 0087  
                I2c_WriteData@WriteStatus 0032                              _isupper$6422 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 0030  
                          ?_Tmr_TmrBPrSet 0096                          ??_ModemEvtParser 0088  
                        _GetOsTickCounter 60BA                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0186  
                         ___lwdiv@divisor 0085                              Terminal@Addr 03A8  
                ModemEvtParser@RingString 0097                               ??_WriteByte 007D  
                        __size_of_isspace 002A                           ___lwdiv@counter 0087  
                         MyApp_Task@phone 0132                                  __ptext10 55FE  
                                __ptext11 5EF2                                  __ptext20 5D96  
                                __ptext12 467A                                  __ptext21 56DE  
                                __ptext13 5F50                           ??_UartWriteByte 007E  
                                __ptext30 5B48                                  __ptext22 541E  
                                __ptext14 2DE4                                  __ptext31 5724  
                                __ptext23 52CE                                  __ptext15 4DE0  
                                __ptext40 32F4                                  __ptext32 5E48  
                                __ptext24 6184                                  __ptext16 1FFE  
                                __ptext41 3FFA                                  __ptext33 2410  
                                __ptext25 5E26                                  __ptext17 5FC2  
                                __ptext50 2CC0                                  __ptext42 2B92  
                                __ptext34 47A6                                  __ptext26 60A8  
                                __ptext18 495E                                  __ptext51 3A92  
                                __ptext43 135A                                  __ptext35 5696  
                                __ptext27 618A                                  __ptext19 39C6  
                                __ptext60 00D0                                  __ptext52 3E7A  
                                __ptext44 5056                                  __ptext36 49EC  
                                __ptext28 1BAA                                  __ptext61 33DA  
                                __ptext53 35A4                                  __ptext45 40AC  
                                __ptext37 3020                                  __ptext29 5A30  
                                __ptext70 5E8C                                  __ptext62 5FDC  
                                __ptext54 26AA                                  __ptext46 4E50  
                                __ptext38 4544                                  __ptext71 57AC  
                                __ptext63 59F4                                  __ptext55 10B6  
                                __ptext47 5768                                  __ptext39 34C0  
                                __ptext80 58BA                                  __ptext72 4208  
                                __ptext64 181C                                  __ptext56 593A  
                                __ptext48 45E2                                  __ptext81 5ED0  
                                __ptext73 57F0                                  __ptext65 5FF4  
                                __ptext57 5112                                  __ptext49 4F28  
                                __ptext90 603C                                  __ptext82 5322  
                                __ptext74 4710                                  __ptext66 5D1E  
                                __ptext58 38F8                                  __ptext91 44A4  
                                __ptext83 60CC                                  __ptext75 3F3C  
                                __ptext67 5C0C                                  __ptext59 5BDC  
                                __ptext92 6052                                  __ptext84 15EE  
                                __ptext76 367C                                  __ptext68 5E6A  
                                __ptext93 4EBC                                  __ptext85 4CFC  
                                __ptext77 5EAE                                  __ptext69 5B7A  
                                __ptext94 4C04                                  __ptext86 4A78  
                                __ptext78 4B82                                  __ptext95 5512  
                                __ptext87 60DC                                  __ptext79 5978  
                                __ptext96 5A6A                                  __ptext88 4F8E  
                                __ptext97 4402                                  __ptext89 483A  
                                __ptext98 60EC                                  __ptext99 5DBA  
                        __size_of_isupper 0022                                _I2cDummyTx 5F8C  
                  Tmr_TmrBIrqSet@Priority 007D                     __end_of_HttpGetMethod 0ABC  
                __size_of_InitGprsNetwork 02EE                              _SSP2CON2bits 000F71  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 007F  
                       _Mmd_RingIndicator 002D                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0019                         _Mdm_IsSmsReceived 5DBA  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 4A78  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 0087  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 616C  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 6184  
                      ??_USBCtrlEPService 0097                                  _isxdigit 59F4  
                           _Mdm_IsRinging 5DDE                       _USBCtrlTrfInHandler 3E7A  
                I2c_ReadData@I2cReadState 0031                __end_of_Mdm_RequestSmsData 60FC  
                   __end_of_ScheduleTasks 2F06                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                 blinkForSeconds@blickTicks 0093  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 4F28  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 0085                 _USBCtrlEPAllowStatusStage 3A92  
                     ??_Mdm_IsSmsReceived 0081                 MyApp_Task@I2cTxBufferTest 0143  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 00B7  
                              strtol@sign 0093                           Term_MainSm@Data 0454  
                          _PhoneNumberLen 0324                      __size_of_RtccIrqInit 0016  
               __size_of_Uart_WriteString 003E                    ??_USBTransferOnePacket 0081  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                   __end_of_blinkForSeconds 5AA4  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 5AA4  
                __end_of_Mcu_ConfigExtInt 5FC2                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00CF                  CDCTxService@byte_to_send 0085  
           I2c_WriteData@TentativeCounter 0033                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 5EF2                  __end_of_Led_SetLedStatus 5C6C  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 001B  
                        _Rtcm_SetRtccDate 5322                  USBStdFeatureReqHandler@p 0095  
                        ??_Tmr_TmrBConfig 00A2                             ??_ClearBuffer 0081  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0092  
               __end_of_Mdm_IsSmsReceived 5DDE                          ??_Tmr_TmrBIrqSet 007F  
                __size_of_secondsAppTimer 00A2                                  intlevel1 0000  
                                intlevel2 0000                      _OsTmr_GetTimerStatus 48CE  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0152  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 50B4  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 5056                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                            MyApp_Task@test 02E3  
                 __end_of_SetUartBaudRate 2A60                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                  blinkForSeconds@seconds 0095                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 0092                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 5878                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                  __end_of_Rtcm_GetRtccDate 4FF4  
                             _putUSBUSART 5E8C                       _USBCtrlTrfRxService 2CC0  
                        ??_ConfigureModem 00A2                    Rtcc_SetRtccValue@Value 0085  
                      _USBWakeFromSuspend 5A30                   _USBStdFeatureReqHandler 135A  
                __end_of_OsTmr_StartTimer 5112                      _LedPulseStateMachine 320C  
                      _USBCheckCDCRequest 40AC                       _USBCtrlTrfTxService 35A4  
                     RtccIrqInit@Priority 007D                                  utoa@base 008E  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                        _Rtcc_AlarmConfig 4EBC                           ??_Tmr_TmrBPrSet 009A  
                                sprintf@c 0086                                  sprintf@f 007F  
                                tolower@c 007D                                  strcat@cp 0081  
                                strcat@to 007D                       ?_USBWakeFromSuspend 0001  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FF                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 01D9                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 02F0                           ___lwmod@counter 0081  
                           ?_Mdm_MainTask 0001                            ??_I2cSetConfig 007D  
          __size_of_Irq_InitIntController 002A                                  toupper@c 007D  
         SetUartBaudRate@BaudRateRegister 009A                       ?_USBCheckCDCRequest 0001  
                        _MdmHttp_MainTask 56DE                            ??_I2c_ReadData 0082  
                          ??_I2cSendMsgSm 0084             __end_of_Irq_InitIntController 5D1E  
                   ReceiveEvt@EventStatus 0080              ?_Tmr_RegisterTmr2IsrCallback 007D  
                     USBEnableEndpoint@ep 0088                           _endpoint_number 00D0  
                              _WDTCONbits 000FC0                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                  UartTxBufferStatus@Module 007E  
                   ?_OsTmr_GetTimerStatus 0095             SetUartBaudRate@DivisionFactor 009C  
          I2cSlv_ReceiveI2cMsg@DataLenght 0083                             ??_GenerateEvt 007F  
                         _LedStateMachine 435A          Uart_MdmGsmGprsReadService@Module 0001  
                         TmrBInit@TmrNumb 0080                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              ??_Uart_MdmGsmGprsReadService 0005  
                           _StopCondition 618E                     ??i1_I2cSlv_SendI2cMsg 0020  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 0029  
                        Mdm_IsRinging@Ret 0081                      ??_USBWakeFromSuspend 0091  
              USBTransferOnePacket@handle 0082                         ??_InitGprsNetwork 009E  
                     __end_of_ClearBuffer 5B14                      __end_of_CDCTxService 27F0  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC39                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01EE                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 60A8  
