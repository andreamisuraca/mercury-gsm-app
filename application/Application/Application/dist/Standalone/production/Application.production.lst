

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Mar 16 10:58:01 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    30                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    31                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    32                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    33                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    34                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	text0,global,reloc=2,class=CODE,delta=1
    36                           	psect	text1,global,reloc=2,class=CODE,delta=1
    37                           	psect	text2,global,reloc=2,class=CODE,delta=1
    38                           	psect	text3,global,reloc=2,class=CODE,delta=1
    39                           	psect	text4,global,reloc=2,class=CODE,delta=1
    40                           	psect	text5,global,reloc=2,class=CODE,delta=1
    41                           	psect	text6,global,reloc=2,class=CODE,delta=1
    42                           	psect	text7,global,reloc=2,class=CODE,delta=1
    43                           	psect	text8,global,reloc=2,class=CODE,delta=1
    44                           	psect	text9,global,reloc=2,class=CODE,delta=1
    45                           	psect	text10,global,reloc=2,class=CODE,delta=1
    46                           	psect	text11,global,reloc=2,class=CODE,delta=1
    47                           	psect	text12,global,reloc=2,class=CODE,delta=1
    48                           	psect	text13,global,reloc=2,class=CODE,delta=1
    49                           	psect	text14,global,reloc=2,class=CODE,delta=1
    50                           	psect	text15,global,reloc=2,class=CODE,delta=1
    51                           	psect	text16,global,reloc=2,class=CODE,delta=1
    52                           	psect	text17,global,reloc=2,class=CODE,delta=1
    53                           	psect	text18,global,reloc=2,class=CODE,delta=1
    54                           	psect	text19,global,reloc=2,class=CODE,delta=1
    55                           	psect	text20,global,reloc=2,class=CODE,delta=1
    56                           	psect	text21,global,reloc=2,class=CODE,delta=1
    57                           	psect	text22,global,reloc=2,class=CODE,delta=1
    58                           	psect	text23,global,reloc=2,class=CODE,delta=1
    59                           	psect	text24,global,reloc=2,class=CODE,delta=1
    60                           	psect	text25,global,reloc=2,class=CODE,delta=1
    61                           	psect	text26,global,reloc=2,class=CODE,delta=1
    62                           	psect	text27,global,reloc=2,class=CODE,delta=1
    63                           	psect	text28,global,reloc=2,class=CODE,delta=1
    64                           	psect	text29,global,reloc=2,class=CODE,delta=1
    65                           	psect	text30,global,reloc=2,class=CODE,delta=1
    66                           	psect	text31,global,reloc=2,class=CODE,delta=1
    67                           	psect	text32,global,reloc=2,class=CODE,delta=1
    68                           	psect	text33,global,reloc=2,class=CODE,delta=1
    69                           	psect	text34,global,reloc=2,class=CODE,delta=1
    70                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text36,global,reloc=2,class=CODE,delta=1
    72                           	psect	text37,global,reloc=2,class=CODE,delta=1
    73                           	psect	text38,global,reloc=2,class=CODE,delta=1
    74                           	psect	text39,global,reloc=2,class=CODE,delta=1
    75                           	psect	text40,global,reloc=2,class=CODE,delta=1
    76                           	psect	text41,global,reloc=2,class=CODE,delta=1
    77                           	psect	text42,global,reloc=2,class=CODE,delta=1
    78                           	psect	text43,global,reloc=2,class=CODE,delta=1
    79                           	psect	text44,global,reloc=2,class=CODE,delta=1
    80                           	psect	text45,global,reloc=2,class=CODE,delta=1
    81                           	psect	text46,global,reloc=2,class=CODE,delta=1
    82                           	psect	text47,global,reloc=2,class=CODE,delta=1
    83                           	psect	text48,global,reloc=2,class=CODE,delta=1
    84                           	psect	text49,global,reloc=2,class=CODE,delta=1
    85                           	psect	text50,global,reloc=2,class=CODE,delta=1
    86                           	psect	text51,global,reloc=2,class=CODE,delta=1
    87                           	psect	text52,global,reloc=2,class=CODE,delta=1
    88                           	psect	text53,global,reloc=2,class=CODE,delta=1
    89                           	psect	text54,global,reloc=2,class=CODE,delta=1
    90                           	psect	text55,global,reloc=2,class=CODE,delta=1
    91                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text58,global,reloc=2,class=CODE,delta=1
    94                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text60,global,reloc=2,class=CODE,delta=1
    96                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text70,global,reloc=2,class=CODE,delta=1
   106                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text74,global,reloc=2,class=CODE,delta=1
   110                           	psect	text75,global,reloc=2,class=CODE,delta=1
   111                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text78,global,reloc=2,class=CODE,delta=1
   114                           	psect	text79,global,reloc=2,class=CODE,delta=1
   115                           	psect	text80,global,reloc=2,class=CODE,delta=1
   116                           	psect	text81,global,reloc=2,class=CODE,delta=1
   117                           	psect	text82,global,reloc=2,class=CODE,delta=1
   118                           	psect	text83,global,reloc=2,class=CODE,delta=1
   119                           	psect	text84,global,reloc=2,class=CODE,delta=1
   120                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text87,global,reloc=2,class=CODE,delta=1
   123                           	psect	text88,global,reloc=2,class=CODE,delta=1
   124                           	psect	text89,global,reloc=2,class=CODE,delta=1
   125                           	psect	text90,global,reloc=2,class=CODE,delta=1
   126                           	psect	text91,global,reloc=2,class=CODE,delta=1
   127                           	psect	text92,global,reloc=2,class=CODE,delta=1
   128                           	psect	text93,global,reloc=2,class=CODE,delta=1
   129                           	psect	text94,global,reloc=2,class=CODE,delta=1
   130                           	psect	text95,global,reloc=2,class=CODE,delta=1
   131                           	psect	text96,global,reloc=2,class=CODE,delta=1
   132                           	psect	text97,global,reloc=2,class=CODE,delta=1
   133                           	psect	text98,global,reloc=2,class=CODE,delta=1
   134                           	psect	text99,global,reloc=2,class=CODE,delta=1
   135                           	psect	text100,global,reloc=2,class=CODE,delta=1
   136                           	psect	text101,global,reloc=2,class=CODE,delta=1
   137                           	psect	text102,global,reloc=2,class=CODE,delta=1
   138                           	psect	text103,global,reloc=2,class=CODE,delta=1
   139                           	psect	text104,global,reloc=2,class=CODE,delta=1
   140                           	psect	text105,global,reloc=2,class=CODE,delta=1
   141                           	psect	text106,global,reloc=2,class=CODE,delta=1
   142                           	psect	text107,global,reloc=2,class=CODE,delta=1
   143                           	psect	text108,global,reloc=2,class=CODE,delta=1
   144                           	psect	text109,global,reloc=2,class=CODE,delta=1
   145                           	psect	text110,global,reloc=2,class=CODE,delta=1
   146                           	psect	text111,global,reloc=2,class=CODE,delta=1
   147                           	psect	text112,global,reloc=2,class=CODE,delta=1
   148                           	psect	text113,global,reloc=2,class=CODE,delta=1
   149                           	psect	text114,global,reloc=2,class=CODE,delta=1
   150                           	psect	text115,global,reloc=2,class=CODE,delta=1
   151                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text117,global,reloc=2,class=CODE,delta=1
   153                           	psect	text118,global,reloc=2,class=CODE,delta=1
   154                           	psect	text119,global,reloc=2,class=CODE,delta=1
   155                           	psect	text120,global,reloc=2,class=CODE,delta=1
   156                           	psect	text121,global,reloc=2,class=CODE,delta=1
   157                           	psect	text122,global,reloc=2,class=CODE,delta=1
   158                           	psect	text123,global,reloc=2,class=CODE,delta=1
   159                           	psect	text124,global,reloc=2,class=CODE,delta=1
   160                           	psect	text125,global,reloc=2,class=CODE,delta=1
   161                           	psect	text126,global,reloc=2,class=CODE,delta=1
   162                           	psect	text127,global,reloc=2,class=CODE,delta=1
   163                           	psect	text128,global,reloc=2,class=CODE,delta=1
   164                           	psect	text129,global,reloc=2,class=CODE,delta=1
   165                           	psect	text130,global,reloc=2,class=CODE,delta=1
   166                           	psect	text131,global,reloc=2,class=CODE,delta=1
   167                           	psect	text132,global,reloc=2,class=CODE,delta=1
   168                           	psect	text133,global,reloc=2,class=CODE,delta=1
   169                           	psect	text134,global,reloc=2,class=CODE,delta=1
   170                           	psect	text135,global,reloc=2,class=CODE,delta=1
   171                           	psect	text136,global,reloc=2,class=CODE,delta=1
   172                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text138,global,reloc=2,class=CODE,delta=1
   174                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text140,global,reloc=2,class=CODE,delta=1
   176                           	psect	text141,global,reloc=2,class=CODE,delta=1
   177                           	psect	text142,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text143,global,reloc=2,class=CODE,delta=1
   179                           	psect	text144,global,reloc=2,class=CODE,delta=1
   180                           	psect	text145,global,reloc=2,class=CODE,delta=1
   181                           	psect	text146,global,reloc=2,class=CODE,delta=1
   182                           	psect	text147,global,reloc=2,class=CODE,delta=1
   183                           	psect	text148,global,reloc=2,class=CODE,delta=1
   184                           	psect	text149,global,reloc=2,class=CODE,delta=1
   185                           	psect	text150,global,reloc=2,class=CODE,delta=1
   186                           	psect	text151,global,reloc=2,class=CODE,delta=1
   187                           	psect	text152,global,reloc=2,class=CODE,delta=1
   188                           	psect	text153,global,reloc=2,class=CODE,delta=1
   189                           	psect	text154,global,reloc=2,class=CODE,delta=1
   190                           	psect	text155,global,reloc=2,class=CODE,delta=1
   191                           	psect	text156,global,reloc=2,class=CODE,delta=1
   192                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   193                           	psect	text158,global,reloc=2,class=CODE,delta=1
   194                           	psect	text159,global,reloc=2,class=CODE,delta=1
   195                           	psect	text160,global,reloc=2,class=CODE,delta=1
   196                           	psect	text161,global,reloc=2,class=CODE,delta=1
   197                           	psect	text162,global,reloc=2,class=CODE,delta=1
   198                           	psect	text163,global,reloc=2,class=CODE,delta=1
   199                           	psect	text164,global,reloc=2,class=CODE,delta=1
   200                           	psect	text165,global,reloc=2,class=CODE,delta=1
   201                           	psect	text166,global,reloc=2,class=CODE,delta=1
   202                           	psect	text167,global,reloc=2,class=CODE,delta=1
   203                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   204                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   205                           	psect	text169,global,reloc=2,class=CODE,delta=1
   206                           	psect	text170,global,reloc=2,class=CODE,delta=1
   207                           	psect	text171,global,reloc=2,class=CODE,delta=1
   208                           	psect	text172,global,reloc=2,class=CODE,delta=1
   209                           	psect	text173,global,reloc=2,class=CODE,delta=1
   210                           	psect	text174,global,reloc=2,class=CODE,delta=1
   211                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   214                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   215                           	dabs	1,0x400,48,_BDT
   216                           	dabs	1,0x438,8,_CtrlTrfData
   217                           	dabs	1,0x430,8,_SetupPkt
   218  0000                     
   219                           ; Version 1.45
   220                           ; Generated 16/11/2017 GMT
   221                           ; 
   222                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   223                           ; All rights reserved.
   224                           ; 
   225                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   226                           ; 
   227                           ; Redistribution and use in source and binary forms, with or without modification, are
   228                           ; permitted provided that the following conditions are met:
   229                           ; 
   230                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   231                           ;        conditions and the following disclaimer.
   232                           ; 
   233                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   234                           ;        of conditions and the following disclaimer in the documentation and/or other
   235                           ;        materials provided with the distribution.
   236                           ; 
   237                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   238                           ;        software without specific prior written permission.
   239                           ; 
   240                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   241                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   242                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   243                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   244                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   245                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   246                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   247                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   248                           ; 
   249                           ; 
   250                           ; Code-generator required, PIC18F46J50 Definitions
   251                           ; 
   252                           ; SFR Addresses
   253  0000                     
   254                           	psect	idataBANK1
   255  006296                     __pidataBANK1:
   256                           	opt stack 0
   257                           
   258                           ;initializer for InitGprsNetwork@GprsInitSts
   259  006296  01                 	db	1
   260                           
   261                           	psect	idataBANK2
   262  00621A                     __pidataBANK2:
   263                           	opt stack 0
   264                           
   265                           ;initializer for Terminal@EchoOption
   266  00621A  01                 	db	1
   267                           
   268                           ;initializer for _MainSystemTimebaseFlag
   269  00621B  01                 	db	1
   270                           
   271                           ;initializer for _ConnTimeout
   272  00621C  00                 	db	0
   273  00621D  01                 	db	1
   274  00621E  0000               	dw	0
   275  006220  0000               	dw	0
   276  006222  0000               	dw	0
   277  006224  0000               	dw	0
   278  006226  00                 	db	0
   279                           
   280                           	psect	idataBANK3
   281  005922                     __pidataBANK3:
   282                           	opt stack 0
   283                           
   284                           ;initializer for ModemEvtParser@F9095
   285  005922  2B                 	db	43
   286  005923  43                 	db	67
   287  005924  4D                 	db	77
   288  005925  54                 	db	84
   289  005926  49                 	db	73
   290                           
   291                           ;initializer for ModemEvtParser@F9093
   292  005927  2B                 	db	43
   293  005928  43                 	db	67
   294  005929  4C                 	db	76
   295  00592A  49                 	db	73
   296  00592B  50                 	db	80
   297                           
   298                           ;initializer for ModemEvtParser@F9091
   299  00592C  52                 	db	82
   300  00592D  49                 	db	73
   301  00592E  4E                 	db	78
   302  00592F  47                 	db	71
   303                           
   304                           ;initializer for MyApp_Task@F8996
   305  005930  63                 	db	99
   306  005931  61                 	db	97
   307  005932  74                 	db	116
   308                           
   309                           ;initializer for triggerRelay@F8969
   310  005933  50                 	db	80
   311  005934  00                 	db	0
   312                           
   313                           ;initializer for Term_MainSm@TermDelay
   314  005935  01                 	db	1
   315  005936  01                 	db	1
   316  005937  0000               	dw	0
   317  005939  0000               	dw	0
   318  00593B  0000               	dw	0
   319  00593D  0000               	dw	0
   320  00593F  00                 	db	0
   321                           
   322                           ;initializer for _ConnWait
   323  005940  00                 	db	0
   324  005941  01                 	db	1
   325  005942  0000               	dw	0
   326  005944  0000               	dw	0
   327  005946  0000               	dw	0
   328  005948  0000               	dw	0
   329  00594A  00                 	db	0
   330                           
   331                           ;initializer for SendSmsSm@SwTimer
   332  00594B  01                 	db	1
   333  00594C  01                 	db	1
   334  00594D  0000               	dw	0
   335  00594F  0000               	dw	0
   336  005951  0000               	dw	0
   337  005953  0000               	dw	0
   338  005955  00                 	db	0
   339                           
   340                           ;initializer for CheckModem@Timeout
   341  005956  00                 	db	0
   342  005957  01                 	db	1
   343  005958  0000               	dw	0
   344  00595A  0000               	dw	0
   345  00595C  0000               	dw	0
   346  00595E  0000               	dw	0
   347  005960  00                 	db	0
   348                           
   349                           ;initializer for MyApp_Task@blickTicks
   350  005961  FFFF               	dw	65535
   351                           
   352                           	psect	idataBANK4
   353  0060BA                     __pidataBANK4:
   354                           	opt stack 0
   355                           
   356                           ;initializer for MyApp_Task@F8989
   357  0060BA  2B                 	db	43
   358  0060BB  33                 	db	51
   359  0060BC  39                 	db	57
   360  0060BD  33                 	db	51
   361  0060BE  32                 	db	50
   362  0060BF  30                 	db	48
   363  0060C0  30                 	db	48
   364  0060C1  32                 	db	50
   365  0060C2  37                 	db	55
   366  0060C3  36                 	db	54
   367  0060C4  33                 	db	51
   368  0060C5  31                 	db	49
   369  0060C6  38                 	db	56
   370  0060C7  00                 	db	0
   371                           
   372                           ;initializer for ModemEvtParser@F9097
   373  0060C8  43                 	db	67
   374  0060C9  61                 	db	97
   375  0060CA  6C                 	db	108
   376  0060CB  6C                 	db	108
   377  0060CC  20                 	db	32
   378  0060CD  52                 	db	82
   379  0060CE  65                 	db	101
   380  0060CF  61                 	db	97
   381  0060D0  64                 	db	100
   382  0060D1  79                 	db	121
   383                           
   384                           	psect	idataBANK5
   385  00551C                     __pidataBANK5:
   386                           	opt stack 0
   387                           
   388                           ;initializer for _TaskTable
   389  00551C  74                 	db	low _Mdm_DrvMainFn
   390  00551D  62                 	db	high _Mdm_DrvMainFn
   391  00551E  00                 	db	0
   392  00551F  0000               	dw	0
   393  005521  000A               	dw	10
   394  005523  00                 	db	0
   395  005524  7A                 	db	low _I2cSlv_MainTask
   396  005525  53                 	db	high _I2cSlv_MainTask
   397  005526  00                 	db	0
   398  005527  0000               	dw	0
   399  005529  0001               	dw	1
   400  00552B  00                 	db	0
   401  00552C  6C                 	db	low _Mdm_MainTask
   402  00552D  55                 	db	high _Mdm_MainTask
   403  00552E  00                 	db	0
   404  00552F  0000               	dw	0
   405  005531  0001               	dw	1
   406  005533  00                 	db	0
   407  005534  88                 	db	low _MdmHttp_MainTask
   408  005535  57                 	db	high _MdmHttp_MainTask
   409  005536  00                 	db	0
   410  005537  0000               	dw	0
   411  005539  0001               	dw	1
   412  00553B  00                 	db	0
   413  00553C  76                 	db	low _UsbDevice_MainTask
   414  00553D  5E                 	db	high _UsbDevice_MainTask
   415  00553E  00                 	db	0
   416  00553F  0000               	dw	0
   417  005541  0001               	dw	1
   418  005543  00                 	db	0
   419  005544  06                 	db	low _Wdg_MainTask
   420  005545  5F                 	db	high _Wdg_MainTask
   421  005546  00                 	db	0
   422  005547  0000               	dw	0
   423  005549  0064               	dw	100
   424  00554B  00                 	db	0
   425  00554C  86                 	db	low _Led_MainTask
   426  00554D  39                 	db	high _Led_MainTask
   427  00554E  00                 	db	0
   428  00554F  0000               	dw	0
   429  005551  0032               	dw	50
   430  005553  00                 	db	0
   431  005554  86                 	db	low _Rtcm_MainTask
   432  005555  4A                 	db	high _Rtcm_MainTask
   433  005556  00                 	db	0
   434  005557  0000               	dw	0
   435  005559  0064               	dw	100
   436  00555B  00                 	db	0
   437  00555C  A0                 	db	low _Term_MainTask
   438  00555D  60                 	db	high _Term_MainTask
   439  00555E  00                 	db	0
   440  00555F  0000               	dw	0
   441  005561  0001               	dw	1
   442  005563  00                 	db	0
   443  005564  B8                 	db	low _MyApp_Task
   444  005565  1E                 	db	high _MyApp_Task
   445  005566  00                 	db	0
   446  005567  0000               	dw	0
   447  005569  0064               	dw	100
   448  00556B  00                 	db	0
   449                           
   450                           	psect	mediumconst
   451  00FC26                     __pmediumconst:
   452                           	opt stack 0
   453  00FC26  00                 	db	0
   454  00FC27                     _USB_SD_Ptr:
   455                           	opt stack 0
   456  00FC27  5A                 	db	low _sd000
   457  00FC28  FE                 	db	high _sd000
   458  00FC29  13                 	db	low _sd001
   459  00FC2A  FE                 	db	high _sd001
   460  00FC2B  ED                 	db	low _sd002
   461  00FC2C  FD                 	db	high _sd002
   462  00FC2D                     __end_of_USB_SD_Ptr:
   463                           	opt stack 0
   464  00FC2D                     _USB_CD_Ptr:
   465                           	opt stack 0
   466  00FC2D  AA                 	db	low _configDescriptor1
   467  00FC2E  FD                 	db	high _configDescriptor1
   468  00FC2F                     __end_of_USB_CD_Ptr:
   469                           	opt stack 0
   470  00FC2F                     _TaskNumber:
   471                           	opt stack 0
   472  00FC2F  000A               	dw	10
   473  00FC31                     __end_of_TaskNumber:
   474                           	opt stack 0
   475  00FC31                     _MsgFormat:
   476                           	opt stack 0
   477  00FC31  48                 	db	72
   478  00FC32  6F                 	db	111
   479  00FC33  73                 	db	115
   480  00FC34  74                 	db	116
   481  00FC35  20                 	db	32
   482  00FC36  6D                 	db	109
   483  00FC37  65                 	db	101
   484  00FC38  73                 	db	115
   485  00FC39  73                 	db	115
   486  00FC3A  61                 	db	97
   487  00FC3B  67                 	db	103
   488  00FC3C  65                 	db	101
   489  00FC3D  20                 	db	32
   490  00FC3E  66                 	db	102
   491  00FC3F  6F                 	db	111
   492  00FC40  72                 	db	114
   493  00FC41  6D                 	db	109
   494  00FC42  61                 	db	97
   495  00FC43  74                 	db	116
   496  00FC44  3A                 	db	58
   497  00FC45  20                 	db	32
   498  00FC46  0D                 	db	13
   499  00FC47  0A                 	db	10
   500  00FC48  5B                 	db	91
   501  00FC49  6F                 	db	111
   502  00FC4A  70                 	db	112
   503  00FC4B  5F                 	db	95
   504  00FC4C  74                 	db	116
   505  00FC4D  79                 	db	121
   506  00FC4E  70                 	db	112
   507  00FC4F  65                 	db	101
   508  00FC50  5D                 	db	93
   509  00FC51  3A                 	db	58
   510  00FC52  5B                 	db	91
   511  00FC53  6F                 	db	111
   512  00FC54  70                 	db	112
   513  00FC55  5D                 	db	93
   514  00FC56  3A                 	db	58
   515  00FC57  5B                 	db	91
   516  00FC58  6C                 	db	108
   517  00FC59  65                 	db	101
   518  00FC5A  6E                 	db	110
   519  00FC5B  5D                 	db	93
   520  00FC5C  3A                 	db	58
   521  00FC5D  5B                 	db	91
   522  00FC5E  61                 	db	97
   523  00FC5F  64                 	db	100
   524  00FC60  64                 	db	100
   525  00FC61  72                 	db	114
   526  00FC62  5D                 	db	93
   527  00FC63  3A                 	db	58
   528  00FC64  5B                 	db	91
   529  00FC65  70                 	db	112
   530  00FC66  61                 	db	97
   531  00FC67  79                 	db	121
   532  00FC68  6C                 	db	108
   533  00FC69  6F                 	db	111
   534  00FC6A  61                 	db	97
   535  00FC6B  64                 	db	100
   536  00FC6C  5D                 	db	93
   537  00FC6D  0D                 	db	13
   538  00FC6E  0A                 	db	10
   539  00FC6F  0D                 	db	13
   540  00FC70  0A                 	db	10
   541  00FC71  5B                 	db	91
   542  00FC72  6F                 	db	111
   543  00FC73  70                 	db	112
   544  00FC74  5F                 	db	95
   545  00FC75  74                 	db	116
   546  00FC76  79                 	db	121
   547  00FC77  70                 	db	112
   548  00FC78  65                 	db	101
   549  00FC79  5D                 	db	93
   550  00FC7A  20                 	db	32
   551  00FC7B  3D                 	db	61
   552  00FC7C  20                 	db	32
   553  00FC7D  53                 	db	83
   554  00FC7E  4F                 	db	79
   555  00FC7F  2C                 	db	44
   556  00FC80  53                 	db	83
   557  00FC81  42                 	db	66
   558  00FC82  0D                 	db	13
   559  00FC83  0A                 	db	10
   560  00FC84  5B                 	db	91
   561  00FC85  6F                 	db	111
   562  00FC86  70                 	db	112
   563  00FC87  5D                 	db	93
   564  00FC88  20                 	db	32
   565  00FC89  3D                 	db	61
   566  00FC8A  20                 	db	32
   567  00FC8B  52                 	db	82
   568  00FC8C  3A                 	db	58
   569  00FC8D  20                 	db	32
   570  00FC8E  72                 	db	114
   571  00FC8F  65                 	db	101
   572  00FC90  61                 	db	97
   573  00FC91  64                 	db	100
   574  00FC92  2C                 	db	44
   575  00FC93  57                 	db	87
   576  00FC94  3A                 	db	58
   577  00FC95  20                 	db	32
   578  00FC96  77                 	db	119
   579  00FC97  72                 	db	114
   580  00FC98  69                 	db	105
   581  00FC99  74                 	db	116
   582  00FC9A  65                 	db	101
   583  00FC9B  0D                 	db	13
   584  00FC9C  0A                 	db	10
   585  00FC9D  5B                 	db	91
   586  00FC9E  6C                 	db	108
   587  00FC9F  65                 	db	101
   588  00FCA0  6E                 	db	110
   589  00FCA1  5D                 	db	93
   590  00FCA2  20                 	db	32
   591  00FCA3  3D                 	db	61
   592  00FCA4  20                 	db	32
   593  00FCA5  32                 	db	50
   594  00FCA6  20                 	db	32
   595  00FCA7  62                 	db	98
   596  00FCA8  79                 	db	121
   597  00FCA9  74                 	db	116
   598  00FCAA  65                 	db	101
   599  00FCAB  20                 	db	32
   600  00FCAC  41                 	db	65
   601  00FCAD  53                 	db	83
   602  00FCAE  43                 	db	67
   603  00FCAF  49                 	db	73
   604  00FCB0  49                 	db	73
   605  00FCB1  0D                 	db	13
   606  00FCB2  0A                 	db	10
   607  00FCB3  5B                 	db	91
   608  00FCB4  61                 	db	97
   609  00FCB5  64                 	db	100
   610  00FCB6  64                 	db	100
   611  00FCB7  72                 	db	114
   612  00FCB8  5D                 	db	93
   613  00FCB9  20                 	db	32
   614  00FCBA  3D                 	db	61
   615  00FCBB  20                 	db	32
   616  00FCBC  32                 	db	50
   617  00FCBD  20                 	db	32
   618  00FCBE  62                 	db	98
   619  00FCBF  79                 	db	121
   620  00FCC0  74                 	db	116
   621  00FCC1  65                 	db	101
   622  00FCC2  20                 	db	32
   623  00FCC3  41                 	db	65
   624  00FCC4  53                 	db	83
   625  00FCC5  43                 	db	67
   626  00FCC6  49                 	db	73
   627  00FCC7  49                 	db	73
   628  00FCC8  0D                 	db	13
   629  00FCC9  0A                 	db	10
   630  00FCCA  5B                 	db	91
   631  00FCCB  70                 	db	112
   632  00FCCC  61                 	db	97
   633  00FCCD  79                 	db	121
   634  00FCCE  6C                 	db	108
   635  00FCCF  6F                 	db	111
   636  00FCD0  61                 	db	97
   637  00FCD1  64                 	db	100
   638  00FCD2  5D                 	db	93
   639  00FCD3  20                 	db	32
   640  00FCD4  3D                 	db	61
   641  00FCD5  20                 	db	32
   642  00FCD6  6D                 	db	109
   643  00FCD7  61                 	db	97
   644  00FCD8  78                 	db	120
   645  00FCD9  20                 	db	32
   646  00FCDA  32                 	db	50
   647  00FCDB  30                 	db	48
   648  00FCDC  20                 	db	32
   649  00FCDD  62                 	db	98
   650  00FCDE  79                 	db	121
   651  00FCDF  74                 	db	116
   652  00FCE0  65                 	db	101
   653  00FCE1  20                 	db	32
   654  00FCE2  41                 	db	65
   655  00FCE3  53                 	db	83
   656  00FCE4  43                 	db	67
   657  00FCE5  49                 	db	73
   658  00FCE6  49                 	db	73
   659  00FCE7  0D                 	db	13
   660  00FCE8  0A                 	db	10
   661  00FCE9  0D                 	db	13
   662  00FCEA  0A                 	db	10
   663  00FCEB  54                 	db	84
   664  00FCEC  65                 	db	101
   665  00FCED  72                 	db	114
   666  00FCEE  6D                 	db	109
   667  00FCEF  69                 	db	105
   668  00FCF0  6E                 	db	110
   669  00FCF1  61                 	db	97
   670  00FCF2  6C                 	db	108
   671  00FCF3  20                 	db	32
   672  00FCF4  4D                 	db	77
   673  00FCF5  6F                 	db	111
   674  00FCF6  64                 	db	100
   675  00FCF7  65                 	db	101
   676  00FCF8  3A                 	db	58
   677  00FCF9  20                 	db	32
   678  00FCFA  43                 	db	67
   679  00FCFB  4F                 	db	79
   680  00FCFC  4D                 	db	77
   681  00FCFD  4D                 	db	77
   682  00FCFE  41                 	db	65
   683  00FCFF  4E                 	db	78
   684  00FD00  44                 	db	68
   685  00FD01  20                 	db	32
   686  00FD02  4D                 	db	77
   687  00FD03  4F                 	db	79
   688  00FD04  44                 	db	68
   689  00FD05  45                 	db	69
   690  00FD06  0D                 	db	13
   691  00FD07  0A                 	db	10
   692  00FD08  4D                 	db	77
   693  00FD09  6F                 	db	111
   694  00FD0A  64                 	db	100
   695  00FD0B  65                 	db	101
   696  00FD0C  6D                 	db	109
   697  00FD0D  20                 	db	32
   698  00FD0E  54                 	db	84
   699  00FD0F  79                 	db	121
   700  00FD10  70                 	db	112
   701  00FD11  65                 	db	101
   702  00FD12  3A                 	db	58
   703  00FD13  20                 	db	32
   704  00FD14  47                 	db	71
   705  00FD15  53                 	db	83
   706  00FD16  4D                 	db	77
   707  00FD17  2F                 	db	47
   708  00FD18  47                 	db	71
   709  00FD19  50                 	db	80
   710  00FD1A  52                 	db	82
   711  00FD1B  53                 	db	83
   712  00FD1C  0D                 	db	13
   713  00FD1D  0A                 	db	10
   714  00FD1E  0D                 	db	13
   715  00FD1F  0A                 	db	10
   716  00FD20  00                 	db	0
   717  00FD21                     __end_of_MsgFormat:
   718                           	opt stack 0
   719  00FD21                     _Welcome:
   720                           	opt stack 0
   721  00FD21  2A                 	db	42
   722  00FD22  2A                 	db	42
   723  00FD23  2A                 	db	42
   724  00FD24  2A                 	db	42
   725  00FD25  2A                 	db	42
   726  00FD26  2A                 	db	42
   727  00FD27  2A                 	db	42
   728  00FD28  2A                 	db	42
   729  00FD29  2A                 	db	42
   730  00FD2A  2A                 	db	42
   731  00FD2B  2A                 	db	42
   732  00FD2C  2A                 	db	42
   733  00FD2D  2A                 	db	42
   734  00FD2E  2A                 	db	42
   735  00FD2F  2A                 	db	42
   736  00FD30  2A                 	db	42
   737  00FD31  2A                 	db	42
   738  00FD32  2A                 	db	42
   739  00FD33  2A                 	db	42
   740  00FD34  2A                 	db	42
   741  00FD35  2A                 	db	42
   742  00FD36  2A                 	db	42
   743  00FD37  2A                 	db	42
   744  00FD38  2A                 	db	42
   745  00FD39  2A                 	db	42
   746  00FD3A  2A                 	db	42
   747  00FD3B  2A                 	db	42
   748  00FD3C  2A                 	db	42
   749  00FD3D  2A                 	db	42
   750  00FD3E  2A                 	db	42
   751  00FD3F  2A                 	db	42
   752  00FD40  2A                 	db	42
   753  00FD41  2A                 	db	42
   754  00FD42  2A                 	db	42
   755  00FD43  2A                 	db	42
   756  00FD44  2A                 	db	42
   757  00FD45  2A                 	db	42
   758  00FD46  2A                 	db	42
   759  00FD47  2A                 	db	42
   760  00FD48  2A                 	db	42
   761  00FD49  2A                 	db	42
   762  00FD4A  2A                 	db	42
   763  00FD4B  2A                 	db	42
   764  00FD4C  2A                 	db	42
   765  00FD4D  2A                 	db	42
   766  00FD4E  2A                 	db	42
   767  00FD4F  2A                 	db	42
   768  00FD50  2A                 	db	42
   769  00FD51  2A                 	db	42
   770  00FD52  0D                 	db	13
   771  00FD53  0A                 	db	10
   772  00FD54  20                 	db	32
   773  00FD55  20                 	db	32
   774  00FD56  20                 	db	32
   775  00FD57  20                 	db	32
   776  00FD58  20                 	db	32
   777  00FD59  20                 	db	32
   778  00FD5A  20                 	db	32
   779  00FD5B  20                 	db	32
   780  00FD5C  20                 	db	32
   781  00FD5D  20                 	db	32
   782  00FD5E  20                 	db	32
   783  00FD5F  20                 	db	32
   784  00FD60  20                 	db	32
   785  00FD61  20                 	db	32
   786  00FD62  20                 	db	32
   787  00FD63  20                 	db	32
   788  00FD64  20                 	db	32
   789  00FD65  20                 	db	32
   790  00FD66  4D                 	db	77
   791  00FD67  45                 	db	69
   792  00FD68  52                 	db	82
   793  00FD69  43                 	db	67
   794  00FD6A  55                 	db	85
   795  00FD6B  52                 	db	82
   796  00FD6C  59                 	db	89
   797  00FD6D  20                 	db	32
   798  00FD6E  53                 	db	83
   799  00FD6F  59                 	db	89
   800  00FD70  53                 	db	83
   801  00FD71  54                 	db	84
   802  00FD72  45                 	db	69
   803  00FD73  4D                 	db	77
   804  00FD74  0D                 	db	13
   805  00FD75  0A                 	db	10
   806  00FD76  2A                 	db	42
   807  00FD77  2A                 	db	42
   808  00FD78  2A                 	db	42
   809  00FD79  2A                 	db	42
   810  00FD7A  2A                 	db	42
   811  00FD7B  2A                 	db	42
   812  00FD7C  2A                 	db	42
   813  00FD7D  2A                 	db	42
   814  00FD7E  2A                 	db	42
   815  00FD7F  2A                 	db	42
   816  00FD80  2A                 	db	42
   817  00FD81  2A                 	db	42
   818  00FD82  2A                 	db	42
   819  00FD83  2A                 	db	42
   820  00FD84  2A                 	db	42
   821  00FD85  2A                 	db	42
   822  00FD86  2A                 	db	42
   823  00FD87  2A                 	db	42
   824  00FD88  2A                 	db	42
   825  00FD89  2A                 	db	42
   826  00FD8A  2A                 	db	42
   827  00FD8B  2A                 	db	42
   828  00FD8C  2A                 	db	42
   829  00FD8D  2A                 	db	42
   830  00FD8E  2A                 	db	42
   831  00FD8F  2A                 	db	42
   832  00FD90  2A                 	db	42
   833  00FD91  2A                 	db	42
   834  00FD92  2A                 	db	42
   835  00FD93  2A                 	db	42
   836  00FD94  2A                 	db	42
   837  00FD95  2A                 	db	42
   838  00FD96  2A                 	db	42
   839  00FD97  2A                 	db	42
   840  00FD98  2A                 	db	42
   841  00FD99  2A                 	db	42
   842  00FD9A  2A                 	db	42
   843  00FD9B  2A                 	db	42
   844  00FD9C  2A                 	db	42
   845  00FD9D  2A                 	db	42
   846  00FD9E  2A                 	db	42
   847  00FD9F  2A                 	db	42
   848  00FDA0  2A                 	db	42
   849  00FDA1  2A                 	db	42
   850  00FDA2  2A                 	db	42
   851  00FDA3  2A                 	db	42
   852  00FDA4  2A                 	db	42
   853  00FDA5  2A                 	db	42
   854  00FDA6  2A                 	db	42
   855  00FDA7  0D                 	db	13
   856  00FDA8  0A                 	db	10
   857  00FDA9  00                 	db	0
   858  00FDAA                     __end_of_Welcome:
   859                           	opt stack 0
   860  00FDAA                     _configDescriptor1:
   861                           	opt stack 0
   862  00FDAA  09                 	db	9
   863  00FDAB  02                 	db	2
   864  00FDAC  43                 	db	67
   865  00FDAD  00                 	db	0
   866  00FDAE  02                 	db	2
   867  00FDAF  01                 	db	1
   868  00FDB0  00                 	db	0
   869  00FDB1  C0                 	db	192
   870  00FDB2  32                 	db	50
   871  00FDB3  09                 	db	9
   872  00FDB4  04                 	db	4
   873  00FDB5  00                 	db	0
   874  00FDB6  00                 	db	0
   875  00FDB7  01                 	db	1
   876  00FDB8  02                 	db	2
   877  00FDB9  02                 	db	2
   878  00FDBA  01                 	db	1
   879  00FDBB  00                 	db	0
   880  00FDBC  05                 	db	5
   881  00FDBD  24                 	db	36
   882  00FDBE  00                 	db	0
   883  00FDBF  10                 	db	16
   884  00FDC0  01                 	db	1
   885  00FDC1  04                 	db	4
   886  00FDC2  24                 	db	36
   887  00FDC3  02                 	db	2
   888  00FDC4  02                 	db	2
   889  00FDC5  05                 	db	5
   890  00FDC6  24                 	db	36
   891  00FDC7  06                 	db	6
   892  00FDC8  00                 	db	0
   893  00FDC9  01                 	db	1
   894  00FDCA  05                 	db	5
   895  00FDCB  24                 	db	36
   896  00FDCC  01                 	db	1
   897  00FDCD  00                 	db	0
   898  00FDCE  01                 	db	1
   899  00FDCF  07                 	db	7
   900  00FDD0  05                 	db	5
   901  00FDD1  81                 	db	129
   902  00FDD2  03                 	db	3
   903  00FDD3  08                 	db	8
   904  00FDD4  00                 	db	0
   905  00FDD5  02                 	db	2
   906  00FDD6  09                 	db	9
   907  00FDD7  04                 	db	4
   908  00FDD8  01                 	db	1
   909  00FDD9  00                 	db	0
   910  00FDDA  02                 	db	2
   911  00FDDB  0A                 	db	10
   912  00FDDC  00                 	db	0
   913  00FDDD  00                 	db	0
   914  00FDDE  00                 	db	0
   915  00FDDF  07                 	db	7
   916  00FDE0  05                 	db	5
   917  00FDE1  02                 	db	2
   918  00FDE2  02                 	db	2
   919  00FDE3  40                 	db	64
   920  00FDE4  00                 	db	0
   921  00FDE5  00                 	db	0
   922  00FDE6  07                 	db	7
   923  00FDE7  05                 	db	5
   924  00FDE8  82                 	db	130
   925  00FDE9  02                 	db	2
   926  00FDEA  40                 	db	64
   927  00FDEB  00                 	db	0
   928  00FDEC  00                 	db	0
   929  00FDED                     __end_of_configDescriptor1:
   930                           	opt stack 0
   931  00FDED                     _sd002:
   932                           	opt stack 0
   933  00FDED  26                 	db	38
   934  00FDEE  03                 	db	3
   935  00FDEF  0054               	dw	84
   936  00FDF1  0065               	dw	101
   937  00FDF3  0072               	dw	114
   938  00FDF5  006D               	dw	109
   939  00FDF7  0069               	dw	105
   940  00FDF9  006E               	dw	110
   941  00FDFB  0061               	dw	97
   942  00FDFD  006C               	dw	108
   943  00FDFF  0020               	dw	32
   944  00FE01  0049               	dw	73
   945  00FE03  006E               	dw	110
   946  00FE05  0074               	dw	116
   947  00FE07  0065               	dw	101
   948  00FE09  0072               	dw	114
   949  00FE0B  0066               	dw	102
   950  00FE0D  0061               	dw	97
   951  00FE0F  0063               	dw	99
   952  00FE11  0065               	dw	101
   953  00FE13                     __end_of_sd002:
   954                           	opt stack 0
   955  00FE13                     _sd001:
   956                           	opt stack 0
   957  00FE13  1E                 	db	30
   958  00FE14  03                 	db	3
   959  00FE15  004D               	dw	77
   960  00FE17  0065               	dw	101
   961  00FE19  0072               	dw	114
   962  00FE1B  0063               	dw	99
   963  00FE1D  0075               	dw	117
   964  00FE1F  0072               	dw	114
   965  00FE21  0079               	dw	121
   966  00FE23  0020               	dw	32
   967  00FE25  0053               	dw	83
   968  00FE27  0079               	dw	121
   969  00FE29  0073               	dw	115
   970  00FE2B  0074               	dw	116
   971  00FE2D  0065               	dw	101
   972  00FE2F  006D               	dw	109
   973  00FE31                     __end_of_sd001:
   974                           	opt stack 0
   975  00FE31                     _MsgReady:
   976                           	opt stack 0
   977  00FE31  0D                 	db	13
   978  00FE32  0A                 	db	10
   979  00FE33  53                 	db	83
   980  00FE34  79                 	db	121
   981  00FE35  73                 	db	115
   982  00FE36  74                 	db	116
   983  00FE37  65                 	db	101
   984  00FE38  6D                 	db	109
   985  00FE39  20                 	db	32
   986  00FE3A  52                 	db	82
   987  00FE3B  65                 	db	101
   988  00FE3C  61                 	db	97
   989  00FE3D  64                 	db	100
   990  00FE3E  79                 	db	121
   991  00FE3F  2E                 	db	46
   992  00FE40  2E                 	db	46
   993  00FE41  2E                 	db	46
   994  00FE42  20                 	db	32
   995  00FE43  0D                 	db	13
   996  00FE44  0A                 	db	10
   997  00FE45  0D                 	db	13
   998  00FE46  0A                 	db	10
   999  00FE47  00                 	db	0
  1000  00FE48                     __end_of_MsgReady:
  1001                           	opt stack 0
  1002  00FE48                     _device_dsc:
  1003                           	opt stack 0
  1004  00FE48  12                 	db	18
  1005  00FE49  01                 	db	1
  1006  00FE4A  0200               	dw	512
  1007  00FE4C  02                 	db	2
  1008  00FE4D  00                 	db	0
  1009  00FE4E  00                 	db	0
  1010  00FE4F  08                 	db	8
  1011  00FE50  04D8               	dw	1240
  1012  00FE52  000A               	dw	10
  1013  00FE54  0100               	dw	256
  1014  00FE56  01                 	db	1
  1015  00FE57  02                 	db	2
  1016  00FE58  00                 	db	0
  1017  00FE59  01                 	db	1
  1018  00FE5A                     __end_of_device_dsc:
  1019                           	opt stack 0
  1020  00FE5A                     _sd000:
  1021                           	opt stack 0
  1022  00FE5A  04                 	db	4
  1023  00FE5B  03                 	db	3
  1024  00FE5C  0409               	dw	1033
  1025  00FE5E                     __end_of_sd000:
  1026                           	opt stack 0
  1027  0000                     _RPINR1	set	3815
  1028  0000                     _UEP0bits	set	3878
  1029  0000                     _UIEbits	set	3894
  1030  0000                     _UADDR	set	3896
  1031  0000                     _UIE	set	3894
  1032  0000                     _UEIE	set	3895
  1033  0000                     _UCFG	set	3897
  1034  0000                     _RTCCAL	set	3902
  1035  0000                     _PADCFG1bits	set	3900
  1036  0000                     _RTCCFGbits	set	3903
  1037  0000                     _DSCONLbits	set	3916
  1038  0000                     _DSGPR1	set	3919
  1039  0000                     _DSGPR0	set	3918
  1040  0000                     _DSCONHbits	set	3917
  1041  0000                     _ANCON1bits	set	3913
  1042  0000                     _UEP1	set	3879
  1043  0000                     _UEP0	set	3878
  1044  0000                     _T1CONbits	set	4045
  1045  0000                     _PORTDbits	set	3971
  1046  0000                     _USTAT	set	3940
  1047  0000                     _PIR2bits	set	4001
  1048  0000                     _UCON	set	3941
  1049  0000                     _UIRbits	set	3938
  1050  0000                     _UCONbits	set	3941
  1051  0000                     _UIR	set	3938
  1052  0000                     _UEIR	set	3939
  1053  0000                     _PIE2bits	set	4000
  1054  0000                     _BAUDCON2	set	3964
  1055  0000                     _RCSTA2	set	3996
  1056  0000                     _BAUDCON1	set	3966
  1057  0000                     _RCSTA1	set	4012
  1058  0000                     _TRISCbits	set	3988
  1059  0000                     _TXSTA2	set	4008
  1060  0000                     _TXSTA1	set	4013
  1061  0000                     _RCREG2	set	4010
  1062  0000                     _RCREG1	set	4015
  1063  0000                     _TXREG2	set	4009
  1064  0000                     _TXREG1	set	4014
  1065  0000                     _SPBRG2	set	4011
  1066  0000                     _SPBRGH2	set	3965
  1067  0000                     _SPBRG1	set	4016
  1068  0000                     _SPBRGH1	set	3967
  1069  0000                     _PR4	set	3959
  1070  0000                     _PR2	set	4043
  1071  0000                     _PIE1bits	set	3997
  1072  0000                     _IPR1bits	set	3999
  1073  0000                     _T4CONbits	set	3958
  1074  0000                     _T2CONbits	set	4042
  1075  0000                     _ALRMVALL	set	3982
  1076  0000                     _ALRMVALH	set	3983
  1077  0000                     _RTCVALH	set	3993
  1078  0000                     _RTCVALL	set	3992
  1079  0000                     _ALRMRPTbits	set	3984
  1080  0000                     _ALRMCFGbits	set	3985
  1081  0000                     _PIE3bits	set	4003
  1082  0000                     _IPR3bits	set	4005
  1083  0000                     _OSCCONbits	set	4051
  1084  0000                     _PORTEbits	set	3972
  1085  0000                     _TRISEbits	set	3990
  1086  0000                     _WDTCONbits	set	4032
  1087  0000                     _INTCON2bits	set	4081
  1088  0000                     _TRISBbits	set	3987
  1089  0000                     _OSCTUNEbits	set	3995
  1090  0000                     _SSP2CON1	set	3954
  1091  0000                     _TRISDbits	set	3989
  1092  0000                     _SSP2BUF	set	3957
  1093  0000                     _SSP2CON2bits	set	3953
  1094  0000                     _SSP2STAT	set	3955
  1095  0000                     _SSP2CON2	set	3953
  1096  0000                     _SSP2ADD	set	3956
  1097  0000                     _PIR1bits	set	3998
  1098  0000                     _PIR3bits	set	4004
  1099  0000                     _INTCON3bits	set	4080
  1100  0000                     _INTCONbits	set	4082
  1101  0000                     _RCONbits	set	4048
  1102  00FE5E                     STR_21:
  1103  00FE5E  20                 	db	32
  1104  00FE5F  4C                 	db	76	;'L'
  1105  00FE60  61                 	db	97	;'a'
  1106  00FE61  7A                 	db	122	;'z'
  1107  00FE62  79                 	db	121	;'y'
  1108  00FE63  20                 	db	32
  1109  00FE64  64                 	db	100	;'d'
  1110  00FE65  65                 	db	101	;'e'
  1111  00FE66  76                 	db	118	;'v'
  1112  00FE67  69                 	db	105	;'i'
  1113  00FE68  63                 	db	99	;'c'
  1114  00FE69  65                 	db	101	;'e'
  1115  00FE6A  2E                 	db	46
  1116  00FE6B  2E                 	db	46
  1117  00FE6C  2E                 	db	46
  1118  00FE6D  79                 	db	121	;'y'
  1119  00FE6E  6F                 	db	111	;'o'
  1120  00FE6F  75                 	db	117	;'u'
  1121  00FE70  27                 	db	39
  1122  00FE71  76                 	db	118	;'v'
  1123  00FE72  65                 	db	101	;'e'
  1124  00FE73  20                 	db	32
  1125  00FE74  62                 	db	98	;'b'
  1126  00FE75  65                 	db	101	;'e'
  1127  00FE76  65                 	db	101	;'e'
  1128  00FE77  6E                 	db	110	;'n'
  1129  00FE78  20                 	db	32
  1130  00FE79  74                 	db	116	;'t'
  1131  00FE7A  69                 	db	105	;'i'
  1132  00FE7B  6D                 	db	109	;'m'
  1133  00FE7C  65                 	db	101	;'e'
  1134  00FE7D  64                 	db	100	;'d'
  1135  00FE7E  2D                 	db	45
  1136  00FE7F  6F                 	db	111	;'o'
  1137  00FE80  75                 	db	117	;'u'
  1138  00FE81  74                 	db	116	;'t'
  1139  00FE82  21                 	db	33
  1140  00FE83  21                 	db	33
  1141  00FE84  21                 	db	33
  1142  00FE85  0D                 	db	13
  1143  00FE86  0A                 	db	10
  1144  00FE87  00                 	db	0
  1145  00FE88                     STR_8:
  1146  00FE88  41                 	db	65	;'A'
  1147  00FE89  54                 	db	84	;'T'
  1148  00FE8A  2B                 	db	43
  1149  00FE8B  53                 	db	83	;'S'
  1150  00FE8C  41                 	db	65	;'A'
  1151  00FE8D  50                 	db	80	;'P'
  1152  00FE8E  42                 	db	66	;'B'
  1153  00FE8F  52                 	db	82	;'R'
  1154  00FE90  3D                 	db	61	;'='
  1155  00FE91  33                 	db	51	;'3'
  1156  00FE92  2C                 	db	44
  1157  00FE93  31                 	db	49	;'1'
  1158  00FE94  2C                 	db	44
  1159  00FE95  22                 	db	34
  1160  00FE96  43                 	db	67	;'C'
  1161  00FE97  6F                 	db	111	;'o'
  1162  00FE98  6E                 	db	110	;'n'
  1163  00FE99  74                 	db	116	;'t'
  1164  00FE9A  79                 	db	121	;'y'
  1165  00FE9B  70                 	db	112	;'p'
  1166  00FE9C  65                 	db	101	;'e'
  1167  00FE9D  22                 	db	34
  1168  00FE9E  2C                 	db	44
  1169  00FE9F  22                 	db	34
  1170  00FEA0  47                 	db	71	;'G'
  1171  00FEA1  50                 	db	80	;'P'
  1172  00FEA2  52                 	db	82	;'R'
  1173  00FEA3  53                 	db	83	;'S'
  1174  00FEA4  22                 	db	34
  1175  00FEA5  0D                 	db	13
  1176  00FEA6  00                 	db	0
  1177  00FEA7                     STR_14:
  1178  00FEA7  41                 	db	65	;'A'
  1179  00FEA8  54                 	db	84	;'T'
  1180  00FEA9  2B                 	db	43
  1181  00FEAA  48                 	db	72	;'H'
  1182  00FEAB  54                 	db	84	;'T'
  1183  00FEAC  54                 	db	84	;'T'
  1184  00FEAD  50                 	db	80	;'P'
  1185  00FEAE  50                 	db	80	;'P'
  1186  00FEAF  41                 	db	65	;'A'
  1187  00FEB0  52                 	db	82	;'R'
  1188  00FEB1  41                 	db	65	;'A'
  1189  00FEB2  3D                 	db	61	;'='
  1190  00FEB3  22                 	db	34
  1191  00FEB4  43                 	db	67	;'C'
  1192  00FEB5  49                 	db	73	;'I'
  1193  00FEB6  44                 	db	68	;'D'
  1194  00FEB7  22                 	db	34
  1195  00FEB8  2C                 	db	44
  1196  00FEB9  31                 	db	49	;'1'
  1197  00FEBA  0D                 	db	13
  1198  00FEBB  00                 	db	0
  1199  00FEBC                     STR_9:
  1200  00FEBC  41                 	db	65	;'A'
  1201  00FEBD  54                 	db	84	;'T'
  1202  00FEBE  2B                 	db	43
  1203  00FEBF  53                 	db	83	;'S'
  1204  00FEC0  41                 	db	65	;'A'
  1205  00FEC1  50                 	db	80	;'P'
  1206  00FEC2  42                 	db	66	;'B'
  1207  00FEC3  52                 	db	82	;'R'
  1208  00FEC4  3D                 	db	61	;'='
  1209  00FEC5  33                 	db	51	;'3'
  1210  00FEC6  2C                 	db	44
  1211  00FEC7  31                 	db	49	;'1'
  1212  00FEC8  2C                 	db	44
  1213  00FEC9  22                 	db	34
  1214  00FECA  41                 	db	65	;'A'
  1215  00FECB  50                 	db	80	;'P'
  1216  00FECC  4E                 	db	78	;'N'
  1217  00FECD  22                 	db	34
  1218  00FECE  2C                 	db	44
  1219  00FECF  22                 	db	34
  1220  00FED0  00                 	db	0
  1221  00FED1                     STR_23:
  1222  00FED1  46                 	db	70	;'F'
  1223  00FED2  72                 	db	114	;'r'
  1224  00FED3  61                 	db	97	;'a'
  1225  00FED4  6D                 	db	109	;'m'
  1226  00FED5  65                 	db	101	;'e'
  1227  00FED6  77                 	db	119	;'w'
  1228  00FED7  6F                 	db	111	;'o'
  1229  00FED8  72                 	db	114	;'r'
  1230  00FED9  6B                 	db	107	;'k'
  1231  00FEDA  20                 	db	32
  1232  00FEDB  56                 	db	86	;'V'
  1233  00FEDC  65                 	db	101	;'e'
  1234  00FEDD  72                 	db	114	;'r'
  1235  00FEDE  73                 	db	115	;'s'
  1236  00FEDF  69                 	db	105	;'i'
  1237  00FEE0  6F                 	db	111	;'o'
  1238  00FEE1  6E                 	db	110	;'n'
  1239  00FEE2  3A                 	db	58	;':'
  1240  00FEE3  20                 	db	32
  1241  00FEE4  00                 	db	0
  1242  00FEE5                     STR_15:
  1243  00FEE5  41                 	db	65	;'A'
  1244  00FEE6  54                 	db	84	;'T'
  1245  00FEE7  2B                 	db	43
  1246  00FEE8  48                 	db	72	;'H'
  1247  00FEE9  54                 	db	84	;'T'
  1248  00FEEA  54                 	db	84	;'T'
  1249  00FEEB  50                 	db	80	;'P'
  1250  00FEEC  50                 	db	80	;'P'
  1251  00FEED  41                 	db	65	;'A'
  1252  00FEEE  52                 	db	82	;'R'
  1253  00FEEF  41                 	db	65	;'A'
  1254  00FEF0  3D                 	db	61	;'='
  1255  00FEF1  22                 	db	34
  1256  00FEF2  55                 	db	85	;'U'
  1257  00FEF3  52                 	db	82	;'R'
  1258  00FEF4  4C                 	db	76	;'L'
  1259  00FEF5  22                 	db	34
  1260  00FEF6  2C                 	db	44
  1261  00FEF7  22                 	db	34
  1262  00FEF8  00                 	db	0
  1263  00FEF9                     STR_29:
  1264  00FEF9  41                 	db	65	;'A'
  1265  00FEFA  54                 	db	84	;'T'
  1266  00FEFB  2B                 	db	43
  1267  00FEFC  43                 	db	67	;'C'
  1268  00FEFD  4D                 	db	77	;'M'
  1269  00FEFE  47                 	db	71	;'G'
  1270  00FEFF  44                 	db	68	;'D'
  1271  00FF00  41                 	db	65	;'A'
  1272  00FF01  3D                 	db	61	;'='
  1273  00FF02  44                 	db	68	;'D'
  1274  00FF03  45                 	db	69	;'E'
  1275  00FF04  4C                 	db	76	;'L'
  1276  00FF05  20                 	db	32
  1277  00FF06  41                 	db	65	;'A'
  1278  00FF07  4C                 	db	76	;'L'
  1279  00FF08  4C                 	db	76	;'L'
  1280  00FF09  0D                 	db	13
  1281  00FF0A  0A                 	db	10
  1282  00FF0B  00                 	db	0
  1283  00FF0C                     STR_27:
  1284  00FF0C  42                 	db	66	;'B'
  1285  00FF0D  75                 	db	117	;'u'
  1286  00FF0E  69                 	db	105	;'i'
  1287  00FF0F  6C                 	db	108	;'l'
  1288  00FF10  64                 	db	100	;'d'
  1289  00FF11  20                 	db	32
  1290  00FF12  44                 	db	68	;'D'
  1291  00FF13  61                 	db	97	;'a'
  1292  00FF14  74                 	db	116	;'t'
  1293  00FF15  65                 	db	101	;'e'
  1294  00FF16  3A                 	db	58	;':'
  1295  00FF17  20                 	db	32
  1296  00FF18  25                 	db	37
  1297  00FF19  73                 	db	115	;'s'
  1298  00FF1A  0D                 	db	13
  1299  00FF1B  0A                 	db	10
  1300  00FF1C  00                 	db	0
  1301  00FF1D                     STR_16:
  1302  00FF1D  41                 	db	65	;'A'
  1303  00FF1E  54                 	db	84	;'T'
  1304  00FF1F  2B                 	db	43
  1305  00FF20  48                 	db	72	;'H'
  1306  00FF21  54                 	db	84	;'T'
  1307  00FF22  54                 	db	84	;'T'
  1308  00FF23  50                 	db	80	;'P'
  1309  00FF24  41                 	db	65	;'A'
  1310  00FF25  43                 	db	67	;'C'
  1311  00FF26  54                 	db	84	;'T'
  1312  00FF27  49                 	db	73	;'I'
  1313  00FF28  4F                 	db	79	;'O'
  1314  00FF29  4E                 	db	78	;'N'
  1315  00FF2A  3D                 	db	61	;'='
  1316  00FF2B  30                 	db	48	;'0'
  1317  00FF2C  0D                 	db	13
  1318  00FF2D  00                 	db	0
  1319  00FF2E                     STR_31:
  1320  00FF2E  41                 	db	65	;'A'
  1321  00FF2F  54                 	db	84	;'T'
  1322  00FF30  2B                 	db	43
  1323  00FF31  43                 	db	67	;'C'
  1324  00FF32  4D                 	db	77	;'M'
  1325  00FF33  47                 	db	71	;'G'
  1326  00FF34  44                 	db	68	;'D'
  1327  00FF35  3D                 	db	61	;'='
  1328  00FF36  31                 	db	49	;'1'
  1329  00FF37  2C                 	db	44
  1330  00FF38  30                 	db	48	;'0'
  1331  00FF39  0D                 	db	13
  1332  00FF3A  0A                 	db	10
  1333  00FF3B  00                 	db	0
  1334  00FF3C  41                 	db	65	;'A'
  1335  00FF3D  54                 	db	84	;'T'
  1336  00FF3E  2B                 	db	43
  1337  00FF3F  48                 	db	72	;'H'
  1338  00FF40  54                 	db	84	;'T'
  1339  00FF41  54                 	db	84	;'T'
  1340  00FF42  50                 	db	80	;'P'
  1341  00FF43  53                 	db	83	;'S'
  1342  00FF44  53                 	db	83	;'S'
  1343  00FF45  4C                 	db	76	;'L'
  1344  00FF46  3D                 	db	61	;'='
  1345  00FF47  30                 	db	48	;'0'
  1346  00FF48  0D                 	db	13
  1347  00FF49  00                 	db	0
  1348  00FF4A                     STR_10:
  1349  00FF4A  41                 	db	65	;'A'
  1350  00FF4B  54                 	db	84	;'T'
  1351  00FF4C  2B                 	db	43
  1352  00FF4D  53                 	db	83	;'S'
  1353  00FF4E  41                 	db	65	;'A'
  1354  00FF4F  50                 	db	80	;'P'
  1355  00FF50  42                 	db	66	;'B'
  1356  00FF51  52                 	db	82	;'R'
  1357  00FF52  3D                 	db	61	;'='
  1358  00FF53  31                 	db	49	;'1'
  1359  00FF54  2C                 	db	44
  1360  00FF55  31                 	db	49	;'1'
  1361  00FF56  0D                 	db	13
  1362  00FF57  00                 	db	0
  1363  00FF58                     STR_11:
  1364  00FF58  41                 	db	65	;'A'
  1365  00FF59  54                 	db	84	;'T'
  1366  00FF5A  2B                 	db	43
  1367  00FF5B  53                 	db	83	;'S'
  1368  00FF5C  41                 	db	65	;'A'
  1369  00FF5D  50                 	db	80	;'P'
  1370  00FF5E  42                 	db	66	;'B'
  1371  00FF5F  52                 	db	82	;'R'
  1372  00FF60  3D                 	db	61	;'='
  1373  00FF61  32                 	db	50	;'2'
  1374  00FF62  2C                 	db	44
  1375  00FF63  31                 	db	49	;'1'
  1376  00FF64  0D                 	db	13
  1377  00FF65  00                 	db	0
  1378  00FF66                     STR_13:
  1379  00FF66  41                 	db	65	;'A'
  1380  00FF67  54                 	db	84	;'T'
  1381  00FF68  2B                 	db	43
  1382  00FF69  48                 	db	72	;'H'
  1383  00FF6A  54                 	db	84	;'T'
  1384  00FF6B  54                 	db	84	;'T'
  1385  00FF6C  50                 	db	80	;'P'
  1386  00FF6D  53                 	db	83	;'S'
  1387  00FF6E  53                 	db	83	;'S'
  1388  00FF6F  4C                 	db	76	;'L'
  1389  00FF70  3D                 	db	61	;'='
  1390  00FF71  31                 	db	49	;'1'
  1391  00FF72  0D                 	db	13
  1392  00FF73  00                 	db	0
  1393  00FF74                     STR_2:
  1394  00FF74  41                 	db	65	;'A'
  1395  00FF75  54                 	db	84	;'T'
  1396  00FF76  2B                 	db	43
  1397  00FF77  49                 	db	73	;'I'
  1398  00FF78  50                 	db	80	;'P'
  1399  00FF79  52                 	db	82	;'R'
  1400  00FF7A  3D                 	db	61	;'='
  1401  00FF7B  39                 	db	57	;'9'
  1402  00FF7C  36                 	db	54	;'6'
  1403  00FF7D  30                 	db	48	;'0'
  1404  00FF7E  30                 	db	48	;'0'
  1405  00FF7F  0D                 	db	13
  1406  00FF80  0A                 	db	10
  1407  00FF81  00                 	db	0
  1408  00FF82                     STR_17:
  1409  00FF82  41                 	db	65	;'A'
  1410  00FF83  54                 	db	84	;'T'
  1411  00FF84  2B                 	db	43
  1412  00FF85  48                 	db	72	;'H'
  1413  00FF86  54                 	db	84	;'T'
  1414  00FF87  54                 	db	84	;'T'
  1415  00FF88  50                 	db	80	;'P'
  1416  00FF89  52                 	db	82	;'R'
  1417  00FF8A  45                 	db	69	;'E'
  1418  00FF8B  41                 	db	65	;'A'
  1419  00FF8C  44                 	db	68	;'D'
  1420  00FF8D  0D                 	db	13
  1421  00FF8E  00                 	db	0
  1422  00FF8F                     STR_18:
  1423  00FF8F  41                 	db	65	;'A'
  1424  00FF90  54                 	db	84	;'T'
  1425  00FF91  2B                 	db	43
  1426  00FF92  48                 	db	72	;'H'
  1427  00FF93  54                 	db	84	;'T'
  1428  00FF94  54                 	db	84	;'T'
  1429  00FF95  50                 	db	80	;'P'
  1430  00FF96  54                 	db	84	;'T'
  1431  00FF97  45                 	db	69	;'E'
  1432  00FF98  52                 	db	82	;'R'
  1433  00FF99  4D                 	db	77	;'M'
  1434  00FF9A  0D                 	db	13
  1435  00FF9B  00                 	db	0
  1436  00FF9C                     STR_12:
  1437  00FF9C  41                 	db	65	;'A'
  1438  00FF9D  54                 	db	84	;'T'
  1439  00FF9E  2B                 	db	43
  1440  00FF9F  48                 	db	72	;'H'
  1441  00FFA0  54                 	db	84	;'T'
  1442  00FFA1  54                 	db	84	;'T'
  1443  00FFA2  50                 	db	80	;'P'
  1444  00FFA3  49                 	db	73	;'I'
  1445  00FFA4  4E                 	db	78	;'N'
  1446  00FFA5  49                 	db	73	;'I'
  1447  00FFA6  54                 	db	84	;'T'
  1448  00FFA7  0D                 	db	13
  1449  00FFA8  00                 	db	0
  1450  00FFA9                     STR_30:
  1451  00FFA9  41                 	db	65	;'A'
  1452  00FFAA  54                 	db	84	;'T'
  1453  00FFAB  2B                 	db	43
  1454  00FFAC  43                 	db	67	;'C'
  1455  00FFAD  4C                 	db	76	;'L'
  1456  00FFAE  49                 	db	73	;'I'
  1457  00FFAF  50                 	db	80	;'P'
  1458  00FFB0  3D                 	db	61	;'='
  1459  00FFB1  31                 	db	49	;'1'
  1460  00FFB2  0D                 	db	13
  1461  00FFB3  0A                 	db	10
  1462  00FFB4  00                 	db	0
  1463  00FFB5                     STR_28:
  1464  00FFB5  4D                 	db	77	;'M'
  1465  00FFB6  61                 	db	97	;'a'
  1466  00FFB7  72                 	db	114	;'r'
  1467  00FFB8  20                 	db	32
  1468  00FFB9  31                 	db	49	;'1'
  1469  00FFBA  36                 	db	54	;'6'
  1470  00FFBB  20                 	db	32
  1471  00FFBC  32                 	db	50	;'2'
  1472  00FFBD  30                 	db	48	;'0'
  1473  00FFBE  32                 	db	50	;'2'
  1474  00FFBF  32                 	db	50	;'2'
  1475  00FFC0  00                 	db	0
  1476  00FFC1                     STR_4:
  1477  00FFC1  41                 	db	65	;'A'
  1478  00FFC2  54                 	db	84	;'T'
  1479  00FFC3  2B                 	db	43
  1480  00FFC4  43                 	db	67	;'C'
  1481  00FFC5  4D                 	db	77	;'M'
  1482  00FFC6  47                 	db	71	;'G'
  1483  00FFC7  52                 	db	82	;'R'
  1484  00FFC8  3D                 	db	61	;'='
  1485  00FFC9  31                 	db	49	;'1'
  1486  00FFCA  0D                 	db	13
  1487  00FFCB  0A                 	db	10
  1488  00FFCC  00                 	db	0
  1489  00FFCD                     STR_5:
  1490  00FFCD  41                 	db	65	;'A'
  1491  00FFCE  54                 	db	84	;'T'
  1492  00FFCF  2B                 	db	43
  1493  00FFD0  43                 	db	67	;'C'
  1494  00FFD1  4D                 	db	77	;'M'
  1495  00FFD2  47                 	db	71	;'G'
  1496  00FFD3  53                 	db	83	;'S'
  1497  00FFD4  3D                 	db	61	;'='
  1498  00FFD5  22                 	db	34
  1499  00FFD6  00                 	db	0
  1500  00FFD7                     STR_32:
  1501  00FFD7  28                 	db	40
  1502  00FFD8  6E                 	db	110	;'n'
  1503  00FFD9  75                 	db	117	;'u'
  1504  00FFDA  6C                 	db	108	;'l'
  1505  00FFDB  6C                 	db	108	;'l'
  1506  00FFDC  29                 	db	41
  1507  00FFDD  00                 	db	0
  1508  00FFDE                     STR_3:
  1509  00FFDE  41                 	db	65	;'A'
  1510  00FFDF  54                 	db	84	;'T'
  1511  00FFE0  45                 	db	69	;'E'
  1512  00FFE1  30                 	db	48	;'0'
  1513  00FFE2  0D                 	db	13
  1514  00FFE3  0A                 	db	10
  1515  00FFE4  00                 	db	0
  1516  00FFE5                     STR_1:
  1517  00FFE5  41                 	db	65	;'A'
  1518  00FFE6  54                 	db	84	;'T'
  1519  00FFE7  0D                 	db	13
  1520  00FFE8  0A                 	db	10
  1521  00FFE9  00                 	db	0
  1522  00FFEA  41                 	db	65	;'A'
  1523  00FFEB  54                 	db	84	;'T'
  1524  00FFEC  41                 	db	65	;'A'
  1525  00FFED  0D                 	db	13
  1526  00FFEE  00                 	db	0
  1527  00FFEF                     STR_6:
  1528  00FFEF  41                 	db	65	;'A'
  1529  00FFF0  54                 	db	84	;'T'
  1530  00FFF1  48                 	db	72	;'H'
  1531  00FFF2  0D                 	db	13
  1532  00FFF3  00                 	db	0
  1533  00FFF4                     STR_24:
  1534  00FFF4  2E                 	db	46
  1535  00FFF5  00                 	db	0
  1536  0000                     
  1537                           ; #config settings
  1538  00FFF6  00                 	db	0	; dummy byte at the end
  1539  0000                     
  1540                           	psect	cinit
  1541  00298E                     __pcinit:
  1542                           	opt stack 0
  1543  00298E                     start_initialization:
  1544                           	opt stack 0
  1545  00298E                     __initialization:
  1546                           	opt stack 0
  1547                           
  1548                           ; Initialize objects allocated to BANK5 (80 bytes)
  1549                           ; load TBLPTR registers with __pidataBANK5
  1550  00298E  0E1C               	movlw	low __pidataBANK5
  1551  002990  6EF6               	movwf	tblptrl,c
  1552  002992  0E55               	movlw	high __pidataBANK5
  1553  002994  6EF7               	movwf	tblptrh,c
  1554  002996  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1555  002998  6EF8               	movwf	tblptru,c
  1556  00299A  EE05  F090         	lfsr	0,__pdataBANK5
  1557  00299E  EE10 F050          	lfsr	1,80
  1558  0029A2                     copy_data0:
  1559  0029A2  0009               	tblrd		*+
  1560  0029A4  CFF5 FFEE          	movff	tablat,postinc0
  1561  0029A8  50E5               	movf	postdec1,w,c
  1562  0029AA  50E1               	movf	fsr1l,w,c
  1563  0029AC  E1FA               	bnz	copy_data0
  1564                           
  1565                           ; Initialize objects allocated to BANK3 (65 bytes)
  1566                           ; load TBLPTR registers with __pidataBANK3
  1567  0029AE  0E22               	movlw	low __pidataBANK3
  1568  0029B0  6EF6               	movwf	tblptrl,c
  1569  0029B2  0E59               	movlw	high __pidataBANK3
  1570  0029B4  6EF7               	movwf	tblptrh,c
  1571  0029B6  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1572  0029B8  6EF8               	movwf	tblptru,c
  1573  0029BA  EE03  F0BE         	lfsr	0,__pdataBANK3
  1574  0029BE  EE10 F041          	lfsr	1,65
  1575  0029C2                     copy_data1:
  1576  0029C2  0009               	tblrd		*+
  1577  0029C4  CFF5 FFEE          	movff	tablat,postinc0
  1578  0029C8  50E5               	movf	postdec1,w,c
  1579  0029CA  50E1               	movf	fsr1l,w,c
  1580  0029CC  E1FA               	bnz	copy_data1
  1581                           
  1582                           ; Initialize objects allocated to BANK2 (13 bytes)
  1583                           ; load TBLPTR registers with __pidataBANK2
  1584  0029CE  0E1A               	movlw	low __pidataBANK2
  1585  0029D0  6EF6               	movwf	tblptrl,c
  1586  0029D2  0E62               	movlw	high __pidataBANK2
  1587  0029D4  6EF7               	movwf	tblptrh,c
  1588  0029D6  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1589  0029D8  6EF8               	movwf	tblptru,c
  1590  0029DA  EE02  F0F3         	lfsr	0,__pdataBANK2
  1591  0029DE  EE10 F00D          	lfsr	1,13
  1592  0029E2                     copy_data2:
  1593  0029E2  0009               	tblrd		*+
  1594  0029E4  CFF5 FFEE          	movff	tablat,postinc0
  1595  0029E8  50E5               	movf	postdec1,w,c
  1596  0029EA  50E1               	movf	fsr1l,w,c
  1597  0029EC  E1FA               	bnz	copy_data2
  1598                           
  1599                           ; Initialize objects allocated to BANK1 (1 bytes)
  1600                           ; load TBLPTR registers with __pidataBANK1
  1601  0029EE  0E96               	movlw	low __pidataBANK1
  1602  0029F0  6EF6               	movwf	tblptrl,c
  1603  0029F2  0E62               	movlw	high __pidataBANK1
  1604  0029F4  6EF7               	movwf	tblptrh,c
  1605  0029F6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1606  0029F8  6EF8               	movwf	tblptru,c
  1607  0029FA  0009               	tblrd		*+	;fetch initializer
  1608  0029FC  CFF5 F1FF          	movff	tablat,__pdataBANK1
  1609                           
  1610                           ; Initialize objects allocated to BANK4 (24 bytes)
  1611                           ; load TBLPTR registers with __pidataBANK4
  1612  002A00  0EBA               	movlw	low __pidataBANK4
  1613  002A02  6EF6               	movwf	tblptrl,c
  1614  002A04  0E60               	movlw	high __pidataBANK4
  1615  002A06  6EF7               	movwf	tblptrh,c
  1616  002A08  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1617  002A0A  6EF8               	movwf	tblptru,c
  1618  002A0C  EE04  F0E2         	lfsr	0,__pdataBANK4
  1619  002A10  EE10 F018          	lfsr	1,24
  1620  002A14                     copy_data3:
  1621  002A14  0009               	tblrd		*+
  1622  002A16  CFF5 FFEE          	movff	tablat,postinc0
  1623  002A1A  50E5               	movf	postdec1,w,c
  1624  002A1C  50E1               	movf	fsr1l,w,c
  1625  002A1E  E1FA               	bnz	copy_data3
  1626                           
  1627                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1628  002A20  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1629  002A24  EE13 F020          	lfsr	1,800
  1630  002A28                     clear_0:
  1631  002A28  6AEE               	clrf	postinc0,c
  1632  002A2A  50E5               	movf	postdec1,w,c
  1633  002A2C  50E1               	movf	fsr1l,w,c
  1634  002A2E  E1FC               	bnz	clear_0
  1635  002A30  50E2               	movf	fsr1h,w,c
  1636  002A32  E1FA               	bnz	clear_0
  1637                           
  1638                           ; Clear objects allocated to BANK9 (200 bytes)
  1639  002A34  EE09  F000         	lfsr	0,__pbssBANK9
  1640  002A38  0EC8               	movlw	200
  1641  002A3A                     clear_1:
  1642  002A3A  6AEE               	clrf	postinc0,c
  1643  002A3C  06E8               	decf	wreg,f,c
  1644  002A3E  E1FD               	bnz	clear_1
  1645                           
  1646                           ; Clear objects allocated to BANK8 (200 bytes)
  1647  002A40  EE08  F000         	lfsr	0,__pbssBANK8
  1648  002A44  0EC8               	movlw	200
  1649  002A46                     clear_2:
  1650  002A46  6AEE               	clrf	postinc0,c
  1651  002A48  06E8               	decf	wreg,f,c
  1652  002A4A  E1FD               	bnz	clear_2
  1653                           
  1654                           ; Clear objects allocated to BANK7 (246 bytes)
  1655  002A4C  EE07  F000         	lfsr	0,__pbssBANK7
  1656  002A50  0EF6               	movlw	246
  1657  002A52                     clear_3:
  1658  002A52  6AEE               	clrf	postinc0,c
  1659  002A54  06E8               	decf	wreg,f,c
  1660  002A56  E1FD               	bnz	clear_3
  1661                           
  1662                           ; Clear objects allocated to BANK6 (220 bytes)
  1663  002A58  EE06  F000         	lfsr	0,__pbssBANK6
  1664  002A5C  0EDC               	movlw	220
  1665  002A5E                     clear_4:
  1666  002A5E  6AEE               	clrf	postinc0,c
  1667  002A60  06E8               	decf	wreg,f,c
  1668  002A62  E1FD               	bnz	clear_4
  1669                           
  1670                           ; Clear objects allocated to BANK5 (144 bytes)
  1671  002A64  EE05  F000         	lfsr	0,__pbssBANK5
  1672  002A68  0E90               	movlw	144
  1673  002A6A                     clear_5:
  1674  002A6A  6AEE               	clrf	postinc0,c
  1675  002A6C  06E8               	decf	wreg,f,c
  1676  002A6E  E1FD               	bnz	clear_5
  1677                           
  1678                           ; Clear objects allocated to BANK3 (190 bytes)
  1679  002A70  EE03  F000         	lfsr	0,__pbssBANK3
  1680  002A74  0EBE               	movlw	190
  1681  002A76                     clear_6:
  1682  002A76  6AEE               	clrf	postinc0,c
  1683  002A78  06E8               	decf	wreg,f,c
  1684  002A7A  E1FD               	bnz	clear_6
  1685                           
  1686                           ; Clear objects allocated to BANK2 (42 bytes)
  1687  002A7C  EE02  F0C9         	lfsr	0,__pbssBANK2
  1688  002A80  0E2A               	movlw	42
  1689  002A82                     clear_7:
  1690  002A82  6AEE               	clrf	postinc0,c
  1691  002A84  06E8               	decf	wreg,f,c
  1692  002A86  E1FD               	bnz	clear_7
  1693                           
  1694                           ; Clear objects allocated to BANK1 (54 bytes)
  1695  002A88  EE01  F0C9         	lfsr	0,__pbssBANK1
  1696  002A8C  0E36               	movlw	54
  1697  002A8E                     clear_8:
  1698  002A8E  6AEE               	clrf	postinc0,c
  1699  002A90  06E8               	decf	wreg,f,c
  1700  002A92  E1FD               	bnz	clear_8
  1701                           
  1702                           ; Clear objects allocated to BANK4 (162 bytes)
  1703  002A94  EE04  F040         	lfsr	0,__pbssBANK4
  1704  002A98  0EA2               	movlw	162
  1705  002A9A                     clear_9:
  1706  002A9A  6AEE               	clrf	postinc0,c
  1707  002A9C  06E8               	decf	wreg,f,c
  1708  002A9E  E1FD               	bnz	clear_9
  1709                           
  1710                           ; Clear objects allocated to BANK0 (46 bytes)
  1711  002AA0  EE00  F0B5         	lfsr	0,__pbssBANK0
  1712  002AA4  0E2E               	movlw	46
  1713  002AA6                     clear_10:
  1714  002AA6  6AEE               	clrf	postinc0,c
  1715  002AA8  06E8               	decf	wreg,f,c
  1716  002AAA  E1FD               	bnz	clear_10
  1717                           
  1718                           ; Clear objects allocated to COMRAM (31 bytes)
  1719  002AAC  EE00  F023         	lfsr	0,__pbssCOMRAM
  1720  002AB0  0E1F               	movlw	31
  1721  002AB2                     clear_11:
  1722  002AB2  6AEE               	clrf	postinc0,c
  1723  002AB4  06E8               	decf	wreg,f,c
  1724  002AB6  E1FD               	bnz	clear_11
  1725  002AB8                     end_of_initialization:
  1726                           	opt stack 0
  1727  002AB8                     __end_of__initialization:
  1728                           	opt stack 0
  1729  002AB8  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1730  002ABA  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1731  002ABC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1732  002ABE  6EF8               	movwf	tblptru,c
  1733  002AC0  0100               	movlb	0
  1734  002AC2  EF14  F031         	goto	_main	;jump to C main() function
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           postinc0	equ	0xFEE
  1740                           wreg	equ	0xFE8
  1741                           postdec1	equ	0xFE5
  1742                           fsr1h	equ	0xFE2
  1743                           fsr1l	equ	0xFE1
  1744                           
  1745                           	psect	bssCOMRAM
  1746  000023                     __pbssCOMRAM:
  1747                           	opt stack 0
  1748  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1749                           	opt stack 0
  1750  000023                     	ds	2
  1751  000025                     _USBDeferOUTDataStagePackets:
  1752                           	opt stack 0
  1753  000025                     	ds	1
  1754  000026                     _USBDeferINDataStagePackets:
  1755                           	opt stack 0
  1756  000026                     	ds	1
  1757  000027                     _USBStatusStageEnabledFlag2:
  1758                           	opt stack 0
  1759  000027                     	ds	1
  1760  000028                     _USBStatusStageEnabledFlag1:
  1761                           	opt stack 0
  1762  000028                     	ds	1
  1763  000029                     _USBStatusStageTimeoutCounter:
  1764                           	opt stack 0
  1765  000029                     	ds	1
  1766  00002A                     InitGprsNetwork@GprsNetInitNextState:
  1767                           	opt stack 0
  1768  00002A                     	ds	1
  1769  00002B                     _ComChecCompleted:
  1770                           	opt stack 0
  1771  00002B                     	ds	1
  1772  00002C                     Uart_Uart1RxIsr@UartRxData:
  1773                           	opt stack 0
  1774  00002C                     	ds	1
  1775  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1776                           	opt stack 0
  1777  00002D                     	ds	1
  1778  00002E                     MdmCntSm@MdmCntState:
  1779                           	opt stack 0
  1780  00002E                     	ds	1
  1781  00002F                     RiSm@MdmDrvState:
  1782                           	opt stack 0
  1783  00002F                     	ds	1
  1784  000030                     _Mmd_RingIndicator:
  1785                           	opt stack 0
  1786  000030                     	ds	1
  1787  000031                     I2c_ReadData@ReadStatus:
  1788                           	opt stack 0
  1789  000031                     	ds	1
  1790  000032                     I2c_ReadData@TentativeCounter:
  1791                           	opt stack 0
  1792  000032                     	ds	1
  1793  000033                     I2c_ReadData@DataCounter:
  1794                           	opt stack 0
  1795  000033                     	ds	1
  1796  000034                     I2c_ReadData@I2cReadState:
  1797                           	opt stack 0
  1798  000034                     	ds	1
  1799  000035                     I2c_WriteData@WriteStatus:
  1800                           	opt stack 0
  1801  000035                     	ds	1
  1802  000036                     I2c_WriteData@TentativeCounter:
  1803                           	opt stack 0
  1804  000036                     	ds	1
  1805  000037                     I2c_WriteData@I2cNextState:
  1806                           	opt stack 0
  1807  000037                     	ds	1
  1808  000038                     I2c_WriteData@I2cWriteState:
  1809                           	opt stack 0
  1810  000038                     	ds	1
  1811  000039                     _I2cReadDataEvt:
  1812                           	opt stack 0
  1813  000039                     	ds	1
  1814  00003A                     _NewStringMdmTerminal:
  1815                           	opt stack 0
  1816  00003A                     	ds	1
  1817  00003B                     _NewMdmEvtParserRequest:
  1818                           	opt stack 0
  1819  00003B                     	ds	1
  1820  00003C                     _NewStringReceived:
  1821                           	opt stack 0
  1822  00003C                     	ds	1
  1823  00003D                     _MdmResetRequest:
  1824                           	opt stack 0
  1825  00003D                     	ds	1
  1826  00003E                     _CallClosedEvent:
  1827                           	opt stack 0
  1828  00003E                     	ds	1
  1829  00003F                     _IncomingCallEvent:
  1830                           	opt stack 0
  1831  00003F                     	ds	1
  1832  000040                     _NewSmsEvent:
  1833                           	opt stack 0
  1834  000040                     	ds	1
  1835  000041                     _ActivateRiDetection:
  1836                           	opt stack 0
  1837  000041                     	ds	1
  1838                           tblptru	equ	0xFF8
  1839                           tblptrh	equ	0xFF7
  1840                           tblptrl	equ	0xFF6
  1841                           tablat	equ	0xFF5
  1842                           postinc0	equ	0xFEE
  1843                           wreg	equ	0xFE8
  1844                           postdec1	equ	0xFE5
  1845                           fsr1h	equ	0xFE2
  1846                           fsr1l	equ	0xFE1
  1847                           
  1848                           	psect	bssBANK0
  1849  0000B5                     __pbssBANK0:
  1850                           	opt stack 0
  1851  0000B5                     _inPipes:
  1852                           	opt stack 0
  1853  0000B5                     	ds	6
  1854  0000BB                     _pBDTEntryIn:
  1855                           	opt stack 0
  1856  0000BB                     	ds	6
  1857  0000C1                     _CDCDataOutHandle:
  1858                           	opt stack 0
  1859  0000C1                     	ds	2
  1860  0000C3                     _pBDTEntryEP0OutNext:
  1861                           	opt stack 0
  1862  0000C3                     	ds	2
  1863  0000C5                     _pBDTEntryEP0OutCurrent:
  1864                           	opt stack 0
  1865  0000C5                     	ds	2
  1866  0000C7                     _RxLen:
  1867                           	opt stack 0
  1868  0000C7                     	ds	2
  1869  0000C9                     _cdc_tx_len:
  1870                           	opt stack 0
  1871  0000C9                     	ds	1
  1872  0000CA                     _cdc_trf_state:
  1873                           	opt stack 0
  1874  0000CA                     	ds	1
  1875  0000CB                     _cdc_rx_len:
  1876                           	opt stack 0
  1877  0000CB                     	ds	1
  1878  0000CC                     _USBDeferStatusStagePacket:
  1879                           	opt stack 0
  1880  0000CC                     	ds	1
  1881  0000CD                     _endpoint_number:
  1882                           	opt stack 0
  1883  0000CD                     	ds	1
  1884  0000CE                     _controlTransferState:
  1885                           	opt stack 0
  1886  0000CE                     	ds	1
  1887  0000CF                     _shortPacketStatus:
  1888                           	opt stack 0
  1889  0000CF                     	ds	1
  1890  0000D0                     _USBDeviceState:
  1891                           	opt stack 0
  1892  0000D0                     	ds	1
  1893  0000D1                     _I2cComSts:
  1894                           	opt stack 0
  1895  0000D1                     	ds	1
  1896  0000D2                     HttpGetMethod@GetMethodNextState:
  1897                           	opt stack 0
  1898  0000D2                     	ds	1
  1899  0000D3                     _MdmStatus:
  1900                           	opt stack 0
  1901  0000D3                     	ds	1
  1902  0000D4                     _PhoneNumbLen:
  1903                           	opt stack 0
  1904  0000D4                     	ds	1
  1905  0000D5                     _SmsLen:
  1906                           	opt stack 0
  1907  0000D5                     	ds	1
  1908  0000D6                     _SystemState:
  1909                           	opt stack 0
  1910  0000D6                     	ds	1
  1911  0000D7                     _USTATcopy:
  1912                           	opt stack 0
  1913  0000D7                     	ds	1
  1914  0000D8                     _USBActiveConfiguration:
  1915                           	opt stack 0
  1916  0000D8                     	ds	1
  1917  0000D9                     _I2cWriteDataEvt:
  1918                           	opt stack 0
  1919  0000D9                     	ds	1
  1920  0000DA                     _GetMethod:
  1921                           	opt stack 0
  1922  0000DA                     	ds	1
  1923  0000DB                     _InitNetwork:
  1924                           	opt stack 0
  1925  0000DB                     	ds	1
  1926  0000DC                     _SmsTxtReady:
  1927                           	opt stack 0
  1928  0000DC                     	ds	1
  1929  0000DD                     _GetSmsText:
  1930                           	opt stack 0
  1931  0000DD                     	ds	1
  1932  0000DE                     _SmsEvent:
  1933                           	opt stack 0
  1934  0000DE                     	ds	1
  1935  0000DF                     _ClipEvent:
  1936                           	opt stack 0
  1937  0000DF                     	ds	1
  1938  0000E0                     _RingEvent:
  1939                           	opt stack 0
  1940  0000E0                     	ds	1
  1941  0000E1                     _SendSmsEvent:
  1942                           	opt stack 0
  1943  0000E1                     	ds	1
  1944  0000E2                     _MdmOnOffPulseRequest:
  1945                           	opt stack 0
  1946  0000E2                     	ds	1
  1947                           tblptru	equ	0xFF8
  1948                           tblptrh	equ	0xFF7
  1949                           tblptrl	equ	0xFF6
  1950                           tablat	equ	0xFF5
  1951                           postinc0	equ	0xFEE
  1952                           wreg	equ	0xFE8
  1953                           postdec1	equ	0xFE5
  1954                           fsr1h	equ	0xFE2
  1955                           fsr1l	equ	0xFE1
  1956                           
  1957                           	psect	bssBANK1
  1958  0001C9                     __pbssBANK1:
  1959                           	opt stack 0
  1960  0001C9                     _outPipes:
  1961                           	opt stack 0
  1962  0001C9                     	ds	8
  1963  0001D1                     _CDCDataInHandle:
  1964                           	opt stack 0
  1965  0001D1                     	ds	2
  1966  0001D3                     MyApp_Task@blinkSeconds:
  1967                           	opt stack 0
  1968  0001D3                     	ds	1
  1969  0001D4                     initGprsModem@initMdm:
  1970                           	opt stack 0
  1971  0001D4                     	ds	1
  1972  0001D5                     initGprsModem@isInitialized:
  1973                           	opt stack 0
  1974  0001D5                     	ds	1
  1975  0001D6                     	ds	1
  1976  0001D7                     	ds	1
  1977  0001D8                     	ds	1
  1978  0001D9                     	ds	1
  1979  0001DA                     	ds	1
  1980  0001DB                     	ds	1
  1981  0001DC                     GsmGprsTerminal@SMS:
  1982                           	opt stack 0
  1983  0001DC                     	ds	1
  1984  0001DD                     	ds	1
  1985  0001DE                     _control_signal_bitmap:
  1986                           	opt stack 0
  1987  0001DE                     	ds	1
  1988  0001DF                     _cdc_mem_type:
  1989                           	opt stack 0
  1990  0001DF                     	ds	1
  1991  0001E0                     _USBTicksSinceSuspendEnd:
  1992                           	opt stack 0
  1993  0001E0                     	ds	1
  1994  0001E1                     _BothEP0OutUOWNsSet:
  1995                           	opt stack 0
  1996  0001E1                     	ds	1
  1997  0001E2                     _USBBusIsSuspended:
  1998                           	opt stack 0
  1999  0001E2                     	ds	1
  2000  0001E3                     _RemoteWakeup:
  2001                           	opt stack 0
  2002  0001E3                     	ds	1
  2003  0001E4                     I2cSlv_QueryI2cData@Ret:
  2004                           	opt stack 0
  2005  0001E4                     	ds	1
  2006  0001E5                     I2cSlv_QueryI2cData@I2cOpState:
  2007                           	opt stack 0
  2008  0001E5                     	ds	1
  2009  0001E6                     I2cSendMsgSm@I2cComState:
  2010                           	opt stack 0
  2011  0001E6                     	ds	1
  2012  0001E7                     _I2cBusStatus:
  2013                           	opt stack 0
  2014  0001E7                     	ds	1
  2015  0001E8                     HttpGetMethod@GetMOutSts:
  2016                           	opt stack 0
  2017  0001E8                     	ds	1
  2018  0001E9                     HttpGetMethod@GetMethodState:
  2019                           	opt stack 0
  2020  0001E9                     	ds	1
  2021  0001EA                     InitGprsNetwork@GprsNetInitState:
  2022                           	opt stack 0
  2023  0001EA                     	ds	1
  2024  0001EB                     _PostMethod:
  2025                           	opt stack 0
  2026  0001EB                     	ds	1
  2027  0001EC                     _HttpGetMethodSts:
  2028                           	opt stack 0
  2029  0001EC                     	ds	1
  2030  0001ED                     _GprsNetworkSts:
  2031                           	opt stack 0
  2032  0001ED                     	ds	1
  2033  0001EE                     _ApnLenLocal:
  2034                           	opt stack 0
  2035  0001EE                     	ds	1
  2036  0001EF                     SendSmsSm@SendSms_NextState:
  2037                           	opt stack 0
  2038  0001EF                     	ds	1
  2039  0001F0                     SendSmsSm@SendSms_State:
  2040                           	opt stack 0
  2041  0001F0                     	ds	1
  2042  0001F1                     GetSmsSm@GetSmsState:
  2043                           	opt stack 0
  2044  0001F1                     	ds	1
  2045  0001F2                     ConfigureModem@NextState:
  2046                           	opt stack 0
  2047  0001F2                     	ds	1
  2048  0001F3                     ConfigureModem@MdmConfigState:
  2049                           	opt stack 0
  2050  0001F3                     	ds	1
  2051  0001F4                     TurnOnModem@TurnOnMdmState:
  2052                           	opt stack 0
  2053  0001F4                     	ds	1
  2054  0001F5                     CheckModem@CheckMdmSts:
  2055                           	opt stack 0
  2056  0001F5                     	ds	1
  2057  0001F6                     _AlarmEvent:
  2058                           	opt stack 0
  2059  0001F6                     	ds	1
  2060  0001F7                     _Led3OutSts:
  2061                           	opt stack 0
  2062  0001F7                     	ds	1
  2063  0001F8                     _Led3Sts:
  2064                           	opt stack 0
  2065  0001F8                     	ds	1
  2066  0001F9                     _Led2OutSts:
  2067                           	opt stack 0
  2068  0001F9                     	ds	1
  2069  0001FA                     _Led2Sts:
  2070                           	opt stack 0
  2071  0001FA                     	ds	1
  2072  0001FB                     _Led1OutSts:
  2073                           	opt stack 0
  2074  0001FB                     	ds	1
  2075  0001FC                     _Led1Sts:
  2076                           	opt stack 0
  2077  0001FC                     	ds	1
  2078  0001FD                     I2cDummyTx@DummyBuffer:
  2079                           	opt stack 0
  2080  0001FD                     	ds	1
  2081  0001FE                     _MdmStsReady:
  2082                           	opt stack 0
  2083  0001FE                     	ds	1
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           postinc0	equ	0xFEE
  2089                           wreg	equ	0xFE8
  2090                           postdec1	equ	0xFE5
  2091                           fsr1h	equ	0xFE2
  2092                           fsr1l	equ	0xFE1
  2093                           
  2094                           	psect	dataBANK1
  2095  0001FF                     __pdataBANK1:
  2096                           	opt stack 0
  2097  0001FF                     InitGprsNetwork@GprsInitSts:
  2098                           	opt stack 0
  2099  0001FF                     	ds	1
  2100                           tblptru	equ	0xFF8
  2101                           tblptrh	equ	0xFF7
  2102                           tblptrl	equ	0xFF6
  2103                           tablat	equ	0xFF5
  2104                           postinc0	equ	0xFEE
  2105                           wreg	equ	0xFE8
  2106                           postdec1	equ	0xFE5
  2107                           fsr1h	equ	0xFE2
  2108                           fsr1l	equ	0xFE1
  2109                           
  2110                           	psect	bssBANK2
  2111  0002C9                     __pbssBANK2:
  2112                           	opt stack 0
  2113  0002C9                     _pCDCDst:
  2114                           	opt stack 0
  2115  0002C9                     	ds	3
  2116  0002CC                     _pCDCSrc:
  2117                           	opt stack 0
  2118  0002CC                     	ds	3
  2119  0002CF                     _ep_data_out:
  2120                           	opt stack 0
  2121  0002CF                     	ds	3
  2122  0002D2                     _ep_data_in:
  2123                           	opt stack 0
  2124  0002D2                     	ds	3
  2125  0002D5                     _pDst:
  2126                           	opt stack 0
  2127  0002D5                     	ds	2
  2128  0002D7                     ConfigureModem@DelayValueMs:
  2129                           	opt stack 0
  2130  0002D7                     	ds	2
  2131  0002D9                     TurnOnModem@Counter:
  2132                           	opt stack 0
  2133  0002D9                     	ds	2
  2134  0002DB                     UpdateSchFlag@InterruptCounter:
  2135                           	opt stack 0
  2136  0002DB                     	ds	2
  2137  0002DD                     MdmCntSm@Counter:
  2138                           	opt stack 0
  2139  0002DD                     	ds	2
  2140  0002DF                     RiSm@Counter:
  2141                           	opt stack 0
  2142  0002DF                     	ds	2
  2143  0002E1                     _ExtInt1IsrCallback:
  2144                           	opt stack 0
  2145  0002E1                     	ds	2
  2146  0002E3                     _ExtInt0IsrCallback:
  2147                           	opt stack 0
  2148  0002E3                     	ds	2
  2149  0002E5                     _RtccIsrCallback:
  2150                           	opt stack 0
  2151  0002E5                     	ds	2
  2152  0002E7                     _Tmr4IsrCallback:
  2153                           	opt stack 0
  2154  0002E7                     	ds	2
  2155  0002E9                     _Tmr2IsrCallback:
  2156                           	opt stack 0
  2157  0002E9                     	ds	2
  2158  0002EB                     	ds	1
  2159  0002EC                     Term_MainSm@TermMainSmState:
  2160                           	opt stack 0
  2161  0002EC                     	ds	1
  2162  0002ED                     Terminal@FormatOption:
  2163                           	opt stack 0
  2164  0002ED                     	ds	1
  2165  0002EE                     Terminal@SlaveAddr:
  2166                           	opt stack 0
  2167  0002EE                     	ds	1
  2168  0002EF                     Terminal@PackageLen:
  2169                           	opt stack 0
  2170  0002EF                     	ds	1
  2171  0002F0                     Terminal@TermState:
  2172                           	opt stack 0
  2173  0002F0                     	ds	1
  2174  0002F1                     _USBAlternateInterface:
  2175                           	opt stack 0
  2176  0002F1                     	ds	2
  2177                           tblptru	equ	0xFF8
  2178                           tblptrh	equ	0xFF7
  2179                           tblptrl	equ	0xFF6
  2180                           tablat	equ	0xFF5
  2181                           postinc0	equ	0xFEE
  2182                           wreg	equ	0xFE8
  2183                           postdec1	equ	0xFE5
  2184                           fsr1h	equ	0xFE2
  2185                           fsr1l	equ	0xFE1
  2186                           
  2187                           	psect	dataBANK2
  2188  0002F3                     __pdataBANK2:
  2189                           	opt stack 0
  2190  0002F3                     Terminal@EchoOption:
  2191                           	opt stack 0
  2192  0002F3                     	ds	1
  2193  0002F4                     _MainSystemTimebaseFlag:
  2194                           	opt stack 0
  2195  0002F4                     	ds	1
  2196  0002F5                     _ConnTimeout:
  2197                           	opt stack 0
  2198  0002F5                     	ds	11
  2199                           tblptru	equ	0xFF8
  2200                           tblptrh	equ	0xFF7
  2201                           tblptrl	equ	0xFF6
  2202                           tablat	equ	0xFF5
  2203                           postinc0	equ	0xFEE
  2204                           wreg	equ	0xFE8
  2205                           postdec1	equ	0xFE5
  2206                           fsr1h	equ	0xFE2
  2207                           fsr1l	equ	0xFE1
  2208                           
  2209                           	psect	bssBANK3
  2210  000300                     __pbssBANK3:
  2211                           	opt stack 0
  2212  000300                     _Rtcm_SystemDate:
  2213                           	opt stack 0
  2214  000300                     	ds	8
  2215  000308                     _Rtcm_RtccAlarm:
  2216                           	opt stack 0
  2217  000308                     	ds	6
  2218  00030E                     _pBDTEntryOut:
  2219                           	opt stack 0
  2220  00030E                     	ds	6
  2221  000314                     _BaudRateGen:
  2222                           	opt stack 0
  2223  000314                     	ds	4
  2224  000318                     _USB1msTickCount:
  2225                           	opt stack 0
  2226  000318                     	ds	4
  2227  00031C                     _OsTmr_OsTickCounter:
  2228                           	opt stack 0
  2229  00031C                     	ds	4
  2230  000320                     	ds	2
  2231  000322                     _PhoneNumberLen:
  2232                           	opt stack 0
  2233  000322                     	ds	2
  2234  000324                     _ApnLocal:
  2235                           	opt stack 0
  2236  000324                     	ds	2
  2237  000326                     ConfigureModem@DelayCounter:
  2238                           	opt stack 0
  2239  000326                     	ds	2
  2240  000328                     _UartConfig:
  2241                           	opt stack 0
  2242  000328                     	ds	21
  2243  00033D                     _callerNumber:
  2244                           	opt stack 0
  2245  00033D                     	ds	14
  2246  00034B                     I2cSlv_QueryI2cData@TimeoutTimer:
  2247                           	opt stack 0
  2248  00034B                     	ds	11
  2249  000356                     _I2cConfig:
  2250                           	opt stack 0
  2251  000356                     	ds	10
  2252  000360                     _Led3Blink:
  2253                           	opt stack 0
  2254  000360                     	ds	9
  2255  000369                     _Led2Blink:
  2256                           	opt stack 0
  2257  000369                     	ds	9
  2258  000372                     _Led1Blink:
  2259                           	opt stack 0
  2260  000372                     	ds	9
  2261  00037B                     _dummy_encapsulated_cmd_response:
  2262                           	opt stack 0
  2263  00037B                     	ds	8
  2264  000383                     _line_coding:
  2265                           	opt stack 0
  2266  000383                     	ds	7
  2267  00038A                     _Led3Pulse:
  2268                           	opt stack 0
  2269  00038A                     	ds	6
  2270  000390                     _Led2Pulse:
  2271                           	opt stack 0
  2272  000390                     	ds	6
  2273  000396                     _Led1Pulse:
  2274                           	opt stack 0
  2275  000396                     	ds	6
  2276  00039C                     _I2cRxPacket:
  2277                           	opt stack 0
  2278  00039C                     	ds	6
  2279  0003A2                     _I2cTxPacket:
  2280                           	opt stack 0
  2281  0003A2                     	ds	5
  2282  0003A7                     _HttpGetDataLocal:
  2283                           	opt stack 0
  2284  0003A7                     	ds	5
  2285  0003AC                     Terminal@Addr:
  2286                           	opt stack 0
  2287  0003AC                     	ds	4
  2288  0003B0                     Terminal@Len:
  2289                           	opt stack 0
  2290  0003B0                     	ds	4
  2291  0003B4                     _AlCfg:
  2292                           	opt stack 0
  2293  0003B4                     	ds	4
  2294  0003B8                     _RtcConfig:
  2295                           	opt stack 0
  2296  0003B8                     	ds	4
  2297  0003BC                     initGprsModem@modemCounter:
  2298                           	opt stack 0
  2299  0003BC                     	ds	2
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           postinc0	equ	0xFEE
  2305                           wreg	equ	0xFE8
  2306                           postdec1	equ	0xFE5
  2307                           fsr1h	equ	0xFE2
  2308                           fsr1l	equ	0xFE1
  2309                           
  2310                           	psect	dataBANK3
  2311  0003BE                     __pdataBANK3:
  2312                           	opt stack 0
  2313  0003BE                     ModemEvtParser@F9095:
  2314                           	opt stack 0
  2315  0003BE                     	ds	5
  2316  0003C3                     ModemEvtParser@F9093:
  2317                           	opt stack 0
  2318  0003C3                     	ds	5
  2319  0003C8                     ModemEvtParser@F9091:
  2320                           	opt stack 0
  2321  0003C8                     	ds	4
  2322  0003CC                     MyApp_Task@F8996:
  2323                           	opt stack 0
  2324  0003CC                     	ds	3
  2325  0003CF                     triggerRelay@F8969:
  2326                           	opt stack 0
  2327  0003CF                     	ds	2
  2328  0003D1                     Term_MainSm@TermDelay:
  2329                           	opt stack 0
  2330  0003D1                     	ds	11
  2331  0003DC                     _ConnWait:
  2332                           	opt stack 0
  2333  0003DC                     	ds	11
  2334  0003E7                     SendSmsSm@SwTimer:
  2335                           	opt stack 0
  2336  0003E7                     	ds	11
  2337  0003F2                     CheckModem@Timeout:
  2338                           	opt stack 0
  2339  0003F2                     	ds	11
  2340  0003FD                     MyApp_Task@blickTicks:
  2341                           	opt stack 0
  2342  0003FD                     	ds	2
  2343                           tblptru	equ	0xFF8
  2344                           tblptrh	equ	0xFF7
  2345                           tblptrl	equ	0xFF6
  2346                           tablat	equ	0xFF5
  2347                           postinc0	equ	0xFEE
  2348                           wreg	equ	0xFE8
  2349                           postdec1	equ	0xFE5
  2350                           fsr1h	equ	0xFE2
  2351                           fsr1l	equ	0xFE1
  2352                           
  2353                           	psect	bssBANK4
  2354  000440                     __pbssBANK4:
  2355                           	opt stack 0
  2356  000440                     	ds	10
  2357  00044A                     _cdc_notice:
  2358                           	opt stack 0
  2359  00044A                     	ds	10
  2360  000454                     Term_MainSm@Data:
  2361                           	opt stack 0
  2362  000454                     	ds	50
  2363  000486                     Terminal@TermRxBuffer:
  2364                           	opt stack 0
  2365  000486                     	ds	50
  2366  0004B8                     _PhoneNumber:
  2367                           	opt stack 0
  2368  0004B8                     	ds	20
  2369  0004CC                     Terminal@SwTimer:
  2370                           	opt stack 0
  2371  0004CC                     	ds	11
  2372  0004D7                     I2cSlv_QueryI2cData@QueryTimer:
  2373                           	opt stack 0
  2374  0004D7                     	ds	11
  2375                           tblptru	equ	0xFF8
  2376                           tblptrh	equ	0xFF7
  2377                           tblptrl	equ	0xFF6
  2378                           tablat	equ	0xFF5
  2379                           postinc0	equ	0xFEE
  2380                           wreg	equ	0xFE8
  2381                           postdec1	equ	0xFE5
  2382                           fsr1h	equ	0xFE2
  2383                           fsr1l	equ	0xFE1
  2384                           
  2385                           	psect	dataBANK4
  2386  0004E2                     __pdataBANK4:
  2387                           	opt stack 0
  2388  0004E2                     MyApp_Task@F8989:
  2389                           	opt stack 0
  2390  0004E2                     	ds	14
  2391  0004F0                     ModemEvtParser@F9097:
  2392                           	opt stack 0
  2393  0004F0                     	ds	10
  2394                           tblptru	equ	0xFF8
  2395                           tblptrh	equ	0xFF7
  2396                           tblptrl	equ	0xFF6
  2397                           tablat	equ	0xFF5
  2398                           postinc0	equ	0xFEE
  2399                           wreg	equ	0xFE8
  2400                           postdec1	equ	0xFE5
  2401                           fsr1h	equ	0xFE2
  2402                           fsr1l	equ	0xFE1
  2403                           
  2404                           	psect	bssBANK5
  2405  000500                     __pbssBANK5:
  2406                           	opt stack 0
  2407  000500                     Terminal@Payload:
  2408                           	opt stack 0
  2409  000500                     	ds	80
  2410  000550                     _cdc_data_rx:
  2411                           	opt stack 0
  2412  000550                     	ds	64
  2413                           tblptru	equ	0xFF8
  2414                           tblptrh	equ	0xFF7
  2415                           tblptrl	equ	0xFF6
  2416                           tablat	equ	0xFF5
  2417                           postinc0	equ	0xFEE
  2418                           wreg	equ	0xFE8
  2419                           postdec1	equ	0xFE5
  2420                           fsr1h	equ	0xFE2
  2421                           fsr1l	equ	0xFE1
  2422                           
  2423                           	psect	dataBANK5
  2424  000590                     __pdataBANK5:
  2425                           	opt stack 0
  2426  000590                     _TaskTable:
  2427                           	opt stack 0
  2428  000590                     	ds	80
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           postinc0	equ	0xFEE
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           
  2439                           	psect	bssBANK6
  2440  000600                     __pbssBANK6:
  2441                           	opt stack 0
  2442  000600                     _OsAlarms:
  2443                           	opt stack 0
  2444  000600                     	ds	220
  2445                           tblptru	equ	0xFF8
  2446                           tblptrh	equ	0xFF7
  2447                           tblptrl	equ	0xFF6
  2448                           tablat	equ	0xFF5
  2449                           postinc0	equ	0xFEE
  2450                           wreg	equ	0xFE8
  2451                           postdec1	equ	0xFE5
  2452                           fsr1h	equ	0xFE2
  2453                           fsr1l	equ	0xFE1
  2454                           
  2455                           	psect	bssBANK7
  2456  000700                     __pbssBANK7:
  2457                           	opt stack 0
  2458  000700                     _Mdm_SmsRx:
  2459                           	opt stack 0
  2460  000700                     	ds	132
  2461  000784                     _cdc_data_tx:
  2462                           	opt stack 0
  2463  000784                     	ds	64
  2464  0007C4                     _MessageText:
  2465                           	opt stack 0
  2466  0007C4                     	ds	50
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           postinc0	equ	0xFEE
  2472                           wreg	equ	0xFE8
  2473                           postdec1	equ	0xFE5
  2474                           fsr1h	equ	0xFE2
  2475                           fsr1l	equ	0xFE1
  2476                           
  2477                           	psect	bssBANK8
  2478  000800                     __pbssBANK8:
  2479                           	opt stack 0
  2480  000800                     GsmGprsTerminal@UsbBuffer:
  2481                           	opt stack 0
  2482  000800                     	ds	200
  2483                           tblptru	equ	0xFF8
  2484                           tblptrh	equ	0xFF7
  2485                           tblptrl	equ	0xFF6
  2486                           tablat	equ	0xFF5
  2487                           postinc0	equ	0xFEE
  2488                           wreg	equ	0xFE8
  2489                           postdec1	equ	0xFE5
  2490                           fsr1h	equ	0xFE2
  2491                           fsr1l	equ	0xFE1
  2492                           
  2493                           	psect	bssBANK9
  2494  000900                     __pbssBANK9:
  2495                           	opt stack 0
  2496  000900                     GsmGprsTerminal@UartBuffer:
  2497                           	opt stack 0
  2498  000900                     	ds	200
  2499                           tblptru	equ	0xFF8
  2500                           tblptrh	equ	0xFF7
  2501                           tblptrl	equ	0xFF6
  2502                           tablat	equ	0xFF5
  2503                           postinc0	equ	0xFEE
  2504                           wreg	equ	0xFE8
  2505                           postdec1	equ	0xFE5
  2506                           fsr1h	equ	0xFE2
  2507                           fsr1l	equ	0xFE1
  2508                           
  2509                           	psect	bssBIGRAMl
  2510  000AC8                     __pbssBIGRAMl:
  2511                           	opt stack 0
  2512  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2513                           	opt stack 0
  2514  000AC8                     	ds	400
  2515  000C58                     _RxBuffer:
  2516                           	opt stack 0
  2517  000C58                     	ds	400
  2518                           tblptru	equ	0xFF8
  2519                           tblptrh	equ	0xFF7
  2520                           tblptrl	equ	0xFF6
  2521                           tablat	equ	0xFF5
  2522                           postinc0	equ	0xFEE
  2523                           wreg	equ	0xFE8
  2524                           postdec1	equ	0xFE5
  2525                           fsr1h	equ	0xFE2
  2526                           fsr1l	equ	0xFE1
  2527                           
  2528                           	psect	cstackBANK10
  2529  000A00                     __pcstackBANK10:
  2530                           	opt stack 0
  2531  000A00                     Terminal@UsbRxBuffer:
  2532                           	opt stack 0
  2533                           
  2534                           ; 200 bytes @ 0x0
  2535  000A00                     	ds	200
  2536                           tblptru	equ	0xFF8
  2537                           tblptrh	equ	0xFF7
  2538                           tblptrl	equ	0xFF6
  2539                           tablat	equ	0xFF5
  2540                           postinc0	equ	0xFEE
  2541                           wreg	equ	0xFE8
  2542                           postdec1	equ	0xFE5
  2543                           fsr1h	equ	0xFE2
  2544                           fsr1l	equ	0xFE1
  2545                           
  2546                           	psect	cstackBANK4
  2547  0004FA                     __pcstackBANK4:
  2548                           	opt stack 0
  2549  0004FA                     ??_ScheduleTasks:
  2550                           
  2551                           ; 1 bytes @ 0x0
  2552  0004FA                     	ds	4
  2553                           tblptru	equ	0xFF8
  2554                           tblptrh	equ	0xFF7
  2555                           tblptrl	equ	0xFF6
  2556                           tablat	equ	0xFF5
  2557                           postinc0	equ	0xFEE
  2558                           wreg	equ	0xFE8
  2559                           postdec1	equ	0xFE5
  2560                           fsr1h	equ	0xFE2
  2561                           fsr1l	equ	0xFE1
  2562                           
  2563                           	psect	cstackBANK2
  2564  000200                     __pcstackBANK2:
  2565                           	opt stack 0
  2566  000200                     Terminal@UsbTxBuffer:
  2567                           	opt stack 0
  2568                           
  2569                           ; 200 bytes @ 0x0
  2570  000200                     	ds	200
  2571  0002C8                     InitializeTasks@ActiveTaskIndex:
  2572                           	opt stack 0
  2573                           
  2574                           ; 1 bytes @ 0xC8
  2575  0002C8                     	ds	1
  2576                           tblptru	equ	0xFF8
  2577                           tblptrh	equ	0xFF7
  2578                           tblptrl	equ	0xFF6
  2579                           tablat	equ	0xFF5
  2580                           postinc0	equ	0xFEE
  2581                           wreg	equ	0xFE8
  2582                           postdec1	equ	0xFE5
  2583                           fsr1h	equ	0xFE2
  2584                           fsr1l	equ	0xFE1
  2585                           
  2586                           	psect	cstackBANK1
  2587  000100                     __pcstackBANK1:
  2588                           	opt stack 0
  2589  000100                     SendSmsSm@UartMessage:
  2590                           	opt stack 0
  2591  000100                     InitGprsNetwork@UartMessage:
  2592                           	opt stack 0
  2593  000100                     Terminal@TermTxBuffer:
  2594                           	opt stack 0
  2595  000100                     MyApp_Task@smsText:
  2596                           	opt stack 0
  2597  000100                     HttpGetMethod@UartMessage:
  2598                           	opt stack 0
  2599                           
  2600                           ; 200 bytes @ 0x0
  2601  000100                     	ds	50
  2602  000132                     InitGprsNetwork@Index:
  2603                           	opt stack 0
  2604  000132                     MyApp_Task@phone:
  2605                           	opt stack 0
  2606                           
  2607                           ; 14 bytes @ 0x32
  2608  000132                     	ds	14
  2609  000140                     MyApp_Task@smsNumber:
  2610                           	opt stack 0
  2611                           
  2612                           ; 14 bytes @ 0x40
  2613  000140                     	ds	14
  2614  00014E                     MyApp_Task@cmpString:
  2615                           	opt stack 0
  2616                           
  2617                           ; 3 bytes @ 0x4E
  2618  00014E                     	ds	122
  2619  0001C8                     HttpGetMethod@Index:
  2620                           	opt stack 0
  2621                           
  2622                           ; 1 bytes @ 0xC8
  2623  0001C8                     	ds	1
  2624                           tblptru	equ	0xFF8
  2625                           tblptrh	equ	0xFF7
  2626                           tblptrl	equ	0xFF6
  2627                           tablat	equ	0xFF5
  2628                           postinc0	equ	0xFEE
  2629                           wreg	equ	0xFE8
  2630                           postdec1	equ	0xFE5
  2631                           fsr1h	equ	0xFE2
  2632                           fsr1l	equ	0xFE1
  2633                           
  2634                           	psect	cstackBANK0
  2635  000060                     __pcstackBANK0:
  2636                           	opt stack 0
  2637  000060                     
  2638                           ; 1 bytes @ 0x0
  2639  000060                     	ds	8
  2640  000068                     ??_LowPriorityIsr:
  2641                           
  2642                           ; 1 bytes @ 0x8
  2643  000068                     	ds	21
  2644  00007D                     ??_isdigit:
  2645  00007D                     ??_isspace:
  2646  00007D                     ??_isupper:
  2647  00007D                     ??_Rtcc_GetRtccValue:
  2648  00007D                     ??_UartTxBufferStatus:
  2649  00007D                     ??_USBStdGetDscHandler:
  2650  00007D                     ??_USBStdGetStatusHandler:
  2651  00007D                     ?_USBTransferOnePacket:
  2652                           	opt stack 0
  2653  00007D                     ?_strlen:
  2654                           	opt stack 0
  2655  00007D                     ?_sprintf:
  2656                           	opt stack 0
  2657  00007D                     ?___wmul:
  2658                           	opt stack 0
  2659  00007D                     ?___awdiv:
  2660                           	opt stack 0
  2661  00007D                     ?___awmod:
  2662                           	opt stack 0
  2663  00007D                     ?___lwmod:
  2664                           	opt stack 0
  2665  00007D                     ?_GetOsTickCounter:
  2666                           	opt stack 0
  2667  00007D                     ?___lmul:
  2668                           	opt stack 0
  2669  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2670                           	opt stack 0
  2671  00007D                     SetAckStatus@AckSts:
  2672                           	opt stack 0
  2673  00007D                     WriteByte@Byte:
  2674                           	opt stack 0
  2675  00007D                     ReadByte@Byte:
  2676                           	opt stack 0
  2677  00007D                     Mcu_SetWdgSts@WdgSts:
  2678                           	opt stack 0
  2679  00007D                     RtccIrqInit@Priority:
  2680                           	opt stack 0
  2681  00007D                     Rtcc_SetRtcStatus@Status:
  2682                           	opt stack 0
  2683  00007D                     TmrBInit@Prescaler:
  2684                           	opt stack 0
  2685  00007D                     Tmr_TmrBIrqSet@Priority:
  2686                           	opt stack 0
  2687  00007D                     Tmr_StartTmr@TmrNumb:
  2688                           	opt stack 0
  2689  00007D                     UartWriteByte@ByteToWrite:
  2690                           	opt stack 0
  2691  00007D                     USBTransferOnePacket@dir:
  2692                           	opt stack 0
  2693  00007D                     USBConfigureEndpoint@direction:
  2694                           	opt stack 0
  2695  00007D                     USBCtrlTrfTxService@byteToSend:
  2696                           	opt stack 0
  2697  00007D                     USBCtrlTrfRxService@i:
  2698                           	opt stack 0
  2699  00007D                     Led_SetLedStatus@LedSts:
  2700                           	opt stack 0
  2701  00007D                     toupper@c:
  2702                           	opt stack 0
  2703  00007D                     tolower@c:
  2704                           	opt stack 0
  2705  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2706                           	opt stack 0
  2707  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2708                           	opt stack 0
  2709  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2710                           	opt stack 0
  2711  00007D                     Uart_ClearRxBuffer@Index:
  2712                           	opt stack 0
  2713  00007D                     GenerateEvt@Event:
  2714                           	opt stack 0
  2715  00007D                     ReceiveEvt@Event:
  2716                           	opt stack 0
  2717  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2718                           	opt stack 0
  2719  00007D                     StringCopy@SourceStr:
  2720                           	opt stack 0
  2721  00007D                     ClearBuffer@Buffer:
  2722                           	opt stack 0
  2723  00007D                     sprintf@sp:
  2724                           	opt stack 0
  2725  00007D                     ___wmul@multiplier:
  2726                           	opt stack 0
  2727  00007D                     ___awdiv@dividend:
  2728                           	opt stack 0
  2729  00007D                     ___awmod@dividend:
  2730                           	opt stack 0
  2731  00007D                     ___lwmod@dividend:
  2732                           	opt stack 0
  2733  00007D                     memcpy@d1:
  2734                           	opt stack 0
  2735  00007D                     memset@p1:
  2736                           	opt stack 0
  2737  00007D                     strcat@to:
  2738                           	opt stack 0
  2739  00007D                     strcpy@to:
  2740                           	opt stack 0
  2741  00007D                     strlen@s:
  2742                           	opt stack 0
  2743  00007D                     ___lmul@multiplier:
  2744                           	opt stack 0
  2745                           
  2746                           ; 4 bytes @ 0x1D
  2747  00007D                     	ds	1
  2748  00007E                     ??_USBConfigureEndpoint:
  2749  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2750                           	opt stack 0
  2751  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2752                           	opt stack 0
  2753  00007E                     TmrBInit@Postscaler:
  2754                           	opt stack 0
  2755  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2756                           	opt stack 0
  2757  00007E                     UartWriteByte@Module:
  2758                           	opt stack 0
  2759  00007E                     UartTxBufferStatus@Module:
  2760                           	opt stack 0
  2761  00007E                     USBCtrlTrfRxService@byteToRead:
  2762                           	opt stack 0
  2763  00007E                     USBCtrlTrfInHandler@lastDTS:
  2764                           	opt stack 0
  2765  00007E                     Led_SetLedStatus@Led:
  2766                           	opt stack 0
  2767  00007E                     _isdigit$6151:
  2768                           	opt stack 0
  2769  00007E                     _isspace$6420:
  2770                           	opt stack 0
  2771  00007E                     _isupper$6423:
  2772                           	opt stack 0
  2773  00007E                     I2c_WriteData@WritePacket:
  2774                           	opt stack 0
  2775  00007E                     Rtcc_RtcConfig@RtcConfig:
  2776                           	opt stack 0
  2777  00007E                     USBTransferOnePacket@data:
  2778                           	opt stack 0
  2779  00007E                     USBStdGetStatusHandler@p:
  2780                           	opt stack 0
  2781                           
  2782                           ; 2 bytes @ 0x1E
  2783  00007E                     	ds	1
  2784  00007F                     ??_strlen:
  2785  00007F                     ??_Rtcc_AlarmConfig:
  2786  00007F                     ??_TmrBInit:
  2787  00007F                     Irq_InitIntController@IntPriorityEn:
  2788                           	opt stack 0
  2789  00007F                     Rtcc_GetRtccValue@RetValue:
  2790                           	opt stack 0
  2791  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2792                           	opt stack 0
  2793  00007F                     UartTxBufferStatus@TxBufferStatus:
  2794                           	opt stack 0
  2795  00007F                     GenerateEvt@EventStatus:
  2796                           	opt stack 0
  2797  00007F                     isdigit@c:
  2798                           	opt stack 0
  2799  00007F                     isspace@c:
  2800                           	opt stack 0
  2801  00007F                     isupper@c:
  2802                           	opt stack 0
  2803  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2804                           	opt stack 0
  2805  00007F                     StringCopy@DestStr:
  2806                           	opt stack 0
  2807  00007F                     ClearBuffer@Len:
  2808                           	opt stack 0
  2809  00007F                     sprintf@f:
  2810                           	opt stack 0
  2811  00007F                     ___wmul@multiplicand:
  2812                           	opt stack 0
  2813  00007F                     ___awdiv@divisor:
  2814                           	opt stack 0
  2815  00007F                     ___awmod@divisor:
  2816                           	opt stack 0
  2817  00007F                     ___lwmod@divisor:
  2818                           	opt stack 0
  2819  00007F                     memcpy@s1:
  2820                           	opt stack 0
  2821  00007F                     memset@c:
  2822                           	opt stack 0
  2823  00007F                     strcat@from:
  2824                           	opt stack 0
  2825  00007F                     strcpy@from:
  2826                           	opt stack 0
  2827                           
  2828                           ; 2 bytes @ 0x1F
  2829  00007F                     	ds	1
  2830  000080                     ??_isalpha:
  2831  000080                     ??_isxdigit:
  2832  000080                     ??_I2c_WriteData:
  2833  000080                     ??_Rtcc_RtcConfig:
  2834  000080                     Rtcc_GetRtccValue@RegValue:
  2835                           	opt stack 0
  2836  000080                     TmrBInit@TmrNumb:
  2837                           	opt stack 0
  2838  000080                     ReceiveEvt@EventStatus:
  2839                           	opt stack 0
  2840  000080                     USBTransferOnePacket@len:
  2841                           	opt stack 0
  2842  000080                     I2c_ReadData@ReadPacket:
  2843                           	opt stack 0
  2844  000080                     Uart_WriteConstString@ConstStringToWrite:
  2845                           	opt stack 0
  2846  000080                     Uart_WriteString@StringToWrite:
  2847                           	opt stack 0
  2848  000080                     Uart_WriteStringLen@StringToWrite:
  2849                           	opt stack 0
  2850  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2851                           	opt stack 0
  2852  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2853                           	opt stack 0
  2854                           
  2855                           ; 2 bytes @ 0x20
  2856  000080                     	ds	1
  2857  000081                     ?_GetElapsedTime:
  2858                           	opt stack 0
  2859  000081                     ?_Rtcm_GetRtccDate:
  2860                           	opt stack 0
  2861  000081                     Mdm_IsSmsReceived@Ret:
  2862                           	opt stack 0
  2863  000081                     Mdm_IsRinging@Ret:
  2864                           	opt stack 0
  2865  000081                     I2cSlv_I2cReadMsgSts@Result:
  2866                           	opt stack 0
  2867  000081                     USBTransferOnePacket@ep:
  2868                           	opt stack 0
  2869  000081                     Led_SetLedBlinkTime@Led:
  2870                           	opt stack 0
  2871  000081                     ___awdiv@counter:
  2872                           	opt stack 0
  2873  000081                     ___awmod@counter:
  2874                           	opt stack 0
  2875  000081                     ___lwmod@counter:
  2876                           	opt stack 0
  2877  000081                     _isalpha$6417:
  2878                           	opt stack 0
  2879  000081                     _isxdigit$6427:
  2880                           	opt stack 0
  2881  000081                     OsTmr_StartTimer@Timer:
  2882                           	opt stack 0
  2883  000081                     StringCopy@Len:
  2884                           	opt stack 0
  2885  000081                     ClearBuffer@Index:
  2886                           	opt stack 0
  2887  000081                     ___wmul@product:
  2888                           	opt stack 0
  2889  000081                     memcpy@n:
  2890                           	opt stack 0
  2891  000081                     memset@n:
  2892                           	opt stack 0
  2893  000081                     strcat@cp:
  2894                           	opt stack 0
  2895  000081                     strcpy@cp:
  2896                           	opt stack 0
  2897  000081                     strlen@cp:
  2898                           	opt stack 0
  2899  000081                     GetElapsedTime@StartTime:
  2900                           	opt stack 0
  2901  000081                     ___lmul@multiplicand:
  2902                           	opt stack 0
  2903                           
  2904                           ; 4 bytes @ 0x21
  2905  000081                     	ds	1
  2906  000082                     ??_I2c_ReadData:
  2907  000082                     Uart_WriteConstString@Module:
  2908                           	opt stack 0
  2909  000082                     Uart_WriteString@Module:
  2910                           	opt stack 0
  2911  000082                     Uart_WriteStringLen@Len:
  2912                           	opt stack 0
  2913  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  2914                           	opt stack 0
  2915  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2916                           	opt stack 0
  2917  000082                     USBConfigureEndpoint@EPNum:
  2918                           	opt stack 0
  2919  000082                     ___awdiv@sign:
  2920                           	opt stack 0
  2921  000082                     ___awmod@sign:
  2922                           	opt stack 0
  2923  000082                     isalpha@c:
  2924                           	opt stack 0
  2925  000082                     isxdigit@c:
  2926                           	opt stack 0
  2927  000082                     USBTransferOnePacket@handle:
  2928                           	opt stack 0
  2929                           
  2930                           ; 2 bytes @ 0x22
  2931  000082                     	ds	1
  2932  000083                     ??_StringCopy:
  2933  000083                     ?_GetCallerNumber:
  2934                           	opt stack 0
  2935  000083                     ?_atoi:
  2936                           	opt stack 0
  2937  000083                     ?_xtoi:
  2938                           	opt stack 0
  2939  000083                     ?___lwdiv:
  2940                           	opt stack 0
  2941  000083                     Uart_WriteStringLen@Index:
  2942                           	opt stack 0
  2943  000083                     Mdm_SetSmsFormat@Index:
  2944                           	opt stack 0
  2945  000083                     I2cSlv_SendI2cMsg@DataLenght:
  2946                           	opt stack 0
  2947  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2948                           	opt stack 0
  2949  000083                     sprintf@flag:
  2950                           	opt stack 0
  2951  000083                     memcpy@tmp:
  2952                           	opt stack 0
  2953  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  2954                           	opt stack 0
  2955  000083                     USBConfigureEndpoint@handle:
  2956                           	opt stack 0
  2957  000083                     putUSBUSART@data:
  2958                           	opt stack 0
  2959  000083                     atoi@s:
  2960                           	opt stack 0
  2961  000083                     ___awdiv@quotient:
  2962                           	opt stack 0
  2963  000083                     ___lwdiv@dividend:
  2964                           	opt stack 0
  2965  000083                     memset@p:
  2966                           	opt stack 0
  2967  000083                     xtoi@s:
  2968                           	opt stack 0
  2969  000083                     OsTmr_StartTimer@Timeout:
  2970                           	opt stack 0
  2971                           
  2972                           ; 4 bytes @ 0x23
  2973  000083                     	ds	1
  2974  000084                     Uart_WriteStringLen@Module:
  2975                           	opt stack 0
  2976  000084                     I2cSlv_SendI2cMsg@TxSts:
  2977                           	opt stack 0
  2978  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  2979                           	opt stack 0
  2980  000084                     CDCTxService@i:
  2981                           	opt stack 0
  2982  000084                     getsUSBUSART@buffer:
  2983                           	opt stack 0
  2984  000084                     sprintf@ap:
  2985                           	opt stack 0
  2986  000084                     memcpy@d:
  2987                           	opt stack 0
  2988  000084                     Mdm_SetSmsFormat@UartMessage:
  2989                           	opt stack 0
  2990                           
  2991                           ; 20 bytes @ 0x24
  2992  000084                     	ds	1
  2993  000085                     ??_atoi:
  2994  000085                     ??_xtoi:
  2995  000085                     ??_GetElapsedTime:
  2996  000085                     Rtcc_SetRtccValue@Value:
  2997                           	opt stack 0
  2998  000085                     USBDeviceInit@i:
  2999                           	opt stack 0
  3000  000085                     USBEnableEndpoint@options:
  3001                           	opt stack 0
  3002  000085                     putUSBUSART@length:
  3003                           	opt stack 0
  3004  000085                     CDCTxService@byte_to_send:
  3005                           	opt stack 0
  3006  000085                     StringCompare@String1:
  3007                           	opt stack 0
  3008  000085                     StringCopy@Index:
  3009                           	opt stack 0
  3010  000085                     ___lwdiv@divisor:
  3011                           	opt stack 0
  3012  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3013                           	opt stack 0
  3014  000085                     ___lmul@product:
  3015                           	opt stack 0
  3016                           
  3017                           ; 4 bytes @ 0x25
  3018  000085                     	ds	1
  3019  000086                     ??_Rtcc_SetRtccValue:
  3020  000086                     getsUSBUSART@len:
  3021                           	opt stack 0
  3022  000086                     sprintf@c:
  3023                           	opt stack 0
  3024  000086                     USBEnableEndpoint@p:
  3025                           	opt stack 0
  3026  000086                     memcpy@s:
  3027                           	opt stack 0
  3028                           
  3029                           ; 2 bytes @ 0x26
  3030  000086                     	ds	1
  3031  000087                     atoi@sign:
  3032                           	opt stack 0
  3033  000087                     ___lwdiv@counter:
  3034                           	opt stack 0
  3035  000087                     xtoi@sign:
  3036                           	opt stack 0
  3037  000087                     Mdm_GetSmsData@MessageText:
  3038                           	opt stack 0
  3039  000087                     StringCompare@String2:
  3040                           	opt stack 0
  3041  000087                     sprintf@cp:
  3042                           	opt stack 0
  3043                           
  3044                           ; 2 bytes @ 0x27
  3045  000087                     	ds	1
  3046  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3047                           	opt stack 0
  3048  000088                     USBEnableEndpoint@ep:
  3049                           	opt stack 0
  3050  000088                     atoi@a:
  3051                           	opt stack 0
  3052  000088                     ___lwdiv@quotient:
  3053                           	opt stack 0
  3054  000088                     xtoi@val:
  3055                           	opt stack 0
  3056                           
  3057                           ; 2 bytes @ 0x28
  3058  000088                     	ds	1
  3059  000089                     ??_Rtcm_GetRtccDate:
  3060  000089                     ?_strtol:
  3061                           	opt stack 0
  3062  000089                     ?___lldiv:
  3063                           	opt stack 0
  3064  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3065                           	opt stack 0
  3066  000089                     Mdm_GetSmsData@MessageHeader:
  3067                           	opt stack 0
  3068  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3069                           	opt stack 0
  3070  000089                     StringCompare@Len:
  3071                           	opt stack 0
  3072  000089                     strtol@s:
  3073                           	opt stack 0
  3074  000089                     ___lldiv@dividend:
  3075                           	opt stack 0
  3076  000089                     Rtcm_SetRtccDate@Date:
  3077                           	opt stack 0
  3078                           
  3079                           ; 8 bytes @ 0x29
  3080  000089                     	ds	1
  3081  00008A                     xtoi@c:
  3082                           	opt stack 0
  3083  00008A                     LedBlinkStateMachine@LedBlink:
  3084                           	opt stack 0
  3085  00008A                     LedPulseStateMachine@LedPulse:
  3086                           	opt stack 0
  3087  00008A                     secondsAppTimer@counter:
  3088                           	opt stack 0
  3089  00008A                     utoa@buf:
  3090                           	opt stack 0
  3091  00008A                     Rtcm_GetRtccDate@LocalDate:
  3092                           	opt stack 0
  3093                           
  3094                           ; 8 bytes @ 0x2A
  3095  00008A                     	ds	1
  3096  00008B                     Mdm_GetSmsData@GetSmsStatus:
  3097                           	opt stack 0
  3098  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3099                           	opt stack 0
  3100  00008B                     strtol@endptr:
  3101                           	opt stack 0
  3102                           
  3103                           ; 2 bytes @ 0x2B
  3104  00008B                     	ds	1
  3105  00008C                     LedPulseStateMachine@Led:
  3106                           	opt stack 0
  3107  00008C                     secondsAppTimer@isCyclic:
  3108                           	opt stack 0
  3109  00008C                     utoa@val:
  3110                           	opt stack 0
  3111                           
  3112                           ; 2 bytes @ 0x2C
  3113  00008C                     	ds	1
  3114  00008D                     StringCompare@Result:
  3115                           	opt stack 0
  3116  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3117                           	opt stack 0
  3118  00008D                     strtol@base:
  3119                           	opt stack 0
  3120  00008D                     GetElapsedTime@TimeValue:
  3121                           	opt stack 0
  3122  00008D                     ___lldiv@divisor:
  3123                           	opt stack 0
  3124                           
  3125                           ; 4 bytes @ 0x2D
  3126  00008D                     	ds	1
  3127  00008E                     StringCompare@Index:
  3128                           	opt stack 0
  3129  00008E                     utoa@base:
  3130                           	opt stack 0
  3131                           
  3132                           ; 2 bytes @ 0x2E
  3133  00008E                     	ds	1
  3134  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3135  00008F                     ??_strtol:
  3136  00008F                     secondsAppTimer@seconds:
  3137                           	opt stack 0
  3138  00008F                     LedStateMachine@LedSts:
  3139                           	opt stack 0
  3140                           
  3141                           ; 2 bytes @ 0x2F
  3142  00008F                     	ds	1
  3143  000090                     secondsAppTimer@isExpired:
  3144                           	opt stack 0
  3145  000090                     utoa@v:
  3146                           	opt stack 0
  3147  000090                     ModemEvtParser@CallReadyString:
  3148                           	opt stack 0
  3149                           
  3150                           ; 10 bytes @ 0x30
  3151  000090                     	ds	1
  3152  000091                     ??_USBStdFeatureReqHandler:
  3153  000091                     USBStdSetCfgHandler@i:
  3154                           	opt stack 0
  3155  000091                     LedStateMachine@LedOut:
  3156                           	opt stack 0
  3157  000091                     secondsAppTimer@destinationTicks:
  3158                           	opt stack 0
  3159  000091                     GetElapsedTime@CurrentTimestamp:
  3160                           	opt stack 0
  3161  000091                     ___lldiv@quotient:
  3162                           	opt stack 0
  3163                           
  3164                           ; 4 bytes @ 0x31
  3165  000091                     	ds	1
  3166  000092                     utoa@c:
  3167                           	opt stack 0
  3168  000092                     USBStdFeatureReqHandler@pUEP:
  3169                           	opt stack 0
  3170                           
  3171                           ; 2 bytes @ 0x32
  3172  000092                     	ds	1
  3173  000093                     strtol@sign:
  3174                           	opt stack 0
  3175  000093                     LedStateMachine@LedBlink:
  3176                           	opt stack 0
  3177  000093                     blinkForSeconds@blickTicks:
  3178                           	opt stack 0
  3179  000093                     itoa@buf:
  3180                           	opt stack 0
  3181                           
  3182                           ; 2 bytes @ 0x33
  3183  000093                     	ds	1
  3184  000094                     USBStdFeatureReqHandler@current_ep_data:
  3185                           	opt stack 0
  3186  000094                     strtol@a:
  3187                           	opt stack 0
  3188                           
  3189                           ; 4 bytes @ 0x34
  3190  000094                     	ds	1
  3191  000095                     blinkForSeconds@seconds:
  3192                           	opt stack 0
  3193  000095                     ___lldiv@counter:
  3194                           	opt stack 0
  3195  000095                     OsTmr_GetTimerStatus@Timer:
  3196                           	opt stack 0
  3197  000095                     USBStdFeatureReqHandler@p:
  3198                           	opt stack 0
  3199  000095                     LedStateMachine@LedPulse:
  3200                           	opt stack 0
  3201  000095                     itoa@val:
  3202                           	opt stack 0
  3203                           
  3204                           ; 2 bytes @ 0x35
  3205  000095                     	ds	1
  3206  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3207                           	opt stack 0
  3208  000096                     SetUartBaudRate@UartConfig:
  3209                           	opt stack 0
  3210  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3211                           	opt stack 0
  3212                           
  3213                           ; 4 bytes @ 0x36
  3214  000096                     	ds	1
  3215  000097                     ??_USBCtrlEPService:
  3216  000097                     itoa@base:
  3217                           	opt stack 0
  3218                           
  3219                           ; 2 bytes @ 0x37
  3220  000097                     	ds	1
  3221  000098                     Tmr_TmrBPrSet@Prescaler:
  3222                           	opt stack 0
  3223  000098                     Mdm_SetSmsFormat@TextFormat:
  3224                           	opt stack 0
  3225  000098                     USBDeviceTasks@i:
  3226                           	opt stack 0
  3227  000098                     LedStateMachine@LedOutSts:
  3228                           	opt stack 0
  3229  000098                     strtol@c:
  3230                           	opt stack 0
  3231                           
  3232                           ; 1 bytes @ 0x38
  3233  000098                     	ds	1
  3234  000099                     Tmr_TmrBPrSet@Postscaler:
  3235                           	opt stack 0
  3236  000099                     SetUartBaudRate@Module:
  3237                           	opt stack 0
  3238  000099                     LedStateMachine@Led:
  3239                           	opt stack 0
  3240  000099                     itoa@cp:
  3241                           	opt stack 0
  3242                           
  3243                           ; 2 bytes @ 0x39
  3244  000099                     	ds	1
  3245  00009A                     ??_Led_MainTask:
  3246  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3247                           	opt stack 0
  3248  00009A                     SetUartBaudRate@BaudRateRegister:
  3249                           	opt stack 0
  3250  00009A                     SetBaudRate@McuClockHz:
  3251                           	opt stack 0
  3252  00009A                     ModemEvtParser@ClipString:
  3253                           	opt stack 0
  3254                           
  3255                           ; 5 bytes @ 0x3A
  3256  00009A                     	ds	1
  3257  00009B                     ??_SendSmsSm:
  3258  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3259                           	opt stack 0
  3260  00009B                     OsTmr_Wait@WaitTimer:
  3261                           	opt stack 0
  3262  00009B                     InitGprsNetwork@Apn:
  3263                           	opt stack 0
  3264  00009B                     HttpGetMethod@GetData:
  3265                           	opt stack 0
  3266                           
  3267                           ; 2 bytes @ 0x3B
  3268  00009B                     	ds	1
  3269  00009C                     SetUartBaudRate@DivisionFactor:
  3270                           	opt stack 0
  3271  00009C                     Tmr_TmrBPrSet@Divisor:
  3272                           	opt stack 0
  3273                           
  3274                           ; 4 bytes @ 0x3C
  3275  00009C                     	ds	1
  3276  00009D                     ??_HttpGetMethod:
  3277  00009D                     InitGprsNetwork@ApnLen:
  3278                           	opt stack 0
  3279  00009D                     Uart_InitUartModule@UartConfig:
  3280                           	opt stack 0
  3281  00009D                     OsTmr_Wait@DelayMs:
  3282                           	opt stack 0
  3283                           
  3284                           ; 4 bytes @ 0x3D
  3285  00009D                     	ds	1
  3286  00009E                     ??_SetBaudRate:
  3287  00009E                     ??_InitGprsNetwork:
  3288                           
  3289                           ; 1 bytes @ 0x3E
  3290  00009E                     	ds	1
  3291  00009F                     ??_Uart_InitUartModule:
  3292  00009F                     ModemEvtParser@SmsString:
  3293                           	opt stack 0
  3294                           
  3295                           ; 5 bytes @ 0x3F
  3296  00009F                     	ds	1
  3297  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3298                           	opt stack 0
  3299                           
  3300                           ; 2 bytes @ 0x40
  3301  0000A0                     	ds	1
  3302  0000A1                     Uart_InitUartModule@Module:
  3303                           	opt stack 0
  3304  0000A1                     OsTmr_Wait@Ret:
  3305                           	opt stack 0
  3306                           
  3307                           ; 1 bytes @ 0x41
  3308  0000A1                     	ds	1
  3309  0000A2                     ??_Terminal:
  3310  0000A2                     I2c_InitI2cModule@I2cConfig:
  3311                           	opt stack 0
  3312                           
  3313                           ; 2 bytes @ 0x42
  3314  0000A2                     	ds	1
  3315  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3316                           	opt stack 0
  3317                           
  3318                           ; 1 bytes @ 0x43
  3319  0000A3                     	ds	1
  3320  0000A4                     ??_I2c_InitI2cModule:
  3321  0000A4                     Terminal@i:
  3322                           	opt stack 0
  3323  0000A4                     ModemEvtParser@RingString:
  3324                           	opt stack 0
  3325  0000A4                     InitSchedTimer@TmrBConfig:
  3326                           	opt stack 0
  3327                           
  3328                           ; 7 bytes @ 0x44
  3329  0000A4                     	ds	1
  3330  0000A5                     Terminal@ReceivedBytes:
  3331                           	opt stack 0
  3332                           
  3333                           ; 1 bytes @ 0x45
  3334  0000A5                     	ds	1
  3335  0000A6                     Terminal@Index:
  3336                           	opt stack 0
  3337                           
  3338                           ; 1 bytes @ 0x46
  3339  0000A6                     	ds	1
  3340  0000A7                     Term_MainSm@FwkMajorStr:
  3341                           	opt stack 0
  3342                           
  3343                           ; 4 bytes @ 0x47
  3344  0000A7                     	ds	1
  3345  0000A8                     ModemEvtParser@Match:
  3346                           	opt stack 0
  3347                           
  3348                           ; 1 bytes @ 0x48
  3349  0000A8                     	ds	1
  3350  0000A9                     ModemEvtParser@CompareIdx:
  3351                           	opt stack 0
  3352                           
  3353                           ; 1 bytes @ 0x49
  3354  0000A9                     	ds	1
  3355  0000AA                     
  3356                           ; 1 bytes @ 0x4A
  3357  0000AA                     	ds	1
  3358  0000AB                     Term_MainSm@FwkMinorStr:
  3359                           	opt stack 0
  3360                           
  3361                           ; 4 bytes @ 0x4B
  3362  0000AB                     	ds	4
  3363  0000AF                     Term_MainSm@FwkBuildStr:
  3364                           	opt stack 0
  3365                           
  3366                           ; 4 bytes @ 0x4F
  3367  0000AF                     	ds	4
  3368  0000B3                     ??_InitializeTasks:
  3369  0000B3                     ScheduleTasks@ActiveTaskIndex:
  3370                           	opt stack 0
  3371                           
  3372                           ; 1 bytes @ 0x53
  3373  0000B3                     	ds	2
  3374  0000B5                     tblptru	equ	0xFF8
  3375                           tblptrh	equ	0xFF7
  3376                           tblptrl	equ	0xFF6
  3377                           tablat	equ	0xFF5
  3378                           postinc0	equ	0xFEE
  3379                           wreg	equ	0xFE8
  3380                           postdec1	equ	0xFE5
  3381                           fsr1h	equ	0xFE2
  3382                           fsr1l	equ	0xFE1
  3383                           
  3384                           ; 1 bytes @ 0x55
  3385                           
  3386                           	psect	cstackCOMRAM
  3387  000001                     __pcstackCOMRAM:
  3388                           	opt stack 0
  3389  000001                     i2GenerateEvt@Event:
  3390                           	opt stack 0
  3391                           
  3392                           ; 2 bytes @ 0x0
  3393  000001                     	ds	2
  3394  000003                     i2GenerateEvt@EventStatus:
  3395                           	opt stack 0
  3396                           
  3397                           ; 1 bytes @ 0x2
  3398  000003                     	ds	1
  3399  000004                     Uart_MdmGsmGprsReadService@UartData:
  3400                           	opt stack 0
  3401                           
  3402                           ; 1 bytes @ 0x3
  3403  000004                     	ds	1
  3404  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3405                           	opt stack 0
  3406                           
  3407                           ; 2 bytes @ 0x4
  3408  000005                     	ds	2
  3409  000007                     ??_HighPriorityIsr:
  3410                           
  3411                           ; 1 bytes @ 0x6
  3412  000007                     	ds	18
  3413  000019                     ?i1___wmul:
  3414                           	opt stack 0
  3415  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3416                           	opt stack 0
  3417  000019                     i1GenerateEvt@Event:
  3418                           	opt stack 0
  3419  000019                     i1___wmul@multiplier:
  3420                           	opt stack 0
  3421                           
  3422                           ; 2 bytes @ 0x18
  3423  000019                     	ds	2
  3424  00001B                     i1GenerateEvt@EventStatus:
  3425                           	opt stack 0
  3426  00001B                     i1___wmul@multiplicand:
  3427                           	opt stack 0
  3428                           
  3429                           ; 2 bytes @ 0x1A
  3430  00001B                     	ds	1
  3431  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3432                           	opt stack 0
  3433                           
  3434                           ; 2 bytes @ 0x1B
  3435  00001C                     	ds	1
  3436  00001D                     i1___wmul@product:
  3437                           	opt stack 0
  3438                           
  3439                           ; 2 bytes @ 0x1C
  3440  00001D                     	ds	1
  3441  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3442                           	opt stack 0
  3443                           
  3444                           ; 1 bytes @ 0x1D
  3445  00001E                     	ds	1
  3446  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3447                           	opt stack 0
  3448                           
  3449                           ; 1 bytes @ 0x1E
  3450  00001F                     	ds	1
  3451  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3452                           	opt stack 0
  3453                           
  3454                           ; 1 bytes @ 0x1F
  3455  000020                     	ds	1
  3456  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3457                           	opt stack 0
  3458                           
  3459                           ; 2 bytes @ 0x20
  3460  000021                     	ds	2
  3461  000023                     tblptru	equ	0xFF8
  3462                           tblptrh	equ	0xFF7
  3463                           tblptrl	equ	0xFF6
  3464                           tablat	equ	0xFF5
  3465                           postinc0	equ	0xFEE
  3466                           wreg	equ	0xFE8
  3467                           postdec1	equ	0xFE5
  3468                           fsr1h	equ	0xFE2
  3469                           fsr1l	equ	0xFE1
  3470                           
  3471                           ; 1 bytes @ 0x22
  3472 ;;
  3473 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3474 ;;
  3475 ;; *************** function _main *****************
  3476 ;; Defined at:
  3477 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  2   14[None  ] short 
  3484 ;; Registers used:
  3485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3495 ;;Total ram usage:        0 bytes
  3496 ;; Hardware stack levels required when called:   23
  3497 ;; This function calls:
  3498 ;;		_Sch_MainScheduler
  3499 ;;		_SystemInit
  3500 ;; This function is called by:
  3501 ;;		Startup code after reset
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text0
  3506  006228                     __ptext0:
  3507                           	opt stack 0
  3508  006228                     _main:
  3509                           	opt stack 8
  3510                           
  3511                           ;main.c: 61: SystemInit();
  3512                           
  3513                           ;incstack = 0
  3514  006228  EC46  F02E         	call	_SystemInit	;wreg free
  3515                           
  3516                           ;main.c: 64: Sch_MainScheduler();
  3517  00622C  EC18  F030         	call	_Sch_MainScheduler	;wreg free
  3518                           
  3519                           ;main.c: 67: return 0;
  3520                           ;	Return value of _main is never used
  3521  006230  EF66  F000         	goto	start
  3522  006234                     __end_of_main:
  3523                           	opt stack 0
  3524                           tblptru	equ	0xFF8
  3525                           tblptrh	equ	0xFF7
  3526                           tblptrl	equ	0xFF6
  3527                           tablat	equ	0xFF5
  3528                           postinc0	equ	0xFEE
  3529                           wreg	equ	0xFE8
  3530                           postdec1	equ	0xFE5
  3531                           fsr1h	equ	0xFE2
  3532                           fsr1l	equ	0xFE1
  3533                           
  3534 ;; *************** function _SystemInit *****************
  3535 ;; Defined at:
  3536 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;		None
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;		None
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3554 ;;Total ram usage:        0 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; Hardware stack levels required when called:   15
  3557 ;; This function calls:
  3558 ;;		_InitSchedTimer
  3559 ;;		_Irq_InitIntController
  3560 ;;		_Mcu_ConfigExtInt
  3561 ;;		_Mcu_StartSystemPll
  3562 ;;		_Pm_DsReleasePinControl
  3563 ;;		_Tmr_RegisterTmr2IsrCallback
  3564 ;; This function is called by:
  3565 ;;		_main
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text1
  3570  005C8C                     __ptext1:
  3571                           	opt stack 0
  3572  005C8C                     _SystemInit:
  3573                           	opt stack 15
  3574                           
  3575                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3576                           
  3577                           ;incstack = 0
  3578  005C8C  EC37  F031         	call	_Pm_DsReleasePinControl	;wreg free
  3579                           
  3580                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3581  005C90  EC09  F030         	call	_Mcu_StartSystemPll	;wreg free
  3582                           
  3583                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3584  005C94  0E01               	movlw	1
  3585  005C96  0100               	movlb	0	; () banked
  3586  005C98  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3587  005C9A  0E01               	movlw	1
  3588  005C9C  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3589  005C9E  0E01               	movlw	1
  3590  005CA0  ECEA  F02E         	call	_Irq_InitIntController
  3591                           
  3592                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3593  005CA4  0E0C               	movlw	low _Sch_SchmIntService
  3594  005CA6  0100               	movlb	0	; () banked
  3595  005CA8  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3596  005CAA  0E62               	movlw	high _Sch_SchmIntService
  3597  005CAC  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3598  005CAE  EC1A  F031         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3599                           
  3600                           ;sys_init.c: 132: InitSchedTimer();
  3601  005CB2  ECA6  F02E         	call	_InitSchedTimer	;wreg free
  3602                           
  3603                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3604  005CB6  EC43  F030         	call	_Mcu_ConfigExtInt	;wreg free
  3605  005CBA  0012               	return		;funcret
  3606  005CBC                     __end_of_SystemInit:
  3607                           	opt stack 0
  3608                           tblptru	equ	0xFF8
  3609                           tblptrh	equ	0xFF7
  3610                           tblptrl	equ	0xFF6
  3611                           tablat	equ	0xFF5
  3612                           postinc0	equ	0xFEE
  3613                           wreg	equ	0xFE8
  3614                           postdec1	equ	0xFE5
  3615                           fsr1h	equ	0xFE2
  3616                           fsr1l	equ	0xFE1
  3617                           
  3618 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3619 ;; Defined at:
  3620 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3623 ;;		 -> Sch_SchmIntService(1), 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2, status,0
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3635 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3638 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3639 ;;Total ram usage:        2 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:   11
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_SystemInit
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text2
  3650  006234                     __ptext2:
  3651                           	opt stack 0
  3652  006234                     _Tmr_RegisterTmr2IsrCallback:
  3653                           	opt stack 18
  3654                           
  3655                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3656                           
  3657                           ;incstack = 0
  3658  006234  C07D  F2E9         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3659  006238  C07E  F2EA         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3660  00623C  0012               	return		;funcret
  3661  00623E                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3662                           	opt stack 0
  3663                           tblptru	equ	0xFF8
  3664                           tblptrh	equ	0xFF7
  3665                           tblptrl	equ	0xFF6
  3666                           tablat	equ	0xFF5
  3667                           postinc0	equ	0xFEE
  3668                           wreg	equ	0xFE8
  3669                           postdec1	equ	0xFE5
  3670                           fsr1h	equ	0xFE2
  3671                           fsr1l	equ	0xFE1
  3672                           
  3673 ;; *************** function _Pm_DsReleasePinControl *****************
  3674 ;; Defined at:
  3675 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		None
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3693 ;;Total ram usage:        0 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:   11
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_SystemInit
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text3
  3704  00626E                     __ptext3:
  3705                           	opt stack 0
  3706  00626E                     _Pm_DsReleasePinControl:
  3707                           	opt stack 18
  3708                           
  3709                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3710                           
  3711                           ;incstack = 0
  3712  00626E  010F               	movlb	15	; () banked
  3713  006270  914C               	bcf	76,0,b	;volatile
  3714                           
  3715                           ; BSR set to: 15
  3716  006272  0012               	return		;funcret
  3717  006274                     __end_of_Pm_DsReleasePinControl:
  3718                           	opt stack 0
  3719                           tblptru	equ	0xFF8
  3720                           tblptrh	equ	0xFF7
  3721                           tblptrl	equ	0xFF6
  3722                           tablat	equ	0xFF5
  3723                           postinc0	equ	0xFEE
  3724                           wreg	equ	0xFE8
  3725                           postdec1	equ	0xFE5
  3726                           fsr1h	equ	0xFE2
  3727                           fsr1l	equ	0xFE1
  3728                           
  3729 ;; *************** function _Mcu_StartSystemPll *****************
  3730 ;; Defined at:
  3731 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3746 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3748 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3749 ;;Total ram usage:        2 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:   11
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_SystemInit
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text4
  3760  006012                     __ptext4:
  3761                           	opt stack 0
  3762  006012                     _Mcu_StartSystemPll:
  3763                           	opt stack 18
  3764                           
  3765                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3766                           
  3767                           ; BSR set to: 15
  3768                           ;incstack = 0
  3769  006012  0E03               	movlw	3
  3770  006014  0100               	movlb	0	; () banked
  3771  006016  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3772  006018  0EE8               	movlw	232
  3773  00601A  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3777  00601C  8C9B               	bsf	3995,6,c	;volatile
  3778  00601E                     l11027:
  3779                           
  3780                           ; BSR set to: 0
  3781  00601E  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3782  006020  A0D8               	btfss	status,0,c
  3783  006022  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3784  006024  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3785  006026  E1FB               	bnz	l11027
  3786  006028  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3787  00602A  B4D8               	btfsc	status,2,c
  3788  00602C  0012               	return	
  3789  00602E  D7F7               	goto	l237
  3790  006030                     __end_of_Mcu_StartSystemPll:
  3791                           	opt stack 0
  3792                           tblptru	equ	0xFF8
  3793                           tblptrh	equ	0xFF7
  3794                           tblptrl	equ	0xFF6
  3795                           tablat	equ	0xFF5
  3796                           postinc0	equ	0xFEE
  3797                           wreg	equ	0xFE8
  3798                           postdec1	equ	0xFE5
  3799                           fsr1h	equ	0xFE2
  3800                           fsr1l	equ	0xFE1
  3801                           status	equ	0xFD8
  3802                           
  3803 ;; *************** function _Mcu_ConfigExtInt *****************
  3804 ;; Defined at:
  3805 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3823 ;;Total ram usage:        0 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; Hardware stack levels required when called:   11
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_SystemInit
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text5
  3834  006086                     __ptext5:
  3835                           	opt stack 0
  3836  006086                     _Mcu_ConfigExtInt:
  3837                           	opt stack 18
  3838                           
  3839                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;incstack = 0
  3843  006086  8093               	bsf	3987,0,c	;volatile
  3844                           
  3845                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3846  006088  8695               	bsf	3989,3,c	;volatile
  3847                           
  3848                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3849  00608A  010F               	movlb	15	; () banked
  3850  00608C  8949               	bsf	73,4,b	;volatile
  3851                           
  3852                           ; BSR set to: 15
  3853                           ;mcu_drv.c: 108: RPINR1 = 20;
  3854  00608E  0E14               	movlw	20
  3855  006090  010E               	movlb	14	; () banked
  3856  006092  6FE7               	movwf	231,b	;volatile
  3857                           
  3858                           ; BSR set to: 14
  3859                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3860  006094  88F2               	bsf	intcon,4,c	;volatile
  3861                           
  3862                           ; BSR set to: 14
  3863                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3864  006096  86F0               	bsf	intcon3,3,c	;volatile
  3865                           
  3866                           ; BSR set to: 14
  3867                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3868  006098  8CF0               	bsf	intcon3,6,c	;volatile
  3869                           
  3870                           ; BSR set to: 14
  3871                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3872  00609A  9CF1               	bcf	intcon2,6,c	;volatile
  3873                           
  3874                           ; BSR set to: 14
  3875                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3876  00609C  9AF1               	bcf	intcon2,5,c	;volatile
  3877                           
  3878                           ; BSR set to: 14
  3879  00609E  0012               	return		;funcret
  3880  0060A0                     __end_of_Mcu_ConfigExtInt:
  3881                           	opt stack 0
  3882                           tblptru	equ	0xFF8
  3883                           tblptrh	equ	0xFF7
  3884                           tblptrl	equ	0xFF6
  3885                           tablat	equ	0xFF5
  3886                           intcon	equ	0xFF2
  3887                           intcon2	equ	0xFF1
  3888                           intcon3	equ	0xFF0
  3889                           postinc0	equ	0xFEE
  3890                           wreg	equ	0xFE8
  3891                           postdec1	equ	0xFE5
  3892                           fsr1h	equ	0xFE2
  3893                           fsr1l	equ	0xFE1
  3894                           status	equ	0xFD8
  3895                           
  3896 ;; *************** function _Irq_InitIntController *****************
  3897 ;; Defined at:
  3898 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  IntPriorityE    1    wreg     enum E7720
  3901 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  3902 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3914 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;Total ram usage:        3 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:   11
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_SystemInit
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text6
  3929  005DD4                     __ptext6:
  3930                           	opt stack 0
  3931  005DD4                     _Irq_InitIntController:
  3932                           	opt stack 18
  3933                           
  3934                           ; BSR set to: 14
  3935                           ;incstack = 0
  3936                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3937  005DD4  0100               	movlb	0	; () banked
  3938  005DD6  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3939                           
  3940                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3941  005DD8  0100               	movlb	0	; () banked
  3942  005DDA  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3943  005DDC  D002               	bra	u9595
  3944  005DDE  9ED0               	bcf	4048,7,c	;volatile
  3945  005DE0  D001               	bra	u9596
  3946  005DE2                     u9595:
  3947  005DE2  8ED0               	bsf	4048,7,c	;volatile
  3948  005DE4                     u9596:
  3949                           
  3950                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  3951  005DE4  0100               	movlb	0	; () banked
  3952  005DE6  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  3953  005DE8  D002               	bra	u9605
  3954  005DEA  9EF2               	bcf	intcon,7,c	;volatile
  3955  005DEC  D001               	bra	u9606
  3956  005DEE                     u9605:
  3957  005DEE  8EF2               	bsf	intcon,7,c	;volatile
  3958  005DF0                     u9606:
  3959                           
  3960                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  3961  005DF0  0100               	movlb	0	; () banked
  3962  005DF2  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  3963  005DF4  D002               	bra	u9615
  3964  005DF6  9CF2               	bcf	intcon,6,c	;volatile
  3965  005DF8  D001               	bra	u9616
  3966  005DFA                     u9615:
  3967  005DFA  8CF2               	bsf	intcon,6,c	;volatile
  3968  005DFC                     u9616:
  3969  005DFC  0012               	return		;funcret
  3970  005DFE                     __end_of_Irq_InitIntController:
  3971                           	opt stack 0
  3972                           tblptru	equ	0xFF8
  3973                           tblptrh	equ	0xFF7
  3974                           tblptrl	equ	0xFF6
  3975                           tablat	equ	0xFF5
  3976                           intcon	equ	0xFF2
  3977                           intcon2	equ	0xFF1
  3978                           intcon3	equ	0xFF0
  3979                           postinc0	equ	0xFEE
  3980                           wreg	equ	0xFE8
  3981                           postdec1	equ	0xFE5
  3982                           fsr1h	equ	0xFE2
  3983                           fsr1l	equ	0xFE1
  3984                           status	equ	0xFD8
  3985                           
  3986 ;; *************** function _InitSchedTimer *****************
  3987 ;; Defined at:
  3988 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;		None
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      void 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4003 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4005 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4006 ;;Total ram usage:        7 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:   14
  4009 ;; This function calls:
  4010 ;;		_Tmr_TmrBConfig
  4011 ;; This function is called by:
  4012 ;;		_SystemInit
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text7
  4017  005D4C                     __ptext7:
  4018                           	opt stack 0
  4019  005D4C                     _InitSchedTimer:
  4020                           	opt stack 15
  4021                           
  4022                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4023                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4024                           
  4025                           ;incstack = 0
  4026  005D4C  0E04               	movlw	4
  4027  005D4E  0100               	movlb	0	; () banked
  4028  005D50  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4029                           
  4030                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4031  005D52  0E0C               	movlw	12
  4032  005D54  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4033                           
  4034                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4035  005D56  0E00               	movlw	0
  4036  005D58  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4037                           
  4038                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4039  005D5A  0E01               	movlw	1
  4040  005D5C  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4041                           
  4042                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4043  005D5E  0E03               	movlw	3
  4044  005D60  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4045  005D62  0EE8               	movlw	232
  4046  005D64  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4047                           
  4048                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4049  005D66  0E01               	movlw	1
  4050  005D68  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4054  005D6A  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4055  005D6C  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4056  005D6E  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4057  005D70  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4058  005D72  0E02               	movlw	2
  4059  005D74  ECF4  F01D         	call	_Tmr_TmrBConfig
  4060  005D78  0012               	return		;funcret
  4061  005D7A                     __end_of_InitSchedTimer:
  4062                           	opt stack 0
  4063                           tblptru	equ	0xFF8
  4064                           tblptrh	equ	0xFF7
  4065                           tblptrl	equ	0xFF6
  4066                           tablat	equ	0xFF5
  4067                           intcon	equ	0xFF2
  4068                           intcon2	equ	0xFF1
  4069                           intcon3	equ	0xFF0
  4070                           postinc0	equ	0xFEE
  4071                           wreg	equ	0xFE8
  4072                           postdec1	equ	0xFE5
  4073                           fsr1h	equ	0xFE2
  4074                           fsr1l	equ	0xFE1
  4075                           status	equ	0xFD8
  4076                           
  4077 ;; *************** function _Tmr_TmrBConfig *****************
  4078 ;; Defined at:
  4079 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  TmrNumb         1    wreg     unsigned char 
  4082 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4083 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4096 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4097 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4098 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4099 ;;Total ram usage:        4 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:   13
  4102 ;; This function calls:
  4103 ;;		_TmrBInit
  4104 ;;		_Tmr_StartTmr
  4105 ;;		_Tmr_TmrBIrqSet
  4106 ;;		_Tmr_TmrBPrSet
  4107 ;; This function is called by:
  4108 ;;		_InitSchedTimer
  4109 ;;		_InitAuxTimer
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text8
  4114  003BE8                     __ptext8:
  4115                           	opt stack 0
  4116  003BE8                     _Tmr_TmrBConfig:
  4117                           	opt stack 15
  4118                           
  4119                           ;incstack = 0
  4120                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4121  003BE8  0100               	movlb	0	; () banked
  4122  003BEA  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4123                           
  4124                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4125  003BEC  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4126  003BF0  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4127  003BF4  50DF               	movf	indf2,w,c
  4128  003BF6  0100               	movlb	0	; () banked
  4129  003BF8  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4130  003BFA  EE20 F001          	lfsr	2,1
  4131  003BFE  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4132  003C00  26D9               	addwf	fsr2l,f,c
  4133  003C02  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4134  003C04  22DA               	addwfc	fsr2h,f,c
  4135  003C06  50DF               	movf	indf2,w,c
  4136  003C08  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4137  003C0A  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4138  003C0C  ECD1  F023         	call	_TmrBInit
  4139                           
  4140                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4141  003C10  0100               	movlb	0	; () banked
  4142  003C12  EE20 F002          	lfsr	2,2
  4143  003C16  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4144  003C18  26D9               	addwf	fsr2l,f,c
  4145  003C1A  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4146  003C1C  22DA               	addwfc	fsr2h,f,c
  4147  003C1E  04DE               	decf	postinc2,w,c
  4148  003C20  A4D8               	btfss	status,2,c
  4149  003C22  D00E               	goto	l546
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;tmr_drv.c: 277: {
  4153                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4154  003C24  EE20 F003          	lfsr	2,3
  4155  003C28  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4156  003C2A  26D9               	addwf	fsr2l,f,c
  4157  003C2C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4158  003C2E  22DA               	addwfc	fsr2h,f,c
  4159  003C30  50DF               	movf	indf2,w,c
  4160  003C32  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4161  003C34  0E01               	movlw	1
  4162  003C36  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4163  003C38  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4164  003C3A  EC54  F02B         	call	_Tmr_TmrBIrqSet
  4165                           
  4166                           ;tmr_drv.c: 280: }
  4167  003C3E  D00E               	goto	l547
  4168  003C40                     l546:
  4169                           
  4170                           ;tmr_drv.c: 281: else
  4171                           ;tmr_drv.c: 282: {
  4172                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4173  003C40  0100               	movlb	0	; () banked
  4174  003C42  EE20 F003          	lfsr	2,3
  4175  003C46  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4176  003C48  26D9               	addwf	fsr2l,f,c
  4177  003C4A  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4178  003C4C  22DA               	addwfc	fsr2h,f,c
  4179  003C4E  50DF               	movf	indf2,w,c
  4180  003C50  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4181  003C52  0E00               	movlw	0
  4182  003C54  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4183  003C56  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4184  003C58  EC54  F02B         	call	_Tmr_TmrBIrqSet
  4185  003C5C                     l547:
  4186                           
  4187                           ;tmr_drv.c: 285: }
  4188                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4189  003C5C  0100               	movlb	0	; () banked
  4190  003C5E  EE20 F004          	lfsr	2,4
  4191  003C62  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4192  003C64  26D9               	addwf	fsr2l,f,c
  4193  003C66  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4194  003C68  22DA               	addwfc	fsr2h,f,c
  4195  003C6A  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4196  003C6E  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4197  003C72  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4198  003C76  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4199  003C7A  50DF               	movf	indf2,w,c
  4200  003C7C  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4201  003C7E  EE20 F001          	lfsr	2,1
  4202  003C82  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4203  003C84  26D9               	addwf	fsr2l,f,c
  4204  003C86  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4205  003C88  22DA               	addwfc	fsr2h,f,c
  4206  003C8A  50DF               	movf	indf2,w,c
  4207  003C8C  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4208  003C8E  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4209  003C90  ECD3  F018         	call	_Tmr_TmrBPrSet
  4210                           
  4211                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4212  003C94  0100               	movlb	0	; () banked
  4213  003C96  EE20 F006          	lfsr	2,6
  4214  003C9A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4215  003C9C  26D9               	addwf	fsr2l,f,c
  4216  003C9E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4217  003CA0  22DA               	addwfc	fsr2h,f,c
  4218  003CA2  04DE               	decf	postinc2,w,c
  4219  003CA4  A4D8               	btfss	status,2,c
  4220  003CA6  0012               	return	
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;tmr_drv.c: 290: {
  4224                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4225  003CA8  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4226  003CAA  ECE9  F02F         	call	_Tmr_StartTmr
  4227                           
  4228                           ;tmr_drv.c: 293: }
  4229  003CAE  0012               	return	
  4230  003CB0                     __end_of_Tmr_TmrBConfig:
  4231                           	opt stack 0
  4232                           tblptru	equ	0xFF8
  4233                           tblptrh	equ	0xFF7
  4234                           tblptrl	equ	0xFF6
  4235                           tablat	equ	0xFF5
  4236                           intcon	equ	0xFF2
  4237                           intcon2	equ	0xFF1
  4238                           intcon3	equ	0xFF0
  4239                           postinc0	equ	0xFEE
  4240                           wreg	equ	0xFE8
  4241                           postdec1	equ	0xFE5
  4242                           fsr1h	equ	0xFE2
  4243                           fsr1l	equ	0xFE1
  4244                           indf2	equ	0xFDF
  4245                           postinc2	equ	0xFDE
  4246                           postdec2	equ	0xFDD
  4247                           fsr2h	equ	0xFDA
  4248                           fsr2l	equ	0xFD9
  4249                           status	equ	0xFD8
  4250                           
  4251 ;; *************** function _Tmr_TmrBPrSet *****************
  4252 ;; Defined at:
  4253 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  TmrNumb         1    wreg     unsigned char 
  4256 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4257 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4258 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4261 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4262 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      enum E7736
  4265 ;; Registers used:
  4266 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4272 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4275 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4276 ;;Total ram usage:       10 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:   12
  4279 ;; This function calls:
  4280 ;;		___lldiv
  4281 ;;		___lmul
  4282 ;; This function is called by:
  4283 ;;		_Tmr_TmrBConfig
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           	psect	text9
  4288  0031A6                     __ptext9:
  4289                           	opt stack 0
  4290  0031A6                     _Tmr_TmrBPrSet:
  4291                           	opt stack 15
  4292                           
  4293                           ;incstack = 0
  4294                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4295  0031A6  0100               	movlb	0	; () banked
  4296  0031A8  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4297                           
  4298                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4299                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4300  0031AA  0E00               	movlw	0
  4301  0031AC  0100               	movlb	0	; () banked
  4302  0031AE  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4303  0031B0  0E00               	movlw	0
  4304  0031B2  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4305  0031B4  0E00               	movlw	0
  4306  0031B6  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4307  0031B8  0E00               	movlw	0
  4308  0031BA  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4312  0031BC  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4313  0031BE  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4314  0031C0  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4315  0031C4  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4316  0031C8  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4317  0031CA  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4318  0031CC  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4319  0031D0  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4320  0031D4  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4321  0031D6  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4322  0031D8  EC39  F029         	call	___lmul	;wreg free
  4323  0031DC  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4324  0031E0  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4325  0031E4  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4326  0031E8  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4327                           
  4328                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4329  0031EC  0E00               	movlw	0
  4330  0031EE  0100               	movlb	0	; () banked
  4331  0031F0  6F89               	movwf	___lldiv@dividend& (0+255),b
  4332  0031F2  0E1B               	movlw	27
  4333  0031F4  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4334  0031F6  0EB7               	movlw	183
  4335  0031F8  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4336  0031FA  0E00               	movlw	0
  4337  0031FC  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4338  0031FE  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4339  003202  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4340  003206  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4341  00320A  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4342  00320E  EC13  F026         	call	___lldiv	;wreg free
  4343  003212  0100               	movlb	0	; () banked
  4344  003214  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4345  003216  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4346  003218  E13A               	bnz	l13807
  4347  00321A  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4348  00321C  A0D8               	btfss	status,0,c
  4349  00321E  D02D               	goto	l529
  4350  003220  D036               	goto	l528
  4351  003222                     
  4352                           ; BSR set to: 0
  4353                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4354                           
  4355                           ; BSR set to: 0
  4356  003222  0E00               	movlw	0
  4357  003224  6F89               	movwf	___lldiv@dividend& (0+255),b
  4358  003226  0E1B               	movlw	27
  4359  003228  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4360  00322A  0EB7               	movlw	183
  4361  00322C  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4362  00322E  0E00               	movlw	0
  4363  003230  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4364  003232  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4365  003236  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4366  00323A  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4367  00323E  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4368  003242  EC13  F026         	call	___lldiv	;wreg free
  4369  003246  0100               	movlb	0	; () banked
  4370  003248  5189               	movf	?___lldiv& (0+255),w,b
  4371  00324A  6ECB               	movwf	4043,c	;volatile
  4372                           
  4373                           ;tmr_drv.c: 210: break;
  4374  00324C  D01D               	goto	l531
  4375  00324E                     
  4376                           ; BSR set to: 0
  4377                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4378                           
  4379                           ; BSR set to: 0
  4380  00324E  0E00               	movlw	0
  4381  003250  6F89               	movwf	___lldiv@dividend& (0+255),b
  4382  003252  0E1B               	movlw	27
  4383  003254  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4384  003256  0EB7               	movlw	183
  4385  003258  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4386  00325A  0E00               	movlw	0
  4387  00325C  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4388  00325E  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4389  003262  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4390  003266  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4391  00326A  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4392  00326E  EC13  F026         	call	___lldiv	;wreg free
  4393  003272  0100               	movlb	0	; () banked
  4394  003274  5189               	movf	?___lldiv& (0+255),w,b
  4395  003276  6E77               	movwf	3959,c	;volatile
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;tmr_drv.c: 219: }
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;tmr_drv.c: 218: break;
  4402                           
  4403                           ;tmr_drv.c: 217: default:
  4404                           
  4405                           ;tmr_drv.c: 215: break;
  4406  003278  D007               	goto	l531
  4407  00327A                     l529:
  4408                           
  4409                           ; BSR set to: 0
  4410                           
  4411                           ; BSR set to: 0
  4412  00327A  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4413                           
  4414                           ; Switch size 1, requested type "space"
  4415                           ; Number of cases is 2, Range of values is 2 to 4
  4416                           ; switch strategies available:
  4417                           ; Name         Instructions Cycles
  4418                           ; simple_byte            7     4 (average)
  4419                           ;	Chosen strategy is simple_byte
  4420  00327C  0A02               	xorlw	2	; case 2
  4421  00327E  B4D8               	btfsc	status,2,c
  4422  003280  D7D0               	goto	l530
  4423  003282  0A06               	xorlw	6	; case 4
  4424  003284  B4D8               	btfsc	status,2,c
  4425  003286  D7E3               	goto	l532
  4426  003288                     l531:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4430                           
  4431                           ; BSR set to: 0
  4432  003288  0E00               	movlw	0
  4433  00328A  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4434                           
  4435                           ;tmr_drv.c: 223: }
  4436  00328C  0012               	return	
  4437  00328E                     l528:
  4438  00328E                     l13807:
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;tmr_drv.c: 224: else
  4442                           ;tmr_drv.c: 225: {
  4443                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4444  00328E  0E01               	movlw	1
  4445  003290  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4446                           
  4447                           ; BSR set to: 0
  4448  003292  0012               	return	
  4449  003294                     __end_of_Tmr_TmrBPrSet:
  4450                           	opt stack 0
  4451                           tblptru	equ	0xFF8
  4452                           tblptrh	equ	0xFF7
  4453                           tblptrl	equ	0xFF6
  4454                           tablat	equ	0xFF5
  4455                           prodh	equ	0xFF4
  4456                           prodl	equ	0xFF3
  4457                           intcon	equ	0xFF2
  4458                           intcon2	equ	0xFF1
  4459                           intcon3	equ	0xFF0
  4460                           postinc0	equ	0xFEE
  4461                           wreg	equ	0xFE8
  4462                           postdec1	equ	0xFE5
  4463                           fsr1h	equ	0xFE2
  4464                           fsr1l	equ	0xFE1
  4465                           indf2	equ	0xFDF
  4466                           postinc2	equ	0xFDE
  4467                           postdec2	equ	0xFDD
  4468                           fsr2h	equ	0xFDA
  4469                           fsr2l	equ	0xFD9
  4470                           status	equ	0xFD8
  4471                           
  4472 ;; *************** function _Tmr_TmrBIrqSet *****************
  4473 ;; Defined at:
  4474 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  TmrNumb         1    wreg     unsigned char 
  4477 ;;  Priority        1   29[BANK0 ] enum E7716
  4478 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4493 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4494 ;;Total ram usage:        3 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:   11
  4497 ;; This function calls:
  4498 ;;		Nothing
  4499 ;; This function is called by:
  4500 ;;		_Tmr_TmrBConfig
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           	psect	text10
  4505  0056A8                     __ptext10:
  4506                           	opt stack 0
  4507  0056A8                     _Tmr_TmrBIrqSet:
  4508                           	opt stack 16
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;incstack = 0
  4512                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4513  0056A8  0100               	movlb	0	; () banked
  4514  0056AA  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4515                           
  4516                           ;tmr_drv.c: 156: switch (TmrNumb)
  4517  0056AC  D01A               	goto	l520
  4518  0056AE                     l521:
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4522  0056AE  929E               	bcf	3998,1,c	;volatile
  4523                           
  4524                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4525  0056B0  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4526  0056B2  D002               	bra	u8115
  4527  0056B4  929F               	bcf	3999,1,c	;volatile
  4528  0056B6  D001               	bra	u8116
  4529  0056B8                     u8115:
  4530  0056B8  829F               	bsf	3999,1,c	;volatile
  4531  0056BA                     u8116:
  4532                           
  4533                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4534  0056BA  0100               	movlb	0	; () banked
  4535  0056BC  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4536  0056BE  D002               	bra	u8125
  4537  0056C0  929D               	bcf	3997,1,c	;volatile
  4538  0056C2  D001               	bra	u8126
  4539  0056C4                     u8125:
  4540  0056C4  829D               	bsf	3997,1,c	;volatile
  4541  0056C6                     u8126:
  4542                           
  4543                           ;tmr_drv.c: 165: break;
  4544  0056C6  0012               	return	
  4545  0056C8                     l523:
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4549  0056C8  96A4               	bcf	4004,3,c	;volatile
  4550                           
  4551                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4552  0056CA  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4553  0056CC  D002               	bra	u8135
  4554  0056CE  96A5               	bcf	4005,3,c	;volatile
  4555  0056D0  D001               	bra	u8136
  4556  0056D2                     u8135:
  4557  0056D2  86A5               	bsf	4005,3,c	;volatile
  4558  0056D4                     u8136:
  4559                           
  4560                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4561  0056D4  0100               	movlb	0	; () banked
  4562  0056D6  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4563  0056D8  D002               	bra	u8145
  4564  0056DA  96A3               	bcf	4003,3,c	;volatile
  4565  0056DC  D001               	bra	u8146
  4566  0056DE                     u8145:
  4567  0056DE  86A3               	bsf	4003,3,c	;volatile
  4568  0056E0                     u8146:
  4569                           
  4570                           ;tmr_drv.c: 178: }
  4571                           
  4572                           ;tmr_drv.c: 177: break;
  4573                           
  4574                           ;tmr_drv.c: 176: default:
  4575                           
  4576                           ;tmr_drv.c: 174: break;
  4577  0056E0  0012               	return	
  4578  0056E2                     l520:
  4579  0056E2  0100               	movlb	0	; () banked
  4580  0056E4  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4581                           
  4582                           ; Switch size 1, requested type "space"
  4583                           ; Number of cases is 2, Range of values is 2 to 4
  4584                           ; switch strategies available:
  4585                           ; Name         Instructions Cycles
  4586                           ; simple_byte            7     4 (average)
  4587                           ;	Chosen strategy is simple_byte
  4588  0056E6  0A02               	xorlw	2	; case 2
  4589  0056E8  B4D8               	btfsc	status,2,c
  4590  0056EA  D7E1               	goto	l521
  4591  0056EC  0A06               	xorlw	6	; case 4
  4592  0056EE  A4D8               	btfss	status,2,c
  4593  0056F0  0012               	return	
  4594  0056F2  D7EA               	goto	l523
  4595  0056F4                     __end_of_Tmr_TmrBIrqSet:
  4596                           	opt stack 0
  4597                           tblptru	equ	0xFF8
  4598                           tblptrh	equ	0xFF7
  4599                           tblptrl	equ	0xFF6
  4600                           tablat	equ	0xFF5
  4601                           prodh	equ	0xFF4
  4602                           prodl	equ	0xFF3
  4603                           intcon	equ	0xFF2
  4604                           intcon2	equ	0xFF1
  4605                           intcon3	equ	0xFF0
  4606                           postinc0	equ	0xFEE
  4607                           wreg	equ	0xFE8
  4608                           postdec1	equ	0xFE5
  4609                           fsr1h	equ	0xFE2
  4610                           fsr1l	equ	0xFE1
  4611                           indf2	equ	0xFDF
  4612                           postinc2	equ	0xFDE
  4613                           postdec2	equ	0xFDD
  4614                           fsr2h	equ	0xFDA
  4615                           fsr2l	equ	0xFD9
  4616                           status	equ	0xFD8
  4617                           
  4618 ;; *************** function _Tmr_StartTmr *****************
  4619 ;; Defined at:
  4620 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  TmrNumb         1    wreg     unsigned char 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  1    wreg      void 
  4627 ;; Registers used:
  4628 ;;		wreg, status,2, status,0
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4637 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4638 ;;Total ram usage:        1 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:   11
  4641 ;; This function calls:
  4642 ;;		Nothing
  4643 ;; This function is called by:
  4644 ;;		_Tmr_TmrBConfig
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text11
  4649  005FD2                     __ptext11:
  4650                           	opt stack 0
  4651  005FD2                     _Tmr_StartTmr:
  4652                           	opt stack 16
  4653                           
  4654                           ;incstack = 0
  4655                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4656  005FD2  0100               	movlb	0	; () banked
  4657  005FD4  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4658                           
  4659                           ;tmr_drv.c: 245: switch (TmrNumb)
  4660  005FD6  D004               	goto	l538
  4661  005FD8                     l539:
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4665  005FD8  84CA               	bsf	4042,2,c	;volatile
  4666                           
  4667                           ;tmr_drv.c: 250: break;
  4668  005FDA  0012               	return	
  4669  005FDC                     l541:
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4673  005FDC  8476               	bsf	3958,2,c	;volatile
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;tmr_drv.c: 259: }
  4677                           
  4678                           ; BSR set to: 0
  4679                           ;tmr_drv.c: 258: break;
  4680                           
  4681                           ;tmr_drv.c: 257: default:
  4682                           
  4683                           ;tmr_drv.c: 255: break;
  4684  005FDE  0012               	return	
  4685  005FE0                     l538:
  4686                           
  4687                           ; BSR set to: 0
  4688  005FE0  0100               	movlb	0	; () banked
  4689  005FE2  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4690                           
  4691                           ; Switch size 1, requested type "space"
  4692                           ; Number of cases is 2, Range of values is 2 to 4
  4693                           ; switch strategies available:
  4694                           ; Name         Instructions Cycles
  4695                           ; simple_byte            7     4 (average)
  4696                           ;	Chosen strategy is simple_byte
  4697  005FE4  0A02               	xorlw	2	; case 2
  4698  005FE6  B4D8               	btfsc	status,2,c
  4699  005FE8  D7F7               	goto	l539
  4700  005FEA  0A06               	xorlw	6	; case 4
  4701  005FEC  A4D8               	btfss	status,2,c
  4702  005FEE  0012               	return	
  4703  005FF0  D7F5               	goto	l541
  4704  005FF2                     __end_of_Tmr_StartTmr:
  4705                           	opt stack 0
  4706                           tblptru	equ	0xFF8
  4707                           tblptrh	equ	0xFF7
  4708                           tblptrl	equ	0xFF6
  4709                           tablat	equ	0xFF5
  4710                           prodh	equ	0xFF4
  4711                           prodl	equ	0xFF3
  4712                           intcon	equ	0xFF2
  4713                           intcon2	equ	0xFF1
  4714                           intcon3	equ	0xFF0
  4715                           postinc0	equ	0xFEE
  4716                           wreg	equ	0xFE8
  4717                           postdec1	equ	0xFE5
  4718                           fsr1h	equ	0xFE2
  4719                           fsr1l	equ	0xFE1
  4720                           indf2	equ	0xFDF
  4721                           postinc2	equ	0xFDE
  4722                           postdec2	equ	0xFDD
  4723                           fsr2h	equ	0xFDA
  4724                           fsr2l	equ	0xFD9
  4725                           status	equ	0xFD8
  4726                           
  4727 ;; *************** function _TmrBInit *****************
  4728 ;; Defined at:
  4729 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  TmrNumb         1    wreg     unsigned char 
  4732 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4733 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      void 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2, status,0
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4745 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4746 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4748 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4749 ;;Total ram usage:        4 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; Hardware stack levels required when called:   11
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_Tmr_TmrBConfig
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           	psect	text12
  4760  0047A2                     __ptext12:
  4761                           	opt stack 0
  4762  0047A2                     _TmrBInit:
  4763                           	opt stack 16
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;incstack = 0
  4767                           ;TmrBInit@TmrNumb stored from wreg
  4768  0047A2  0100               	movlb	0	; () banked
  4769  0047A4  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4770                           
  4771                           ;tmr_drv.c: 75: switch (TmrNumb)
  4772  0047A6  D03F               	goto	l500
  4773  0047A8                     l503:
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4777  0047A8  90CA               	bcf	4042,0,c	;volatile
  4778  0047AA  D001               	goto	L1
  4779  0047AC                     l505:
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4783  0047AC  80CA               	bsf	4042,0,c	;volatile
  4784  0047AE                     L1:
  4785                           
  4786                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4787  0047AE  92CA               	bcf	4042,1,c	;volatile
  4788                           
  4789                           ;tmr_drv.c: 91: break;
  4790  0047B0  D00E               	goto	l504
  4791  0047B2                     l506:
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4795  0047B2  80CA               	bsf	4042,0,c	;volatile
  4796                           
  4797                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4798  0047B4  82CA               	bsf	4042,1,c	;volatile
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;tmr_drv.c: 100: }
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;tmr_drv.c: 99: break;
  4805                           
  4806                           ;tmr_drv.c: 98: default:
  4807                           
  4808                           ;tmr_drv.c: 96: break;
  4809  0047B6  D00B               	goto	l504
  4810  0047B8                     
  4811                           ; BSR set to: 0
  4812  0047B8  0100               	movlb	0	; () banked
  4813  0047BA  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4814                           
  4815                           ; Switch size 1, requested type "space"
  4816                           ; Number of cases is 3, Range of values is 1 to 16
  4817                           ; switch strategies available:
  4818                           ; Name         Instructions Cycles
  4819                           ; simple_byte           10     6 (average)
  4820                           ;	Chosen strategy is simple_byte
  4821  0047BC  0A01               	xorlw	1	; case 1
  4822  0047BE  B4D8               	btfsc	status,2,c
  4823  0047C0  D7F3               	goto	l503
  4824  0047C2  0A05               	xorlw	5	; case 4
  4825  0047C4  B4D8               	btfsc	status,2,c
  4826  0047C6  D7F2               	goto	l505
  4827  0047C8  0A14               	xorlw	20	; case 16
  4828  0047CA  B4D8               	btfsc	status,2,c
  4829  0047CC  D7F2               	goto	l506
  4830  0047CE                     l504:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4834                           
  4835                           ; BSR set to: 0
  4836  0047CE  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4837  0047D2  0EFF               	movlw	255
  4838  0047D4  277F               	addwf	??_TmrBInit& (0+255),f,b
  4839  0047D6  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4840  0047D8  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4841  0047DA  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4842  0047DC  50CA               	movf	4042,w,c	;volatile
  4843  0047DE  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4844  0047E0  0B87               	andlw	-121
  4845  0047E2  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4846  0047E4  6ECA               	movwf	4042,c	;volatile
  4847                           
  4848                           ;tmr_drv.c: 104: break;
  4849  0047E6  0012               	return	
  4850  0047E8                     l511:
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4854  0047E8  9076               	bcf	3958,0,c	;volatile
  4855  0047EA  D001               	goto	L2
  4856  0047EC                     l513:
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4860  0047EC  8076               	bsf	3958,0,c	;volatile
  4861  0047EE                     L2:
  4862                           
  4863                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4864  0047EE  9276               	bcf	3958,1,c	;volatile
  4865                           
  4866                           ;tmr_drv.c: 120: break;
  4867  0047F0  D00D               	goto	l512
  4868  0047F2                     l514:
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4872  0047F2  8076               	bsf	3958,0,c	;volatile
  4873                           
  4874                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4875  0047F4  8276               	bsf	3958,1,c	;volatile
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;tmr_drv.c: 129: }
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;tmr_drv.c: 128: break;
  4882                           
  4883                           ;tmr_drv.c: 127: default:
  4884                           
  4885                           ;tmr_drv.c: 125: break;
  4886  0047F6  D00A               	goto	l512
  4887  0047F8                     
  4888                           ; BSR set to: 0
  4889                           
  4890                           ; BSR set to: 0
  4891  0047F8  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4892                           
  4893                           ; Switch size 1, requested type "space"
  4894                           ; Number of cases is 3, Range of values is 1 to 16
  4895                           ; switch strategies available:
  4896                           ; Name         Instructions Cycles
  4897                           ; simple_byte           10     6 (average)
  4898                           ;	Chosen strategy is simple_byte
  4899  0047FA  0A01               	xorlw	1	; case 1
  4900  0047FC  B4D8               	btfsc	status,2,c
  4901  0047FE  D7F4               	goto	l511
  4902  004800  0A05               	xorlw	5	; case 4
  4903  004802  B4D8               	btfsc	status,2,c
  4904  004804  D7F3               	goto	l513
  4905  004806  0A14               	xorlw	20	; case 16
  4906  004808  B4D8               	btfsc	status,2,c
  4907  00480A  D7F3               	goto	l514
  4908  00480C                     l512:
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4912                           
  4913                           ; BSR set to: 0
  4914  00480C  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4915  004810  0EFF               	movlw	255
  4916  004812  277F               	addwf	??_TmrBInit& (0+255),f,b
  4917  004814  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4918  004816  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4919  004818  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4920  00481A  5076               	movf	3958,w,c	;volatile
  4921  00481C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4922  00481E  0B87               	andlw	-121
  4923  004820  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4924  004822  6E76               	movwf	3958,c	;volatile
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;tmr_drv.c: 137: }
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;tmr_drv.c: 136: break;
  4931                           
  4932                           ;tmr_drv.c: 135: default:
  4933                           
  4934                           ;tmr_drv.c: 133: break;
  4935  004824  0012               	return	
  4936  004826                     l500:
  4937                           
  4938                           ; BSR set to: 0
  4939  004826  0100               	movlb	0	; () banked
  4940  004828  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4941                           
  4942                           ; Switch size 1, requested type "space"
  4943                           ; Number of cases is 2, Range of values is 2 to 4
  4944                           ; switch strategies available:
  4945                           ; Name         Instructions Cycles
  4946                           ; simple_byte            7     4 (average)
  4947                           ;	Chosen strategy is simple_byte
  4948  00482A  0A02               	xorlw	2	; case 2
  4949  00482C  B4D8               	btfsc	status,2,c
  4950  00482E  D7C4               	goto	l502
  4951  004830  0A06               	xorlw	6	; case 4
  4952  004832  A4D8               	btfss	status,2,c
  4953  004834  0012               	return	
  4954  004836  D7E0               	goto	l510
  4955  004838                     __end_of_TmrBInit:
  4956                           	opt stack 0
  4957                           tblptru	equ	0xFF8
  4958                           tblptrh	equ	0xFF7
  4959                           tblptrl	equ	0xFF6
  4960                           tablat	equ	0xFF5
  4961                           prodh	equ	0xFF4
  4962                           prodl	equ	0xFF3
  4963                           intcon	equ	0xFF2
  4964                           intcon2	equ	0xFF1
  4965                           intcon3	equ	0xFF0
  4966                           postinc0	equ	0xFEE
  4967                           wreg	equ	0xFE8
  4968                           postdec1	equ	0xFE5
  4969                           fsr1h	equ	0xFE2
  4970                           fsr1l	equ	0xFE1
  4971                           indf2	equ	0xFDF
  4972                           postinc2	equ	0xFDE
  4973                           postdec2	equ	0xFDD
  4974                           fsr2h	equ	0xFDA
  4975                           fsr2l	equ	0xFD9
  4976                           status	equ	0xFD8
  4977                           
  4978 ;; *************** function _Sch_MainScheduler *****************
  4979 ;; Defined at:
  4980 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4998 ;;Total ram usage:        0 bytes
  4999 ;; Hardware stack levels used:    1
  5000 ;; Hardware stack levels required when called:   22
  5001 ;; This function calls:
  5002 ;;		_InitializeTasks
  5003 ;;		_ScheduleTasks
  5004 ;; This function is called by:
  5005 ;;		_main
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text13
  5010  006030                     __ptext13:
  5011                           	opt stack 0
  5012  006030                     _Sch_MainScheduler:
  5013                           	opt stack 8
  5014                           
  5015                           ;os_sched.c: 178: InitializeTasks();
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;incstack = 0
  5019  006030  ECD2  F026         	call	_InitializeTasks	;wreg free
  5020                           
  5021                           ;os_sched.c: 180: SystemState = RunningState;
  5022  006034  0E01               	movlw	1
  5023  006036  0100               	movlb	0	; () banked
  5024  006038  6FD6               	movwf	_SystemState& (0+255),b
  5025  00603A                     
  5026                           ;os_sched.c: 188: {
  5027                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5028                           
  5029                           ; BSR set to: 0
  5030  00603A  0102               	movlb	2	; () banked
  5031  00603C  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5032  00603E  A4D8               	btfss	status,2,c
  5033  006040  D7FC               	goto	l790
  5034                           
  5035                           ; BSR set to: 2
  5036                           ;os_sched.c: 191: {
  5037                           ;os_sched.c: 196: ScheduleTasks();
  5038  006042  EC2F  F017         	call	_ScheduleTasks	;wreg free
  5039                           
  5040                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5041  006046  0E01               	movlw	1
  5042  006048  0102               	movlb	2	; () banked
  5043  00604A  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5044                           
  5045                           ; BSR set to: 2
  5046                           
  5047                           ; BSR set to: 2
  5048  00604C  D7F6               	goto	l790
  5049  00604E                     __end_of_Sch_MainScheduler:
  5050                           	opt stack 0
  5051                           tblptru	equ	0xFF8
  5052                           tblptrh	equ	0xFF7
  5053                           tblptrl	equ	0xFF6
  5054                           tablat	equ	0xFF5
  5055                           prodh	equ	0xFF4
  5056                           prodl	equ	0xFF3
  5057                           intcon	equ	0xFF2
  5058                           intcon2	equ	0xFF1
  5059                           intcon3	equ	0xFF0
  5060                           postinc0	equ	0xFEE
  5061                           wreg	equ	0xFE8
  5062                           postdec1	equ	0xFE5
  5063                           fsr1h	equ	0xFE2
  5064                           fsr1l	equ	0xFE1
  5065                           indf2	equ	0xFDF
  5066                           postinc2	equ	0xFDE
  5067                           postdec2	equ	0xFDD
  5068                           fsr2h	equ	0xFDA
  5069                           fsr2l	equ	0xFD9
  5070                           status	equ	0xFD8
  5071                           
  5072 ;; *************** function _ScheduleTasks *****************
  5073 ;; Defined at:
  5074 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  ActiveTaskIn    1   83[BANK0 ] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5089 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5091 ;;      Totals:         0       1       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5092 ;;Total ram usage:        5 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:   21
  5095 ;; This function calls:
  5096 ;;		_I2cSlv_MainTask
  5097 ;;		_Led_MainTask
  5098 ;;		_MdmHttp_MainTask
  5099 ;;		_Mdm_DrvMainFn
  5100 ;;		_Mdm_MainTask
  5101 ;;		_MyApp_Task
  5102 ;;		_Rtcm_MainTask
  5103 ;;		_Term_MainTask
  5104 ;;		_UsbDevice_MainTask
  5105 ;;		_Wdg_MainTask
  5106 ;; This function is called by:
  5107 ;;		_Sch_MainScheduler
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text14
  5112  002E5E                     __ptext14:
  5113                           	opt stack 0
  5114  002E5E                     _ScheduleTasks:
  5115                           	opt stack 8
  5116                           
  5117                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5118                           
  5119                           ; BSR set to: 2
  5120                           ;incstack = 0
  5121  002E5E  0E00               	movlw	0
  5122  002E60  0100               	movlb	0	; () banked
  5123  002E62  6FB3               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5124                           
  5125                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5126  002E64  0E00               	movlw	0
  5127  002E66  6FB3               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5128  002E68                     l14953:
  5129                           
  5130                           ; BSR set to: 0
  5131  002E68  0E2F               	movlw	low _TaskNumber
  5132  002E6A  6EF6               	movwf	tblptrl,c
  5133  002E6C                     	if	1	;There is more than 1 active tblptr byte
  5134  002E6C  0EFC               	movlw	high _TaskNumber
  5135  002E6E  6EF7               	movwf	tblptrh,c
  5136  002E70                     	endif
  5137  002E70                     	if	0	;There are less than 3 active tblptr bytes
  5138  002E70                     	endif
  5139  002E70  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5140  002E72  0104               	movlb	4	; () banked
  5141  002E74  6FFA               	movwf	??_ScheduleTasks& (0+255),b
  5142  002E76  6BFB               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5143  002E78  0009               	tblrd		*+
  5144  002E7A  50F5               	movf	tablat,w,c
  5145  002E7C  5DFA               	subwf	??_ScheduleTasks& (0+255),w,b
  5146  002E7E  0009               	tblrd		*+
  5147  002E80  50F5               	movf	tablat,w,c
  5148  002E82  59FB               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5149  002E84  B0D8               	btfsc	status,0,c
  5150  002E86  0012               	return	
  5151                           
  5152                           ; BSR set to: 4
  5153                           ;os_sched.c: 106: {
  5154                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5155                           
  5156                           ; BSR set to: 4
  5157                           
  5158                           ; BSR set to: 4
  5159  002E88  0100               	movlb	0	; () banked
  5160  002E8A  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5161  002E8C  0D08               	mullw	8
  5162  002E8E  0E03               	movlw	3
  5163  002E90  26F3               	addwf	prodl,f,c
  5164  002E92  0E00               	movlw	0
  5165  002E94  22F4               	addwfc	prodh,f,c
  5166  002E96  0E90               	movlw	low _TaskTable
  5167  002E98  24F3               	addwf	prodl,w,c
  5168  002E9A  6ED9               	movwf	fsr2l,c
  5169  002E9C  0E05               	movlw	high _TaskTable
  5170  002E9E  20F4               	addwfc	prodh,w,c
  5171  002EA0  6EDA               	movwf	fsr2h,c
  5172  002EA2  2ADE               	incf	postinc2,f,c
  5173  002EA4  0E00               	movlw	0
  5174  002EA6  22DD               	addwfc	postdec2,f,c
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5178  002EA8  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5179  002EAA  0D08               	mullw	8
  5180  002EAC  0E05               	movlw	5
  5181  002EAE  26F3               	addwf	prodl,f,c
  5182  002EB0  0E00               	movlw	0
  5183  002EB2  22F4               	addwfc	prodh,f,c
  5184  002EB4  0E90               	movlw	low _TaskTable
  5185  002EB6  24F3               	addwf	prodl,w,c
  5186  002EB8  6ED9               	movwf	fsr2l,c
  5187  002EBA  0E05               	movlw	high _TaskTable
  5188  002EBC  20F4               	addwfc	prodh,w,c
  5189  002EBE  6EDA               	movwf	fsr2h,c
  5190  002EC0  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5191  002EC2  0D08               	mullw	8
  5192  002EC4  0E03               	movlw	3
  5193  002EC6  26F3               	addwf	prodl,f,c
  5194  002EC8  0E00               	movlw	0
  5195  002ECA  22F4               	addwfc	prodh,f,c
  5196  002ECC  0E90               	movlw	low _TaskTable
  5197  002ECE  24F3               	addwf	prodl,w,c
  5198  002ED0  6EE1               	movwf	fsr1l,c
  5199  002ED2  0E05               	movlw	high _TaskTable
  5200  002ED4  20F4               	addwfc	prodh,w,c
  5201  002ED6  6EE2               	movwf	fsr1h,c
  5202  002ED8  50DE               	movf	postinc2,w,c
  5203  002EDA  5CE6               	subwf	postinc1,w,c
  5204  002EDC  50DE               	movf	postinc2,w,c
  5205  002EDE  58E6               	subwfb	postinc1,w,c
  5206  002EE0  A0D8               	btfss	status,0,c
  5207  002EE2  D04E               	goto	l775
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;os_sched.c: 111: {
  5211                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5212  002EE4  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5213  002EE6  0D08               	mullw	8
  5214  002EE8  0E03               	movlw	3
  5215  002EEA  26F3               	addwf	prodl,f,c
  5216  002EEC  0E00               	movlw	0
  5217  002EEE  22F4               	addwfc	prodh,f,c
  5218  002EF0  0E90               	movlw	low _TaskTable
  5219  002EF2  24F3               	addwf	prodl,w,c
  5220  002EF4  6ED9               	movwf	fsr2l,c
  5221  002EF6  0E05               	movlw	high _TaskTable
  5222  002EF8  20F4               	addwfc	prodh,w,c
  5223  002EFA  6EDA               	movwf	fsr2h,c
  5224  002EFC  0E00               	movlw	0
  5225  002EFE  6EDE               	movwf	postinc2,c
  5226  002F00  0E00               	movlw	0
  5227  002F02  6EDD               	movwf	postdec2,c
  5228                           
  5229                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5230  002F04  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5231  002F06  0D08               	mullw	8
  5232  002F08  0E02               	movlw	2
  5233  002F0A  26F3               	addwf	prodl,f,c
  5234  002F0C  0E00               	movlw	0
  5235  002F0E  22F4               	addwfc	prodh,f,c
  5236  002F10  0E90               	movlw	low _TaskTable
  5237  002F12  24F3               	addwf	prodl,w,c
  5238  002F14  6ED9               	movwf	fsr2l,c
  5239  002F16  0E05               	movlw	high _TaskTable
  5240  002F18  20F4               	addwfc	prodh,w,c
  5241  002F1A  6EDA               	movwf	fsr2h,c
  5242  002F1C  0E01               	movlw	1
  5243  002F1E  6EDF               	movwf	indf2,c
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5247  002F20  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5248  002F22  0D08               	mullw	8
  5249  002F24  0E90               	movlw	low _TaskTable
  5250  002F26  24F3               	addwf	prodl,w,c
  5251  002F28  6ED9               	movwf	fsr2l,c
  5252  002F2A  0E05               	movlw	high _TaskTable
  5253  002F2C  20F4               	addwfc	prodh,w,c
  5254  002F2E  6EDA               	movwf	fsr2h,c
  5255  002F30  D801               	call	u14668
  5256  002F32  D017               	goto	u14669
  5257  002F34                     u14668:
  5258  002F34  0005               	push	
  5259  002F36  6EFA               	movwf	pclath,c
  5260  002F38  50DE               	movf	postinc2,w,c
  5261  002F3A  6EFD               	movwf	tosl,c
  5262  002F3C  50DE               	movf	postinc2,w,c
  5263  002F3E  6EFE               	movwf	tosh,c
  5264  002F40  50F8               	movf	tblptru,w,c
  5265  002F42  6EFF               	movwf	tosu,c
  5266  002F44  50FA               	movf	pclath,w,c
  5267  002F46  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5268  002F48  0D08               	mullw	8
  5269  002F4A  0E07               	movlw	7
  5270  002F4C  26F3               	addwf	prodl,f,c
  5271  002F4E  0E00               	movlw	0
  5272  002F50  22F4               	addwfc	prodh,f,c
  5273  002F52  0E90               	movlw	low _TaskTable
  5274  002F54  24F3               	addwf	prodl,w,c
  5275  002F56  6ED9               	movwf	fsr2l,c
  5276  002F58  0E05               	movlw	high _TaskTable
  5277  002F5A  20F4               	addwfc	prodh,w,c
  5278  002F5C  6EDA               	movwf	fsr2h,c
  5279  002F5E  50DF               	movf	indf2,w,c
  5280  002F60  0012               	return		;indir
  5281  002F62                     u14669:
  5282                           
  5283                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5284  002F62  0100               	movlb	0	; () banked
  5285  002F64  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5286  002F66  0D08               	mullw	8
  5287  002F68  0E02               	movlw	2
  5288  002F6A  26F3               	addwf	prodl,f,c
  5289  002F6C  0E00               	movlw	0
  5290  002F6E  22F4               	addwfc	prodh,f,c
  5291  002F70  0E90               	movlw	low _TaskTable
  5292  002F72  24F3               	addwf	prodl,w,c
  5293  002F74  6ED9               	movwf	fsr2l,c
  5294  002F76  0E05               	movlw	high _TaskTable
  5295  002F78  20F4               	addwfc	prodh,w,c
  5296  002F7A  6EDA               	movwf	fsr2h,c
  5297  002F7C  0E00               	movlw	0
  5298  002F7E  6EDF               	movwf	indf2,c
  5299  002F80                     l775:
  5300                           
  5301                           ; BSR set to: 0
  5302                           
  5303                           ; BSR set to: 0
  5304                           
  5305                           ;os_sched.c: 117: else
  5306                           ;os_sched.c: 118: {
  5307                           
  5308                           ; BSR set to: 0
  5309  002F80  2BB3               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5310  002F82  D772               	goto	l14953
  5311  002F84                     __end_of_ScheduleTasks:
  5312                           	opt stack 0
  5313                           tosu	equ	0xFFF
  5314                           tosh	equ	0xFFE
  5315                           tosl	equ	0xFFD
  5316                           pclath	equ	0xFFA
  5317                           tblptru	equ	0xFF8
  5318                           tblptrh	equ	0xFF7
  5319                           tblptrl	equ	0xFF6
  5320                           tablat	equ	0xFF5
  5321                           prodh	equ	0xFF4
  5322                           prodl	equ	0xFF3
  5323                           intcon	equ	0xFF2
  5324                           intcon2	equ	0xFF1
  5325                           intcon3	equ	0xFF0
  5326                           postinc0	equ	0xFEE
  5327                           wreg	equ	0xFE8
  5328                           postinc1	equ	0xFE6
  5329                           postdec1	equ	0xFE5
  5330                           fsr1h	equ	0xFE2
  5331                           fsr1l	equ	0xFE1
  5332                           indf2	equ	0xFDF
  5333                           postinc2	equ	0xFDE
  5334                           postdec2	equ	0xFDD
  5335                           fsr2h	equ	0xFDA
  5336                           fsr2l	equ	0xFD9
  5337                           status	equ	0xFD8
  5338                           
  5339 ;; *************** function _InitializeTasks *****************
  5340 ;; Defined at:
  5341 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;		None
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  ActiveTaskIn    1  200[BANK2 ] unsigned char 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      void 
  5348 ;; Registers used:
  5349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5356 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5357 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;      Totals:         0       2       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;Total ram usage:        3 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:   21
  5362 ;; This function calls:
  5363 ;;		_I2cSlv_MainTask
  5364 ;;		_Led_MainTask
  5365 ;;		_MdmHttp_MainTask
  5366 ;;		_Mdm_DrvMainFn
  5367 ;;		_Mdm_MainTask
  5368 ;;		_MyApp_Task
  5369 ;;		_Rtcm_MainTask
  5370 ;;		_Term_MainTask
  5371 ;;		_UsbDevice_MainTask
  5372 ;;		_Wdg_MainTask
  5373 ;; This function is called by:
  5374 ;;		_Sch_MainScheduler
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text15
  5379  004DA4                     __ptext15:
  5380                           	opt stack 0
  5381  004DA4                     _InitializeTasks:
  5382                           	opt stack 8
  5383                           
  5384                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5385                           
  5386                           ; BSR set to: 4
  5387                           ;incstack = 0
  5388  004DA4  0E00               	movlw	0
  5389  004DA6  0102               	movlb	2	; () banked
  5390  004DA8  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5391                           
  5392                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5393  004DAA  0E00               	movlw	0
  5394  004DAC  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5395  004DAE                     l14941:
  5396                           
  5397                           ; BSR set to: 2
  5398  004DAE  0E2F               	movlw	low _TaskNumber
  5399  004DB0  6EF6               	movwf	tblptrl,c
  5400  004DB2                     	if	1	;There is more than 1 active tblptr byte
  5401  004DB2  0EFC               	movlw	high _TaskNumber
  5402  004DB4  6EF7               	movwf	tblptrh,c
  5403  004DB6                     	endif
  5404  004DB6                     	if	0	;There are less than 3 active tblptr bytes
  5405  004DB6                     	endif
  5406  004DB6  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5407  004DB8  0100               	movlb	0	; () banked
  5408  004DBA  6FB3               	movwf	??_InitializeTasks& (0+255),b
  5409  004DBC  6BB4               	clrf	(??_InitializeTasks+1)& (0+255),b
  5410  004DBE  0009               	tblrd		*+
  5411  004DC0  50F5               	movf	tablat,w,c
  5412  004DC2  5DB3               	subwf	??_InitializeTasks& (0+255),w,b
  5413  004DC4  0009               	tblrd		*+
  5414  004DC6  50F5               	movf	tablat,w,c
  5415  004DC8  59B4               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5416  004DCA  B0D8               	btfsc	status,0,c
  5417  004DCC  0012               	return	
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;os_sched.c: 86: {
  5421                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5422                           
  5423                           ; BSR set to: 0
  5424                           
  5425                           ; BSR set to: 0
  5426  004DCE  0102               	movlb	2	; () banked
  5427  004DD0  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5428  004DD2  0D08               	mullw	8
  5429  004DD4  0E90               	movlw	low _TaskTable
  5430  004DD6  24F3               	addwf	prodl,w,c
  5431  004DD8  6ED9               	movwf	fsr2l,c
  5432  004DDA  0E05               	movlw	high _TaskTable
  5433  004DDC  20F4               	addwfc	prodh,w,c
  5434  004DDE  6EDA               	movwf	fsr2h,c
  5435  004DE0  D801               	call	u14628
  5436  004DE2  D017               	goto	u14629
  5437  004DE4                     u14628:
  5438  004DE4  0005               	push	
  5439  004DE6  6EFA               	movwf	pclath,c
  5440  004DE8  50DE               	movf	postinc2,w,c
  5441  004DEA  6EFD               	movwf	tosl,c
  5442  004DEC  50DE               	movf	postinc2,w,c
  5443  004DEE  6EFE               	movwf	tosh,c
  5444  004DF0  50F8               	movf	tblptru,w,c
  5445  004DF2  6EFF               	movwf	tosu,c
  5446  004DF4  50FA               	movf	pclath,w,c
  5447  004DF6  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5448  004DF8  0D08               	mullw	8
  5449  004DFA  0E07               	movlw	7
  5450  004DFC  26F3               	addwf	prodl,f,c
  5451  004DFE  0E00               	movlw	0
  5452  004E00  22F4               	addwfc	prodh,f,c
  5453  004E02  0E90               	movlw	low _TaskTable
  5454  004E04  24F3               	addwf	prodl,w,c
  5455  004E06  6ED9               	movwf	fsr2l,c
  5456  004E08  0E05               	movlw	high _TaskTable
  5457  004E0A  20F4               	addwfc	prodh,w,c
  5458  004E0C  6EDA               	movwf	fsr2h,c
  5459  004E0E  50DF               	movf	indf2,w,c
  5460  004E10  0012               	return		;indir
  5461  004E12                     u14629:
  5462  004E12  0102               	movlb	2	; () banked
  5463  004E14  2BC8               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5464  004E16  D7CB               	goto	l14941
  5465  004E18                     __end_of_InitializeTasks:
  5466                           	opt stack 0
  5467                           tosu	equ	0xFFF
  5468                           tosh	equ	0xFFE
  5469                           tosl	equ	0xFFD
  5470                           pclath	equ	0xFFA
  5471                           tblptru	equ	0xFF8
  5472                           tblptrh	equ	0xFF7
  5473                           tblptrl	equ	0xFF6
  5474                           tablat	equ	0xFF5
  5475                           prodh	equ	0xFF4
  5476                           prodl	equ	0xFF3
  5477                           intcon	equ	0xFF2
  5478                           intcon2	equ	0xFF1
  5479                           intcon3	equ	0xFF0
  5480                           postinc0	equ	0xFEE
  5481                           wreg	equ	0xFE8
  5482                           postinc1	equ	0xFE6
  5483                           postdec1	equ	0xFE5
  5484                           fsr1h	equ	0xFE2
  5485                           fsr1l	equ	0xFE1
  5486                           indf2	equ	0xFDF
  5487                           postinc2	equ	0xFDE
  5488                           postdec2	equ	0xFDD
  5489                           fsr2h	equ	0xFDA
  5490                           fsr2l	equ	0xFD9
  5491                           status	equ	0xFD8
  5492                           
  5493 ;; *************** function _MyApp_Task *****************
  5494 ;; Defined at:
  5495 ;;		line 167 in file "../Source/c/04_App/app.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  Options         1    wreg     unsigned char 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;  Options         1    0[COMRAM] unsigned char 
  5500 ;;  smsText        50    0[BANK1 ] unsigned char [50]
  5501 ;;  smsNumber      14   64[BANK1 ] unsigned char [14]
  5502 ;;  phone          14   50[BANK1 ] unsigned char [14]
  5503 ;;  cmpString       3   78[BANK1 ] unsigned char [3]
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  1    wreg      void 
  5506 ;; Registers used:
  5507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5514 ;;      Locals:         0       0      81       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5516 ;;      Totals:         0       0      81       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5517 ;;Total ram usage:       81 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:   15
  5520 ;; This function calls:
  5521 ;;		_ClearBuffer
  5522 ;;		_GetCallerNumber
  5523 ;;		_Led_SetLedBlinkTime
  5524 ;;		_Mdm_GetSmsData
  5525 ;;		_Mdm_HangPhoneCall
  5526 ;;		_Mdm_IsRinging
  5527 ;;		_Mdm_IsSmsReceived
  5528 ;;		_Mdm_RequestSmsData
  5529 ;;		_StringCompare
  5530 ;;		_Uart_WriteConstString
  5531 ;;		_blinkForSeconds
  5532 ;;		_initGprsModem
  5533 ;; This function is called by:
  5534 ;;		_InitializeTasks
  5535 ;;		_ScheduleTasks
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text16
  5540  001EB8                     __ptext16:
  5541                           	opt stack 0
  5542  001EB8                     _MyApp_Task:
  5543                           	opt stack 13
  5544                           
  5545                           ;app.c: 169: UINT8 phone[] = {'+', '3', '9', '3', '2', '0', '0', '2', '7', '6', '3', '1'
      +                          , '8', '\0'};
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;incstack = 0
  5549  001EB8  EE24  F0E2         	lfsr	2,MyApp_Task@F8989
  5550  001EBC  EE11  F032         	lfsr	1,MyApp_Task@phone
  5551  001EC0  0E0D               	movlw	13
  5552  001EC2                     u14531:
  5553  001EC2  CFDB FFE3          	movff	plusw2,plusw1
  5554  001EC6  06E8               	decf	wreg,f,c
  5555  001EC8  E2FC               	bc	u14531
  5556                           
  5557                           ;app.c: 171: static uint16_t blickTicks = 0xFFFF;
  5558                           ;app.c: 172: static uint8_t blinkSeconds = 0;
  5559                           ;app.c: 174: uint8_t smsText[((UINT8)(50))];
  5560                           ;app.c: 175: uint8_t smsNumber[14];
  5561                           ;app.c: 176: uint8_t cmpString[] = {'c', 'a', 't'};
  5562  001ECA  C3CC  F14E         	movff	MyApp_Task@F8996,MyApp_Task@cmpString
  5563  001ECE  C3CD  F14F         	movff	MyApp_Task@F8996+1,MyApp_Task@cmpString+1
  5564  001ED2  C3CE  F150         	movff	MyApp_Task@F8996+2,MyApp_Task@cmpString+2
  5565                           
  5566                           ;app.c: 178: switch (SystemState)
  5567  001ED6  D0A1               	goto	l2579
  5568  001ED8                     
  5569                           ;app.c: 183: Led_SetLedBlinkTime(1u,100,900);
  5570  001ED8  0E00               	movlw	0
  5571  001EDA  0100               	movlb	0	; () banked
  5572  001EDC  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5573  001EDE  0E64               	movlw	100
  5574  001EE0  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5575  001EE2  0E03               	movlw	3
  5576  001EE4  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5577  001EE6  0E84               	movlw	132
  5578  001EE8  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5579  001EEA  0E01               	movlw	1
  5580  001EEC  EC11  F02A         	call	_Led_SetLedBlinkTime
  5581                           
  5582                           ;app.c: 184: break;
  5583  001EF0  0012               	return	
  5584  001EF2                     
  5585                           ;app.c: 188: if (initGprsModem())
  5586  001EF2  EC36  F023         	call	_initGprsModem	;wreg free
  5587  001EF6  0900               	iorlw	0
  5588  001EF8  B4D8               	btfsc	status,2,c
  5589  001EFA  0012               	return	
  5590                           
  5591                           ;app.c: 189: {
  5592                           ;app.c: 191: if (Mdm_IsRinging())
  5593  001EFC  EC5F  F02F         	call	_Mdm_IsRinging	;wreg free
  5594  001F00  0900               	iorlw	0
  5595  001F02  B4D8               	btfsc	status,2,c
  5596  001F04  D01F               	goto	l2584
  5597                           
  5598                           ;app.c: 192: {
  5599                           ;app.c: 193: blickTicks = 0;
  5600  001F06  0E00               	movlw	0
  5601  001F08  0103               	movlb	3	; () banked
  5602  001F0A  6FFE               	movwf	(MyApp_Task@blickTicks+1)& (0+255),b
  5603  001F0C  0E00               	movlw	0
  5604  001F0E  6FFD               	movwf	MyApp_Task@blickTicks& (0+255),b
  5605                           
  5606                           ; BSR set to: 3
  5607                           ;app.c: 194: if (StringCompare(phone, GetCallerNumber(), 14))
  5608  001F10  0E32               	movlw	low MyApp_Task@phone
  5609  001F12  0100               	movlb	0	; () banked
  5610  001F14  6F85               	movwf	StringCompare@String1& (0+255),b
  5611  001F16  0E01               	movlw	high MyApp_Task@phone
  5612  001F18  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
  5613  001F1A  ECC4  F02D         	call	_GetCallerNumber	;wreg free
  5614  001F1E  C083  F087         	movff	?_GetCallerNumber,StringCompare@String2
  5615  001F22  C084  F088         	movff	?_GetCallerNumber+1,StringCompare@String2+1
  5616  001F26  0E00               	movlw	0
  5617  001F28  0100               	movlb	0	; () banked
  5618  001F2A  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
  5619  001F2C  0E0E               	movlw	14
  5620  001F2E  6F89               	movwf	StringCompare@Len& (0+255),b
  5621  001F30  EC65  F02A         	call	_StringCompare	;wreg free
  5622  001F34  0900               	iorlw	0
  5623  001F36  B4D8               	btfsc	status,2,c
  5624  001F38  D003               	goto	l2585
  5625                           
  5626                           ;app.c: 195: {
  5627                           ;app.c: 196: blinkSeconds = 5;
  5628  001F3A  0E05               	movlw	5
  5629  001F3C  0101               	movlb	1	; () banked
  5630  001F3E  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5631  001F40                     l2585:
  5632                           
  5633                           ;app.c: 197: }
  5634                           ;app.c: 198: Mdm_HangPhoneCall();
  5635                           
  5636                           ; BSR set to: 1
  5637  001F40  ECCC  F030         	call	_Mdm_HangPhoneCall	;wreg free
  5638  001F44                     l2584:
  5639                           
  5640                           ;app.c: 199: }
  5641                           ;app.c: 200: if (Mdm_IsSmsReceived())
  5642  001F44  EC4D  F02F         	call	_Mdm_IsSmsReceived	;wreg free
  5643  001F48  0900               	iorlw	0
  5644  001F4A  A4D8               	btfss	status,2,c
  5645                           
  5646                           ;app.c: 201: {
  5647                           ;app.c: 202: Mdm_RequestSmsData();
  5648  001F4C  ECEE  F030         	call	_Mdm_RequestSmsData	;wreg free
  5649                           
  5650                           ;app.c: 203: }
  5651                           ;app.c: 204: if (Mdm_GetSmsData(smsText, smsNumber) == SmsDataReady)
  5652  001F50  0E00               	movlw	low MyApp_Task@smsText
  5653  001F52  0100               	movlb	0	; () banked
  5654  001F54  6F87               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  5655  001F56  0E01               	movlw	high MyApp_Task@smsText
  5656  001F58  6F88               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  5657  001F5A  0E40               	movlw	low MyApp_Task@smsNumber
  5658  001F5C  6F89               	movwf	Mdm_GetSmsData@MessageHeader& (0+255),b
  5659  001F5E  0E01               	movlw	high MyApp_Task@smsNumber
  5660  001F60  6F8A               	movwf	(Mdm_GetSmsData@MessageHeader+1)& (0+255),b
  5661  001F62  EC96  F026         	call	_Mdm_GetSmsData	;wreg free
  5662  001F66  06E8               	decf	wreg,f,c
  5663  001F68  A4D8               	btfss	status,2,c
  5664  001F6A  D04D               	goto	l2587
  5665                           
  5666                           ;app.c: 205: {
  5667                           ;app.c: 206: blickTicks = 0;
  5668  001F6C  0E00               	movlw	0
  5669  001F6E  0103               	movlb	3	; () banked
  5670  001F70  6FFE               	movwf	(MyApp_Task@blickTicks+1)& (0+255),b
  5671  001F72  0E00               	movlw	0
  5672  001F74  6FFD               	movwf	MyApp_Task@blickTicks& (0+255),b
  5673                           
  5674                           ;app.c: 207: blinkSeconds = 3;
  5675  001F76  0E03               	movlw	3
  5676  001F78  0101               	movlb	1	; () banked
  5677  001F7A  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5678                           
  5679                           ; BSR set to: 1
  5680                           ;app.c: 208: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  5681  001F7C  0E2E               	movlw	low STR_31
  5682  001F7E  0100               	movlb	0	; () banked
  5683  001F80  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  5684  001F82  0EFF               	movlw	high STR_31
  5685  001F84  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  5686  001F86  0E01               	movlw	1
  5687  001F88  EC6F  F02C         	call	_Uart_WriteConstString
  5688                           
  5689                           ;app.c: 210: if (StringCompare(smsNumber, phone, 14))
  5690  001F8C  0E40               	movlw	low MyApp_Task@smsNumber
  5691  001F8E  0100               	movlb	0	; () banked
  5692  001F90  6F85               	movwf	StringCompare@String1& (0+255),b
  5693  001F92  0E01               	movlw	high MyApp_Task@smsNumber
  5694  001F94  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
  5695  001F96  0E32               	movlw	low MyApp_Task@phone
  5696  001F98  6F87               	movwf	StringCompare@String2& (0+255),b
  5697  001F9A  0E01               	movlw	high MyApp_Task@phone
  5698  001F9C  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
  5699  001F9E  0E00               	movlw	0
  5700  001FA0  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
  5701  001FA2  0E0E               	movlw	14
  5702  001FA4  6F89               	movwf	StringCompare@Len& (0+255),b
  5703  001FA6  EC65  F02A         	call	_StringCompare	;wreg free
  5704  001FAA  0900               	iorlw	0
  5705  001FAC  B4D8               	btfsc	status,2,c
  5706  001FAE  D015               	goto	l2589
  5707                           
  5708                           ;app.c: 211: {
  5709                           ;app.c: 212: if (StringCompare(smsText, cmpString, sizeof(cmpString)))
  5710  001FB0  0E00               	movlw	low MyApp_Task@smsText
  5711  001FB2  0100               	movlb	0	; () banked
  5712  001FB4  6F85               	movwf	StringCompare@String1& (0+255),b
  5713  001FB6  0E01               	movlw	high MyApp_Task@smsText
  5714  001FB8  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
  5715  001FBA  0E4E               	movlw	low MyApp_Task@cmpString
  5716  001FBC  6F87               	movwf	StringCompare@String2& (0+255),b
  5717  001FBE  0E01               	movlw	high MyApp_Task@cmpString
  5718  001FC0  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
  5719  001FC2  0E00               	movlw	0
  5720  001FC4  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
  5721  001FC6  0E03               	movlw	3
  5722  001FC8  6F89               	movwf	StringCompare@Len& (0+255),b
  5723  001FCA  EC65  F02A         	call	_StringCompare	;wreg free
  5724  001FCE  0900               	iorlw	0
  5725  001FD0  B4D8               	btfsc	status,2,c
  5726  001FD2  D003               	goto	l2589
  5727                           
  5728                           ;app.c: 213: {
  5729                           ;app.c: 214: blinkSeconds = 6;
  5730  001FD4  0E06               	movlw	6
  5731  001FD6  0101               	movlb	1	; () banked
  5732  001FD8  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5733  001FDA                     l2589:
  5734                           
  5735                           ;app.c: 215: }
  5736                           ;app.c: 216: }
  5737                           ;app.c: 217: ClearBuffer(smsText, sizeof(smsText));
  5738                           
  5739                           ; BSR set to: 1
  5740                           
  5741                           ; BSR set to: 1
  5742  001FDA  0E00               	movlw	low MyApp_Task@smsText
  5743  001FDC  0100               	movlb	0	; () banked
  5744  001FDE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
  5745  001FE0  0E01               	movlw	high MyApp_Task@smsText
  5746  001FE2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
  5747  001FE4  0E00               	movlw	0
  5748  001FE6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
  5749  001FE8  0E32               	movlw	50
  5750  001FEA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
  5751  001FEC  ECDF  F02D         	call	_ClearBuffer	;wreg free
  5752                           
  5753                           ;app.c: 218: ClearBuffer(smsNumber, 14);
  5754  001FF0  0E40               	movlw	low MyApp_Task@smsNumber
  5755  001FF2  0100               	movlb	0	; () banked
  5756  001FF4  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
  5757  001FF6  0E01               	movlw	high MyApp_Task@smsNumber
  5758  001FF8  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
  5759  001FFA  0E00               	movlw	0
  5760  001FFC  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
  5761  001FFE  0E0E               	movlw	14
  5762  002000  6F7F               	movwf	ClearBuffer@Len& (0+255),b
  5763  002002  ECDF  F02D         	call	_ClearBuffer	;wreg free
  5764  002006                     l2587:
  5765                           
  5766                           ;app.c: 219: }
  5767                           ;app.c: 220: blinkForSeconds(blinkSeconds, &blickTicks);
  5768  002006  0EFD               	movlw	low MyApp_Task@blickTicks
  5769  002008  0100               	movlb	0	; () banked
  5770  00200A  6F93               	movwf	blinkForSeconds@blickTicks& (0+255),b
  5771  00200C  0E03               	movlw	high MyApp_Task@blickTicks
  5772  00200E  6F94               	movwf	(blinkForSeconds@blickTicks+1)& (0+255),b
  5773  002010  0101               	movlb	1	; () banked
  5774  002012  51D3               	movf	MyApp_Task@blinkSeconds& (0+255),w,b
  5775  002014  EC8A  F02D         	call	_blinkForSeconds
  5776                           
  5777                           ;app.c: 227: }
  5778                           
  5779                           ;app.c: 226: break;
  5780                           
  5781                           ;app.c: 225: default:
  5782                           
  5783                           ;app.c: 221: }
  5784                           ;app.c: 222: break;
  5785  002018  0012               	return	
  5786  00201A                     l2579:
  5787  00201A  0100               	movlb	0	; () banked
  5788  00201C  51D6               	movf	_SystemState& (0+255),w,b
  5789                           
  5790                           ; Switch size 1, requested type "space"
  5791                           ; Number of cases is 2, Range of values is 0 to 1
  5792                           ; switch strategies available:
  5793                           ; Name         Instructions Cycles
  5794                           ; simple_byte            7     4 (average)
  5795                           ;	Chosen strategy is simple_byte
  5796  00201E  0A00               	xorlw	0	; case 0
  5797  002020  B4D8               	btfsc	status,2,c
  5798  002022  D75A               	goto	l2580
  5799  002024  0A01               	xorlw	1	; case 1
  5800  002026  A4D8               	btfss	status,2,c
  5801  002028  0012               	return	
  5802  00202A  D763               	goto	l2582
  5803  00202C                     __end_of_MyApp_Task:
  5804                           	opt stack 0
  5805                           tosu	equ	0xFFF
  5806                           tosh	equ	0xFFE
  5807                           tosl	equ	0xFFD
  5808                           pclath	equ	0xFFA
  5809                           tblptru	equ	0xFF8
  5810                           tblptrh	equ	0xFF7
  5811                           tblptrl	equ	0xFF6
  5812                           tablat	equ	0xFF5
  5813                           prodh	equ	0xFF4
  5814                           prodl	equ	0xFF3
  5815                           intcon	equ	0xFF2
  5816                           intcon2	equ	0xFF1
  5817                           intcon3	equ	0xFF0
  5818                           postinc0	equ	0xFEE
  5819                           wreg	equ	0xFE8
  5820                           postinc1	equ	0xFE6
  5821                           postdec1	equ	0xFE5
  5822                           plusw1	equ	0xFE3
  5823                           fsr1h	equ	0xFE2
  5824                           fsr1l	equ	0xFE1
  5825                           indf2	equ	0xFDF
  5826                           postinc2	equ	0xFDE
  5827                           postdec2	equ	0xFDD
  5828                           plusw2	equ	0xFDB
  5829                           fsr2h	equ	0xFDA
  5830                           fsr2l	equ	0xFD9
  5831                           status	equ	0xFD8
  5832                           
  5833 ;; *************** function _Term_MainTask *****************
  5834 ;; Defined at:
  5835 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  Options         1    wreg     unsigned char 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;  Options         1    0[COMRAM] unsigned char 
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      void 
  5842 ;; Registers used:
  5843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5853 ;;Total ram usage:        0 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:   17
  5856 ;; This function calls:
  5857 ;;		_Term_MainSm
  5858 ;; This function is called by:
  5859 ;;		_InitializeTasks
  5860 ;;		_ScheduleTasks
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text17
  5865  0060A0                     __ptext17:
  5866                           	opt stack 0
  5867  0060A0                     _Term_MainTask:
  5868                           	opt stack 11
  5869                           
  5870                           ;term.c: 847: switch (SystemState)
  5871                           
  5872                           ;incstack = 0
  5873  0060A0  D003               	goto	l2452
  5874  0060A2                     
  5875                           ;term.c: 858: Term_MainSm();
  5876  0060A2  EC5B  F008         	call	_Term_MainSm	;wreg free
  5877                           
  5878                           ;term.c: 865: }
  5879                           
  5880                           ;term.c: 864: break;
  5881                           
  5882                           ;term.c: 863: default:
  5883                           
  5884                           ;term.c: 860: break;
  5885  0060A6  0012               	return	
  5886  0060A8                     l2452:
  5887  0060A8  0100               	movlb	0	; () banked
  5888  0060AA  51D6               	movf	_SystemState& (0+255),w,b
  5889                           
  5890                           ; Switch size 1, requested type "space"
  5891                           ; Number of cases is 2, Range of values is 0 to 1
  5892                           ; switch strategies available:
  5893                           ; Name         Instructions Cycles
  5894                           ; simple_byte            7     4 (average)
  5895                           ;	Chosen strategy is simple_byte
  5896  0060AC  0A00               	xorlw	0	; case 0
  5897  0060AE  B4D8               	btfsc	status,2,c
  5898  0060B0  0012               	return	
  5899  0060B2  0A01               	xorlw	1	; case 1
  5900  0060B4  A4D8               	btfss	status,2,c
  5901  0060B6  0012               	return	
  5902  0060B8  D7F4               	goto	l2455
  5903  0060BA                     __end_of_Term_MainTask:
  5904                           	opt stack 0
  5905                           tosu	equ	0xFFF
  5906                           tosh	equ	0xFFE
  5907                           tosl	equ	0xFFD
  5908                           pclath	equ	0xFFA
  5909                           tblptru	equ	0xFF8
  5910                           tblptrh	equ	0xFF7
  5911                           tblptrl	equ	0xFF6
  5912                           tablat	equ	0xFF5
  5913                           prodh	equ	0xFF4
  5914                           prodl	equ	0xFF3
  5915                           intcon	equ	0xFF2
  5916                           intcon2	equ	0xFF1
  5917                           intcon3	equ	0xFF0
  5918                           postinc0	equ	0xFEE
  5919                           wreg	equ	0xFE8
  5920                           postinc1	equ	0xFE6
  5921                           postdec1	equ	0xFE5
  5922                           plusw1	equ	0xFE3
  5923                           fsr1h	equ	0xFE2
  5924                           fsr1l	equ	0xFE1
  5925                           indf2	equ	0xFDF
  5926                           postinc2	equ	0xFDE
  5927                           postdec2	equ	0xFDD
  5928                           plusw2	equ	0xFDB
  5929                           fsr2h	equ	0xFDA
  5930                           fsr2l	equ	0xFD9
  5931                           status	equ	0xFD8
  5932                           
  5933 ;; *************** function _Rtcm_MainTask *****************
  5934 ;; Defined at:
  5935 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  Options         1    wreg     unsigned char 
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;  Options         1    0[COMRAM] unsigned char 
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  1    wreg      void 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5953 ;;Total ram usage:        0 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:   14
  5956 ;; This function calls:
  5957 ;;		_Rtcc_AlarmConfig
  5958 ;;		_Rtcc_LockRtc
  5959 ;;		_Rtcc_RtcConfig
  5960 ;;		_Rtcc_SetRtcStatus
  5961 ;;		_Rtcc_UnlockRtc
  5962 ;;		_Rtcm_GetRtccDate
  5963 ;;		_Rtcm_SetRtccDate
  5964 ;; This function is called by:
  5965 ;;		_InitializeTasks
  5966 ;;		_ScheduleTasks
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970                           	psect	text18
  5971  004A86                     __ptext18:
  5972                           	opt stack 0
  5973  004A86                     _Rtcm_MainTask:
  5974                           	opt stack 14
  5975                           
  5976                           ;rtcm.c: 101: switch (SystemState)
  5977                           
  5978                           ;incstack = 0
  5979  004A86  D03D               	goto	l2182
  5980  004A88                     l2183:
  5981                           
  5982                           ; BSR set to: 0
  5983                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  5984  004A88  86CD               	bsf	4045,3,c	;volatile
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  5988  004A8A  0E00               	movlw	0
  5989  004A8C  0103               	movlb	3	; () banked
  5990  004A8E  6FB8               	movwf	_RtcConfig& (0+255),b
  5991                           
  5992                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  5993  004A90  0E00               	movlw	0
  5994  004A92  6FB9               	movwf	(_RtcConfig+1)& (0+255),b
  5995                           
  5996                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  5997  004A94  0E01               	movlw	1
  5998  004A96  6FBA               	movwf	(_RtcConfig+2)& (0+255),b
  5999                           
  6000                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6001  004A98  0E01               	movlw	1
  6002  004A9A  6FBB               	movwf	(_RtcConfig+3)& (0+255),b
  6003                           
  6004                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6005  004A9C  0E01               	movlw	1
  6006  004A9E  6FB4               	movwf	_AlCfg& (0+255),b
  6007                           
  6008                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6009  004AA0  0E01               	movlw	1
  6010  004AA2  6FB5               	movwf	(_AlCfg+1)& (0+255),b
  6011                           
  6012                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6013  004AA4  0E01               	movlw	1
  6014  004AA6  6FB6               	movwf	(_AlCfg+2)& (0+255),b
  6015                           
  6016                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6017  004AA8  0E00               	movlw	0
  6018  004AAA  6FB7               	movwf	(_AlCfg+3)& (0+255),b
  6019                           
  6020                           ; BSR set to: 3
  6021                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6022  004AAC  ECDE  F030         	call	_Rtcc_UnlockRtc	;wreg free
  6023                           
  6024                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6025  004AB0  0EB8               	movlw	low _RtcConfig
  6026  004AB2  0100               	movlb	0	; () banked
  6027  004AB4  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6028  004AB6  0E03               	movlw	high _RtcConfig
  6029  004AB8  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6030  004ABA  EC97  F022         	call	_Rtcc_RtcConfig	;wreg free
  6031                           
  6032                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6033  004ABE  0EB4               	movlw	low _AlCfg
  6034  004AC0  0100               	movlb	0	; () banked
  6035  004AC2  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6036  004AC4  0E03               	movlw	high _AlCfg
  6037  004AC6  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6038  004AC8  ECB4  F027         	call	_Rtcc_AlarmConfig	;wreg free
  6039                           
  6040                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6041  004ACC  0E01               	movlw	1
  6042  004ACE  EC8D  F030         	call	_Rtcc_SetRtcStatus
  6043                           
  6044                           ;rtcm.c: 127: Rtcc_LockRtc();
  6045  004AD2  ECE6  F030         	call	_Rtcc_LockRtc	;wreg free
  6046                           
  6047                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6048  004AD6  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6049  004ADA  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6050  004ADE  0E07               	movlw	7
  6051  004AE0                     u14511:
  6052  004AE0  CFDB FFEB          	movff	plusw2,plusw0
  6053  004AE4  06E8               	decf	wreg,f,c
  6054  004AE6  E2FC               	bc	u14511
  6055  004AE8  ECE7  F029         	call	_Rtcm_SetRtccDate	;wreg free
  6056                           
  6057                           ;rtcm.c: 154: break;
  6058  004AEC  0012               	return	
  6059  004AEE                     
  6060                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6061  004AEE  EC1D  F028         	call	_Rtcm_GetRtccDate	;wreg free
  6062  004AF2  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6063  004AF6  0E07               	movlw	7
  6064  004AF8                     u14521:
  6065  004AF8  CFEB FFDB          	movff	plusw0,plusw2
  6066  004AFC  06E8               	decf	wreg,f,c
  6067  004AFE  E2FC               	bc	u14521
  6068                           
  6069                           ;rtcm.c: 165: }
  6070                           
  6071                           ;rtcm.c: 164: break;
  6072                           
  6073                           ;rtcm.c: 163: default:
  6074                           
  6075                           ;rtcm.c: 160: break;
  6076  004B00  0012               	return	
  6077  004B02                     l2182:
  6078  004B02  0100               	movlb	0	; () banked
  6079  004B04  51D6               	movf	_SystemState& (0+255),w,b
  6080                           
  6081                           ; Switch size 1, requested type "space"
  6082                           ; Number of cases is 2, Range of values is 0 to 1
  6083                           ; switch strategies available:
  6084                           ; Name         Instructions Cycles
  6085                           ; simple_byte            7     4 (average)
  6086                           ;	Chosen strategy is simple_byte
  6087  004B06  0A00               	xorlw	0	; case 0
  6088  004B08  B4D8               	btfsc	status,2,c
  6089  004B0A  D7BE               	goto	l2183
  6090  004B0C  0A01               	xorlw	1	; case 1
  6091  004B0E  A4D8               	btfss	status,2,c
  6092  004B10  0012               	return	
  6093  004B12  D7ED               	goto	l2185
  6094  004B14                     __end_of_Rtcm_MainTask:
  6095                           	opt stack 0
  6096                           tosu	equ	0xFFF
  6097                           tosh	equ	0xFFE
  6098                           tosl	equ	0xFFD
  6099                           pclath	equ	0xFFA
  6100                           tblptru	equ	0xFF8
  6101                           tblptrh	equ	0xFF7
  6102                           tblptrl	equ	0xFF6
  6103                           tablat	equ	0xFF5
  6104                           prodh	equ	0xFF4
  6105                           prodl	equ	0xFF3
  6106                           intcon	equ	0xFF2
  6107                           intcon2	equ	0xFF1
  6108                           intcon3	equ	0xFF0
  6109                           postinc0	equ	0xFEE
  6110                           plusw0	equ	0xFEB
  6111                           wreg	equ	0xFE8
  6112                           postinc1	equ	0xFE6
  6113                           postdec1	equ	0xFE5
  6114                           plusw1	equ	0xFE3
  6115                           fsr1h	equ	0xFE2
  6116                           fsr1l	equ	0xFE1
  6117                           indf2	equ	0xFDF
  6118                           postinc2	equ	0xFDE
  6119                           postdec2	equ	0xFDD
  6120                           plusw2	equ	0xFDB
  6121                           fsr2h	equ	0xFDA
  6122                           fsr2l	equ	0xFD9
  6123                           status	equ	0xFD8
  6124                           
  6125 ;; *************** function _Led_MainTask *****************
  6126 ;; Defined at:
  6127 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  Options         1    wreg     unsigned char 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  Options         1    0[COMRAM] unsigned char 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      void 
  6134 ;; Registers used:
  6135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6143 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6144 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6145 ;;Total ram usage:        1 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; Hardware stack levels required when called:   14
  6148 ;; This function calls:
  6149 ;;		_LedStateMachine
  6150 ;; This function is called by:
  6151 ;;		_InitializeTasks
  6152 ;;		_ScheduleTasks
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           	psect	text19
  6157  003986                     __ptext19:
  6158                           	opt stack 0
  6159  003986                     _Led_MainTask:
  6160                           	opt stack 14
  6161                           
  6162                           ;led.c: 300: switch (SystemState)
  6163                           
  6164                           ;incstack = 0
  6165  003986  D05C               	goto	l2096
  6166  003988                     l2097:
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6170  003988  9895               	bcf	3989,4,c	;volatile
  6171                           
  6172                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6173  00398A  9A95               	bcf	3989,5,c	;volatile
  6174                           
  6175                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6176  00398C  9C95               	bcf	3989,6,c	;volatile
  6177                           
  6178                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6179  00398E  9883               	bcf	3971,4,c	;volatile
  6180                           
  6181                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6182  003990  9A83               	bcf	3971,5,c	;volatile
  6183                           
  6184                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6185  003992  9C83               	bcf	3971,6,c	;volatile
  6186                           
  6187                           ;led.c: 311: break;
  6188  003994  0012               	return	
  6189  003996                     
  6190                           ; BSR set to: 0
  6191                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6192                           
  6193                           ; BSR set to: 0
  6194  003996  0EFC               	movlw	low _Led1Sts
  6195  003998  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6196  00399A  0E01               	movlw	high _Led1Sts
  6197  00399C  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6198  00399E  0EFB               	movlw	low _Led1OutSts
  6199  0039A0  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6200  0039A2  0E01               	movlw	high _Led1OutSts
  6201  0039A4  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6202  0039A6  0E72               	movlw	low _Led1Blink
  6203  0039A8  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6204  0039AA  0E03               	movlw	high _Led1Blink
  6205  0039AC  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6206  0039AE  0E96               	movlw	low _Led1Pulse
  6207  0039B0  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6208  0039B2  0E03               	movlw	high _Led1Pulse
  6209  0039B4  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6210  0039B6  0E01               	movlw	1
  6211  0039B8  ECF2  F021         	call	_LedStateMachine
  6212  0039BC  0100               	movlb	0	; () banked
  6213  0039BE  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6214  0039C0  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6215  0039C2  5083               	movf	3971,w,c	;volatile
  6216  0039C4  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6217  0039C6  0BEF               	andlw	-17
  6218  0039C8  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6219  0039CA  6E83               	movwf	3971,c	;volatile
  6220                           
  6221                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6222  0039CC  0EFA               	movlw	low _Led2Sts
  6223  0039CE  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6224  0039D0  0E01               	movlw	high _Led2Sts
  6225  0039D2  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6226  0039D4  0EF9               	movlw	low _Led2OutSts
  6227  0039D6  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6228  0039D8  0E01               	movlw	high _Led2OutSts
  6229  0039DA  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6230  0039DC  0E69               	movlw	low _Led2Blink
  6231  0039DE  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6232  0039E0  0E03               	movlw	high _Led2Blink
  6233  0039E2  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6234  0039E4  0E90               	movlw	low _Led2Pulse
  6235  0039E6  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6236  0039E8  0E03               	movlw	high _Led2Pulse
  6237  0039EA  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6238  0039EC  0E02               	movlw	2
  6239  0039EE  ECF2  F021         	call	_LedStateMachine
  6240  0039F2  0100               	movlb	0	; () banked
  6241  0039F4  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6242  0039F6  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6243  0039F8  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6244  0039FA  5083               	movf	3971,w,c	;volatile
  6245  0039FC  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6246  0039FE  0BDF               	andlw	-33
  6247  003A00  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6248  003A02  6E83               	movwf	3971,c	;volatile
  6249                           
  6250                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6251  003A04  0EF8               	movlw	low _Led3Sts
  6252  003A06  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6253  003A08  0E01               	movlw	high _Led3Sts
  6254  003A0A  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6255  003A0C  0EF7               	movlw	low _Led3OutSts
  6256  003A0E  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6257  003A10  0E01               	movlw	high _Led3OutSts
  6258  003A12  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6259  003A14  0E60               	movlw	low _Led3Blink
  6260  003A16  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6261  003A18  0E03               	movlw	high _Led3Blink
  6262  003A1A  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6263  003A1C  0E8A               	movlw	low _Led3Pulse
  6264  003A1E  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6265  003A20  0E03               	movlw	high _Led3Pulse
  6266  003A22  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6267  003A24  0E03               	movlw	3
  6268  003A26  ECF2  F021         	call	_LedStateMachine
  6269  003A2A  0100               	movlb	0	; () banked
  6270  003A2C  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6271  003A2E  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6272  003A30  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6273  003A32  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6274  003A34  5083               	movf	3971,w,c	;volatile
  6275  003A36  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6276  003A38  0BBF               	andlw	-65
  6277  003A3A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6278  003A3C  6E83               	movwf	3971,c	;volatile
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;led.c: 326: }
  6282                           
  6283                           ; BSR set to: 0
  6284                           ;led.c: 325: break;
  6285                           
  6286                           ;led.c: 324: default:
  6287                           
  6288                           ;led.c: 321: break;
  6289  003A3E  0012               	return	
  6290  003A40                     l2096:
  6291                           
  6292                           ; BSR set to: 0
  6293  003A40  0100               	movlb	0	; () banked
  6294  003A42  51D6               	movf	_SystemState& (0+255),w,b
  6295                           
  6296                           ; Switch size 1, requested type "space"
  6297                           ; Number of cases is 2, Range of values is 0 to 1
  6298                           ; switch strategies available:
  6299                           ; Name         Instructions Cycles
  6300                           ; simple_byte            7     4 (average)
  6301                           ;	Chosen strategy is simple_byte
  6302  003A44  0A00               	xorlw	0	; case 0
  6303  003A46  B4D8               	btfsc	status,2,c
  6304  003A48  D79F               	goto	l2097
  6305  003A4A  0A01               	xorlw	1	; case 1
  6306  003A4C  A4D8               	btfss	status,2,c
  6307  003A4E  0012               	return	
  6308  003A50  D7A2               	goto	l2099
  6309  003A52                     __end_of_Led_MainTask:
  6310                           	opt stack 0
  6311                           tosu	equ	0xFFF
  6312                           tosh	equ	0xFFE
  6313                           tosl	equ	0xFFD
  6314                           pclath	equ	0xFFA
  6315                           tblptru	equ	0xFF8
  6316                           tblptrh	equ	0xFF7
  6317                           tblptrl	equ	0xFF6
  6318                           tablat	equ	0xFF5
  6319                           prodh	equ	0xFF4
  6320                           prodl	equ	0xFF3
  6321                           intcon	equ	0xFF2
  6322                           intcon2	equ	0xFF1
  6323                           intcon3	equ	0xFF0
  6324                           postinc0	equ	0xFEE
  6325                           plusw0	equ	0xFEB
  6326                           wreg	equ	0xFE8
  6327                           postinc1	equ	0xFE6
  6328                           postdec1	equ	0xFE5
  6329                           plusw1	equ	0xFE3
  6330                           fsr1h	equ	0xFE2
  6331                           fsr1l	equ	0xFE1
  6332                           indf2	equ	0xFDF
  6333                           postinc2	equ	0xFDE
  6334                           postdec2	equ	0xFDD
  6335                           plusw2	equ	0xFDB
  6336                           fsr2h	equ	0xFDA
  6337                           fsr2l	equ	0xFD9
  6338                           status	equ	0xFD8
  6339                           
  6340 ;; *************** function _UsbDevice_MainTask *****************
  6341 ;; Defined at:
  6342 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;  Options         1    wreg     unsigned char 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  Options         1    0[COMRAM] unsigned char 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6360 ;;Total ram usage:        0 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:   20
  6363 ;; This function calls:
  6364 ;;		_CDCTxService
  6365 ;;		_USBDeviceInit
  6366 ;;		_USBDeviceTasks
  6367 ;; This function is called by:
  6368 ;;		_InitializeTasks
  6369 ;;		_ScheduleTasks
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text20
  6374  005E76                     __ptext20:
  6375                           	opt stack 0
  6376  005E76                     _UsbDevice_MainTask:
  6377                           	opt stack 8
  6378                           
  6379                           ;usb_device_mgr.c: 74: switch (SystemState)
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;incstack = 0
  6383  005E76  D008               	goto	l1989
  6384  005E78                     
  6385                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6386  005E78  ECD7  F012         	call	_USBDeviceInit	;wreg free
  6387                           
  6388                           ;usb_device_mgr.c: 80: ;
  6389                           ;usb_device_mgr.c: 81: break;
  6390  005E7C  0012               	return	
  6391  005E7E                     
  6392                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6393  005E7E  EC99  F00E         	call	_USBDeviceTasks	;wreg free
  6394                           
  6395                           ;usb_device_mgr.c: 90: CDCTxService();
  6396  005E82  EC24  F014         	call	_CDCTxService	;wreg free
  6397                           
  6398                           ;usb_device_mgr.c: 101: }
  6399                           
  6400                           ;usb_device_mgr.c: 100: break;
  6401                           
  6402                           ;usb_device_mgr.c: 99: default:
  6403                           
  6404                           ;usb_device_mgr.c: 96: break;
  6405  005E86  0012               	return	
  6406  005E88                     l1989:
  6407  005E88  0100               	movlb	0	; () banked
  6408  005E8A  51D6               	movf	_SystemState& (0+255),w,b
  6409                           
  6410                           ; Switch size 1, requested type "space"
  6411                           ; Number of cases is 2, Range of values is 0 to 1
  6412                           ; switch strategies available:
  6413                           ; Name         Instructions Cycles
  6414                           ; simple_byte            7     4 (average)
  6415                           ;	Chosen strategy is simple_byte
  6416  005E8C  0A00               	xorlw	0	; case 0
  6417  005E8E  B4D8               	btfsc	status,2,c
  6418  005E90  D7F3               	goto	l1990
  6419  005E92  0A01               	xorlw	1	; case 1
  6420  005E94  A4D8               	btfss	status,2,c
  6421  005E96  0012               	return	
  6422  005E98  D7F2               	goto	l1992
  6423  005E9A                     __end_of_UsbDevice_MainTask:
  6424                           	opt stack 0
  6425                           tosu	equ	0xFFF
  6426                           tosh	equ	0xFFE
  6427                           tosl	equ	0xFFD
  6428                           pclath	equ	0xFFA
  6429                           tblptru	equ	0xFF8
  6430                           tblptrh	equ	0xFF7
  6431                           tblptrl	equ	0xFF6
  6432                           tablat	equ	0xFF5
  6433                           prodh	equ	0xFF4
  6434                           prodl	equ	0xFF3
  6435                           intcon	equ	0xFF2
  6436                           intcon2	equ	0xFF1
  6437                           intcon3	equ	0xFF0
  6438                           postinc0	equ	0xFEE
  6439                           plusw0	equ	0xFEB
  6440                           wreg	equ	0xFE8
  6441                           postinc1	equ	0xFE6
  6442                           postdec1	equ	0xFE5
  6443                           plusw1	equ	0xFE3
  6444                           fsr1h	equ	0xFE2
  6445                           fsr1l	equ	0xFE1
  6446                           indf2	equ	0xFDF
  6447                           postinc2	equ	0xFDE
  6448                           postdec2	equ	0xFDD
  6449                           plusw2	equ	0xFDB
  6450                           fsr2h	equ	0xFDA
  6451                           fsr2l	equ	0xFD9
  6452                           status	equ	0xFD8
  6453                           
  6454 ;; *************** function _MdmHttp_MainTask *****************
  6455 ;; Defined at:
  6456 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;  Options         1    wreg     unsigned char 
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;  Options         1    0[COMRAM] unsigned char 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1    wreg      void 
  6463 ;; Registers used:
  6464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6474 ;;Total ram usage:        0 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:   15
  6477 ;; This function calls:
  6478 ;;		_HttpGetMethod
  6479 ;;		_InitGprsNetwork
  6480 ;; This function is called by:
  6481 ;;		_InitializeTasks
  6482 ;;		_ScheduleTasks
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text21
  6487  005788                     __ptext21:
  6488                           	opt stack 0
  6489  005788                     _MdmHttp_MainTask:
  6490                           	opt stack 13
  6491                           
  6492                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6493                           
  6494                           ;incstack = 0
  6495  005788  D019               	goto	l1288
  6496  00578A                     
  6497                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6498  00578A  0E03               	movlw	3
  6499  00578C  0100               	movlb	0	; () banked
  6500  00578E  19D3               	xorwf	_MdmStatus& (0+255),w,b
  6501  005790  A4D8               	btfss	status,2,c
  6502  005792  0012               	return	
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;mdm_gsm_gprs_http.c: 570: {
  6506                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6507  005794  C324  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6508  005798  C325  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6509  00579C  C1EE  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6510  0057A0  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6511  0057A4  0101               	movlb	1	; () banked
  6512  0057A6  6FED               	movwf	_GprsNetworkSts& (0+255),b
  6513                           
  6514                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6515  0057A8  0EA7               	movlw	low _HttpGetDataLocal
  6516  0057AA  0100               	movlb	0	; () banked
  6517  0057AC  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6518  0057AE  0E03               	movlw	high _HttpGetDataLocal
  6519  0057B0  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6520  0057B2  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6521  0057B6  0101               	movlb	1	; () banked
  6522  0057B8  6FEC               	movwf	_HttpGetMethodSts& (0+255),b
  6523                           
  6524                           ; BSR set to: 1
  6525                           ;mdm_gsm_gprs_http.c: 581: }
  6526                           
  6527                           ; BSR set to: 1
  6528                           ;mdm_gsm_gprs_http.c: 580: break;
  6529                           
  6530                           ;mdm_gsm_gprs_http.c: 579: default:
  6531                           
  6532                           ; BSR set to: 1
  6533                           ;mdm_gsm_gprs_http.c: 575: }
  6534                           ;mdm_gsm_gprs_http.c: 576: break;
  6535  0057BA  0012               	return	
  6536  0057BC                     l1288:
  6537                           
  6538                           ; BSR set to: 1
  6539  0057BC  0100               	movlb	0	; () banked
  6540  0057BE  51D6               	movf	_SystemState& (0+255),w,b
  6541                           
  6542                           ; Switch size 1, requested type "space"
  6543                           ; Number of cases is 2, Range of values is 0 to 1
  6544                           ; switch strategies available:
  6545                           ; Name         Instructions Cycles
  6546                           ; simple_byte            7     4 (average)
  6547                           ;	Chosen strategy is simple_byte
  6548  0057C0  0A00               	xorlw	0	; case 0
  6549  0057C2  B4D8               	btfsc	status,2,c
  6550  0057C4  0012               	return	
  6551  0057C6  0A01               	xorlw	1	; case 1
  6552  0057C8  A4D8               	btfss	status,2,c
  6553  0057CA  0012               	return	
  6554  0057CC  D7DE               	goto	l1291
  6555  0057CE                     __end_of_MdmHttp_MainTask:
  6556                           	opt stack 0
  6557                           tosu	equ	0xFFF
  6558                           tosh	equ	0xFFE
  6559                           tosl	equ	0xFFD
  6560                           pclath	equ	0xFFA
  6561                           tblptru	equ	0xFF8
  6562                           tblptrh	equ	0xFF7
  6563                           tblptrl	equ	0xFF6
  6564                           tablat	equ	0xFF5
  6565                           prodh	equ	0xFF4
  6566                           prodl	equ	0xFF3
  6567                           intcon	equ	0xFF2
  6568                           intcon2	equ	0xFF1
  6569                           intcon3	equ	0xFF0
  6570                           postinc0	equ	0xFEE
  6571                           plusw0	equ	0xFEB
  6572                           wreg	equ	0xFE8
  6573                           postinc1	equ	0xFE6
  6574                           postdec1	equ	0xFE5
  6575                           plusw1	equ	0xFE3
  6576                           fsr1h	equ	0xFE2
  6577                           fsr1l	equ	0xFE1
  6578                           indf2	equ	0xFDF
  6579                           postinc2	equ	0xFDE
  6580                           postdec2	equ	0xFDD
  6581                           plusw2	equ	0xFDB
  6582                           fsr2h	equ	0xFDA
  6583                           fsr2l	equ	0xFD9
  6584                           status	equ	0xFD8
  6585                           
  6586 ;; *************** function _Mdm_MainTask *****************
  6587 ;; Defined at:
  6588 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;  Options         1    wreg     unsigned char 
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;  Options         1    0[COMRAM] unsigned char 
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      void 
  6595 ;; Registers used:
  6596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6606 ;;Total ram usage:        0 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; Hardware stack levels required when called:   15
  6609 ;; This function calls:
  6610 ;;		_CheckModem
  6611 ;;		_ConfigureModem
  6612 ;;		_GetSmsSm
  6613 ;;		_ModemEvtParser
  6614 ;;		_SendSmsSm
  6615 ;;		_TurnOnModem
  6616 ;;		_UartSetConfig
  6617 ;;		_Uart_InitUartModule
  6618 ;; This function is called by:
  6619 ;;		_InitializeTasks
  6620 ;;		_ScheduleTasks
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text22
  6625  00556C                     __ptext22:
  6626                           	opt stack 0
  6627  00556C                     _Mdm_MainTask:
  6628                           	opt stack 13
  6629                           
  6630                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6631                           
  6632                           ;incstack = 0
  6633  00556C  D01E               	goto	l1107
  6634  00556E                     
  6635                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6636  00556E  EC0D  F029         	call	_UartSetConfig	;wreg free
  6637                           
  6638                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6639  005572  0E28               	movlw	low _UartConfig
  6640  005574  0100               	movlb	0	; () banked
  6641  005576  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6642  005578  0E03               	movlw	high _UartConfig
  6643  00557A  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6644  00557C  0E01               	movlw	1
  6645  00557E  EC5E  F005         	call	_Uart_InitUartModule
  6646                           
  6647                           ;mdm_gsm_gprs.c: 764: break;
  6648  005582  0012               	return	
  6649  005584                     
  6650                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6651  005584  ECCD  F010         	call	_CheckModem	;wreg free
  6652                           
  6653                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6654  005588  042B               	decf	_ComChecCompleted,w,c
  6655  00558A  A4D8               	btfss	status,2,c
  6656  00558C  D005               	goto	l1111
  6657  00558E  0100               	movlb	0	; () banked
  6658  005590  51D3               	movf	_MdmStatus& (0+255),w,b
  6659  005592  B4D8               	btfsc	status,2,c
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;mdm_gsm_gprs.c: 772: {
  6663                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6664  005594  EC7A  F02B         	call	_TurnOnModem	;wreg free
  6665  005598                     l1111:
  6666                           
  6667                           ;mdm_gsm_gprs.c: 775: }
  6668                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6669  005598  EC16  F01B         	call	_ConfigureModem	;wreg free
  6670                           
  6671                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6672  00559C  ECD5  F00D         	call	_ModemEvtParser	;wreg free
  6673                           
  6674                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6675  0055A0  ECFF  F015         	call	_GetSmsSm	;wreg free
  6676                           
  6677                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6678  0055A4  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6679                           
  6680                           ;mdm_gsm_gprs.c: 789: }
  6681                           
  6682                           ;mdm_gsm_gprs.c: 788: break;
  6683                           
  6684                           ;mdm_gsm_gprs.c: 787: default:
  6685                           
  6686                           ;mdm_gsm_gprs.c: 784: break;
  6687  0055A8  0012               	return	
  6688  0055AA                     l1107:
  6689  0055AA  0100               	movlb	0	; () banked
  6690  0055AC  51D6               	movf	_SystemState& (0+255),w,b
  6691                           
  6692                           ; Switch size 1, requested type "space"
  6693                           ; Number of cases is 2, Range of values is 0 to 1
  6694                           ; switch strategies available:
  6695                           ; Name         Instructions Cycles
  6696                           ; simple_byte            7     4 (average)
  6697                           ;	Chosen strategy is simple_byte
  6698  0055AE  0A00               	xorlw	0	; case 0
  6699  0055B0  B4D8               	btfsc	status,2,c
  6700  0055B2  D7DD               	goto	l1108
  6701  0055B4  0A01               	xorlw	1	; case 1
  6702  0055B6  A4D8               	btfss	status,2,c
  6703  0055B8  0012               	return	
  6704  0055BA  D7E4               	goto	l1110
  6705  0055BC                     __end_of_Mdm_MainTask:
  6706                           	opt stack 0
  6707                           tosu	equ	0xFFF
  6708                           tosh	equ	0xFFE
  6709                           tosl	equ	0xFFD
  6710                           pclath	equ	0xFFA
  6711                           tblptru	equ	0xFF8
  6712                           tblptrh	equ	0xFF7
  6713                           tblptrl	equ	0xFF6
  6714                           tablat	equ	0xFF5
  6715                           prodh	equ	0xFF4
  6716                           prodl	equ	0xFF3
  6717                           intcon	equ	0xFF2
  6718                           intcon2	equ	0xFF1
  6719                           intcon3	equ	0xFF0
  6720                           postinc0	equ	0xFEE
  6721                           plusw0	equ	0xFEB
  6722                           wreg	equ	0xFE8
  6723                           postinc1	equ	0xFE6
  6724                           postdec1	equ	0xFE5
  6725                           plusw1	equ	0xFE3
  6726                           fsr1h	equ	0xFE2
  6727                           fsr1l	equ	0xFE1
  6728                           indf2	equ	0xFDF
  6729                           postinc2	equ	0xFDE
  6730                           postdec2	equ	0xFDD
  6731                           plusw2	equ	0xFDB
  6732                           fsr2h	equ	0xFDA
  6733                           fsr2l	equ	0xFD9
  6734                           status	equ	0xFD8
  6735                           
  6736 ;; *************** function _I2cSlv_MainTask *****************
  6737 ;; Defined at:
  6738 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;  Options         1    wreg     unsigned char 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;  Options         1    0[COMRAM] unsigned char 
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  1    wreg      void 
  6745 ;; Registers used:
  6746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6756 ;;Total ram usage:        0 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; Hardware stack levels required when called:   14
  6759 ;; This function calls:
  6760 ;;		_I2cSendMsgSm
  6761 ;;		_I2cSetConfig
  6762 ;;		_I2c_InitI2cModule
  6763 ;;		_OsAlrm_SetOsAlarm
  6764 ;; This function is called by:
  6765 ;;		_InitializeTasks
  6766 ;;		_ScheduleTasks
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text23
  6771  00537A                     __ptext23:
  6772                           	opt stack 0
  6773  00537A                     _I2cSlv_MainTask:
  6774                           	opt stack 14
  6775                           
  6776                           ;i2c_slv.c: 217: switch (SystemState)
  6777                           
  6778                           ;incstack = 0
  6779  00537A  D020               	goto	l1401
  6780  00537C                     
  6781                           ;i2c_slv.c: 222: I2cSetConfig();
  6782  00537C  ECD4  F02E         	call	_I2cSetConfig	;wreg free
  6783                           
  6784                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6785  005380  0E56               	movlw	low _I2cConfig
  6786  005382  0100               	movlb	0	; () banked
  6787  005384  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6788  005386  0E03               	movlw	high _I2cConfig
  6789  005388  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6790  00538A  EC45  F027         	call	_I2c_InitI2cModule	;wreg free
  6791                           
  6792                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6793  00538E  0E00               	movlw	0
  6794  005390  0100               	movlb	0	; () banked
  6795  005392  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6796  005394  0E00               	movlw	0
  6797  005396  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6798  005398  0E32               	movlw	50
  6799  00539A  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6800  00539C  0E00               	movlw	0
  6801  00539E  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6802  0053A0  0E00               	movlw	0
  6803  0053A2  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6804  0053A4  0E00               	movlw	0
  6805  0053A6  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6806  0053A8  0E6A               	movlw	low _I2cDummyTx
  6807  0053AA  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6808  0053AC  0E60               	movlw	high _I2cDummyTx
  6809  0053AE  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6810  0053B0  ECBC  F01E         	call	_OsAlrm_SetOsAlarm	;wreg free
  6811                           
  6812                           ;i2c_slv.c: 227: break;
  6813  0053B4  0012               	return	
  6814  0053B6                     
  6815                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6816  0053B6  EC20  F01F         	call	_I2cSendMsgSm	;wreg free
  6817                           
  6818                           ;i2c_slv.c: 238: }
  6819                           
  6820                           ;i2c_slv.c: 237: break;
  6821                           
  6822                           ;i2c_slv.c: 236: default:
  6823                           
  6824                           ;i2c_slv.c: 233: break;
  6825  0053BA  0012               	return	
  6826  0053BC                     l1401:
  6827  0053BC  0100               	movlb	0	; () banked
  6828  0053BE  51D6               	movf	_SystemState& (0+255),w,b
  6829                           
  6830                           ; Switch size 1, requested type "space"
  6831                           ; Number of cases is 2, Range of values is 0 to 1
  6832                           ; switch strategies available:
  6833                           ; Name         Instructions Cycles
  6834                           ; simple_byte            7     4 (average)
  6835                           ;	Chosen strategy is simple_byte
  6836  0053C0  0A00               	xorlw	0	; case 0
  6837  0053C2  B4D8               	btfsc	status,2,c
  6838  0053C4  D7DB               	goto	l1402
  6839  0053C6  0A01               	xorlw	1	; case 1
  6840  0053C8  A4D8               	btfss	status,2,c
  6841  0053CA  0012               	return	
  6842  0053CC  D7F4               	goto	l1404
  6843  0053CE                     __end_of_I2cSlv_MainTask:
  6844                           	opt stack 0
  6845                           tosu	equ	0xFFF
  6846                           tosh	equ	0xFFE
  6847                           tosl	equ	0xFFD
  6848                           pclath	equ	0xFFA
  6849                           tblptru	equ	0xFF8
  6850                           tblptrh	equ	0xFF7
  6851                           tblptrl	equ	0xFF6
  6852                           tablat	equ	0xFF5
  6853                           prodh	equ	0xFF4
  6854                           prodl	equ	0xFF3
  6855                           intcon	equ	0xFF2
  6856                           intcon2	equ	0xFF1
  6857                           intcon3	equ	0xFF0
  6858                           postinc0	equ	0xFEE
  6859                           plusw0	equ	0xFEB
  6860                           wreg	equ	0xFE8
  6861                           postinc1	equ	0xFE6
  6862                           postdec1	equ	0xFE5
  6863                           plusw1	equ	0xFE3
  6864                           fsr1h	equ	0xFE2
  6865                           fsr1l	equ	0xFE1
  6866                           indf2	equ	0xFDF
  6867                           postinc2	equ	0xFDE
  6868                           postdec2	equ	0xFDD
  6869                           plusw2	equ	0xFDB
  6870                           fsr2h	equ	0xFDA
  6871                           fsr2l	equ	0xFD9
  6872                           status	equ	0xFD8
  6873                           
  6874 ;; *************** function _Mdm_DrvMainFn *****************
  6875 ;; Defined at:
  6876 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  Options         1    wreg     unsigned char 
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;  Options         1    0[COMRAM] unsigned char 
  6881 ;; Return value:  Size  Location     Type
  6882 ;;                  1    wreg      void 
  6883 ;; Registers used:
  6884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6894 ;;Total ram usage:        0 bytes
  6895 ;; Hardware stack levels used:    1
  6896 ;; Hardware stack levels required when called:   13
  6897 ;; This function calls:
  6898 ;;		_MdmCntSm
  6899 ;; This function is called by:
  6900 ;;		_InitializeTasks
  6901 ;;		_ScheduleTasks
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text24
  6906  006274                     __ptext24:
  6907                           	opt stack 0
  6908  006274                     _Mdm_DrvMainFn:
  6909                           	opt stack 15
  6910                           
  6911                           ;mdm_drv.c: 307: MdmCntSm();
  6912                           
  6913                           ;incstack = 0
  6914  006274  EC9E  F021         	call	_MdmCntSm	;wreg free
  6915  006278  0012               	return		;funcret
  6916  00627A                     __end_of_Mdm_DrvMainFn:
  6917                           	opt stack 0
  6918                           tosu	equ	0xFFF
  6919                           tosh	equ	0xFFE
  6920                           tosl	equ	0xFFD
  6921                           pclath	equ	0xFFA
  6922                           tblptru	equ	0xFF8
  6923                           tblptrh	equ	0xFF7
  6924                           tblptrl	equ	0xFF6
  6925                           tablat	equ	0xFF5
  6926                           prodh	equ	0xFF4
  6927                           prodl	equ	0xFF3
  6928                           intcon	equ	0xFF2
  6929                           intcon2	equ	0xFF1
  6930                           intcon3	equ	0xFF0
  6931                           postinc0	equ	0xFEE
  6932                           plusw0	equ	0xFEB
  6933                           wreg	equ	0xFE8
  6934                           postinc1	equ	0xFE6
  6935                           postdec1	equ	0xFE5
  6936                           plusw1	equ	0xFE3
  6937                           fsr1h	equ	0xFE2
  6938                           fsr1l	equ	0xFE1
  6939                           indf2	equ	0xFDF
  6940                           postinc2	equ	0xFDE
  6941                           postdec2	equ	0xFDD
  6942                           plusw2	equ	0xFDB
  6943                           fsr2h	equ	0xFDA
  6944                           fsr2l	equ	0xFD9
  6945                           status	equ	0xFD8
  6946                           
  6947 ;; *************** function _Wdg_MainTask *****************
  6948 ;; Defined at:
  6949 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;  Options         1    wreg     unsigned char 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  Options         1    0[COMRAM] unsigned char 
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  1    wreg      void 
  6956 ;; Registers used:
  6957 ;;		wreg, status,2, status,0, cstack
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6967 ;;Total ram usage:        0 bytes
  6968 ;; Hardware stack levels used:    1
  6969 ;; Hardware stack levels required when called:   12
  6970 ;; This function calls:
  6971 ;;		_Mcu_ClearWdg
  6972 ;;		_Mcu_SetWdgSts
  6973 ;; This function is called by:
  6974 ;;		_InitializeTasks
  6975 ;;		_ScheduleTasks
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text25
  6980  005F06                     __ptext25:
  6981                           	opt stack 0
  6982  005F06                     _Wdg_MainTask:
  6983                           	opt stack 16
  6984                           
  6985                           ;wdg.c: 75: switch (SystemState)
  6986                           
  6987                           ;incstack = 0
  6988  005F06  D007               	goto	l2472
  6989  005F08                     
  6990                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  6991  005F08  0E01               	movlw	1
  6992  005F0A  ECC3  F030         	call	_Mcu_SetWdgSts
  6993                           
  6994                           ;wdg.c: 81: break;
  6995  005F0E  0012               	return	
  6996  005F10                     
  6997                           ;wdg.c: 86: Mcu_ClearWdg();
  6998  005F10  EC3D  F031         	call	_Mcu_ClearWdg	;wreg free
  6999                           
  7000                           ;wdg.c: 92: }
  7001                           
  7002                           ;wdg.c: 91: break;
  7003                           
  7004                           ;wdg.c: 90: default:
  7005                           
  7006                           ;wdg.c: 87: break;
  7007  005F14  0012               	return	
  7008  005F16                     l2472:
  7009  005F16  0100               	movlb	0	; () banked
  7010  005F18  51D6               	movf	_SystemState& (0+255),w,b
  7011                           
  7012                           ; Switch size 1, requested type "space"
  7013                           ; Number of cases is 2, Range of values is 0 to 1
  7014                           ; switch strategies available:
  7015                           ; Name         Instructions Cycles
  7016                           ; simple_byte            7     4 (average)
  7017                           ;	Chosen strategy is simple_byte
  7018  005F1A  0A00               	xorlw	0	; case 0
  7019  005F1C  B4D8               	btfsc	status,2,c
  7020  005F1E  D7F4               	goto	l2473
  7021  005F20  0A01               	xorlw	1	; case 1
  7022  005F22  A4D8               	btfss	status,2,c
  7023  005F24  0012               	return	
  7024  005F26  D7F4               	goto	l2475
  7025  005F28                     __end_of_Wdg_MainTask:
  7026                           	opt stack 0
  7027                           tosu	equ	0xFFF
  7028                           tosh	equ	0xFFE
  7029                           tosl	equ	0xFFD
  7030                           pclath	equ	0xFFA
  7031                           tblptru	equ	0xFF8
  7032                           tblptrh	equ	0xFF7
  7033                           tblptrl	equ	0xFF6
  7034                           tablat	equ	0xFF5
  7035                           prodh	equ	0xFF4
  7036                           prodl	equ	0xFF3
  7037                           intcon	equ	0xFF2
  7038                           intcon2	equ	0xFF1
  7039                           intcon3	equ	0xFF0
  7040                           postinc0	equ	0xFEE
  7041                           plusw0	equ	0xFEB
  7042                           wreg	equ	0xFE8
  7043                           postinc1	equ	0xFE6
  7044                           postdec1	equ	0xFE5
  7045                           plusw1	equ	0xFE3
  7046                           fsr1h	equ	0xFE2
  7047                           fsr1l	equ	0xFE1
  7048                           indf2	equ	0xFDF
  7049                           postinc2	equ	0xFDE
  7050                           postdec2	equ	0xFDD
  7051                           plusw2	equ	0xFDB
  7052                           fsr2h	equ	0xFDA
  7053                           fsr2l	equ	0xFD9
  7054                           status	equ	0xFD8
  7055                           
  7056 ;; *************** function _Mcu_SetWdgSts *****************
  7057 ;; Defined at:
  7058 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;  WdgSts          1    wreg     unsigned char 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7063 ;; Return value:  Size  Location     Type
  7064 ;;                  1    wreg      void 
  7065 ;; Registers used:
  7066 ;;		wreg
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7075 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7076 ;;Total ram usage:        1 bytes
  7077 ;; Hardware stack levels used:    1
  7078 ;; Hardware stack levels required when called:   11
  7079 ;; This function calls:
  7080 ;;		Nothing
  7081 ;; This function is called by:
  7082 ;;		_Wdg_MainTask
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text26
  7087  006186                     __ptext26:
  7088                           	opt stack 0
  7089  006186                     _Mcu_SetWdgSts:
  7090                           	opt stack 16
  7091                           
  7092                           ;incstack = 0
  7093                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7094  006186  0100               	movlb	0	; () banked
  7095  006188  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7096                           
  7097                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7098  00618A  0100               	movlb	0	; () banked
  7099  00618C  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7100  00618E  D002               	bra	u13115
  7101  006190  90C0               	bcf	4032,0,c	;volatile
  7102  006192  D001               	bra	u13116
  7103  006194                     u13115:
  7104  006194  80C0               	bsf	4032,0,c	;volatile
  7105  006196                     u13116:
  7106  006196  0012               	return		;funcret
  7107  006198                     __end_of_Mcu_SetWdgSts:
  7108                           	opt stack 0
  7109                           tosu	equ	0xFFF
  7110                           tosh	equ	0xFFE
  7111                           tosl	equ	0xFFD
  7112                           pclath	equ	0xFFA
  7113                           tblptru	equ	0xFF8
  7114                           tblptrh	equ	0xFF7
  7115                           tblptrl	equ	0xFF6
  7116                           tablat	equ	0xFF5
  7117                           prodh	equ	0xFF4
  7118                           prodl	equ	0xFF3
  7119                           intcon	equ	0xFF2
  7120                           intcon2	equ	0xFF1
  7121                           intcon3	equ	0xFF0
  7122                           postinc0	equ	0xFEE
  7123                           plusw0	equ	0xFEB
  7124                           wreg	equ	0xFE8
  7125                           postinc1	equ	0xFE6
  7126                           postdec1	equ	0xFE5
  7127                           plusw1	equ	0xFE3
  7128                           fsr1h	equ	0xFE2
  7129                           fsr1l	equ	0xFE1
  7130                           indf2	equ	0xFDF
  7131                           postinc2	equ	0xFDE
  7132                           postdec2	equ	0xFDD
  7133                           plusw2	equ	0xFDB
  7134                           fsr2h	equ	0xFDA
  7135                           fsr2l	equ	0xFD9
  7136                           status	equ	0xFD8
  7137                           
  7138 ;; *************** function _Mcu_ClearWdg *****************
  7139 ;; Defined at:
  7140 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;		None
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;		None
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  1    wreg      void 
  7147 ;; Registers used:
  7148 ;;		None
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7158 ;;Total ram usage:        0 bytes
  7159 ;; Hardware stack levels used:    1
  7160 ;; Hardware stack levels required when called:   11
  7161 ;; This function calls:
  7162 ;;		Nothing
  7163 ;; This function is called by:
  7164 ;;		_Wdg_MainTask
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           	psect	text27
  7169  00627A                     __ptext27:
  7170                           	opt stack 0
  7171  00627A                     _Mcu_ClearWdg:
  7172                           	opt stack 16
  7173                           
  7174                           ;incstack = 0
  7175  00627A  0004               	clrwdt		;# 
  7176  00627C  0012               	return		;funcret
  7177  00627E                     __end_of_Mcu_ClearWdg:
  7178                           	opt stack 0
  7179                           tosu	equ	0xFFF
  7180                           tosh	equ	0xFFE
  7181                           tosl	equ	0xFFD
  7182                           pclath	equ	0xFFA
  7183                           tblptru	equ	0xFF8
  7184                           tblptrh	equ	0xFF7
  7185                           tblptrl	equ	0xFF6
  7186                           tablat	equ	0xFF5
  7187                           prodh	equ	0xFF4
  7188                           prodl	equ	0xFF3
  7189                           intcon	equ	0xFF2
  7190                           intcon2	equ	0xFF1
  7191                           intcon3	equ	0xFF0
  7192                           postinc0	equ	0xFEE
  7193                           plusw0	equ	0xFEB
  7194                           wreg	equ	0xFE8
  7195                           postinc1	equ	0xFE6
  7196                           postdec1	equ	0xFE5
  7197                           plusw1	equ	0xFE3
  7198                           fsr1h	equ	0xFE2
  7199                           fsr1l	equ	0xFE1
  7200                           indf2	equ	0xFDF
  7201                           postinc2	equ	0xFDE
  7202                           postdec2	equ	0xFDD
  7203                           plusw2	equ	0xFDB
  7204                           fsr2h	equ	0xFDA
  7205                           fsr2l	equ	0xFD9
  7206                           status	equ	0xFD8
  7207                           
  7208 ;; *************** function _USBDeviceTasks *****************
  7209 ;; Defined at:
  7210 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;		None
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;  i               1   56[BANK0 ] unsigned char 
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  1    wreg      void 
  7217 ;; Registers used:
  7218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7227 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7228 ;;Total ram usage:        1 bytes
  7229 ;; Hardware stack levels used:    1
  7230 ;; Hardware stack levels required when called:   19
  7231 ;; This function calls:
  7232 ;;		_USBCtrlEPAllowStatusStage
  7233 ;;		_USBCtrlEPService
  7234 ;;		_USBDeviceInit
  7235 ;;		_USBIncrement1msInternalTimers
  7236 ;;		_USBStallHandler
  7237 ;;		_USBSuspend
  7238 ;;		_USBWakeFromSuspend
  7239 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7240 ;; This function is called by:
  7241 ;;		_UsbDevice_MainTask
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text28
  7246  001D32                     __ptext28:
  7247                           	opt stack 0
  7248  001D32                     _USBDeviceTasks:
  7249                           	opt stack 8
  7250                           
  7251                           ;usb_device.c: 562: }
  7252                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7253                           
  7254                           ; BSR set to: 0
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;usb_device.c: 561: return;
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7261                           
  7262                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7263                           
  7264                           ;usb_device.c: 529: UIE = 0;
  7265                           
  7266                           ;usb_device.c: 524: {
  7267                           ;usb_device.c: 526: UCON = 0;
  7268                           
  7269                           ;usb_device.c: 497: uint8_t i;
  7270                           ;usb_device.c: 523: if (1 != 1)
  7271                           
  7272                           ;incstack = 0
  7273  001D32  0100               	movlb	0	; () banked
  7274  001D34  51D0               	movf	_USBDeviceState& (0+255),w,b
  7275  001D36  A4D8               	btfss	status,2,c
  7276  001D38  D012               	goto	l1612
  7277                           
  7278                           ; BSR set to: 0
  7279                           ;usb_device.c: 585: {
  7280                           ;usb_device.c: 587: UCON = 0;
  7281  001D3A  0E00               	movlw	0
  7282  001D3C  6E65               	movwf	3941,c	;volatile
  7283                           
  7284                           ;usb_device.c: 590: UIE = 0;
  7285  001D3E  0E00               	movlw	0
  7286  001D40  010F               	movlb	15	; () banked
  7287  001D42  6F36               	movwf	54,b	;volatile
  7288                           
  7289                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7290  001D44  0E16               	movlw	22
  7291  001D46  6F39               	movwf	57,b	;volatile
  7292  001D48  0E9F               	movlw	159
  7293  001D4A  6F37               	movwf	55,b	;volatile
  7294  001D4C  0E7B               	movlw	123
  7295  001D4E  6F36               	movwf	54,b	;volatile
  7296                           
  7297                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7298  001D50  D001               	goto	l1613
  7299  001D52                     l1614:
  7300  001D52  8665               	bsf	3941,3,c	;volatile
  7301  001D54                     l1613:
  7302  001D54  A665               	btfss	3941,3,c	;volatile
  7303  001D56  D7FD               	goto	l1614
  7304                           
  7305                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7306  001D58  0E01               	movlw	1
  7307  001D5A  0100               	movlb	0	; () banked
  7308  001D5C  6FD0               	movwf	_USBDeviceState& (0+255),b
  7309  001D5E                     l1612:
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;usb_device.c: 605: }
  7313                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7314                           
  7315                           ; BSR set to: 0
  7316  001D5E  05D0               	decf	_USBDeviceState& (0+255),w,b
  7317  001D60  B4D8               	btfsc	status,2,c
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;usb_device.c: 609: {
  7321                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7322  001D62  BA65               	btfsc	3941,5,c	;volatile
  7323  001D64  D00A               	goto	l1617
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;usb_device.c: 620: {
  7327                           ;usb_device.c: 626: {UIR = 0;};
  7328  001D66  0E00               	movlw	0
  7329  001D68  6E62               	movwf	3938,c	;volatile
  7330                           
  7331                           ;usb_device.c: 630: UIE=0;
  7332  001D6A  0E00               	movlw	0
  7333  001D6C  010F               	movlb	15	; () banked
  7334  001D6E  6F36               	movwf	54,b	;volatile
  7335                           
  7336                           ; BSR set to: 15
  7337                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7338  001D70  8136               	bsf	54,0,b	;volatile
  7339                           
  7340                           ; BSR set to: 15
  7341                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7342  001D72  8936               	bsf	54,4,b	;volatile
  7343                           
  7344                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7345  001D74  0E02               	movlw	2
  7346  001D76  0100               	movlb	0	; () banked
  7347  001D78  6FD0               	movwf	_USBDeviceState& (0+255),b
  7348  001D7A                     l1617:
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;usb_device.c: 635: }
  7352                           ;usb_device.c: 636: }
  7353                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7354                           
  7355                           ; BSR set to: 0
  7356                           
  7357                           ; BSR set to: 0
  7358  001D7A  A462               	btfss	3938,2,c	;volatile
  7359  001D7C  D006               	goto	l1618
  7360                           
  7361                           ; BSR set to: 0
  7362  001D7E  010F               	movlb	15	; () banked
  7363  001D80  A536               	btfss	54,2,b	;volatile
  7364  001D82  D003               	goto	l1618
  7365                           
  7366                           ; BSR set to: 15
  7367                           ;usb_device.c: 653: {
  7368                           ;usb_device.c: 654: (UIR &= 0xFB);
  7369  001D84  9462               	bcf	3938,2,c	;volatile
  7370                           
  7371                           ; BSR set to: 15
  7372                           ;usb_device.c: 658: USBWakeFromSuspend();
  7373  001D86  EC6D  F02D         	call	_USBWakeFromSuspend	;wreg free
  7374  001D8A                     l1618:
  7375                           
  7376                           ;usb_device.c: 660: }
  7377                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7378  001D8A  A265               	btfss	3941,1,c	;volatile
  7379  001D8C  D002               	goto	l1619
  7380                           
  7381                           ;usb_device.c: 666: {
  7382                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7383  001D8E  98A1               	bcf	4001,4,c	;volatile
  7384                           
  7385                           ;usb_device.c: 668: return;
  7386  001D90  0012               	return	
  7387  001D92                     l1619:
  7388                           
  7389                           ;usb_device.c: 669: }
  7390                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7391  001D92  A062               	btfss	3938,0,c	;volatile
  7392  001D94  D009               	goto	l1620
  7393  001D96  010F               	movlb	15	; () banked
  7394  001D98  A136               	btfss	54,0,b	;volatile
  7395  001D9A  D006               	goto	l1620
  7396                           
  7397                           ; BSR set to: 15
  7398                           ;usb_device.c: 682: {
  7399                           ;usb_device.c: 683: USBDeviceInit();
  7400  001D9C  ECD7  F012         	call	_USBDeviceInit	;wreg free
  7401                           
  7402                           ;usb_device.c: 687: ;
  7403                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7404  001DA0  0E04               	movlw	4
  7405  001DA2  0100               	movlb	0	; () banked
  7406  001DA4  6FD0               	movwf	_USBDeviceState& (0+255),b
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;usb_device.c: 699: (UIR &= 0xFE);
  7410  001DA6  9062               	bcf	3938,0,c	;volatile
  7411  001DA8                     l1620:
  7412                           
  7413                           ;usb_device.c: 700: }
  7414                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7415                           
  7416                           ; BSR set to: 0
  7417  001DA8  A862               	btfss	3938,4,c	;volatile
  7418  001DAA  D004               	goto	l1621
  7419  001DAC  010F               	movlb	15	; () banked
  7420  001DAE  B936               	btfsc	54,4,b	;volatile
  7421                           
  7422                           ; BSR set to: 15
  7423                           ;usb_device.c: 706: {
  7424                           ;usb_device.c: 712: USBSuspend();
  7425  001DB0  EC14  F02E         	call	_USBSuspend	;wreg free
  7426  001DB4                     l1621:
  7427                           
  7428                           ;usb_device.c: 714: }
  7429                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7430  001DB4  AC62               	btfss	3938,6,c	;volatile
  7431  001DB6  D01C               	goto	l1625
  7432                           
  7433                           ;usb_device.c: 727: {
  7434                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7435  001DB8  010F               	movlb	15	; () banked
  7436  001DBA  AD36               	btfss	54,6,b	;volatile
  7437  001DBC  D00F               	goto	l1623
  7438                           
  7439                           ; BSR set to: 15
  7440                           ;usb_device.c: 730: {
  7441                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7442  001DBE  0E00               	movlw	0
  7443  001DC0  0100               	movlb	0	; () banked
  7444  001DC2  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7445  001DC4  0E73               	movlw	115
  7446  001DC6  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7447  001DC8  0E00               	movlw	0
  7448  001DCA  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7449  001DCC  0E00               	movlw	0
  7450  001DCE  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7451  001DD0  0E00               	movlw	0
  7452  001DD2  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7453  001DD4  0E01               	movlw	1
  7454  001DD6  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7455  001DD8  EC81  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7456  001DDC                     l1623:
  7457                           
  7458                           ;usb_device.c: 732: }
  7459                           ;usb_device.c: 733: (UIR &= 0xBF);
  7460  001DDC  9C62               	bcf	3938,6,c	;volatile
  7461                           
  7462                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7463  001DDE  EC94  F02F         	call	_USBIncrement1msInternalTimers	;wreg free
  7464                           
  7465                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7466  001DE2  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7467  001DE4  A4D8               	btfss	status,2,c
  7468                           
  7469                           ;usb_device.c: 754: {
  7470                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7471  001DE6  0629               	decf	_USBStatusStageTimeoutCounter,f,c
  7472                           
  7473                           ;usb_device.c: 756: }
  7474                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7475  001DE8  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7476  001DEA  B4D8               	btfsc	status,2,c
  7477                           
  7478                           ;usb_device.c: 763: {
  7479                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7480  001DEC  EC29  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7481  001DF0                     l1625:
  7482                           
  7483                           ;usb_device.c: 765: }
  7484                           ;usb_device.c: 767: }
  7485                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7486  001DF0  AA62               	btfss	3938,5,c	;volatile
  7487  001DF2  D004               	goto	l1626
  7488  001DF4  010F               	movlb	15	; () banked
  7489  001DF6  BB36               	btfsc	54,5,b	;volatile
  7490                           
  7491                           ; BSR set to: 15
  7492                           ;usb_device.c: 770: {
  7493                           ;usb_device.c: 771: USBStallHandler();
  7494  001DF8  ECE7  F02B         	call	_USBStallHandler	;wreg free
  7495  001DFC                     l1626:
  7496                           
  7497                           ;usb_device.c: 772: }
  7498                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7499  001DFC  A262               	btfss	3938,1,c	;volatile
  7500  001DFE  D013               	goto	l1627
  7501  001E00  010F               	movlb	15	; () banked
  7502  001E02  A336               	btfss	54,1,b	;volatile
  7503  001E04  D010               	goto	l1627
  7504                           
  7505                           ; BSR set to: 15
  7506                           ;usb_device.c: 775: {
  7507                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7508  001E06  0E7F               	movlw	127
  7509  001E08  0100               	movlb	0	; () banked
  7510  001E0A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7511  001E0C  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7512  001E0E  0E00               	movlw	0
  7513  001E10  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7514  001E12  0E00               	movlw	0
  7515  001E14  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7516  001E16  0E00               	movlw	0
  7517  001E18  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7518  001E1A  0E01               	movlw	1
  7519  001E1C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7520  001E1E  EC81  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7521                           
  7522                           ;usb_device.c: 777: {UEIR = 0;};
  7523  001E22  0E00               	movlw	0
  7524  001E24  6E63               	movwf	3939,c	;volatile
  7525  001E26                     l1627:
  7526                           
  7527                           ;usb_device.c: 785: }
  7528                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7529  001E26  0E04               	movlw	4
  7530  001E28  0100               	movlb	0	; () banked
  7531  001E2A  61D0               	cpfslt	_USBDeviceState& (0+255),b
  7532  001E2C  D002               	goto	l1628
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;usb_device.c: 793: {
  7536                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7537  001E2E  98A1               	bcf	4001,4,c	;volatile
  7538                           
  7539                           ;usb_device.c: 795: return;
  7540  001E30  0012               	return	
  7541  001E32                     l1628:
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;usb_device.c: 796: }
  7545                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7546  001E32  010F               	movlb	15	; () banked
  7547  001E34  A736               	btfss	54,3,b	;volatile
  7548  001E36  D03E               	goto	u14110
  7549                           
  7550                           ; BSR set to: 15
  7551                           ;usb_device.c: 802: {
  7552                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7553  001E38  0E00               	movlw	0
  7554  001E3A  0100               	movlb	0	; () banked
  7555  001E3C  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7556  001E3E                     l14487:
  7557                           
  7558                           ; BSR set to: 0
  7559  001E3E  0E03               	movlw	3
  7560  001E40  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7561  001E42  D001               	goto	l1630
  7562  001E44  D037               	goto	u14110
  7563  001E46                     l1630:
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;usb_device.c: 804: {
  7567                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7568  001E46  A662               	btfss	3938,3,c	;volatile
  7569  001E48  D035               	goto	u14110
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;usb_device.c: 806: {
  7573                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7574  001E4A  CF64 F0D7          	movff	3940,_USTATcopy	;volatile
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7578  001E4E  31D7               	rrcf	_USTATcopy& (0+255),w,b
  7579  001E50  32E8               	rrcf	wreg,f,c
  7580  001E52  32E8               	rrcf	wreg,f,c
  7581  001E54  0B0F               	andlw	15
  7582  001E56  6FCD               	movwf	_endpoint_number& (0+255),b
  7583                           
  7584                           ; BSR set to: 0
  7585                           ;usb_device.c: 811: (UIR &= 0xF7);
  7586  001E58  9662               	bcf	3938,3,c	;volatile
  7587                           
  7588                           ; BSR set to: 0
  7589                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7590  001E5A  B5D7               	btfsc	_USTATcopy& (0+255),2,b
  7591  001E5C  D007               	goto	l1633
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;usb_device.c: 817: {
  7595                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7596  001E5E  51CD               	movf	_endpoint_number& (0+255),w,b
  7597  001E60  0D01               	mullw	1
  7598  001E62  0ECF               	movlw	low _ep_data_out
  7599  001E64  24F3               	addwf	prodl,w,c
  7600  001E66  6ED9               	movwf	fsr2l,c
  7601  001E68  0E02               	movlw	high _ep_data_out
  7602  001E6A  D007               	goto	L3
  7603  001E6C                     l1633:
  7604                           
  7605                           ;usb_device.c: 820: else
  7606                           ;usb_device.c: 821: {
  7607                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7608                           
  7609                           ; BSR set to: 2
  7610  001E6C  0100               	movlb	0	; () banked
  7611  001E6E  51CD               	movf	_endpoint_number& (0+255),w,b
  7612  001E70  0D01               	mullw	1
  7613  001E72  0ED2               	movlw	low _ep_data_in
  7614  001E74  24F3               	addwf	prodl,w,c
  7615  001E76  6ED9               	movwf	fsr2l,c
  7616  001E78  0E02               	movlw	high _ep_data_in
  7617  001E7A                     L3:
  7618  001E7A  20F4               	addwfc	prodh,w,c
  7619  001E7C  6EDA               	movwf	fsr2h,c
  7620  001E7E  0102               	movlb	2	; () banked
  7621  001E80  70DF               	btg	indf2,0,c
  7622                           
  7623                           ; BSR set to: 2
  7624                           ;usb_device.c: 823: }
  7625                           ;usb_device.c: 828: if(endpoint_number == 0)
  7626                           
  7627                           ; BSR set to: 2
  7628  001E82  0100               	movlb	0	; () banked
  7629  001E84  51CD               	movf	_endpoint_number& (0+255),w,b
  7630  001E86  A4D8               	btfss	status,2,c
  7631  001E88  D003               	goto	l1635
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;usb_device.c: 829: {
  7635                           ;usb_device.c: 830: USBCtrlEPService();
  7636  001E8A  EC67  F024         	call	_USBCtrlEPService	;wreg free
  7637                           
  7638                           ;usb_device.c: 831: }
  7639  001E8E  D00F               	goto	l1637
  7640  001E90                     l1635:
  7641                           
  7642                           ;usb_device.c: 832: else
  7643                           ;usb_device.c: 833: {
  7644                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7645  001E90  0E00               	movlw	0
  7646  001E92  0100               	movlb	0	; () banked
  7647  001E94  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7648  001E96  0E72               	movlw	114
  7649  001E98  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7650  001E9A  0ED7               	movlw	low _USTATcopy
  7651  001E9C  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7652  001E9E  0E00               	movlw	high _USTATcopy
  7653  001EA0  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7654  001EA2  0E00               	movlw	0
  7655  001EA4  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7656  001EA6  0E00               	movlw	0
  7657  001EA8  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7658  001EAA  EC81  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7659  001EAE                     l1637:
  7660  001EAE  0100               	movlb	0	; () banked
  7661  001EB0  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7662  001EB2  D7C5               	goto	l14487
  7663  001EB4                     u14110:
  7664                           
  7665                           ;usb_device.c: 840: }
  7666                           ;usb_device.c: 841: }
  7667                           ;usb_device.c: 842: }
  7668                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7669                           
  7670                           ; BSR set to: 0
  7671  001EB4  98A1               	bcf	4001,4,c	;volatile
  7672  001EB6  0012               	return		;funcret
  7673  001EB8                     __end_of_USBDeviceTasks:
  7674                           	opt stack 0
  7675                           tosu	equ	0xFFF
  7676                           tosh	equ	0xFFE
  7677                           tosl	equ	0xFFD
  7678                           pclath	equ	0xFFA
  7679                           tblptru	equ	0xFF8
  7680                           tblptrh	equ	0xFF7
  7681                           tblptrl	equ	0xFF6
  7682                           tablat	equ	0xFF5
  7683                           prodh	equ	0xFF4
  7684                           prodl	equ	0xFF3
  7685                           intcon	equ	0xFF2
  7686                           intcon2	equ	0xFF1
  7687                           intcon3	equ	0xFF0
  7688                           postinc0	equ	0xFEE
  7689                           plusw0	equ	0xFEB
  7690                           wreg	equ	0xFE8
  7691                           postinc1	equ	0xFE6
  7692                           postdec1	equ	0xFE5
  7693                           plusw1	equ	0xFE3
  7694                           fsr1h	equ	0xFE2
  7695                           fsr1l	equ	0xFE1
  7696                           indf2	equ	0xFDF
  7697                           postinc2	equ	0xFDE
  7698                           postdec2	equ	0xFDD
  7699                           plusw2	equ	0xFDB
  7700                           fsr2h	equ	0xFDA
  7701                           fsr2l	equ	0xFD9
  7702                           status	equ	0xFD8
  7703                           
  7704 ;; *************** function _USBWakeFromSuspend *****************
  7705 ;; Defined at:
  7706 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;		None
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;		None
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1    wreg      void 
  7713 ;; Registers used:
  7714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7724 ;;Total ram usage:        0 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:   15
  7727 ;; This function calls:
  7728 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7729 ;; This function is called by:
  7730 ;;		_USBDeviceTasks
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text29
  7735  005ADA                     __ptext29:
  7736                           	opt stack 0
  7737  005ADA                     _USBWakeFromSuspend:
  7738                           	opt stack 11
  7739                           
  7740                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7741                           
  7742                           ;incstack = 0
  7743  005ADA  0E00               	movlw	0
  7744  005ADC  0101               	movlb	1	; () banked
  7745  005ADE  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  7746                           
  7747                           ; BSR set to: 1
  7748                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7749  005AE0  0E00               	movlw	0
  7750  005AE2  0100               	movlb	0	; () banked
  7751  005AE4  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7752  005AE6  0E74               	movlw	116
  7753  005AE8  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7754  005AEA  0E00               	movlw	0
  7755  005AEC  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7756  005AEE  0E00               	movlw	0
  7757  005AF0  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7758  005AF2  0E00               	movlw	0
  7759  005AF4  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7760  005AF6  0E00               	movlw	0
  7761  005AF8  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7762  005AFA  EC81  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7763                           
  7764                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7765  005AFE  9265               	bcf	3941,1,c	;volatile
  7766                           
  7767                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7768  005B00  010F               	movlb	15	; () banked
  7769  005B02  9536               	bcf	54,2,b	;volatile
  7770                           
  7771                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7772  005B04  D001               	goto	l1765
  7773  005B06                     
  7774                           ;usb_device.c: 2361: {
  7775                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7776                           
  7777                           ; BSR set to: 15
  7778  005B06  9462               	bcf	3938,2,c	;volatile
  7779  005B08                     l1765:
  7780  005B08  B462               	btfsc	3938,2,c	;volatile
  7781  005B0A  D7FD               	goto	l1766
  7782                           
  7783                           ;usb_device.c: 2363: }
  7784                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7785  005B0C  0E00               	movlw	0
  7786  005B0E  0101               	movlb	1	; () banked
  7787  005B10  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7788                           
  7789                           ; BSR set to: 1
  7790  005B12  0012               	return		;funcret
  7791  005B14                     __end_of_USBWakeFromSuspend:
  7792                           	opt stack 0
  7793                           tosu	equ	0xFFF
  7794                           tosh	equ	0xFFE
  7795                           tosl	equ	0xFFD
  7796                           pclath	equ	0xFFA
  7797                           tblptru	equ	0xFF8
  7798                           tblptrh	equ	0xFF7
  7799                           tblptrl	equ	0xFF6
  7800                           tablat	equ	0xFF5
  7801                           prodh	equ	0xFF4
  7802                           prodl	equ	0xFF3
  7803                           intcon	equ	0xFF2
  7804                           intcon2	equ	0xFF1
  7805                           intcon3	equ	0xFF0
  7806                           postinc0	equ	0xFEE
  7807                           plusw0	equ	0xFEB
  7808                           wreg	equ	0xFE8
  7809                           postinc1	equ	0xFE6
  7810                           postdec1	equ	0xFE5
  7811                           plusw1	equ	0xFE3
  7812                           fsr1h	equ	0xFE2
  7813                           fsr1l	equ	0xFE1
  7814                           indf2	equ	0xFDF
  7815                           postinc2	equ	0xFDE
  7816                           postdec2	equ	0xFDD
  7817                           plusw2	equ	0xFDB
  7818                           fsr2h	equ	0xFDA
  7819                           fsr2l	equ	0xFD9
  7820                           status	equ	0xFD8
  7821                           
  7822 ;; *************** function _USBSuspend *****************
  7823 ;; Defined at:
  7824 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;		None
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;		None
  7829 ;; Return value:  Size  Location     Type
  7830 ;;                  1    wreg      void 
  7831 ;; Registers used:
  7832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7842 ;;Total ram usage:        0 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; Hardware stack levels required when called:   15
  7845 ;; This function calls:
  7846 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7847 ;; This function is called by:
  7848 ;;		_USBDeviceTasks
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           	psect	text30
  7853  005C28                     __ptext30:
  7854                           	opt stack 0
  7855  005C28                     _USBSuspend:
  7856                           	opt stack 11
  7857                           
  7858                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7859                           
  7860                           ; BSR set to: 1
  7861                           ;incstack = 0
  7862  005C28  010F               	movlb	15	; () banked
  7863  005C2A  8536               	bsf	54,2,b	;volatile
  7864                           
  7865                           ; BSR set to: 15
  7866                           ;usb_device.c: 2289: (UIR &= 0xEF);
  7867  005C2C  9862               	bcf	3938,4,c	;volatile
  7868                           
  7869                           ; BSR set to: 15
  7870                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  7871  005C2E  8265               	bsf	3941,1,c	;volatile
  7872                           
  7873                           ; BSR set to: 15
  7874                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  7875  005C30  0E01               	movlw	1
  7876  005C32  0101               	movlb	1	; () banked
  7877  005C34  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  7878                           
  7879                           ; BSR set to: 1
  7880                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  7881  005C36  0E00               	movlw	0
  7882  005C38  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7883                           
  7884                           ; BSR set to: 1
  7885                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7886  005C3A  0E00               	movlw	0
  7887  005C3C  0100               	movlb	0	; () banked
  7888  005C3E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7889  005C40  0E75               	movlw	117
  7890  005C42  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7891  005C44  0E00               	movlw	0
  7892  005C46  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7893  005C48  0E00               	movlw	0
  7894  005C4A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7895  005C4C  0E00               	movlw	0
  7896  005C4E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7897  005C50  0E00               	movlw	0
  7898  005C52  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7899  005C54  EC81  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7900  005C58  0012               	return		;funcret
  7901  005C5A                     __end_of_USBSuspend:
  7902                           	opt stack 0
  7903                           tosu	equ	0xFFF
  7904                           tosh	equ	0xFFE
  7905                           tosl	equ	0xFFD
  7906                           pclath	equ	0xFFA
  7907                           tblptru	equ	0xFF8
  7908                           tblptrh	equ	0xFF7
  7909                           tblptrl	equ	0xFF6
  7910                           tablat	equ	0xFF5
  7911                           prodh	equ	0xFF4
  7912                           prodl	equ	0xFF3
  7913                           intcon	equ	0xFF2
  7914                           intcon2	equ	0xFF1
  7915                           intcon3	equ	0xFF0
  7916                           postinc0	equ	0xFEE
  7917                           plusw0	equ	0xFEB
  7918                           wreg	equ	0xFE8
  7919                           postinc1	equ	0xFE6
  7920                           postdec1	equ	0xFE5
  7921                           plusw1	equ	0xFE3
  7922                           fsr1h	equ	0xFE2
  7923                           fsr1l	equ	0xFE1
  7924                           indf2	equ	0xFDF
  7925                           postinc2	equ	0xFDE
  7926                           postdec2	equ	0xFDD
  7927                           plusw2	equ	0xFDB
  7928                           fsr2h	equ	0xFDA
  7929                           fsr2l	equ	0xFD9
  7930                           status	equ	0xFD8
  7931                           
  7932 ;; *************** function _USBStallHandler *****************
  7933 ;; Defined at:
  7934 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;		None
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;		None
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  1    wreg      void 
  7941 ;; Registers used:
  7942 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7950 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7951 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7952 ;;Total ram usage:        1 bytes
  7953 ;; Hardware stack levels used:    1
  7954 ;; Hardware stack levels required when called:   11
  7955 ;; This function calls:
  7956 ;;		Nothing
  7957 ;; This function is called by:
  7958 ;;		_USBDeviceTasks
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           	psect	text31
  7963  0057CE                     __ptext31:
  7964                           	opt stack 0
  7965  0057CE                     _USBStallHandler:
  7966                           	opt stack 15
  7967                           
  7968                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  7969                           
  7970                           ;incstack = 0
  7971  0057CE  010F               	movlb	15	; () banked
  7972  0057D0  A126               	btfss	38,0,b	;volatile
  7973  0057D2  D01D               	goto	l1757
  7974                           
  7975                           ; BSR set to: 15
  7976                           ;usb_device.c: 2233: {
  7977                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  7978  0057D4  C0C5  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7979  0057D8  C0C6  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7980  0057DC  0E80               	movlw	128
  7981  0057DE  18DE               	xorwf	postinc2,w,c
  7982  0057E0  A4D8               	btfss	status,2,c
  7983  0057E2  D014               	goto	l1758
  7984                           
  7985                           ; BSR set to: 15
  7986  0057E4  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
  7987  0057E8  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7988  0057EC  0E84               	movlw	132
  7989  0057EE  18DE               	xorwf	postinc2,w,c
  7990  0057F0  A4D8               	btfss	status,2,c
  7991  0057F2  D00C               	goto	l1758
  7992                           
  7993                           ; BSR set to: 15
  7994                           ;usb_device.c: 2236: {
  7995                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7996  0057F4  C0C5  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7997  0057F8  C0C6  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7998  0057FC  0E0C               	movlw	12
  7999  0057FE  6EDF               	movwf	indf2,c
  8000                           
  8001                           ; BSR set to: 15
  8002                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8003  005800  C0C5  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8004  005804  C0C6  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8005  005808  0E00               	movlw	0
  8006  00580A  8EDB               	bsf	plusw2,7,c
  8007  00580C                     l1758:
  8008                           
  8009                           ; BSR set to: 15
  8010                           ;usb_device.c: 2240: }
  8011                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8012                           
  8013                           ; BSR set to: 15
  8014  00580C  9126               	bcf	38,0,b	;volatile
  8015  00580E                     l1757:
  8016                           
  8017                           ; BSR set to: 15
  8018                           ;usb_device.c: 2242: }
  8019                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8020  00580E  9A62               	bcf	3938,5,c	;volatile
  8021                           
  8022                           ; BSR set to: 15
  8023  005810  0012               	return		;funcret
  8024  005812                     __end_of_USBStallHandler:
  8025                           	opt stack 0
  8026                           tosu	equ	0xFFF
  8027                           tosh	equ	0xFFE
  8028                           tosl	equ	0xFFD
  8029                           pclath	equ	0xFFA
  8030                           tblptru	equ	0xFF8
  8031                           tblptrh	equ	0xFF7
  8032                           tblptrl	equ	0xFF6
  8033                           tablat	equ	0xFF5
  8034                           prodh	equ	0xFF4
  8035                           prodl	equ	0xFF3
  8036                           intcon	equ	0xFF2
  8037                           intcon2	equ	0xFF1
  8038                           intcon3	equ	0xFF0
  8039                           postinc0	equ	0xFEE
  8040                           plusw0	equ	0xFEB
  8041                           wreg	equ	0xFE8
  8042                           postinc1	equ	0xFE6
  8043                           postdec1	equ	0xFE5
  8044                           plusw1	equ	0xFE3
  8045                           fsr1h	equ	0xFE2
  8046                           fsr1l	equ	0xFE1
  8047                           indf2	equ	0xFDF
  8048                           postinc2	equ	0xFDE
  8049                           postdec2	equ	0xFDD
  8050                           plusw2	equ	0xFDB
  8051                           fsr2h	equ	0xFDA
  8052                           fsr2l	equ	0xFD9
  8053                           status	equ	0xFD8
  8054                           
  8055 ;; *************** function _USBIncrement1msInternalTimers *****************
  8056 ;; Defined at:
  8057 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;		None
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;		None
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  1    wreg      void 
  8064 ;; Registers used:
  8065 ;;		wreg, status,2, status,0
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8075 ;;Total ram usage:        0 bytes
  8076 ;; Hardware stack levels used:    1
  8077 ;; Hardware stack levels required when called:   11
  8078 ;; This function calls:
  8079 ;;		Nothing
  8080 ;; This function is called by:
  8081 ;;		_USBDeviceTasks
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           	psect	text32
  8086  005F28                     __ptext32:
  8087                           	opt stack 0
  8088  005F28                     _USBIncrement1msInternalTimers:
  8089                           	opt stack 15
  8090                           
  8091                           ;usb_device.c: 3050: USB1msTickCount++;
  8092                           
  8093                           ; BSR set to: 15
  8094                           ;incstack = 0
  8095  005F28  0E01               	movlw	1
  8096  005F2A  0103               	movlb	3	; () banked
  8097  005F2C  2718               	addwf	_USB1msTickCount& (0+255),f,b
  8098  005F2E  0E00               	movlw	0
  8099  005F30  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8100  005F32  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8101  005F34  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8102                           
  8103                           ; BSR set to: 3
  8104                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8105  005F36  0101               	movlb	1	; () banked
  8106  005F38  51E2               	movf	_USBBusIsSuspended& (0+255),w,b
  8107  005F3A  A4D8               	btfss	status,2,c
  8108  005F3C  0012               	return	
  8109                           
  8110                           ; BSR set to: 1
  8111                           ;usb_device.c: 3052: {
  8112                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8113  005F3E  2BE0               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8114                           
  8115                           ; BSR set to: 1
  8116                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8117  005F40  51E0               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8118  005F42  A4D8               	btfss	status,2,c
  8119  005F44  0012               	return	
  8120                           
  8121                           ; BSR set to: 1
  8122                           ;usb_device.c: 3056: {
  8123                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8124  005F46  69E0               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8125                           
  8126                           ; BSR set to: 1
  8127  005F48  0012               	return	
  8128  005F4A                     __end_of_USBIncrement1msInternalTimers:
  8129                           	opt stack 0
  8130                           tosu	equ	0xFFF
  8131                           tosh	equ	0xFFE
  8132                           tosl	equ	0xFFD
  8133                           pclath	equ	0xFFA
  8134                           tblptru	equ	0xFF8
  8135                           tblptrh	equ	0xFF7
  8136                           tblptrl	equ	0xFF6
  8137                           tablat	equ	0xFF5
  8138                           prodh	equ	0xFF4
  8139                           prodl	equ	0xFF3
  8140                           intcon	equ	0xFF2
  8141                           intcon2	equ	0xFF1
  8142                           intcon3	equ	0xFF0
  8143                           postinc0	equ	0xFEE
  8144                           plusw0	equ	0xFEB
  8145                           wreg	equ	0xFE8
  8146                           postinc1	equ	0xFE6
  8147                           postdec1	equ	0xFE5
  8148                           plusw1	equ	0xFE3
  8149                           fsr1h	equ	0xFE2
  8150                           fsr1l	equ	0xFE1
  8151                           indf2	equ	0xFDF
  8152                           postinc2	equ	0xFDE
  8153                           postdec2	equ	0xFDD
  8154                           plusw2	equ	0xFDB
  8155                           fsr2h	equ	0xFDA
  8156                           fsr2l	equ	0xFD9
  8157                           status	equ	0xFD8
  8158                           
  8159 ;; *************** function _USBDeviceInit *****************
  8160 ;; Defined at:
  8161 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;		None
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;  i               1   37[BANK0 ] unsigned char 
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  1    wreg      void 
  8168 ;; Registers used:
  8169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/0
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8176 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8178 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8179 ;;Total ram usage:        1 bytes
  8180 ;; Hardware stack levels used:    1
  8181 ;; Hardware stack levels required when called:   12
  8182 ;; This function calls:
  8183 ;;		_memset
  8184 ;; This function is called by:
  8185 ;;		_USBDeviceTasks
  8186 ;;		_UsbDevice_MainTask
  8187 ;; This function uses a non-reentrant model
  8188 ;;
  8189                           
  8190                           	psect	text33
  8191  0025AE                     __ptext33:
  8192                           	opt stack 0
  8193  0025AE                     _USBDeviceInit:
  8194                           	opt stack 14
  8195                           
  8196                           ;usb_device.c: 297: uint8_t i;
  8197                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8198                           
  8199                           ; BSR set to: 1
  8200                           ;incstack = 0
  8201  0025AE  98A0               	bcf	4000,4,c	;volatile
  8202                           
  8203                           ;usb_device.c: 303: ;
  8204                           ;usb_device.c: 306: {UEIR = 0;};
  8205  0025B0  0E00               	movlw	0
  8206  0025B2  6E63               	movwf	3939,c	;volatile
  8207                           
  8208                           ;usb_device.c: 309: {UIR = 0;};
  8209  0025B4  0E00               	movlw	0
  8210  0025B6  6E62               	movwf	3938,c	;volatile
  8211                           
  8212                           ;usb_device.c: 312: UEP0 = 0;
  8213  0025B8  0E00               	movlw	0
  8214  0025BA  010F               	movlb	15	; () banked
  8215  0025BC  6F26               	movwf	38,b	;volatile
  8216                           
  8217                           ; BSR set to: 15
  8218                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8219  0025BE  0E27               	movlw	39
  8220  0025C0  0100               	movlb	0	; () banked
  8221  0025C2  6F7D               	movwf	memset@p1& (0+255),b
  8222  0025C4  0E0F               	movlw	15
  8223  0025C6  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8224  0025C8  0E00               	movlw	0
  8225  0025CA  6F80               	movwf	(memset@c+1)& (0+255),b
  8226  0025CC  0E00               	movlw	0
  8227  0025CE  6F7F               	movwf	memset@c& (0+255),b
  8228  0025D0  0E00               	movlw	0
  8229  0025D2  6F82               	movwf	(memset@n+1)& (0+255),b
  8230  0025D4  0E02               	movlw	2
  8231  0025D6  6F81               	movwf	memset@n& (0+255),b
  8232  0025D8  EC5E  F02E         	call	_memset	;wreg free
  8233                           
  8234                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8235  0025DC  0E16               	movlw	22
  8236  0025DE  010F               	movlb	15	; () banked
  8237  0025E0  6F39               	movwf	57,b	;volatile
  8238                           
  8239                           ; BSR set to: 15
  8240  0025E2  0E9F               	movlw	159
  8241  0025E4  6F37               	movwf	55,b	;volatile
  8242                           
  8243                           ; BSR set to: 15
  8244  0025E6  0E7B               	movlw	123
  8245  0025E8  6F36               	movwf	54,b	;volatile
  8246                           
  8247                           ; BSR set to: 15
  8248                           ;usb_device.c: 319: ;
  8249                           ;usb_device.c: 322: ;
  8250                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8251  0025EA  0E00               	movlw	0
  8252  0025EC  0100               	movlb	0	; () banked
  8253  0025EE  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8254  0025F0                     l13291:
  8255                           
  8256                           ; BSR set to: 0
  8257  0025F0  0E0B               	movlw	11
  8258  0025F2  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8259  0025F4  D001               	goto	l1601
  8260  0025F6  D00E               	goto	u12420
  8261  0025F8                     l1601:
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;usb_device.c: 326: {
  8265                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8266                           
  8267                           ; BSR set to: 0
  8268  0025F8  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8269  0025FA  0D04               	mullw	4
  8270  0025FC  0E00               	movlw	0
  8271  0025FE  24F3               	addwf	prodl,w,c
  8272  002600  6ED9               	movwf	fsr2l,c
  8273  002602  0E04               	movlw	4
  8274  002604  20F4               	addwfc	prodh,w,c
  8275  002606  6EDA               	movwf	fsr2h,c
  8276  002608  6ADE               	clrf	postinc2,c
  8277  00260A  6ADE               	clrf	postinc2,c
  8278  00260C  6ADE               	clrf	postinc2,c
  8279  00260E  6ADD               	clrf	postdec2,c
  8280                           
  8281                           ; BSR set to: 0
  8282  002610  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8283  002612  D7EE               	goto	l13291
  8284  002614                     u12420:
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;usb_device.c: 328: }
  8288                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8289  002614  8C65               	bsf	3941,6,c	;volatile
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;usb_device.c: 334: UADDR = 0x00;
  8293  002616  0E00               	movlw	0
  8294  002618  010F               	movlb	15	; () banked
  8295  00261A  6F38               	movwf	56,b	;volatile
  8296                           
  8297                           ; BSR set to: 15
  8298                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8299  00261C  9865               	bcf	3941,4,c	;volatile
  8300                           
  8301                           ; BSR set to: 15
  8302                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8303  00261E  9C65               	bcf	3941,6,c	;volatile
  8304  002620                     
  8305                           ;usb_device.c: 344: {
  8306                           ;usb_device.c: 345: (UIR &= 0xF7);
  8307                           
  8308                           ; BSR set to: 15
  8309  002620  9662               	bcf	3938,3,c	;volatile
  8310                           
  8311                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8312  002622  0E00               	movlw	0
  8313  002624  0100               	movlb	0	; () banked
  8314  002626  6FB8               	movwf	(_inPipes+3)& (0+255),b
  8315                           
  8316                           ; BSR set to: 0
  8317                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8318  002628  0E00               	movlw	0
  8319  00262A  0101               	movlb	1	; () banked
  8320  00262C  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8321                           
  8322                           ; BSR set to: 1
  8323                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8324  00262E  0E00               	movlw	0
  8325  002630  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8326  002632  0E00               	movlw	0
  8327  002634  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8328                           
  8329                           ; BSR set to: 1
  8330                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8331  002636  B662               	btfsc	3938,3,c	;volatile
  8332  002638  D7F3               	goto	l1603
  8333                           
  8334                           ; BSR set to: 1
  8335                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8336                           
  8337                           ; BSR set to: 1
  8338  00263A  0E01               	movlw	1
  8339  00263C  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8340                           
  8341                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8342  00263E  0E01               	movlw	1
  8343  002640  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8344                           
  8345                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8346  002642  0E00               	movlw	0
  8347  002644  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8348                           
  8349                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8350  002646  0E00               	movlw	0
  8351  002648  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8352                           
  8353                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8354  00264A  0E00               	movlw	0
  8355  00264C  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8356                           
  8357                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8358  00264E  0E00               	movlw	0
  8359  002650  0100               	movlb	0	; () banked
  8360  002652  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8361  002654                     l13319:
  8362                           
  8363                           ; BSR set to: 0
  8364  002654  0E02               	movlw	2
  8365  002656  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8366  002658  D001               	goto	l1605
  8367  00265A  D02E               	goto	u12450
  8368  00265C                     l1605:
  8369                           
  8370                           ; BSR set to: 0
  8371                           ;usb_device.c: 364: {
  8372                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8373                           
  8374                           ; BSR set to: 0
  8375  00265C  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8376  00265E  0D02               	mullw	2
  8377  002660  0EBB               	movlw	low _pBDTEntryIn
  8378  002662  24F3               	addwf	prodl,w,c
  8379  002664  6ED9               	movwf	fsr2l,c
  8380  002666  0E00               	movlw	high _pBDTEntryIn
  8381  002668  20F4               	addwfc	prodh,w,c
  8382  00266A  6EDA               	movwf	fsr2h,c
  8383  00266C  0E00               	movlw	0
  8384  00266E  6EDE               	movwf	postinc2,c
  8385  002670  0E00               	movlw	0
  8386  002672  6EDD               	movwf	postdec2,c
  8387                           
  8388                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8389  002674  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8390  002676  0D02               	mullw	2
  8391  002678  0E0E               	movlw	low _pBDTEntryOut
  8392  00267A  24F3               	addwf	prodl,w,c
  8393  00267C  6ED9               	movwf	fsr2l,c
  8394  00267E  0E03               	movlw	high _pBDTEntryOut
  8395  002680  20F4               	addwfc	prodh,w,c
  8396  002682  6EDA               	movwf	fsr2h,c
  8397  002684  0E00               	movlw	0
  8398  002686  6EDE               	movwf	postinc2,c
  8399  002688  0E00               	movlw	0
  8400  00268A  6EDD               	movwf	postdec2,c
  8401                           
  8402                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8403  00268C  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8404  00268E  0D01               	mullw	1
  8405  002690  0ED2               	movlw	low _ep_data_in
  8406  002692  24F3               	addwf	prodl,w,c
  8407  002694  6ED9               	movwf	fsr2l,c
  8408  002696  0E02               	movlw	high _ep_data_in
  8409  002698  20F4               	addwfc	prodh,w,c
  8410  00269A  6EDA               	movwf	fsr2h,c
  8411  00269C  0E00               	movlw	0
  8412  00269E  6EDF               	movwf	indf2,c
  8413                           
  8414                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8415  0026A0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8416  0026A2  0D01               	mullw	1
  8417  0026A4  0ECF               	movlw	low _ep_data_out
  8418  0026A6  24F3               	addwf	prodl,w,c
  8419  0026A8  6ED9               	movwf	fsr2l,c
  8420  0026AA  0E02               	movlw	high _ep_data_out
  8421  0026AC  20F4               	addwfc	prodh,w,c
  8422  0026AE  6EDA               	movwf	fsr2h,c
  8423  0026B0  0E00               	movlw	0
  8424  0026B2  6EDF               	movwf	indf2,c
  8425                           
  8426                           ; BSR set to: 0
  8427  0026B4  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8428  0026B6  D7CE               	goto	l13319
  8429  0026B8                     u12450:
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;usb_device.c: 369: }
  8433                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8434                           
  8435                           ; BSR set to: 0
  8436  0026B8  0E08               	movlw	8
  8437  0026BA  6FBB               	movwf	_pBDTEntryIn& (0+255),b
  8438  0026BC  0E04               	movlw	4
  8439  0026BE  6FBC               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8440                           
  8441                           ; BSR set to: 0
  8442                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8443  0026C0  0E16               	movlw	22
  8444  0026C2  010F               	movlb	15	; () banked
  8445  0026C4  6F26               	movwf	38,b	;volatile
  8446                           
  8447                           ; BSR set to: 15
  8448                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8449  0026C6  0E04               	movlw	4
  8450  0026C8  0104               	movlb	4	; () banked
  8451  0026CA  6F03               	movwf	3,b	;volatile
  8452  0026CC  0E30               	movlw	48
  8453  0026CE  6F02               	movwf	2,b	;volatile
  8454                           
  8455                           ; BSR set to: 4
  8456                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8457  0026D0  0E08               	movlw	8
  8458  0026D2  6F01               	movwf	1,b	;volatile
  8459                           
  8460                           ; BSR set to: 4
  8461                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8462  0026D4  0E04               	movlw	4
  8463  0026D6  6F00               	movwf	0,b	;volatile
  8464                           
  8465                           ; BSR set to: 4
  8466                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8467  0026D8  8F00               	bsf	0,7,b	;volatile
  8468                           
  8469                           ; BSR set to: 4
  8470                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8471  0026DA  0E00               	movlw	0
  8472  0026DC  0100               	movlb	0	; () banked
  8473  0026DE  6FD8               	movwf	_USBActiveConfiguration& (0+255),b
  8474                           
  8475                           ; BSR set to: 0
  8476                           ;usb_device.c: 384: USB1msTickCount = 0;
  8477  0026E0  0E00               	movlw	0
  8478  0026E2  0103               	movlb	3	; () banked
  8479  0026E4  6F18               	movwf	_USB1msTickCount& (0+255),b
  8480  0026E6  0E00               	movlw	0
  8481  0026E8  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8482  0026EA  0E00               	movlw	0
  8483  0026EC  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8484  0026EE  0E00               	movlw	0
  8485  0026F0  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8486                           
  8487                           ; BSR set to: 3
  8488                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8489  0026F2  0E00               	movlw	0
  8490  0026F4  0101               	movlb	1	; () banked
  8491  0026F6  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8492                           
  8493                           ; BSR set to: 1
  8494                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8495  0026F8  0E00               	movlw	0
  8496  0026FA  0100               	movlb	0	; () banked
  8497  0026FC  6FD0               	movwf	_USBDeviceState& (0+255),b
  8498                           
  8499                           ; BSR set to: 0
  8500  0026FE  0012               	return		;funcret
  8501  002700                     __end_of_USBDeviceInit:
  8502                           	opt stack 0
  8503                           tosu	equ	0xFFF
  8504                           tosh	equ	0xFFE
  8505                           tosl	equ	0xFFD
  8506                           pclath	equ	0xFFA
  8507                           tblptru	equ	0xFF8
  8508                           tblptrh	equ	0xFF7
  8509                           tblptrl	equ	0xFF6
  8510                           tablat	equ	0xFF5
  8511                           prodh	equ	0xFF4
  8512                           prodl	equ	0xFF3
  8513                           intcon	equ	0xFF2
  8514                           intcon2	equ	0xFF1
  8515                           intcon3	equ	0xFF0
  8516                           postinc0	equ	0xFEE
  8517                           plusw0	equ	0xFEB
  8518                           wreg	equ	0xFE8
  8519                           postinc1	equ	0xFE6
  8520                           postdec1	equ	0xFE5
  8521                           plusw1	equ	0xFE3
  8522                           fsr1h	equ	0xFE2
  8523                           fsr1l	equ	0xFE1
  8524                           indf2	equ	0xFDF
  8525                           postinc2	equ	0xFDE
  8526                           postdec2	equ	0xFDD
  8527                           plusw2	equ	0xFDB
  8528                           fsr2h	equ	0xFDA
  8529                           fsr2l	equ	0xFD9
  8530                           status	equ	0xFD8
  8531                           
  8532 ;; *************** function _USBCtrlEPService *****************
  8533 ;; Defined at:
  8534 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;		None
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;		None
  8539 ;; Return value:  Size  Location     Type
  8540 ;;                  1    wreg      void 
  8541 ;; Registers used:
  8542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8543 ;; Tracked objects:
  8544 ;;		On entry : 0/0
  8545 ;;		On exit  : 0/0
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8550 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8551 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8552 ;;Total ram usage:        1 bytes
  8553 ;; Hardware stack levels used:    1
  8554 ;; Hardware stack levels required when called:   18
  8555 ;; This function calls:
  8556 ;;		_USBCtrlTrfInHandler
  8557 ;;		_USBCtrlTrfOutHandler
  8558 ;;		_USBCtrlTrfSetupHandler
  8559 ;;		_memcpy
  8560 ;; This function is called by:
  8561 ;;		_USBDeviceTasks
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text34
  8566  0048CE                     __ptext34:
  8567                           	opt stack 0
  8568  0048CE                     _USBCtrlEPService:
  8569                           	opt stack 8
  8570                           
  8571                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;incstack = 0
  8575  0048CE  0E2D               	movlw	45
  8576  0048D0  6E29               	movwf	_USBStatusStageTimeoutCounter,c
  8577                           
  8578                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8579  0048D2  C0D7  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8580  0048D6  0EFD               	movlw	253
  8581  0048D8  0100               	movlb	0	; () banked
  8582  0048DA  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8583  0048DC  A4D8               	btfss	status,2,c
  8584  0048DE  D038               	goto	l1771
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;usb_device.c: 2401: {
  8588                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8589  0048E0  C0D7  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8590  0048E4  90D8               	bcf	status,0,c
  8591  0048E6  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8592  0048E8  0E3F               	movlw	63
  8593  0048EA  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8594  0048EC  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8595  0048EE  0D04               	mullw	4
  8596  0048F0  0E00               	movlw	0
  8597  0048F2  24F3               	addwf	prodl,w,c
  8598  0048F4  6FC5               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8599  0048F6  0E04               	movlw	4
  8600  0048F8  20F4               	addwfc	prodh,w,c
  8601  0048FA  6FC6               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8605  0048FC  C0C5  F0C3         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8606  004900  C0C6  F0C4         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8610  004904  0E04               	movlw	4
  8611  004906  1BC3               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8615  004908  C0C5  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8616  00490C  C0C6  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8617  004910  30DF               	rrcf	223,w,c
  8618  004912  32E8               	rrcf	wreg,f,c
  8619  004914  0B0F               	andlw	15
  8620  004916  0A0D               	xorlw	13
  8621  004918  A4D8               	btfss	status,2,c
  8622  00491A  D017               	goto	l1772
  8623                           
  8624                           ; BSR set to: 0
  8625                           ;usb_device.c: 2418: {
  8626                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8627  00491C  0E30               	movlw	48
  8628  00491E  6F7D               	movwf	memcpy@d1& (0+255),b
  8629  004920  0E04               	movlw	4
  8630  004922  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8631  004924  EE20 F002          	lfsr	2,2
  8632  004928  51C5               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8633  00492A  26D9               	addwf	fsr2l,f,c
  8634  00492C  51C6               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8635  00492E  22DA               	addwfc	fsr2h,f,c
  8636  004930  CFDE F07F          	movff	postinc2,memcpy@s1
  8637  004934  CFDD F080          	movff	postdec2,memcpy@s1+1
  8638  004938  0E00               	movlw	0
  8639  00493A  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8640  00493C  0E08               	movlw	8
  8641  00493E  6F81               	movwf	memcpy@n& (0+255),b
  8642  004940  ECA0  F02B         	call	_memcpy	;wreg free
  8643                           
  8644                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8645  004944  EC8A  F025         	call	_USBCtrlTrfSetupHandler	;wreg free
  8646                           
  8647                           ;usb_device.c: 2427: }
  8648  004948  0012               	return	
  8649  00494A                     l1772:
  8650                           
  8651                           ;usb_device.c: 2428: else
  8652                           ;usb_device.c: 2429: {
  8653                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8654  00494A  ECEA  F027         	call	_USBCtrlTrfOutHandler	;wreg free
  8655                           
  8656                           ;usb_device.c: 2432: }
  8657                           ;usb_device.c: 2433: }
  8658  00494E  0012               	return	
  8659  004950                     l1771:
  8660                           
  8661                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8662  004950  0100               	movlb	0	; () banked
  8663  004952  51D7               	movf	_USTATcopy& (0+255),w,b
  8664  004954  0BFD               	andlw	253
  8665  004956  0A04               	xorlw	4
  8666  004958  A4D8               	btfss	status,2,c
  8667  00495A  0012               	return	
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;usb_device.c: 2435: {
  8671                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8672  00495C  EC82  F01F         	call	_USBCtrlTrfInHandler	;wreg free
  8673  004960  0012               	return	
  8674  004962                     __end_of_USBCtrlEPService:
  8675                           	opt stack 0
  8676                           tosu	equ	0xFFF
  8677                           tosh	equ	0xFFE
  8678                           tosl	equ	0xFFD
  8679                           pclath	equ	0xFFA
  8680                           tblptru	equ	0xFF8
  8681                           tblptrh	equ	0xFF7
  8682                           tblptrl	equ	0xFF6
  8683                           tablat	equ	0xFF5
  8684                           prodh	equ	0xFF4
  8685                           prodl	equ	0xFF3
  8686                           intcon	equ	0xFF2
  8687                           intcon2	equ	0xFF1
  8688                           intcon3	equ	0xFF0
  8689                           postinc0	equ	0xFEE
  8690                           plusw0	equ	0xFEB
  8691                           wreg	equ	0xFE8
  8692                           postinc1	equ	0xFE6
  8693                           postdec1	equ	0xFE5
  8694                           plusw1	equ	0xFE3
  8695                           fsr1h	equ	0xFE2
  8696                           fsr1l	equ	0xFE1
  8697                           indf2	equ	0xFDF
  8698                           postinc2	equ	0xFDE
  8699                           postdec2	equ	0xFDD
  8700                           plusw2	equ	0xFDB
  8701                           fsr2h	equ	0xFDA
  8702                           fsr2l	equ	0xFD9
  8703                           status	equ	0xFD8
  8704                           
  8705 ;; *************** function _memcpy *****************
  8706 ;; Defined at:
  8707 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;  d1              2   29[BANK0 ] PTR void 
  8710 ;;		 -> SetupPkt(8), 
  8711 ;;  s1              2   31[BANK0 ] PTR const void 
  8712 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8713 ;;  n               2   33[BANK0 ] unsigned int 
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8716 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8717 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8718 ;;		 -> SetupPkt(8), 
  8719 ;;  tmp             1   35[BANK0 ] unsigned char 
  8720 ;; Return value:  Size  Location     Type
  8721 ;;                  2   29[BANK0 ] PTR void 
  8722 ;; Registers used:
  8723 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8724 ;; Tracked objects:
  8725 ;;		On entry : 0/0
  8726 ;;		On exit  : 0/0
  8727 ;;		Unchanged: 0/0
  8728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8729 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8730 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8732 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8733 ;;Total ram usage:       11 bytes
  8734 ;; Hardware stack levels used:    1
  8735 ;; Hardware stack levels required when called:   11
  8736 ;; This function calls:
  8737 ;;		Nothing
  8738 ;; This function is called by:
  8739 ;;		_USBCtrlEPService
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text35
  8744  005740                     __ptext35:
  8745                           	opt stack 0
  8746  005740                     _memcpy:
  8747                           	opt stack 14
  8748                           
  8749                           ;incstack = 0
  8750  005740  C07F  F086         	movff	memcpy@s1,memcpy@s
  8751  005744  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  8752  005748  C07D  F084         	movff	memcpy@d1,memcpy@d
  8753  00574C  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  8754  005750  D011               	goto	l3074
  8755  005752                     l12573:
  8756  005752  C086  FFD9         	movff	memcpy@s,fsr2l
  8757  005756  C087  FFDA         	movff	memcpy@s+1,fsr2h
  8758  00575A  50DF               	movf	indf2,w,c
  8759  00575C  0100               	movlb	0	; () banked
  8760  00575E  6F83               	movwf	memcpy@tmp& (0+255),b
  8761                           
  8762                           ; BSR set to: 0
  8763  005760  4B86               	infsnz	memcpy@s& (0+255),f,b
  8764  005762  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  8765                           
  8766                           ; BSR set to: 0
  8767  005764  C084  FFD9         	movff	memcpy@d,fsr2l
  8768  005768  C085  FFDA         	movff	memcpy@d+1,fsr2h
  8769  00576C  C083  FFDF         	movff	memcpy@tmp,indf2
  8770                           
  8771                           ; BSR set to: 0
  8772  005770  4B84               	infsnz	memcpy@d& (0+255),f,b
  8773  005772  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  8774  005774                     l3074:
  8775                           
  8776                           ; BSR set to: 0
  8777  005774  0100               	movlb	0	; () banked
  8778  005776  0781               	decf	memcpy@n& (0+255),f,b
  8779  005778  A0D8               	btfss	status,0,c
  8780  00577A  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8781  00577C  2981               	incf	memcpy@n& (0+255),w,b
  8782  00577E  E1E9               	bnz	l12573
  8783  005780  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8784  005782  B4D8               	btfsc	status,2,c
  8785  005784  0012               	return	
  8786  005786  D7E5               	goto	l3075
  8787  005788                     __end_of_memcpy:
  8788                           	opt stack 0
  8789                           tosu	equ	0xFFF
  8790                           tosh	equ	0xFFE
  8791                           tosl	equ	0xFFD
  8792                           pclath	equ	0xFFA
  8793                           tblptru	equ	0xFF8
  8794                           tblptrh	equ	0xFF7
  8795                           tblptrl	equ	0xFF6
  8796                           tablat	equ	0xFF5
  8797                           prodh	equ	0xFF4
  8798                           prodl	equ	0xFF3
  8799                           intcon	equ	0xFF2
  8800                           intcon2	equ	0xFF1
  8801                           intcon3	equ	0xFF0
  8802                           postinc0	equ	0xFEE
  8803                           plusw0	equ	0xFEB
  8804                           wreg	equ	0xFE8
  8805                           postinc1	equ	0xFE6
  8806                           postdec1	equ	0xFE5
  8807                           plusw1	equ	0xFE3
  8808                           fsr1h	equ	0xFE2
  8809                           fsr1l	equ	0xFE1
  8810                           indf2	equ	0xFDF
  8811                           postinc2	equ	0xFDE
  8812                           postdec2	equ	0xFDD
  8813                           plusw2	equ	0xFDB
  8814                           fsr2h	equ	0xFDA
  8815                           fsr2l	equ	0xFD9
  8816                           status	equ	0xFD8
  8817                           
  8818 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8819 ;; Defined at:
  8820 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;		None
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;		None
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  1    wreg      void 
  8827 ;; Registers used:
  8828 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8838 ;;Total ram usage:        0 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:   17
  8841 ;; This function calls:
  8842 ;;		_USBCheckStdRequest
  8843 ;;		_USBCtrlEPServiceComplete
  8844 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8845 ;; This function is called by:
  8846 ;;		_USBCtrlEPService
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           	psect	text36
  8851  004B14                     __ptext36:
  8852                           	opt stack 0
  8853  004B14                     _USBCtrlTrfSetupHandler:
  8854                           	opt stack 8
  8855                           
  8856                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;incstack = 0
  8860  004B14  0E00               	movlw	0
  8861  004B16  0100               	movlb	0	; () banked
  8862  004B18  6FCF               	movwf	_shortPacketStatus& (0+255),b
  8863                           
  8864                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  8865  004B1A  0E00               	movlw	0
  8866  004B1C  6FCC               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  8867                           
  8868                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  8869  004B1E  0E00               	movlw	0
  8870  004B20  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8871                           
  8872                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  8873  004B22  0E00               	movlw	0
  8874  004B24  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8875                           
  8876                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  8877  004B26  0E00               	movlw	0
  8878  004B28  0101               	movlb	1	; () banked
  8879  004B2A  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8880                           
  8881                           ;usb_device.c: 2493: controlTransferState = 0;
  8882  004B2C  0E00               	movlw	0
  8883  004B2E  0100               	movlb	0	; () banked
  8884  004B30  6FCE               	movwf	_controlTransferState& (0+255),b
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8888  004B32  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
  8889  004B36  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8890  004B3A  0E7F               	movlw	127
  8891  004B3C  16DF               	andwf	indf2,f,c
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8895  004B3E  0E04               	movlw	4
  8896  004B40  1BBB               	xorwf	_pBDTEntryIn& (0+255),f,b
  8897                           
  8898                           ; BSR set to: 0
  8899                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8900  004B42  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
  8901  004B46  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8902  004B4A  0E7F               	movlw	127
  8903  004B4C  16DF               	andwf	indf2,f,c
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8907  004B4E  0E04               	movlw	4
  8908  004B50  1BBB               	xorwf	_pBDTEntryIn& (0+255),f,b
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8912  004B52  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8913  004B56  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8914  004B5A  0E7F               	movlw	127
  8915  004B5C  16DF               	andwf	indf2,f,c
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  8919  004B5E  0E00               	movlw	0
  8920  004B60  6FB8               	movwf	(_inPipes+3)& (0+255),b
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  8924  004B62  0E00               	movlw	0
  8925  004B64  6FBA               	movwf	(_inPipes+5)& (0+255),b
  8926  004B66  0E00               	movlw	0
  8927  004B68  6FB9               	movwf	(_inPipes+4)& (0+255),b
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  8931  004B6A  0E00               	movlw	0
  8932  004B6C  0101               	movlb	1	; () banked
  8933  004B6E  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8934                           
  8935                           ; BSR set to: 1
  8936                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  8937  004B70  0E00               	movlw	0
  8938  004B72  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8939  004B74  0E00               	movlw	0
  8940  004B76  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8941                           
  8942                           ; BSR set to: 1
  8943                           ;usb_device.c: 2517: USBCheckStdRequest();
  8944  004B78  ECA4  F01A         	call	_USBCheckStdRequest	;wreg free
  8945                           
  8946                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8947  004B7C  0E00               	movlw	0
  8948  004B7E  0100               	movlb	0	; () banked
  8949  004B80  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8950  004B82  0E03               	movlw	3
  8951  004B84  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8952  004B86  0E00               	movlw	0
  8953  004B88  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8954  004B8A  0E00               	movlw	0
  8955  004B8C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8956  004B8E  0E00               	movlw	0
  8957  004B90  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8958  004B92  0E00               	movlw	0
  8959  004B94  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8960  004B96  EC81  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8961                           
  8962                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  8963  004B9A  EC54  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  8964  004B9E  0012               	return		;funcret
  8965  004BA0                     __end_of_USBCtrlTrfSetupHandler:
  8966                           	opt stack 0
  8967                           tosu	equ	0xFFF
  8968                           tosh	equ	0xFFE
  8969                           tosl	equ	0xFFD
  8970                           pclath	equ	0xFFA
  8971                           tblptru	equ	0xFF8
  8972                           tblptrh	equ	0xFF7
  8973                           tblptrl	equ	0xFF6
  8974                           tablat	equ	0xFF5
  8975                           prodh	equ	0xFF4
  8976                           prodl	equ	0xFF3
  8977                           intcon	equ	0xFF2
  8978                           intcon2	equ	0xFF1
  8979                           intcon3	equ	0xFF0
  8980                           postinc0	equ	0xFEE
  8981                           plusw0	equ	0xFEB
  8982                           wreg	equ	0xFE8
  8983                           postinc1	equ	0xFE6
  8984                           postdec1	equ	0xFE5
  8985                           plusw1	equ	0xFE3
  8986                           fsr1h	equ	0xFE2
  8987                           fsr1l	equ	0xFE1
  8988                           indf2	equ	0xFDF
  8989                           postinc2	equ	0xFDE
  8990                           postdec2	equ	0xFDD
  8991                           plusw2	equ	0xFDB
  8992                           fsr2h	equ	0xFDA
  8993                           fsr2l	equ	0xFD9
  8994                           status	equ	0xFD8
  8995                           
  8996 ;; *************** function _USBCtrlEPServiceComplete *****************
  8997 ;; Defined at:
  8998 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;		None
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;		None
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  1    wreg      void 
  9005 ;; Registers used:
  9006 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9016 ;;Total ram usage:        0 bytes
  9017 ;; Hardware stack levels used:    1
  9018 ;; Hardware stack levels required when called:   13
  9019 ;; This function calls:
  9020 ;;		_USBCtrlEPAllowDataStage
  9021 ;;		_USBCtrlEPAllowStatusStage
  9022 ;; This function is called by:
  9023 ;;		_USBCtrlTrfSetupHandler
  9024 ;; This function uses a non-reentrant model
  9025 ;;
  9026                           
  9027                           	psect	text37
  9028  0030A8                     __ptext37:
  9029                           	opt stack 0
  9030  0030A8                     _USBCtrlEPServiceComplete:
  9031                           	opt stack 11
  9032                           
  9033                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9034                           
  9035                           ;incstack = 0
  9036  0030A8  9865               	bcf	3941,4,c	;volatile
  9037                           
  9038                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9039  0030AA  0100               	movlb	0	; () banked
  9040  0030AC  BFB8               	btfsc	(_inPipes+3)& (0+255),7,b
  9041  0030AE  D03B               	goto	l1681
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;usb_device.c: 1647: {
  9045                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9046  0030B0  0101               	movlb	1	; () banked
  9047  0030B2  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9048  0030B4  D00C               	goto	l1682
  9049                           
  9050                           ; BSR set to: 1
  9051                           ;usb_device.c: 1649: {
  9052                           ;usb_device.c: 1650: controlTransferState = 2;
  9053  0030B6  0E02               	movlw	2
  9054  0030B8  0100               	movlb	0	; () banked
  9055  0030BA  6FCE               	movwf	_controlTransferState& (0+255),b
  9056                           
  9057                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9058  0030BC  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9059  0030BE  B4D8               	btfsc	status,2,c
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;usb_device.c: 1662: {
  9063                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9064  0030C0  ECE7  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
  9065                           
  9066                           ;usb_device.c: 1664: }
  9067                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9068  0030C4  0E00               	movlw	0
  9069  0030C6  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9070                           
  9071                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9072  0030C8  0E00               	movlw	0
  9073  0030CA  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9074                           
  9075                           ;usb_device.c: 1670: }
  9076  0030CC  0012               	return	
  9077  0030CE                     l1682:
  9078                           
  9079                           ;usb_device.c: 1671: else
  9080                           ;usb_device.c: 1672: {
  9081                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9082  0030CE  0100               	movlb	0	; () banked
  9083  0030D0  EE20 F001          	lfsr	2,1
  9084  0030D4  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9085  0030D6  26D9               	addwf	fsr2l,f,c
  9086  0030D8  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9087  0030DA  22DA               	addwfc	fsr2h,f,c
  9088  0030DC  0E08               	movlw	8
  9089  0030DE  6EDF               	movwf	indf2,c
  9090                           
  9091                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9092  0030E0  EE20 F002          	lfsr	2,2
  9093  0030E4  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9094  0030E6  26D9               	addwf	fsr2l,f,c
  9095  0030E8  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9096  0030EA  22DA               	addwfc	fsr2h,f,c
  9097  0030EC  0E30               	movlw	48
  9098  0030EE  6EDE               	movwf	postinc2,c
  9099  0030F0  0E04               	movlw	4
  9100  0030F2  6EDD               	movwf	postdec2,c
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9104  0030F4  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9105  0030F8  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9106  0030FC  0E0C               	movlw	12
  9107  0030FE  6EDF               	movwf	indf2,c
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9111  003100  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9112  003104  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9113  003108  0E00               	movlw	0
  9114  00310A  8EDB               	bsf	plusw2,7,c
  9115                           
  9116                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9117  00310C  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
  9118  003110  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9119  003114  0E04               	movlw	4
  9120  003116  6EDF               	movwf	indf2,c
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9124  003118  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
  9125  00311C  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9126  003120  0E00               	movlw	0
  9127  003122  8EDB               	bsf	plusw2,7,c
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;usb_device.c: 1683: }
  9131                           ;usb_device.c: 1684: }
  9132  003124  0012               	return	
  9133  003126                     l1681:
  9134                           
  9135                           ; BSR set to: 0
  9136                           ;usb_device.c: 1685: else
  9137                           ;usb_device.c: 1686: {
  9138                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9139  003126  0104               	movlb	4	; () banked
  9140  003128  AF30               	btfss	48,7,b	;volatile
  9141  00312A  D012               	goto	l1686
  9142                           
  9143                           ; BSR set to: 4
  9144                           ;usb_device.c: 1688: {
  9145                           ;usb_device.c: 1689: controlTransferState = 1;
  9146  00312C  0E01               	movlw	1
  9147  00312E  0100               	movlb	0	; () banked
  9148  003130  6FCE               	movwf	_controlTransferState& (0+255),b
  9149                           
  9150                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9151  003132  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9152  003134  B4D8               	btfsc	status,2,c
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;usb_device.c: 1704: {
  9156                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9157  003136  ECE7  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
  9158                           
  9159                           ;usb_device.c: 1706: }
  9160                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9161  00313A  0E00               	movlw	0
  9162  00313C  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9163                           
  9164                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9165  00313E  0E00               	movlw	0
  9166  003140  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9167                           
  9168                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9169  003142  0100               	movlb	0	; () banked
  9170  003144  51CC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9171  003146  A4D8               	btfss	status,2,c
  9172  003148  0012               	return	
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;usb_device.c: 1731: {
  9176                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9177  00314A  EC29  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9178                           
  9179                           ;usb_device.c: 1733: }
  9180                           ;usb_device.c: 1734: }
  9181  00314E  0012               	return	
  9182  003150                     l1686:
  9183                           
  9184                           ;usb_device.c: 1735: else
  9185                           ;usb_device.c: 1736: {
  9186                           ;usb_device.c: 1747: controlTransferState = 2;
  9187  003150  0E02               	movlw	2
  9188  003152  0100               	movlb	0	; () banked
  9189  003154  6FCE               	movwf	_controlTransferState& (0+255),b
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9193  003156  EE20 F001          	lfsr	2,1
  9194  00315A  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9195  00315C  26D9               	addwf	fsr2l,f,c
  9196  00315E  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9197  003160  22DA               	addwfc	fsr2h,f,c
  9198  003162  0E08               	movlw	8
  9199  003164  6EDF               	movwf	indf2,c
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9203  003166  EE20 F002          	lfsr	2,2
  9204  00316A  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9205  00316C  26D9               	addwf	fsr2l,f,c
  9206  00316E  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9207  003170  22DA               	addwfc	fsr2h,f,c
  9208  003172  0E30               	movlw	48
  9209  003174  6EDE               	movwf	postinc2,c
  9210  003176  0E04               	movlw	4
  9211  003178  6EDD               	movwf	postdec2,c
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9215  00317A  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9216  00317E  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9217  003182  0E04               	movlw	4
  9218  003184  6EDF               	movwf	indf2,c
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9222  003186  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9223  00318A  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9224  00318E  0E00               	movlw	0
  9225  003190  8EDB               	bsf	plusw2,7,c
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9229  003192  0E00               	movlw	0
  9230  003194  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9234  003196  0E00               	movlw	0
  9235  003198  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9236                           
  9237                           ; BSR set to: 0
  9238                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9239  00319A  51CC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9240  00319C  A4D8               	btfss	status,2,c
  9241  00319E  0012               	return	
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;usb_device.c: 1759: {
  9245                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9246  0031A0  EC29  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9247  0031A4  0012               	return	
  9248  0031A6                     __end_of_USBCtrlEPServiceComplete:
  9249                           	opt stack 0
  9250                           tosu	equ	0xFFF
  9251                           tosh	equ	0xFFE
  9252                           tosl	equ	0xFFD
  9253                           pclath	equ	0xFFA
  9254                           tblptru	equ	0xFF8
  9255                           tblptrh	equ	0xFF7
  9256                           tblptrl	equ	0xFF6
  9257                           tablat	equ	0xFF5
  9258                           prodh	equ	0xFF4
  9259                           prodl	equ	0xFF3
  9260                           intcon	equ	0xFF2
  9261                           intcon2	equ	0xFF1
  9262                           intcon3	equ	0xFF0
  9263                           postinc0	equ	0xFEE
  9264                           plusw0	equ	0xFEB
  9265                           wreg	equ	0xFE8
  9266                           postinc1	equ	0xFE6
  9267                           postdec1	equ	0xFE5
  9268                           plusw1	equ	0xFE3
  9269                           fsr1h	equ	0xFE2
  9270                           fsr1l	equ	0xFE1
  9271                           indf2	equ	0xFDF
  9272                           postinc2	equ	0xFDE
  9273                           postdec2	equ	0xFDD
  9274                           plusw2	equ	0xFDB
  9275                           fsr2h	equ	0xFDA
  9276                           fsr2l	equ	0xFD9
  9277                           status	equ	0xFD8
  9278                           
  9279 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9280 ;; Defined at:
  9281 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9282 ;; Parameters:    Size  Location     Type
  9283 ;;		None
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;		None
  9286 ;; Return value:  Size  Location     Type
  9287 ;;                  1    wreg      void 
  9288 ;; Registers used:
  9289 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9290 ;; Tracked objects:
  9291 ;;		On entry : 0/0
  9292 ;;		On exit  : 0/0
  9293 ;;		Unchanged: 0/0
  9294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9299 ;;Total ram usage:        0 bytes
  9300 ;; Hardware stack levels used:    1
  9301 ;; Hardware stack levels required when called:   12
  9302 ;; This function calls:
  9303 ;;		_USBCtrlTrfTxService
  9304 ;; This function is called by:
  9305 ;;		_USBCtrlEPServiceComplete
  9306 ;; This function uses a non-reentrant model
  9307 ;;
  9308                           
  9309                           	psect	text38
  9310  0045CE                     __ptext38:
  9311                           	opt stack 0
  9312  0045CE                     _USBCtrlEPAllowDataStage:
  9313                           	opt stack 11
  9314                           
  9315                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9316                           
  9317                           ;incstack = 0
  9318  0045CE  0E00               	movlw	0
  9319  0045D0  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9320                           
  9321                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9322  0045D2  0E00               	movlw	0
  9323  0045D4  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9324                           
  9325                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9326  0045D6  0E02               	movlw	2
  9327  0045D8  0100               	movlb	0	; () banked
  9328  0045DA  19CE               	xorwf	_controlTransferState& (0+255),w,b
  9329  0045DC  A4D8               	btfss	status,2,c
  9330  0045DE  D01F               	goto	l1670
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;usb_device.c: 1512: {
  9334                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9335  0045E0  EE20 F001          	lfsr	2,1
  9336  0045E4  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9337  0045E6  26D9               	addwf	fsr2l,f,c
  9338  0045E8  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9339  0045EA  22DA               	addwfc	fsr2h,f,c
  9340  0045EC  0E08               	movlw	8
  9341  0045EE  6EDF               	movwf	indf2,c
  9342                           
  9343                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9344  0045F0  EE20 F002          	lfsr	2,2
  9345  0045F4  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9346  0045F6  26D9               	addwf	fsr2l,f,c
  9347  0045F8  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9348  0045FA  22DA               	addwfc	fsr2h,f,c
  9349  0045FC  0E38               	movlw	56
  9350  0045FE  6EDE               	movwf	postinc2,c
  9351  004600  0E04               	movlw	4
  9352  004602  6EDD               	movwf	postdec2,c
  9353                           
  9354                           ; BSR set to: 0
  9355                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9356  004604  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9357  004608  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9358  00460C  0E48               	movlw	72
  9359  00460E  6EDF               	movwf	indf2,c
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9363  004610  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9364  004614  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9365  004618  0E00               	movlw	0
  9366  00461A  8EDB               	bsf	plusw2,7,c
  9367                           
  9368                           ;usb_device.c: 1518: }
  9369  00461C  0012               	return	
  9370  00461E                     l1670:
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;usb_device.c: 1519: else
  9374                           ;usb_device.c: 1520: {
  9375                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9376                           
  9377                           ; BSR set to: 0
  9378  00461E  51B9               	movf	(_inPipes+4)& (0+255),w,b
  9379  004620  0104               	movlb	4	; () banked
  9380  004622  5D36               	subwf	54,w,b	;volatile
  9381  004624  0100               	movlb	0	; () banked
  9382  004626  51BA               	movf	(_inPipes+5)& (0+255),w,b
  9383  004628  0104               	movlb	4	; () banked
  9384  00462A  5937               	subwfb	55,w,b	;volatile
  9385  00462C  B0D8               	btfsc	status,0,c
  9386  00462E  D004               	goto	l1672
  9387                           
  9388                           ; BSR set to: 4
  9389                           ;usb_device.c: 1524: {
  9390                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9391  004630  C436 F0B9          	movff	1078,_inPipes+4	;volatile
  9392  004634  C437 F0BA          	movff	1079,_inPipes+5	;volatile
  9393  004638                     l1672:
  9394                           
  9395                           ; BSR set to: 4
  9396                           ;usb_device.c: 1526: }
  9397                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9398                           
  9399                           ; BSR set to: 4
  9400  004638  EC84  F01B         	call	_USBCtrlTrfTxService	;wreg free
  9401                           
  9402                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9403  00463C  0100               	movlb	0	; () banked
  9404  00463E  EE20 F002          	lfsr	2,2
  9405  004642  51BB               	movf	_pBDTEntryIn& (0+255),w,b
  9406  004644  26D9               	addwf	fsr2l,f,c
  9407  004646  51BC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9408  004648  22DA               	addwfc	fsr2h,f,c
  9409  00464A  0E38               	movlw	56
  9410  00464C  6EDE               	movwf	postinc2,c
  9411  00464E  0E04               	movlw	4
  9412  004650  6EDD               	movwf	postdec2,c
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9416  004652  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
  9417  004656  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9418  00465A  0E48               	movlw	72
  9419  00465C  6EDF               	movwf	indf2,c
  9420                           
  9421                           ; BSR set to: 0
  9422                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9423  00465E  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
  9424  004662  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9425  004666  0E00               	movlw	0
  9426  004668  8EDB               	bsf	plusw2,7,c
  9427  00466A  0012               	return	
  9428  00466C                     __end_of_USBCtrlEPAllowDataStage:
  9429                           	opt stack 0
  9430                           tosu	equ	0xFFF
  9431                           tosh	equ	0xFFE
  9432                           tosl	equ	0xFFD
  9433                           pclath	equ	0xFFA
  9434                           tblptru	equ	0xFF8
  9435                           tblptrh	equ	0xFF7
  9436                           tblptrl	equ	0xFF6
  9437                           tablat	equ	0xFF5
  9438                           prodh	equ	0xFF4
  9439                           prodl	equ	0xFF3
  9440                           intcon	equ	0xFF2
  9441                           intcon2	equ	0xFF1
  9442                           intcon3	equ	0xFF0
  9443                           postinc0	equ	0xFEE
  9444                           plusw0	equ	0xFEB
  9445                           wreg	equ	0xFE8
  9446                           postinc1	equ	0xFE6
  9447                           postdec1	equ	0xFE5
  9448                           plusw1	equ	0xFE3
  9449                           fsr1h	equ	0xFE2
  9450                           fsr1l	equ	0xFE1
  9451                           indf2	equ	0xFDF
  9452                           postinc2	equ	0xFDE
  9453                           postdec2	equ	0xFDD
  9454                           plusw2	equ	0xFDB
  9455                           fsr2h	equ	0xFDA
  9456                           fsr2l	equ	0xFD9
  9457                           status	equ	0xFD8
  9458                           
  9459 ;; *************** function _USBCheckStdRequest *****************
  9460 ;; Defined at:
  9461 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;		None
  9464 ;; Auto vars:     Size  Location     Type
  9465 ;;		None
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  1    wreg      void 
  9468 ;; Registers used:
  9469 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9479 ;;Total ram usage:        0 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; Hardware stack levels required when called:   16
  9482 ;; This function calls:
  9483 ;;		_USBStdFeatureReqHandler
  9484 ;;		_USBStdGetDscHandler
  9485 ;;		_USBStdGetStatusHandler
  9486 ;;		_USBStdSetCfgHandler
  9487 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9488 ;; This function is called by:
  9489 ;;		_USBCtrlTrfSetupHandler
  9490 ;; This function uses a non-reentrant model
  9491 ;;
  9492                           
  9493                           	psect	text39
  9494  003548                     __ptext39:
  9495                           	opt stack 0
  9496  003548                     _USBCheckStdRequest:
  9497                           	opt stack 8
  9498                           
  9499                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9500                           
  9501                           ; BSR set to: 0
  9502                           ;incstack = 0
  9503  003548  0104               	movlb	4	; () banked
  9504  00354A  3930               	swapf	48,w,b	;volatile
  9505  00354C  32E8               	rrcf	wreg,f,c
  9506  00354E  0B03               	andlw	3
  9507  003550  0900               	iorlw	0
  9508  003552  A4D8               	btfss	status,2,c
  9509  003554  0012               	return	
  9510  003556  D048               	goto	l1805
  9511  003558                     l1806:
  9512                           
  9513                           ; BSR set to: 4
  9514                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9515  003558  0100               	movlb	0	; () banked
  9516  00355A  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
  9517                           
  9518                           ; BSR set to: 0
  9519                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9520  00355C  0E08               	movlw	8
  9521  00355E  6FD0               	movwf	_USBDeviceState& (0+255),b
  9522                           
  9523                           ;usb_device.c: 2713: break;
  9524  003560  0012               	return	
  9525  003562                     
  9526                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9527                           
  9528                           ; BSR set to: 0
  9529  003562  EC98  F016         	call	_USBStdGetDscHandler	;wreg free
  9530                           
  9531                           ;usb_device.c: 2716: break;
  9532  003566  0012               	return	
  9533  003568                     
  9534                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9535  003568  ECBE  F019         	call	_USBStdSetCfgHandler	;wreg free
  9536                           
  9537                           ;usb_device.c: 2719: break;
  9538  00356C  0012               	return	
  9539  00356E                     
  9540                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9541  00356E  0ED8               	movlw	low _USBActiveConfiguration
  9542  003570  0100               	movlb	0	; () banked
  9543  003572  6FB5               	movwf	_inPipes& (0+255),b
  9544  003574  0E00               	movlw	high _USBActiveConfiguration
  9545  003576  6FB6               	movwf	(_inPipes+1)& (0+255),b
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9549  003578  81B8               	bsf	(_inPipes+3)& (0+255),0,b
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9553  00357A  0E01               	movlw	1
  9554  00357C  6FB9               	movwf	(_inPipes+4)& (0+255),b
  9555                           
  9556                           ; BSR set to: 0
  9557                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9558  00357E  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
  9559                           
  9560                           ;usb_device.c: 2725: break;
  9561  003580  0012               	return	
  9562  003582                     
  9563                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9564                           
  9565                           ; BSR set to: 0
  9566  003582  EC42  F020         	call	_USBStdGetStatusHandler	;wreg free
  9567                           
  9568                           ;usb_device.c: 2728: break;
  9569  003586  0012               	return	
  9570  003588                     
  9571                           ;usb_device.c: 2730: case 3:
  9572                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9573  003588  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9574                           
  9575                           ;usb_device.c: 2732: break;
  9576  00358C  0012               	return	
  9577  00358E                     
  9578                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9579  00358E  0104               	movlb	4	; () banked
  9580  003590  5134               	movf	52,w,b	;volatile
  9581  003592  0D01               	mullw	1
  9582  003594  0EF1               	movlw	low _USBAlternateInterface
  9583  003596  24F3               	addwf	prodl,w,c
  9584  003598  0100               	movlb	0	; () banked
  9585  00359A  6FB5               	movwf	_inPipes& (0+255),b
  9586  00359C  0E02               	movlw	high _USBAlternateInterface
  9587  00359E  20F4               	addwfc	prodh,w,c
  9588  0035A0  6FB6               	movwf	(_inPipes+1)& (0+255),b
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9592  0035A2  81B8               	bsf	(_inPipes+3)& (0+255),0,b
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9596  0035A4  0E01               	movlw	1
  9597  0035A6  6FB9               	movwf	(_inPipes+4)& (0+255),b
  9598                           
  9599                           ; BSR set to: 0
  9600                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9601  0035A8  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
  9602                           
  9603                           ;usb_device.c: 2738: break;
  9604  0035AA  0012               	return	
  9605  0035AC                     l1815:
  9606                           
  9607                           ; BSR set to: 4
  9608                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9609  0035AC  0100               	movlb	0	; () banked
  9610  0035AE  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
  9611                           
  9612                           ; BSR set to: 0
  9613                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9614  0035B0  0104               	movlb	4	; () banked
  9615  0035B2  5134               	movf	52,w,b	;volatile
  9616  0035B4  0D01               	mullw	1
  9617  0035B6  0EF1               	movlw	low _USBAlternateInterface
  9618  0035B8  24F3               	addwf	prodl,w,c
  9619  0035BA  6ED9               	movwf	fsr2l,c
  9620  0035BC  0E02               	movlw	high _USBAlternateInterface
  9621  0035BE  20F4               	addwfc	prodh,w,c
  9622  0035C0  6EDA               	movwf	fsr2h,c
  9623  0035C2  C432 FFDF          	movff	1074,indf2	;volatile
  9624                           
  9625                           ;usb_device.c: 2742: break;
  9626  0035C6  0012               	return	
  9627  0035C8                     
  9628                           ; BSR set to: 4
  9629                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9630                           
  9631                           ; BSR set to: 4
  9632  0035C8  0E00               	movlw	0
  9633  0035CA  0100               	movlb	0	; () banked
  9634  0035CC  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9635  0035CE  0E02               	movlw	2
  9636  0035D0  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9637  0035D2  0E00               	movlw	0
  9638  0035D4  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9639  0035D6  0E00               	movlw	0
  9640  0035D8  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9641  0035DA  0E00               	movlw	0
  9642  0035DC  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9643  0035DE  0E00               	movlw	0
  9644  0035E0  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9645  0035E2  EC81  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9646                           
  9647                           ;usb_device.c: 2749: }
  9648                           
  9649                           ;usb_device.c: 2748: break;
  9650                           
  9651                           ;usb_device.c: 2747: default:
  9652                           
  9653                           ;usb_device.c: 2746: case 12:
  9654                           
  9655                           ;usb_device.c: 2745: break;
  9656  0035E6  0012               	return	
  9657  0035E8                     l1805:
  9658  0035E8  0104               	movlb	4	; () banked
  9659  0035EA  5131               	movf	49,w,b	;volatile
  9660                           
  9661                           ; Switch size 1, requested type "space"
  9662                           ; Number of cases is 11, Range of values is 0 to 12
  9663                           ; switch strategies available:
  9664                           ; Name         Instructions Cycles
  9665                           ; simple_byte           34    18 (average)
  9666                           ;	Chosen strategy is simple_byte
  9667  0035EC  0A00               	xorlw	0	; case 0
  9668  0035EE  B4D8               	btfsc	status,2,c
  9669  0035F0  D7C8               	goto	l1811
  9670  0035F2  0A01               	xorlw	1	; case 1
  9671  0035F4  B4D8               	btfsc	status,2,c
  9672  0035F6  D7C8               	goto	l1812
  9673  0035F8  0A02               	xorlw	2	; case 3
  9674  0035FA  B4D8               	btfsc	status,2,c
  9675  0035FC  D7C5               	goto	l1812
  9676  0035FE  0A06               	xorlw	6	; case 5
  9677  003600  B4D8               	btfsc	status,2,c
  9678  003602  D7AA               	goto	l1806
  9679  003604  0A03               	xorlw	3	; case 6
  9680  003606  B4D8               	btfsc	status,2,c
  9681  003608  D7AC               	goto	l1808
  9682  00360A  0A01               	xorlw	1	; case 7
  9683  00360C  B4D8               	btfsc	status,2,c
  9684  00360E  D7DC               	goto	l1816
  9685  003610  0A0F               	xorlw	15	; case 8
  9686  003612  B4D8               	btfsc	status,2,c
  9687  003614  D7AC               	goto	l1810
  9688  003616  0A01               	xorlw	1	; case 9
  9689  003618  B4D8               	btfsc	status,2,c
  9690  00361A  D7A6               	goto	l1809
  9691  00361C  0A03               	xorlw	3	; case 10
  9692  00361E  B4D8               	btfsc	status,2,c
  9693  003620  D7B6               	goto	l1814
  9694  003622  0A01               	xorlw	1	; case 11
  9695  003624  B4D8               	btfsc	status,2,c
  9696  003626  D7C2               	goto	l1815
  9697  003628  0A07               	xorlw	7	; case 12
  9698  00362A  0012               	return	
  9699  00362C                     __end_of_USBCheckStdRequest:
  9700                           	opt stack 0
  9701                           tosu	equ	0xFFF
  9702                           tosh	equ	0xFFE
  9703                           tosl	equ	0xFFD
  9704                           pclath	equ	0xFFA
  9705                           tblptru	equ	0xFF8
  9706                           tblptrh	equ	0xFF7
  9707                           tblptrl	equ	0xFF6
  9708                           tablat	equ	0xFF5
  9709                           prodh	equ	0xFF4
  9710                           prodl	equ	0xFF3
  9711                           intcon	equ	0xFF2
  9712                           intcon2	equ	0xFF1
  9713                           intcon3	equ	0xFF0
  9714                           postinc0	equ	0xFEE
  9715                           plusw0	equ	0xFEB
  9716                           wreg	equ	0xFE8
  9717                           postinc1	equ	0xFE6
  9718                           postdec1	equ	0xFE5
  9719                           plusw1	equ	0xFE3
  9720                           fsr1h	equ	0xFE2
  9721                           fsr1l	equ	0xFE1
  9722                           indf2	equ	0xFDF
  9723                           postinc2	equ	0xFDE
  9724                           postdec2	equ	0xFDD
  9725                           plusw2	equ	0xFDB
  9726                           fsr2h	equ	0xFDA
  9727                           fsr2l	equ	0xFD9
  9728                           status	equ	0xFD8
  9729                           
  9730 ;; *************** function _USBStdSetCfgHandler *****************
  9731 ;; Defined at:
  9732 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;		None
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;  i               1   49[BANK0 ] unsigned char 
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      void 
  9739 ;; Registers used:
  9740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/0
  9743 ;;		On exit  : 0/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9747 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9749 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9750 ;;Total ram usage:        1 bytes
  9751 ;; Hardware stack levels used:    1
  9752 ;; Hardware stack levels required when called:   15
  9753 ;; This function calls:
  9754 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9755 ;;		_memset
  9756 ;; This function is called by:
  9757 ;;		_USBCheckStdRequest
  9758 ;; This function uses a non-reentrant model
  9759 ;;
  9760                           
  9761                           	psect	text40
  9762  00337C                     __ptext40:
  9763                           	opt stack 0
  9764  00337C                     _USBStdSetCfgHandler:
  9765                           	opt stack 8
  9766                           
  9767                           ;usb_device.c: 1988: uint8_t i;
  9768                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9769                           
  9770                           ;incstack = 0
  9771  00337C  0100               	movlb	0	; () banked
  9772  00337E  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
  9773                           
  9774                           ; BSR set to: 0
  9775                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9776  003380  0E27               	movlw	39
  9777  003382  6F7D               	movwf	memset@p1& (0+255),b
  9778  003384  0E0F               	movlw	15
  9779  003386  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9780  003388  0E00               	movlw	0
  9781  00338A  6F80               	movwf	(memset@c+1)& (0+255),b
  9782  00338C  0E00               	movlw	0
  9783  00338E  6F7F               	movwf	memset@c& (0+255),b
  9784  003390  0E00               	movlw	0
  9785  003392  6F82               	movwf	(memset@n+1)& (0+255),b
  9786  003394  0E02               	movlw	2
  9787  003396  6F81               	movwf	memset@n& (0+255),b
  9788  003398  EC5E  F02E         	call	_memset	;wreg free
  9789                           
  9790                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9791  00339C  0E00               	movlw	0
  9792  00339E  0100               	movlb	0	; () banked
  9793  0033A0  6F7D               	movwf	memset@p1& (0+255),b
  9794  0033A2  0E04               	movlw	4
  9795  0033A4  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9796  0033A6  0E00               	movlw	0
  9797  0033A8  6F80               	movwf	(memset@c+1)& (0+255),b
  9798  0033AA  0E00               	movlw	0
  9799  0033AC  6F7F               	movwf	memset@c& (0+255),b
  9800  0033AE  0E00               	movlw	0
  9801  0033B0  6F82               	movwf	(memset@n+1)& (0+255),b
  9802  0033B2  0E30               	movlw	48
  9803  0033B4  6F81               	movwf	memset@n& (0+255),b
  9804  0033B6  EC5E  F02E         	call	_memset	;wreg free
  9805                           
  9806                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9807  0033BA  8C65               	bsf	3941,6,c	;volatile
  9808                           
  9809                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9810  0033BC  0E00               	movlw	0
  9811  0033BE  0100               	movlb	0	; () banked
  9812  0033C0  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9813  0033C2                     l11851:
  9814                           
  9815                           ; BSR set to: 0
  9816  0033C2  0E02               	movlw	2
  9817  0033C4  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9818  0033C6  D001               	goto	l1722
  9819  0033C8  D016               	goto	u10470
  9820  0033CA                     l1722:
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;usb_device.c: 2006: {
  9824                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9825                           
  9826                           ; BSR set to: 0
  9827  0033CA  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9828  0033CC  0D01               	mullw	1
  9829  0033CE  0ED2               	movlw	low _ep_data_in
  9830  0033D0  24F3               	addwf	prodl,w,c
  9831  0033D2  6ED9               	movwf	fsr2l,c
  9832  0033D4  0E02               	movlw	high _ep_data_in
  9833  0033D6  20F4               	addwfc	prodh,w,c
  9834  0033D8  6EDA               	movwf	fsr2h,c
  9835  0033DA  0E00               	movlw	0
  9836  0033DC  6EDF               	movwf	indf2,c
  9837                           
  9838                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9839  0033DE  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9840  0033E0  0D01               	mullw	1
  9841  0033E2  0ECF               	movlw	low _ep_data_out
  9842  0033E4  24F3               	addwf	prodl,w,c
  9843  0033E6  6ED9               	movwf	fsr2l,c
  9844  0033E8  0E02               	movlw	high _ep_data_out
  9845  0033EA  20F4               	addwfc	prodh,w,c
  9846  0033EC  6EDA               	movwf	fsr2h,c
  9847  0033EE  0E00               	movlw	0
  9848  0033F0  6EDF               	movwf	indf2,c
  9849                           
  9850                           ; BSR set to: 0
  9851  0033F2  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9852  0033F4  D7E6               	goto	l11851
  9853  0033F6                     u10470:
  9854                           
  9855                           ; BSR set to: 0
  9856                           ;usb_device.c: 2009: }
  9857                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9858                           
  9859                           ; BSR set to: 0
  9860  0033F6  0EF1               	movlw	low _USBAlternateInterface
  9861  0033F8  6F7D               	movwf	memset@p1& (0+255),b
  9862  0033FA  0E02               	movlw	high _USBAlternateInterface
  9863  0033FC  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9864  0033FE  0E00               	movlw	0
  9865  003400  6F80               	movwf	(memset@c+1)& (0+255),b
  9866  003402  0E00               	movlw	0
  9867  003404  6F7F               	movwf	memset@c& (0+255),b
  9868  003406  0E00               	movlw	0
  9869  003408  6F82               	movwf	(memset@n+1)& (0+255),b
  9870  00340A  0E02               	movlw	2
  9871  00340C  6F81               	movwf	memset@n& (0+255),b
  9872  00340E  EC5E  F02E         	call	_memset	;wreg free
  9873                           
  9874                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  9875  003412  9C65               	bcf	3941,6,c	;volatile
  9876                           
  9877                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9878  003414  0E08               	movlw	8
  9879  003416  0100               	movlb	0	; () banked
  9880  003418  6FBB               	movwf	_pBDTEntryIn& (0+255),b
  9881  00341A  0E04               	movlw	4
  9882  00341C  6FBC               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9883                           
  9884                           ; BSR set to: 0
  9885                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9886  00341E  0E00               	movlw	0
  9887  003420  6FC5               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9888  003422  0E04               	movlw	4
  9889  003424  6FC6               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9890                           
  9891                           ; BSR set to: 0
  9892                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9893  003426  C0C5  F0C3         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9894  00342A  C0C6  F0C4         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9898  00342E  C432 F0D8          	movff	1074,_USBActiveConfiguration	;volatile
  9899                           
  9900                           ; BSR set to: 0
  9901                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  9902  003432  51D8               	movf	_USBActiveConfiguration& (0+255),w,b
  9903  003434  A4D8               	btfss	status,2,c
  9904  003436  D003               	goto	l1724
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;usb_device.c: 2028: {
  9908                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  9909  003438  0E10               	movlw	16
  9910  00343A  6FD0               	movwf	_USBDeviceState& (0+255),b
  9911                           
  9912                           ;usb_device.c: 2031: }
  9913  00343C  0012               	return	
  9914  00343E                     l1724:
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;usb_device.c: 2032: else
  9918                           ;usb_device.c: 2033: {
  9919                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9920                           
  9921                           ; BSR set to: 0
  9922  00343E  0E00               	movlw	0
  9923  003440  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9924  003442  0E01               	movlw	1
  9925  003444  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9926  003446  0ED8               	movlw	low _USBActiveConfiguration
  9927  003448  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9928  00344A  0E00               	movlw	high _USBActiveConfiguration
  9929  00344C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9930  00344E  0E00               	movlw	0
  9931  003450  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9932  003452  0E01               	movlw	1
  9933  003454  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9934  003456  EC81  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9935                           
  9936                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  9937  00345A  0E20               	movlw	32
  9938  00345C  0100               	movlb	0	; () banked
  9939  00345E  6FD0               	movwf	_USBDeviceState& (0+255),b
  9940  003460  0012               	return	
  9941  003462                     __end_of_USBStdSetCfgHandler:
  9942                           	opt stack 0
  9943                           tosu	equ	0xFFF
  9944                           tosh	equ	0xFFE
  9945                           tosl	equ	0xFFD
  9946                           pclath	equ	0xFFA
  9947                           tblptru	equ	0xFF8
  9948                           tblptrh	equ	0xFF7
  9949                           tblptrl	equ	0xFF6
  9950                           tablat	equ	0xFF5
  9951                           prodh	equ	0xFF4
  9952                           prodl	equ	0xFF3
  9953                           intcon	equ	0xFF2
  9954                           intcon2	equ	0xFF1
  9955                           intcon3	equ	0xFF0
  9956                           postinc0	equ	0xFEE
  9957                           plusw0	equ	0xFEB
  9958                           wreg	equ	0xFE8
  9959                           postinc1	equ	0xFE6
  9960                           postdec1	equ	0xFE5
  9961                           plusw1	equ	0xFE3
  9962                           fsr1h	equ	0xFE2
  9963                           fsr1l	equ	0xFE1
  9964                           indf2	equ	0xFDF
  9965                           postinc2	equ	0xFDE
  9966                           postdec2	equ	0xFDD
  9967                           plusw2	equ	0xFDB
  9968                           fsr2h	equ	0xFDA
  9969                           fsr2l	equ	0xFD9
  9970                           status	equ	0xFD8
  9971                           
  9972 ;; *************** function _USBStdGetStatusHandler *****************
  9973 ;; Defined at:
  9974 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;		None
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;  p               2   30[BANK0 ] PTR struct __BDT
  9979 ;;		 -> NULL(0), BDT(48), 
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  1    wreg      void 
  9982 ;; Registers used:
  9983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9990 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9991 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9992 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9993 ;;Total ram usage:        3 bytes
  9994 ;; Hardware stack levels used:    1
  9995 ;; Hardware stack levels required when called:   11
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_USBCheckStdRequest
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           	psect	text41
 10004  004084                     __ptext41:
 10005                           	opt stack 0
 10006  004084                     _USBStdGetStatusHandler:
 10007                           	opt stack 12
 10008                           
 10009                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10010                           
 10011                           ; BSR set to: 0
 10012                           ;incstack = 0
 10013  004084  0E00               	movlw	0
 10014  004086  0104               	movlb	4	; () banked
 10015  004088  6F38               	movwf	56,b	;volatile
 10016                           
 10017                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10018  00408A  0E00               	movlw	0
 10019  00408C  6F39               	movwf	57,b	;volatile
 10020                           
 10021                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10022  00408E  D03D               	goto	l1743
 10023  004090                     l1744:
 10024                           
 10025                           ; BSR set to: 4
 10026                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10027  004090  0100               	movlb	0	; () banked
 10028  004092  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 10029                           
 10030                           ;usb_device.c: 2163: }
 10031                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10032                           
 10033                           ; BSR set to: 4
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;usb_device.c: 2161: {
 10037                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10038                           
 10039                           ;usb_device.c: 2160: if(0 == 1)
 10040  004094  0101               	movlb	1	; () banked
 10041  004096  05E3               	decf	_RemoteWakeup& (0+255),w,b
 10042  004098  A4D8               	btfss	status,2,c
 10043  00409A  D042               	goto	l1747
 10044                           
 10045                           ; BSR set to: 1
 10046                           ;usb_device.c: 2166: {
 10047                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10048  00409C  0104               	movlb	4	; () banked
 10049  00409E  8338               	bsf	56,1,b	;volatile
 10050                           
 10051                           ; BSR set to: 4
 10052                           ;usb_device.c: 2168: }
 10053                           ;usb_device.c: 2169: break;
 10054  0040A0  D03F               	goto	l1747
 10055  0040A2                     l1748:
 10056                           
 10057                           ; BSR set to: 4
 10058                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10059  0040A2  0100               	movlb	0	; () banked
 10060  0040A4  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 10061                           
 10062                           ;usb_device.c: 2172: break;
 10063  0040A6  D03C               	goto	l1747
 10064  0040A8                     l1749:
 10065                           
 10066                           ; BSR set to: 4
 10067                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10068  0040A8  0100               	movlb	0	; () banked
 10069  0040AA  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 10070                           
 10071                           ;usb_device.c: 2178: {
 10072                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10073                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10074  0040AC  0104               	movlb	4	; () banked
 10075  0040AE  BF34               	btfsc	52,7,b	;volatile
 10076  0040B0  D00B               	goto	l1750
 10077                           
 10078                           ; BSR set to: 4
 10079                           ;usb_device.c: 2182: {
 10080                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10081  0040B2  5134               	movf	52,w,b	;volatile
 10082  0040B4  0B0F               	andlw	15
 10083  0040B6  0100               	movlb	0	; () banked
 10084  0040B8  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10085  0040BA  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10086  0040BC  0D02               	mullw	2
 10087  0040BE  0E0E               	movlw	low _pBDTEntryOut
 10088  0040C0  24F3               	addwf	prodl,w,c
 10089  0040C2  6ED9               	movwf	fsr2l,c
 10090  0040C4  0E03               	movlw	high _pBDTEntryOut
 10091  0040C6  D00B               	goto	L4
 10092  0040C8                     l1750:
 10093                           
 10094                           ;usb_device.c: 2185: else
 10095                           ;usb_device.c: 2186: {
 10096                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10097                           
 10098                           ; BSR set to: 0
 10099  0040C8  0104               	movlb	4	; () banked
 10100  0040CA  5134               	movf	52,w,b	;volatile
 10101  0040CC  0B0F               	andlw	15
 10102  0040CE  0100               	movlb	0	; () banked
 10103  0040D0  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10104  0040D2  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10105  0040D4  0D02               	mullw	2
 10106  0040D6  0EBB               	movlw	low _pBDTEntryIn
 10107  0040D8  24F3               	addwf	prodl,w,c
 10108  0040DA  6ED9               	movwf	fsr2l,c
 10109  0040DC  0E00               	movlw	high _pBDTEntryIn
 10110  0040DE                     L4:
 10111  0040DE  20F4               	addwfc	prodh,w,c
 10112  0040E0  6EDA               	movwf	fsr2h,c
 10113  0040E2  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10114  0040E6  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10115                           
 10116                           ; BSR set to: 0
 10117                           ;usb_device.c: 2188: }
 10118                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10119                           
 10120                           ; BSR set to: 0
 10121  0040EA  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10122  0040EE  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10123  0040F2  AEDF               	btfss	indf2,7,c
 10124  0040F4  D015               	goto	l1747
 10125                           
 10126                           ; BSR set to: 0
 10127  0040F6  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10128  0040FA  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10129  0040FE  A4DF               	btfss	indf2,2,c
 10130  004100  D00F               	goto	l1747
 10131                           
 10132                           ; BSR set to: 0
 10133                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10134  004102  0E01               	movlw	1
 10135  004104  0104               	movlb	4	; () banked
 10136  004106  6F38               	movwf	56,b	;volatile
 10137                           
 10138                           ; BSR set to: 4
 10139                           ;usb_device.c: 2193: }
 10140                           ;usb_device.c: 2194: }
 10141                           
 10142                           ; BSR set to: 4
 10143                           ;usb_device.c: 2192: break;
 10144  004108  D00B               	goto	l1747
 10145  00410A                     l1743:
 10146                           
 10147                           ; BSR set to: 4
 10148                           
 10149                           ; BSR set to: 4
 10150  00410A  5130               	movf	48,w,b	;volatile
 10151  00410C  0B1F               	andlw	31
 10152                           
 10153                           ; Switch size 1, requested type "space"
 10154                           ; Number of cases is 3, Range of values is 0 to 2
 10155                           ; switch strategies available:
 10156                           ; Name         Instructions Cycles
 10157                           ; simple_byte           10     6 (average)
 10158                           ;	Chosen strategy is simple_byte
 10159  00410E  0A00               	xorlw	0	; case 0
 10160  004110  B4D8               	btfsc	status,2,c
 10161  004112  D7BE               	goto	l1744
 10162  004114  0A01               	xorlw	1	; case 1
 10163  004116  B4D8               	btfsc	status,2,c
 10164  004118  D7C4               	goto	l1748
 10165  00411A  0A03               	xorlw	3	; case 2
 10166  00411C  B4D8               	btfsc	status,2,c
 10167  00411E  D7C4               	goto	l1749
 10168  004120                     l1747:
 10169                           
 10170                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10171  004120  0100               	movlb	0	; () banked
 10172  004122  AFB8               	btfss	(_inPipes+3)& (0+255),7,b
 10173  004124  0012               	return	
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;usb_device.c: 2197: {
 10177                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10178  004126  0E38               	movlw	56
 10179  004128  6FB5               	movwf	_inPipes& (0+255),b
 10180  00412A  0E04               	movlw	4
 10181  00412C  6FB6               	movwf	(_inPipes+1)& (0+255),b
 10182                           
 10183                           ; BSR set to: 0
 10184                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10185  00412E  81B8               	bsf	(_inPipes+3)& (0+255),0,b
 10186                           
 10187                           ; BSR set to: 0
 10188                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10189  004130  0E02               	movlw	2
 10190  004132  6FB9               	movwf	(_inPipes+4)& (0+255),b
 10191  004134  0012               	return	
 10192  004136                     __end_of_USBStdGetStatusHandler:
 10193                           	opt stack 0
 10194                           tosu	equ	0xFFF
 10195                           tosh	equ	0xFFE
 10196                           tosl	equ	0xFFD
 10197                           pclath	equ	0xFFA
 10198                           tblptru	equ	0xFF8
 10199                           tblptrh	equ	0xFF7
 10200                           tblptrl	equ	0xFF6
 10201                           tablat	equ	0xFF5
 10202                           prodh	equ	0xFF4
 10203                           prodl	equ	0xFF3
 10204                           intcon	equ	0xFF2
 10205                           intcon2	equ	0xFF1
 10206                           intcon3	equ	0xFF0
 10207                           postinc0	equ	0xFEE
 10208                           plusw0	equ	0xFEB
 10209                           wreg	equ	0xFE8
 10210                           postinc1	equ	0xFE6
 10211                           postdec1	equ	0xFE5
 10212                           plusw1	equ	0xFE3
 10213                           fsr1h	equ	0xFE2
 10214                           fsr1l	equ	0xFE1
 10215                           indf2	equ	0xFDF
 10216                           postinc2	equ	0xFDE
 10217                           postdec2	equ	0xFDD
 10218                           plusw2	equ	0xFDB
 10219                           fsr2h	equ	0xFDA
 10220                           fsr2l	equ	0xFD9
 10221                           status	equ	0xFD8
 10222                           
 10223 ;; *************** function _USBStdGetDscHandler *****************
 10224 ;; Defined at:
 10225 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;		None
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;		None
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  1    wreg      void 
 10232 ;; Registers used:
 10233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10241 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10242 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10243 ;;Total ram usage:        2 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; Hardware stack levels required when called:   11
 10246 ;; This function calls:
 10247 ;;		Nothing
 10248 ;; This function is called by:
 10249 ;;		_USBCheckStdRequest
 10250 ;; This function uses a non-reentrant model
 10251 ;;
 10252                           
 10253                           	psect	text42
 10254  002D30                     __ptext42:
 10255                           	opt stack 0
 10256  002D30                     _USBStdGetDscHandler:
 10257                           	opt stack 12
 10258                           
 10259                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10260                           
 10261                           ; BSR set to: 0
 10262                           ;incstack = 0
 10263  002D30  0E80               	movlw	128
 10264  002D32  0104               	movlb	4	; () banked
 10265  002D34  1930               	xorwf	48,w,b	;volatile
 10266  002D36  A4D8               	btfss	status,2,c
 10267  002D38  0012               	return	
 10268                           
 10269                           ; BSR set to: 4
 10270                           ;usb_device.c: 2064: {
 10271                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10272  002D3A  0EC0               	movlw	192
 10273  002D3C  0100               	movlb	0	; () banked
 10274  002D3E  6FB8               	movwf	(_inPipes+3)& (0+255),b
 10275                           
 10276                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10277  002D40  D082               	goto	l1730
 10278  002D42                     
 10279                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10280                           
 10281                           ; BSR set to: 0
 10282  002D42  0E48               	movlw	low _device_dsc
 10283  002D44  0100               	movlb	0	; () banked
 10284  002D46  6FB5               	movwf	_inPipes& (0+255),b
 10285  002D48  0EFE               	movlw	high _device_dsc
 10286  002D4A  6FB6               	movwf	(_inPipes+1)& (0+255),b
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10290  002D4C  0E00               	movlw	0
 10291  002D4E  6FBA               	movwf	(_inPipes+5)& (0+255),b
 10292  002D50  0E12               	movlw	18
 10293  002D52  6FB9               	movwf	(_inPipes+4)& (0+255),b
 10294                           
 10295                           ;usb_device.c: 2076: break;
 10296  002D54  0012               	return	
 10297  002D56                     
 10298                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10299                           
 10300                           ; BSR set to: 0
 10301  002D56  0104               	movlb	4	; () banked
 10302  002D58  5132               	movf	50,w,b	;volatile
 10303  002D5A  A4D8               	btfss	status,2,c
 10304  002D5C  D040               	goto	l1734
 10305                           
 10306                           ; BSR set to: 4
 10307                           ;usb_device.c: 2082: {
 10308                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10309  002D5E  5132               	movf	50,w,b	;volatile
 10310  002D60  0D02               	mullw	2
 10311  002D62  0E2D               	movlw	low _USB_CD_Ptr
 10312  002D64  24F3               	addwf	prodl,w,c
 10313  002D66  6EF6               	movwf	tblptrl,c
 10314  002D68  0EFC               	movlw	high _USB_CD_Ptr
 10315  002D6A  20F4               	addwfc	prodh,w,c
 10316  002D6C  6EF7               	movwf	tblptrh,c
 10317  002D6E                     	if	0	;There are less than 3 active tblptr bytes
 10318  002D6E                     	endif
 10319  002D6E  0009               	tblrd		*+
 10320  002D70  CFF5 F0B5          	movff	tablat,_inPipes
 10321  002D74  000A               	tblrd		*-
 10322  002D76  CFF5 F0B6          	movff	tablat,_inPipes+1
 10323                           
 10324                           ; BSR set to: 4
 10325                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10326  002D7A  0E02               	movlw	2
 10327  002D7C  0100               	movlb	0	; () banked
 10328  002D7E  25B5               	addwf	_inPipes& (0+255),w,b
 10329  002D80  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10330  002D82  0E00               	movlw	0
 10331  002D84  21B6               	addwfc	(_inPipes+1)& (0+255),w,b
 10332  002D86  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10333  002D88  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10334  002D8C  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10335  002D90  6AF8               	clrf	tblptru,c
 10336  002D92  0E0E               	movlw	(high __ramtop+-1)
 10337  002D94  64F7               	cpfsgt	tblptrh,c
 10338  002D96  D003               	bra	u10517
 10339  002D98  0008               	tblrd		*
 10340  002D9A  50F5               	movf	tablat,w,c
 10341  002D9C  D005               	bra	u10510
 10342  002D9E                     u10517:
 10343  002D9E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10344  002DA2  CFF7 FFEA          	movff	tblptrh,fsr0h
 10345  002DA6  50EF               	movf	indf0,w,c
 10346  002DA8                     u10510:
 10347  002DA8  0100               	movlb	0	; () banked
 10348  002DAA  6FB9               	movwf	(_inPipes+4)& (0+255),b
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10352  002DAC  0E03               	movlw	3
 10353  002DAE  25B5               	addwf	_inPipes& (0+255),w,b
 10354  002DB0  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10355  002DB2  0E00               	movlw	0
 10356  002DB4  21B6               	addwfc	(_inPipes+1)& (0+255),w,b
 10357  002DB6  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10358  002DB8  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10359  002DBC  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10360  002DC0  6AF8               	clrf	tblptru,c
 10361  002DC2  0E0E               	movlw	(high __ramtop+-1)
 10362  002DC4  64F7               	cpfsgt	tblptrh,c
 10363  002DC6  D003               	bra	u10527
 10364  002DC8  0008               	tblrd		*
 10365  002DCA  50F5               	movf	tablat,w,c
 10366  002DCC  D005               	bra	u10520
 10367  002DCE                     u10527:
 10368  002DCE  CFF6 FFE9          	movff	tblptrl,fsr0l
 10369  002DD2  CFF7 FFEA          	movff	tblptrh,fsr0h
 10370  002DD6  50EF               	movf	indf0,w,c
 10371  002DD8                     u10520:
 10372  002DD8  0100               	movlb	0	; () banked
 10373  002DDA  6FBA               	movwf	(_inPipes+5)& (0+255),b
 10374                           
 10375                           ;usb_device.c: 2094: }
 10376  002DDC  0012               	return	
 10377  002DDE                     l1734:
 10378                           
 10379                           ;usb_device.c: 2095: else
 10380                           ;usb_device.c: 2096: {
 10381                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10382                           
 10383                           ; BSR set to: 0
 10384  002DDE  0E00               	movlw	0
 10385  002DE0  0100               	movlb	0	; () banked
 10386  002DE2  6FB8               	movwf	(_inPipes+3)& (0+255),b
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;usb_device.c: 2098: }
 10390                           ;usb_device.c: 2099: break;
 10391  002DE4  0012               	return	
 10392  002DE6                     
 10393                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10394                           
 10395                           ; BSR set to: 0
 10396  002DE6  0E03               	movlw	3
 10397  002DE8  0104               	movlb	4	; () banked
 10398  002DEA  6132               	cpfslt	50,b	;volatile
 10399  002DEC  D024               	goto	l1737
 10400                           
 10401                           ; BSR set to: 4
 10402                           ;usb_device.c: 2105: {
 10403                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10404  002DEE  5132               	movf	50,w,b	;volatile
 10405  002DF0  0D02               	mullw	2
 10406  002DF2  0E27               	movlw	low _USB_SD_Ptr
 10407  002DF4  24F3               	addwf	prodl,w,c
 10408  002DF6  6EF6               	movwf	tblptrl,c
 10409  002DF8  0EFC               	movlw	high _USB_SD_Ptr
 10410  002DFA  20F4               	addwfc	prodh,w,c
 10411  002DFC  6EF7               	movwf	tblptrh,c
 10412  002DFE                     	if	0	;There are less than 3 active tblptr bytes
 10413  002DFE                     	endif
 10414  002DFE  0009               	tblrd		*+
 10415  002E00  CFF5 F0B5          	movff	tablat,_inPipes
 10416  002E04  000A               	tblrd		*-
 10417  002E06  CFF5 F0B6          	movff	tablat,_inPipes+1
 10418                           
 10419                           ; BSR set to: 4
 10420                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10421  002E0A  C0B5  FFF6         	movff	_inPipes,tblptrl
 10422  002E0E  C0B6  FFF7         	movff	_inPipes+1,tblptrh
 10423  002E12  6AF8               	clrf	tblptru,c
 10424  002E14  0E0E               	movlw	(high __ramtop+-1)
 10425  002E16  64F7               	cpfsgt	tblptrh,c
 10426  002E18  D003               	bra	u10547
 10427  002E1A  0008               	tblrd		*
 10428  002E1C  50F5               	movf	tablat,w,c
 10429  002E1E  D005               	bra	u10540
 10430  002E20                     u10547:
 10431  002E20  CFF6 FFE9          	movff	tblptrl,fsr0l
 10432  002E24  CFF7 FFEA          	movff	tblptrh,fsr0h
 10433  002E28  50EF               	movf	indf0,w,c
 10434  002E2A                     u10540:
 10435  002E2A  0100               	movlb	0	; () banked
 10436  002E2C  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10437  002E2E  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10438  002E30  6FB9               	movwf	(_inPipes+4)& (0+255),b
 10439  002E32  6BBA               	clrf	(_inPipes+5)& (0+255),b
 10440                           
 10441                           ;usb_device.c: 2110: }
 10442  002E34  0012               	return	
 10443  002E36                     l1737:
 10444                           
 10445                           ;usb_device.c: 2120: else
 10446                           ;usb_device.c: 2121: {
 10447                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10448                           
 10449                           ; BSR set to: 0
 10450  002E36  0E00               	movlw	0
 10451  002E38  0100               	movlb	0	; () banked
 10452  002E3A  6FB8               	movwf	(_inPipes+3)& (0+255),b
 10453                           
 10454                           ; BSR set to: 0
 10455                           ;usb_device.c: 2123: }
 10456                           ;usb_device.c: 2124: break;
 10457  002E3C  0012               	return	
 10458  002E3E                     
 10459                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10460                           
 10461                           ; BSR set to: 0
 10462  002E3E  0E00               	movlw	0
 10463  002E40  0100               	movlb	0	; () banked
 10464  002E42  6FB8               	movwf	(_inPipes+3)& (0+255),b
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;usb_device.c: 2128: }
 10468                           
 10469                           ;usb_device.c: 2127: break;
 10470  002E44  0012               	return	
 10471  002E46                     l1730:
 10472                           
 10473                           ; BSR set to: 0
 10474                           
 10475                           ; BSR set to: 0
 10476  002E46  0104               	movlb	4	; () banked
 10477  002E48  5133               	movf	51,w,b	;volatile
 10478                           
 10479                           ; Switch size 1, requested type "space"
 10480                           ; Number of cases is 3, Range of values is 1 to 3
 10481                           ; switch strategies available:
 10482                           ; Name         Instructions Cycles
 10483                           ; simple_byte           10     6 (average)
 10484                           ;	Chosen strategy is simple_byte
 10485  002E4A  0A01               	xorlw	1	; case 1
 10486  002E4C  B4D8               	btfsc	status,2,c
 10487  002E4E  D779               	goto	l1731
 10488  002E50  0A03               	xorlw	3	; case 2
 10489  002E52  B4D8               	btfsc	status,2,c
 10490  002E54  D780               	goto	l1733
 10491  002E56  0A01               	xorlw	1	; case 3
 10492  002E58  B4D8               	btfsc	status,2,c
 10493  002E5A  D7C5               	goto	l1736
 10494  002E5C  D7F0               	goto	l1739
 10495  002E5E                     __end_of_USBStdGetDscHandler:
 10496                           	opt stack 0
 10497                           tosu	equ	0xFFF
 10498                           tosh	equ	0xFFE
 10499                           tosl	equ	0xFFD
 10500                           pclath	equ	0xFFA
 10501                           tblptru	equ	0xFF8
 10502                           tblptrh	equ	0xFF7
 10503                           tblptrl	equ	0xFF6
 10504                           tablat	equ	0xFF5
 10505                           prodh	equ	0xFF4
 10506                           prodl	equ	0xFF3
 10507                           intcon	equ	0xFF2
 10508                           intcon2	equ	0xFF1
 10509                           intcon3	equ	0xFF0
 10510                           indf0	equ	0xFEF
 10511                           postinc0	equ	0xFEE
 10512                           plusw0	equ	0xFEB
 10513                           fsr0h	equ	0xFEA
 10514                           fsr0l	equ	0xFE9
 10515                           wreg	equ	0xFE8
 10516                           postinc1	equ	0xFE6
 10517                           postdec1	equ	0xFE5
 10518                           plusw1	equ	0xFE3
 10519                           fsr1h	equ	0xFE2
 10520                           fsr1l	equ	0xFE1
 10521                           indf2	equ	0xFDF
 10522                           postinc2	equ	0xFDE
 10523                           postdec2	equ	0xFDD
 10524                           plusw2	equ	0xFDB
 10525                           fsr2h	equ	0xFDA
 10526                           fsr2l	equ	0xFD9
 10527                           status	equ	0xFD8
 10528                           
 10529 ;; *************** function _USBStdFeatureReqHandler *****************
 10530 ;; Defined at:
 10531 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;		None
 10534 ;; Auto vars:     Size  Location     Type
 10535 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10536 ;;		 -> NULL(0), BDT(48), 
 10537 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10538 ;;		 -> UEP0(1), 
 10539 ;;  current_ep_d    1   52[BANK0 ] struct .
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  1    wreg      void 
 10542 ;; Registers used:
 10543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10544 ;; Tracked objects:
 10545 ;;		On entry : 0/0
 10546 ;;		On exit  : 0/0
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10550 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10551 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10552 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10553 ;;Total ram usage:        6 bytes
 10554 ;; Hardware stack levels used:    1
 10555 ;; Hardware stack levels required when called:   15
 10556 ;; This function calls:
 10557 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10558 ;; This function is called by:
 10559 ;;		_USBCheckStdRequest
 10560 ;; This function uses a non-reentrant model
 10561 ;;
 10562                           
 10563                           	psect	text43
 10564  00135A                     __ptext43:
 10565                           	opt stack 0
 10566  00135A                     _USBStdFeatureReqHandler:
 10567                           	opt stack 8
 10568                           
 10569                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10570                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10571                           ;usb_device.c: 2778: unsigned char* pUEP;
 10572                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10573                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10574                           
 10575                           ;incstack = 0
 10576  00135A  0104               	movlb	4	; () banked
 10577  00135C  0532               	decf	50,w,b	;volatile
 10578  00135E  A4D8               	btfss	status,2,c
 10579  001360  D011               	goto	l1823
 10580                           
 10581                           ; BSR set to: 4
 10582  001362  5130               	movf	48,w,b	;volatile
 10583  001364  0B1F               	andlw	31
 10584  001366  0900               	iorlw	0
 10585  001368  A4D8               	btfss	status,2,c
 10586  00136A  D00C               	goto	l1823
 10587                           
 10588                           ; BSR set to: 4
 10589                           ;usb_device.c: 2818: {
 10590                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10591  00136C  0100               	movlb	0	; () banked
 10592  00136E  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 10593                           
 10594                           ; BSR set to: 0
 10595                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10596  001370  0E03               	movlw	3
 10597  001372  0104               	movlb	4	; () banked
 10598  001374  1931               	xorwf	49,w,b	;volatile
 10599  001376  A4D8               	btfss	status,2,c
 10600  001378  D002               	goto	l1822
 10601                           
 10602                           ; BSR set to: 4
 10603                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10604  00137A  0E01               	movlw	1
 10605  00137C  D001               	goto	L5
 10606  00137E                     l1822:
 10607                           
 10608                           ;usb_device.c: 2822: else
 10609                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10610                           
 10611                           ; BSR set to: 1
 10612  00137E  0E00               	movlw	0
 10613  001380                     L5:
 10614  001380  0101               	movlb	1	; () banked
 10615  001382  6FE3               	movwf	_RemoteWakeup& (0+255),b
 10616  001384                     l1823:
 10617                           
 10618                           ;usb_device.c: 2824: }
 10619                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10620                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10621                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10622                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10623                           
 10624                           ; BSR set to: 1
 10625  001384  0104               	movlb	4	; () banked
 10626  001386  5132               	movf	50,w,b	;volatile
 10627  001388  A4D8               	btfss	status,2,c
 10628  00138A  0012               	return	
 10629                           
 10630                           ; BSR set to: 4
 10631  00138C  5130               	movf	48,w,b	;volatile
 10632  00138E  0B1F               	andlw	31
 10633  001390  0A02               	xorlw	2
 10634  001392  A4D8               	btfss	status,2,c
 10635  001394  0012               	return	
 10636                           
 10637                           ; BSR set to: 4
 10638  001396  5134               	movf	52,w,b	;volatile
 10639  001398  0B0F               	andlw	15
 10640  00139A  0900               	iorlw	0
 10641  00139C  B4D8               	btfsc	status,2,c
 10642  00139E  0012               	return	
 10643                           
 10644                           ; BSR set to: 4
 10645  0013A0  5134               	movf	52,w,b	;volatile
 10646  0013A2  0B0F               	andlw	15
 10647  0013A4  0100               	movlb	0	; () banked
 10648  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10649  0013A8  0E03               	movlw	3
 10650  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10651  0013AC  0012               	return	
 10652                           
 10653                           ; BSR set to: 0
 10654  0013AE  0E20               	movlw	32
 10655  0013B0  19D0               	xorwf	_USBDeviceState& (0+255),w,b
 10656  0013B2  A4D8               	btfss	status,2,c
 10657  0013B4  0012               	return	
 10658                           
 10659                           ; BSR set to: 0
 10660                           ;usb_device.c: 2831: {
 10661                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10662  0013B6  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 10663                           
 10664                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10665  0013B8  0104               	movlb	4	; () banked
 10666  0013BA  BF34               	btfsc	52,7,b	;volatile
 10667  0013BC  D01C               	goto	l1825
 10668                           
 10669                           ; BSR set to: 4
 10670                           ;usb_device.c: 2838: {
 10671                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10672  0013BE  5134               	movf	52,w,b	;volatile
 10673  0013C0  0B0F               	andlw	15
 10674  0013C2  0100               	movlb	0	; () banked
 10675  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10676  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10677  0013C8  0D02               	mullw	2
 10678  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10679  0013CC  24F3               	addwf	prodl,w,c
 10680  0013CE  6ED9               	movwf	fsr2l,c
 10681  0013D0  0E03               	movlw	high _pBDTEntryOut
 10682  0013D2  20F4               	addwfc	prodh,w,c
 10683  0013D4  6EDA               	movwf	fsr2h,c
 10684  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10685  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10686                           
 10687                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10688  0013DE  0104               	movlb	4	; () banked
 10689  0013E0  5134               	movf	52,w,b	;volatile
 10690  0013E2  0B0F               	andlw	15
 10691  0013E4  0100               	movlb	0	; () banked
 10692  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10693  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10694  0013EA  0D01               	mullw	1
 10695  0013EC  0ECF               	movlw	low _ep_data_out
 10696  0013EE  24F3               	addwf	prodl,w,c
 10697  0013F0  6ED9               	movwf	fsr2l,c
 10698  0013F2  0E02               	movlw	high _ep_data_out
 10699  0013F4  D01C               	goto	L6
 10700  0013F6                     l1825:
 10701                           
 10702                           ;usb_device.c: 2842: else
 10703                           ;usb_device.c: 2843: {
 10704                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10705                           
 10706                           ; BSR set to: 0
 10707  0013F6  0104               	movlb	4	; () banked
 10708  0013F8  5134               	movf	52,w,b	;volatile
 10709  0013FA  0B0F               	andlw	15
 10710  0013FC  0100               	movlb	0	; () banked
 10711  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10712  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10713  001402  0D02               	mullw	2
 10714  001404  0EBB               	movlw	low _pBDTEntryIn
 10715  001406  24F3               	addwf	prodl,w,c
 10716  001408  6ED9               	movwf	fsr2l,c
 10717  00140A  0E00               	movlw	high _pBDTEntryIn
 10718  00140C  20F4               	addwfc	prodh,w,c
 10719  00140E  6EDA               	movwf	fsr2h,c
 10720  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10721  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10722                           
 10723                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10724  001418  0104               	movlb	4	; () banked
 10725  00141A  5134               	movf	52,w,b	;volatile
 10726  00141C  0B0F               	andlw	15
 10727  00141E  0100               	movlb	0	; () banked
 10728  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10729  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10730  001424  0D01               	mullw	1
 10731  001426  0ED2               	movlw	low _ep_data_in
 10732  001428  24F3               	addwf	prodl,w,c
 10733  00142A  6ED9               	movwf	fsr2l,c
 10734  00142C  0E02               	movlw	high _ep_data_in
 10735  00142E                     L6:
 10736  00142E  20F4               	addwfc	prodh,w,c
 10737  001430  6EDA               	movwf	fsr2h,c
 10738  001432  50DF               	movf	indf2,w,c
 10739  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10740                           
 10741                           ; BSR set to: 0
 10742                           ;usb_device.c: 2846: }
 10743                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10744                           
 10745                           ; BSR set to: 0
 10746  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10747  001438  D002               	goto	l1827
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;usb_device.c: 2853: {
 10751                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10752  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10753                           
 10754                           ;usb_device.c: 2855: }
 10755  00143C  D001               	goto	l1828
 10756  00143E                     l1827:
 10757                           
 10758                           ; BSR set to: 0
 10759                           ;usb_device.c: 2856: else
 10760                           ;usb_device.c: 2857: {
 10761                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10762                           
 10763                           ; BSR set to: 0
 10764  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10765  001440                     l1828:
 10766                           
 10767                           ; BSR set to: 0
 10768                           ;usb_device.c: 2859: }
 10769                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10770                           
 10771                           ; BSR set to: 0
 10772  001440  0104               	movlb	4	; () banked
 10773  001442  BF34               	btfsc	52,7,b	;volatile
 10774  001444  D00B               	goto	l1829
 10775                           
 10776                           ; BSR set to: 4
 10777                           ;usb_device.c: 2865: {
 10778                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10779  001446  5134               	movf	52,w,b	;volatile
 10780  001448  0B0F               	andlw	15
 10781  00144A  0100               	movlb	0	; () banked
 10782  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10783  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10784  001450  0D02               	mullw	2
 10785  001452  0E0E               	movlw	low _pBDTEntryOut
 10786  001454  24F3               	addwf	prodl,w,c
 10787  001456  6ED9               	movwf	fsr2l,c
 10788  001458  0E03               	movlw	high _pBDTEntryOut
 10789  00145A  D00B               	goto	L7
 10790  00145C                     l1829:
 10791                           
 10792                           ;usb_device.c: 2868: else
 10793                           ;usb_device.c: 2869: {
 10794                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10795                           
 10796                           ; BSR set to: 0
 10797  00145C  0104               	movlb	4	; () banked
 10798  00145E  5134               	movf	52,w,b	;volatile
 10799  001460  0B0F               	andlw	15
 10800  001462  0100               	movlb	0	; () banked
 10801  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10802  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10803  001468  0D02               	mullw	2
 10804  00146A  0EBB               	movlw	low _pBDTEntryIn
 10805  00146C  24F3               	addwf	prodl,w,c
 10806  00146E  6ED9               	movwf	fsr2l,c
 10807  001470  0E00               	movlw	high _pBDTEntryIn
 10808  001472                     L7:
 10809  001472  20F4               	addwfc	prodh,w,c
 10810  001474  6EDA               	movwf	fsr2h,c
 10811  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10812  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10813                           
 10814                           ; BSR set to: 0
 10815                           ;usb_device.c: 2871: }
 10816                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10817                           
 10818                           ; BSR set to: 0
 10819  00147E  0E03               	movlw	3
 10820  001480  0104               	movlb	4	; () banked
 10821  001482  1931               	xorwf	49,w,b	;volatile
 10822  001484  A4D8               	btfss	status,2,c
 10823  001486  D031               	goto	l1831
 10824                           
 10825                           ; BSR set to: 4
 10826                           ;usb_device.c: 2875: {
 10827                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10828  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10829  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10830  001490  0100               	movlb	0	; () banked
 10831  001492  AEDF               	btfss	indf2,7,c
 10832  001494  D01D               	goto	l1834
 10833                           
 10834                           ; BSR set to: 0
 10835                           ;usb_device.c: 2877: {
 10836                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10837  001496  0104               	movlb	4	; () banked
 10838  001498  BF34               	btfsc	52,7,b	;volatile
 10839  00149A  D00B               	goto	l1833
 10840                           
 10841                           ; BSR set to: 4
 10842                           ;usb_device.c: 2881: {
 10843                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10844  00149C  5134               	movf	52,w,b	;volatile
 10845  00149E  0B0F               	andlw	15
 10846  0014A0  0100               	movlb	0	; () banked
 10847  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10848  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10849  0014A6  0D01               	mullw	1
 10850  0014A8  0ECF               	movlw	low _ep_data_out
 10851  0014AA  24F3               	addwf	prodl,w,c
 10852  0014AC  6ED9               	movwf	fsr2l,c
 10853  0014AE  0E02               	movlw	high _ep_data_out
 10854  0014B0  D00B               	goto	L8
 10855  0014B2                     l1833:
 10856                           
 10857                           ;usb_device.c: 2884: else
 10858                           ;usb_device.c: 2885: {
 10859                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10860                           
 10861                           ; BSR set to: 2
 10862  0014B2  0104               	movlb	4	; () banked
 10863  0014B4  5134               	movf	52,w,b	;volatile
 10864  0014B6  0B0F               	andlw	15
 10865  0014B8  0100               	movlb	0	; () banked
 10866  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10867  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10868  0014BE  0D01               	mullw	1
 10869  0014C0  0ED2               	movlw	low _ep_data_in
 10870  0014C2  24F3               	addwf	prodl,w,c
 10871  0014C4  6ED9               	movwf	fsr2l,c
 10872  0014C6  0E02               	movlw	high _ep_data_in
 10873  0014C8                     L8:
 10874  0014C8  20F4               	addwfc	prodh,w,c
 10875  0014CA  6EDA               	movwf	fsr2h,c
 10876  0014CC  0102               	movlb	2	; () banked
 10877  0014CE  82DF               	bsf	indf2,1,c
 10878  0014D0                     l1834:
 10879                           
 10880                           ;usb_device.c: 2887: }
 10881                           ;usb_device.c: 2888: }
 10882                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 10883                           
 10884                           ; BSR set to: 2
 10885                           
 10886                           ; BSR set to: 2
 10887  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10888  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10889  0014D8  0E00               	movlw	0
 10890  0014DA  84DB               	bsf	plusw2,2,c
 10891                           
 10892                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 10893  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10894  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10895  0014E4  0E00               	movlw	0
 10896  0014E6  8EDB               	bsf	plusw2,7,c
 10897                           
 10898                           ;usb_device.c: 2893: }
 10899  0014E8  0012               	return	
 10900  0014EA                     l1831:
 10901                           
 10902                           ;usb_device.c: 2894: else
 10903                           ;usb_device.c: 2895: {
 10904                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10905  0014EA  0E04               	movlw	4
 10906  0014EC  0100               	movlb	0	; () banked
 10907  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 10911  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10912  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10913  0014F8  AEDF               	btfss	indf2,7,c
 10914  0014FA  D01B               	goto	l1836
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;usb_device.c: 2902: {
 10918                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 10919  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10920  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10921  001504  0E7F               	movlw	127
 10922  001506  16DF               	andwf	indf2,f,c
 10923                           
 10924                           ; BSR set to: 0
 10925                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 10926  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10927  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10928  001510  0E00               	movlw	0
 10929  001512  8CDB               	bsf	plusw2,6,c
 10930                           
 10931                           ; BSR set to: 0
 10932                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10933  001514  0E00               	movlw	0
 10934  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10935  001518  0E05               	movlw	5
 10936  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10937  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10938  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10939  001524  0E00               	movlw	0
 10940  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10941  001528  0E02               	movlw	2
 10942  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10943  00152C  EC81  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10944                           
 10945                           ;usb_device.c: 2908: }
 10946  001530  D006               	goto	l1837
 10947  001532                     l1836:
 10948                           
 10949                           ;usb_device.c: 2909: else
 10950                           ;usb_device.c: 2910: {
 10951                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 10952  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10953  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10954  00153A  0E00               	movlw	0
 10955  00153C  8CDB               	bsf	plusw2,6,c
 10956  00153E                     l1837:
 10957                           
 10958                           ;usb_device.c: 2913: }
 10959                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10960  00153E  0E04               	movlw	4
 10961  001540  0100               	movlb	0	; () banked
 10962  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10966  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 10967  001546  D006               	goto	u10760
 10968                           
 10969                           ; BSR set to: 0
 10970  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10971  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10972  001550  AEDF               	btfss	indf2,7,c
 10973  001552  D033               	goto	l1838
 10974  001554                     u10760:
 10975                           
 10976                           ; BSR set to: 0
 10977                           ;usb_device.c: 2924: {
 10978                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 10979  001554  0104               	movlb	4	; () banked
 10980  001556  BF34               	btfsc	52,7,b	;volatile
 10981  001558  D00B               	goto	l1841
 10982                           
 10983                           ; BSR set to: 4
 10984                           ;usb_device.c: 2926: {
 10985                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10986  00155A  5134               	movf	52,w,b	;volatile
 10987  00155C  0B0F               	andlw	15
 10988  00155E  0100               	movlb	0	; () banked
 10989  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10990  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10991  001564  0D01               	mullw	1
 10992  001566  0ECF               	movlw	low _ep_data_out
 10993  001568  24F3               	addwf	prodl,w,c
 10994  00156A  6ED9               	movwf	fsr2l,c
 10995  00156C  0E02               	movlw	high _ep_data_out
 10996  00156E  D00B               	goto	L9
 10997  001570                     l1841:
 10998                           
 10999                           ;usb_device.c: 2929: else
 11000                           ;usb_device.c: 2930: {
 11001                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11002                           
 11003                           ; BSR set to: 2
 11004  001570  0104               	movlb	4	; () banked
 11005  001572  5134               	movf	52,w,b	;volatile
 11006  001574  0B0F               	andlw	15
 11007  001576  0100               	movlb	0	; () banked
 11008  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11009  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11010  00157C  0D01               	mullw	1
 11011  00157E  0ED2               	movlw	low _ep_data_in
 11012  001580  24F3               	addwf	prodl,w,c
 11013  001582  6ED9               	movwf	fsr2l,c
 11014  001584  0E02               	movlw	high _ep_data_in
 11015  001586                     L9:
 11016  001586  20F4               	addwfc	prodh,w,c
 11017  001588  6EDA               	movwf	fsr2h,c
 11018  00158A  0102               	movlb	2	; () banked
 11019  00158C  92DF               	bcf	indf2,1,c
 11020                           
 11021                           ; BSR set to: 2
 11022                           ;usb_device.c: 2932: }
 11023                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11024                           
 11025                           ; BSR set to: 2
 11026  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11027  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11028  001596  0E3B               	movlw	59
 11029  001598  16DF               	andwf	indf2,f,c
 11030                           
 11031                           ; BSR set to: 2
 11032                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11033  00159A  0E00               	movlw	0
 11034  00159C  0100               	movlb	0	; () banked
 11035  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11036  0015A0  0E05               	movlw	5
 11037  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11038  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11039  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11040  0015AC  0E00               	movlw	0
 11041  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11042  0015B0  0E02               	movlw	2
 11043  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11044  0015B4  EC81  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11045                           
 11046                           ;usb_device.c: 2938: }
 11047  0015B8  D006               	goto	l1843
 11048  0015BA                     l1838:
 11049                           
 11050                           ;usb_device.c: 2939: else
 11051                           ;usb_device.c: 2940: {
 11052                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11053  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11054  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11055  0015C2  0E3B               	movlw	59
 11056  0015C4  16DF               	andwf	indf2,f,c
 11057  0015C6                     l1843:
 11058                           
 11059                           ;usb_device.c: 2943: }
 11060                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11061  0015C6  0104               	movlb	4	; () banked
 11062  0015C8  5134               	movf	52,w,b	;volatile
 11063  0015CA  0B0F               	andlw	15
 11064  0015CC  0100               	movlb	0	; () banked
 11065  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11066  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11067  0015D2  0D01               	mullw	1
 11068  0015D4  0E26               	movlw	38
 11069  0015D6  24F3               	addwf	prodl,w,c
 11070  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11071  0015DA  0E0F               	movlw	15
 11072  0015DC  20F4               	addwfc	prodh,w,c
 11073  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11074                           
 11075                           ; BSR set to: 0
 11076                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11077  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11078  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11079  0015E8  0EFE               	movlw	254
 11080  0015EA  16DF               	andwf	indf2,f,c
 11081                           
 11082                           ; BSR set to: 0
 11083  0015EC  0012               	return	
 11084  0015EE                     __end_of_USBStdFeatureReqHandler:
 11085                           	opt stack 0
 11086                           tosu	equ	0xFFF
 11087                           tosh	equ	0xFFE
 11088                           tosl	equ	0xFFD
 11089                           pclath	equ	0xFFA
 11090                           tblptru	equ	0xFF8
 11091                           tblptrh	equ	0xFF7
 11092                           tblptrl	equ	0xFF6
 11093                           tablat	equ	0xFF5
 11094                           prodh	equ	0xFF4
 11095                           prodl	equ	0xFF3
 11096                           intcon	equ	0xFF2
 11097                           intcon2	equ	0xFF1
 11098                           intcon3	equ	0xFF0
 11099                           indf0	equ	0xFEF
 11100                           postinc0	equ	0xFEE
 11101                           plusw0	equ	0xFEB
 11102                           fsr0h	equ	0xFEA
 11103                           fsr0l	equ	0xFE9
 11104                           wreg	equ	0xFE8
 11105                           postinc1	equ	0xFE6
 11106                           postdec1	equ	0xFE5
 11107                           plusw1	equ	0xFE3
 11108                           fsr1h	equ	0xFE2
 11109                           fsr1l	equ	0xFE1
 11110                           indf2	equ	0xFDF
 11111                           postinc2	equ	0xFDE
 11112                           postdec2	equ	0xFDD
 11113                           plusw2	equ	0xFDB
 11114                           fsr2h	equ	0xFDA
 11115                           fsr2l	equ	0xFD9
 11116                           status	equ	0xFD8
 11117                           
 11118 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11119 ;; Defined at:
 11120 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;  event           2   41[BANK0 ] enum E8349
 11123 ;;  pdata           2   43[BANK0 ] PTR void 
 11124 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11125 ;;  size            2   45[BANK0 ] unsigned int 
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;		None
 11128 ;; Return value:  Size  Location     Type
 11129 ;;                  1    wreg      unsigned char 
 11130 ;; Registers used:
 11131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/0
 11134 ;;		On exit  : 0/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11137 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11139 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11140 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11141 ;;Total ram usage:        8 bytes
 11142 ;; Hardware stack levels used:    1
 11143 ;; Hardware stack levels required when called:   14
 11144 ;; This function calls:
 11145 ;;		_CDCInitEP
 11146 ;;		_USBCheckCDCRequest
 11147 ;; This function is called by:
 11148 ;;		_USBDeviceTasks
 11149 ;;		_USBStdSetCfgHandler
 11150 ;;		_USBSuspend
 11151 ;;		_USBWakeFromSuspend
 11152 ;;		_USBCtrlTrfSetupHandler
 11153 ;;		_USBCheckStdRequest
 11154 ;;		_USBStdFeatureReqHandler
 11155 ;; This function uses a non-reentrant model
 11156 ;;
 11157                           
 11158                           	psect	text44
 11159  005102                     __ptext44:
 11160                           	opt stack 0
 11161  005102                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11162                           	opt stack 12
 11163                           
 11164                           ;usb_device_mgr.c: 106: switch( (int) event )
 11165                           
 11166                           ;incstack = 0
 11167  005102  D006               	goto	l1997
 11168  005104                     
 11169                           ;usb_device_mgr.c: 134: CDCInitEP();
 11170  005104  EC7E  F027         	call	_CDCInitEP	;wreg free
 11171                           
 11172                           ;usb_device_mgr.c: 142: break;
 11173                           
 11174                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11175                           
 11176                           ;usb_device_mgr.c: 139: break;
 11177  005108  0012               	return	
 11178  00510A                     
 11179                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11180  00510A  EC9B  F020         	call	_USBCheckCDCRequest	;wreg free
 11181                           
 11182                           ;usb_device_mgr.c: 163: }
 11183                           
 11184                           ;usb_device_mgr.c: 162: break;
 11185                           
 11186                           ;usb_device_mgr.c: 161: default:
 11187                           
 11188                           ;usb_device_mgr.c: 159: break;
 11189                           
 11190                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11191                           
 11192                           ;usb_device_mgr.c: 156: break;
 11193                           
 11194                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11195                           
 11196                           ;usb_device_mgr.c: 153: break;
 11197  00510E  0012               	return	
 11198  005110                     l1997:
 11199  005110  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11200  005114  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11201                           
 11202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11203                           ; Switch size 1, requested type "space"
 11204                           ; Number of cases is 2, Range of values is 0 to 127
 11205                           ; switch strategies available:
 11206                           ; Name         Instructions Cycles
 11207                           ; simple_byte            7     4 (average)
 11208                           ;	Chosen strategy is simple_byte
 11209  005118  0100               	movlb	0	; () banked
 11210  00511A  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11211  00511C  0A00               	xorlw	0	; case 0
 11212  00511E  B4D8               	btfsc	status,2,c
 11213  005120  D004               	goto	l15307
 11214  005122  0A7F               	xorlw	127	; case 127
 11215  005124  A4D8               	btfss	status,2,c
 11216  005126  0012               	return	
 11217  005128  D018               	goto	l15309
 11218  00512A                     l15307:
 11219                           
 11220                           ; BSR set to: 0
 11221                           ; Switch size 1, requested type "space"
 11222                           ; Number of cases is 8, Range of values is 1 to 117
 11223                           ; switch strategies available:
 11224                           ; Name         Instructions Cycles
 11225                           ; simple_byte           25    13 (average)
 11226                           ;	Chosen strategy is simple_byte
 11227  00512A  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11228  00512C  0A01               	xorlw	1	; case 1
 11229  00512E  B4D8               	btfsc	status,2,c
 11230  005130  D7E9               	goto	l2003
 11231  005132  0A03               	xorlw	3	; case 2
 11232  005134  B4D8               	btfsc	status,2,c
 11233  005136  0012               	return	
 11234  005138  0A01               	xorlw	1	; case 3
 11235  00513A  B4D8               	btfsc	status,2,c
 11236  00513C  D7E6               	goto	l2005
 11237  00513E  0A06               	xorlw	6	; case 5
 11238  005140  B4D8               	btfsc	status,2,c
 11239  005142  0012               	return	
 11240  005144  0A77               	xorlw	119	; case 114
 11241  005146  B4D8               	btfsc	status,2,c
 11242  005148  0012               	return	
 11243  00514A  0A01               	xorlw	1	; case 115
 11244  00514C  B4D8               	btfsc	status,2,c
 11245  00514E  0012               	return	
 11246  005150  0A07               	xorlw	7	; case 116
 11247  005152  B4D8               	btfsc	status,2,c
 11248  005154  0012               	return	
 11249  005156  0A01               	xorlw	1	; case 117
 11250  005158  0012               	return	
 11251  00515A                     l15309:
 11252                           
 11253                           ; BSR set to: 0
 11254                           ; Switch size 1, requested type "space"
 11255                           ; Number of cases is 1, Range of values is 255 to 255
 11256                           ; switch strategies available:
 11257                           ; Name         Instructions Cycles
 11258                           ; simple_byte            4     3 (average)
 11259                           ;	Chosen strategy is simple_byte
 11260  00515A  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11261  00515C  0AFF               	xorlw	255	; case 255
 11262  00515E  0012               	return	
 11263  005160                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11264                           	opt stack 0
 11265                           tosu	equ	0xFFF
 11266                           tosh	equ	0xFFE
 11267                           tosl	equ	0xFFD
 11268                           pclath	equ	0xFFA
 11269                           tblptru	equ	0xFF8
 11270                           tblptrh	equ	0xFF7
 11271                           tblptrl	equ	0xFF6
 11272                           tablat	equ	0xFF5
 11273                           prodh	equ	0xFF4
 11274                           prodl	equ	0xFF3
 11275                           intcon	equ	0xFF2
 11276                           intcon2	equ	0xFF1
 11277                           intcon3	equ	0xFF0
 11278                           indf0	equ	0xFEF
 11279                           postinc0	equ	0xFEE
 11280                           plusw0	equ	0xFEB
 11281                           fsr0h	equ	0xFEA
 11282                           fsr0l	equ	0xFE9
 11283                           wreg	equ	0xFE8
 11284                           postinc1	equ	0xFE6
 11285                           postdec1	equ	0xFE5
 11286                           plusw1	equ	0xFE3
 11287                           fsr1h	equ	0xFE2
 11288                           fsr1l	equ	0xFE1
 11289                           indf2	equ	0xFDF
 11290                           postinc2	equ	0xFDE
 11291                           postdec2	equ	0xFDD
 11292                           plusw2	equ	0xFDB
 11293                           fsr2h	equ	0xFDA
 11294                           fsr2l	equ	0xFD9
 11295                           status	equ	0xFD8
 11296                           
 11297 ;; *************** function _USBCheckCDCRequest *****************
 11298 ;; Defined at:
 11299 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;		None
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;		None
 11304 ;; Return value:  Size  Location     Type
 11305 ;;                  1    wreg      void 
 11306 ;; Registers used:
 11307 ;;		wreg, status,2, status,0
 11308 ;; Tracked objects:
 11309 ;;		On entry : 0/0
 11310 ;;		On exit  : 0/0
 11311 ;;		Unchanged: 0/0
 11312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11317 ;;Total ram usage:        0 bytes
 11318 ;; Hardware stack levels used:    1
 11319 ;; Hardware stack levels required when called:   11
 11320 ;; This function calls:
 11321 ;;		Nothing
 11322 ;; This function is called by:
 11323 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11324 ;; This function uses a non-reentrant model
 11325 ;;
 11326                           
 11327                           	psect	text45
 11328  004136                     __ptext45:
 11329                           	opt stack 0
 11330  004136                     _USBCheckCDCRequest:
 11331                           	opt stack 14
 11332                           
 11333                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11334                           
 11335                           ;incstack = 0
 11336  004136  0104               	movlb	4	; () banked
 11337  004138  5130               	movf	48,w,b	;volatile
 11338  00413A  0B1F               	andlw	31
 11339  00413C  06E8               	decf	wreg,f,c
 11340  00413E  A4D8               	btfss	status,2,c
 11341  004140  0012               	return	
 11342                           
 11343                           ; BSR set to: 4
 11344                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11345                           
 11346                           ; BSR set to: 4
 11347                           
 11348                           ; BSR set to: 4
 11349  004142  3930               	swapf	48,w,b	;volatile
 11350  004144  32E8               	rrcf	wreg,f,c
 11351  004146  0B03               	andlw	3
 11352  004148  06E8               	decf	wreg,f,c
 11353  00414A  A4D8               	btfss	status,2,c
 11354  00414C  0012               	return	
 11355                           
 11356                           ; BSR set to: 4
 11357                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11358                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11359                           
 11360                           ; BSR set to: 4
 11361                           
 11362                           ; BSR set to: 4
 11363  00414E  5134               	movf	52,w,b	;volatile
 11364  004150  B4D8               	btfsc	status,2,c
 11365  004152  D037               	goto	l1899
 11366                           
 11367                           ; BSR set to: 4
 11368  004154  0534               	decf	52,w,b	;volatile
 11369  004156  A4D8               	btfss	status,2,c
 11370  004158  0012               	return	
 11371  00415A  D033               	goto	l1899
 11372  00415C                     
 11373                           ; BSR set to: 4
 11374                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11375                           
 11376                           ; BSR set to: 4
 11377  00415C  0E7B               	movlw	low _dummy_encapsulated_cmd_response
 11378  00415E  0100               	movlb	0	; () banked
 11379  004160  6FB5               	movwf	_inPipes& (0+255),b
 11380  004162  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11381  004164  6FB6               	movwf	(_inPipes+1)& (0+255),b
 11382                           
 11383                           ; BSR set to: 0
 11384                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11385  004166  0E00               	movlw	0
 11386  004168  6FBA               	movwf	(_inPipes+5)& (0+255),b
 11387  00416A  0E08               	movlw	8
 11388  00416C  6FB9               	movwf	(_inPipes+4)& (0+255),b
 11389                           
 11390                           ; BSR set to: 0
 11391                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11392  00416E  81B8               	bsf	(_inPipes+3)& (0+255),0,b
 11393                           
 11394                           ; BSR set to: 0
 11395                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11396  004170  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 11397                           
 11398                           ;usb_device_cdc.c: 178: break;
 11399  004172  0012               	return	
 11400  004174                     
 11401                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11402                           
 11403                           ; BSR set to: 0
 11404  004174  0E7B               	movlw	low _dummy_encapsulated_cmd_response
 11405  004176  0100               	movlb	0	; () banked
 11406  004178  6FB5               	movwf	_inPipes& (0+255),b
 11407  00417A  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11408  00417C  6FB6               	movwf	(_inPipes+1)& (0+255),b
 11409                           
 11410                           ; BSR set to: 0
 11411                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11412  00417E  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 11413                           
 11414                           ;usb_device_cdc.c: 183: break;
 11415  004180  0012               	return	
 11416  004182                     l1903:
 11417                           
 11418                           ; BSR set to: 4
 11419                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11420  004182  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11421  004186  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11422                           
 11423                           ; BSR set to: 4
 11424                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11425  00418A  0E83               	movlw	low _line_coding
 11426  00418C  0101               	movlb	1	; () banked
 11427  00418E  6FC9               	movwf	_outPipes& (0+255),b
 11428  004190  0E03               	movlw	high _line_coding
 11429  004192  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11430                           
 11431                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11432  004194  0E00               	movlw	0
 11433  004196  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11434  004198  0E00               	movlw	0
 11435  00419A  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11436                           
 11437                           ; BSR set to: 1
 11438                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11439  00419C  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11440                           
 11441                           ;usb_device_cdc.c: 192: break;
 11442  00419E  0012               	return	
 11443  0041A0                     
 11444                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11445                           
 11446                           ; BSR set to: 1
 11447  0041A0  0E83               	movlw	low _line_coding
 11448  0041A2  0100               	movlb	0	; () banked
 11449  0041A4  6FB5               	movwf	_inPipes& (0+255),b
 11450  0041A6  0E03               	movlw	high _line_coding
 11451  0041A8  6FB6               	movwf	(_inPipes+1)& (0+255),b
 11452                           
 11453                           ; BSR set to: 0
 11454  0041AA  0E00               	movlw	0
 11455  0041AC  6FBA               	movwf	(_inPipes+5)& (0+255),b
 11456  0041AE  0E07               	movlw	7
 11457  0041B0  6FB9               	movwf	(_inPipes+4)& (0+255),b
 11458                           
 11459                           ; BSR set to: 0
 11460  0041B2  0EC1               	movlw	193
 11461  0041B4  6FB8               	movwf	(_inPipes+3)& (0+255),b
 11462                           
 11463                           ;usb_device_cdc.c: 199: break;
 11464  0041B6  0012               	return	
 11465  0041B8                     l1905:
 11466                           
 11467                           ; BSR set to: 4
 11468                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11469  0041B8  C432 F1DE          	movff	1074,_control_signal_bitmap	;volatile
 11470                           
 11471                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11472  0041BC  0100               	movlb	0	; () banked
 11473  0041BE  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 11474                           
 11475                           ; BSR set to: 0
 11476                           ;usb_device_cdc.c: 261: }
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;usb_device_cdc.c: 260: break;
 11480                           
 11481                           ;usb_device_cdc.c: 259: default:
 11482                           
 11483                           ;usb_device_cdc.c: 235: break;
 11484  0041C0  0012               	return	
 11485  0041C2                     l1899:
 11486                           
 11487                           ; BSR set to: 0
 11488  0041C2  0104               	movlb	4	; () banked
 11489  0041C4  5131               	movf	49,w,b	;volatile
 11490                           
 11491                           ; Switch size 1, requested type "space"
 11492                           ; Number of cases is 5, Range of values is 0 to 34
 11493                           ; switch strategies available:
 11494                           ; Name         Instructions Cycles
 11495                           ; simple_byte           16     9 (average)
 11496                           ;	Chosen strategy is simple_byte
 11497  0041C6  0A00               	xorlw	0	; case 0
 11498  0041C8  B4D8               	btfsc	status,2,c
 11499  0041CA  D7C8               	goto	l1900
 11500  0041CC  0A01               	xorlw	1	; case 1
 11501  0041CE  B4D8               	btfsc	status,2,c
 11502  0041D0  D7D1               	goto	l1902
 11503  0041D2  0A21               	xorlw	33	; case 32
 11504  0041D4  B4D8               	btfsc	status,2,c
 11505  0041D6  D7D5               	goto	l1903
 11506  0041D8  0A01               	xorlw	1	; case 33
 11507  0041DA  B4D8               	btfsc	status,2,c
 11508  0041DC  D7E1               	goto	l1904
 11509  0041DE  0A03               	xorlw	3	; case 34
 11510  0041E0  A4D8               	btfss	status,2,c
 11511  0041E2  0012               	return	
 11512  0041E4  D7E9               	goto	l1905
 11513  0041E6                     __end_of_USBCheckCDCRequest:
 11514                           	opt stack 0
 11515                           tosu	equ	0xFFF
 11516                           tosh	equ	0xFFE
 11517                           tosl	equ	0xFFD
 11518                           pclath	equ	0xFFA
 11519                           tblptru	equ	0xFF8
 11520                           tblptrh	equ	0xFF7
 11521                           tblptrl	equ	0xFF6
 11522                           tablat	equ	0xFF5
 11523                           prodh	equ	0xFF4
 11524                           prodl	equ	0xFF3
 11525                           intcon	equ	0xFF2
 11526                           intcon2	equ	0xFF1
 11527                           intcon3	equ	0xFF0
 11528                           indf0	equ	0xFEF
 11529                           postinc0	equ	0xFEE
 11530                           plusw0	equ	0xFEB
 11531                           fsr0h	equ	0xFEA
 11532                           fsr0l	equ	0xFE9
 11533                           wreg	equ	0xFE8
 11534                           postinc1	equ	0xFE6
 11535                           postdec1	equ	0xFE5
 11536                           plusw1	equ	0xFE3
 11537                           fsr1h	equ	0xFE2
 11538                           fsr1l	equ	0xFE1
 11539                           indf2	equ	0xFDF
 11540                           postinc2	equ	0xFDE
 11541                           postdec2	equ	0xFDD
 11542                           plusw2	equ	0xFDB
 11543                           fsr2h	equ	0xFDA
 11544                           fsr2l	equ	0xFD9
 11545                           status	equ	0xFD8
 11546                           
 11547 ;; *************** function _CDCInitEP *****************
 11548 ;; Defined at:
 11549 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11550 ;; Parameters:    Size  Location     Type
 11551 ;;		None
 11552 ;; Auto vars:     Size  Location     Type
 11553 ;;		None
 11554 ;; Return value:  Size  Location     Type
 11555 ;;                  1    wreg      void 
 11556 ;; Registers used:
 11557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11558 ;; Tracked objects:
 11559 ;;		On entry : 0/0
 11560 ;;		On exit  : 0/0
 11561 ;;		Unchanged: 0/0
 11562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11567 ;;Total ram usage:        0 bytes
 11568 ;; Hardware stack levels used:    1
 11569 ;; Hardware stack levels required when called:   13
 11570 ;; This function calls:
 11571 ;;		_USBEnableEndpoint
 11572 ;;		_USBTransferOnePacket
 11573 ;; This function is called by:
 11574 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11575 ;; This function uses a non-reentrant model
 11576 ;;
 11577                           
 11578                           	psect	text46
 11579  004EFC                     __ptext46:
 11580                           	opt stack 0
 11581  004EFC                     _CDCInitEP:
 11582                           	opt stack 12
 11583                           
 11584                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11585                           
 11586                           ;incstack = 0
 11587  004EFC  0E80               	movlw	128
 11588  004EFE  0103               	movlb	3	; () banked
 11589  004F00  6F83               	movwf	_line_coding& (0+255),b
 11590  004F02  0E25               	movlw	37
 11591  004F04  6F84               	movwf	(_line_coding+1)& (0+255),b
 11592  004F06  0E00               	movlw	0
 11593  004F08  6F85               	movwf	(_line_coding+2)& (0+255),b
 11594  004F0A  0E00               	movlw	0
 11595  004F0C  6F86               	movwf	(_line_coding+3)& (0+255),b
 11596                           
 11597                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11598  004F0E  0E00               	movlw	0
 11599  004F10  6F87               	movwf	(_line_coding+4)& (0+255),b
 11600                           
 11601                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11602  004F12  0E00               	movlw	0
 11603  004F14  6F88               	movwf	(_line_coding+5)& (0+255),b
 11604                           
 11605                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11606  004F16  0E08               	movlw	8
 11607  004F18  6F89               	movwf	(_line_coding+6)& (0+255),b
 11608                           
 11609                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11610  004F1A  0E00               	movlw	0
 11611  004F1C  0100               	movlb	0	; () banked
 11612  004F1E  6FCB               	movwf	_cdc_rx_len& (0+255),b
 11613                           
 11614                           ; BSR set to: 0
 11615                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11616  004F20  0E1A               	movlw	26
 11617  004F22  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11618  004F24  0E01               	movlw	1
 11619  004F26  EC09  F02C         	call	_USBEnableEndpoint
 11620                           
 11621                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11622  004F2A  0E1E               	movlw	30
 11623  004F2C  0100               	movlb	0	; () banked
 11624  004F2E  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11625  004F30  0E02               	movlw	2
 11626  004F32  EC09  F02C         	call	_USBEnableEndpoint
 11627                           
 11628                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11629  004F36  0E00               	movlw	0
 11630  004F38  0100               	movlb	0	; () banked
 11631  004F3A  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11632  004F3C  0E50               	movlw	low _cdc_data_rx
 11633  004F3E  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11634  004F40  0E05               	movlw	high _cdc_data_rx
 11635  004F42  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11636  004F44  0E40               	movlw	64
 11637  004F46  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11638  004F48  0E02               	movlw	2
 11639  004F4A  ECE3  F01F         	call	_USBTransferOnePacket
 11640  004F4E  C07D  F0C1         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11641  004F52  C07E  F0C2         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11642                           
 11643                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11644  004F56  0E00               	movlw	0
 11645  004F58  0101               	movlb	1	; () banked
 11646  004F5A  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11647  004F5C  0E00               	movlw	0
 11648  004F5E  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11649                           
 11650                           ; BSR set to: 1
 11651                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11652  004F60  0E00               	movlw	0
 11653  004F62  0100               	movlb	0	; () banked
 11654  004F64  6FCA               	movwf	_cdc_trf_state& (0+255),b
 11655                           
 11656                           ; BSR set to: 0
 11657  004F66  0012               	return		;funcret
 11658  004F68                     __end_of_CDCInitEP:
 11659                           	opt stack 0
 11660                           tosu	equ	0xFFF
 11661                           tosh	equ	0xFFE
 11662                           tosl	equ	0xFFD
 11663                           pclath	equ	0xFFA
 11664                           tblptru	equ	0xFF8
 11665                           tblptrh	equ	0xFF7
 11666                           tblptrl	equ	0xFF6
 11667                           tablat	equ	0xFF5
 11668                           prodh	equ	0xFF4
 11669                           prodl	equ	0xFF3
 11670                           intcon	equ	0xFF2
 11671                           intcon2	equ	0xFF1
 11672                           intcon3	equ	0xFF0
 11673                           indf0	equ	0xFEF
 11674                           postinc0	equ	0xFEE
 11675                           plusw0	equ	0xFEB
 11676                           fsr0h	equ	0xFEA
 11677                           fsr0l	equ	0xFE9
 11678                           wreg	equ	0xFE8
 11679                           postinc1	equ	0xFE6
 11680                           postdec1	equ	0xFE5
 11681                           plusw1	equ	0xFE3
 11682                           fsr1h	equ	0xFE2
 11683                           fsr1l	equ	0xFE1
 11684                           indf2	equ	0xFDF
 11685                           postinc2	equ	0xFDE
 11686                           postdec2	equ	0xFDD
 11687                           plusw2	equ	0xFDB
 11688                           fsr2h	equ	0xFDA
 11689                           fsr2l	equ	0xFD9
 11690                           status	equ	0xFD8
 11691                           
 11692 ;; *************** function _USBEnableEndpoint *****************
 11693 ;; Defined at:
 11694 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11695 ;; Parameters:    Size  Location     Type
 11696 ;;  ep              1    wreg     unsigned char 
 11697 ;;  options         1   37[BANK0 ] unsigned char 
 11698 ;; Auto vars:     Size  Location     Type
 11699 ;;  ep              1   40[BANK0 ] unsigned char 
 11700 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11701 ;;		 -> UEP0(1), 
 11702 ;; Return value:  Size  Location     Type
 11703 ;;                  1    wreg      void 
 11704 ;; Registers used:
 11705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11706 ;; Tracked objects:
 11707 ;;		On entry : 0/0
 11708 ;;		On exit  : 0/0
 11709 ;;		Unchanged: 0/0
 11710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11711 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11712 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11714 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11715 ;;Total ram usage:        4 bytes
 11716 ;; Hardware stack levels used:    1
 11717 ;; Hardware stack levels required when called:   12
 11718 ;; This function calls:
 11719 ;;		_USBConfigureEndpoint
 11720 ;; This function is called by:
 11721 ;;		_CDCInitEP
 11722 ;; This function uses a non-reentrant model
 11723 ;;
 11724                           
 11725                           	psect	text47
 11726  005812                     __ptext47:
 11727                           	opt stack 0
 11728  005812                     _USBEnableEndpoint:
 11729                           	opt stack 12
 11730                           
 11731                           ; BSR set to: 0
 11732                           ;incstack = 0
 11733                           ;USBEnableEndpoint@ep stored from wreg
 11734  005812  0100               	movlb	0	; () banked
 11735  005814  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11736                           
 11737                           ;usb_device.c: 898: unsigned char* p;
 11738                           ;usb_device.c: 902: if(options & 0x04)
 11739  005816  0100               	movlb	0	; () banked
 11740  005818  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11741  00581A  D005               	goto	l1640
 11742                           
 11743                           ; BSR set to: 0
 11744                           ;usb_device.c: 903: {
 11745                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11746  00581C  0E00               	movlw	0
 11747  00581E  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11748  005820  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11749  005822  EC85  F023         	call	_USBConfigureEndpoint
 11750  005826                     l1640:
 11751                           
 11752                           ;usb_device.c: 905: }
 11753                           ;usb_device.c: 906: if(options & 0x02)
 11754  005826  0100               	movlb	0	; () banked
 11755  005828  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11756  00582A  D005               	goto	l1641
 11757                           
 11758                           ; BSR set to: 0
 11759                           ;usb_device.c: 907: {
 11760                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11761  00582C  0E01               	movlw	1
 11762  00582E  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11763  005830  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11764  005832  EC85  F023         	call	_USBConfigureEndpoint
 11765  005836                     l1641:
 11766                           
 11767                           ;usb_device.c: 909: }
 11768                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11769  005836  0100               	movlb	0	; () banked
 11770  005838  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11771  00583A  0D01               	mullw	1
 11772  00583C  0E26               	movlw	38
 11773  00583E  24F3               	addwf	prodl,w,c
 11774  005840  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11775  005842  0E0F               	movlw	15
 11776  005844  20F4               	addwfc	prodh,w,c
 11777  005846  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11778                           
 11779                           ; BSR set to: 0
 11780                           ;usb_device.c: 919: *p = options;
 11781  005848  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11782  00584C  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11783  005850  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11784                           
 11785                           ; BSR set to: 0
 11786  005854  0012               	return		;funcret
 11787  005856                     __end_of_USBEnableEndpoint:
 11788                           	opt stack 0
 11789                           tosu	equ	0xFFF
 11790                           tosh	equ	0xFFE
 11791                           tosl	equ	0xFFD
 11792                           pclath	equ	0xFFA
 11793                           tblptru	equ	0xFF8
 11794                           tblptrh	equ	0xFF7
 11795                           tblptrl	equ	0xFF6
 11796                           tablat	equ	0xFF5
 11797                           prodh	equ	0xFF4
 11798                           prodl	equ	0xFF3
 11799                           intcon	equ	0xFF2
 11800                           intcon2	equ	0xFF1
 11801                           intcon3	equ	0xFF0
 11802                           indf0	equ	0xFEF
 11803                           postinc0	equ	0xFEE
 11804                           plusw0	equ	0xFEB
 11805                           fsr0h	equ	0xFEA
 11806                           fsr0l	equ	0xFE9
 11807                           wreg	equ	0xFE8
 11808                           postinc1	equ	0xFE6
 11809                           postdec1	equ	0xFE5
 11810                           plusw1	equ	0xFE3
 11811                           fsr1h	equ	0xFE2
 11812                           fsr1l	equ	0xFE1
 11813                           indf2	equ	0xFDF
 11814                           postinc2	equ	0xFDE
 11815                           postdec2	equ	0xFDD
 11816                           plusw2	equ	0xFDB
 11817                           fsr2h	equ	0xFDA
 11818                           fsr2l	equ	0xFD9
 11819                           status	equ	0xFD8
 11820                           
 11821 ;; *************** function _USBConfigureEndpoint *****************
 11822 ;; Defined at:
 11823 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11824 ;; Parameters:    Size  Location     Type
 11825 ;;  EPNum           1    wreg     unsigned char 
 11826 ;;  direction       1   29[BANK0 ] unsigned char 
 11827 ;; Auto vars:     Size  Location     Type
 11828 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11829 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11830 ;;		 -> BDT(48), 
 11831 ;; Return value:  Size  Location     Type
 11832 ;;                  1    wreg      void 
 11833 ;; Registers used:
 11834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11835 ;; Tracked objects:
 11836 ;;		On entry : 0/0
 11837 ;;		On exit  : 0/0
 11838 ;;		Unchanged: 0/0
 11839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11840 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11841 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11842 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11843 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11844 ;;Total ram usage:        8 bytes
 11845 ;; Hardware stack levels used:    1
 11846 ;; Hardware stack levels required when called:   11
 11847 ;; This function calls:
 11848 ;;		Nothing
 11849 ;; This function is called by:
 11850 ;;		_USBEnableEndpoint
 11851 ;; This function uses a non-reentrant model
 11852 ;;
 11853                           
 11854                           	psect	text48
 11855  00470A                     __ptext48:
 11856                           	opt stack 0
 11857  00470A                     _USBConfigureEndpoint:
 11858                           	opt stack 12
 11859                           
 11860                           ; BSR set to: 0
 11861                           ;incstack = 0
 11862                           ;USBConfigureEndpoint@EPNum stored from wreg
 11863  00470A  0100               	movlb	0	; () banked
 11864  00470C  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11865                           
 11866                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11867                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11868  00470E  0E00               	movlw	0
 11869  004710  0100               	movlb	0	; () banked
 11870  004712  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 11871  004714  0E04               	movlw	4
 11872  004716  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 11873                           
 11874                           ; BSR set to: 0
 11875                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 11876  004718  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11877  00471A  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 11878  00471C  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 11879  00471E  90D8               	bcf	status,0,c
 11880  004720  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 11881  004722  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 11882  004724  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11883  004726  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 11884  004728  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 11885  00472A  90D8               	bcf	status,0,c
 11886  00472C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11887  00472E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11888  004730  90D8               	bcf	status,0,c
 11889  004732  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11890  004734  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11891  004736  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 11892  004738  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11893  00473A  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 11894  00473C  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11895  00473E  90D8               	bcf	status,0,c
 11896  004740  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11897  004742  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11898  004744  90D8               	bcf	status,0,c
 11899  004746  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11900  004748  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11901  00474A  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 11902  00474C  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 11903  00474E  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 11904  004750  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 11905                           
 11906                           ; BSR set to: 0
 11907                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 11908  004752  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11909  004756  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11910  00475A  9EDF               	bcf	indf2,7,c
 11911                           
 11912                           ; BSR set to: 0
 11913                           ;usb_device.c: 1575: if(direction == 0)
 11914  00475C  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11915  00475E  A4D8               	btfss	status,2,c
 11916  004760  D007               	goto	l1676
 11917                           
 11918                           ; BSR set to: 0
 11919                           ;usb_device.c: 1576: {
 11920                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 11921  004762  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11922  004764  0D02               	mullw	2
 11923  004766  0E0E               	movlw	low _pBDTEntryOut
 11924  004768  24F3               	addwf	prodl,w,c
 11925  00476A  6ED9               	movwf	fsr2l,c
 11926  00476C  0E03               	movlw	high _pBDTEntryOut
 11927  00476E  D006               	goto	L10
 11928  004770                     l1676:
 11929                           
 11930                           ; BSR set to: 0
 11931                           ;usb_device.c: 1579: else
 11932                           ;usb_device.c: 1580: {
 11933                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 11934                           
 11935                           ; BSR set to: 0
 11936  004770  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11937  004772  0D02               	mullw	2
 11938  004774  0EBB               	movlw	low _pBDTEntryIn
 11939  004776  24F3               	addwf	prodl,w,c
 11940  004778  6ED9               	movwf	fsr2l,c
 11941  00477A  0E00               	movlw	high _pBDTEntryIn
 11942  00477C                     L10:
 11943  00477C  20F4               	addwfc	prodh,w,c
 11944  00477E  6EDA               	movwf	fsr2h,c
 11945  004780  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 11946  004784  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 11947                           
 11948                           ; BSR set to: 0
 11949                           ;usb_device.c: 1582: }
 11950                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 11951                           
 11952                           ; BSR set to: 0
 11953  004788  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11954  00478C  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11955  004790  9CDF               	bcf	indf2,6,c
 11956                           
 11957                           ; BSR set to: 0
 11958                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 11959  004792  EE20 F004          	lfsr	2,4
 11960  004796  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 11961  004798  26D9               	addwf	fsr2l,f,c
 11962  00479A  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 11963  00479C  22DA               	addwfc	fsr2h,f,c
 11964  00479E  8CDF               	bsf	indf2,6,c
 11965                           
 11966                           ; BSR set to: 0
 11967  0047A0  0012               	return		;funcret
 11968  0047A2                     __end_of_USBConfigureEndpoint:
 11969                           	opt stack 0
 11970                           tosu	equ	0xFFF
 11971                           tosh	equ	0xFFE
 11972                           tosl	equ	0xFFD
 11973                           pclath	equ	0xFFA
 11974                           tblptru	equ	0xFF8
 11975                           tblptrh	equ	0xFF7
 11976                           tblptrl	equ	0xFF6
 11977                           tablat	equ	0xFF5
 11978                           prodh	equ	0xFF4
 11979                           prodl	equ	0xFF3
 11980                           intcon	equ	0xFF2
 11981                           intcon2	equ	0xFF1
 11982                           intcon3	equ	0xFF0
 11983                           indf0	equ	0xFEF
 11984                           postinc0	equ	0xFEE
 11985                           plusw0	equ	0xFEB
 11986                           fsr0h	equ	0xFEA
 11987                           fsr0l	equ	0xFE9
 11988                           wreg	equ	0xFE8
 11989                           postinc1	equ	0xFE6
 11990                           postdec1	equ	0xFE5
 11991                           plusw1	equ	0xFE3
 11992                           fsr1h	equ	0xFE2
 11993                           fsr1l	equ	0xFE1
 11994                           indf2	equ	0xFDF
 11995                           postinc2	equ	0xFDE
 11996                           postdec2	equ	0xFDD
 11997                           plusw2	equ	0xFDB
 11998                           fsr2h	equ	0xFDA
 11999                           fsr2l	equ	0xFD9
 12000                           status	equ	0xFD8
 12001                           
 12002 ;; *************** function _USBCtrlTrfOutHandler *****************
 12003 ;; Defined at:
 12004 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12005 ;; Parameters:    Size  Location     Type
 12006 ;;		None
 12007 ;; Auto vars:     Size  Location     Type
 12008 ;;		None
 12009 ;; Return value:  Size  Location     Type
 12010 ;;                  1    wreg      void 
 12011 ;; Registers used:
 12012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12013 ;; Tracked objects:
 12014 ;;		On entry : 0/0
 12015 ;;		On exit  : 0/0
 12016 ;;		Unchanged: 0/0
 12017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12022 ;;Total ram usage:        0 bytes
 12023 ;; Hardware stack levels used:    1
 12024 ;; Hardware stack levels required when called:   13
 12025 ;; This function calls:
 12026 ;;		_USBCtrlTrfRxService
 12027 ;; This function is called by:
 12028 ;;		_USBCtrlEPService
 12029 ;; This function uses a non-reentrant model
 12030 ;;
 12031                           
 12032                           	psect	text49
 12033  004FD4                     __ptext49:
 12034                           	opt stack 0
 12035  004FD4                     _USBCtrlTrfOutHandler:
 12036                           	opt stack 12
 12037                           
 12038                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;incstack = 0
 12042  004FD4  0E02               	movlw	2
 12043  004FD6  0100               	movlb	0	; () banked
 12044  004FD8  19CE               	xorwf	_controlTransferState& (0+255),w,b
 12045  004FDA  A4D8               	btfss	status,2,c
 12046  004FDC  D003               	goto	l1782
 12047                           
 12048                           ; BSR set to: 0
 12049                           ;usb_device.c: 2558: {
 12050                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12051  004FDE  ECC2  F017         	call	_USBCtrlTrfRxService	;wreg free
 12052                           
 12053                           ;usb_device.c: 2560: }
 12054  004FE2  0012               	return	
 12055  004FE4                     l1782:
 12056                           
 12057                           ;usb_device.c: 2561: else
 12058                           ;usb_device.c: 2562: {
 12059                           ;usb_device.c: 2565: controlTransferState = 0;
 12060  004FE4  0E00               	movlw	0
 12061  004FE6  0100               	movlb	0	; () banked
 12062  004FE8  6FCE               	movwf	_controlTransferState& (0+255),b
 12063                           
 12064                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12065  004FEA  0101               	movlb	1	; () banked
 12066  004FEC  51E1               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12067  004FEE  A4D8               	btfss	status,2,c
 12068  004FF0  D020               	goto	l1784
 12069                           
 12070                           ; BSR set to: 1
 12071                           ;usb_device.c: 2573: {
 12072                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12073  004FF2  0100               	movlb	0	; () banked
 12074  004FF4  EE20 F001          	lfsr	2,1
 12075  004FF8  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12076  004FFA  26D9               	addwf	fsr2l,f,c
 12077  004FFC  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12078  004FFE  22DA               	addwfc	fsr2h,f,c
 12079  005000  0E08               	movlw	8
 12080  005002  6EDF               	movwf	indf2,c
 12081                           
 12082                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12083  005004  EE20 F002          	lfsr	2,2
 12084  005008  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12085  00500A  26D9               	addwf	fsr2l,f,c
 12086  00500C  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12087  00500E  22DA               	addwfc	fsr2h,f,c
 12088  005010  0E30               	movlw	48
 12089  005012  6EDE               	movwf	postinc2,c
 12090  005014  0E04               	movlw	4
 12091  005016  6EDD               	movwf	postdec2,c
 12092                           
 12093                           ; BSR set to: 0
 12094                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12095  005018  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12096  00501C  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12097  005020  0E0C               	movlw	12
 12098  005022  6EDF               	movwf	indf2,c
 12099                           
 12100                           ; BSR set to: 0
 12101                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12102  005024  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12103  005028  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12104  00502C  0E00               	movlw	0
 12105  00502E  8EDB               	bsf	plusw2,7,c
 12106                           
 12107                           ;usb_device.c: 2578: }
 12108  005030  0012               	return	
 12109  005032                     l1784:
 12110                           
 12111                           ;usb_device.c: 2579: else
 12112                           ;usb_device.c: 2580: {
 12113                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12114                           
 12115                           ; BSR set to: 0
 12116  005032  0E00               	movlw	0
 12117  005034  0101               	movlb	1	; () banked
 12118  005036  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12119                           
 12120                           ; BSR set to: 1
 12121  005038  0012               	return	
 12122  00503A                     __end_of_USBCtrlTrfOutHandler:
 12123                           	opt stack 0
 12124                           tosu	equ	0xFFF
 12125                           tosh	equ	0xFFE
 12126                           tosl	equ	0xFFD
 12127                           pclath	equ	0xFFA
 12128                           tblptru	equ	0xFF8
 12129                           tblptrh	equ	0xFF7
 12130                           tblptrl	equ	0xFF6
 12131                           tablat	equ	0xFF5
 12132                           prodh	equ	0xFF4
 12133                           prodl	equ	0xFF3
 12134                           intcon	equ	0xFF2
 12135                           intcon2	equ	0xFF1
 12136                           intcon3	equ	0xFF0
 12137                           indf0	equ	0xFEF
 12138                           postinc0	equ	0xFEE
 12139                           plusw0	equ	0xFEB
 12140                           fsr0h	equ	0xFEA
 12141                           fsr0l	equ	0xFE9
 12142                           wreg	equ	0xFE8
 12143                           postinc1	equ	0xFE6
 12144                           postdec1	equ	0xFE5
 12145                           plusw1	equ	0xFE3
 12146                           fsr1h	equ	0xFE2
 12147                           fsr1l	equ	0xFE1
 12148                           indf2	equ	0xFDF
 12149                           postinc2	equ	0xFDE
 12150                           postdec2	equ	0xFDD
 12151                           plusw2	equ	0xFDB
 12152                           fsr2h	equ	0xFDA
 12153                           fsr2l	equ	0xFD9
 12154                           status	equ	0xFD8
 12155                           
 12156 ;; *************** function _USBCtrlTrfRxService *****************
 12157 ;; Defined at:
 12158 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12159 ;; Parameters:    Size  Location     Type
 12160 ;;		None
 12161 ;; Auto vars:     Size  Location     Type
 12162 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12163 ;;  i               1   29[BANK0 ] unsigned char 
 12164 ;; Return value:  Size  Location     Type
 12165 ;;                  1    wreg      void 
 12166 ;; Registers used:
 12167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12168 ;; Tracked objects:
 12169 ;;		On entry : 0/0
 12170 ;;		On exit  : 0/0
 12171 ;;		Unchanged: 0/0
 12172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12174 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12177 ;;Total ram usage:        2 bytes
 12178 ;; Hardware stack levels used:    1
 12179 ;; Hardware stack levels required when called:   12
 12180 ;; This function calls:
 12181 ;;		_USBCtrlEPAllowStatusStage
 12182 ;; This function is called by:
 12183 ;;		_USBCtrlTrfOutHandler
 12184 ;; This function uses a non-reentrant model
 12185 ;;
 12186                           
 12187                           	psect	text50
 12188  002F84                     __ptext50:
 12189                           	opt stack 0
 12190  002F84                     _USBCtrlTrfRxService:
 12191                           	opt stack 12
 12192                           
 12193                           ;usb_device.c: 1872: uint8_t byteToRead;
 12194                           ;usb_device.c: 1873: uint8_t i;
 12195                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12196                           
 12197                           ;incstack = 0
 12198  002F84  0100               	movlb	0	; () banked
 12199  002F86  EE20 F001          	lfsr	2,1
 12200  002F8A  51C5               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12201  002F8C  26D9               	addwf	fsr2l,f,c
 12202  002F8E  51C6               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12203  002F90  22DA               	addwfc	fsr2h,f,c
 12204  002F92  50DF               	movf	indf2,w,c
 12205  002F94  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12206                           
 12207                           ; BSR set to: 0
 12208                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12209  002F96  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12210  002F98  0101               	movlb	1	; () banked
 12211  002F9A  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12212  002F9C  0E00               	movlw	0
 12213  002F9E  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12214  002FA0  A0D8               	btfss	status,0,c
 12215                           
 12216                           ; BSR set to: 1
 12217                           ;usb_device.c: 1884: {
 12218                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12219  002FA2  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12220                           
 12221                           ; BSR set to: 1
 12222                           ;usb_device.c: 1886: }
 12223                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12224                           
 12225                           ; BSR set to: 1
 12226  002FA6  0100               	movlb	0	; () banked
 12227  002FA8  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12228  002FAA  0101               	movlb	1	; () banked
 12229  002FAC  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12230  002FAE  0E00               	movlw	0
 12231  002FB0  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12232                           
 12233                           ; BSR set to: 1
 12234                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12235  002FB2  0E00               	movlw	0
 12236  002FB4  0100               	movlb	0	; () banked
 12237  002FB6  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12238  002FB8  D013               	goto	l1710
 12239  002FBA                     
 12240                           ; BSR set to: 0
 12241                           ;usb_device.c: 1893: {
 12242                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12243                           
 12244                           ; BSR set to: 0
 12245  002FBA  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12246  002FBC  0D01               	mullw	1
 12247  002FBE  0E38               	movlw	56
 12248  002FC0  24F3               	addwf	prodl,w,c
 12249  002FC2  6ED9               	movwf	fsr2l,c
 12250  002FC4  0E04               	movlw	4
 12251  002FC6  20F4               	addwfc	prodh,w,c
 12252  002FC8  6EDA               	movwf	fsr2h,c
 12253  002FCA  C1C9  FFE1         	movff	_outPipes,fsr1l
 12254  002FCE  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12255  002FD2  CFDF FFE7          	movff	indf2,indf1
 12256                           
 12257                           ; BSR set to: 0
 12258  002FD6  0101               	movlb	1	; () banked
 12259  002FD8  4BC9               	infsnz	_outPipes& (0+255),f,b
 12260  002FDA  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12261                           
 12262                           ; BSR set to: 1
 12263  002FDC  0100               	movlb	0	; () banked
 12264  002FDE  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12265  002FE0                     l1710:
 12266                           
 12267                           ; BSR set to: 0
 12268                           
 12269                           ; BSR set to: 0
 12270  002FE0  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12271  002FE2  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12272  002FE4  A0D8               	btfss	status,0,c
 12273  002FE6  D7E9               	goto	l1711
 12274                           
 12275                           ; BSR set to: 0
 12276                           ;usb_device.c: 1895: }
 12277                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12278                           
 12279                           ; BSR set to: 0
 12280  002FE8  0101               	movlb	1	; () banked
 12281  002FEA  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12282  002FEC  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12283  002FEE  B4D8               	btfsc	status,2,c
 12284  002FF0  D033               	goto	l1713
 12285                           
 12286                           ; BSR set to: 1
 12287                           ;usb_device.c: 1900: {
 12288                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12289  002FF2  0100               	movlb	0	; () banked
 12290  002FF4  EE20 F001          	lfsr	2,1
 12291  002FF8  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12292  002FFA  26D9               	addwf	fsr2l,f,c
 12293  002FFC  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12294  002FFE  22DA               	addwfc	fsr2h,f,c
 12295  003000  0E08               	movlw	8
 12296  003002  6EDF               	movwf	indf2,c
 12297                           
 12298                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12299  003004  EE20 F002          	lfsr	2,2
 12300  003008  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12301  00300A  26D9               	addwf	fsr2l,f,c
 12302  00300C  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12303  00300E  22DA               	addwfc	fsr2h,f,c
 12304  003010  0E38               	movlw	56
 12305  003012  6EDE               	movwf	postinc2,c
 12306  003014  0E04               	movlw	4
 12307  003016  6EDD               	movwf	postdec2,c
 12308                           
 12309                           ; BSR set to: 0
 12310                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12311  003018  C0C5  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12312  00301C  C0C6  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12313  003020  BCDF               	btfsc	indf2,6,c
 12314  003022  D00D               	goto	l1714
 12315                           
 12316                           ; BSR set to: 0
 12317                           ;usb_device.c: 1904: {
 12318                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12319  003024  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12320  003028  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12321  00302C  0E48               	movlw	72
 12322  00302E  6EDF               	movwf	indf2,c
 12323                           
 12324                           ; BSR set to: 0
 12325                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12326  003030  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12327  003034  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12328  003038  0E00               	movlw	0
 12329  00303A  8EDB               	bsf	plusw2,7,c
 12330                           
 12331                           ;usb_device.c: 1907: }
 12332  00303C  0012               	return	
 12333  00303E                     l1714:
 12334                           
 12335                           ; BSR set to: 0
 12336                           ;usb_device.c: 1908: else
 12337                           ;usb_device.c: 1909: {
 12338                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12339                           
 12340                           ; BSR set to: 0
 12341  00303E  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12342  003042  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12343  003046  0E08               	movlw	8
 12344  003048  6EDF               	movwf	indf2,c
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12348  00304A  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12349  00304E  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12350  003052  0E00               	movlw	0
 12351  003054  8EDB               	bsf	plusw2,7,c
 12352                           
 12353                           ; BSR set to: 0
 12354                           ;usb_device.c: 1912: }
 12355                           ;usb_device.c: 1913: }
 12356  003056  0012               	return	
 12357  003058                     l1713:
 12358                           
 12359                           ;usb_device.c: 1914: else
 12360                           ;usb_device.c: 1915: {
 12361                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12362                           
 12363                           ; BSR set to: 0
 12364  003058  0100               	movlb	0	; () banked
 12365  00305A  EE20 F001          	lfsr	2,1
 12366  00305E  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12367  003060  26D9               	addwf	fsr2l,f,c
 12368  003062  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12369  003064  22DA               	addwfc	fsr2h,f,c
 12370  003066  0E08               	movlw	8
 12371  003068  6EDF               	movwf	indf2,c
 12372                           
 12373                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12374  00306A  EE20 F002          	lfsr	2,2
 12375  00306E  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12376  003070  26D9               	addwf	fsr2l,f,c
 12377  003072  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12378  003074  22DA               	addwfc	fsr2h,f,c
 12379  003076  0E30               	movlw	48
 12380  003078  6EDE               	movwf	postinc2,c
 12381  00307A  0E04               	movlw	4
 12382  00307C  6EDD               	movwf	postdec2,c
 12383                           
 12384                           ; BSR set to: 0
 12385                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12386  00307E  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12387  003082  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12388  003086  0E04               	movlw	4
 12389  003088  6EDF               	movwf	indf2,c
 12390                           
 12391                           ; BSR set to: 0
 12392                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12393  00308A  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12394  00308E  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12395  003092  0E00               	movlw	0
 12396  003094  8EDB               	bsf	plusw2,7,c
 12397                           
 12398                           ; BSR set to: 0
 12399                           ;usb_device.c: 1944: }
 12400                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12401                           
 12402                           ; BSR set to: 0
 12403  003096  0101               	movlb	1	; () banked
 12404  003098  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12405                           
 12406                           ; BSR set to: 1
 12407                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12408  00309A  0100               	movlb	0	; () banked
 12409  00309C  51CC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12410  00309E  A4D8               	btfss	status,2,c
 12411  0030A0  0012               	return	
 12412                           
 12413                           ; BSR set to: 0
 12414                           ;usb_device.c: 1960: {
 12415                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12416  0030A2  EC29  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12417  0030A6  0012               	return	
 12418  0030A8                     __end_of_USBCtrlTrfRxService:
 12419                           	opt stack 0
 12420                           tosu	equ	0xFFF
 12421                           tosh	equ	0xFFE
 12422                           tosl	equ	0xFFD
 12423                           pclath	equ	0xFFA
 12424                           tblptru	equ	0xFF8
 12425                           tblptrh	equ	0xFF7
 12426                           tblptrl	equ	0xFF6
 12427                           tablat	equ	0xFF5
 12428                           prodh	equ	0xFF4
 12429                           prodl	equ	0xFF3
 12430                           intcon	equ	0xFF2
 12431                           intcon2	equ	0xFF1
 12432                           intcon3	equ	0xFF0
 12433                           indf0	equ	0xFEF
 12434                           postinc0	equ	0xFEE
 12435                           plusw0	equ	0xFEB
 12436                           fsr0h	equ	0xFEA
 12437                           fsr0l	equ	0xFE9
 12438                           wreg	equ	0xFE8
 12439                           indf1	equ	0xFE7
 12440                           postinc1	equ	0xFE6
 12441                           postdec1	equ	0xFE5
 12442                           plusw1	equ	0xFE3
 12443                           fsr1h	equ	0xFE2
 12444                           fsr1l	equ	0xFE1
 12445                           indf2	equ	0xFDF
 12446                           postinc2	equ	0xFDE
 12447                           postdec2	equ	0xFDD
 12448                           plusw2	equ	0xFDB
 12449                           fsr2h	equ	0xFDA
 12450                           fsr2l	equ	0xFD9
 12451                           status	equ	0xFD8
 12452                           
 12453 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12454 ;; Defined at:
 12455 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12456 ;; Parameters:    Size  Location     Type
 12457 ;;		None
 12458 ;; Auto vars:     Size  Location     Type
 12459 ;;		None
 12460 ;; Return value:  Size  Location     Type
 12461 ;;                  1    wreg      void 
 12462 ;; Registers used:
 12463 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12464 ;; Tracked objects:
 12465 ;;		On entry : 0/0
 12466 ;;		On exit  : 0/0
 12467 ;;		Unchanged: 0/0
 12468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12473 ;;Total ram usage:        0 bytes
 12474 ;; Hardware stack levels used:    1
 12475 ;; Hardware stack levels required when called:   11
 12476 ;; This function calls:
 12477 ;;		Nothing
 12478 ;; This function is called by:
 12479 ;;		_USBDeviceTasks
 12480 ;;		_USBCtrlEPServiceComplete
 12481 ;;		_USBCtrlTrfRxService
 12482 ;; This function uses a non-reentrant model
 12483 ;;
 12484                           
 12485                           	psect	text51
 12486  003A52                     __ptext51:
 12487                           	opt stack 0
 12488  003A52                     _USBCtrlEPAllowStatusStage:
 12489                           	opt stack 12
 12490                           
 12491                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12492                           
 12493                           ;incstack = 0
 12494  003A52  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 12495  003A54  A4D8               	btfss	status,2,c
 12496  003A56  0012               	return	
 12497                           
 12498                           ;usb_device.c: 1442: {
 12499                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12500  003A58  0E01               	movlw	1
 12501  003A5A  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12502                           
 12503                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12504  003A5C  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12505  003A5E  A4D8               	btfss	status,2,c
 12506  003A60  0012               	return	
 12507                           
 12508                           ;usb_device.c: 1445: {
 12509                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12510  003A62  0E01               	movlw	1
 12511  003A64  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12512                           
 12513                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12514  003A66  0E02               	movlw	2
 12515  003A68  0100               	movlb	0	; () banked
 12516  003A6A  19CE               	xorwf	_controlTransferState& (0+255),w,b
 12517  003A6C  A4D8               	btfss	status,2,c
 12518  003A6E  D015               	goto	l1664
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;usb_device.c: 1451: {
 12522                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12523  003A70  EE20 F001          	lfsr	2,1
 12524  003A74  51BB               	movf	_pBDTEntryIn& (0+255),w,b
 12525  003A76  26D9               	addwf	fsr2l,f,c
 12526  003A78  51BC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12527  003A7A  22DA               	addwfc	fsr2h,f,c
 12528  003A7C  0E00               	movlw	0
 12529  003A7E  6EDF               	movwf	indf2,c
 12530                           
 12531                           ; BSR set to: 0
 12532                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12533  003A80  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12534  003A84  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12535  003A88  0E48               	movlw	72
 12536  003A8A  6EDF               	movwf	indf2,c
 12537                           
 12538                           ; BSR set to: 0
 12539                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12540  003A8C  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12541  003A90  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12542  003A94  0E00               	movlw	0
 12543  003A96  8EDB               	bsf	plusw2,7,c
 12544                           
 12545                           ;usb_device.c: 1455: }
 12546  003A98  0012               	return	
 12547  003A9A                     l1664:
 12548                           
 12549                           ; BSR set to: 0
 12550                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12551                           
 12552                           ; BSR set to: 0
 12553  003A9A  05CE               	decf	_controlTransferState& (0+255),w,b
 12554  003A9C  A4D8               	btfss	status,2,c
 12555  003A9E  0012               	return	
 12556                           
 12557                           ; BSR set to: 0
 12558                           ;usb_device.c: 1457: {
 12559                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12560  003AA0  0E00               	movlw	0
 12561  003AA2  0101               	movlb	1	; () banked
 12562  003AA4  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12563                           
 12564                           ; BSR set to: 1
 12565                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12566  003AA6  0100               	movlb	0	; () banked
 12567  003AA8  EE20 F001          	lfsr	2,1
 12568  003AAC  51C5               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12569  003AAE  26D9               	addwf	fsr2l,f,c
 12570  003AB0  51C6               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12571  003AB2  22DA               	addwfc	fsr2h,f,c
 12572  003AB4  0E08               	movlw	8
 12573  003AB6  6EDF               	movwf	indf2,c
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12577  003AB8  EE20 F002          	lfsr	2,2
 12578  003ABC  51C5               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12579  003ABE  26D9               	addwf	fsr2l,f,c
 12580  003AC0  51C6               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12581  003AC2  22DA               	addwfc	fsr2h,f,c
 12582  003AC4  0E30               	movlw	48
 12583  003AC6  6EDE               	movwf	postinc2,c
 12584  003AC8  0E04               	movlw	4
 12585  003ACA  6EDD               	movwf	postdec2,c
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12589  003ACC  C0C5  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12590  003AD0  C0C6  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12591  003AD4  0E04               	movlw	4
 12592  003AD6  6EDF               	movwf	indf2,c
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12596  003AD8  C0C5  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12597  003ADC  C0C6  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12598  003AE0  0E00               	movlw	0
 12599  003AE2  8EDB               	bsf	plusw2,7,c
 12600                           
 12601                           ; BSR set to: 0
 12602                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12603  003AE4  0E01               	movlw	1
 12604  003AE6  0101               	movlb	1	; () banked
 12605  003AE8  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12606                           
 12607                           ; BSR set to: 1
 12608                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12609  003AEA  0100               	movlb	0	; () banked
 12610  003AEC  EE20 F001          	lfsr	2,1
 12611  003AF0  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12612  003AF2  26D9               	addwf	fsr2l,f,c
 12613  003AF4  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12614  003AF6  22DA               	addwfc	fsr2h,f,c
 12615  003AF8  0E08               	movlw	8
 12616  003AFA  6EDF               	movwf	indf2,c
 12617                           
 12618                           ; BSR set to: 0
 12619                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12620  003AFC  EE20 F002          	lfsr	2,2
 12621  003B00  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12622  003B02  26D9               	addwf	fsr2l,f,c
 12623  003B04  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12624  003B06  22DA               	addwfc	fsr2h,f,c
 12625  003B08  0E30               	movlw	48
 12626  003B0A  6EDE               	movwf	postinc2,c
 12627  003B0C  0E04               	movlw	4
 12628  003B0E  6EDD               	movwf	postdec2,c
 12629                           
 12630                           ; BSR set to: 0
 12631                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12632  003B10  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12633  003B14  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12634  003B18  0E80               	movlw	128
 12635  003B1A  6EDF               	movwf	indf2,c
 12636                           
 12637                           ; BSR set to: 0
 12638                           
 12639                           ; BSR set to: 0
 12640                           
 12641                           ; BSR set to: 0
 12642  003B1C  0012               	return	
 12643  003B1E                     __end_of_USBCtrlEPAllowStatusStage:
 12644                           	opt stack 0
 12645                           tosu	equ	0xFFF
 12646                           tosh	equ	0xFFE
 12647                           tosl	equ	0xFFD
 12648                           pclath	equ	0xFFA
 12649                           tblptru	equ	0xFF8
 12650                           tblptrh	equ	0xFF7
 12651                           tblptrl	equ	0xFF6
 12652                           tablat	equ	0xFF5
 12653                           prodh	equ	0xFF4
 12654                           prodl	equ	0xFF3
 12655                           intcon	equ	0xFF2
 12656                           intcon2	equ	0xFF1
 12657                           intcon3	equ	0xFF0
 12658                           indf0	equ	0xFEF
 12659                           postinc0	equ	0xFEE
 12660                           plusw0	equ	0xFEB
 12661                           fsr0h	equ	0xFEA
 12662                           fsr0l	equ	0xFE9
 12663                           wreg	equ	0xFE8
 12664                           indf1	equ	0xFE7
 12665                           postinc1	equ	0xFE6
 12666                           postdec1	equ	0xFE5
 12667                           plusw1	equ	0xFE3
 12668                           fsr1h	equ	0xFE2
 12669                           fsr1l	equ	0xFE1
 12670                           indf2	equ	0xFDF
 12671                           postinc2	equ	0xFDE
 12672                           postdec2	equ	0xFDD
 12673                           plusw2	equ	0xFDB
 12674                           fsr2h	equ	0xFDA
 12675                           fsr2l	equ	0xFD9
 12676                           status	equ	0xFD8
 12677                           
 12678 ;; *************** function _USBCtrlTrfInHandler *****************
 12679 ;; Defined at:
 12680 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;		None
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12685 ;; Return value:  Size  Location     Type
 12686 ;;                  1    wreg      void 
 12687 ;; Registers used:
 12688 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12689 ;; Tracked objects:
 12690 ;;		On entry : 0/0
 12691 ;;		On exit  : 0/0
 12692 ;;		Unchanged: 0/0
 12693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12697 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12698 ;;Total ram usage:        1 bytes
 12699 ;; Hardware stack levels used:    1
 12700 ;; Hardware stack levels required when called:   12
 12701 ;; This function calls:
 12702 ;;		_USBCtrlTrfTxService
 12703 ;; This function is called by:
 12704 ;;		_USBCtrlEPService
 12705 ;; This function uses a non-reentrant model
 12706 ;;
 12707                           
 12708                           	psect	text52
 12709  003F04                     __ptext52:
 12710                           	opt stack 0
 12711  003F04                     _USBCtrlTrfInHandler:
 12712                           	opt stack 13
 12713                           
 12714                           ;usb_device.c: 2611: uint8_t lastDTS;
 12715                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12716                           
 12717                           ;incstack = 0
 12718  003F04  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12719  003F08  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12720  003F0C  0100               	movlb	0	; () banked
 12721  003F0E  0E00               	movlw	0
 12722  003F10  BCDF               	btfsc	indf2,6,c
 12723  003F12  0E01               	movlw	1
 12724  003F14  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12725                           
 12726                           ; BSR set to: 0
 12727                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12728  003F16  0E04               	movlw	4
 12729  003F18  1BBB               	xorwf	_pBDTEntryIn& (0+255),f,b
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12733  003F1A  0E08               	movlw	8
 12734  003F1C  19D0               	xorwf	_USBDeviceState& (0+255),w,b
 12735  003F1E  A4D8               	btfss	status,2,c
 12736  003F20  D00D               	goto	l1791
 12737                           
 12738                           ; BSR set to: 0
 12739                           ;usb_device.c: 2622: {
 12740                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12741  003F22  0104               	movlb	4	; () banked
 12742  003F24  5132               	movf	50,w,b	;volatile
 12743  003F26  0B7F               	andlw	127
 12744  003F28  010F               	movlb	15	; () banked
 12745  003F2A  6F38               	movwf	56,b	;volatile
 12746                           
 12747                           ; BSR set to: 15
 12748                           ;usb_device.c: 2624: if(UADDR != 0u)
 12749  003F2C  5138               	movf	56,w,b	;volatile
 12750  003F2E  B4D8               	btfsc	status,2,c
 12751  003F30  D002               	goto	l1790
 12752                           
 12753                           ; BSR set to: 15
 12754                           ;usb_device.c: 2625: {
 12755                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12756  003F32  0E10               	movlw	16
 12757  003F34  D001               	goto	L11
 12758  003F36                     l1790:
 12759                           
 12760                           ;usb_device.c: 2628: else
 12761                           ;usb_device.c: 2629: {
 12762                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12763                           
 12764                           ; BSR set to: 0
 12765  003F36  0E04               	movlw	4
 12766  003F38                     L11:
 12767  003F38  0100               	movlb	0	; () banked
 12768  003F3A  6FD0               	movwf	_USBDeviceState& (0+255),b
 12769  003F3C                     l1791:
 12770                           
 12771                           ; BSR set to: 0
 12772                           ;usb_device.c: 2631: }
 12773                           ;usb_device.c: 2632: }
 12774                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12775                           
 12776                           ; BSR set to: 0
 12777                           
 12778                           ; BSR set to: 0
 12779  003F3C  05CE               	decf	_controlTransferState& (0+255),w,b
 12780  003F3E  A4D8               	btfss	status,2,c
 12781  003F40  D03B               	goto	l1792
 12782                           
 12783                           ; BSR set to: 0
 12784                           ;usb_device.c: 2636: {
 12785                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12786  003F42  EE20 F002          	lfsr	2,2
 12787  003F46  51BB               	movf	_pBDTEntryIn& (0+255),w,b
 12788  003F48  26D9               	addwf	fsr2l,f,c
 12789  003F4A  51BC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12790  003F4C  22DA               	addwfc	fsr2h,f,c
 12791  003F4E  0E38               	movlw	56
 12792  003F50  6EDE               	movwf	postinc2,c
 12793  003F52  0E04               	movlw	4
 12794  003F54  6EDD               	movwf	postdec2,c
 12795                           
 12796                           ; BSR set to: 0
 12797                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12798  003F56  EC84  F01B         	call	_USBCtrlTrfTxService	;wreg free
 12799                           
 12800                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12801  003F5A  0E02               	movlw	2
 12802  003F5C  0100               	movlb	0	; () banked
 12803  003F5E  19CF               	xorwf	_shortPacketStatus& (0+255),w,b
 12804  003F60  A4D8               	btfss	status,2,c
 12805  003F62  D00D               	goto	l1793
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;usb_device.c: 2645: {
 12809                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12810  003F64  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12811  003F68  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12812  003F6C  0E04               	movlw	4
 12813  003F6E  6EDF               	movwf	indf2,c
 12814                           
 12815                           ; BSR set to: 0
 12816                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12817  003F70  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12818  003F74  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12819  003F78  0E00               	movlw	0
 12820  003F7A  8EDB               	bsf	plusw2,7,c
 12821                           
 12822                           ;usb_device.c: 2650: }
 12823  003F7C  0012               	return	
 12824  003F7E                     l1793:
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;usb_device.c: 2651: else
 12828                           ;usb_device.c: 2652: {
 12829                           ;usb_device.c: 2653: if(lastDTS == 0)
 12830                           
 12831                           ; BSR set to: 0
 12832  003F7E  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12833  003F80  A4D8               	btfss	status,2,c
 12834  003F82  D00D               	goto	l1795
 12835                           
 12836                           ; BSR set to: 0
 12837                           ;usb_device.c: 2654: {
 12838                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12839  003F84  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12840  003F88  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12841  003F8C  0E48               	movlw	72
 12842  003F8E  6EDF               	movwf	indf2,c
 12843                           
 12844                           ; BSR set to: 0
 12845                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12846  003F90  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12847  003F94  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12848  003F98  0E00               	movlw	0
 12849  003F9A  8EDB               	bsf	plusw2,7,c
 12850                           
 12851                           ;usb_device.c: 2657: }
 12852  003F9C  0012               	return	
 12853  003F9E                     l1795:
 12854                           
 12855                           ; BSR set to: 0
 12856                           ;usb_device.c: 2658: else
 12857                           ;usb_device.c: 2659: {
 12858                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12859                           
 12860                           ; BSR set to: 0
 12861  003F9E  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12862  003FA2  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12863  003FA6  0E08               	movlw	8
 12864  003FA8  6EDF               	movwf	indf2,c
 12865                           
 12866                           ; BSR set to: 0
 12867                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12868  003FAA  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12869  003FAE  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12870  003FB2  0E00               	movlw	0
 12871  003FB4  8EDB               	bsf	plusw2,7,c
 12872                           
 12873                           ; BSR set to: 0
 12874                           ;usb_device.c: 2662: }
 12875                           ;usb_device.c: 2663: }
 12876                           ;usb_device.c: 2664: }
 12877                           
 12878                           ; BSR set to: 0
 12879  003FB6  0012               	return	
 12880  003FB8                     l1792:
 12881                           
 12882                           ; BSR set to: 0
 12883                           ;usb_device.c: 2665: else
 12884                           ;usb_device.c: 2666: {
 12885                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 12886  003FB8  0101               	movlb	1	; () banked
 12887  003FBA  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 12888                           
 12889                           ; BSR set to: 1
 12890                           ;usb_device.c: 2675: }
 12891                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 12892                           
 12893                           ; BSR set to: 1
 12894  003FBC  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12895                           
 12896                           ; BSR set to: 1
 12897                           ;usb_device.c: 2677: }
 12898                           ;usb_device.c: 2679: controlTransferState = 0;
 12899                           
 12900                           ; BSR set to: 1
 12901  003FBE  0E00               	movlw	0
 12902  003FC0  0100               	movlb	0	; () banked
 12903  003FC2  6FCE               	movwf	_controlTransferState& (0+255),b
 12904  003FC4  0012               	return	
 12905  003FC6                     __end_of_USBCtrlTrfInHandler:
 12906                           	opt stack 0
 12907                           tosu	equ	0xFFF
 12908                           tosh	equ	0xFFE
 12909                           tosl	equ	0xFFD
 12910                           pclath	equ	0xFFA
 12911                           tblptru	equ	0xFF8
 12912                           tblptrh	equ	0xFF7
 12913                           tblptrl	equ	0xFF6
 12914                           tablat	equ	0xFF5
 12915                           prodh	equ	0xFF4
 12916                           prodl	equ	0xFF3
 12917                           intcon	equ	0xFF2
 12918                           intcon2	equ	0xFF1
 12919                           intcon3	equ	0xFF0
 12920                           indf0	equ	0xFEF
 12921                           postinc0	equ	0xFEE
 12922                           plusw0	equ	0xFEB
 12923                           fsr0h	equ	0xFEA
 12924                           fsr0l	equ	0xFE9
 12925                           wreg	equ	0xFE8
 12926                           indf1	equ	0xFE7
 12927                           postinc1	equ	0xFE6
 12928                           postdec1	equ	0xFE5
 12929                           plusw1	equ	0xFE3
 12930                           fsr1h	equ	0xFE2
 12931                           fsr1l	equ	0xFE1
 12932                           indf2	equ	0xFDF
 12933                           postinc2	equ	0xFDE
 12934                           postdec2	equ	0xFDD
 12935                           plusw2	equ	0xFDB
 12936                           fsr2h	equ	0xFDA
 12937                           fsr2l	equ	0xFD9
 12938                           status	equ	0xFD8
 12939                           
 12940 ;; *************** function _USBCtrlTrfTxService *****************
 12941 ;; Defined at:
 12942 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12943 ;; Parameters:    Size  Location     Type
 12944 ;;		None
 12945 ;; Auto vars:     Size  Location     Type
 12946 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 12947 ;; Return value:  Size  Location     Type
 12948 ;;                  1    wreg      void 
 12949 ;; Registers used:
 12950 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12951 ;; Tracked objects:
 12952 ;;		On entry : 0/0
 12953 ;;		On exit  : 0/0
 12954 ;;		Unchanged: 0/0
 12955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12959 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12960 ;;Total ram usage:        1 bytes
 12961 ;; Hardware stack levels used:    1
 12962 ;; Hardware stack levels required when called:   11
 12963 ;; This function calls:
 12964 ;;		Nothing
 12965 ;; This function is called by:
 12966 ;;		_USBCtrlEPAllowDataStage
 12967 ;;		_USBCtrlTrfInHandler
 12968 ;; This function uses a non-reentrant model
 12969 ;;
 12970                           
 12971                           	psect	text53
 12972  003708                     __ptext53:
 12973                           	opt stack 0
 12974  003708                     _USBCtrlTrfTxService:
 12975                           	opt stack 11
 12976                           
 12977                           ;usb_device.c: 1791: uint8_t byteToSend;
 12978                           ;usb_device.c: 1795: byteToSend = 8;
 12979                           
 12980                           ; BSR set to: 0
 12981                           ;incstack = 0
 12982  003708  0E08               	movlw	8
 12983  00370A  0100               	movlb	0	; () banked
 12984  00370C  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 12988  00370E  51BA               	movf	(_inPipes+5)& (0+255),w,b
 12989  003710  E110               	bnz	l11745
 12990  003712  0E08               	movlw	8
 12991  003714  5DB9               	subwf	(_inPipes+4)& (0+255),w,b
 12992  003716  B0D8               	btfsc	status,0,c
 12993  003718  D00C               	goto	l1697
 12994                           
 12995                           ; BSR set to: 0
 12996                           ;usb_device.c: 1797: {
 12997                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 12998  00371A  C0B9  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 12999                           
 13000                           ; BSR set to: 0
 13001                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13002  00371E  51CF               	movf	_shortPacketStatus& (0+255),w,b
 13003  003720  A4D8               	btfss	status,2,c
 13004  003722  D002               	goto	l1695
 13005                           
 13006                           ; BSR set to: 0
 13007                           ;usb_device.c: 1806: {
 13008                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13009  003724  0E01               	movlw	1
 13010  003726  D004               	goto	L12
 13011  003728                     l1695:
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13015                           
 13016                           ; BSR set to: 0
 13017  003728  05CF               	decf	_shortPacketStatus& (0+255),w,b
 13018  00372A  A4D8               	btfss	status,2,c
 13019  00372C  D002               	goto	l1697
 13020                           
 13021                           ; BSR set to: 0
 13022                           ;usb_device.c: 1810: {
 13023                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13024  00372E  0E02               	movlw	2
 13025  003730                     L12:
 13026  003730  6FCF               	movwf	_shortPacketStatus& (0+255),b
 13027  003732                     l1697:
 13028  003732                     l11745:
 13029                           
 13030                           ; BSR set to: 0
 13031                           ;usb_device.c: 1812: }
 13032                           ;usb_device.c: 1813: }
 13033                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13034  003732  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13035  003734  5FB9               	subwf	(_inPipes+4)& (0+255),f,b
 13036  003736  0E00               	movlw	0
 13037  003738  5BBA               	subwfb	(_inPipes+5)& (0+255),f,b
 13038                           
 13039                           ; BSR set to: 0
 13040                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13041  00373A  EE20 F001          	lfsr	2,1
 13042  00373E  51BB               	movf	_pBDTEntryIn& (0+255),w,b
 13043  003740  26D9               	addwf	fsr2l,f,c
 13044  003742  51BC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13045  003744  22DA               	addwfc	fsr2h,f,c
 13046  003746  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13050  00374A  0E38               	movlw	56
 13051  00374C  0102               	movlb	2	; () banked
 13052  00374E  6FD5               	movwf	_pDst& (0+255),b
 13053  003750  0E04               	movlw	4
 13054  003752  6FD6               	movwf	(_pDst+1)& (0+255),b
 13055                           
 13056                           ; BSR set to: 2
 13057                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13058  003754  0100               	movlb	0	; () banked
 13059  003756  A1B8               	btfss	(_inPipes+3)& (0+255),0,b
 13060  003758  D01E               	goto	l1699
 13061  00375A  D03E               	goto	l1703
 13062  00375C                     
 13063                           ; BSR set to: 0
 13064                           ;usb_device.c: 1830: {
 13065                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13066                           
 13067                           ; BSR set to: 0
 13068  00375C  C0B5  FFF6         	movff	_inPipes,tblptrl
 13069  003760  C0B6  FFF7         	movff	_inPipes+1,tblptrh
 13070  003764  6AF8               	clrf	tblptru,c
 13071  003766  C2D5  FFD9         	movff	_pDst,fsr2l
 13072  00376A  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13073  00376E  0E0E               	movlw	(high __ramtop+-1)
 13074  003770  64F7               	cpfsgt	tblptrh,c
 13075  003772  D003               	bra	u10357
 13076  003774  0008               	tblrd		*
 13077  003776  50F5               	movf	tablat,w,c
 13078  003778  D005               	bra	u10350
 13079  00377A                     u10357:
 13080  00377A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13081  00377E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13082  003782  50EF               	movf	indf0,w,c
 13083  003784                     u10350:
 13084  003784  6EDF               	movwf	indf2,c
 13085  003786  0100               	movlb	0	; () banked
 13086  003788  4BB5               	infsnz	_inPipes& (0+255),f,b
 13087  00378A  2BB6               	incf	(_inPipes+1)& (0+255),f,b
 13088                           
 13089                           ; BSR set to: 0
 13090  00378C  0102               	movlb	2	; () banked
 13091  00378E  4BD5               	infsnz	_pDst& (0+255),f,b
 13092  003790  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13093                           
 13094                           ; BSR set to: 2
 13095                           ;usb_device.c: 1832: byteToSend--;
 13096  003792  0100               	movlb	0	; () banked
 13097  003794  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13098  003796                     l1699:
 13099                           
 13100                           ; BSR set to: 0
 13101                           
 13102                           ; BSR set to: 0
 13103  003796  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13104  003798  B4D8               	btfsc	status,2,c
 13105  00379A  0012               	return	
 13106  00379C  D7DF               	goto	l1700
 13107  00379E                     
 13108                           ; BSR set to: 0
 13109                           ;usb_device.c: 1838: {
 13110                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13111                           
 13112                           ; BSR set to: 0
 13113  00379E  C0B5  FFF6         	movff	_inPipes,tblptrl
 13114  0037A2  C0B6  FFF7         	movff	_inPipes+1,tblptrh
 13115  0037A6  6AF8               	clrf	tblptru,c
 13116  0037A8  C2D5  FFD9         	movff	_pDst,fsr2l
 13117  0037AC  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13118  0037B0  0E0E               	movlw	(high __ramtop+-1)
 13119  0037B2  64F7               	cpfsgt	tblptrh,c
 13120  0037B4  D003               	bra	u10377
 13121  0037B6  0008               	tblrd		*
 13122  0037B8  50F5               	movf	tablat,w,c
 13123  0037BA  D005               	bra	u10370
 13124  0037BC                     u10377:
 13125  0037BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 13126  0037C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 13127  0037C4  50EF               	movf	indf0,w,c
 13128  0037C6                     u10370:
 13129  0037C6  6EDF               	movwf	indf2,c
 13130  0037C8  0100               	movlb	0	; () banked
 13131  0037CA  4BB5               	infsnz	_inPipes& (0+255),f,b
 13132  0037CC  2BB6               	incf	(_inPipes+1)& (0+255),f,b
 13133                           
 13134                           ; BSR set to: 0
 13135  0037CE  0102               	movlb	2	; () banked
 13136  0037D0  4BD5               	infsnz	_pDst& (0+255),f,b
 13137  0037D2  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13138                           
 13139                           ; BSR set to: 2
 13140                           ;usb_device.c: 1840: byteToSend--;
 13141  0037D4  0100               	movlb	0	; () banked
 13142  0037D6  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13143  0037D8                     l1703:
 13144                           
 13145                           ; BSR set to: 0
 13146                           
 13147                           ; BSR set to: 0
 13148  0037D8  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13149  0037DA  B4D8               	btfsc	status,2,c
 13150  0037DC  0012               	return	
 13151  0037DE  D7DF               	goto	l1704
 13152  0037E0                     __end_of_USBCtrlTrfTxService:
 13153                           	opt stack 0
 13154                           tosu	equ	0xFFF
 13155                           tosh	equ	0xFFE
 13156                           tosl	equ	0xFFD
 13157                           pclath	equ	0xFFA
 13158                           tblptru	equ	0xFF8
 13159                           tblptrh	equ	0xFF7
 13160                           tblptrl	equ	0xFF6
 13161                           tablat	equ	0xFF5
 13162                           prodh	equ	0xFF4
 13163                           prodl	equ	0xFF3
 13164                           intcon	equ	0xFF2
 13165                           intcon2	equ	0xFF1
 13166                           intcon3	equ	0xFF0
 13167                           indf0	equ	0xFEF
 13168                           postinc0	equ	0xFEE
 13169                           plusw0	equ	0xFEB
 13170                           fsr0h	equ	0xFEA
 13171                           fsr0l	equ	0xFE9
 13172                           wreg	equ	0xFE8
 13173                           indf1	equ	0xFE7
 13174                           postinc1	equ	0xFE6
 13175                           postdec1	equ	0xFE5
 13176                           plusw1	equ	0xFE3
 13177                           fsr1h	equ	0xFE2
 13178                           fsr1l	equ	0xFE1
 13179                           indf2	equ	0xFDF
 13180                           postinc2	equ	0xFDE
 13181                           postdec2	equ	0xFDD
 13182                           plusw2	equ	0xFDB
 13183                           fsr2h	equ	0xFDA
 13184                           fsr2l	equ	0xFD9
 13185                           status	equ	0xFD8
 13186                           
 13187 ;; *************** function _CDCTxService *****************
 13188 ;; Defined at:
 13189 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13190 ;; Parameters:    Size  Location     Type
 13191 ;;		None
 13192 ;; Auto vars:     Size  Location     Type
 13193 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13194 ;;  i               1   36[BANK0 ] unsigned char 
 13195 ;; Return value:  Size  Location     Type
 13196 ;;                  1    wreg      void 
 13197 ;; Registers used:
 13198 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13199 ;; Tracked objects:
 13200 ;;		On entry : 0/0
 13201 ;;		On exit  : 0/0
 13202 ;;		Unchanged: 0/0
 13203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13205 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13207 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13208 ;;Total ram usage:        2 bytes
 13209 ;; Hardware stack levels used:    1
 13210 ;; Hardware stack levels required when called:   12
 13211 ;; This function calls:
 13212 ;;		_USBTransferOnePacket
 13213 ;; This function is called by:
 13214 ;;		_UsbDevice_MainTask
 13215 ;; This function uses a non-reentrant model
 13216 ;;
 13217                           
 13218                           	psect	text54
 13219  002848                     __ptext54:
 13220                           	opt stack 0
 13221  002848                     _CDCTxService:
 13222                           	opt stack 15
 13223                           
 13224                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13225                           ;usb_device_cdc.c: 842: uint8_t i;
 13226                           ;usb_device_cdc.c: 844: ;
 13227                           ;usb_device_cdc.c: 846: {};
 13228                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13229                           
 13230                           ; BSR set to: 0
 13231                           ;incstack = 0
 13232  002848  0101               	movlb	1	; () banked
 13233  00284A  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13234  00284C  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13235  00284E  B4D8               	btfsc	status,2,c
 13236  002850  D006               	goto	l1949
 13237                           
 13238                           ; BSR set to: 1
 13239  002852  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13240  002856  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13241  00285A  BEDF               	btfsc	indf2,7,c
 13242  00285C  0012               	return	
 13243  00285E                     l1949:
 13244                           
 13245                           ; BSR set to: 1
 13246                           ;usb_device_cdc.c: 852: }
 13247                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13248                           
 13249                           ; BSR set to: 1
 13250  00285E  0E03               	movlw	3
 13251  002860  0100               	movlb	0	; () banked
 13252  002862  19CA               	xorwf	_cdc_trf_state& (0+255),w,b
 13253  002864  A4D8               	btfss	status,2,c
 13254  002866  D002               	goto	l1951
 13255                           
 13256                           ; BSR set to: 0
 13257                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13258  002868  0E00               	movlw	0
 13259  00286A  6FCA               	movwf	_cdc_trf_state& (0+255),b
 13260  00286C                     l1951:
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13264  00286C  51CA               	movf	_cdc_trf_state& (0+255),w,b
 13265  00286E  B4D8               	btfsc	status,2,c
 13266  002870  0012               	return	
 13267                           
 13268                           ; BSR set to: 0
 13269                           ;usb_device_cdc.c: 869: }
 13270                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13271                           
 13272                           ; BSR set to: 0
 13273                           
 13274                           ; BSR set to: 0
 13275                           ;usb_device_cdc.c: 866: {
 13276                           ;usb_device_cdc.c: 867: ;
 13277                           ;usb_device_cdc.c: 868: return;
 13278  002872  0E02               	movlw	2
 13279  002874  19CA               	xorwf	_cdc_trf_state& (0+255),w,b
 13280  002876  A4D8               	btfss	status,2,c
 13281  002878  D013               	goto	l1953
 13282                           
 13283                           ; BSR set to: 0
 13284                           ;usb_device_cdc.c: 875: {
 13285                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13286  00287A  0E01               	movlw	1
 13287  00287C  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13288  00287E  0E00               	movlw	0
 13289  002880  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13290  002882  0E00               	movlw	0
 13291  002884  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13292  002886  0E00               	movlw	0
 13293  002888  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13294  00288A  0E02               	movlw	2
 13295  00288C  ECE3  F01F         	call	_USBTransferOnePacket
 13296  002890  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13297  002894  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13298                           
 13299                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13300  002898  0E03               	movlw	3
 13301  00289A  0100               	movlb	0	; () banked
 13302  00289C  6FCA               	movwf	_cdc_trf_state& (0+255),b
 13303                           
 13304                           ;usb_device_cdc.c: 879: }
 13305  00289E  0012               	return	
 13306  0028A0                     l1953:
 13307                           
 13308                           ; BSR set to: 0
 13309                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13310                           
 13311                           ; BSR set to: 0
 13312  0028A0  05CA               	decf	_cdc_trf_state& (0+255),w,b
 13313  0028A2  A4D8               	btfss	status,2,c
 13314  0028A4  0012               	return	
 13315                           
 13316                           ; BSR set to: 0
 13317                           ;usb_device_cdc.c: 881: {
 13318                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13319  0028A6  0E40               	movlw	64
 13320  0028A8  65C9               	cpfsgt	_cdc_tx_len& (0+255),b
 13321  0028AA  D003               	goto	l1956
 13322                           
 13323                           ; BSR set to: 0
 13324                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13325  0028AC  0E40               	movlw	64
 13326  0028AE  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13327  0028B0  D002               	goto	l1957
 13328  0028B2                     l1956:
 13329                           
 13330                           ; BSR set to: 0
 13331                           ;usb_device_cdc.c: 887: else
 13332                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13333  0028B2  C0C9  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13334  0028B6                     l1957:
 13335                           
 13336                           ; BSR set to: 0
 13337                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13338                           
 13339                           ; BSR set to: 0
 13340  0028B6  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13341  0028B8  0800               	sublw	0
 13342  0028BA  25C9               	addwf	_cdc_tx_len& (0+255),w,b
 13343  0028BC  6FC9               	movwf	_cdc_tx_len& (0+255),b
 13344                           
 13345                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13346  0028BE  0E84               	movlw	low _cdc_data_tx
 13347  0028C0  0102               	movlb	2	; () banked
 13348  0028C2  6FC9               	movwf	_pCDCDst& (0+255),b
 13349  0028C4  0E07               	movlw	high _cdc_data_tx
 13350  0028C6  6FCA               	movwf	(_pCDCDst+1)& (0+255),b
 13351                           
 13352                           ; BSR set to: 2
 13353                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13354  0028C8  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13355                           
 13356                           ; BSR set to: 2
 13357                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13358  0028CC  0101               	movlb	1	; () banked
 13359  0028CE  51DF               	movf	_cdc_mem_type& (0+255),w,b
 13360  0028D0  B4D8               	btfsc	status,2,c
 13361  0028D2  D01D               	goto	l1959
 13362  0028D4  D03D               	goto	l1963
 13363  0028D6                     
 13364                           ;usb_device_cdc.c: 901: {
 13365                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13366                           
 13367                           ; BSR set to: 1
 13368  0028D6  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13369  0028DA  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13370  0028DE  6AF8               	clrf	tblptru,c
 13371  0028E0  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13372  0028E4  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13373  0028E8  0E0E               	movlw	(high __ramtop+-1)
 13374  0028EA  64F7               	cpfsgt	tblptrh,c
 13375  0028EC  D003               	bra	u14207
 13376  0028EE  0008               	tblrd		*
 13377  0028F0  50F5               	movf	tablat,w,c
 13378  0028F2  D005               	bra	u14200
 13379  0028F4                     u14207:
 13380  0028F4  CFF6 FFE9          	movff	tblptrl,fsr0l
 13381  0028F8  CFF7 FFEA          	movff	tblptrh,fsr0h
 13382  0028FC  50EF               	movf	indf0,w,c
 13383  0028FE                     u14200:
 13384  0028FE  6EDF               	movwf	indf2,c
 13385                           
 13386                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13387  002900  0102               	movlb	2	; () banked
 13388  002902  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13389  002904  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13390                           
 13391                           ; BSR set to: 2
 13392                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13393  002906  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13394  002908  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13395                           
 13396                           ; BSR set to: 2
 13397                           ;usb_device_cdc.c: 905: i--;
 13398  00290A  0100               	movlb	0	; () banked
 13399  00290C  0784               	decf	CDCTxService@i& (0+255),f,b
 13400  00290E                     l1959:
 13401                           
 13402                           ; BSR set to: 0
 13403  00290E  0100               	movlb	0	; () banked
 13404  002910  5184               	movf	CDCTxService@i& (0+255),w,b
 13405  002912  B4D8               	btfsc	status,2,c
 13406  002914  D021               	goto	u14230
 13407  002916  D7DF               	goto	l1960
 13408  002918                     
 13409                           ; BSR set to: 0
 13410                           ;usb_device_cdc.c: 911: {
 13411                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13412                           
 13413                           ; BSR set to: 0
 13414  002918  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13415  00291C  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13416  002920  6AF8               	clrf	tblptru,c
 13417  002922  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13418  002926  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13419  00292A  0E0E               	movlw	(high __ramtop+-1)
 13420  00292C  64F7               	cpfsgt	tblptrh,c
 13421  00292E  D003               	bra	u14227
 13422  002930  0008               	tblrd		*
 13423  002932  50F5               	movf	tablat,w,c
 13424  002934  D005               	bra	u14220
 13425  002936                     u14227:
 13426  002936  CFF6 FFE9          	movff	tblptrl,fsr0l
 13427  00293A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13428  00293E  50EF               	movf	indf0,w,c
 13429  002940                     u14220:
 13430  002940  6EDF               	movwf	indf2,c
 13431                           
 13432                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13433  002942  0102               	movlb	2	; () banked
 13434  002944  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13435  002946  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13436                           
 13437                           ; BSR set to: 2
 13438                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13439  002948  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13440  00294A  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13441                           
 13442                           ; BSR set to: 2
 13443                           ;usb_device_cdc.c: 915: i--;
 13444  00294C  0100               	movlb	0	; () banked
 13445  00294E  0784               	decf	CDCTxService@i& (0+255),f,b
 13446  002950                     l1963:
 13447                           
 13448                           ; BSR set to: 0
 13449  002950  0100               	movlb	0	; () banked
 13450  002952  5184               	movf	CDCTxService@i& (0+255),w,b
 13451  002954  A4D8               	btfss	status,2,c
 13452  002956  D7E0               	goto	l1964
 13453  002958                     u14230:
 13454                           
 13455                           ; BSR set to: 0
 13456                           ;usb_device_cdc.c: 916: }
 13457                           ;usb_device_cdc.c: 917: }
 13458                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13459                           
 13460                           ; BSR set to: 0
 13461                           
 13462                           ; BSR set to: 0
 13463  002958  51C9               	movf	_cdc_tx_len& (0+255),w,b
 13464  00295A  A4D8               	btfss	status,2,c
 13465  00295C  D008               	goto	l1968
 13466                           
 13467                           ; BSR set to: 0
 13468                           ;usb_device_cdc.c: 924: {
 13469                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13470  00295E  0E40               	movlw	64
 13471  002960  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13472  002962  A4D8               	btfss	status,2,c
 13473  002964  D002               	goto	l1967
 13474                           
 13475                           ; BSR set to: 0
 13476                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13477  002966  0E02               	movlw	2
 13478  002968  D001               	goto	L13
 13479  00296A                     l1967:
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;usb_device_cdc.c: 927: else
 13483                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13484                           
 13485                           ; BSR set to: 0
 13486  00296A  0E03               	movlw	3
 13487  00296C                     L13:
 13488  00296C  6FCA               	movwf	_cdc_trf_state& (0+255),b
 13489  00296E                     l1968:
 13490                           
 13491                           ; BSR set to: 0
 13492                           ;usb_device_cdc.c: 929: }
 13493                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13494                           
 13495                           ; BSR set to: 0
 13496                           
 13497                           ; BSR set to: 0
 13498  00296E  0E01               	movlw	1
 13499  002970  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13500  002972  0E84               	movlw	low _cdc_data_tx
 13501  002974  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13502  002976  0E07               	movlw	high _cdc_data_tx
 13503  002978  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13504  00297A  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13505  00297E  0E02               	movlw	2
 13506  002980  ECE3  F01F         	call	_USBTransferOnePacket
 13507  002984  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13508  002988  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13509  00298C  0012               	return	
 13510  00298E                     __end_of_CDCTxService:
 13511                           	opt stack 0
 13512                           tosu	equ	0xFFF
 13513                           tosh	equ	0xFFE
 13514                           tosl	equ	0xFFD
 13515                           pclath	equ	0xFFA
 13516                           tblptru	equ	0xFF8
 13517                           tblptrh	equ	0xFF7
 13518                           tblptrl	equ	0xFF6
 13519                           tablat	equ	0xFF5
 13520                           prodh	equ	0xFF4
 13521                           prodl	equ	0xFF3
 13522                           intcon	equ	0xFF2
 13523                           intcon2	equ	0xFF1
 13524                           intcon3	equ	0xFF0
 13525                           indf0	equ	0xFEF
 13526                           postinc0	equ	0xFEE
 13527                           plusw0	equ	0xFEB
 13528                           fsr0h	equ	0xFEA
 13529                           fsr0l	equ	0xFE9
 13530                           wreg	equ	0xFE8
 13531                           indf1	equ	0xFE7
 13532                           postinc1	equ	0xFE6
 13533                           postdec1	equ	0xFE5
 13534                           plusw1	equ	0xFE3
 13535                           fsr1h	equ	0xFE2
 13536                           fsr1l	equ	0xFE1
 13537                           indf2	equ	0xFDF
 13538                           postinc2	equ	0xFDE
 13539                           postdec2	equ	0xFDD
 13540                           plusw2	equ	0xFDB
 13541                           fsr2h	equ	0xFDA
 13542                           fsr2l	equ	0xFD9
 13543                           status	equ	0xFD8
 13544                           
 13545 ;; *************** function _Term_MainSm *****************
 13546 ;; Defined at:
 13547 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13548 ;; Parameters:    Size  Location     Type
 13549 ;;		None
 13550 ;; Auto vars:     Size  Location     Type
 13551 ;;  FwkBuildStr     4   79[BANK0 ] unsigned char [4]
 13552 ;;  FwkMinorStr     4   75[BANK0 ] unsigned char [4]
 13553 ;;  FwkMajorStr     4   71[BANK0 ] unsigned char [4]
 13554 ;;  FwkBuildYear    4    0        unsigned char [4]
 13555 ;;  FwkBuildMont    4    0        unsigned char [4]
 13556 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13557 ;; Return value:  Size  Location     Type
 13558 ;;                  1    wreg      void 
 13559 ;; Registers used:
 13560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13561 ;; Tracked objects:
 13562 ;;		On entry : 0/0
 13563 ;;		On exit  : 0/0
 13564 ;;		Unchanged: 0/0
 13565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13567 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13569 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13570 ;;Total ram usage:       12 bytes
 13571 ;; Hardware stack levels used:    1
 13572 ;; Hardware stack levels required when called:   16
 13573 ;; This function calls:
 13574 ;;		_OsTmr_GetTimerStatus
 13575 ;;		_OsTmr_StartTimer
 13576 ;;		_Terminal
 13577 ;;		_memset
 13578 ;;		_putUSBUSART
 13579 ;;		_sprintf
 13580 ;;		_strcat
 13581 ;;		_strcpy
 13582 ;;		_strlen
 13583 ;;		_utoa
 13584 ;; This function is called by:
 13585 ;;		_Term_MainTask
 13586 ;; This function uses a non-reentrant model
 13587 ;;
 13588                           
 13589                           	psect	text55
 13590  0010B6                     __ptext55:
 13591                           	opt stack 0
 13592  0010B6                     _Term_MainSm:
 13593                           	opt stack 11
 13594                           
 13595                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13596                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13597                           ;term.c: 711: static UINT8 Data[50];
 13598                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13599                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13600                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13601                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13602                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13603                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13604                           ;term.c: 719: switch (TermMainSmState)
 13605                           
 13606                           ;incstack = 0
 13607  0010B6  D133               	goto	l2427
 13608  0010B8                     
 13609                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13610  0010B8  0ED1               	movlw	low Term_MainSm@TermDelay
 13611  0010BA  0100               	movlb	0	; () banked
 13612  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13613  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13614  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13615  0010C2  0ED0               	movlw	208
 13616  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13617  0010C6  0E07               	movlw	7
 13618  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13619  0010CA  0E00               	movlw	0
 13620  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13621  0010CE  0E00               	movlw	0
 13622  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13623  0010D2  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 13624                           
 13625                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13626  0010D6  0E01               	movlw	1
 13627  0010D8  0102               	movlb	2	; () banked
 13628  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13629                           
 13630                           ;term.c: 726: break;
 13631  0010DC  0012               	return	
 13632  0010DE                     
 13633                           ; BSR set to: 2
 13634                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13635                           
 13636                           ; BSR set to: 2
 13637  0010DE  0ED1               	movlw	low Term_MainSm@TermDelay
 13638  0010E0  0100               	movlb	0	; () banked
 13639  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13640  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13641  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13642  0010E8  ECFB  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 13643  0010EC  06E8               	decf	wreg,f,c
 13644  0010EE  A4D8               	btfss	status,2,c
 13645  0010F0  0012               	return	
 13646                           
 13647                           ;term.c: 731: {
 13648                           ;term.c: 733: TermMainSmState = Term_InitState;
 13649  0010F2  0E02               	movlw	2
 13650  0010F4  0102               	movlb	2	; () banked
 13651  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13652                           
 13653                           ; BSR set to: 2
 13654                           ;term.c: 734: }
 13655                           ;term.c: 735: break;
 13656  0010F8  0012               	return	
 13657  0010FA                     
 13658                           ; BSR set to: 2
 13659                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13660                           
 13661                           ; BSR set to: 2
 13662  0010FA  0E1F               	movlw	31
 13663  0010FC  0100               	movlb	0	; () banked
 13664  0010FE  65D0               	cpfsgt	_USBDeviceState& (0+255),b
 13665  001100  0012               	return	
 13666                           
 13667                           ; BSR set to: 0
 13668  001102  B265               	btfsc	3941,1,c	;volatile
 13669  001104  0012               	return	
 13670                           
 13671                           ; BSR set to: 0
 13672                           ;term.c: 743: else
 13673                           ;term.c: 744: {
 13674                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13675                           
 13676                           ; BSR set to: 0
 13677                           
 13678                           ; BSR set to: 0
 13679                           ;term.c: 740: {
 13680                           ;term.c: 742: }
 13681  001106  0E03               	movlw	3
 13682  001108  0102               	movlb	2	; () banked
 13683  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13684                           
 13685                           ; BSR set to: 2
 13686                           ;term.c: 747: }
 13687                           ;term.c: 748: break;
 13688  00110C  0012               	return	
 13689  00110E                     
 13690                           ; BSR set to: 2
 13691                           ;term.c: 752: if((cdc_trf_state == 0))
 13692                           
 13693                           ; BSR set to: 2
 13694  00110E  0100               	movlb	0	; () banked
 13695  001110  51CA               	movf	_cdc_trf_state& (0+255),w,b
 13696  001112  A4D8               	btfss	status,2,c
 13697  001114  0012               	return	
 13698                           
 13699                           ; BSR set to: 0
 13700                           ;term.c: 753: {
 13701                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13702  001116  0E21               	movlw	low _Welcome
 13703  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13704  00111A  0EFD               	movlw	high _Welcome
 13705  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13706  00111E  0E88               	movlw	136
 13707  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13708  001122  ECB6  F02F         	call	_putUSBUSART	;wreg free
 13709                           
 13710                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13711  001126  0E04               	movlw	4
 13712  001128  0102               	movlb	2	; () banked
 13713  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13714                           
 13715                           ; BSR set to: 2
 13716                           ;term.c: 758: }
 13717                           ;term.c: 759: break;
 13718  00112C  0012               	return	
 13719  00112E                     
 13720                           ; BSR set to: 2
 13721                           ;term.c: 763: if((cdc_trf_state == 0))
 13722                           
 13723                           ; BSR set to: 2
 13724  00112E  0100               	movlb	0	; () banked
 13725  001130  51CA               	movf	_cdc_trf_state& (0+255),w,b
 13726  001132  A4D8               	btfss	status,2,c
 13727  001134  0012               	return	
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;term.c: 764: {
 13731                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13732  001136  0E31               	movlw	low _MsgFormat
 13733  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13734  00113A  0EFC               	movlw	high _MsgFormat
 13735  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13736  00113E  0EEF               	movlw	239
 13737  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13738  001142  ECB6  F02F         	call	_putUSBUSART	;wreg free
 13739                           
 13740                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13741  001146  0E05               	movlw	5
 13742  001148  0102               	movlb	2	; () banked
 13743  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13744                           
 13745                           ; BSR set to: 2
 13746                           ;term.c: 769: }
 13747                           ;term.c: 770: break;
 13748  00114C  0012               	return	
 13749  00114E                     
 13750                           ; BSR set to: 2
 13751                           ;term.c: 774: if((cdc_trf_state == 0))
 13752                           
 13753                           ; BSR set to: 2
 13754  00114E  0100               	movlb	0	; () banked
 13755  001150  51CA               	movf	_cdc_trf_state& (0+255),w,b
 13756  001152  A4D8               	btfss	status,2,c
 13757  001154  0012               	return	
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;term.c: 775: {
 13761                           ;term.c: 777: memset(Data,0,50);
 13762  001156  0E54               	movlw	low Term_MainSm@Data
 13763  001158  6F7D               	movwf	memset@p1& (0+255),b
 13764  00115A  0E04               	movlw	high Term_MainSm@Data
 13765  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13766  00115E  0E00               	movlw	0
 13767  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13768  001162  0E00               	movlw	0
 13769  001164  6F7F               	movwf	memset@c& (0+255),b
 13770  001166  0E00               	movlw	0
 13771  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13772  00116A  0E32               	movlw	50
 13773  00116C  6F81               	movwf	memset@n& (0+255),b
 13774  00116E  EC5E  F02E         	call	_memset	;wreg free
 13775                           
 13776                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13777  001172  0EA7               	movlw	low Term_MainSm@FwkMajorStr
 13778  001174  0100               	movlb	0	; () banked
 13779  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13780  001178  0E00               	movlw	high Term_MainSm@FwkMajorStr
 13781  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13782  00117C  0E00               	movlw	0
 13783  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13784  001180  0E01               	movlw	1
 13785  001182  6F8C               	movwf	utoa@val& (0+255),b
 13786  001184  0E00               	movlw	0
 13787  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13788  001188  0E0A               	movlw	10
 13789  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13790  00118C  EC49  F021         	call	_utoa	;wreg free
 13791                           
 13792                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13793  001190  0EAB               	movlw	low Term_MainSm@FwkMinorStr
 13794  001192  0100               	movlb	0	; () banked
 13795  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13796  001196  0E00               	movlw	high Term_MainSm@FwkMinorStr
 13797  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13798  00119A  0E00               	movlw	0
 13799  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13800  00119E  0E02               	movlw	2
 13801  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13802  0011A2  0E00               	movlw	0
 13803  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13804  0011A6  0E0A               	movlw	10
 13805  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13806  0011AA  EC49  F021         	call	_utoa	;wreg free
 13807                           
 13808                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13809  0011AE  0EAF               	movlw	low Term_MainSm@FwkBuildStr
 13810  0011B0  0100               	movlb	0	; () banked
 13811  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13812  0011B4  0E00               	movlw	high Term_MainSm@FwkBuildStr
 13813  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13814  0011B8  0E00               	movlw	0
 13815  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13816  0011BC  0E00               	movlw	0
 13817  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13818  0011C0  0E00               	movlw	0
 13819  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13820  0011C4  0E0A               	movlw	10
 13821  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13822  0011C8  EC49  F021         	call	_utoa	;wreg free
 13823                           
 13824                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13825  0011CC  0E54               	movlw	low Term_MainSm@Data
 13826  0011CE  0100               	movlb	0	; () banked
 13827  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13828  0011D2  0E04               	movlw	high Term_MainSm@Data
 13829  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13830  0011D6  0ED1               	movlw	low STR_23
 13831  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13832  0011DA  0EFE               	movlw	high STR_23
 13833  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13834  0011DE  EC2D  F02E         	call	_strcpy	;wreg free
 13835                           
 13836                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13837  0011E2  0E54               	movlw	low Term_MainSm@Data
 13838  0011E4  0100               	movlb	0	; () banked
 13839  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13840  0011E8  0E04               	movlw	high Term_MainSm@Data
 13841  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13842  0011EC  0EA7               	movlw	low Term_MainSm@FwkMajorStr
 13843  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13844  0011F0  0E00               	movlw	high Term_MainSm@FwkMajorStr
 13845  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13846  0011F4  ECDF  F028         	call	_strcat	;wreg free
 13847                           
 13848                           ;term.c: 784: strcat(Data,".");
 13849  0011F8  0E54               	movlw	low Term_MainSm@Data
 13850  0011FA  0100               	movlb	0	; () banked
 13851  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13852  0011FE  0E04               	movlw	high Term_MainSm@Data
 13853  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13854  001202  0EF4               	movlw	low STR_24
 13855  001204  6F7F               	movwf	strcat@from& (0+255),b
 13856  001206  0EFF               	movlw	high STR_24
 13857  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13858  00120A  ECDF  F028         	call	_strcat	;wreg free
 13859                           
 13860                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13861  00120E  0E54               	movlw	low Term_MainSm@Data
 13862  001210  0100               	movlb	0	; () banked
 13863  001212  6F7D               	movwf	strcat@to& (0+255),b
 13864  001214  0E04               	movlw	high Term_MainSm@Data
 13865  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13866  001218  0EAB               	movlw	low Term_MainSm@FwkMinorStr
 13867  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13868  00121C  0E00               	movlw	high Term_MainSm@FwkMinorStr
 13869  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13870  001220  ECDF  F028         	call	_strcat	;wreg free
 13871                           
 13872                           ;term.c: 786: strcat(Data,".");
 13873  001224  0E54               	movlw	low Term_MainSm@Data
 13874  001226  0100               	movlb	0	; () banked
 13875  001228  6F7D               	movwf	strcat@to& (0+255),b
 13876  00122A  0E04               	movlw	high Term_MainSm@Data
 13877  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13878  00122E  0EF4               	movlw	low STR_24
 13879  001230  6F7F               	movwf	strcat@from& (0+255),b
 13880  001232  0EFF               	movlw	high STR_24
 13881  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 13882  001236  ECDF  F028         	call	_strcat	;wreg free
 13883                           
 13884                           ;term.c: 787: strcat(Data,FwkBuildStr);
 13885  00123A  0E54               	movlw	low Term_MainSm@Data
 13886  00123C  0100               	movlb	0	; () banked
 13887  00123E  6F7D               	movwf	strcat@to& (0+255),b
 13888  001240  0E04               	movlw	high Term_MainSm@Data
 13889  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13890  001244  0EAF               	movlw	low Term_MainSm@FwkBuildStr
 13891  001246  6F7F               	movwf	strcat@from& (0+255),b
 13892  001248  0E00               	movlw	high Term_MainSm@FwkBuildStr
 13893  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 13894  00124C  ECDF  F028         	call	_strcat	;wreg free
 13895                           
 13896                           ;term.c: 788: strcat(Data,"\r\n");
 13897  001250  0E54               	movlw	low Term_MainSm@Data
 13898  001252  0100               	movlb	0	; () banked
 13899  001254  6F7D               	movwf	strcat@to& (0+255),b
 13900  001256  0E04               	movlw	high Term_MainSm@Data
 13901  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13902  00125A  0E85               	movlw	low (STR_21+39)
 13903  00125C  6F7F               	movwf	strcat@from& (0+255),b
 13904  00125E  0EFE               	movlw	high (STR_21+39)
 13905  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 13906  001262  ECDF  F028         	call	_strcat	;wreg free
 13907                           
 13908                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 13909  001266  0E54               	movlw	low Term_MainSm@Data
 13910  001268  0100               	movlb	0	; () banked
 13911  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 13912  00126C  0E04               	movlw	high Term_MainSm@Data
 13913  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13914  001270  0E54               	movlw	low Term_MainSm@Data
 13915  001272  6F7D               	movwf	strlen@s& (0+255),b
 13916  001274  0E04               	movlw	high Term_MainSm@Data
 13917  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13918  001278  ECF2  F02C         	call	_strlen	;wreg free
 13919  00127C  0100               	movlb	0	; () banked
 13920  00127E  517D               	movf	?_strlen& (0+255),w,b
 13921  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 13922  001282  ECB6  F02F         	call	_putUSBUSART	;wreg free
 13923                           
 13924                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 13925  001286  0E06               	movlw	6
 13926  001288  0102               	movlb	2	; () banked
 13927  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13928                           
 13929                           ; BSR set to: 2
 13930                           ;term.c: 793: }
 13931                           ;term.c: 794: break;
 13932  00128C  0012               	return	
 13933  00128E                     
 13934                           ; BSR set to: 2
 13935                           ;term.c: 798: if((cdc_trf_state == 0))
 13936                           
 13937                           ; BSR set to: 2
 13938  00128E  0100               	movlb	0	; () banked
 13939  001290  51CA               	movf	_cdc_trf_state& (0+255),w,b
 13940  001292  A4D8               	btfss	status,2,c
 13941  001294  0012               	return	
 13942                           
 13943                           ; BSR set to: 0
 13944                           ;term.c: 799: {
 13945                           ;term.c: 801: memset(Data,0,50);
 13946  001296  0E54               	movlw	low Term_MainSm@Data
 13947  001298  6F7D               	movwf	memset@p1& (0+255),b
 13948  00129A  0E04               	movlw	high Term_MainSm@Data
 13949  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13950  00129E  0E00               	movlw	0
 13951  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 13952  0012A2  0E00               	movlw	0
 13953  0012A4  6F7F               	movwf	memset@c& (0+255),b
 13954  0012A6  0E00               	movlw	0
 13955  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 13956  0012AA  0E32               	movlw	50
 13957  0012AC  6F81               	movwf	memset@n& (0+255),b
 13958  0012AE  EC5E  F02E         	call	_memset	;wreg free
 13959                           
 13960                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 16 2022");
 13961  0012B2  0E54               	movlw	low Term_MainSm@Data
 13962  0012B4  0100               	movlb	0	; () banked
 13963  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 13964  0012B8  0E04               	movlw	high Term_MainSm@Data
 13965  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 13966  0012BC  0E0C               	movlw	low STR_27
 13967  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 13968  0012C0  0EFF               	movlw	high STR_27
 13969  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 13970  0012C4  0EB5               	movlw	low STR_28
 13971  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 13972  0012C8  0EFF               	movlw	high STR_28
 13973  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 13974  0012CC  EC5C  F01C         	call	_sprintf	;wreg free
 13975                           
 13976                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 13977  0012D0  0E54               	movlw	low Term_MainSm@Data
 13978  0012D2  0100               	movlb	0	; () banked
 13979  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 13980  0012D6  0E04               	movlw	high Term_MainSm@Data
 13981  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13982  0012DA  0E54               	movlw	low Term_MainSm@Data
 13983  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 13984  0012DE  0E04               	movlw	high Term_MainSm@Data
 13985  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13986  0012E2  ECF2  F02C         	call	_strlen	;wreg free
 13987  0012E6  0100               	movlb	0	; () banked
 13988  0012E8  517D               	movf	?_strlen& (0+255),w,b
 13989  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 13990  0012EC  ECB6  F02F         	call	_putUSBUSART	;wreg free
 13991                           
 13992                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 13993  0012F0  0E07               	movlw	7
 13994  0012F2  0102               	movlb	2	; () banked
 13995  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13996                           
 13997                           ; BSR set to: 2
 13998                           ;term.c: 808: }
 13999                           ;term.c: 809: break;
 14000  0012F6  0012               	return	
 14001  0012F8                     
 14002                           ; BSR set to: 2
 14003                           ;term.c: 813: if((cdc_trf_state == 0))
 14004                           
 14005                           ; BSR set to: 2
 14006  0012F8  0100               	movlb	0	; () banked
 14007  0012FA  51CA               	movf	_cdc_trf_state& (0+255),w,b
 14008  0012FC  A4D8               	btfss	status,2,c
 14009  0012FE  0012               	return	
 14010                           
 14011                           ; BSR set to: 0
 14012                           ;term.c: 814: {
 14013                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14014  001300  0E31               	movlw	low _MsgReady
 14015  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14016  001304  0EFE               	movlw	high _MsgReady
 14017  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14018  001308  0E16               	movlw	22
 14019  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14020  00130C  ECB6  F02F         	call	_putUSBUSART	;wreg free
 14021                           
 14022                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14023  001310  0E08               	movlw	8
 14024  001312  0102               	movlb	2	; () banked
 14025  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14026                           
 14027                           ; BSR set to: 2
 14028                           ;term.c: 819: }
 14029                           ;term.c: 820: break;
 14030  001316  0012               	return	
 14031  001318                     
 14032                           ; BSR set to: 2
 14033                           ;term.c: 824: Terminal();
 14034                           
 14035                           ; BSR set to: 2
 14036  001318  EC68  F000         	call	_Terminal	;wreg free
 14037                           
 14038                           ;term.c: 829: }
 14039                           
 14040                           ;term.c: 828: break;
 14041                           
 14042                           ;term.c: 827: default:
 14043                           
 14044                           ;term.c: 825: break;
 14045  00131C  0012               	return	
 14046  00131E                     l2427:
 14047  00131E  0102               	movlb	2	; () banked
 14048  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14049                           
 14050                           ; Switch size 1, requested type "space"
 14051                           ; Number of cases is 9, Range of values is 0 to 8
 14052                           ; switch strategies available:
 14053                           ; Name         Instructions Cycles
 14054                           ; simple_byte           28    15 (average)
 14055                           ;	Chosen strategy is simple_byte
 14056  001322  0A00               	xorlw	0	; case 0
 14057  001324  B4D8               	btfsc	status,2,c
 14058  001326  D6C8               	goto	l2428
 14059  001328  0A01               	xorlw	1	; case 1
 14060  00132A  B4D8               	btfsc	status,2,c
 14061  00132C  D6D8               	goto	l2430
 14062  00132E  0A03               	xorlw	3	; case 2
 14063  001330  B4D8               	btfsc	status,2,c
 14064  001332  D6E3               	goto	l2432
 14065  001334  0A01               	xorlw	1	; case 3
 14066  001336  B4D8               	btfsc	status,2,c
 14067  001338  D6EA               	goto	l2437
 14068  00133A  0A07               	xorlw	7	; case 4
 14069  00133C  B4D8               	btfsc	status,2,c
 14070  00133E  D6F7               	goto	l2439
 14071  001340  0A01               	xorlw	1	; case 5
 14072  001342  B4D8               	btfsc	status,2,c
 14073  001344  D704               	goto	l2441
 14074  001346  0A03               	xorlw	3	; case 6
 14075  001348  B4D8               	btfsc	status,2,c
 14076  00134A  D7A1               	goto	l2443
 14077  00134C  0A01               	xorlw	1	; case 7
 14078  00134E  B4D8               	btfsc	status,2,c
 14079  001350  D7D3               	goto	l2445
 14080  001352  0A0F               	xorlw	15	; case 8
 14081  001354  A4D8               	btfss	status,2,c
 14082  001356  0012               	return	
 14083  001358  D7DF               	goto	l2447
 14084  00135A                     __end_of_Term_MainSm:
 14085                           	opt stack 0
 14086                           tosu	equ	0xFFF
 14087                           tosh	equ	0xFFE
 14088                           tosl	equ	0xFFD
 14089                           pclath	equ	0xFFA
 14090                           tblptru	equ	0xFF8
 14091                           tblptrh	equ	0xFF7
 14092                           tblptrl	equ	0xFF6
 14093                           tablat	equ	0xFF5
 14094                           prodh	equ	0xFF4
 14095                           prodl	equ	0xFF3
 14096                           intcon	equ	0xFF2
 14097                           intcon2	equ	0xFF1
 14098                           intcon3	equ	0xFF0
 14099                           indf0	equ	0xFEF
 14100                           postinc0	equ	0xFEE
 14101                           plusw0	equ	0xFEB
 14102                           fsr0h	equ	0xFEA
 14103                           fsr0l	equ	0xFE9
 14104                           wreg	equ	0xFE8
 14105                           indf1	equ	0xFE7
 14106                           postinc1	equ	0xFE6
 14107                           postdec1	equ	0xFE5
 14108                           plusw1	equ	0xFE3
 14109                           fsr1h	equ	0xFE2
 14110                           fsr1l	equ	0xFE1
 14111                           indf2	equ	0xFDF
 14112                           postinc2	equ	0xFDE
 14113                           postdec2	equ	0xFDD
 14114                           plusw2	equ	0xFDB
 14115                           fsr2h	equ	0xFDA
 14116                           fsr2l	equ	0xFD9
 14117                           status	equ	0xFD8
 14118                           
 14119 ;; *************** function _strlen *****************
 14120 ;; Defined at:
 14121 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14122 ;; Parameters:    Size  Location     Type
 14123 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14124 ;;		 -> Term_MainSm@Data(50), 
 14125 ;; Auto vars:     Size  Location     Type
 14126 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14127 ;;		 -> Term_MainSm@Data(50), 
 14128 ;; Return value:  Size  Location     Type
 14129 ;;                  2   29[BANK0 ] unsigned int 
 14130 ;; Registers used:
 14131 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14132 ;; Tracked objects:
 14133 ;;		On entry : 0/0
 14134 ;;		On exit  : 0/0
 14135 ;;		Unchanged: 0/0
 14136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14137 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14138 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14139 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14140 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14141 ;;Total ram usage:        6 bytes
 14142 ;; Hardware stack levels used:    1
 14143 ;; Hardware stack levels required when called:   11
 14144 ;; This function calls:
 14145 ;;		Nothing
 14146 ;; This function is called by:
 14147 ;;		_Term_MainSm
 14148 ;; This function uses a non-reentrant model
 14149 ;;
 14150                           
 14151                           	psect	text56
 14152  0059E4                     __ptext56:
 14153                           	opt stack 0
 14154  0059E4                     _strlen:
 14155                           	opt stack 15
 14156                           
 14157                           ;incstack = 0
 14158  0059E4  C07D  F081         	movff	strlen@s,strlen@cp
 14159  0059E8  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14160  0059EC  D003               	goto	l3221
 14161  0059EE  0100               	movlb	0	; () banked
 14162  0059F0  4B81               	infsnz	strlen@cp& (0+255),f,b
 14163  0059F2  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14164  0059F4                     l3221:
 14165                           
 14166                           ; BSR set to: 0
 14167  0059F4  C081  FFD9         	movff	strlen@cp,fsr2l
 14168  0059F8  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14169  0059FC  50DF               	movf	indf2,w,c
 14170  0059FE  A4D8               	btfss	status,2,c
 14171  005A00  D7F6               	goto	l3222
 14172  005A02  C07D  F07F         	movff	strlen@s,??_strlen
 14173  005A06  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14174  005A0A  0100               	movlb	0	; () banked
 14175  005A0C  1F7F               	comf	??_strlen& (0+255),f,b
 14176  005A0E  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14177  005A10  4B7F               	infsnz	??_strlen& (0+255),f,b
 14178  005A12  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14179  005A14  5181               	movf	strlen@cp& (0+255),w,b
 14180  005A16  257F               	addwf	??_strlen& (0+255),w,b
 14181  005A18  6F7D               	movwf	?_strlen& (0+255),b
 14182  005A1A  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14183  005A1C  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14184  005A1E  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14185  005A20  0012               	return	
 14186  005A22                     __end_of_strlen:
 14187                           	opt stack 0
 14188                           tosu	equ	0xFFF
 14189                           tosh	equ	0xFFE
 14190                           tosl	equ	0xFFD
 14191                           pclath	equ	0xFFA
 14192                           tblptru	equ	0xFF8
 14193                           tblptrh	equ	0xFF7
 14194                           tblptrl	equ	0xFF6
 14195                           tablat	equ	0xFF5
 14196                           prodh	equ	0xFF4
 14197                           prodl	equ	0xFF3
 14198                           intcon	equ	0xFF2
 14199                           intcon2	equ	0xFF1
 14200                           intcon3	equ	0xFF0
 14201                           indf0	equ	0xFEF
 14202                           postinc0	equ	0xFEE
 14203                           plusw0	equ	0xFEB
 14204                           fsr0h	equ	0xFEA
 14205                           fsr0l	equ	0xFE9
 14206                           wreg	equ	0xFE8
 14207                           indf1	equ	0xFE7
 14208                           postinc1	equ	0xFE6
 14209                           postdec1	equ	0xFE5
 14210                           plusw1	equ	0xFE3
 14211                           fsr1h	equ	0xFE2
 14212                           fsr1l	equ	0xFE1
 14213                           indf2	equ	0xFDF
 14214                           postinc2	equ	0xFDE
 14215                           postdec2	equ	0xFDD
 14216                           plusw2	equ	0xFDB
 14217                           fsr2h	equ	0xFDA
 14218                           fsr2l	equ	0xFD9
 14219                           status	equ	0xFD8
 14220                           
 14221 ;; *************** function _strcat *****************
 14222 ;; Defined at:
 14223 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14224 ;; Parameters:    Size  Location     Type
 14225 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14226 ;;		 -> Term_MainSm@Data(50), 
 14227 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14228 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14229 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14230 ;; Auto vars:     Size  Location     Type
 14231 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14232 ;;		 -> Term_MainSm@Data(50), 
 14233 ;; Return value:  Size  Location     Type
 14234 ;;                  2   29[BANK0 ] PTR unsigned char 
 14235 ;; Registers used:
 14236 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14237 ;; Tracked objects:
 14238 ;;		On entry : 0/0
 14239 ;;		On exit  : 0/0
 14240 ;;		Unchanged: 0/0
 14241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14242 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14243 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14245 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14246 ;;Total ram usage:        6 bytes
 14247 ;; Hardware stack levels used:    1
 14248 ;; Hardware stack levels required when called:   11
 14249 ;; This function calls:
 14250 ;;		Nothing
 14251 ;; This function is called by:
 14252 ;;		_Term_MainSm
 14253 ;; This function uses a non-reentrant model
 14254 ;;
 14255                           
 14256                           	psect	text57
 14257  0051BE                     __ptext57:
 14258                           	opt stack 0
 14259  0051BE                     _strcat:
 14260                           	opt stack 15
 14261                           
 14262                           ; BSR set to: 0
 14263                           ;incstack = 0
 14264  0051BE  C07D  F081         	movff	strcat@to,strcat@cp
 14265  0051C2  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14266  0051C6  D003               	goto	l3206
 14267  0051C8  0100               	movlb	0	; () banked
 14268  0051CA  4B81               	infsnz	strcat@cp& (0+255),f,b
 14269  0051CC  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14270  0051CE                     l3206:
 14271                           
 14272                           ; BSR set to: 0
 14273  0051CE  C081  FFD9         	movff	strcat@cp,fsr2l
 14274  0051D2  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14275  0051D6  50DF               	movf	indf2,w,c
 14276  0051D8  B4D8               	btfsc	status,2,c
 14277  0051DA  D006               	goto	l3209
 14278  0051DC  D7F5               	goto	l3207
 14279  0051DE  0100               	movlb	0	; () banked
 14280  0051E0  4B81               	infsnz	strcat@cp& (0+255),f,b
 14281  0051E2  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14282  0051E4  4B7F               	infsnz	strcat@from& (0+255),f,b
 14283  0051E6  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14284  0051E8                     l3209:
 14285                           
 14286                           ; BSR set to: 0
 14287  0051E8  C07F  FFF6         	movff	strcat@from,tblptrl
 14288  0051EC  C080  FFF7         	movff	strcat@from+1,tblptrh
 14289  0051F0  6AF8               	clrf	tblptru,c
 14290  0051F2  C081  FFD9         	movff	strcat@cp,fsr2l
 14291  0051F6  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14292  0051FA  0E0E               	movlw	(high __ramtop+-1)
 14293  0051FC  64F7               	cpfsgt	tblptrh,c
 14294  0051FE  D003               	bra	u13007
 14295  005200  0008               	tblrd		*
 14296  005202  50F5               	movf	tablat,w,c
 14297  005204  D005               	bra	u13000
 14298  005206                     u13007:
 14299  005206  CFF6 FFE9          	movff	tblptrl,fsr0l
 14300  00520A  CFF7 FFEA          	movff	tblptrh,fsr0h
 14301  00520E  50EF               	movf	indf0,w,c
 14302  005210                     u13000:
 14303  005210  6EDF               	movwf	indf2,c
 14304  005212  50DF               	movf	indf2,w,c
 14305  005214  B4D8               	btfsc	status,2,c
 14306  005216  0012               	return	
 14307  005218  D7E2               	goto	l3210
 14308  00521A                     __end_of_strcat:
 14309                           	opt stack 0
 14310                           tosu	equ	0xFFF
 14311                           tosh	equ	0xFFE
 14312                           tosl	equ	0xFFD
 14313                           pclath	equ	0xFFA
 14314                           tblptru	equ	0xFF8
 14315                           tblptrh	equ	0xFF7
 14316                           tblptrl	equ	0xFF6
 14317                           tablat	equ	0xFF5
 14318                           prodh	equ	0xFF4
 14319                           prodl	equ	0xFF3
 14320                           intcon	equ	0xFF2
 14321                           intcon2	equ	0xFF1
 14322                           intcon3	equ	0xFF0
 14323                           indf0	equ	0xFEF
 14324                           postinc0	equ	0xFEE
 14325                           plusw0	equ	0xFEB
 14326                           fsr0h	equ	0xFEA
 14327                           fsr0l	equ	0xFE9
 14328                           wreg	equ	0xFE8
 14329                           indf1	equ	0xFE7
 14330                           postinc1	equ	0xFE6
 14331                           postdec1	equ	0xFE5
 14332                           plusw1	equ	0xFE3
 14333                           fsr1h	equ	0xFE2
 14334                           fsr1l	equ	0xFE1
 14335                           indf2	equ	0xFDF
 14336                           postinc2	equ	0xFDE
 14337                           postdec2	equ	0xFDD
 14338                           plusw2	equ	0xFDB
 14339                           fsr2h	equ	0xFDA
 14340                           fsr2l	equ	0xFD9
 14341                           status	equ	0xFD8
 14342                           
 14343 ;; *************** function _sprintf *****************
 14344 ;; Defined at:
 14345 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14346 ;; Parameters:    Size  Location     Type
 14347 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14348 ;;		 -> Term_MainSm@Data(50), 
 14349 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14350 ;;		 -> STR_27(17), 
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;  tmpval          4    0        struct .
 14353 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14354 ;;		 -> STR_32(7), STR_28(12), 
 14355 ;;  ap              2   36[BANK0 ] PTR void [1]
 14356 ;;		 -> ?_sprintf(2), 
 14357 ;;  len             2    0        unsigned int 
 14358 ;;  val             2    0        unsigned int 
 14359 ;;  c               1   38[BANK0 ] char 
 14360 ;;  flag            1   35[BANK0 ] unsigned char 
 14361 ;;  prec            1    0        char 
 14362 ;; Return value:  Size  Location     Type
 14363 ;;                  2   29[BANK0 ] int 
 14364 ;; Registers used:
 14365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14366 ;; Tracked objects:
 14367 ;;		On entry : 0/0
 14368 ;;		On exit  : 0/0
 14369 ;;		Unchanged: 0/0
 14370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14371 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14372 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14374 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14375 ;;Total ram usage:       12 bytes
 14376 ;; Hardware stack levels used:    1
 14377 ;; Hardware stack levels required when called:   11
 14378 ;; This function calls:
 14379 ;;		Nothing
 14380 ;; This function is called by:
 14381 ;;		_Term_MainSm
 14382 ;; This function uses a non-reentrant model
 14383 ;;
 14384                           
 14385                           	psect	text58
 14386  0038B8                     __ptext58:
 14387                           	opt stack 0
 14388  0038B8                     _sprintf:
 14389                           	opt stack 15
 14390                           
 14391                           ;doprnt.c: 494: va_list ap;
 14392                           ;doprnt.c: 499: signed char c;
 14393                           ;doprnt.c: 506: signed char prec;
 14394                           ;doprnt.c: 508: unsigned char flag;
 14395                           ;doprnt.c: 523: union {
 14396                           ;doprnt.c: 524: unsigned long vd;
 14397                           ;doprnt.c: 525: double integ;
 14398                           ;doprnt.c: 526: } tmpval;
 14399                           ;doprnt.c: 528: unsigned int val;
 14400                           ;doprnt.c: 529: unsigned len;
 14401                           ;doprnt.c: 530: const char * cp;
 14402                           ;doprnt.c: 533: *ap = __va_start();
 14403                           
 14404                           ;incstack = 0
 14405  0038B8  0E81               	movlw	low (?_sprintf+4)
 14406  0038BA  0100               	movlb	0	; () banked
 14407  0038BC  6F84               	movwf	sprintf@ap& (0+255),b
 14408  0038BE  0E00               	movlw	high (?_sprintf+4)
 14409  0038C0  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14410                           
 14411                           ;doprnt.c: 536: while(c = *f++) {
 14412  0038C2  D04E               	goto	l2610
 14413  0038C4                     
 14414                           ; BSR set to: 0
 14415                           ;doprnt.c: 538: if(c != '%')
 14416                           
 14417                           ; BSR set to: 0
 14418  0038C4  0E25               	movlw	37
 14419  0038C6  1986               	xorwf	sprintf@c& (0+255),w,b
 14420  0038C8  B4D8               	btfsc	status,2,c
 14421  0038CA  D009               	goto	l2600
 14422                           
 14423                           ; BSR set to: 0
 14424                           ;doprnt.c: 540: {
 14425                           ;doprnt.c: 541: ((*sp++ = (c)));
 14426  0038CC  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14427  0038D0  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14428  0038D4  C086  FFDF         	movff	sprintf@c,indf2
 14429                           
 14430                           ; BSR set to: 0
 14431  0038D8  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14432  0038DA  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14433                           
 14434                           ;doprnt.c: 542: continue;
 14435  0038DC  D041               	goto	l2610
 14436  0038DE                     l2600:
 14437                           
 14438                           ; BSR set to: 0
 14439                           ;doprnt.c: 543: }
 14440                           ;doprnt.c: 548: flag = 0;
 14441                           
 14442                           ; BSR set to: 0
 14443  0038DE  0E00               	movlw	0
 14444  0038E0  6F83               	movwf	sprintf@flag& (0+255),b
 14445                           
 14446                           ;doprnt.c: 635: switch(c = *f++) {
 14447  0038E2  D02E               	goto	l2601
 14448  0038E4                     
 14449                           ; BSR set to: 0
 14450                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14451                           
 14452                           ; BSR set to: 0
 14453  0038E4  C084  FFD9         	movff	sprintf@ap,fsr2l
 14454  0038E8  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14455  0038EC  CFDE F087          	movff	postinc2,sprintf@cp
 14456  0038F0  CFDD F088          	movff	postdec2,sprintf@cp+1
 14457                           
 14458                           ; BSR set to: 0
 14459  0038F4  0E02               	movlw	2
 14460  0038F6  2784               	addwf	sprintf@ap& (0+255),f,b
 14461  0038F8  0E00               	movlw	0
 14462  0038FA  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14463                           
 14464                           ; BSR set to: 0
 14465                           ;doprnt.c: 740: if(!cp)
 14466  0038FC  5187               	movf	sprintf@cp& (0+255),w,b
 14467  0038FE  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14468  003900  A4D8               	btfss	status,2,c
 14469  003902  D014               	goto	l2606
 14470                           
 14471                           ; BSR set to: 0
 14472                           ;doprnt.c: 741: cp = "(null)";
 14473  003904  0ED7               	movlw	low STR_32
 14474  003906  6F87               	movwf	sprintf@cp& (0+255),b
 14475  003908  0EFF               	movlw	high STR_32
 14476  00390A  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14477                           
 14478                           ; BSR set to: 0
 14479                           ;doprnt.c: 777: while(*cp)
 14480  00390C  D00F               	goto	l2606
 14481  00390E                     
 14482                           ; BSR set to: 0
 14483                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14484                           
 14485                           ; BSR set to: 0
 14486  00390E  C087  FFF6         	movff	sprintf@cp,tblptrl
 14487  003912  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14488  003916                     	if	0	;tblptru may be non-zero
 14489  003916                     	endif
 14490  003916                     	if	0	;tblptru may be non-zero
 14491  003916                     	endif
 14492  003916  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14493  00391A  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14494  00391E  0008               	tblrd		*
 14495  003920  CFF5 FFDF          	movff	tablat,indf2
 14496                           
 14497                           ; BSR set to: 0
 14498  003924  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14499  003926  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14500                           
 14501                           ; BSR set to: 0
 14502  003928  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14503  00392A  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14504  00392C                     l2606:
 14505                           
 14506                           ; BSR set to: 0
 14507                           
 14508                           ; BSR set to: 0
 14509  00392C  C087  FFF6         	movff	sprintf@cp,tblptrl
 14510  003930  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14511  003934                     	if	0	;tblptru may be non-zero
 14512  003934                     	endif
 14513  003934                     	if	0	;tblptru may be non-zero
 14514  003934                     	endif
 14515  003934  0008               	tblrd		*
 14516  003936  50F5               	movf	tablat,w,c
 14517  003938  0900               	iorlw	0
 14518  00393A  B4D8               	btfsc	status,2,c
 14519  00393C  D011               	goto	l2610
 14520  00393E  D7E7               	goto	l2607
 14521  003940                     l2601:
 14522                           
 14523                           ; BSR set to: 0
 14524                           
 14525                           ; BSR set to: 0
 14526  003940  C07F  FFF6         	movff	sprintf@f,tblptrl
 14527  003944  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14528  003948  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14529  00394A  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14530  00394C                     	if	0	;tblptru may be non-zero
 14531  00394C                     	endif
 14532  00394C                     	if	0	;tblptru may be non-zero
 14533  00394C                     	endif
 14534  00394C  0008               	tblrd		*
 14535  00394E  CFF5 F086          	movff	tablat,sprintf@c
 14536  003952  5186               	movf	sprintf@c& (0+255),w,b
 14537                           
 14538                           ; Switch size 1, requested type "space"
 14539                           ; Number of cases is 2, Range of values is 0 to 115
 14540                           ; switch strategies available:
 14541                           ; Name         Instructions Cycles
 14542                           ; simple_byte            7     4 (average)
 14543                           ;	Chosen strategy is simple_byte
 14544  003954  0A00               	xorlw	0	; case 0
 14545  003956  B4D8               	btfsc	status,2,c
 14546  003958  D00F               	goto	u13060
 14547  00395A  0A73               	xorlw	115	; case 115
 14548  00395C  B4D8               	btfsc	status,2,c
 14549  00395E  D7C2               	goto	l2604
 14550  003960                     l2610:
 14551                           
 14552                           ; BSR set to: 0
 14553                           
 14554                           ; BSR set to: 0
 14555                           
 14556                           ;doprnt.c: 1422: {
 14557                           
 14558                           ; BSR set to: 0
 14559  003960  C07F  FFF6         	movff	sprintf@f,tblptrl
 14560  003964  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14561  003968  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14562  00396A  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14563  00396C                     	if	0	;tblptru may be non-zero
 14564  00396C                     	endif
 14565  00396C                     	if	0	;tblptru may be non-zero
 14566  00396C                     	endif
 14567  00396C  0008               	tblrd		*
 14568  00396E  CFF5 F086          	movff	tablat,sprintf@c
 14569  003972  5186               	movf	sprintf@c& (0+255),w,b
 14570  003974  A4D8               	btfss	status,2,c
 14571  003976  D7A6               	goto	l2599
 14572  003978                     u13060:
 14573                           
 14574                           ; BSR set to: 0
 14575                           ;doprnt.c: 1538: *sp = 0;
 14576                           
 14577                           ; BSR set to: 0
 14578                           
 14579                           ;doprnt.c: 1469: }
 14580                           ;doprnt.c: 1533: }
 14581                           ;doprnt.c: 1535: alldone:
 14582                           
 14583                           ; BSR set to: 0
 14584  003978  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14585  00397C  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14586  003980  0E00               	movlw	0
 14587  003982  6EDF               	movwf	indf2,c
 14588  003984  0012               	return	
 14589  003986                     __end_of_sprintf:
 14590                           	opt stack 0
 14591                           tosu	equ	0xFFF
 14592                           tosh	equ	0xFFE
 14593                           tosl	equ	0xFFD
 14594                           pclath	equ	0xFFA
 14595                           tblptru	equ	0xFF8
 14596                           tblptrh	equ	0xFF7
 14597                           tblptrl	equ	0xFF6
 14598                           tablat	equ	0xFF5
 14599                           prodh	equ	0xFF4
 14600                           prodl	equ	0xFF3
 14601                           intcon	equ	0xFF2
 14602                           intcon2	equ	0xFF1
 14603                           intcon3	equ	0xFF0
 14604                           indf0	equ	0xFEF
 14605                           postinc0	equ	0xFEE
 14606                           plusw0	equ	0xFEB
 14607                           fsr0h	equ	0xFEA
 14608                           fsr0l	equ	0xFE9
 14609                           wreg	equ	0xFE8
 14610                           indf1	equ	0xFE7
 14611                           postinc1	equ	0xFE6
 14612                           postdec1	equ	0xFE5
 14613                           plusw1	equ	0xFE3
 14614                           fsr1h	equ	0xFE2
 14615                           fsr1l	equ	0xFE1
 14616                           indf2	equ	0xFDF
 14617                           postinc2	equ	0xFDE
 14618                           postdec2	equ	0xFDD
 14619                           plusw2	equ	0xFDB
 14620                           fsr2h	equ	0xFDA
 14621                           fsr2l	equ	0xFD9
 14622                           status	equ	0xFD8
 14623                           
 14624 ;; *************** function _memset *****************
 14625 ;; Defined at:
 14626 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14627 ;; Parameters:    Size  Location     Type
 14628 ;;  p1              2   29[BANK0 ] PTR void 
 14629 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14630 ;;  c               2   31[BANK0 ] int 
 14631 ;;  n               2   33[BANK0 ] unsigned int 
 14632 ;; Auto vars:     Size  Location     Type
 14633 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14634 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14635 ;; Return value:  Size  Location     Type
 14636 ;;                  2   29[BANK0 ] PTR void 
 14637 ;; Registers used:
 14638 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14639 ;; Tracked objects:
 14640 ;;		On entry : 0/0
 14641 ;;		On exit  : 0/0
 14642 ;;		Unchanged: 0/0
 14643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14644 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14645 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14647 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14648 ;;Total ram usage:        8 bytes
 14649 ;; Hardware stack levels used:    1
 14650 ;; Hardware stack levels required when called:   11
 14651 ;; This function calls:
 14652 ;;		Nothing
 14653 ;; This function is called by:
 14654 ;;		_USBDeviceInit
 14655 ;;		_USBStdSetCfgHandler
 14656 ;;		_Term_MainSm
 14657 ;; This function uses a non-reentrant model
 14658 ;;
 14659                           
 14660                           	psect	text59
 14661  005CBC                     __ptext59:
 14662                           	opt stack 0
 14663  005CBC                     _memset:
 14664                           	opt stack 14
 14665                           
 14666                           ; BSR set to: 0
 14667                           ;incstack = 0
 14668  005CBC  C07D  F083         	movff	memset@p1,memset@p
 14669  005CC0  C07E  F084         	movff	memset@p1+1,memset@p+1
 14670  005CC4  D009               	goto	l3080
 14671  005CC6                     l11707:
 14672  005CC6  C083  FFD9         	movff	memset@p,fsr2l
 14673  005CCA  C084  FFDA         	movff	memset@p+1,fsr2h
 14674  005CCE  C07F  FFDF         	movff	memset@c,indf2
 14675  005CD2  0100               	movlb	0	; () banked
 14676  005CD4  4B83               	infsnz	memset@p& (0+255),f,b
 14677  005CD6  2B84               	incf	(memset@p+1)& (0+255),f,b
 14678  005CD8                     l3080:
 14679                           
 14680                           ; BSR set to: 0
 14681  005CD8  0100               	movlb	0	; () banked
 14682  005CDA  0781               	decf	memset@n& (0+255),f,b
 14683  005CDC  A0D8               	btfss	status,0,c
 14684  005CDE  0782               	decf	(memset@n+1)& (0+255),f,b
 14685  005CE0  2981               	incf	memset@n& (0+255),w,b
 14686  005CE2  E1F1               	bnz	l11707
 14687  005CE4  2982               	incf	(memset@n+1)& (0+255),w,b
 14688  005CE6  B4D8               	btfsc	status,2,c
 14689  005CE8  0012               	return	
 14690  005CEA  D7ED               	goto	l3081
 14691  005CEC                     __end_of_memset:
 14692                           	opt stack 0
 14693                           tosu	equ	0xFFF
 14694                           tosh	equ	0xFFE
 14695                           tosl	equ	0xFFD
 14696                           pclath	equ	0xFFA
 14697                           tblptru	equ	0xFF8
 14698                           tblptrh	equ	0xFF7
 14699                           tblptrl	equ	0xFF6
 14700                           tablat	equ	0xFF5
 14701                           prodh	equ	0xFF4
 14702                           prodl	equ	0xFF3
 14703                           intcon	equ	0xFF2
 14704                           intcon2	equ	0xFF1
 14705                           intcon3	equ	0xFF0
 14706                           indf0	equ	0xFEF
 14707                           postinc0	equ	0xFEE
 14708                           plusw0	equ	0xFEB
 14709                           fsr0h	equ	0xFEA
 14710                           fsr0l	equ	0xFE9
 14711                           wreg	equ	0xFE8
 14712                           indf1	equ	0xFE7
 14713                           postinc1	equ	0xFE6
 14714                           postdec1	equ	0xFE5
 14715                           plusw1	equ	0xFE3
 14716                           fsr1h	equ	0xFE2
 14717                           fsr1l	equ	0xFE1
 14718                           indf2	equ	0xFDF
 14719                           postinc2	equ	0xFDE
 14720                           postdec2	equ	0xFDD
 14721                           plusw2	equ	0xFDB
 14722                           fsr2h	equ	0xFDA
 14723                           fsr2l	equ	0xFD9
 14724                           status	equ	0xFD8
 14725                           
 14726 ;; *************** function _Terminal *****************
 14727 ;; Defined at:
 14728 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14729 ;; Parameters:    Size  Location     Type
 14730 ;;		None
 14731 ;; Auto vars:     Size  Location     Type
 14732 ;;  i               1   68[BANK0 ] unsigned char 
 14733 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14734 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14735 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14736 ;;  Index           1   70[BANK0 ] unsigned char 
 14737 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14738 ;; Return value:  Size  Location     Type
 14739 ;;                  1    wreg      void 
 14740 ;; Registers used:
 14741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14742 ;; Tracked objects:
 14743 ;;		On entry : 0/0
 14744 ;;		On exit  : 0/0
 14745 ;;		Unchanged: 0/0
 14746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14748 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14749 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14750 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14751 ;;Total ram usage:      455 bytes
 14752 ;; Hardware stack levels used:    1
 14753 ;; Hardware stack levels required when called:   15
 14754 ;; This function calls:
 14755 ;;		_I2cSlv_I2cReadMsgSts
 14756 ;;		_I2cSlv_ReceiveI2cMsg
 14757 ;;		_I2cSlv_SendI2cMsg
 14758 ;;		_OsTmr_Wait
 14759 ;;		_atoi
 14760 ;;		_getsUSBUSART
 14761 ;;		_itoa
 14762 ;;		_putUSBUSART
 14763 ;;		_strcpy
 14764 ;;		_strtol
 14765 ;;		_xtoi
 14766 ;; This function is called by:
 14767 ;;		_Term_MainSm
 14768 ;; This function uses a non-reentrant model
 14769 ;;
 14770                           
 14771                           	psect	text60
 14772  0000D0                     __ptext60:
 14773                           	opt stack 0
 14774  0000D0                     _Terminal:
 14775                           	opt stack 11
 14776                           
 14777                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14778                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14779                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14780                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14781                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14782                           ;term.c: 435: UINT8 Index;
 14783                           ;term.c: 436: static UINT8 Len[4];
 14784                           ;term.c: 437: static UINT8 PackageLen;
 14785                           ;term.c: 438: static UINT8 Addr[4];
 14786                           ;term.c: 439: static UINT8 SlaveAddr;
 14787                           ;term.c: 440: static PayloadType Payload[20u];
 14788                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;incstack = 0
 14792  0000D0  0E00               	movlw	0
 14793  0000D2  0100               	movlb	0	; () banked
 14794  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14795                           
 14796                           ; BSR set to: 0
 14797                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14798                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14799                           ;term.c: 445: static SwTimerType SwTimer;
 14800                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14801  0000D6  0E1F               	movlw	31
 14802  0000D8  65D0               	cpfsgt	_USBDeviceState& (0+255),b
 14803  0000DA  0012               	return	
 14804                           
 14805                           ; BSR set to: 0
 14806  0000DC  B265               	btfsc	3941,1,c	;volatile
 14807  0000DE  0012               	return	
 14808  0000E0  D278               	goto	l2367
 14809  0000E2                     
 14810                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14811                           
 14812                           ; BSR set to: 0
 14813  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14814  0000E4  0100               	movlb	0	; () banked
 14815  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14816  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14817  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14818  0000EC  0EC8               	movlw	200
 14819  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14820  0000F0  EC1C  F024         	call	_getsUSBUSART	;wreg free
 14821  0000F4  0100               	movlb	0	; () banked
 14822  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14823                           
 14824                           ; BSR set to: 0
 14825                           ;term.c: 458: if (ReceivedBytes > 0)
 14826  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14827  0000FA  B4D8               	btfsc	status,2,c
 14828  0000FC  0012               	return	
 14829                           
 14830                           ; BSR set to: 0
 14831                           ;term.c: 459: {
 14832                           ;term.c: 461: if (EchoOption == 1u)
 14833  0000FE  0102               	movlb	2	; () banked
 14834  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 14835  000102  A4D8               	btfss	status,2,c
 14836  000104  D026               	goto	l2371
 14837                           
 14838                           ; BSR set to: 2
 14839                           ;term.c: 462: {
 14840                           ;term.c: 464: if((cdc_trf_state == 0))
 14841  000106  0100               	movlb	0	; () banked
 14842  000108  51CA               	movf	_cdc_trf_state& (0+255),w,b
 14843  00010A  A4D8               	btfss	status,2,c
 14844  00010C  D022               	goto	l2371
 14845                           
 14846                           ; BSR set to: 0
 14847                           ;term.c: 465: {
 14848                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14849  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14850  000110  0D01               	mullw	1
 14851  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14852  000114  24F3               	addwf	prodl,w,c
 14853  000116  6ED9               	movwf	fsr2l,c
 14854  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14855  00011A  20F4               	addwfc	prodh,w,c
 14856  00011C  6EDA               	movwf	fsr2h,c
 14857  00011E  0E0D               	movlw	13
 14858  000120  6EDF               	movwf	indf2,c
 14859                           
 14860                           ; BSR set to: 0
 14861                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14862  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14863  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14864  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14865  000128  0E01               	movlw	1
 14866  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14867  00012C  0E00               	movlw	0
 14868  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14869  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14870  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14871  000134  6ED9               	movwf	fsr2l,c
 14872  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14873  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14874  00013A  6EDA               	movwf	fsr2h,c
 14875  00013C  0E0A               	movlw	10
 14876  00013E  6EDF               	movwf	indf2,c
 14877                           
 14878                           ; BSR set to: 0
 14879                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 14880  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 14881  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 14882  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 14883  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14884  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14885  00014A  0F02               	addlw	2
 14886  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 14887  00014E  ECB6  F02F         	call	_putUSBUSART	;wreg free
 14888  000152                     l2371:
 14889                           
 14890                           ;term.c: 469: }
 14891                           ;term.c: 470: }
 14892                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 14893                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 14894                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14895  000152  0E53               	movlw	83
 14896  000154  010A               	movlb	10	; () banked
 14897  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14898  000158  A4D8               	btfss	status,2,c
 14899  00015A  D043               	goto	l2372
 14900                           
 14901                           ; BSR set to: 10
 14902  00015C  0E4F               	movlw	79
 14903  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14904  000160  A4D8               	btfss	status,2,c
 14905  000162  D03F               	goto	l2372
 14906                           
 14907                           ; BSR set to: 10
 14908  000164  0E3A               	movlw	58
 14909  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14910  000168  A4D8               	btfss	status,2,c
 14911  00016A  D03B               	goto	l2372
 14912                           
 14913                           ; BSR set to: 10
 14914                           ;term.c: 476: {
 14915                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14916  00016C  0E47               	movlw	71
 14917  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14918  000170  A4D8               	btfss	status,2,c
 14919  000172  0012               	return	
 14920                           
 14921                           ; BSR set to: 10
 14922  000174  0E3A               	movlw	58
 14923  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14924  000178  A4D8               	btfss	status,2,c
 14925  00017A  0012               	return	
 14926                           
 14927                           ; BSR set to: 10
 14928                           ;term.c: 479: {
 14929                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 14930  00017C  0E44               	movlw	68
 14931  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14932  000180  A4D8               	btfss	status,2,c
 14933  000182  D015               	goto	l2374
 14934                           
 14935                           ; BSR set to: 10
 14936  000184  0E46               	movlw	70
 14937  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14938  000188  A4D8               	btfss	status,2,c
 14939  00018A  D011               	goto	l2374
 14940                           
 14941                           ; BSR set to: 10
 14942                           ;term.c: 482: {
 14943                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 14944  00018C  0E41               	movlw	65
 14945  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14946  000190  A4D8               	btfss	status,2,c
 14947  000192  D004               	goto	l2375
 14948                           
 14949                           ; BSR set to: 10
 14950                           ;term.c: 484: {
 14951                           ;term.c: 485: FormatOption = 1u;
 14952  000194  0E01               	movlw	1
 14953  000196  0102               	movlb	2	; () banked
 14954  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14955                           
 14956                           ;term.c: 486: }
 14957  00019A  0012               	return	
 14958  00019C                     l2375:
 14959                           
 14960                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 14961                           
 14962                           ; BSR set to: 2
 14963  00019C  0E42               	movlw	66
 14964  00019E  010A               	movlb	10	; () banked
 14965  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14966  0001A2  A4D8               	btfss	status,2,c
 14967  0001A4  0012               	return	
 14968                           
 14969                           ; BSR set to: 10
 14970                           ;term.c: 488: {
 14971                           ;term.c: 489: FormatOption = 0u;
 14972  0001A6  0E00               	movlw	0
 14973  0001A8  0102               	movlb	2	; () banked
 14974  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14975                           
 14976                           ; BSR set to: 2
 14977                           ;term.c: 490: }
 14978                           ;term.c: 491: }
 14979                           
 14980                           ; BSR set to: 2
 14981  0001AC  0012               	return	
 14982  0001AE                     l2374:
 14983                           
 14984                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 14985                           
 14986                           ; BSR set to: 2
 14987  0001AE  0E45               	movlw	69
 14988  0001B0  010A               	movlb	10	; () banked
 14989  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14990  0001B4  A4D8               	btfss	status,2,c
 14991  0001B6  0012               	return	
 14992                           
 14993                           ; BSR set to: 10
 14994  0001B8  0E4D               	movlw	77
 14995  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14996  0001BC  A4D8               	btfss	status,2,c
 14997  0001BE  0012               	return	
 14998                           
 14999                           ; BSR set to: 10
 15000                           ;term.c: 494: {
 15001                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15002  0001C0  0E31               	movlw	49
 15003  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15004  0001C4  A4D8               	btfss	status,2,c
 15005  0001C6  D004               	goto	l2380
 15006                           
 15007                           ; BSR set to: 10
 15008                           ;term.c: 496: {
 15009                           ;term.c: 497: EchoOption = 1u;
 15010  0001C8  0E01               	movlw	1
 15011  0001CA  0102               	movlb	2	; () banked
 15012  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15013                           
 15014                           ;term.c: 498: }
 15015  0001CE  0012               	return	
 15016  0001D0                     l2380:
 15017                           
 15018                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15019                           
 15020                           ; BSR set to: 2
 15021  0001D0  0E30               	movlw	48
 15022  0001D2  010A               	movlb	10	; () banked
 15023  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15024  0001D6  A4D8               	btfss	status,2,c
 15025  0001D8  0012               	return	
 15026                           
 15027                           ; BSR set to: 10
 15028                           ;term.c: 500: {
 15029                           ;term.c: 501: EchoOption = 0u;
 15030  0001DA  0E00               	movlw	0
 15031  0001DC  0102               	movlb	2	; () banked
 15032  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15033                           
 15034                           ; BSR set to: 2
 15035                           ;term.c: 507: }
 15036                           ;term.c: 508: }
 15037                           ;term.c: 509: }
 15038                           
 15039                           ; BSR set to: 2
 15040                           
 15041                           ; BSR set to: 2
 15042                           
 15043                           ;term.c: 504: else
 15044                           ;term.c: 505: {
 15045                           
 15046                           ; BSR set to: 2
 15047                           
 15048                           ; BSR set to: 2
 15049                           ;term.c: 502: }
 15050                           ;term.c: 503: }
 15051                           
 15052                           ; BSR set to: 2
 15053  0001E0  0012               	return	
 15054  0001E2                     l2372:
 15055                           
 15056                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15057                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15058                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15059                           
 15060                           ; BSR set to: 2
 15061  0001E2  0E53               	movlw	83
 15062  0001E4  010A               	movlb	10	; () banked
 15063  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15064  0001E8  A4D8               	btfss	status,2,c
 15065  0001EA  D0D3               	goto	l2385
 15066                           
 15067                           ; BSR set to: 10
 15068  0001EC  0E42               	movlw	66
 15069  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15070  0001F0  A4D8               	btfss	status,2,c
 15071  0001F2  D0CF               	goto	l2385
 15072                           
 15073                           ; BSR set to: 10
 15074  0001F4  0E3A               	movlw	58
 15075  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15076  0001F8  A4D8               	btfss	status,2,c
 15077  0001FA  D0CB               	goto	l2385
 15078                           
 15079                           ; BSR set to: 10
 15080                           ;term.c: 513: {
 15081                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15082  0001FC  0E57               	movlw	87
 15083  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15084  000200  A4D8               	btfss	status,2,c
 15085  000202  D091               	goto	l2386
 15086                           
 15087                           ; BSR set to: 10
 15088  000204  0E3A               	movlw	58
 15089  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15090  000208  A4D8               	btfss	status,2,c
 15091  00020A  D08D               	goto	l2386
 15092                           
 15093                           ; BSR set to: 10
 15094                           ;term.c: 515: {
 15095                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15096  00020C  CA05  F3B0         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15097                           
 15098                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15099  000210  CA06  F3B1         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15100                           
 15101                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15102  000214  CA08  F3AC         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15103                           
 15104                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15105  000218  CA09  F3AD         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15106                           
 15107                           ; BSR set to: 10
 15108                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15109  00021C  0EB0               	movlw	low Terminal@Len
 15110  00021E  0100               	movlb	0	; () banked
 15111  000220  6F83               	movwf	atoi@s& (0+255),b
 15112  000222  0E03               	movlw	high Terminal@Len
 15113  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15114  000226  ECF0  F01B         	call	_atoi	;wreg free
 15115  00022A  0100               	movlb	0	; () banked
 15116  00022C  5183               	movf	?_atoi& (0+255),w,b
 15117  00022E  0102               	movlb	2	; () banked
 15118  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15119                           
 15120                           ; BSR set to: 2
 15121                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15122  000232  0EAC               	movlw	low Terminal@Addr
 15123  000234  0100               	movlb	0	; () banked
 15124  000236  6F83               	movwf	xtoi@s& (0+255),b
 15125  000238  0E03               	movlw	high Terminal@Addr
 15126  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15127  00023C  EC31  F01A         	call	_xtoi	;wreg free
 15128  000240  0100               	movlb	0	; () banked
 15129  000242  5183               	movf	?_xtoi& (0+255),w,b
 15130  000244  0102               	movlb	2	; () banked
 15131  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15132                           
 15133                           ; BSR set to: 2
 15134                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15135  000248  0E00               	movlw	0
 15136  00024A  0100               	movlb	0	; () banked
 15137  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15138  00024E  D032               	goto	l2387
 15139  000250                     
 15140                           ;term.c: 527: {
 15141                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15142                           
 15143                           ; BSR set to: 0
 15144  000250  0100               	movlb	0	; () banked
 15145  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15146  000254  0D02               	mullw	2
 15147  000256  0E0B               	movlw	11
 15148  000258  26F3               	addwf	prodl,f,c
 15149  00025A  0E00               	movlw	0
 15150  00025C  22F4               	addwfc	prodh,f,c
 15151  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15152  000260  24F3               	addwf	prodl,w,c
 15153  000262  6ED9               	movwf	fsr2l,c
 15154  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15155  000266  20F4               	addwfc	prodh,w,c
 15156  000268  6EDA               	movwf	fsr2h,c
 15157  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15158  00026C  0D04               	mullw	4
 15159  00026E  0E00               	movlw	low Terminal@Payload
 15160  000270  24F3               	addwf	prodl,w,c
 15161  000272  6EE1               	movwf	fsr1l,c
 15162  000274  0E05               	movlw	high Terminal@Payload
 15163  000276  20F4               	addwfc	prodh,w,c
 15164  000278  6EE2               	movwf	fsr1h,c
 15165  00027A  CFDF FFE7          	movff	indf2,indf1
 15166                           
 15167                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15168  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15169  000280  0D02               	mullw	2
 15170  000282  0E0C               	movlw	12
 15171  000284  26F3               	addwf	prodl,f,c
 15172  000286  0E00               	movlw	0
 15173  000288  22F4               	addwfc	prodh,f,c
 15174  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15175  00028C  24F3               	addwf	prodl,w,c
 15176  00028E  6ED9               	movwf	fsr2l,c
 15177  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15178  000292  20F4               	addwfc	prodh,w,c
 15179  000294  6EDA               	movwf	fsr2h,c
 15180  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15181  000298  0D04               	mullw	4
 15182  00029A  0E01               	movlw	1
 15183  00029C  26F3               	addwf	prodl,f,c
 15184  00029E  0E00               	movlw	0
 15185  0002A0  22F4               	addwfc	prodh,f,c
 15186  0002A2  0E00               	movlw	low Terminal@Payload
 15187  0002A4  24F3               	addwf	prodl,w,c
 15188  0002A6  6EE1               	movwf	fsr1l,c
 15189  0002A8  0E05               	movlw	high Terminal@Payload
 15190  0002AA  20F4               	addwfc	prodh,w,c
 15191  0002AC  6EE2               	movwf	fsr1h,c
 15192  0002AE  CFDF FFE7          	movff	indf2,indf1
 15193                           
 15194                           ; BSR set to: 0
 15195  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15196  0002B4                     l2387:
 15197                           
 15198                           ; BSR set to: 0
 15199                           
 15200                           ; BSR set to: 0
 15201  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15202  0002B6  0102               	movlb	2	; () banked
 15203  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15204  0002BA  B0D8               	btfsc	status,0,c
 15205  0002BC  D7C9               	goto	l2388
 15206                           
 15207                           ; BSR set to: 2
 15208                           ;term.c: 530: }
 15209                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15210                           
 15211                           ; BSR set to: 2
 15212  0002BE  0E00               	movlw	0
 15213  0002C0  0100               	movlb	0	; () banked
 15214  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15215  0002C4  D01F               	goto	l2390
 15216  0002C6                     
 15217                           ;term.c: 533: {
 15218                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15219                           
 15220                           ; BSR set to: 0
 15221  0002C6  0100               	movlb	0	; () banked
 15222  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15223  0002CA  0D04               	mullw	4
 15224  0002CC  0E00               	movlw	low Terminal@Payload
 15225  0002CE  24F3               	addwf	prodl,w,c
 15226  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15227  0002D2  0E05               	movlw	high Terminal@Payload
 15228  0002D4  20F4               	addwfc	prodh,w,c
 15229  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15230  0002D8  0E00               	movlw	0
 15231  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15232  0002DC  0E00               	movlw	0
 15233  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15234  0002E0  0E00               	movlw	0
 15235  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15236  0002E4  0E10               	movlw	16
 15237  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15238  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15239  0002EC  0100               	movlb	0	; () banked
 15240  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15241  0002F0  0D01               	mullw	1
 15242  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15243  0002F4  24F3               	addwf	prodl,w,c
 15244  0002F6  6ED9               	movwf	fsr2l,c
 15245  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15246  0002FA  20F4               	addwfc	prodh,w,c
 15247  0002FC  6EDA               	movwf	fsr2h,c
 15248  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15249                           
 15250                           ; BSR set to: 0
 15251  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15252  000304                     l2390:
 15253                           
 15254                           ; BSR set to: 0
 15255                           
 15256                           ; BSR set to: 0
 15257  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15258  000306  0102               	movlb	2	; () banked
 15259  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15260  00030A  B0D8               	btfsc	status,0,c
 15261  00030C  D7DC               	goto	l2391
 15262                           
 15263                           ; BSR set to: 2
 15264                           ;term.c: 539: }
 15265                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15266                           
 15267                           ; BSR set to: 2
 15268  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15269  000310  0100               	movlb	0	; () banked
 15270  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15271  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15272  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15273  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15274  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15275  000320  EC11  F02D         	call	_I2cSlv_SendI2cMsg	;wreg free
 15276                           
 15277                           ;term.c: 543: }
 15278  000324  0012               	return	
 15279  000326                     l2386:
 15280                           
 15281                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15282  000326  0E52               	movlw	82
 15283  000328  010A               	movlb	10	; () banked
 15284  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15285  00032C  A4D8               	btfss	status,2,c
 15286  00032E  0012               	return	
 15287                           
 15288                           ; BSR set to: 10
 15289  000330  0E3A               	movlw	58
 15290  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15291  000334  A4D8               	btfss	status,2,c
 15292  000336  0012               	return	
 15293                           
 15294                           ; BSR set to: 10
 15295                           ;term.c: 545: {
 15296                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15297  000338  CA05  F3B0         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15298                           
 15299                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15300  00033C  CA06  F3B1         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15301                           
 15302                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15303  000340  CA08  F3AC         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15304                           
 15305                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15306  000344  CA09  F3AD         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15307                           
 15308                           ; BSR set to: 10
 15309                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15310  000348  0EB0               	movlw	low Terminal@Len
 15311  00034A  0100               	movlb	0	; () banked
 15312  00034C  6F83               	movwf	atoi@s& (0+255),b
 15313  00034E  0E03               	movlw	high Terminal@Len
 15314  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15315  000352  ECF0  F01B         	call	_atoi	;wreg free
 15316  000356  0100               	movlb	0	; () banked
 15317  000358  5183               	movf	?_atoi& (0+255),w,b
 15318  00035A  0102               	movlb	2	; () banked
 15319  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15320                           
 15321                           ; BSR set to: 2
 15322                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15323  00035E  0EAC               	movlw	low Terminal@Addr
 15324  000360  0100               	movlb	0	; () banked
 15325  000362  6F83               	movwf	xtoi@s& (0+255),b
 15326  000364  0E03               	movlw	high Terminal@Addr
 15327  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15328  000368  EC31  F01A         	call	_xtoi	;wreg free
 15329  00036C  0100               	movlb	0	; () banked
 15330  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15331  000370  0102               	movlb	2	; () banked
 15332  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15333                           
 15334                           ; BSR set to: 2
 15335                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15336  000374  0E86               	movlw	low Terminal@TermRxBuffer
 15337  000376  0100               	movlb	0	; () banked
 15338  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15339  00037A  0E04               	movlw	high Terminal@TermRxBuffer
 15340  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15341  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15342  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15343  000386  ECB2  F02C         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15344                           
 15345                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15346  00038A  0E01               	movlw	1
 15347  00038C  0102               	movlb	2	; () banked
 15348  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15349                           
 15350                           ; BSR set to: 2
 15351                           ;term.c: 561: }
 15352                           ;term.c: 562: }
 15353                           
 15354                           ; BSR set to: 2
 15355  000390  0012               	return	
 15356  000392                     l2385:
 15357                           
 15358                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15359                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15360                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15361                           
 15362                           ; BSR set to: 2
 15363  000392  0E54               	movlw	84
 15364  000394  010A               	movlb	10	; () banked
 15365  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15366  000398  A4D8               	btfss	status,2,c
 15367  00039A  0012               	return	
 15368                           
 15369                           ; BSR set to: 10
 15370  00039C  0E45               	movlw	69
 15371  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15372  0003A0  A4D8               	btfss	status,2,c
 15373  0003A2  0012               	return	
 15374                           
 15375                           ; BSR set to: 10
 15376  0003A4  0E4C               	movlw	76
 15377  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15378  0003A8  A4D8               	btfss	status,2,c
 15379  0003AA  0012               	return	
 15380                           
 15381                           ; BSR set to: 10
 15382                           ;term.c: 566: {
 15383                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15384  0003AC  CA03  F3B0         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15385                           
 15386                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15387  0003B0  CA04  F3B1         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15388                           
 15389                           ; BSR set to: 10
 15390                           ;term.c: 570: PhoneNumberLen = atoi(Len);
 15391  0003B4  0EB0               	movlw	low Terminal@Len
 15392  0003B6  0100               	movlb	0	; () banked
 15393  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15394  0003BA  0E03               	movlw	high Terminal@Len
 15395  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15396  0003BE  ECF0  F01B         	call	_atoi	;wreg free
 15397  0003C2  C083  F322         	movff	?_atoi,_PhoneNumberLen
 15398  0003C6  C084  F323         	movff	?_atoi+1,_PhoneNumberLen+1
 15399                           
 15400                           ;term.c: 572: for (UINT8 i = 0; i < PhoneNumberLen; i++)
 15401  0003CA  0E00               	movlw	0
 15402  0003CC  0100               	movlb	0	; () banked
 15403  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15404  0003D0  D018               	goto	l2397
 15405  0003D2                     
 15406                           ; BSR set to: 0
 15407                           ;term.c: 573: {
 15408                           ;term.c: 574: PhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15409                           
 15410                           ; BSR set to: 0
 15411  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15412  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15413  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15414  0003D8  0E05               	movlw	5
 15415  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15416  0003DC  0E00               	movlw	0
 15417  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15418  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15419  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15420  0003E4  6ED9               	movwf	fsr2l,c
 15421  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15422  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15423  0003EA  6EDA               	movwf	fsr2h,c
 15424  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15425  0003EE  0D01               	mullw	1
 15426  0003F0  0EB8               	movlw	low _PhoneNumber
 15427  0003F2  24F3               	addwf	prodl,w,c
 15428  0003F4  6EE1               	movwf	fsr1l,c
 15429  0003F6  0E04               	movlw	high _PhoneNumber
 15430  0003F8  20F4               	addwfc	prodh,w,c
 15431  0003FA  6EE2               	movwf	fsr1h,c
 15432  0003FC  CFDF FFE7          	movff	indf2,indf1
 15433                           
 15434                           ; BSR set to: 0
 15435  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15436  000402                     l2397:
 15437                           
 15438                           ; BSR set to: 0
 15439                           
 15440                           ; BSR set to: 0
 15441  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15442  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15443  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15444  000408  0103               	movlb	3	; () banked
 15445  00040A  5122               	movf	_PhoneNumberLen& (0+255),w,b
 15446  00040C  0100               	movlb	0	; () banked
 15447  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15448  000410  0103               	movlb	3	; () banked
 15449  000412  5123               	movf	(_PhoneNumberLen+1)& (0+255),w,b
 15450  000414  0100               	movlb	0	; () banked
 15451  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15452  000418  B0D8               	btfsc	status,0,c
 15453  00041A  0012               	return	
 15454  00041C  D7DA               	goto	l2398
 15455  00041E                     
 15456                           ;term.c: 619: if((cdc_trf_state == 0))
 15457                           
 15458                           ; BSR set to: 0
 15459  00041E  0100               	movlb	0	; () banked
 15460  000420  51CA               	movf	_cdc_trf_state& (0+255),w,b
 15461  000422  A4D8               	btfss	status,2,c
 15462  000424  0012               	return	
 15463                           
 15464                           ; BSR set to: 0
 15465                           ;term.c: 620: {
 15466                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15467  000426  0E53               	movlw	83
 15468  000428  0102               	movlb	2	; () banked
 15469  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15470                           
 15471                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15472  00042C  0E42               	movlw	66
 15473  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15474                           
 15475                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15476  000430  0E5B               	movlw	91
 15477  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15478                           
 15479                           ; BSR set to: 2
 15480                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15481  000434  C3AC  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15482                           
 15483                           ; BSR set to: 2
 15484                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15485  000438  C3AD  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15486                           
 15487                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15488  00043C  0E5D               	movlw	93
 15489  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15490                           
 15491                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15492  000440  0E3A               	movlw	58
 15493  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15494                           
 15495                           ; BSR set to: 2
 15496                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15497  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15498  000446  0100               	movlb	0	; () banked
 15499  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15500  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15501  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15502  00044E  0E07               	movlw	7
 15503  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15504  000452  ECB6  F02F         	call	_putUSBUSART	;wreg free
 15505                           
 15506                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15507  000456  0E02               	movlw	2
 15508  000458  0102               	movlb	2	; () banked
 15509  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15510                           
 15511                           ; BSR set to: 2
 15512                           ;term.c: 632: }
 15513                           ;term.c: 633: break;
 15514  00045C  0012               	return	
 15515  00045E                     
 15516                           ; BSR set to: 2
 15517                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15518                           
 15519                           ; BSR set to: 2
 15520  00045E  ECD8  F02F         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15521  000462  06E8               	decf	wreg,f,c
 15522  000464  A4D8               	btfss	status,2,c
 15523  000466  D088               	goto	l2406
 15524                           
 15525                           ;term.c: 638: {
 15526                           ;term.c: 640: if (FormatOption == 1u)
 15527  000468  0102               	movlb	2	; () banked
 15528  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15529  00046C  A4D8               	btfss	status,2,c
 15530  00046E  D027               	goto	u12940
 15531                           
 15532                           ; BSR set to: 2
 15533                           ;term.c: 641: {
 15534                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15535  000470  0E00               	movlw	0
 15536  000472  0100               	movlb	0	; () banked
 15537  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15538  000476  D01E               	goto	l2408
 15539  000478                     
 15540                           ;term.c: 644: {
 15541                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15542                           
 15543                           ; BSR set to: 0
 15544  000478  0100               	movlb	0	; () banked
 15545  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15546  00047C  0D04               	mullw	4
 15547  00047E  0E00               	movlw	low Terminal@Payload
 15548  000480  24F3               	addwf	prodl,w,c
 15549  000482  6F93               	movwf	itoa@buf& (0+255),b
 15550  000484  0E05               	movlw	high Terminal@Payload
 15551  000486  20F4               	addwfc	prodh,w,c
 15552  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15553  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15554  00048C  0D01               	mullw	1
 15555  00048E  0E86               	movlw	low Terminal@TermRxBuffer
 15556  000490  24F3               	addwf	prodl,w,c
 15557  000492  6ED9               	movwf	fsr2l,c
 15558  000494  0E04               	movlw	high Terminal@TermRxBuffer
 15559  000496  20F4               	addwfc	prodh,w,c
 15560  000498  6EDA               	movwf	fsr2h,c
 15561  00049A  50DF               	movf	indf2,w,c
 15562  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15563  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15564  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15565  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15566  0004A4  0E00               	movlw	0
 15567  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15568  0004A8  0E0A               	movlw	10
 15569  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15570  0004AC  EC2B  F02C         	call	_itoa	;wreg free
 15571  0004B0  0100               	movlb	0	; () banked
 15572  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15573  0004B4                     l2408:
 15574                           
 15575                           ; BSR set to: 0
 15576                           
 15577                           ; BSR set to: 0
 15578  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15579  0004B6  0102               	movlb	2	; () banked
 15580  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15581  0004BA  B0D8               	btfsc	status,0,c
 15582  0004BC  D7DD               	goto	l2409
 15583  0004BE                     u12940:
 15584                           
 15585                           ; BSR set to: 2
 15586                           ;term.c: 646: }
 15587                           ;term.c: 647: }
 15588                           ;term.c: 650: if((cdc_trf_state == 0))
 15589                           
 15590                           ; BSR set to: 2
 15591                           
 15592                           ; BSR set to: 2
 15593  0004BE  0100               	movlb	0	; () banked
 15594  0004C0  51CA               	movf	_cdc_trf_state& (0+255),w,b
 15595  0004C2  A4D8               	btfss	status,2,c
 15596  0004C4  0012               	return	
 15597                           
 15598                           ; BSR set to: 0
 15599                           ;term.c: 651: {
 15600                           ;term.c: 653: if (FormatOption == 1u)
 15601  0004C6  0102               	movlb	2	; () banked
 15602  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15603  0004CA  A4D8               	btfss	status,2,c
 15604  0004CC  D02B               	goto	l2412
 15605                           
 15606                           ; BSR set to: 2
 15607                           ;term.c: 654: {
 15608                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15609  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15610  0004D0  0D08               	mullw	8
 15611  0004D2  0E03               	movlw	3
 15612  0004D4  26F3               	addwf	prodl,f,c
 15613  0004D6  0E00               	movlw	0
 15614  0004D8  22F4               	addwfc	prodh,f,c
 15615  0004DA  0E00               	movlw	low Terminal@Payload
 15616  0004DC  24F3               	addwf	prodl,w,c
 15617  0004DE  6ED9               	movwf	fsr2l,c
 15618  0004E0  0E05               	movlw	high Terminal@Payload
 15619  0004E2  20F4               	addwfc	prodh,w,c
 15620  0004E4  6EDA               	movwf	fsr2h,c
 15621  0004E6  0E0D               	movlw	13
 15622  0004E8  6EDF               	movwf	indf2,c
 15623                           
 15624                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15625  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15626  0004EC  0D08               	mullw	8
 15627  0004EE  0E02               	movlw	2
 15628  0004F0  26F3               	addwf	prodl,f,c
 15629  0004F2  0E00               	movlw	0
 15630  0004F4  22F4               	addwfc	prodh,f,c
 15631  0004F6  0E00               	movlw	low Terminal@Payload
 15632  0004F8  24F3               	addwf	prodl,w,c
 15633  0004FA  6ED9               	movwf	fsr2l,c
 15634  0004FC  0E05               	movlw	high Terminal@Payload
 15635  0004FE  20F4               	addwfc	prodh,w,c
 15636  000500  6EDA               	movwf	fsr2h,c
 15637  000502  0E0A               	movlw	10
 15638  000504  6EDF               	movwf	indf2,c
 15639                           
 15640                           ; BSR set to: 2
 15641                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15642  000506  0E00               	movlw	low Terminal@Payload
 15643  000508  0100               	movlb	0	; () banked
 15644  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15645  00050C  0E05               	movlw	high Terminal@Payload
 15646  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15647  000510  0102               	movlb	2	; () banked
 15648  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15649  000514  0D02               	mullw	2
 15650  000516  50F3               	movf	prodl,w,c
 15651  000518  0F04               	addlw	4
 15652  00051A  0100               	movlb	0	; () banked
 15653  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15654  00051E  ECB6  F02F         	call	_putUSBUSART	;wreg free
 15655                           
 15656                           ;term.c: 659: }
 15657  000522  D026               	goto	l2413
 15658  000524                     l2412:
 15659                           
 15660                           ;term.c: 660: else
 15661                           ;term.c: 661: {
 15662                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15663  000524  0102               	movlb	2	; () banked
 15664  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15665  000528  0D01               	mullw	1
 15666  00052A  0E86               	movlw	low Terminal@TermRxBuffer
 15667  00052C  24F3               	addwf	prodl,w,c
 15668  00052E  6ED9               	movwf	fsr2l,c
 15669  000530  0E04               	movlw	high Terminal@TermRxBuffer
 15670  000532  20F4               	addwfc	prodh,w,c
 15671  000534  6EDA               	movwf	fsr2h,c
 15672  000536  0E0D               	movlw	13
 15673  000538  6EDF               	movwf	indf2,c
 15674                           
 15675                           ; BSR set to: 2
 15676                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15677  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15678  00053C  0100               	movlb	0	; () banked
 15679  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15680  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15681  000542  0E01               	movlw	1
 15682  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15683  000546  0E00               	movlw	0
 15684  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15685  00054A  0E86               	movlw	low Terminal@TermRxBuffer
 15686  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15687  00054E  6ED9               	movwf	fsr2l,c
 15688  000550  0E04               	movlw	high Terminal@TermRxBuffer
 15689  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15690  000554  6EDA               	movwf	fsr2h,c
 15691  000556  0E0A               	movlw	10
 15692  000558  6EDF               	movwf	indf2,c
 15693                           
 15694                           ; BSR set to: 0
 15695                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15696  00055A  0E86               	movlw	low Terminal@TermRxBuffer
 15697  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15698  00055E  0E04               	movlw	high Terminal@TermRxBuffer
 15699  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15700  000562  0102               	movlb	2	; () banked
 15701  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15702  000566  0F02               	addlw	2
 15703  000568  0100               	movlb	0	; () banked
 15704  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15705  00056C  ECB6  F02F         	call	_putUSBUSART	;wreg free
 15706  000570                     l2413:
 15707                           
 15708                           ;term.c: 666: }
 15709                           ;term.c: 668: TermState = Term_GetData;
 15710  000570  0E00               	movlw	0
 15711  000572  0102               	movlb	2	; () banked
 15712  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15713                           
 15714                           ; BSR set to: 2
 15715                           ;term.c: 669: }
 15716                           ;term.c: 670: }
 15717  000576  0012               	return	
 15718  000578                     l2406:
 15719                           
 15720                           ;term.c: 671: else
 15721                           ;term.c: 672: {
 15722                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15723                           
 15724                           ; BSR set to: 2
 15725  000578  0ECC               	movlw	low Terminal@SwTimer
 15726  00057A  0100               	movlb	0	; () banked
 15727  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15728  00057E  0E04               	movlw	high Terminal@SwTimer
 15729  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15730  000582  0EB8               	movlw	184
 15731  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15732  000586  0E0B               	movlw	11
 15733  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15734  00058A  0E00               	movlw	0
 15735  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15736  00058E  0E00               	movlw	0
 15737  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15738  000592  EC55  F026         	call	_OsTmr_Wait	;wreg free
 15739  000596  06E8               	decf	wreg,f,c
 15740  000598  A4D8               	btfss	status,2,c
 15741  00059A  0012               	return	
 15742                           
 15743                           ;term.c: 675: {
 15744                           ;term.c: 677: if((cdc_trf_state == 0))
 15745  00059C  0100               	movlb	0	; () banked
 15746  00059E  51CA               	movf	_cdc_trf_state& (0+255),w,b
 15747  0005A0  A4D8               	btfss	status,2,c
 15748  0005A2  0012               	return	
 15749                           
 15750                           ; BSR set to: 0
 15751                           ;term.c: 678: {
 15752                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15753  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15754  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15755  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15756  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15757  0005AC  0E5E               	movlw	low STR_21
 15758  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15759  0005B0  0EFE               	movlw	high STR_21
 15760  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15761  0005B4  EC2D  F02E         	call	_strcpy	;wreg free
 15762                           
 15763                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15764  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15765  0005BA  0100               	movlb	0	; () banked
 15766  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15767  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15768  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15769  0005C2  0E29               	movlw	41
 15770  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15771  0005C6  ECB6  F02F         	call	_putUSBUSART	;wreg free
 15772                           
 15773                           ;term.c: 682: TermState = Term_GetData;
 15774  0005CA  0E00               	movlw	0
 15775  0005CC  0102               	movlb	2	; () banked
 15776  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15777                           
 15778                           ; BSR set to: 2
 15779                           ;term.c: 693: }
 15780                           
 15781                           ; BSR set to: 2
 15782                           ;term.c: 692: break;
 15783                           
 15784                           ;term.c: 691: default:
 15785                           
 15786                           ; BSR set to: 2
 15787                           ;term.c: 689: break;
 15788                           
 15789                           ;term.c: 688: case Term_ReadSlvUartData:
 15790                           
 15791                           ; BSR set to: 2
 15792                           ;term.c: 683: }
 15793                           ;term.c: 684: }
 15794                           ;term.c: 685: }
 15795                           ;term.c: 686: break;
 15796                           
 15797                           ; BSR set to: 2
 15798                           
 15799                           ; BSR set to: 2
 15800  0005D0  0012               	return	
 15801  0005D2                     l2367:
 15802                           
 15803                           ; BSR set to: 2
 15804  0005D2  0102               	movlb	2	; () banked
 15805  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15806                           
 15807                           ; Switch size 1, requested type "space"
 15808                           ; Number of cases is 4, Range of values is 0 to 3
 15809                           ; switch strategies available:
 15810                           ; Name         Instructions Cycles
 15811                           ; simple_byte           13     7 (average)
 15812                           ;	Chosen strategy is simple_byte
 15813  0005D6  0A00               	xorlw	0	; case 0
 15814  0005D8  B4D8               	btfsc	status,2,c
 15815  0005DA  D583               	goto	l2368
 15816  0005DC  0A01               	xorlw	1	; case 1
 15817  0005DE  B4D8               	btfsc	status,2,c
 15818  0005E0  D71E               	goto	l2403
 15819  0005E2  0A03               	xorlw	3	; case 2
 15820  0005E4  B4D8               	btfsc	status,2,c
 15821  0005E6  D73B               	goto	l2405
 15822  0005E8  0A01               	xorlw	1	; case 3
 15823  0005EA  0012               	return	
 15824  0005EC                     __end_of_Terminal:
 15825                           	opt stack 0
 15826                           tosu	equ	0xFFF
 15827                           tosh	equ	0xFFE
 15828                           tosl	equ	0xFFD
 15829                           pclath	equ	0xFFA
 15830                           tblptru	equ	0xFF8
 15831                           tblptrh	equ	0xFF7
 15832                           tblptrl	equ	0xFF6
 15833                           tablat	equ	0xFF5
 15834                           prodh	equ	0xFF4
 15835                           prodl	equ	0xFF3
 15836                           intcon	equ	0xFF2
 15837                           intcon2	equ	0xFF1
 15838                           intcon3	equ	0xFF0
 15839                           indf0	equ	0xFEF
 15840                           postinc0	equ	0xFEE
 15841                           plusw0	equ	0xFEB
 15842                           fsr0h	equ	0xFEA
 15843                           fsr0l	equ	0xFE9
 15844                           wreg	equ	0xFE8
 15845                           indf1	equ	0xFE7
 15846                           postinc1	equ	0xFE6
 15847                           postdec1	equ	0xFE5
 15848                           plusw1	equ	0xFE3
 15849                           fsr1h	equ	0xFE2
 15850                           fsr1l	equ	0xFE1
 15851                           indf2	equ	0xFDF
 15852                           postinc2	equ	0xFDE
 15853                           postdec2	equ	0xFDD
 15854                           plusw2	equ	0xFDB
 15855                           fsr2h	equ	0xFDA
 15856                           fsr2l	equ	0xFD9
 15857                           status	equ	0xFD8
 15858                           
 15859 ;; *************** function _xtoi *****************
 15860 ;; Defined at:
 15861 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15862 ;; Parameters:    Size  Location     Type
 15863 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15864 ;;		 -> Terminal@Addr(4), 
 15865 ;; Auto vars:     Size  Location     Type
 15866 ;;  val             2   40[BANK0 ] unsigned int 
 15867 ;;  c               1   42[BANK0 ] unsigned char 
 15868 ;;  sign            1   39[BANK0 ] unsigned char 
 15869 ;; Return value:  Size  Location     Type
 15870 ;;                  2   35[BANK0 ] unsigned int 
 15871 ;; Registers used:
 15872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15873 ;; Tracked objects:
 15874 ;;		On entry : 0/0
 15875 ;;		On exit  : 0/0
 15876 ;;		Unchanged: 0/0
 15877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15878 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15879 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15880 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15881 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15882 ;;Total ram usage:        8 bytes
 15883 ;; Hardware stack levels used:    1
 15884 ;; Hardware stack levels required when called:   13
 15885 ;; This function calls:
 15886 ;;		_isdigit
 15887 ;;		_isspace
 15888 ;;		_isupper
 15889 ;;		_isxdigit
 15890 ;;		_tolower
 15891 ;; This function is called by:
 15892 ;;		_Terminal
 15893 ;; This function uses a non-reentrant model
 15894 ;;
 15895                           
 15896                           	psect	text61
 15897  003462                     __ptext61:
 15898                           	opt stack 0
 15899  003462                     _xtoi:
 15900                           	opt stack 12
 15901                           
 15902                           ;incstack = 0
 15903  003462  0E00               	movlw	0
 15904  003464  0100               	movlb	0	; () banked
 15905  003466  6F87               	movwf	xtoi@sign& (0+255),b
 15906  003468  0E00               	movlw	0
 15907  00346A  6F89               	movwf	(xtoi@val+1)& (0+255),b
 15908  00346C  0E00               	movlw	0
 15909  00346E  6F88               	movwf	xtoi@val& (0+255),b
 15910  003470  D003               	goto	l3275
 15911  003472                     
 15912                           ; BSR set to: 0
 15913  003472  0100               	movlb	0	; () banked
 15914  003474  4B83               	infsnz	xtoi@s& (0+255),f,b
 15915  003476  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15916  003478                     l3275:
 15917                           
 15918                           ; BSR set to: 0
 15919                           
 15920                           ; BSR set to: 0
 15921  003478  C083  FFD9         	movff	xtoi@s,fsr2l
 15922  00347C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15923  003480  50DF               	movf	indf2,w,c
 15924  003482  ECFF  F02E         	call	_isspace
 15925  003486  B0D8               	btfsc	status,0,c
 15926  003488  D7F4               	goto	l3276
 15927  00348A  C083  FFD9         	movff	xtoi@s,fsr2l
 15928  00348E  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15929  003492  0E2D               	movlw	45
 15930  003494  18DE               	xorwf	postinc2,w,c
 15931  003496  A4D8               	btfss	status,2,c
 15932  003498  D003               	goto	l3278
 15933  00349A  0100               	movlb	0	; () banked
 15934  00349C  2B87               	incf	xtoi@sign& (0+255),f,b
 15935  00349E  D009               	goto	L15
 15936  0034A0                     l3278:
 15937                           
 15938                           ; BSR set to: 0
 15939  0034A0  C083  FFD9         	movff	xtoi@s,fsr2l
 15940  0034A4  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15941  0034A8  0E2B               	movlw	43
 15942  0034AA  18DE               	xorwf	postinc2,w,c
 15943  0034AC  A4D8               	btfss	status,2,c
 15944  0034AE  D028               	goto	l3281
 15945  0034B0  0100               	movlb	0	; () banked
 15946  0034B2                     L15:
 15947  0034B2  4B83               	infsnz	xtoi@s& (0+255),f,b
 15948  0034B4  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15949                           
 15950                           ; BSR set to: 0
 15951                           
 15952                           ; BSR set to: 0
 15953  0034B6  D024               	goto	l3281
 15954  0034B8                     
 15955                           ; BSR set to: 0
 15956  0034B8  0100               	movlb	0	; () banked
 15957  0034BA  518A               	movf	xtoi@c& (0+255),w,b
 15958  0034BC  ECA5  F02F         	call	_isupper
 15959  0034C0  A0D8               	btfss	status,0,c
 15960  0034C2  D006               	goto	l3283
 15961  0034C4  0100               	movlb	0	; () banked
 15962  0034C6  518A               	movf	xtoi@c& (0+255),w,b
 15963  0034C8  EC69  F030         	call	_tolower
 15964  0034CC  0100               	movlb	0	; () banked
 15965  0034CE  6F8A               	movwf	xtoi@c& (0+255),b
 15966  0034D0                     l3283:
 15967  0034D0  0100               	movlb	0	; () banked
 15968  0034D2  518A               	movf	xtoi@c& (0+255),w,b
 15969  0034D4  ECC7  F02F         	call	_isdigit
 15970  0034D8  A0D8               	btfss	status,0,c
 15971  0034DA  D002               	goto	l3284
 15972  0034DC  0E30               	movlw	48
 15973  0034DE  D001               	goto	L14
 15974  0034E0                     l3284:
 15975                           
 15976                           ; BSR set to: 0
 15977  0034E0  0E57               	movlw	87
 15978  0034E2                     L14:
 15979  0034E2  0100               	movlb	0	; () banked
 15980  0034E4  5F8A               	subwf	xtoi@c& (0+255),f,b
 15981                           
 15982                           ; BSR set to: 0
 15983  0034E6  3B88               	swapf	xtoi@val& (0+255),f,b
 15984  0034E8  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 15985  0034EA  0EF0               	movlw	240
 15986  0034EC  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 15987  0034EE  5188               	movf	xtoi@val& (0+255),w,b
 15988  0034F0  0B0F               	andlw	15
 15989  0034F2  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 15990  0034F4  0EF0               	movlw	240
 15991  0034F6  1788               	andwf	xtoi@val& (0+255),f,b
 15992  0034F8  518A               	movf	xtoi@c& (0+255),w,b
 15993  0034FA  2788               	addwf	xtoi@val& (0+255),f,b
 15994  0034FC  0E00               	movlw	0
 15995  0034FE  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 15996  003500                     l3281:
 15997                           
 15998                           ; BSR set to: 0
 15999  003500  C083  FFD9         	movff	xtoi@s,fsr2l
 16000  003504  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16001  003508  0100               	movlb	0	; () banked
 16002  00350A  4B83               	infsnz	xtoi@s& (0+255),f,b
 16003  00350C  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16004  00350E  50DF               	movf	indf2,w,c
 16005  003510  6F8A               	movwf	xtoi@c& (0+255),b
 16006  003512  518A               	movf	xtoi@c& (0+255),w,b
 16007  003514  EC4F  F02D         	call	_isxdigit
 16008  003518  B0D8               	btfsc	status,0,c
 16009  00351A  D7CE               	goto	l3282
 16010  00351C  0100               	movlb	0	; () banked
 16011  00351E  5187               	movf	xtoi@sign& (0+255),w,b
 16012  003520  B4D8               	btfsc	status,2,c
 16013  003522  D00D               	goto	l3287
 16014                           
 16015                           ; BSR set to: 0
 16016  003524  C088  F085         	movff	xtoi@val,??_xtoi
 16017  003528  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16018  00352C  1F85               	comf	??_xtoi& (0+255),f,b
 16019  00352E  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16020  003530  4B85               	infsnz	??_xtoi& (0+255),f,b
 16021  003532  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16022  003534  C085  F083         	movff	??_xtoi,?_xtoi
 16023  003538  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16024  00353C  0012               	return	
 16025  00353E                     l3287:
 16026                           
 16027                           ; BSR set to: 0
 16028  00353E  C088  F083         	movff	xtoi@val,?_xtoi
 16029  003542  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16030                           
 16031                           ; BSR set to: 0
 16032  003546  0012               	return		;funcret
 16033  003548                     __end_of_xtoi:
 16034                           	opt stack 0
 16035                           tosu	equ	0xFFF
 16036                           tosh	equ	0xFFE
 16037                           tosl	equ	0xFFD
 16038                           pclath	equ	0xFFA
 16039                           tblptru	equ	0xFF8
 16040                           tblptrh	equ	0xFF7
 16041                           tblptrl	equ	0xFF6
 16042                           tablat	equ	0xFF5
 16043                           prodh	equ	0xFF4
 16044                           prodl	equ	0xFF3
 16045                           intcon	equ	0xFF2
 16046                           intcon2	equ	0xFF1
 16047                           intcon3	equ	0xFF0
 16048                           indf0	equ	0xFEF
 16049                           postinc0	equ	0xFEE
 16050                           plusw0	equ	0xFEB
 16051                           fsr0h	equ	0xFEA
 16052                           fsr0l	equ	0xFE9
 16053                           wreg	equ	0xFE8
 16054                           indf1	equ	0xFE7
 16055                           postinc1	equ	0xFE6
 16056                           postdec1	equ	0xFE5
 16057                           plusw1	equ	0xFE3
 16058                           fsr1h	equ	0xFE2
 16059                           fsr1l	equ	0xFE1
 16060                           indf2	equ	0xFDF
 16061                           postinc2	equ	0xFDE
 16062                           postdec2	equ	0xFDD
 16063                           plusw2	equ	0xFDB
 16064                           fsr2h	equ	0xFDA
 16065                           fsr2l	equ	0xFD9
 16066                           status	equ	0xFD8
 16067                           
 16068 ;; *************** function _tolower *****************
 16069 ;; Defined at:
 16070 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16071 ;; Parameters:    Size  Location     Type
 16072 ;;  c               1    wreg     unsigned char 
 16073 ;; Auto vars:     Size  Location     Type
 16074 ;;  c               1   29[BANK0 ] unsigned char 
 16075 ;; Return value:  Size  Location     Type
 16076 ;;                  1    wreg      unsigned char 
 16077 ;; Registers used:
 16078 ;;		wreg, status,2, status,0
 16079 ;; Tracked objects:
 16080 ;;		On entry : 0/0
 16081 ;;		On exit  : 0/0
 16082 ;;		Unchanged: 0/0
 16083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16085 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16087 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16088 ;;Total ram usage:        1 bytes
 16089 ;; Hardware stack levels used:    1
 16090 ;; Hardware stack levels required when called:   11
 16091 ;; This function calls:
 16092 ;;		Nothing
 16093 ;; This function is called by:
 16094 ;;		_xtoi
 16095 ;; This function uses a non-reentrant model
 16096 ;;
 16097                           
 16098                           	psect	text62
 16099  0060D2                     __ptext62:
 16100                           	opt stack 0
 16101  0060D2                     _tolower:
 16102                           	opt stack 13
 16103                           
 16104                           ; BSR set to: 0
 16105                           ;incstack = 0
 16106                           ;tolower@c stored from wreg
 16107  0060D2  0100               	movlb	0	; () banked
 16108  0060D4  6F7D               	movwf	tolower@c& (0+255),b
 16109  0060D6  0E5B               	movlw	91
 16110  0060D8  0100               	movlb	0	; () banked
 16111  0060DA  617D               	cpfslt	tolower@c& (0+255),b
 16112  0060DC  D004               	goto	l3334
 16113                           
 16114                           ; BSR set to: 0
 16115  0060DE  0E40               	movlw	64
 16116  0060E0  657D               	cpfsgt	tolower@c& (0+255),b
 16117  0060E2  D001               	goto	l3334
 16118                           
 16119                           ; BSR set to: 0
 16120  0060E4  8B7D               	bsf	tolower@c& (0+255),5,b
 16121  0060E6                     l3334:
 16122                           
 16123                           ; BSR set to: 0
 16124                           
 16125                           ; BSR set to: 0
 16126  0060E6  517D               	movf	tolower@c& (0+255),w,b
 16127  0060E8  0012               	return	
 16128  0060EA                     __end_of_tolower:
 16129                           	opt stack 0
 16130                           tosu	equ	0xFFF
 16131                           tosh	equ	0xFFE
 16132                           tosl	equ	0xFFD
 16133                           pclath	equ	0xFFA
 16134                           tblptru	equ	0xFF8
 16135                           tblptrh	equ	0xFF7
 16136                           tblptrl	equ	0xFF6
 16137                           tablat	equ	0xFF5
 16138                           prodh	equ	0xFF4
 16139                           prodl	equ	0xFF3
 16140                           intcon	equ	0xFF2
 16141                           intcon2	equ	0xFF1
 16142                           intcon3	equ	0xFF0
 16143                           indf0	equ	0xFEF
 16144                           postinc0	equ	0xFEE
 16145                           plusw0	equ	0xFEB
 16146                           fsr0h	equ	0xFEA
 16147                           fsr0l	equ	0xFE9
 16148                           wreg	equ	0xFE8
 16149                           indf1	equ	0xFE7
 16150                           postinc1	equ	0xFE6
 16151                           postdec1	equ	0xFE5
 16152                           plusw1	equ	0xFE3
 16153                           fsr1h	equ	0xFE2
 16154                           fsr1l	equ	0xFE1
 16155                           indf2	equ	0xFDF
 16156                           postinc2	equ	0xFDE
 16157                           postdec2	equ	0xFDD
 16158                           plusw2	equ	0xFDB
 16159                           fsr2h	equ	0xFDA
 16160                           fsr2l	equ	0xFD9
 16161                           status	equ	0xFD8
 16162                           
 16163 ;; *************** function _isxdigit *****************
 16164 ;; Defined at:
 16165 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16166 ;; Parameters:    Size  Location     Type
 16167 ;;  c               1    wreg     unsigned char 
 16168 ;; Auto vars:     Size  Location     Type
 16169 ;;  c               1   34[BANK0 ] unsigned char 
 16170 ;; Return value:  Size  Location     Type
 16171 ;;		None               void
 16172 ;; Registers used:
 16173 ;;		wreg, status,2, status,0, cstack
 16174 ;; Tracked objects:
 16175 ;;		On entry : 0/0
 16176 ;;		On exit  : 0/0
 16177 ;;		Unchanged: 0/0
 16178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16180 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16181 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16182 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16183 ;;Total ram usage:        3 bytes
 16184 ;; Hardware stack levels used:    1
 16185 ;; Hardware stack levels required when called:   12
 16186 ;; This function calls:
 16187 ;;		_isdigit
 16188 ;; This function is called by:
 16189 ;;		_xtoi
 16190 ;; This function uses a non-reentrant model
 16191 ;;
 16192                           
 16193                           	psect	text63
 16194  005A9E                     __ptext63:
 16195                           	opt stack 0
 16196  005A9E                     _isxdigit:
 16197                           	opt stack 12
 16198                           
 16199                           ; BSR set to: 0
 16200                           ;incstack = 0
 16201                           ;isxdigit@c stored from wreg
 16202  005A9E  0100               	movlb	0	; () banked
 16203  005AA0  6F82               	movwf	isxdigit@c& (0+255),b
 16204  005AA2  0E01               	movlw	1
 16205  005AA4  0100               	movlb	0	; () banked
 16206  005AA6  6F81               	movwf	_isxdigit$6427& (0+255),b
 16207                           
 16208                           ; BSR set to: 0
 16209  005AA8  0E67               	movlw	103
 16210  005AAA  6182               	cpfslt	isxdigit@c& (0+255),b
 16211  005AAC  D003               	goto	u11310
 16212                           
 16213                           ; BSR set to: 0
 16214  005AAE  0E61               	movlw	97
 16215  005AB0  6182               	cpfslt	isxdigit@c& (0+255),b
 16216  005AB2  D00E               	goto	l3330
 16217  005AB4                     u11310:
 16218                           
 16219                           ; BSR set to: 0
 16220                           
 16221                           ; BSR set to: 0
 16222  005AB4  0E47               	movlw	71
 16223  005AB6  6182               	cpfslt	isxdigit@c& (0+255),b
 16224  005AB8  D003               	goto	u11330
 16225                           
 16226                           ; BSR set to: 0
 16227  005ABA  0E41               	movlw	65
 16228  005ABC  6182               	cpfslt	isxdigit@c& (0+255),b
 16229  005ABE  D008               	goto	l3330
 16230  005AC0                     u11330:
 16231                           
 16232                           ; BSR set to: 0
 16233                           
 16234                           ; BSR set to: 0
 16235  005AC0  5182               	movf	isxdigit@c& (0+255),w,b
 16236  005AC2  ECC7  F02F         	call	_isdigit
 16237  005AC6  B0D8               	btfsc	status,0,c
 16238  005AC8  D003               	goto	l3330
 16239  005ACA  0E00               	movlw	0
 16240  005ACC  0100               	movlb	0	; () banked
 16241  005ACE  6F81               	movwf	_isxdigit$6427& (0+255),b
 16242  005AD0                     l3330:
 16243                           
 16244                           ; BSR set to: 0
 16245  005AD0  C081  F080         	movff	_isxdigit$6427,??_isxdigit
 16246  005AD4  0100               	movlb	0	; () banked
 16247  005AD6  3180               	rrcf	??_isxdigit& (0+255),w,b
 16248  005AD8  0012               	return	
 16249  005ADA                     __end_of_isxdigit:
 16250                           	opt stack 0
 16251                           tosu	equ	0xFFF
 16252                           tosh	equ	0xFFE
 16253                           tosl	equ	0xFFD
 16254                           pclath	equ	0xFFA
 16255                           tblptru	equ	0xFF8
 16256                           tblptrh	equ	0xFF7
 16257                           tblptrl	equ	0xFF6
 16258                           tablat	equ	0xFF5
 16259                           prodh	equ	0xFF4
 16260                           prodl	equ	0xFF3
 16261                           intcon	equ	0xFF2
 16262                           intcon2	equ	0xFF1
 16263                           intcon3	equ	0xFF0
 16264                           indf0	equ	0xFEF
 16265                           postinc0	equ	0xFEE
 16266                           plusw0	equ	0xFEB
 16267                           fsr0h	equ	0xFEA
 16268                           fsr0l	equ	0xFE9
 16269                           wreg	equ	0xFE8
 16270                           indf1	equ	0xFE7
 16271                           postinc1	equ	0xFE6
 16272                           postdec1	equ	0xFE5
 16273                           plusw1	equ	0xFE3
 16274                           fsr1h	equ	0xFE2
 16275                           fsr1l	equ	0xFE1
 16276                           indf2	equ	0xFDF
 16277                           postinc2	equ	0xFDE
 16278                           postdec2	equ	0xFDD
 16279                           plusw2	equ	0xFDB
 16280                           fsr2h	equ	0xFDA
 16281                           fsr2l	equ	0xFD9
 16282                           status	equ	0xFD8
 16283                           
 16284 ;; *************** function _strtol *****************
 16285 ;; Defined at:
 16286 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16287 ;; Parameters:    Size  Location     Type
 16288 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16289 ;;		 -> Terminal@Payload(80), 
 16290 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16291 ;;		 -> NULL(0), 
 16292 ;;  base            2   45[BANK0 ] int 
 16293 ;; Auto vars:     Size  Location     Type
 16294 ;;  a               4   52[BANK0 ] long 
 16295 ;;  c               1   56[BANK0 ] unsigned char 
 16296 ;;  sign            1   51[BANK0 ] unsigned char 
 16297 ;; Return value:  Size  Location     Type
 16298 ;;                  4   41[BANK0 ] long 
 16299 ;; Registers used:
 16300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16301 ;; Tracked objects:
 16302 ;;		On entry : 0/0
 16303 ;;		On exit  : 0/0
 16304 ;;		Unchanged: 0/0
 16305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16306 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16307 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16308 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16309 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16310 ;;Total ram usage:       16 bytes
 16311 ;; Hardware stack levels used:    1
 16312 ;; Hardware stack levels required when called:   13
 16313 ;; This function calls:
 16314 ;;		___lmul
 16315 ;;		_isalpha
 16316 ;;		_isdigit
 16317 ;;		_isspace
 16318 ;;		_toupper
 16319 ;; This function is called by:
 16320 ;;		_Terminal
 16321 ;; This function uses a non-reentrant model
 16322 ;;
 16323                           
 16324                           	psect	text64
 16325  00181C                     __ptext64:
 16326                           	opt stack 0
 16327  00181C                     _strtol:
 16328                           	opt stack 12
 16329                           
 16330                           ; BSR set to: 0
 16331                           ;incstack = 0
 16332  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16333  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16334  001824  50DF               	movf	indf2,w,c
 16335  001826  0100               	movlb	0	; () banked
 16336  001828  6F98               	movwf	strtol@c& (0+255),b
 16337                           
 16338                           ; BSR set to: 0
 16339  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16340  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16341                           
 16342                           ; BSR set to: 0
 16343  00182E  5198               	movf	strtol@c& (0+255),w,b
 16344  001830  ECFF  F02E         	call	_isspace
 16345  001834  B0D8               	btfsc	status,0,c
 16346  001836  D7F2               	goto	_strtol
 16347  001838  0E00               	movlw	0
 16348  00183A  0100               	movlb	0	; () banked
 16349  00183C  6F94               	movwf	strtol@a& (0+255),b
 16350  00183E  0E00               	movlw	0
 16351  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16352  001842  0E00               	movlw	0
 16353  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16354  001846  0E00               	movlw	0
 16355  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16356  00184A  0E00               	movlw	0
 16357  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16358                           
 16359                           ; BSR set to: 0
 16360  00184E  0E2D               	movlw	45
 16361  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16362  001852  A4D8               	btfss	status,2,c
 16363  001854  D003               	goto	l3237
 16364                           
 16365                           ; BSR set to: 0
 16366  001856  0E01               	movlw	1
 16367  001858  6F93               	movwf	strtol@sign& (0+255),b
 16368  00185A  D004               	goto	u11810
 16369  00185C                     l3237:
 16370                           
 16371                           ; BSR set to: 0
 16372                           
 16373                           ; BSR set to: 0
 16374  00185C  0E2B               	movlw	43
 16375  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16376  001860  A4D8               	btfss	status,2,c
 16377  001862  D008               	goto	l3239
 16378  001864                     u11810:
 16379                           
 16380                           ; BSR set to: 0
 16381  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16382  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16383  00186C  50DF               	movf	indf2,w,c
 16384  00186E  6F98               	movwf	strtol@c& (0+255),b
 16385                           
 16386                           ; BSR set to: 0
 16387  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16388  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16389  001874                     l3239:
 16390                           
 16391                           ; BSR set to: 0
 16392                           
 16393                           ; BSR set to: 0
 16394                           
 16395                           ; BSR set to: 0
 16396  001874  0E30               	movlw	48
 16397  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16398  001878  A4D8               	btfss	status,2,c
 16399  00187A  D02E               	goto	l3247
 16400                           
 16401                           ; BSR set to: 0
 16402  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16403  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16404  001884  50DF               	movf	indf2,w,c
 16405  001886  6F98               	movwf	strtol@c& (0+255),b
 16406                           
 16407                           ; BSR set to: 0
 16408  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16409  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16410                           
 16411                           ; BSR set to: 0
 16412  00188C  518D               	movf	strtol@base& (0+255),w,b
 16413  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16414  001890  B4D8               	btfsc	status,2,c
 16415  001892  D005               	goto	u11840
 16416                           
 16417                           ; BSR set to: 0
 16418  001894  0E10               	movlw	16
 16419  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16420  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16421  00189A  A4D8               	btfss	status,2,c
 16422  00189C  D015               	goto	l3241
 16423  00189E                     u11840:
 16424                           
 16425                           ; BSR set to: 0
 16426                           
 16427                           ; BSR set to: 0
 16428  00189E  0E78               	movlw	120
 16429  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16430  0018A2  B4D8               	btfsc	status,2,c
 16431  0018A4  D004               	goto	u11860
 16432                           
 16433                           ; BSR set to: 0
 16434  0018A6  0E58               	movlw	88
 16435  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16436  0018AA  A4D8               	btfss	status,2,c
 16437  0018AC  D00D               	goto	l3241
 16438  0018AE                     u11860:
 16439                           
 16440                           ; BSR set to: 0
 16441                           
 16442                           ; BSR set to: 0
 16443  0018AE  0E00               	movlw	0
 16444  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16445  0018B2  0E10               	movlw	16
 16446  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16447                           
 16448                           ; BSR set to: 0
 16449  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16450  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16451  0018BE  50DF               	movf	indf2,w,c
 16452  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16453                           
 16454                           ; BSR set to: 0
 16455  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16456  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16457  0018C6  D008               	goto	l3247
 16458  0018C8                     l3241:
 16459                           
 16460                           ; BSR set to: 0
 16461                           
 16462                           ; BSR set to: 0
 16463  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16464  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16465  0018CC  A4D8               	btfss	status,2,c
 16466  0018CE  D004               	goto	l3247
 16467                           
 16468                           ; BSR set to: 0
 16469  0018D0  0E00               	movlw	0
 16470  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16471  0018D4  0E08               	movlw	8
 16472  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16473  0018D8                     l3247:
 16474                           
 16475                           ; BSR set to: 0
 16476                           
 16477                           ; BSR set to: 0
 16478                           
 16479                           ; BSR set to: 0
 16480                           
 16481                           ; BSR set to: 0
 16482  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16483  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16484  0018DC  A4D8               	btfss	status,2,c
 16485  0018DE  D004               	goto	l3248
 16486                           
 16487                           ; BSR set to: 0
 16488  0018E0  0E00               	movlw	0
 16489  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16490  0018E4  0E0A               	movlw	10
 16491  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16492  0018E8                     l3248:
 16493                           
 16494                           ; BSR set to: 0
 16495                           
 16496                           ; BSR set to: 0
 16497                           
 16498                           ; BSR set to: 0
 16499  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16500  0018EA  EC76  F02E         	call	_isalpha
 16501  0018EE  A0D8               	btfss	status,0,c
 16502  0018F0  D008               	goto	l3250
 16503  0018F2  0100               	movlb	0	; () banked
 16504  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16505  0018F6  EC75  F030         	call	_toupper
 16506  0018FA  0FC9               	addlw	201
 16507  0018FC  0100               	movlb	0	; () banked
 16508  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16509  001900  D009               	goto	l3253
 16510  001902                     l3250:
 16511                           
 16512                           ; BSR set to: 0
 16513  001902  0100               	movlb	0	; () banked
 16514  001904  5198               	movf	strtol@c& (0+255),w,b
 16515  001906  ECC7  F02F         	call	_isdigit
 16516  00190A  A0D8               	btfss	status,0,c
 16517  00190C  D039               	goto	l3254
 16518  00190E  0E30               	movlw	48
 16519  001910  0100               	movlb	0	; () banked
 16520  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16521  001914                     l3253:
 16522                           
 16523                           ; BSR set to: 0
 16524                           
 16525                           ; BSR set to: 0
 16526                           
 16527                           ; BSR set to: 0
 16528  001914  5198               	movf	strtol@c& (0+255),w,b
 16529  001916  6F8F               	movwf	??_strtol& (0+255),b
 16530  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16531  00191A  518D               	movf	strtol@base& (0+255),w,b
 16532  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16533  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16534  001920  0A80               	xorlw	128
 16535  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16536  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16537  001926  0A80               	xorlw	128
 16538  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16539  00192A  B0D8               	btfsc	status,0,c
 16540  00192C  D029               	goto	l3254
 16541                           
 16542                           ; BSR set to: 0
 16543                           
 16544                           ; BSR set to: 0
 16545                           
 16546                           ; BSR set to: 0
 16547  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16548  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16549  001936  0E00               	movlw	0
 16550  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16551  00193A  0EFF               	movlw	-1
 16552  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16553  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16554  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16555  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16556  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16557  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16558  001950  EC39  F029         	call	___lmul	;wreg free
 16559  001954  0100               	movlb	0	; () banked
 16560  001956  5198               	movf	strtol@c& (0+255),w,b
 16561  001958  257D               	addwf	?___lmul& (0+255),w,b
 16562  00195A  6F94               	movwf	strtol@a& (0+255),b
 16563  00195C  0E00               	movlw	0
 16564  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16565  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16566  001962  0E00               	movlw	0
 16567  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16568  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16569  001968  0E00               	movlw	0
 16570  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16571  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16572                           
 16573                           ; BSR set to: 0
 16574  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16575  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16576  001976  50DF               	movf	indf2,w,c
 16577  001978  6F98               	movwf	strtol@c& (0+255),b
 16578                           
 16579                           ; BSR set to: 0
 16580  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16581  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16582  00197E  D7B4               	goto	l3248
 16583  001980                     l3254:
 16584                           
 16585                           ; BSR set to: 0
 16586  001980  0100               	movlb	0	; () banked
 16587  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16588  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16589  001986  B4D8               	btfsc	status,2,c
 16590  001988  D00E               	goto	l3256
 16591                           
 16592                           ; BSR set to: 0
 16593  00198A  0EFF               	movlw	255
 16594  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16595  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16596  001990  0EFF               	movlw	255
 16597  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16598  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16599  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16600  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16601  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16602  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16603  0019A6                     l3256:
 16604                           
 16605                           ; BSR set to: 0
 16606                           
 16607                           ; BSR set to: 0
 16608  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16609  0019A8  B4D8               	btfsc	status,2,c
 16610  0019AA  D01A               	goto	l3257
 16611                           
 16612                           ; BSR set to: 0
 16613  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16614  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16615  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16616  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16617  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16618  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16619  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16620  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16621  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16622  0019C6  0E00               	movlw	0
 16623  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16624  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16625  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16626  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16627  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16628  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16629  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16630                           
 16631                           ; BSR set to: 0
 16632  0019DE  0012               	return	
 16633  0019E0                     l3257:
 16634                           
 16635                           ; BSR set to: 0
 16636  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16637  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16638  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16639  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16640                           
 16641                           ; BSR set to: 0
 16642  0019F0  0012               	return		;funcret
 16643  0019F2                     __end_of_strtol:
 16644                           	opt stack 0
 16645                           tosu	equ	0xFFF
 16646                           tosh	equ	0xFFE
 16647                           tosl	equ	0xFFD
 16648                           pclath	equ	0xFFA
 16649                           tblptru	equ	0xFF8
 16650                           tblptrh	equ	0xFF7
 16651                           tblptrl	equ	0xFF6
 16652                           tablat	equ	0xFF5
 16653                           prodh	equ	0xFF4
 16654                           prodl	equ	0xFF3
 16655                           intcon	equ	0xFF2
 16656                           intcon2	equ	0xFF1
 16657                           intcon3	equ	0xFF0
 16658                           indf0	equ	0xFEF
 16659                           postinc0	equ	0xFEE
 16660                           plusw0	equ	0xFEB
 16661                           fsr0h	equ	0xFEA
 16662                           fsr0l	equ	0xFE9
 16663                           wreg	equ	0xFE8
 16664                           indf1	equ	0xFE7
 16665                           postinc1	equ	0xFE6
 16666                           postdec1	equ	0xFE5
 16667                           plusw1	equ	0xFE3
 16668                           fsr1h	equ	0xFE2
 16669                           fsr1l	equ	0xFE1
 16670                           indf2	equ	0xFDF
 16671                           postinc2	equ	0xFDE
 16672                           postdec2	equ	0xFDD
 16673                           plusw2	equ	0xFDB
 16674                           fsr2h	equ	0xFDA
 16675                           fsr2l	equ	0xFD9
 16676                           status	equ	0xFD8
 16677                           
 16678 ;; *************** function _toupper *****************
 16679 ;; Defined at:
 16680 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16681 ;; Parameters:    Size  Location     Type
 16682 ;;  c               1    wreg     unsigned char 
 16683 ;; Auto vars:     Size  Location     Type
 16684 ;;  c               1   29[BANK0 ] unsigned char 
 16685 ;; Return value:  Size  Location     Type
 16686 ;;                  1    wreg      unsigned char 
 16687 ;; Registers used:
 16688 ;;		wreg, status,2, status,0
 16689 ;; Tracked objects:
 16690 ;;		On entry : 0/0
 16691 ;;		On exit  : 0/0
 16692 ;;		Unchanged: 0/0
 16693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16697 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16698 ;;Total ram usage:        1 bytes
 16699 ;; Hardware stack levels used:    1
 16700 ;; Hardware stack levels required when called:   11
 16701 ;; This function calls:
 16702 ;;		Nothing
 16703 ;; This function is called by:
 16704 ;;		_strtol
 16705 ;; This function uses a non-reentrant model
 16706 ;;
 16707                           
 16708                           	psect	text65
 16709  0060EA                     __ptext65:
 16710                           	opt stack 0
 16711  0060EA                     _toupper:
 16712                           	opt stack 13
 16713                           
 16714                           ; BSR set to: 0
 16715                           ;incstack = 0
 16716                           ;toupper@c stored from wreg
 16717  0060EA  0100               	movlb	0	; () banked
 16718  0060EC  6F7D               	movwf	toupper@c& (0+255),b
 16719  0060EE  0E7B               	movlw	123
 16720  0060F0  0100               	movlb	0	; () banked
 16721  0060F2  617D               	cpfslt	toupper@c& (0+255),b
 16722  0060F4  D004               	goto	l3261
 16723                           
 16724                           ; BSR set to: 0
 16725  0060F6  0E60               	movlw	96
 16726  0060F8  657D               	cpfsgt	toupper@c& (0+255),b
 16727  0060FA  D001               	goto	l3261
 16728                           
 16729                           ; BSR set to: 0
 16730  0060FC  9B7D               	bcf	toupper@c& (0+255),5,b
 16731  0060FE                     l3261:
 16732                           
 16733                           ; BSR set to: 0
 16734                           
 16735                           ; BSR set to: 0
 16736  0060FE  517D               	movf	toupper@c& (0+255),w,b
 16737  006100  0012               	return	
 16738  006102                     __end_of_toupper:
 16739                           	opt stack 0
 16740                           tosu	equ	0xFFF
 16741                           tosh	equ	0xFFE
 16742                           tosl	equ	0xFFD
 16743                           pclath	equ	0xFFA
 16744                           tblptru	equ	0xFF8
 16745                           tblptrh	equ	0xFF7
 16746                           tblptrl	equ	0xFF6
 16747                           tablat	equ	0xFF5
 16748                           prodh	equ	0xFF4
 16749                           prodl	equ	0xFF3
 16750                           intcon	equ	0xFF2
 16751                           intcon2	equ	0xFF1
 16752                           intcon3	equ	0xFF0
 16753                           indf0	equ	0xFEF
 16754                           postinc0	equ	0xFEE
 16755                           plusw0	equ	0xFEB
 16756                           fsr0h	equ	0xFEA
 16757                           fsr0l	equ	0xFE9
 16758                           wreg	equ	0xFE8
 16759                           indf1	equ	0xFE7
 16760                           postinc1	equ	0xFE6
 16761                           postdec1	equ	0xFE5
 16762                           plusw1	equ	0xFE3
 16763                           fsr1h	equ	0xFE2
 16764                           fsr1l	equ	0xFE1
 16765                           indf2	equ	0xFDF
 16766                           postinc2	equ	0xFDE
 16767                           postdec2	equ	0xFDD
 16768                           plusw2	equ	0xFDB
 16769                           fsr2h	equ	0xFDA
 16770                           fsr2l	equ	0xFD9
 16771                           status	equ	0xFD8
 16772                           
 16773 ;; *************** function _isspace *****************
 16774 ;; Defined at:
 16775 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16776 ;; Parameters:    Size  Location     Type
 16777 ;;  c               1    wreg     unsigned char 
 16778 ;; Auto vars:     Size  Location     Type
 16779 ;;  c               1   31[BANK0 ] unsigned char 
 16780 ;; Return value:  Size  Location     Type
 16781 ;;		None               void
 16782 ;; Registers used:
 16783 ;;		wreg, status,2, status,0
 16784 ;; Tracked objects:
 16785 ;;		On entry : 0/0
 16786 ;;		On exit  : 0/0
 16787 ;;		Unchanged: 0/0
 16788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16790 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16791 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16792 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16793 ;;Total ram usage:        3 bytes
 16794 ;; Hardware stack levels used:    1
 16795 ;; Hardware stack levels required when called:   11
 16796 ;; This function calls:
 16797 ;;		Nothing
 16798 ;; This function is called by:
 16799 ;;		_strtol
 16800 ;;		_xtoi
 16801 ;; This function uses a non-reentrant model
 16802 ;;
 16803                           
 16804                           	psect	text66
 16805  005DFE                     __ptext66:
 16806                           	opt stack 0
 16807  005DFE                     _isspace:
 16808                           	opt stack 13
 16809                           
 16810                           ; BSR set to: 0
 16811                           ;incstack = 0
 16812                           ;isspace@c stored from wreg
 16813  005DFE  0100               	movlb	0	; () banked
 16814  005E00  6F7F               	movwf	isspace@c& (0+255),b
 16815  005E02  0E01               	movlw	1
 16816  005E04  0100               	movlb	0	; () banked
 16817  005E06  6F7E               	movwf	_isspace$6420& (0+255),b
 16818                           
 16819                           ; BSR set to: 0
 16820  005E08  0E20               	movlw	32
 16821  005E0A  197F               	xorwf	isspace@c& (0+255),w,b
 16822  005E0C  B4D8               	btfsc	status,2,c
 16823  005E0E  D008               	goto	l3318
 16824                           
 16825                           ; BSR set to: 0
 16826  005E10  0E0E               	movlw	14
 16827  005E12  617F               	cpfslt	isspace@c& (0+255),b
 16828  005E14  D003               	goto	u11220
 16829                           
 16830                           ; BSR set to: 0
 16831  005E16  0E09               	movlw	9
 16832  005E18  617F               	cpfslt	isspace@c& (0+255),b
 16833  005E1A  D002               	goto	l3318
 16834  005E1C                     u11220:
 16835                           
 16836                           ; BSR set to: 0
 16837                           
 16838                           ; BSR set to: 0
 16839  005E1C  0E00               	movlw	0
 16840  005E1E  6F7E               	movwf	_isspace$6420& (0+255),b
 16841  005E20                     l3318:
 16842                           
 16843                           ; BSR set to: 0
 16844                           
 16845                           ; BSR set to: 0
 16846  005E20  C07E  F07D         	movff	_isspace$6420,??_isspace
 16847  005E24  317D               	rrcf	??_isspace& (0+255),w,b
 16848  005E26  0012               	return	
 16849  005E28                     __end_of_isspace:
 16850                           	opt stack 0
 16851                           tosu	equ	0xFFF
 16852                           tosh	equ	0xFFE
 16853                           tosl	equ	0xFFD
 16854                           pclath	equ	0xFFA
 16855                           tblptru	equ	0xFF8
 16856                           tblptrh	equ	0xFF7
 16857                           tblptrl	equ	0xFF6
 16858                           tablat	equ	0xFF5
 16859                           prodh	equ	0xFF4
 16860                           prodl	equ	0xFF3
 16861                           intcon	equ	0xFF2
 16862                           intcon2	equ	0xFF1
 16863                           intcon3	equ	0xFF0
 16864                           indf0	equ	0xFEF
 16865                           postinc0	equ	0xFEE
 16866                           plusw0	equ	0xFEB
 16867                           fsr0h	equ	0xFEA
 16868                           fsr0l	equ	0xFE9
 16869                           wreg	equ	0xFE8
 16870                           indf1	equ	0xFE7
 16871                           postinc1	equ	0xFE6
 16872                           postdec1	equ	0xFE5
 16873                           plusw1	equ	0xFE3
 16874                           fsr1h	equ	0xFE2
 16875                           fsr1l	equ	0xFE1
 16876                           indf2	equ	0xFDF
 16877                           postinc2	equ	0xFDE
 16878                           postdec2	equ	0xFDD
 16879                           plusw2	equ	0xFDB
 16880                           fsr2h	equ	0xFDA
 16881                           fsr2l	equ	0xFD9
 16882                           status	equ	0xFD8
 16883                           
 16884 ;; *************** function _isalpha *****************
 16885 ;; Defined at:
 16886 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 16887 ;; Parameters:    Size  Location     Type
 16888 ;;  c               1    wreg     unsigned char 
 16889 ;; Auto vars:     Size  Location     Type
 16890 ;;  c               1   34[BANK0 ] unsigned char 
 16891 ;; Return value:  Size  Location     Type
 16892 ;;		None               void
 16893 ;; Registers used:
 16894 ;;		wreg, status,2, status,0, cstack
 16895 ;; Tracked objects:
 16896 ;;		On entry : 0/0
 16897 ;;		On exit  : 0/0
 16898 ;;		Unchanged: 0/0
 16899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16901 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16902 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16903 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16904 ;;Total ram usage:        3 bytes
 16905 ;; Hardware stack levels used:    1
 16906 ;; Hardware stack levels required when called:   12
 16907 ;; This function calls:
 16908 ;;		_isupper
 16909 ;; This function is called by:
 16910 ;;		_strtol
 16911 ;; This function uses a non-reentrant model
 16912 ;;
 16913                           
 16914                           	psect	text67
 16915  005CEC                     __ptext67:
 16916                           	opt stack 0
 16917  005CEC                     _isalpha:
 16918                           	opt stack 12
 16919                           
 16920                           ; BSR set to: 0
 16921                           ;incstack = 0
 16922                           ;isalpha@c stored from wreg
 16923  005CEC  0100               	movlb	0	; () banked
 16924  005CEE  6F82               	movwf	isalpha@c& (0+255),b
 16925  005CF0  0E01               	movlw	1
 16926  005CF2  0100               	movlb	0	; () banked
 16927  005CF4  6F81               	movwf	_isalpha$6417& (0+255),b
 16928                           
 16929                           ; BSR set to: 0
 16930  005CF6  0E7B               	movlw	123
 16931  005CF8  6182               	cpfslt	isalpha@c& (0+255),b
 16932  005CFA  D003               	goto	u11240
 16933                           
 16934                           ; BSR set to: 0
 16935  005CFC  0E61               	movlw	97
 16936  005CFE  6182               	cpfslt	isalpha@c& (0+255),b
 16937  005D00  D008               	goto	l3313
 16938  005D02                     u11240:
 16939                           
 16940                           ; BSR set to: 0
 16941                           
 16942                           ; BSR set to: 0
 16943  005D02  5182               	movf	isalpha@c& (0+255),w,b
 16944  005D04  ECA5  F02F         	call	_isupper
 16945  005D08  B0D8               	btfsc	status,0,c
 16946  005D0A  D003               	goto	l3313
 16947  005D0C  0E00               	movlw	0
 16948  005D0E  0100               	movlb	0	; () banked
 16949  005D10  6F81               	movwf	_isalpha$6417& (0+255),b
 16950  005D12                     l3313:
 16951                           
 16952                           ; BSR set to: 0
 16953  005D12  C081  F080         	movff	_isalpha$6417,??_isalpha
 16954  005D16  0100               	movlb	0	; () banked
 16955  005D18  3180               	rrcf	??_isalpha& (0+255),w,b
 16956  005D1A  0012               	return	
 16957  005D1C                     __end_of_isalpha:
 16958                           	opt stack 0
 16959                           tosu	equ	0xFFF
 16960                           tosh	equ	0xFFE
 16961                           tosl	equ	0xFFD
 16962                           pclath	equ	0xFFA
 16963                           tblptru	equ	0xFF8
 16964                           tblptrh	equ	0xFF7
 16965                           tblptrl	equ	0xFF6
 16966                           tablat	equ	0xFF5
 16967                           prodh	equ	0xFF4
 16968                           prodl	equ	0xFF3
 16969                           intcon	equ	0xFF2
 16970                           intcon2	equ	0xFF1
 16971                           intcon3	equ	0xFF0
 16972                           indf0	equ	0xFEF
 16973                           postinc0	equ	0xFEE
 16974                           plusw0	equ	0xFEB
 16975                           fsr0h	equ	0xFEA
 16976                           fsr0l	equ	0xFE9
 16977                           wreg	equ	0xFE8
 16978                           indf1	equ	0xFE7
 16979                           postinc1	equ	0xFE6
 16980                           postdec1	equ	0xFE5
 16981                           plusw1	equ	0xFE3
 16982                           fsr1h	equ	0xFE2
 16983                           fsr1l	equ	0xFE1
 16984                           indf2	equ	0xFDF
 16985                           postinc2	equ	0xFDE
 16986                           postdec2	equ	0xFDD
 16987                           plusw2	equ	0xFDB
 16988                           fsr2h	equ	0xFDA
 16989                           fsr2l	equ	0xFD9
 16990                           status	equ	0xFD8
 16991                           
 16992 ;; *************** function _isupper *****************
 16993 ;; Defined at:
 16994 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 16995 ;; Parameters:    Size  Location     Type
 16996 ;;  c               1    wreg     unsigned char 
 16997 ;; Auto vars:     Size  Location     Type
 16998 ;;  c               1   31[BANK0 ] unsigned char 
 16999 ;; Return value:  Size  Location     Type
 17000 ;;		None               void
 17001 ;; Registers used:
 17002 ;;		wreg, status,2, status,0
 17003 ;; Tracked objects:
 17004 ;;		On entry : 0/0
 17005 ;;		On exit  : 0/0
 17006 ;;		Unchanged: 0/0
 17007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17009 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17010 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17011 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17012 ;;Total ram usage:        3 bytes
 17013 ;; Hardware stack levels used:    1
 17014 ;; Hardware stack levels required when called:   11
 17015 ;; This function calls:
 17016 ;;		Nothing
 17017 ;; This function is called by:
 17018 ;;		_xtoi
 17019 ;;		_isalpha
 17020 ;; This function uses a non-reentrant model
 17021 ;;
 17022                           
 17023                           	psect	text68
 17024  005F4A                     __ptext68:
 17025                           	opt stack 0
 17026  005F4A                     _isupper:
 17027                           	opt stack 13
 17028                           
 17029                           ; BSR set to: 0
 17030                           ;incstack = 0
 17031                           ;isupper@c stored from wreg
 17032  005F4A  0100               	movlb	0	; () banked
 17033  005F4C  6F7F               	movwf	isupper@c& (0+255),b
 17034  005F4E  0E00               	movlw	0
 17035  005F50  0100               	movlb	0	; () banked
 17036  005F52  6F7E               	movwf	_isupper$6423& (0+255),b
 17037                           
 17038                           ; BSR set to: 0
 17039  005F54  0E5B               	movlw	91
 17040  005F56  617F               	cpfslt	isupper@c& (0+255),b
 17041  005F58  D005               	goto	l3323
 17042                           
 17043                           ; BSR set to: 0
 17044  005F5A  0E40               	movlw	64
 17045  005F5C  657F               	cpfsgt	isupper@c& (0+255),b
 17046  005F5E  D002               	goto	l3323
 17047                           
 17048                           ; BSR set to: 0
 17049  005F60  0E01               	movlw	1
 17050  005F62  6F7E               	movwf	_isupper$6423& (0+255),b
 17051  005F64                     l3323:
 17052                           
 17053                           ; BSR set to: 0
 17054                           
 17055                           ; BSR set to: 0
 17056  005F64  C07E  F07D         	movff	_isupper$6423,??_isupper
 17057  005F68  317D               	rrcf	??_isupper& (0+255),w,b
 17058  005F6A  0012               	return	
 17059  005F6C                     __end_of_isupper:
 17060                           	opt stack 0
 17061                           tosu	equ	0xFFF
 17062                           tosh	equ	0xFFE
 17063                           tosl	equ	0xFFD
 17064                           pclath	equ	0xFFA
 17065                           tblptru	equ	0xFF8
 17066                           tblptrh	equ	0xFF7
 17067                           tblptrl	equ	0xFF6
 17068                           tablat	equ	0xFF5
 17069                           prodh	equ	0xFF4
 17070                           prodl	equ	0xFF3
 17071                           intcon	equ	0xFF2
 17072                           intcon2	equ	0xFF1
 17073                           intcon3	equ	0xFF0
 17074                           indf0	equ	0xFEF
 17075                           postinc0	equ	0xFEE
 17076                           plusw0	equ	0xFEB
 17077                           fsr0h	equ	0xFEA
 17078                           fsr0l	equ	0xFE9
 17079                           wreg	equ	0xFE8
 17080                           indf1	equ	0xFE7
 17081                           postinc1	equ	0xFE6
 17082                           postdec1	equ	0xFE5
 17083                           plusw1	equ	0xFE3
 17084                           fsr1h	equ	0xFE2
 17085                           fsr1l	equ	0xFE1
 17086                           indf2	equ	0xFDF
 17087                           postinc2	equ	0xFDE
 17088                           postdec2	equ	0xFDD
 17089                           plusw2	equ	0xFDB
 17090                           fsr2h	equ	0xFDA
 17091                           fsr2l	equ	0xFD9
 17092                           status	equ	0xFD8
 17093                           
 17094 ;; *************** function _strcpy *****************
 17095 ;; Defined at:
 17096 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17097 ;; Parameters:    Size  Location     Type
 17098 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17099 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17100 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17101 ;;		 -> STR_23(20), STR_21(42), 
 17102 ;; Auto vars:     Size  Location     Type
 17103 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17104 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17105 ;; Return value:  Size  Location     Type
 17106 ;;                  2   29[BANK0 ] PTR unsigned char 
 17107 ;; Registers used:
 17108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17109 ;; Tracked objects:
 17110 ;;		On entry : 0/0
 17111 ;;		On exit  : 0/0
 17112 ;;		Unchanged: 0/0
 17113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17114 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17115 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17117 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17118 ;;Total ram usage:        6 bytes
 17119 ;; Hardware stack levels used:    1
 17120 ;; Hardware stack levels required when called:   11
 17121 ;; This function calls:
 17122 ;;		Nothing
 17123 ;; This function is called by:
 17124 ;;		_Terminal
 17125 ;;		_Term_MainSm
 17126 ;; This function uses a non-reentrant model
 17127 ;;
 17128                           
 17129                           	psect	text69
 17130  005C5A                     __ptext69:
 17131                           	opt stack 0
 17132  005C5A                     _strcpy:
 17133                           	opt stack 15
 17134                           
 17135                           ; BSR set to: 0
 17136                           ;incstack = 0
 17137  005C5A  C07D  F081         	movff	strcpy@to,strcpy@cp
 17138  005C5E  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17139  005C62  D005               	goto	l3215
 17140  005C64  0100               	movlb	0	; () banked
 17141  005C66  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17142  005C68  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17143  005C6A  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17144  005C6C  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17145  005C6E                     l3215:
 17146                           
 17147                           ; BSR set to: 0
 17148  005C6E  C07F  FFF6         	movff	strcpy@from,tblptrl
 17149  005C72  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17150  005C76                     	if	0	;tblptru may be non-zero
 17151  005C76                     	endif
 17152  005C76                     	if	0	;tblptru may be non-zero
 17153  005C76                     	endif
 17154  005C76  C081  FFD9         	movff	strcpy@cp,fsr2l
 17155  005C7A  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17156  005C7E  0008               	tblrd		*
 17157  005C80  CFF5 FFDF          	movff	tablat,indf2
 17158  005C84  50DF               	movf	indf2,w,c
 17159  005C86  B4D8               	btfsc	status,2,c
 17160  005C88  0012               	return	
 17161  005C8A  D7EC               	goto	l3216
 17162  005C8C                     __end_of_strcpy:
 17163                           	opt stack 0
 17164                           tosu	equ	0xFFF
 17165                           tosh	equ	0xFFE
 17166                           tosl	equ	0xFFD
 17167                           pclath	equ	0xFFA
 17168                           tblptru	equ	0xFF8
 17169                           tblptrh	equ	0xFF7
 17170                           tblptrl	equ	0xFF6
 17171                           tablat	equ	0xFF5
 17172                           prodh	equ	0xFF4
 17173                           prodl	equ	0xFF3
 17174                           intcon	equ	0xFF2
 17175                           intcon2	equ	0xFF1
 17176                           intcon3	equ	0xFF0
 17177                           indf0	equ	0xFEF
 17178                           postinc0	equ	0xFEE
 17179                           plusw0	equ	0xFEB
 17180                           fsr0h	equ	0xFEA
 17181                           fsr0l	equ	0xFE9
 17182                           wreg	equ	0xFE8
 17183                           indf1	equ	0xFE7
 17184                           postinc1	equ	0xFE6
 17185                           postdec1	equ	0xFE5
 17186                           plusw1	equ	0xFE3
 17187                           fsr1h	equ	0xFE2
 17188                           fsr1l	equ	0xFE1
 17189                           indf2	equ	0xFDF
 17190                           postinc2	equ	0xFDE
 17191                           postdec2	equ	0xFDD
 17192                           plusw2	equ	0xFDB
 17193                           fsr2h	equ	0xFDA
 17194                           fsr2l	equ	0xFD9
 17195                           status	equ	0xFD8
 17196                           
 17197 ;; *************** function _putUSBUSART *****************
 17198 ;; Defined at:
 17199 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17200 ;; Parameters:    Size  Location     Type
 17201 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17202 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17203 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17204 ;;		 -> RxBuffer(400), 
 17205 ;;  length          1   37[BANK0 ] unsigned char 
 17206 ;; Auto vars:     Size  Location     Type
 17207 ;;		None
 17208 ;; Return value:  Size  Location     Type
 17209 ;;                  1    wreg      void 
 17210 ;; Registers used:
 17211 ;;		wreg, status,2, status,0
 17212 ;; Tracked objects:
 17213 ;;		On entry : 0/0
 17214 ;;		On exit  : 0/0
 17215 ;;		Unchanged: 0/0
 17216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17217 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17220 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17221 ;;Total ram usage:        3 bytes
 17222 ;; Hardware stack levels used:    1
 17223 ;; Hardware stack levels required when called:   11
 17224 ;; This function calls:
 17225 ;;		Nothing
 17226 ;; This function is called by:
 17227 ;;		_Terminal
 17228 ;;		_Term_MainSm
 17229 ;;		_GsmGprsTerminal
 17230 ;; This function uses a non-reentrant model
 17231 ;;
 17232                           
 17233                           	psect	text70
 17234  005F6C                     __ptext70:
 17235                           	opt stack 0
 17236  005F6C                     _putUSBUSART:
 17237                           	opt stack 15
 17238                           
 17239                           ;usb_device_cdc.c: 584: ;
 17240                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17241                           
 17242                           ;incstack = 0
 17243  005F6C  0100               	movlb	0	; () banked
 17244  005F6E  51CA               	movf	_cdc_trf_state& (0+255),w,b
 17245  005F70  A4D8               	btfss	status,2,c
 17246  005F72  0012               	return	
 17247                           
 17248                           ; BSR set to: 0
 17249                           ;usb_device_cdc.c: 586: {
 17250                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17251  005F74  C083  F2CC         	movff	putUSBUSART@data,_pCDCSrc
 17252  005F78  C084  F2CD         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17253                           
 17254                           ; BSR set to: 0
 17255  005F7C  C085  F0C9         	movff	putUSBUSART@length,_cdc_tx_len
 17256                           
 17257                           ; BSR set to: 0
 17258  005F80  0E01               	movlw	1
 17259  005F82  0101               	movlb	1	; () banked
 17260  005F84  6FDF               	movwf	_cdc_mem_type& (0+255),b
 17261                           
 17262                           ; BSR set to: 1
 17263  005F86  0E01               	movlw	1
 17264  005F88  0100               	movlb	0	; () banked
 17265  005F8A  6FCA               	movwf	_cdc_trf_state& (0+255),b
 17266  005F8C  0012               	return	
 17267  005F8E                     __end_of_putUSBUSART:
 17268                           	opt stack 0
 17269                           tosu	equ	0xFFF
 17270                           tosh	equ	0xFFE
 17271                           tosl	equ	0xFFD
 17272                           pclath	equ	0xFFA
 17273                           tblptru	equ	0xFF8
 17274                           tblptrh	equ	0xFF7
 17275                           tblptrl	equ	0xFF6
 17276                           tablat	equ	0xFF5
 17277                           prodh	equ	0xFF4
 17278                           prodl	equ	0xFF3
 17279                           intcon	equ	0xFF2
 17280                           intcon2	equ	0xFF1
 17281                           intcon3	equ	0xFF0
 17282                           indf0	equ	0xFEF
 17283                           postinc0	equ	0xFEE
 17284                           plusw0	equ	0xFEB
 17285                           fsr0h	equ	0xFEA
 17286                           fsr0l	equ	0xFE9
 17287                           wreg	equ	0xFE8
 17288                           indf1	equ	0xFE7
 17289                           postinc1	equ	0xFE6
 17290                           postdec1	equ	0xFE5
 17291                           plusw1	equ	0xFE3
 17292                           fsr1h	equ	0xFE2
 17293                           fsr1l	equ	0xFE1
 17294                           indf2	equ	0xFDF
 17295                           postinc2	equ	0xFDE
 17296                           postdec2	equ	0xFDD
 17297                           plusw2	equ	0xFDB
 17298                           fsr2h	equ	0xFDA
 17299                           fsr2l	equ	0xFD9
 17300                           status	equ	0xFD8
 17301                           
 17302 ;; *************** function _itoa *****************
 17303 ;; Defined at:
 17304 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17305 ;; Parameters:    Size  Location     Type
 17306 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17307 ;;		 -> Terminal@Payload(80), 
 17308 ;;  val             2   53[BANK0 ] int 
 17309 ;;  base            2   55[BANK0 ] int 
 17310 ;; Auto vars:     Size  Location     Type
 17311 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17312 ;;		 -> Terminal@Payload(80), 
 17313 ;; Return value:  Size  Location     Type
 17314 ;;                  2   51[BANK0 ] PTR unsigned char 
 17315 ;; Registers used:
 17316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17317 ;; Tracked objects:
 17318 ;;		On entry : 0/0
 17319 ;;		On exit  : 0/0
 17320 ;;		Unchanged: 0/0
 17321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17322 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17323 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17325 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17326 ;;Total ram usage:        8 bytes
 17327 ;; Hardware stack levels used:    1
 17328 ;; Hardware stack levels required when called:   13
 17329 ;; This function calls:
 17330 ;;		_utoa
 17331 ;; This function is called by:
 17332 ;;		_Terminal
 17333 ;; This function uses a non-reentrant model
 17334 ;;
 17335                           
 17336                           	psect	text71
 17337  005856                     __ptext71:
 17338                           	opt stack 0
 17339  005856                     _itoa:
 17340                           	opt stack 12
 17341                           
 17342                           ; BSR set to: 0
 17343                           ;incstack = 0
 17344  005856  C093  F099         	movff	itoa@buf,itoa@cp
 17345  00585A  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17346  00585E  0100               	movlb	0	; () banked
 17347  005860  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17348  005862  D00C               	goto	l2963
 17349                           
 17350                           ; BSR set to: 0
 17351  005864  C093  FFD9         	movff	itoa@buf,fsr2l
 17352  005868  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17353  00586C  0E2D               	movlw	45
 17354  00586E  6EDF               	movwf	indf2,c
 17355                           
 17356                           ; BSR set to: 0
 17357  005870  4B93               	infsnz	itoa@buf& (0+255),f,b
 17358  005872  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17359                           
 17360                           ; BSR set to: 0
 17361  005874  6D95               	negf	itoa@val& (0+255),b
 17362  005876  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17363  005878  B0D8               	btfsc	status,0,c
 17364  00587A  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17365  00587C                     l2963:
 17366                           
 17367                           ; BSR set to: 0
 17368                           
 17369                           ; BSR set to: 0
 17370  00587C  C093  F08A         	movff	itoa@buf,utoa@buf
 17371  005880  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17372  005884  C095  F08C         	movff	itoa@val,utoa@val
 17373  005888  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17374  00588C  C097  F08E         	movff	itoa@base,utoa@base
 17375  005890  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17376  005894  EC49  F021         	call	_utoa	;wreg free
 17377  005898  0012               	return	
 17378  00589A                     __end_of_itoa:
 17379                           	opt stack 0
 17380                           tosu	equ	0xFFF
 17381                           tosh	equ	0xFFE
 17382                           tosl	equ	0xFFD
 17383                           pclath	equ	0xFFA
 17384                           tblptru	equ	0xFF8
 17385                           tblptrh	equ	0xFF7
 17386                           tblptrl	equ	0xFF6
 17387                           tablat	equ	0xFF5
 17388                           prodh	equ	0xFF4
 17389                           prodl	equ	0xFF3
 17390                           intcon	equ	0xFF2
 17391                           intcon2	equ	0xFF1
 17392                           intcon3	equ	0xFF0
 17393                           indf0	equ	0xFEF
 17394                           postinc0	equ	0xFEE
 17395                           plusw0	equ	0xFEB
 17396                           fsr0h	equ	0xFEA
 17397                           fsr0l	equ	0xFE9
 17398                           wreg	equ	0xFE8
 17399                           indf1	equ	0xFE7
 17400                           postinc1	equ	0xFE6
 17401                           postdec1	equ	0xFE5
 17402                           plusw1	equ	0xFE3
 17403                           fsr1h	equ	0xFE2
 17404                           fsr1l	equ	0xFE1
 17405                           indf2	equ	0xFDF
 17406                           postinc2	equ	0xFDE
 17407                           postdec2	equ	0xFDD
 17408                           plusw2	equ	0xFDB
 17409                           fsr2h	equ	0xFDA
 17410                           fsr2l	equ	0xFD9
 17411                           status	equ	0xFD8
 17412                           
 17413 ;; *************** function _utoa *****************
 17414 ;; Defined at:
 17415 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17416 ;; Parameters:    Size  Location     Type
 17417 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17418 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17419 ;;  val             2   44[BANK0 ] unsigned int 
 17420 ;;  base            2   46[BANK0 ] int 
 17421 ;; Auto vars:     Size  Location     Type
 17422 ;;  v               2   48[BANK0 ] unsigned int 
 17423 ;;  c               1   50[BANK0 ] unsigned char 
 17424 ;; Return value:  Size  Location     Type
 17425 ;;                  2   42[BANK0 ] PTR unsigned char 
 17426 ;; Registers used:
 17427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17428 ;; Tracked objects:
 17429 ;;		On entry : 0/0
 17430 ;;		On exit  : 0/0
 17431 ;;		Unchanged: 0/0
 17432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17433 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17434 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17436 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17437 ;;Total ram usage:        9 bytes
 17438 ;; Hardware stack levels used:    1
 17439 ;; Hardware stack levels required when called:   12
 17440 ;; This function calls:
 17441 ;;		___lwdiv
 17442 ;;		___lwmod
 17443 ;; This function is called by:
 17444 ;;		_Term_MainSm
 17445 ;;		_itoa
 17446 ;; This function uses a non-reentrant model
 17447 ;;
 17448                           
 17449                           	psect	text72
 17450  004292                     __ptext72:
 17451                           	opt stack 0
 17452  004292                     _utoa:
 17453                           	opt stack 14
 17454                           
 17455                           ;incstack = 0
 17456  004292  C08C  F090         	movff	utoa@val,utoa@v
 17457  004296  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17458  00429A  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17459  00429E  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17460  0042A2  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17461  0042A6  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17462  0042AA  EC3B  F02A         	call	___lwdiv	;wreg free
 17463  0042AE  C083  F090         	movff	?___lwdiv,utoa@v
 17464  0042B2  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17465  0042B6  0100               	movlb	0	; () banked
 17466  0042B8  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17467  0042BA  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17468                           
 17469                           ; BSR set to: 0
 17470  0042BC  5190               	movf	utoa@v& (0+255),w,b
 17471  0042BE  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17472  0042C0  A4D8               	btfss	status,2,c
 17473  0042C2  D7EB               	goto	l2967
 17474                           
 17475                           ; BSR set to: 0
 17476                           
 17477                           ; BSR set to: 0
 17478  0042C4  C08A  FFD9         	movff	utoa@buf,fsr2l
 17479  0042C8  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17480  0042CC  0E00               	movlw	0
 17481  0042CE  6EDF               	movwf	indf2,c
 17482                           
 17483                           ; BSR set to: 0
 17484  0042D0  078A               	decf	utoa@buf& (0+255),f,b
 17485  0042D2  A0D8               	btfss	status,0,c
 17486  0042D4  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17487  0042D6                     
 17488                           ; BSR set to: 0
 17489                           
 17490                           ; BSR set to: 0
 17491  0042D6  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17492  0042DA  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17493  0042DE  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17494  0042E2  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17495  0042E6  EC4D  F02C         	call	___lwmod	;wreg free
 17496  0042EA  0100               	movlb	0	; () banked
 17497  0042EC  517D               	movf	?___lwmod& (0+255),w,b
 17498  0042EE  6F92               	movwf	utoa@c& (0+255),b
 17499                           
 17500                           ; BSR set to: 0
 17501  0042F0  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17502  0042F4  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17503  0042F8  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17504  0042FC  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17505  004300  EC3B  F02A         	call	___lwdiv	;wreg free
 17506  004304  C083  F08C         	movff	?___lwdiv,utoa@val
 17507  004308  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17508  00430C  0E09               	movlw	9
 17509  00430E  0100               	movlb	0	; () banked
 17510  004310  6592               	cpfsgt	utoa@c& (0+255),b
 17511  004312  D002               	goto	l2970
 17512                           
 17513                           ; BSR set to: 0
 17514  004314  0E07               	movlw	7
 17515  004316  2792               	addwf	utoa@c& (0+255),f,b
 17516  004318                     l2970:
 17517                           
 17518                           ; BSR set to: 0
 17519  004318  0E30               	movlw	48
 17520  00431A  2792               	addwf	utoa@c& (0+255),f,b
 17521                           
 17522                           ; BSR set to: 0
 17523  00431C  C08A  FFD9         	movff	utoa@buf,fsr2l
 17524  004320  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17525  004324  C092  FFDF         	movff	utoa@c,indf2
 17526                           
 17527                           ; BSR set to: 0
 17528  004328  078A               	decf	utoa@buf& (0+255),f,b
 17529  00432A  A0D8               	btfss	status,0,c
 17530  00432C  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17531                           
 17532                           ; BSR set to: 0
 17533  00432E  518C               	movf	utoa@val& (0+255),w,b
 17534  004330  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17535  004332  A4D8               	btfss	status,2,c
 17536  004334  D7D0               	goto	l2969
 17537                           
 17538                           ; BSR set to: 0
 17539                           ;	Return value of _utoa is never used
 17540                           
 17541                           ; BSR set to: 0
 17542  004336  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17543  004338  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17544  00433A  0012               	return	
 17545  00433C                     __end_of_utoa:
 17546                           	opt stack 0
 17547                           tosu	equ	0xFFF
 17548                           tosh	equ	0xFFE
 17549                           tosl	equ	0xFFD
 17550                           pclath	equ	0xFFA
 17551                           tblptru	equ	0xFF8
 17552                           tblptrh	equ	0xFF7
 17553                           tblptrl	equ	0xFF6
 17554                           tablat	equ	0xFF5
 17555                           prodh	equ	0xFF4
 17556                           prodl	equ	0xFF3
 17557                           intcon	equ	0xFF2
 17558                           intcon2	equ	0xFF1
 17559                           intcon3	equ	0xFF0
 17560                           indf0	equ	0xFEF
 17561                           postinc0	equ	0xFEE
 17562                           plusw0	equ	0xFEB
 17563                           fsr0h	equ	0xFEA
 17564                           fsr0l	equ	0xFE9
 17565                           wreg	equ	0xFE8
 17566                           indf1	equ	0xFE7
 17567                           postinc1	equ	0xFE6
 17568                           postdec1	equ	0xFE5
 17569                           plusw1	equ	0xFE3
 17570                           fsr1h	equ	0xFE2
 17571                           fsr1l	equ	0xFE1
 17572                           indf2	equ	0xFDF
 17573                           postinc2	equ	0xFDE
 17574                           postdec2	equ	0xFDD
 17575                           plusw2	equ	0xFDB
 17576                           fsr2h	equ	0xFDA
 17577                           fsr2l	equ	0xFD9
 17578                           status	equ	0xFD8
 17579                           
 17580 ;; *************** function ___lwmod *****************
 17581 ;; Defined at:
 17582 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17583 ;; Parameters:    Size  Location     Type
 17584 ;;  dividend        2   29[BANK0 ] unsigned int 
 17585 ;;  divisor         2   31[BANK0 ] unsigned int 
 17586 ;; Auto vars:     Size  Location     Type
 17587 ;;  counter         1   33[BANK0 ] unsigned char 
 17588 ;; Return value:  Size  Location     Type
 17589 ;;                  2   29[BANK0 ] unsigned int 
 17590 ;; Registers used:
 17591 ;;		wreg, status,2, status,0
 17592 ;; Tracked objects:
 17593 ;;		On entry : 0/0
 17594 ;;		On exit  : 0/0
 17595 ;;		Unchanged: 0/0
 17596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17597 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17600 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17601 ;;Total ram usage:        5 bytes
 17602 ;; Hardware stack levels used:    1
 17603 ;; Hardware stack levels required when called:   11
 17604 ;; This function calls:
 17605 ;;		Nothing
 17606 ;; This function is called by:
 17607 ;;		_utoa
 17608 ;; This function uses a non-reentrant model
 17609 ;;
 17610                           
 17611                           	psect	text73
 17612  00589A                     __ptext73:
 17613                           	opt stack 0
 17614  00589A                     ___lwmod:
 17615                           	opt stack 14
 17616                           
 17617                           ; BSR set to: 0
 17618                           ;incstack = 0
 17619  00589A  0100               	movlb	0	; () banked
 17620  00589C  517F               	movf	___lwmod@divisor& (0+255),w,b
 17621  00589E  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17622  0058A0  B4D8               	btfsc	status,2,c
 17623  0058A2  D018               	goto	l3065
 17624                           
 17625                           ; BSR set to: 0
 17626  0058A4  0E01               	movlw	1
 17627  0058A6  6F81               	movwf	___lwmod@counter& (0+255),b
 17628  0058A8  D004               	goto	l3060
 17629  0058AA                     
 17630                           ; BSR set to: 0
 17631                           
 17632                           ; BSR set to: 0
 17633  0058AA  90D8               	bcf	status,0,c
 17634  0058AC  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17635  0058AE  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17636  0058B0  2B81               	incf	___lwmod@counter& (0+255),f,b
 17637  0058B2                     l3060:
 17638                           
 17639                           ; BSR set to: 0
 17640                           
 17641                           ; BSR set to: 0
 17642  0058B2  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17643  0058B4  D7FA               	goto	l3061
 17644  0058B6                     u10840:
 17645                           
 17646                           ; BSR set to: 0
 17647                           
 17648                           ; BSR set to: 0
 17649                           
 17650                           ; BSR set to: 0
 17651  0058B6  517F               	movf	___lwmod@divisor& (0+255),w,b
 17652  0058B8  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17653  0058BA  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17654  0058BC  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17655  0058BE  A0D8               	btfss	status,0,c
 17656  0058C0  D004               	goto	l3064
 17657                           
 17658                           ; BSR set to: 0
 17659  0058C2  517F               	movf	___lwmod@divisor& (0+255),w,b
 17660  0058C4  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17661  0058C6  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17662  0058C8  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17663  0058CA                     l3064:
 17664                           
 17665                           ; BSR set to: 0
 17666                           
 17667                           ; BSR set to: 0
 17668  0058CA  90D8               	bcf	status,0,c
 17669  0058CC  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17670  0058CE  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17671                           
 17672                           ; BSR set to: 0
 17673  0058D0  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17674  0058D2  D7F1               	goto	u10840
 17675  0058D4                     l3065:
 17676                           
 17677                           ; BSR set to: 0
 17678                           
 17679                           ; BSR set to: 0
 17680  0058D4  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17681  0058D8  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17682                           
 17683                           ; BSR set to: 0
 17684  0058DC  0012               	return		;funcret
 17685  0058DE                     __end_of___lwmod:
 17686                           	opt stack 0
 17687                           tosu	equ	0xFFF
 17688                           tosh	equ	0xFFE
 17689                           tosl	equ	0xFFD
 17690                           pclath	equ	0xFFA
 17691                           tblptru	equ	0xFF8
 17692                           tblptrh	equ	0xFF7
 17693                           tblptrl	equ	0xFF6
 17694                           tablat	equ	0xFF5
 17695                           prodh	equ	0xFF4
 17696                           prodl	equ	0xFF3
 17697                           intcon	equ	0xFF2
 17698                           intcon2	equ	0xFF1
 17699                           intcon3	equ	0xFF0
 17700                           indf0	equ	0xFEF
 17701                           postinc0	equ	0xFEE
 17702                           plusw0	equ	0xFEB
 17703                           fsr0h	equ	0xFEA
 17704                           fsr0l	equ	0xFE9
 17705                           wreg	equ	0xFE8
 17706                           indf1	equ	0xFE7
 17707                           postinc1	equ	0xFE6
 17708                           postdec1	equ	0xFE5
 17709                           plusw1	equ	0xFE3
 17710                           fsr1h	equ	0xFE2
 17711                           fsr1l	equ	0xFE1
 17712                           indf2	equ	0xFDF
 17713                           postinc2	equ	0xFDE
 17714                           postdec2	equ	0xFDD
 17715                           plusw2	equ	0xFDB
 17716                           fsr2h	equ	0xFDA
 17717                           fsr2l	equ	0xFD9
 17718                           status	equ	0xFD8
 17719                           
 17720 ;; *************** function _getsUSBUSART *****************
 17721 ;; Defined at:
 17722 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17723 ;; Parameters:    Size  Location     Type
 17724 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17725 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17726 ;;  len             1   38[BANK0 ] unsigned char 
 17727 ;; Auto vars:     Size  Location     Type
 17728 ;;		None
 17729 ;; Return value:  Size  Location     Type
 17730 ;;                  1    wreg      unsigned char 
 17731 ;; Registers used:
 17732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17733 ;; Tracked objects:
 17734 ;;		On entry : 0/0
 17735 ;;		On exit  : 0/0
 17736 ;;		Unchanged: 0/0
 17737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17738 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17740 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17741 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17742 ;;Total ram usage:        4 bytes
 17743 ;; Hardware stack levels used:    1
 17744 ;; Hardware stack levels required when called:   12
 17745 ;; This function calls:
 17746 ;;		_USBTransferOnePacket
 17747 ;; This function is called by:
 17748 ;;		_Terminal
 17749 ;;		_GsmGprsTerminal
 17750 ;; This function uses a non-reentrant model
 17751 ;;
 17752                           
 17753                           	psect	text74
 17754  004838                     __ptext74:
 17755                           	opt stack 0
 17756  004838                     _getsUSBUSART:
 17757                           	opt stack 13
 17758                           
 17759                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17760                           
 17761                           ; BSR set to: 0
 17762                           ;incstack = 0
 17763  004838  0E00               	movlw	0
 17764  00483A  0100               	movlb	0	; () banked
 17765  00483C  6FCB               	movwf	_cdc_rx_len& (0+255),b
 17766                           
 17767                           ; BSR set to: 0
 17768                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17769  00483E  51C1               	movf	_CDCDataOutHandle& (0+255),w,b
 17770  004840  11C2               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17771  004842  B4D8               	btfsc	status,2,c
 17772  004844  D006               	goto	u11620
 17773                           
 17774                           ; BSR set to: 0
 17775  004846  C0C1  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17776  00484A  C0C2  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17777  00484E  BEDF               	btfsc	indf2,7,c
 17778  004850  D03B               	goto	l1921
 17779  004852                     u11620:
 17780                           
 17781                           ; BSR set to: 0
 17782                           ;usb_device_cdc.c: 493: {
 17783                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17784                           
 17785                           ; BSR set to: 0
 17786  004852  EE20 F001          	lfsr	2,1
 17787  004856  51C1               	movf	_CDCDataOutHandle& (0+255),w,b
 17788  004858  26D9               	addwf	fsr2l,f,c
 17789  00485A  51C2               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17790  00485C  22DA               	addwfc	fsr2h,f,c
 17791  00485E  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17792  004860  5CDE               	subwf	postinc2,w,c
 17793  004862  B0D8               	btfsc	status,0,c
 17794  004864  D008               	goto	l1924
 17795                           
 17796                           ; BSR set to: 0
 17797                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17798  004866  EE20 F001          	lfsr	2,1
 17799  00486A  51C1               	movf	_CDCDataOutHandle& (0+255),w,b
 17800  00486C  26D9               	addwf	fsr2l,f,c
 17801  00486E  51C2               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17802  004870  22DA               	addwfc	fsr2h,f,c
 17803  004872  50DF               	movf	indf2,w,c
 17804  004874  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17805  004876                     l1924:
 17806                           
 17807                           ; BSR set to: 0
 17808                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17809                           
 17810                           ; BSR set to: 0
 17811  004876  0E00               	movlw	0
 17812  004878  6FCB               	movwf	_cdc_rx_len& (0+255),b
 17813  00487A  D013               	goto	l1925
 17814  00487C                     
 17815                           ; BSR set to: 0
 17816                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17817                           
 17818                           ; BSR set to: 0
 17819  00487C  51CB               	movf	_cdc_rx_len& (0+255),w,b
 17820  00487E  0D01               	mullw	1
 17821  004880  0E50               	movlw	low _cdc_data_rx
 17822  004882  24F3               	addwf	prodl,w,c
 17823  004884  6ED9               	movwf	fsr2l,c
 17824  004886  0E05               	movlw	high _cdc_data_rx
 17825  004888  20F4               	addwfc	prodh,w,c
 17826  00488A  6EDA               	movwf	fsr2h,c
 17827  00488C  51CB               	movf	_cdc_rx_len& (0+255),w,b
 17828  00488E  0D01               	mullw	1
 17829  004890  50F3               	movf	prodl,w,c
 17830  004892  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17831  004894  6EE1               	movwf	fsr1l,c
 17832  004896  50F4               	movf	prodh,w,c
 17833  004898  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17834  00489A  6EE2               	movwf	fsr1h,c
 17835  00489C  CFDF FFE7          	movff	indf2,indf1
 17836                           
 17837                           ; BSR set to: 0
 17838  0048A0  2BCB               	incf	_cdc_rx_len& (0+255),f,b
 17839  0048A2                     l1925:
 17840                           
 17841                           ; BSR set to: 0
 17842                           
 17843                           ; BSR set to: 0
 17844  0048A2  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17845  0048A4  5DCB               	subwf	_cdc_rx_len& (0+255),w,b
 17846  0048A6  A0D8               	btfss	status,0,c
 17847  0048A8  D7E9               	goto	l1926
 17848                           
 17849                           ; BSR set to: 0
 17850                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17851                           
 17852                           ; BSR set to: 0
 17853  0048AA  0E00               	movlw	0
 17854  0048AC  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17855  0048AE  0E50               	movlw	low _cdc_data_rx
 17856  0048B0  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17857  0048B2  0E05               	movlw	high _cdc_data_rx
 17858  0048B4  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17859  0048B6  0E40               	movlw	64
 17860  0048B8  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17861  0048BA  0E02               	movlw	2
 17862  0048BC  ECE3  F01F         	call	_USBTransferOnePacket
 17863  0048C0  C07D  F0C1         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17864  0048C4  C07E  F0C2         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17865  0048C8                     l1921:
 17866                           
 17867                           ;usb_device_cdc.c: 513: }
 17868                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17869  0048C8  0100               	movlb	0	; () banked
 17870  0048CA  51CB               	movf	_cdc_rx_len& (0+255),w,b
 17871  0048CC  0012               	return	
 17872  0048CE                     __end_of_getsUSBUSART:
 17873                           	opt stack 0
 17874                           tosu	equ	0xFFF
 17875                           tosh	equ	0xFFE
 17876                           tosl	equ	0xFFD
 17877                           pclath	equ	0xFFA
 17878                           tblptru	equ	0xFF8
 17879                           tblptrh	equ	0xFF7
 17880                           tblptrl	equ	0xFF6
 17881                           tablat	equ	0xFF5
 17882                           prodh	equ	0xFF4
 17883                           prodl	equ	0xFF3
 17884                           intcon	equ	0xFF2
 17885                           intcon2	equ	0xFF1
 17886                           intcon3	equ	0xFF0
 17887                           indf0	equ	0xFEF
 17888                           postinc0	equ	0xFEE
 17889                           plusw0	equ	0xFEB
 17890                           fsr0h	equ	0xFEA
 17891                           fsr0l	equ	0xFE9
 17892                           wreg	equ	0xFE8
 17893                           indf1	equ	0xFE7
 17894                           postinc1	equ	0xFE6
 17895                           postdec1	equ	0xFE5
 17896                           plusw1	equ	0xFE3
 17897                           fsr1h	equ	0xFE2
 17898                           fsr1l	equ	0xFE1
 17899                           indf2	equ	0xFDF
 17900                           postinc2	equ	0xFDE
 17901                           postdec2	equ	0xFDD
 17902                           plusw2	equ	0xFDB
 17903                           fsr2h	equ	0xFDA
 17904                           fsr2l	equ	0xFD9
 17905                           status	equ	0xFD8
 17906                           
 17907 ;; *************** function _USBTransferOnePacket *****************
 17908 ;; Defined at:
 17909 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 17910 ;; Parameters:    Size  Location     Type
 17911 ;;  ep              1    wreg     unsigned char 
 17912 ;;  dir             1   29[BANK0 ] unsigned char 
 17913 ;;  data            2   30[BANK0 ] PTR unsigned char 
 17914 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17915 ;;  len             1   32[BANK0 ] unsigned char 
 17916 ;; Auto vars:     Size  Location     Type
 17917 ;;  ep              1   33[BANK0 ] unsigned char 
 17918 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 17919 ;;		 -> NULL(0), BDT(48), 
 17920 ;; Return value:  Size  Location     Type
 17921 ;;                  2   29[BANK0 ] PTR void 
 17922 ;; Registers used:
 17923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17924 ;; Tracked objects:
 17925 ;;		On entry : 0/0
 17926 ;;		On exit  : 0/0
 17927 ;;		Unchanged: 0/0
 17928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17929 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17930 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17932 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17933 ;;Total ram usage:        7 bytes
 17934 ;; Hardware stack levels used:    1
 17935 ;; Hardware stack levels required when called:   11
 17936 ;; This function calls:
 17937 ;;		Nothing
 17938 ;; This function is called by:
 17939 ;;		_CDCInitEP
 17940 ;;		_getsUSBUSART
 17941 ;;		_CDCTxService
 17942 ;;		_USBCDCEventHandler
 17943 ;; This function uses a non-reentrant model
 17944 ;;
 17945                           
 17946                           	psect	text75
 17947  003FC6                     __ptext75:
 17948                           	opt stack 0
 17949  003FC6                     _USBTransferOnePacket:
 17950                           	opt stack 13
 17951                           
 17952                           ; BSR set to: 0
 17953                           ;incstack = 0
 17954                           ;USBTransferOnePacket@ep stored from wreg
 17955  003FC6  0100               	movlb	0	; () banked
 17956  003FC8  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 17957                           
 17958                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 17959                           ;usb_device.c: 1018: if(dir != 0)
 17960  003FCA  0100               	movlb	0	; () banked
 17961  003FCC  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17962  003FCE  B4D8               	btfsc	status,2,c
 17963  003FD0  D007               	goto	l1645
 17964                           
 17965                           ; BSR set to: 0
 17966                           ;usb_device.c: 1019: {
 17967                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 17968  003FD2  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17969  003FD4  0D02               	mullw	2
 17970  003FD6  0EBB               	movlw	low _pBDTEntryIn
 17971  003FD8  24F3               	addwf	prodl,w,c
 17972  003FDA  6ED9               	movwf	fsr2l,c
 17973  003FDC  0E00               	movlw	high _pBDTEntryIn
 17974  003FDE  D006               	goto	L16
 17975  003FE0                     l1645:
 17976                           
 17977                           ; BSR set to: 0
 17978                           ;usb_device.c: 1023: else
 17979                           ;usb_device.c: 1024: {
 17980                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 17981                           
 17982                           ; BSR set to: 0
 17983  003FE0  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17984  003FE2  0D02               	mullw	2
 17985  003FE4  0E0E               	movlw	low _pBDTEntryOut
 17986  003FE6  24F3               	addwf	prodl,w,c
 17987  003FE8  6ED9               	movwf	fsr2l,c
 17988  003FEA  0E03               	movlw	high _pBDTEntryOut
 17989  003FEC                     L16:
 17990  003FEC  20F4               	addwfc	prodh,w,c
 17991  003FEE  6EDA               	movwf	fsr2h,c
 17992  003FF0  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 17993  003FF4  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 17994                           
 17995                           ; BSR set to: 0
 17996                           ;usb_device.c: 1027: }
 17997                           ;usb_device.c: 1031: if(handle == 0)
 17998                           
 17999                           ; BSR set to: 0
 18000  003FF8  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18001  003FFA  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18002  003FFC  A4D8               	btfss	status,2,c
 18003  003FFE  D005               	goto	l1647
 18004                           
 18005                           ; BSR set to: 0
 18006                           ;usb_device.c: 1032: {
 18007                           ;usb_device.c: 1033: return 0;
 18008  004000  0E00               	movlw	0
 18009  004002  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18010  004004  0E00               	movlw	0
 18011  004006  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18012                           
 18013                           ; BSR set to: 0
 18014  004008  0012               	return	
 18015  00400A                     l1647:
 18016                           
 18017                           ; BSR set to: 0
 18018                           ;usb_device.c: 1034: }
 18019                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18020                           
 18021                           ; BSR set to: 0
 18022  00400A  EE20 F002          	lfsr	2,2
 18023  00400E  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18024  004010  26D9               	addwf	fsr2l,f,c
 18025  004012  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18026  004014  22DA               	addwfc	fsr2h,f,c
 18027  004016  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18028  00401A  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18029                           
 18030                           ;usb_device.c: 1048: handle->CNT = len;
 18031  00401E  EE20 F001          	lfsr	2,1
 18032  004022  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18033  004024  26D9               	addwf	fsr2l,f,c
 18034  004026  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18035  004028  22DA               	addwfc	fsr2h,f,c
 18036  00402A  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18037                           
 18038                           ; BSR set to: 0
 18039                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18040  00402E  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18041  004032  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18042  004036  0E40               	movlw	64
 18043  004038  16DF               	andwf	indf2,f,c
 18044                           
 18045                           ; BSR set to: 0
 18046                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18047  00403A  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18048  00403E  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18049  004042  0E00               	movlw	0
 18050  004044  86DB               	bsf	plusw2,3,c
 18051                           
 18052                           ; BSR set to: 0
 18053                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18054  004046  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18055  00404A  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18056  00404E  0E00               	movlw	0
 18057  004050  8EDB               	bsf	plusw2,7,c
 18058                           
 18059                           ; BSR set to: 0
 18060                           ;usb_device.c: 1054: if(dir != 0)
 18061  004052  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18062  004054  B4D8               	btfsc	status,2,c
 18063  004056  D007               	goto	l1649
 18064                           
 18065                           ; BSR set to: 0
 18066                           ;usb_device.c: 1055: {
 18067                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18068  004058  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18069  00405A  0D02               	mullw	2
 18070  00405C  0EBB               	movlw	low _pBDTEntryIn
 18071  00405E  24F3               	addwf	prodl,w,c
 18072  004060  6ED9               	movwf	fsr2l,c
 18073  004062  0E00               	movlw	high _pBDTEntryIn
 18074  004064  D006               	goto	L17
 18075  004066                     l1649:
 18076                           
 18077                           ; BSR set to: 0
 18078                           ;usb_device.c: 1059: else
 18079                           ;usb_device.c: 1060: {
 18080                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18081                           
 18082                           ; BSR set to: 0
 18083  004066  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18084  004068  0D02               	mullw	2
 18085  00406A  0E0E               	movlw	low _pBDTEntryOut
 18086  00406C  24F3               	addwf	prodl,w,c
 18087  00406E  6ED9               	movwf	fsr2l,c
 18088  004070  0E03               	movlw	high _pBDTEntryOut
 18089  004072                     L17:
 18090  004072  20F4               	addwfc	prodh,w,c
 18091  004074  6EDA               	movwf	fsr2h,c
 18092  004076  0E04               	movlw	4
 18093  004078  1ADF               	xorwf	indf2,f,c
 18094                           
 18095                           ; BSR set to: 0
 18096                           ;usb_device.c: 1063: }
 18097                           ;usb_device.c: 1064: return (void*)handle;
 18098                           
 18099                           ; BSR set to: 0
 18100  00407A  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18101  00407E  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18102  004082  0012               	return	
 18103  004084                     __end_of_USBTransferOnePacket:
 18104                           	opt stack 0
 18105                           tosu	equ	0xFFF
 18106                           tosh	equ	0xFFE
 18107                           tosl	equ	0xFFD
 18108                           pclath	equ	0xFFA
 18109                           tblptru	equ	0xFF8
 18110                           tblptrh	equ	0xFF7
 18111                           tblptrl	equ	0xFF6
 18112                           tablat	equ	0xFF5
 18113                           prodh	equ	0xFF4
 18114                           prodl	equ	0xFF3
 18115                           intcon	equ	0xFF2
 18116                           intcon2	equ	0xFF1
 18117                           intcon3	equ	0xFF0
 18118                           indf0	equ	0xFEF
 18119                           postinc0	equ	0xFEE
 18120                           plusw0	equ	0xFEB
 18121                           fsr0h	equ	0xFEA
 18122                           fsr0l	equ	0xFE9
 18123                           wreg	equ	0xFE8
 18124                           indf1	equ	0xFE7
 18125                           postinc1	equ	0xFE6
 18126                           postdec1	equ	0xFE5
 18127                           plusw1	equ	0xFE3
 18128                           fsr1h	equ	0xFE2
 18129                           fsr1l	equ	0xFE1
 18130                           indf2	equ	0xFDF
 18131                           postinc2	equ	0xFDE
 18132                           postdec2	equ	0xFDD
 18133                           plusw2	equ	0xFDB
 18134                           fsr2h	equ	0xFDA
 18135                           fsr2l	equ	0xFD9
 18136                           status	equ	0xFD8
 18137                           
 18138 ;; *************** function _atoi *****************
 18139 ;; Defined at:
 18140 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18141 ;; Parameters:    Size  Location     Type
 18142 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18143 ;;		 -> Terminal@Len(4), 
 18144 ;; Auto vars:     Size  Location     Type
 18145 ;;  a               2   40[BANK0 ] int 
 18146 ;;  sign            1   39[BANK0 ] unsigned char 
 18147 ;; Return value:  Size  Location     Type
 18148 ;;                  2   35[BANK0 ] int 
 18149 ;; Registers used:
 18150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18151 ;; Tracked objects:
 18152 ;;		On entry : 0/0
 18153 ;;		On exit  : 0/0
 18154 ;;		Unchanged: 0/0
 18155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18156 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18157 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18158 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18159 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18160 ;;Total ram usage:        7 bytes
 18161 ;; Hardware stack levels used:    1
 18162 ;; Hardware stack levels required when called:   12
 18163 ;; This function calls:
 18164 ;;		___wmul
 18165 ;;		_isdigit
 18166 ;; This function is called by:
 18167 ;;		_Terminal
 18168 ;; This function uses a non-reentrant model
 18169 ;;
 18170                           
 18171                           	psect	text76
 18172  0037E0                     __ptext76:
 18173                           	opt stack 0
 18174  0037E0                     _atoi:
 18175                           	opt stack 13
 18176                           
 18177                           ; BSR set to: 0
 18178                           ;incstack = 0
 18179  0037E0  D003               	goto	l2776
 18180  0037E2  0100               	movlb	0	; () banked
 18181  0037E4  4B83               	infsnz	atoi@s& (0+255),f,b
 18182  0037E6  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18183  0037E8                     l2776:
 18184                           
 18185                           ; BSR set to: 0
 18186  0037E8  C083  FFD9         	movff	atoi@s,fsr2l
 18187  0037EC  C084  FFDA         	movff	atoi@s+1,fsr2h
 18188  0037F0  0E20               	movlw	32
 18189  0037F2  18DE               	xorwf	postinc2,w,c
 18190  0037F4  B4D8               	btfsc	status,2,c
 18191  0037F6  D7F5               	goto	l2777
 18192  0037F8  C083  FFD9         	movff	atoi@s,fsr2l
 18193  0037FC  C084  FFDA         	movff	atoi@s+1,fsr2h
 18194  003800  0E09               	movlw	9
 18195  003802  18DE               	xorwf	postinc2,w,c
 18196  003804  B4D8               	btfsc	status,2,c
 18197  003806  D7ED               	goto	l2777
 18198  003808  0E00               	movlw	0
 18199  00380A  0100               	movlb	0	; () banked
 18200  00380C  6F89               	movwf	(atoi@a+1)& (0+255),b
 18201  00380E  0E00               	movlw	0
 18202  003810  6F88               	movwf	atoi@a& (0+255),b
 18203  003812  0E00               	movlw	0
 18204  003814  6F87               	movwf	atoi@sign& (0+255),b
 18205                           
 18206                           ; BSR set to: 0
 18207  003816  C083  FFD9         	movff	atoi@s,fsr2l
 18208  00381A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18209  00381E  0E2D               	movlw	45
 18210  003820  18DE               	xorwf	postinc2,w,c
 18211  003822  A4D8               	btfss	status,2,c
 18212  003824  D002               	goto	l2779
 18213                           
 18214                           ; BSR set to: 0
 18215  003826  2B87               	incf	atoi@sign& (0+255),f,b
 18216  003828  D026               	goto	l12723
 18217  00382A                     l2779:
 18218                           
 18219                           ; BSR set to: 0
 18220                           
 18221                           ; BSR set to: 0
 18222  00382A  C083  FFD9         	movff	atoi@s,fsr2l
 18223  00382E  C084  FFDA         	movff	atoi@s+1,fsr2h
 18224  003832  0E2B               	movlw	43
 18225  003834  18DE               	xorwf	postinc2,w,c
 18226  003836  A4D8               	btfss	status,2,c
 18227  003838  D020               	goto	l2782
 18228  00383A  D01D               	goto	l12723
 18229  00383C                     
 18230                           ; BSR set to: 0
 18231  00383C  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18232  003840  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18233  003844  0E00               	movlw	0
 18234  003846  0100               	movlb	0	; () banked
 18235  003848  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18236  00384A  0E0A               	movlw	10
 18237  00384C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18238  00384E  EC14  F02F         	call	___wmul	;wreg free
 18239  003852  C083  FFD9         	movff	atoi@s,fsr2l
 18240  003856  C084  FFDA         	movff	atoi@s+1,fsr2h
 18241  00385A  50DF               	movf	indf2,w,c
 18242  00385C  0100               	movlb	0	; () banked
 18243  00385E  6F85               	movwf	??_atoi& (0+255),b
 18244  003860  6B86               	clrf	(??_atoi+1)& (0+255),b
 18245  003862  517D               	movf	?___wmul& (0+255),w,b
 18246  003864  2785               	addwf	??_atoi& (0+255),f,b
 18247  003866  517E               	movf	(?___wmul+1)& (0+255),w,b
 18248  003868  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18249  00386A  0ED0               	movlw	208
 18250  00386C  2585               	addwf	??_atoi& (0+255),w,b
 18251  00386E  6F88               	movwf	atoi@a& (0+255),b
 18252  003870  0EFF               	movlw	255
 18253  003872  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18254  003874  6F89               	movwf	(atoi@a+1)& (0+255),b
 18255  003876                     l12723:
 18256                           
 18257                           ; BSR set to: 0
 18258  003876  4B83               	infsnz	atoi@s& (0+255),f,b
 18259  003878  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18260  00387A                     l2782:
 18261                           
 18262                           ; BSR set to: 0
 18263                           
 18264                           ; BSR set to: 0
 18265  00387A  C083  FFD9         	movff	atoi@s,fsr2l
 18266  00387E  C084  FFDA         	movff	atoi@s+1,fsr2h
 18267  003882  50DF               	movf	indf2,w,c
 18268  003884  ECC7  F02F         	call	_isdigit
 18269  003888  B0D8               	btfsc	status,0,c
 18270  00388A  D7D8               	goto	l2783
 18271  00388C  0100               	movlb	0	; () banked
 18272  00388E  5187               	movf	atoi@sign& (0+255),w,b
 18273  003890  B4D8               	btfsc	status,2,c
 18274  003892  D00D               	goto	l2785
 18275                           
 18276                           ; BSR set to: 0
 18277  003894  C088  F085         	movff	atoi@a,??_atoi
 18278  003898  C089  F086         	movff	atoi@a+1,??_atoi+1
 18279  00389C  1F85               	comf	??_atoi& (0+255),f,b
 18280  00389E  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18281  0038A0  4B85               	infsnz	??_atoi& (0+255),f,b
 18282  0038A2  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18283  0038A4  C085  F083         	movff	??_atoi,?_atoi
 18284  0038A8  C086  F084         	movff	??_atoi+1,?_atoi+1
 18285  0038AC  0012               	return	
 18286  0038AE                     l2785:
 18287                           
 18288                           ; BSR set to: 0
 18289  0038AE  C088  F083         	movff	atoi@a,?_atoi
 18290  0038B2  C089  F084         	movff	atoi@a+1,?_atoi+1
 18291                           
 18292                           ; BSR set to: 0
 18293  0038B6  0012               	return		;funcret
 18294  0038B8                     __end_of_atoi:
 18295                           	opt stack 0
 18296                           tosu	equ	0xFFF
 18297                           tosh	equ	0xFFE
 18298                           tosl	equ	0xFFD
 18299                           pclath	equ	0xFFA
 18300                           tblptru	equ	0xFF8
 18301                           tblptrh	equ	0xFF7
 18302                           tblptrl	equ	0xFF6
 18303                           tablat	equ	0xFF5
 18304                           prodh	equ	0xFF4
 18305                           prodl	equ	0xFF3
 18306                           intcon	equ	0xFF2
 18307                           intcon2	equ	0xFF1
 18308                           intcon3	equ	0xFF0
 18309                           indf0	equ	0xFEF
 18310                           postinc0	equ	0xFEE
 18311                           plusw0	equ	0xFEB
 18312                           fsr0h	equ	0xFEA
 18313                           fsr0l	equ	0xFE9
 18314                           wreg	equ	0xFE8
 18315                           indf1	equ	0xFE7
 18316                           postinc1	equ	0xFE6
 18317                           postdec1	equ	0xFE5
 18318                           plusw1	equ	0xFE3
 18319                           fsr1h	equ	0xFE2
 18320                           fsr1l	equ	0xFE1
 18321                           indf2	equ	0xFDF
 18322                           postinc2	equ	0xFDE
 18323                           postdec2	equ	0xFDD
 18324                           plusw2	equ	0xFDB
 18325                           fsr2h	equ	0xFDA
 18326                           fsr2l	equ	0xFD9
 18327                           status	equ	0xFD8
 18328                           
 18329 ;; *************** function _isdigit *****************
 18330 ;; Defined at:
 18331 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18332 ;; Parameters:    Size  Location     Type
 18333 ;;  c               1    wreg     unsigned char 
 18334 ;; Auto vars:     Size  Location     Type
 18335 ;;  c               1   31[BANK0 ] unsigned char 
 18336 ;; Return value:  Size  Location     Type
 18337 ;;		None               void
 18338 ;; Registers used:
 18339 ;;		wreg, status,2, status,0
 18340 ;; Tracked objects:
 18341 ;;		On entry : 0/0
 18342 ;;		On exit  : 0/0
 18343 ;;		Unchanged: 0/0
 18344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18346 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18347 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18348 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18349 ;;Total ram usage:        3 bytes
 18350 ;; Hardware stack levels used:    1
 18351 ;; Hardware stack levels required when called:   11
 18352 ;; This function calls:
 18353 ;;		Nothing
 18354 ;; This function is called by:
 18355 ;;		_atoi
 18356 ;;		_strtol
 18357 ;;		_xtoi
 18358 ;;		_isxdigit
 18359 ;; This function uses a non-reentrant model
 18360 ;;
 18361                           
 18362                           	psect	text77
 18363  005F8E                     __ptext77:
 18364                           	opt stack 0
 18365  005F8E                     _isdigit:
 18366                           	opt stack 12
 18367                           
 18368                           ; BSR set to: 0
 18369                           ;incstack = 0
 18370                           ;isdigit@c stored from wreg
 18371  005F8E  0100               	movlb	0	; () banked
 18372  005F90  6F7F               	movwf	isdigit@c& (0+255),b
 18373  005F92  0E00               	movlw	0
 18374  005F94  0100               	movlb	0	; () banked
 18375  005F96  6F7E               	movwf	_isdigit$6151& (0+255),b
 18376                           
 18377                           ; BSR set to: 0
 18378  005F98  0E3A               	movlw	58
 18379  005F9A  617F               	cpfslt	isdigit@c& (0+255),b
 18380  005F9C  D005               	goto	l2957
 18381                           
 18382                           ; BSR set to: 0
 18383  005F9E  0E2F               	movlw	47
 18384  005FA0  657F               	cpfsgt	isdigit@c& (0+255),b
 18385  005FA2  D002               	goto	l2957
 18386                           
 18387                           ; BSR set to: 0
 18388  005FA4  0E01               	movlw	1
 18389  005FA6  6F7E               	movwf	_isdigit$6151& (0+255),b
 18390  005FA8                     l2957:
 18391                           
 18392                           ; BSR set to: 0
 18393                           
 18394                           ; BSR set to: 0
 18395  005FA8  C07E  F07D         	movff	_isdigit$6151,??_isdigit
 18396  005FAC  317D               	rrcf	??_isdigit& (0+255),w,b
 18397  005FAE  0012               	return	
 18398  005FB0                     __end_of_isdigit:
 18399                           	opt stack 0
 18400                           tosu	equ	0xFFF
 18401                           tosh	equ	0xFFE
 18402                           tosl	equ	0xFFD
 18403                           pclath	equ	0xFFA
 18404                           tblptru	equ	0xFF8
 18405                           tblptrh	equ	0xFF7
 18406                           tblptrl	equ	0xFF6
 18407                           tablat	equ	0xFF5
 18408                           prodh	equ	0xFF4
 18409                           prodl	equ	0xFF3
 18410                           intcon	equ	0xFF2
 18411                           intcon2	equ	0xFF1
 18412                           intcon3	equ	0xFF0
 18413                           indf0	equ	0xFEF
 18414                           postinc0	equ	0xFEE
 18415                           plusw0	equ	0xFEB
 18416                           fsr0h	equ	0xFEA
 18417                           fsr0l	equ	0xFE9
 18418                           wreg	equ	0xFE8
 18419                           indf1	equ	0xFE7
 18420                           postinc1	equ	0xFE6
 18421                           postdec1	equ	0xFE5
 18422                           plusw1	equ	0xFE3
 18423                           fsr1h	equ	0xFE2
 18424                           fsr1l	equ	0xFE1
 18425                           indf2	equ	0xFDF
 18426                           postinc2	equ	0xFDE
 18427                           postdec2	equ	0xFDD
 18428                           plusw2	equ	0xFDB
 18429                           fsr2h	equ	0xFDA
 18430                           fsr2l	equ	0xFD9
 18431                           status	equ	0xFD8
 18432                           
 18433 ;; *************** function _OsTmr_Wait *****************
 18434 ;; Defined at:
 18435 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 18436 ;; Parameters:    Size  Location     Type
 18437 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 18438 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 18439 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 18440 ;; Auto vars:     Size  Location     Type
 18441 ;;  Ret             1   65[BANK0 ] enum E7749
 18442 ;; Return value:  Size  Location     Type
 18443 ;;                  1    wreg      enum E7749
 18444 ;; Registers used:
 18445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18446 ;; Tracked objects:
 18447 ;;		On entry : 0/0
 18448 ;;		On exit  : 0/0
 18449 ;;		Unchanged: 0/0
 18450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18451 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18452 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18454 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18455 ;;Total ram usage:        7 bytes
 18456 ;; Hardware stack levels used:    1
 18457 ;; Hardware stack levels required when called:   14
 18458 ;; This function calls:
 18459 ;;		_OsTmr_GetTimerStatus
 18460 ;;		_OsTmr_StartTimer
 18461 ;; This function is called by:
 18462 ;;		_Terminal
 18463 ;;		_I2cSlv_QueryI2cData
 18464 ;; This function uses a non-reentrant model
 18465 ;;
 18466                           
 18467                           	psect	text78
 18468  004CAA                     __ptext78:
 18469                           	opt stack 0
 18470  004CAA                     _OsTmr_Wait:
 18471                           	opt stack 11
 18472                           
 18473                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 18474                           
 18475                           ; BSR set to: 0
 18476                           ;incstack = 0
 18477  004CAA  0E00               	movlw	0
 18478  004CAC  0100               	movlb	0	; () banked
 18479  004CAE  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18480                           
 18481                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 18482  004CB0  D02D               	goto	l855
 18483  004CB2                     
 18484                           ; BSR set to: 0
 18485                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 18486                           
 18487                           ; BSR set to: 0
 18488  004CB2  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 18489  004CB6  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 18490  004CBA  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 18491  004CBE  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 18492  004CC2  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 18493  004CC6  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 18494  004CCA  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 18495                           
 18496                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 18497  004CCE  0100               	movlb	0	; () banked
 18498  004CD0  EE20 F00A          	lfsr	2,10
 18499  004CD4  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18500  004CD6  26D9               	addwf	fsr2l,f,c
 18501  004CD8  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18502  004CDA  22DA               	addwfc	fsr2h,f,c
 18503  004CDC  0E01               	movlw	1
 18504  004CDE  6EDF               	movwf	indf2,c
 18505                           
 18506                           ;os_timers.c: 165: break;
 18507  004CE0  D022               	goto	l857
 18508  004CE2                     
 18509                           ; BSR set to: 0
 18510                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 18511                           
 18512                           ; BSR set to: 0
 18513  004CE2  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 18514  004CE6  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 18515  004CEA  ECFB  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 18516  004CEE  06E8               	decf	wreg,f,c
 18517  004CF0  A4D8               	btfss	status,2,c
 18518  004CF2  D019               	goto	l857
 18519                           
 18520                           ;os_timers.c: 170: {
 18521                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 18522  004CF4  0100               	movlb	0	; () banked
 18523  004CF6  EE20 F00A          	lfsr	2,10
 18524  004CFA  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18525  004CFC  26D9               	addwf	fsr2l,f,c
 18526  004CFE  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18527  004D00  22DA               	addwfc	fsr2h,f,c
 18528  004D02  0E00               	movlw	0
 18529  004D04  6EDF               	movwf	indf2,c
 18530                           
 18531                           ; BSR set to: 0
 18532                           ;os_timers.c: 174: Ret = DelayExpired;
 18533  004D06  0E01               	movlw	1
 18534  004D08  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18535                           
 18536                           ; BSR set to: 0
 18537                           ;os_timers.c: 180: }
 18538                           
 18539                           ; BSR set to: 0
 18540                           ;os_timers.c: 179: break;
 18541                           
 18542                           ;os_timers.c: 178: default:
 18543                           
 18544                           ; BSR set to: 0
 18545                           ;os_timers.c: 175: }
 18546                           ;os_timers.c: 176: break;
 18547  004D0A  D00D               	goto	l857
 18548  004D0C                     l855:
 18549                           
 18550                           ; BSR set to: 0
 18551                           
 18552                           ; BSR set to: 0
 18553  004D0C  EE20 F00A          	lfsr	2,10
 18554  004D10  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18555  004D12  26D9               	addwf	fsr2l,f,c
 18556  004D14  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18557  004D16  22DA               	addwfc	fsr2h,f,c
 18558  004D18  50DF               	movf	indf2,w,c
 18559                           
 18560                           ; Switch size 1, requested type "space"
 18561                           ; Number of cases is 2, Range of values is 0 to 1
 18562                           ; switch strategies available:
 18563                           ; Name         Instructions Cycles
 18564                           ; simple_byte            7     4 (average)
 18565                           ;	Chosen strategy is simple_byte
 18566  004D1A  0A00               	xorlw	0	; case 0
 18567  004D1C  B4D8               	btfsc	status,2,c
 18568  004D1E  D7C9               	goto	l856
 18569  004D20  0A01               	xorlw	1	; case 1
 18570  004D22  B4D8               	btfsc	status,2,c
 18571  004D24  D7DE               	goto	l858
 18572  004D26                     l857:
 18573                           
 18574                           ;os_timers.c: 182: return Ret;
 18575                           
 18576                           ; BSR set to: 0
 18577  004D26  0100               	movlb	0	; () banked
 18578  004D28  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 18579  004D2A  0012               	return	
 18580  004D2C                     __end_of_OsTmr_Wait:
 18581                           	opt stack 0
 18582                           tosu	equ	0xFFF
 18583                           tosh	equ	0xFFE
 18584                           tosl	equ	0xFFD
 18585                           pclath	equ	0xFFA
 18586                           tblptru	equ	0xFF8
 18587                           tblptrh	equ	0xFF7
 18588                           tblptrl	equ	0xFF6
 18589                           tablat	equ	0xFF5
 18590                           prodh	equ	0xFF4
 18591                           prodl	equ	0xFF3
 18592                           intcon	equ	0xFF2
 18593                           intcon2	equ	0xFF1
 18594                           intcon3	equ	0xFF0
 18595                           indf0	equ	0xFEF
 18596                           postinc0	equ	0xFEE
 18597                           plusw0	equ	0xFEB
 18598                           fsr0h	equ	0xFEA
 18599                           fsr0l	equ	0xFE9
 18600                           wreg	equ	0xFE8
 18601                           indf1	equ	0xFE7
 18602                           postinc1	equ	0xFE6
 18603                           postdec1	equ	0xFE5
 18604                           plusw1	equ	0xFE3
 18605                           fsr1h	equ	0xFE2
 18606                           fsr1l	equ	0xFE1
 18607                           indf2	equ	0xFDF
 18608                           postinc2	equ	0xFDE
 18609                           postdec2	equ	0xFDD
 18610                           plusw2	equ	0xFDB
 18611                           fsr2h	equ	0xFDA
 18612                           fsr2l	equ	0xFD9
 18613                           status	equ	0xFD8
 18614                           
 18615 ;; *************** function _I2cSlv_SendI2cMsg *****************
 18616 ;; Defined at:
 18617 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18618 ;; Parameters:    Size  Location     Type
 18619 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 18620 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 18621 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18622 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18623 ;; Auto vars:     Size  Location     Type
 18624 ;;  TxSts           1   36[BANK0 ] unsigned char 
 18625 ;; Return value:  Size  Location     Type
 18626 ;;                  1    wreg      unsigned char 
 18627 ;; Registers used:
 18628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18629 ;; Tracked objects:
 18630 ;;		On entry : 0/0
 18631 ;;		On exit  : 0/0
 18632 ;;		Unchanged: 0/0
 18633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18634 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18637 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18638 ;;Total ram usage:        5 bytes
 18639 ;; Hardware stack levels used:    1
 18640 ;; Hardware stack levels required when called:   12
 18641 ;; This function calls:
 18642 ;;		_GenerateEvt
 18643 ;; This function is called by:
 18644 ;;		_Terminal
 18645 ;;		_I2cSlv_QueryI2cData
 18646 ;;		_triggerRelay
 18647 ;; This function uses a non-reentrant model
 18648 ;;
 18649                           
 18650                           	psect	text79
 18651  005A22                     __ptext79:
 18652                           	opt stack 0
 18653  005A22                     _I2cSlv_SendI2cMsg:
 18654                           	opt stack 13
 18655                           
 18656                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 18657                           
 18658                           ; BSR set to: 0
 18659                           ;incstack = 0
 18660  005A22  0E00               	movlw	0
 18661  005A24  0100               	movlb	0	; () banked
 18662  005A26  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18663                           
 18664                           ; BSR set to: 0
 18665                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 18666  005A28  05D1               	decf	_I2cComSts& (0+255),w,b
 18667  005A2A  B4D8               	btfsc	status,2,c
 18668  005A2C  D015               	goto	l1409
 18669                           
 18670                           ; BSR set to: 0
 18671                           ;i2c_slv.c: 257: {
 18672                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 18673  005A2E  C082  F3A2         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 18674                           
 18675                           ; BSR set to: 0
 18676                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 18677  005A32  0E00               	movlw	0
 18678  005A34  0103               	movlb	3	; () banked
 18679  005A36  6FA3               	movwf	(_I2cTxPacket+1)& (0+255),b
 18680                           
 18681                           ; BSR set to: 3
 18682                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 18683  005A38  C083  F3A6         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 18684                           
 18685                           ; BSR set to: 3
 18686                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 18687  005A3C  C080  F3A4         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 18688  005A40  C081  F3A5         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 18689                           
 18690                           ; BSR set to: 3
 18691                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 18692  005A44  0ED9               	movlw	low _I2cWriteDataEvt
 18693  005A46  0100               	movlb	0	; () banked
 18694  005A48  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18695  005A4A  0E00               	movlw	high _I2cWriteDataEvt
 18696  005A4C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18697  005A4E  EC81  F030         	call	_GenerateEvt	;wreg free
 18698                           
 18699                           ;i2c_slv.c: 267: TxSts = 1u;
 18700  005A52  0E01               	movlw	1
 18701  005A54  0100               	movlb	0	; () banked
 18702  005A56  D001               	goto	L18
 18703  005A58                     l1409:
 18704                           
 18705                           ; BSR set to: 0
 18706                           ;i2c_slv.c: 269: else
 18707                           ;i2c_slv.c: 270: {
 18708                           ;i2c_slv.c: 272: TxSts = 0u;
 18709                           
 18710                           ; BSR set to: 0
 18711  005A58  0E00               	movlw	0
 18712  005A5A                     L18:
 18713  005A5A  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18714                           
 18715                           ; BSR set to: 0
 18716                           ;i2c_slv.c: 273: }
 18717                           ;i2c_slv.c: 275: return TxSts;
 18718  005A5C  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 18719  005A5E  0012               	return	
 18720  005A60                     __end_of_I2cSlv_SendI2cMsg:
 18721                           	opt stack 0
 18722                           tosu	equ	0xFFF
 18723                           tosh	equ	0xFFE
 18724                           tosl	equ	0xFFD
 18725                           pclath	equ	0xFFA
 18726                           tblptru	equ	0xFF8
 18727                           tblptrh	equ	0xFF7
 18728                           tblptrl	equ	0xFF6
 18729                           tablat	equ	0xFF5
 18730                           prodh	equ	0xFF4
 18731                           prodl	equ	0xFF3
 18732                           intcon	equ	0xFF2
 18733                           intcon2	equ	0xFF1
 18734                           intcon3	equ	0xFF0
 18735                           indf0	equ	0xFEF
 18736                           postinc0	equ	0xFEE
 18737                           plusw0	equ	0xFEB
 18738                           fsr0h	equ	0xFEA
 18739                           fsr0l	equ	0xFE9
 18740                           wreg	equ	0xFE8
 18741                           indf1	equ	0xFE7
 18742                           postinc1	equ	0xFE6
 18743                           postdec1	equ	0xFE5
 18744                           plusw1	equ	0xFE3
 18745                           fsr1h	equ	0xFE2
 18746                           fsr1l	equ	0xFE1
 18747                           indf2	equ	0xFDF
 18748                           postinc2	equ	0xFDE
 18749                           postdec2	equ	0xFDD
 18750                           plusw2	equ	0xFDB
 18751                           fsr2h	equ	0xFDA
 18752                           fsr2l	equ	0xFD9
 18753                           status	equ	0xFD8
 18754                           
 18755 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 18756 ;; Defined at:
 18757 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18758 ;; Parameters:    Size  Location     Type
 18759 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 18760 ;;		 -> Terminal@TermRxBuffer(50), 
 18761 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18762 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18763 ;; Auto vars:     Size  Location     Type
 18764 ;;  RxSts           1   36[BANK0 ] unsigned char 
 18765 ;; Return value:  Size  Location     Type
 18766 ;;                  1    wreg      unsigned char 
 18767 ;; Registers used:
 18768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18769 ;; Tracked objects:
 18770 ;;		On entry : 0/0
 18771 ;;		On exit  : 0/0
 18772 ;;		Unchanged: 0/0
 18773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18774 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18775 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18777 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18778 ;;Total ram usage:        5 bytes
 18779 ;; Hardware stack levels used:    1
 18780 ;; Hardware stack levels required when called:   12
 18781 ;; This function calls:
 18782 ;;		_GenerateEvt
 18783 ;; This function is called by:
 18784 ;;		_Terminal
 18785 ;;		_I2cSlv_QueryI2cData
 18786 ;; This function uses a non-reentrant model
 18787 ;;
 18788                           
 18789                           	psect	text80
 18790  005964                     __ptext80:
 18791                           	opt stack 0
 18792  005964                     _I2cSlv_ReceiveI2cMsg:
 18793                           	opt stack 13
 18794                           
 18795                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 18796                           
 18797                           ; BSR set to: 0
 18798                           ;incstack = 0
 18799  005964  0E00               	movlw	0
 18800  005966  0100               	movlb	0	; () banked
 18801  005968  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18802                           
 18803                           ; BSR set to: 0
 18804                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 18805  00596A  0E02               	movlw	2
 18806  00596C  19D1               	xorwf	_I2cComSts& (0+255),w,b
 18807  00596E  B4D8               	btfsc	status,2,c
 18808  005970  D016               	goto	l1414
 18809                           
 18810                           ; BSR set to: 0
 18811                           ;i2c_slv.c: 294: {
 18812                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 18813  005972  C082  F39C         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 18814                           
 18815                           ; BSR set to: 0
 18816                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 18817  005976  0E01               	movlw	1
 18818  005978  0103               	movlb	3	; () banked
 18819  00597A  6F9D               	movwf	(_I2cRxPacket+1)& (0+255),b
 18820                           
 18821                           ; BSR set to: 3
 18822                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 18823  00597C  C083  F3A0         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 18824                           
 18825                           ; BSR set to: 3
 18826                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 18827  005980  C080  F39E         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 18828  005984  C081  F39F         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 18829                           
 18830                           ; BSR set to: 3
 18831                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 18832  005988  0E39               	movlw	low _I2cReadDataEvt
 18833  00598A  0100               	movlb	0	; () banked
 18834  00598C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18835  00598E  0E00               	movlw	high _I2cReadDataEvt
 18836  005990  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18837  005992  EC81  F030         	call	_GenerateEvt	;wreg free
 18838                           
 18839                           ;i2c_slv.c: 304: RxSts = 1u;
 18840  005996  0E01               	movlw	1
 18841  005998  0100               	movlb	0	; () banked
 18842  00599A  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18843                           
 18844                           ;i2c_slv.c: 305: }
 18845  00599C  0012               	return	
 18846  00599E                     l1414:
 18847                           
 18848                           ; BSR set to: 0
 18849                           ;i2c_slv.c: 306: else
 18850                           ;i2c_slv.c: 307: {
 18851                           ;i2c_slv.c: 309: RxSts = 0u;
 18852                           
 18853                           ; BSR set to: 0
 18854  00599E  0E00               	movlw	0
 18855  0059A0  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18856                           
 18857                           ; BSR set to: 0
 18858  0059A2  0012               	return	
 18859  0059A4                     __end_of_I2cSlv_ReceiveI2cMsg:
 18860                           	opt stack 0
 18861                           tosu	equ	0xFFF
 18862                           tosh	equ	0xFFE
 18863                           tosl	equ	0xFFD
 18864                           pclath	equ	0xFFA
 18865                           tblptru	equ	0xFF8
 18866                           tblptrh	equ	0xFF7
 18867                           tblptrl	equ	0xFF6
 18868                           tablat	equ	0xFF5
 18869                           prodh	equ	0xFF4
 18870                           prodl	equ	0xFF3
 18871                           intcon	equ	0xFF2
 18872                           intcon2	equ	0xFF1
 18873                           intcon3	equ	0xFF0
 18874                           indf0	equ	0xFEF
 18875                           postinc0	equ	0xFEE
 18876                           plusw0	equ	0xFEB
 18877                           fsr0h	equ	0xFEA
 18878                           fsr0l	equ	0xFE9
 18879                           wreg	equ	0xFE8
 18880                           indf1	equ	0xFE7
 18881                           postinc1	equ	0xFE6
 18882                           postdec1	equ	0xFE5
 18883                           plusw1	equ	0xFE3
 18884                           fsr1h	equ	0xFE2
 18885                           fsr1l	equ	0xFE1
 18886                           indf2	equ	0xFDF
 18887                           postinc2	equ	0xFDE
 18888                           postdec2	equ	0xFDD
 18889                           plusw2	equ	0xFDB
 18890                           fsr2h	equ	0xFDA
 18891                           fsr2l	equ	0xFD9
 18892                           status	equ	0xFD8
 18893                           
 18894 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 18895 ;; Defined at:
 18896 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18897 ;; Parameters:    Size  Location     Type
 18898 ;;		None
 18899 ;; Auto vars:     Size  Location     Type
 18900 ;;  Result          1   33[BANK0 ] enum E8918
 18901 ;; Return value:  Size  Location     Type
 18902 ;;                  1    wreg      enum E8918
 18903 ;; Registers used:
 18904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18905 ;; Tracked objects:
 18906 ;;		On entry : 0/0
 18907 ;;		On exit  : 0/0
 18908 ;;		Unchanged: 0/0
 18909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18913 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18914 ;;Total ram usage:        1 bytes
 18915 ;; Hardware stack levels used:    1
 18916 ;; Hardware stack levels required when called:   12
 18917 ;; This function calls:
 18918 ;;		_ReceiveEvt
 18919 ;; This function is called by:
 18920 ;;		_Terminal
 18921 ;;		_I2cSlv_QueryI2cData
 18922 ;; This function uses a non-reentrant model
 18923 ;;
 18924                           
 18925                           	psect	text81
 18926  005FB0                     __ptext81:
 18927                           	opt stack 0
 18928  005FB0                     _I2cSlv_I2cReadMsgSts:
 18929                           	opt stack 13
 18930                           
 18931                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 18932                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 18933                           
 18934                           ; BSR set to: 0
 18935                           ;incstack = 0
 18936  005FB0  0EA1               	movlw	low (_I2cRxPacket+5)
 18937  005FB2  0100               	movlb	0	; () banked
 18938  005FB4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 18939  005FB6  0E03               	movlw	high (_I2cRxPacket+5)
 18940  005FB8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 18941  005FBA  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 18942  005FBE  0900               	iorlw	0
 18943  005FC0  B4D8               	btfsc	status,2,c
 18944  005FC2  D002               	goto	l1419
 18945                           
 18946                           ;i2c_slv.c: 331: {
 18947                           ;i2c_slv.c: 332: Result = MessageReceived;
 18948  005FC4  0E01               	movlw	1
 18949  005FC6  D001               	goto	L19
 18950  005FC8                     l1419:
 18951                           
 18952                           ;i2c_slv.c: 334: else
 18953                           ;i2c_slv.c: 335: {
 18954                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 18955                           
 18956                           ; BSR set to: 0
 18957  005FC8  0E00               	movlw	0
 18958  005FCA                     L19:
 18959  005FCA  0100               	movlb	0	; () banked
 18960  005FCC  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 18961                           
 18962                           ; BSR set to: 0
 18963                           ;i2c_slv.c: 337: }
 18964                           ;i2c_slv.c: 339: return Result;
 18965  005FCE  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 18966  005FD0  0012               	return	
 18967  005FD2                     __end_of_I2cSlv_I2cReadMsgSts:
 18968                           	opt stack 0
 18969                           tosu	equ	0xFFF
 18970                           tosh	equ	0xFFE
 18971                           tosl	equ	0xFFD
 18972                           pclath	equ	0xFFA
 18973                           tblptru	equ	0xFF8
 18974                           tblptrh	equ	0xFF7
 18975                           tblptrl	equ	0xFF6
 18976                           tablat	equ	0xFF5
 18977                           prodh	equ	0xFF4
 18978                           prodl	equ	0xFF3
 18979                           intcon	equ	0xFF2
 18980                           intcon2	equ	0xFF1
 18981                           intcon3	equ	0xFF0
 18982                           indf0	equ	0xFEF
 18983                           postinc0	equ	0xFEE
 18984                           plusw0	equ	0xFEB
 18985                           fsr0h	equ	0xFEA
 18986                           fsr0l	equ	0xFE9
 18987                           wreg	equ	0xFE8
 18988                           indf1	equ	0xFE7
 18989                           postinc1	equ	0xFE6
 18990                           postdec1	equ	0xFE5
 18991                           plusw1	equ	0xFE3
 18992                           fsr1h	equ	0xFE2
 18993                           fsr1l	equ	0xFE1
 18994                           indf2	equ	0xFDF
 18995                           postinc2	equ	0xFDE
 18996                           postdec2	equ	0xFDD
 18997                           plusw2	equ	0xFDB
 18998                           fsr2h	equ	0xFDA
 18999                           fsr2l	equ	0xFD9
 19000                           status	equ	0xFD8
 19001                           
 19002 ;; *************** function _Rtcm_SetRtccDate *****************
 19003 ;; Defined at:
 19004 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19005 ;; Parameters:    Size  Location     Type
 19006 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 19007 ;; Auto vars:     Size  Location     Type
 19008 ;;		None
 19009 ;; Return value:  Size  Location     Type
 19010 ;;                  1    wreg      void 
 19011 ;; Registers used:
 19012 ;;		wreg, status,2, status,0, cstack
 19013 ;; Tracked objects:
 19014 ;;		On entry : 0/0
 19015 ;;		On exit  : 0/0
 19016 ;;		Unchanged: 0/0
 19017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19018 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19021 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19022 ;;Total ram usage:        8 bytes
 19023 ;; Hardware stack levels used:    1
 19024 ;; Hardware stack levels required when called:   13
 19025 ;; This function calls:
 19026 ;;		_Rtcc_LockRtc
 19027 ;;		_Rtcc_SetRtccValue
 19028 ;;		_Rtcc_UnlockRtc
 19029 ;; This function is called by:
 19030 ;;		_Rtcm_MainTask
 19031 ;; This function uses a non-reentrant model
 19032 ;;
 19033                           
 19034                           	psect	text82
 19035  0053CE                     __ptext82:
 19036                           	opt stack 0
 19037  0053CE                     _Rtcm_SetRtccDate:
 19038                           	opt stack 14
 19039                           
 19040                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 19041                           
 19042                           ; BSR set to: 0
 19043                           ;incstack = 0
 19044  0053CE  ECDE  F030         	call	_Rtcc_UnlockRtc	;wreg free
 19045                           
 19046                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 19047  0053D2  0100               	movlb	0	; () banked
 19048  0053D4  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 19049  0053D6  0F30               	addlw	48
 19050  0053D8  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 19051  0053DA  0E00               	movlw	0
 19052  0053DC  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19053                           
 19054                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 19055  0053E0  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 19056  0053E4  0E01               	movlw	1
 19057  0053E6  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19058                           
 19059                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 19060  0053EA  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 19061  0053EE  0E02               	movlw	2
 19062  0053F0  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19063                           
 19064                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 19065  0053F4  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 19066  0053F8  0E03               	movlw	3
 19067  0053FA  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19068                           
 19069                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 19070  0053FE  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 19071  005402  0E04               	movlw	4
 19072  005404  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19073                           
 19074                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 19075  005408  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 19076  00540C  0E05               	movlw	5
 19077  00540E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19078                           
 19079                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 19080  005412  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 19081  005416  0E06               	movlw	6
 19082  005418  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19083                           
 19084                           ;rtcm.c: 191: Rtcc_LockRtc();
 19085  00541C  ECE6  F030         	call	_Rtcc_LockRtc	;wreg free
 19086  005420  0012               	return		;funcret
 19087  005422                     __end_of_Rtcm_SetRtccDate:
 19088                           	opt stack 0
 19089                           tosu	equ	0xFFF
 19090                           tosh	equ	0xFFE
 19091                           tosl	equ	0xFFD
 19092                           pclath	equ	0xFFA
 19093                           tblptru	equ	0xFF8
 19094                           tblptrh	equ	0xFF7
 19095                           tblptrl	equ	0xFF6
 19096                           tablat	equ	0xFF5
 19097                           prodh	equ	0xFF4
 19098                           prodl	equ	0xFF3
 19099                           intcon	equ	0xFF2
 19100                           intcon2	equ	0xFF1
 19101                           intcon3	equ	0xFF0
 19102                           indf0	equ	0xFEF
 19103                           postinc0	equ	0xFEE
 19104                           plusw0	equ	0xFEB
 19105                           fsr0h	equ	0xFEA
 19106                           fsr0l	equ	0xFE9
 19107                           wreg	equ	0xFE8
 19108                           indf1	equ	0xFE7
 19109                           postinc1	equ	0xFE6
 19110                           postdec1	equ	0xFE5
 19111                           plusw1	equ	0xFE3
 19112                           fsr1h	equ	0xFE2
 19113                           fsr1l	equ	0xFE1
 19114                           indf2	equ	0xFDF
 19115                           postinc2	equ	0xFDE
 19116                           postdec2	equ	0xFDD
 19117                           plusw2	equ	0xFDB
 19118                           fsr2h	equ	0xFDA
 19119                           fsr2l	equ	0xFD9
 19120                           status	equ	0xFD8
 19121                           
 19122 ;; *************** function _Rtcc_UnlockRtc *****************
 19123 ;; Defined at:
 19124 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19125 ;; Parameters:    Size  Location     Type
 19126 ;;		None
 19127 ;; Auto vars:     Size  Location     Type
 19128 ;;		None
 19129 ;; Return value:  Size  Location     Type
 19130 ;;                  1    wreg      void 
 19131 ;; Registers used:
 19132 ;;		None
 19133 ;; Tracked objects:
 19134 ;;		On entry : 0/0
 19135 ;;		On exit  : 0/0
 19136 ;;		Unchanged: 0/0
 19137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19142 ;;Total ram usage:        0 bytes
 19143 ;; Hardware stack levels used:    1
 19144 ;; Hardware stack levels required when called:   11
 19145 ;; This function calls:
 19146 ;;		Nothing
 19147 ;; This function is called by:
 19148 ;;		_Rtcm_MainTask
 19149 ;;		_Rtcm_SetRtccDate
 19150 ;;		_Rtcm_SetRtccAlarm
 19151 ;; This function uses a non-reentrant model
 19152 ;;
 19153                           
 19154                           	psect	text83
 19155  0061BC                     __ptext83:
 19156                           	opt stack 0
 19157  0061BC                     _Rtcc_UnlockRtc:
 19158                           	opt stack 15
 19159                           
 19160                           ;incstack = 0
 19161  0061BC  010F               	movlb	15	;# 
 19162  0061BE  0E55               	movlw	85	;# 
 19163  0061C0  6EA7               	movwf	4007,c	;# 
 19164  0061C2  0EAA               	movlw	170	;# 
 19165  0061C4  6EA7               	movwf	4007,c	;# 
 19166                           
 19167                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 19168  0061C6  010F               	movlb	15	; () banked
 19169  0061C8  8B3F               	bsf	63,5,b	;volatile
 19170                           
 19171                           ; BSR set to: 15
 19172  0061CA  0012               	return		;funcret
 19173  0061CC                     __end_of_Rtcc_UnlockRtc:
 19174                           	opt stack 0
 19175                           tosu	equ	0xFFF
 19176                           tosh	equ	0xFFE
 19177                           tosl	equ	0xFFD
 19178                           pclath	equ	0xFFA
 19179                           tblptru	equ	0xFF8
 19180                           tblptrh	equ	0xFF7
 19181                           tblptrl	equ	0xFF6
 19182                           tablat	equ	0xFF5
 19183                           prodh	equ	0xFF4
 19184                           prodl	equ	0xFF3
 19185                           intcon	equ	0xFF2
 19186                           intcon2	equ	0xFF1
 19187                           intcon3	equ	0xFF0
 19188                           indf0	equ	0xFEF
 19189                           postinc0	equ	0xFEE
 19190                           plusw0	equ	0xFEB
 19191                           fsr0h	equ	0xFEA
 19192                           fsr0l	equ	0xFE9
 19193                           wreg	equ	0xFE8
 19194                           indf1	equ	0xFE7
 19195                           postinc1	equ	0xFE6
 19196                           postdec1	equ	0xFE5
 19197                           plusw1	equ	0xFE3
 19198                           fsr1h	equ	0xFE2
 19199                           fsr1l	equ	0xFE1
 19200                           indf2	equ	0xFDF
 19201                           postinc2	equ	0xFDE
 19202                           postdec2	equ	0xFDD
 19203                           plusw2	equ	0xFDB
 19204                           fsr2h	equ	0xFDA
 19205                           fsr2l	equ	0xFD9
 19206                           status	equ	0xFD8
 19207                           
 19208 ;; *************** function _Rtcc_SetRtccValue *****************
 19209 ;; Defined at:
 19210 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19211 ;; Parameters:    Size  Location     Type
 19212 ;;  RtccPtrVal      1    wreg     enum E7757
 19213 ;;  Value           1   37[BANK0 ] unsigned char 
 19214 ;; Auto vars:     Size  Location     Type
 19215 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 19216 ;; Return value:  Size  Location     Type
 19217 ;;                  1    wreg      void 
 19218 ;; Registers used:
 19219 ;;		wreg, status,2, status,0, cstack
 19220 ;; Tracked objects:
 19221 ;;		On entry : 0/0
 19222 ;;		On exit  : 0/0
 19223 ;;		Unchanged: 0/0
 19224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19225 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19226 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19227 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19228 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19229 ;;Total ram usage:        4 bytes
 19230 ;; Hardware stack levels used:    1
 19231 ;; Hardware stack levels required when called:   12
 19232 ;; This function calls:
 19233 ;;		___awdiv
 19234 ;;		___awmod
 19235 ;; This function is called by:
 19236 ;;		_Rtcm_SetRtccDate
 19237 ;; This function uses a non-reentrant model
 19238 ;;
 19239                           
 19240                           	psect	text84
 19241  0015EE                     __ptext84:
 19242                           	opt stack 0
 19243  0015EE                     _Rtcc_SetRtccValue:
 19244                           	opt stack 14
 19245                           
 19246                           ; BSR set to: 15
 19247                           ;incstack = 0
 19248                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 19249  0015EE  0100               	movlb	0	; () banked
 19250  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 19251                           
 19252                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 19253  0015F2  D0FC               	goto	l441
 19254  0015F4                     l442:
 19255                           
 19256                           ; BSR set to: 0
 19257                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 19258  0015F4  010F               	movlb	15	; () banked
 19259  0015F6  833F               	bsf	63,1,b	;volatile
 19260                           
 19261                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 19262  0015F8  813F               	bsf	63,0,b	;volatile
 19263                           
 19264                           ; BSR set to: 15
 19265                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19266  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19267  0015FE  0100               	movlb	0	; () banked
 19268  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19269  001602  0E00               	movlw	0
 19270  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19271  001606  0E0A               	movlw	10
 19272  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 19273  00160A  EC0C  F027         	call	___awmod	;wreg free
 19274  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19275  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19276  001616  0E0F               	movlw	15
 19277  001618  0100               	movlb	0	; () banked
 19278  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19279  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19280  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19281  001622  0E00               	movlw	0
 19282  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19283  001626  0E0A               	movlw	10
 19284  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19285  00162A  ECD0  F025         	call	___awdiv	;wreg free
 19286  00162E  0100               	movlb	0	; () banked
 19287  001630  397D               	swapf	?___awdiv& (0+255),w,b
 19288  001632  0BF0               	andlw	240
 19289  001634  0BF0               	andlw	240
 19290  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19291  001638  6E98               	movwf	3992,c	;volatile
 19292                           
 19293                           ;rtcc_drv.c: 393: break;
 19294  00163A  0012               	return	
 19295  00163C                     l444:
 19296                           
 19297                           ; BSR set to: 0
 19298                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19299  00163C  010F               	movlb	15	; () banked
 19300  00163E  833F               	bsf	63,1,b	;volatile
 19301                           
 19302                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19303  001640  913F               	bcf	63,0,b	;volatile
 19304                           
 19305                           ; BSR set to: 15
 19306                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19307  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19308  001646  0100               	movlb	0	; () banked
 19309  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19310  00164A  0E00               	movlw	0
 19311  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19312  00164E  0E0A               	movlw	10
 19313  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 19314  001652  EC0C  F027         	call	___awmod	;wreg free
 19315  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19316  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19317  00165E  0E0F               	movlw	15
 19318  001660  0100               	movlb	0	; () banked
 19319  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19320  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19321  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19322  00166A  0E00               	movlw	0
 19323  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19324  00166E  0E0A               	movlw	10
 19325  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19326  001672  ECD0  F025         	call	___awdiv	;wreg free
 19327  001676  0100               	movlb	0	; () banked
 19328  001678  397D               	swapf	?___awdiv& (0+255),w,b
 19329  00167A  0BF0               	andlw	240
 19330  00167C  0BF0               	andlw	240
 19331  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19332  001680  6E99               	movwf	3993,c	;volatile
 19333                           
 19334                           ;rtcc_drv.c: 401: break;
 19335  001682  0012               	return	
 19336  001684                     l445:
 19337                           
 19338                           ; BSR set to: 0
 19339                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19340  001684  010F               	movlb	15	; () banked
 19341  001686  833F               	bsf	63,1,b	;volatile
 19342                           
 19343                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19344  001688  913F               	bcf	63,0,b	;volatile
 19345                           
 19346                           ; BSR set to: 15
 19347                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19348  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19349  00168E  0100               	movlb	0	; () banked
 19350  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19351  001692  0E00               	movlw	0
 19352  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19353  001696  0E0A               	movlw	10
 19354  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 19355  00169A  EC0C  F027         	call	___awmod	;wreg free
 19356  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19357  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19358  0016A6  0E0F               	movlw	15
 19359  0016A8  0100               	movlb	0	; () banked
 19360  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19361  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19362  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19363  0016B2  0E00               	movlw	0
 19364  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19365  0016B6  0E0A               	movlw	10
 19366  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19367  0016BA  ECD0  F025         	call	___awdiv	;wreg free
 19368  0016BE  0100               	movlb	0	; () banked
 19369  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 19370  0016C2  0BF0               	andlw	240
 19371  0016C4  0BF0               	andlw	240
 19372  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19373  0016C8  6E98               	movwf	3992,c	;volatile
 19374                           
 19375                           ;rtcc_drv.c: 409: break;
 19376  0016CA  0012               	return	
 19377  0016CC                     l446:
 19378                           
 19379                           ; BSR set to: 0
 19380                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19381  0016CC  010F               	movlb	15	; () banked
 19382  0016CE  933F               	bcf	63,1,b	;volatile
 19383                           
 19384                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19385  0016D0  813F               	bsf	63,0,b	;volatile
 19386                           
 19387                           ; BSR set to: 15
 19388                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19389  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19390  0016D6  0100               	movlb	0	; () banked
 19391  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19392  0016DA  0E00               	movlw	0
 19393  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19394  0016DE  0E0A               	movlw	10
 19395  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19396  0016E2  EC0C  F027         	call	___awmod	;wreg free
 19397  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19398  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19399  0016EE  0E0F               	movlw	15
 19400  0016F0  0100               	movlb	0	; () banked
 19401  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19402  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19403  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19404  0016FA  0E00               	movlw	0
 19405  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19406  0016FE  0E0A               	movlw	10
 19407  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19408  001702  ECD0  F025         	call	___awdiv	;wreg free
 19409  001706  0100               	movlb	0	; () banked
 19410  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19411  00170A  0BF0               	andlw	240
 19412  00170C  0BF0               	andlw	240
 19413  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19414  001710  6E99               	movwf	3993,c	;volatile
 19415                           
 19416                           ;rtcc_drv.c: 417: break;
 19417  001712  0012               	return	
 19418  001714                     l447:
 19419                           
 19420                           ; BSR set to: 0
 19421                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19422  001714  010F               	movlb	15	; () banked
 19423  001716  933F               	bcf	63,1,b	;volatile
 19424                           
 19425                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19426  001718  813F               	bsf	63,0,b	;volatile
 19427                           
 19428                           ; BSR set to: 15
 19429                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19430  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19431  00171E  0100               	movlb	0	; () banked
 19432  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19433  001722  0E00               	movlw	0
 19434  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19435  001726  0E0A               	movlw	10
 19436  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19437  00172A  EC0C  F027         	call	___awmod	;wreg free
 19438  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19439  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19440  001736  0E0F               	movlw	15
 19441  001738  0100               	movlb	0	; () banked
 19442  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19443  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19444  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19445  001742  0E00               	movlw	0
 19446  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19447  001746  0E0A               	movlw	10
 19448  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19449  00174A  ECD0  F025         	call	___awdiv	;wreg free
 19450  00174E  0100               	movlb	0	; () banked
 19451  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19452  001752  0BF0               	andlw	240
 19453  001754  0BF0               	andlw	240
 19454  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19455  001758  6E98               	movwf	3992,c	;volatile
 19456                           
 19457                           ;rtcc_drv.c: 425: break;
 19458  00175A  0012               	return	
 19459  00175C                     l448:
 19460                           
 19461                           ; BSR set to: 0
 19462                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19463  00175C  010F               	movlb	15	; () banked
 19464  00175E  933F               	bcf	63,1,b	;volatile
 19465                           
 19466                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19467  001760  913F               	bcf	63,0,b	;volatile
 19468                           
 19469                           ; BSR set to: 15
 19470                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19471  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19472  001766  0100               	movlb	0	; () banked
 19473  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19474  00176A  0E00               	movlw	0
 19475  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19476  00176E  0E0A               	movlw	10
 19477  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19478  001772  EC0C  F027         	call	___awmod	;wreg free
 19479  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19480  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19481  00177E  0E0F               	movlw	15
 19482  001780  0100               	movlb	0	; () banked
 19483  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19484  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19485  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19486  00178A  0E00               	movlw	0
 19487  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19488  00178E  0E0A               	movlw	10
 19489  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19490  001792  ECD0  F025         	call	___awdiv	;wreg free
 19491  001796  0100               	movlb	0	; () banked
 19492  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19493  00179A  0BF0               	andlw	240
 19494  00179C  0BF0               	andlw	240
 19495  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19496  0017A0  6E99               	movwf	3993,c	;volatile
 19497                           
 19498                           ;rtcc_drv.c: 433: break;
 19499  0017A2  0012               	return	
 19500  0017A4                     l449:
 19501                           
 19502                           ; BSR set to: 0
 19503                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19504  0017A4  010F               	movlb	15	; () banked
 19505  0017A6  933F               	bcf	63,1,b	;volatile
 19506                           
 19507                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19508  0017A8  913F               	bcf	63,0,b	;volatile
 19509                           
 19510                           ; BSR set to: 15
 19511                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19512  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19513  0017AE  0100               	movlb	0	; () banked
 19514  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19515  0017B2  0E00               	movlw	0
 19516  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19517  0017B6  0E0A               	movlw	10
 19518  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19519  0017BA  EC0C  F027         	call	___awmod	;wreg free
 19520  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19521  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19522  0017C6  0E0F               	movlw	15
 19523  0017C8  0100               	movlb	0	; () banked
 19524  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19525  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19526  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19527  0017D2  0E00               	movlw	0
 19528  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19529  0017D6  0E0A               	movlw	10
 19530  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19531  0017DA  ECD0  F025         	call	___awdiv	;wreg free
 19532  0017DE  0100               	movlb	0	; () banked
 19533  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19534  0017E2  0BF0               	andlw	240
 19535  0017E4  0BF0               	andlw	240
 19536  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19537  0017E8  6E98               	movwf	3992,c	;volatile
 19538                           
 19539                           ; BSR set to: 0
 19540                           ;rtcc_drv.c: 445: }
 19541                           
 19542                           ; BSR set to: 0
 19543                           ;rtcc_drv.c: 444: break;
 19544                           
 19545                           ;rtcc_drv.c: 443: default:
 19546                           
 19547                           ;rtcc_drv.c: 441: break;
 19548  0017EA  0012               	return	
 19549  0017EC                     l441:
 19550                           
 19551                           ; BSR set to: 0
 19552  0017EC  0100               	movlb	0	; () banked
 19553  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19554                           
 19555                           ; Switch size 1, requested type "space"
 19556                           ; Number of cases is 7, Range of values is 0 to 6
 19557                           ; switch strategies available:
 19558                           ; Name         Instructions Cycles
 19559                           ; simple_byte           22    12 (average)
 19560                           ;	Chosen strategy is simple_byte
 19561  0017F0  0A00               	xorlw	0	; case 0
 19562  0017F2  B4D8               	btfsc	status,2,c
 19563  0017F4  D6FF               	goto	l442
 19564  0017F6  0A01               	xorlw	1	; case 1
 19565  0017F8  B4D8               	btfsc	status,2,c
 19566  0017FA  D720               	goto	l444
 19567  0017FC  0A03               	xorlw	3	; case 2
 19568  0017FE  B4D8               	btfsc	status,2,c
 19569  001800  D741               	goto	l445
 19570  001802  0A01               	xorlw	1	; case 3
 19571  001804  B4D8               	btfsc	status,2,c
 19572  001806  D762               	goto	l446
 19573  001808  0A07               	xorlw	7	; case 4
 19574  00180A  B4D8               	btfsc	status,2,c
 19575  00180C  D783               	goto	l447
 19576  00180E  0A01               	xorlw	1	; case 5
 19577  001810  B4D8               	btfsc	status,2,c
 19578  001812  D7A4               	goto	l448
 19579  001814  0A03               	xorlw	3	; case 6
 19580  001816  A4D8               	btfss	status,2,c
 19581  001818  0012               	return	
 19582  00181A  D7C4               	goto	l449
 19583  00181C                     __end_of_Rtcc_SetRtccValue:
 19584                           	opt stack 0
 19585                           tosu	equ	0xFFF
 19586                           tosh	equ	0xFFE
 19587                           tosl	equ	0xFFD
 19588                           pclath	equ	0xFFA
 19589                           tblptru	equ	0xFF8
 19590                           tblptrh	equ	0xFF7
 19591                           tblptrl	equ	0xFF6
 19592                           tablat	equ	0xFF5
 19593                           prodh	equ	0xFF4
 19594                           prodl	equ	0xFF3
 19595                           intcon	equ	0xFF2
 19596                           intcon2	equ	0xFF1
 19597                           intcon3	equ	0xFF0
 19598                           indf0	equ	0xFEF
 19599                           postinc0	equ	0xFEE
 19600                           plusw0	equ	0xFEB
 19601                           fsr0h	equ	0xFEA
 19602                           fsr0l	equ	0xFE9
 19603                           wreg	equ	0xFE8
 19604                           indf1	equ	0xFE7
 19605                           postinc1	equ	0xFE6
 19606                           postdec1	equ	0xFE5
 19607                           plusw1	equ	0xFE3
 19608                           fsr1h	equ	0xFE2
 19609                           fsr1l	equ	0xFE1
 19610                           indf2	equ	0xFDF
 19611                           postinc2	equ	0xFDE
 19612                           postdec2	equ	0xFDD
 19613                           plusw2	equ	0xFDB
 19614                           fsr2h	equ	0xFDA
 19615                           fsr2l	equ	0xFD9
 19616                           status	equ	0xFD8
 19617                           
 19618 ;; *************** function ___awmod *****************
 19619 ;; Defined at:
 19620 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19621 ;; Parameters:    Size  Location     Type
 19622 ;;  dividend        2   29[BANK0 ] int 
 19623 ;;  divisor         2   31[BANK0 ] int 
 19624 ;; Auto vars:     Size  Location     Type
 19625 ;;  sign            1   34[BANK0 ] unsigned char 
 19626 ;;  counter         1   33[BANK0 ] unsigned char 
 19627 ;; Return value:  Size  Location     Type
 19628 ;;                  2   29[BANK0 ] int 
 19629 ;; Registers used:
 19630 ;;		wreg, status,2, status,0
 19631 ;; Tracked objects:
 19632 ;;		On entry : 0/0
 19633 ;;		On exit  : 0/0
 19634 ;;		Unchanged: 0/0
 19635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19636 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19637 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19639 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19640 ;;Total ram usage:        6 bytes
 19641 ;; Hardware stack levels used:    1
 19642 ;; Hardware stack levels required when called:   11
 19643 ;; This function calls:
 19644 ;;		Nothing
 19645 ;; This function is called by:
 19646 ;;		_Rtcc_SetRtccValue
 19647 ;;		_Rtcc_SetRtccAlarm
 19648 ;; This function uses a non-reentrant model
 19649 ;;
 19650                           
 19651                           	psect	text85
 19652  004E18                     __ptext85:
 19653                           	opt stack 0
 19654  004E18                     ___awmod:
 19655                           	opt stack 14
 19656                           
 19657                           ; BSR set to: 0
 19658                           ;incstack = 0
 19659  004E18  0E00               	movlw	0
 19660  004E1A  0100               	movlb	0	; () banked
 19661  004E1C  6F82               	movwf	___awmod@sign& (0+255),b
 19662                           
 19663                           ; BSR set to: 0
 19664  004E1E  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19665  004E20  D006               	goto	l2808
 19666                           
 19667                           ; BSR set to: 0
 19668  004E22  6D7D               	negf	___awmod@dividend& (0+255),b
 19669  004E24  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19670  004E26  B0D8               	btfsc	status,0,c
 19671  004E28  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19672                           
 19673                           ; BSR set to: 0
 19674  004E2A  0E01               	movlw	1
 19675  004E2C  6F82               	movwf	___awmod@sign& (0+255),b
 19676  004E2E                     l2808:
 19677                           
 19678                           ; BSR set to: 0
 19679                           
 19680                           ; BSR set to: 0
 19681  004E2E  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19682  004E30  D004               	goto	l2809
 19683                           
 19684                           ; BSR set to: 0
 19685  004E32  6D7F               	negf	___awmod@divisor& (0+255),b
 19686  004E34  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19687  004E36  B0D8               	btfsc	status,0,c
 19688  004E38  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19689  004E3A                     l2809:
 19690                           
 19691                           ; BSR set to: 0
 19692                           
 19693                           ; BSR set to: 0
 19694  004E3A  517F               	movf	___awmod@divisor& (0+255),w,b
 19695  004E3C  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19696  004E3E  B4D8               	btfsc	status,2,c
 19697  004E40  D018               	goto	l2816
 19698                           
 19699                           ; BSR set to: 0
 19700  004E42  0E01               	movlw	1
 19701  004E44  6F81               	movwf	___awmod@counter& (0+255),b
 19702  004E46  D004               	goto	l2811
 19703  004E48                     
 19704                           ; BSR set to: 0
 19705                           
 19706                           ; BSR set to: 0
 19707  004E48  90D8               	bcf	status,0,c
 19708  004E4A  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19709  004E4C  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19710  004E4E  2B81               	incf	___awmod@counter& (0+255),f,b
 19711  004E50                     l2811:
 19712                           
 19713                           ; BSR set to: 0
 19714                           
 19715                           ; BSR set to: 0
 19716  004E50  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19717  004E52  D7FA               	goto	l2812
 19718  004E54                     u12050:
 19719                           
 19720                           ; BSR set to: 0
 19721                           
 19722                           ; BSR set to: 0
 19723                           
 19724                           ; BSR set to: 0
 19725  004E54  517F               	movf	___awmod@divisor& (0+255),w,b
 19726  004E56  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19727  004E58  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19728  004E5A  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19729  004E5C  A0D8               	btfss	status,0,c
 19730  004E5E  D004               	goto	l2815
 19731                           
 19732                           ; BSR set to: 0
 19733  004E60  517F               	movf	___awmod@divisor& (0+255),w,b
 19734  004E62  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19735  004E64  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19736  004E66  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19737  004E68                     l2815:
 19738                           
 19739                           ; BSR set to: 0
 19740                           
 19741                           ; BSR set to: 0
 19742  004E68  90D8               	bcf	status,0,c
 19743  004E6A  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19744  004E6C  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19745                           
 19746                           ; BSR set to: 0
 19747  004E6E  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19748  004E70  D7F1               	goto	u12050
 19749  004E72                     l2816:
 19750                           
 19751                           ; BSR set to: 0
 19752                           
 19753                           ; BSR set to: 0
 19754                           
 19755                           ; BSR set to: 0
 19756  004E72  5182               	movf	___awmod@sign& (0+255),w,b
 19757  004E74  B4D8               	btfsc	status,2,c
 19758  004E76  D004               	goto	l2817
 19759                           
 19760                           ; BSR set to: 0
 19761  004E78  6D7D               	negf	___awmod@dividend& (0+255),b
 19762  004E7A  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19763  004E7C  B0D8               	btfsc	status,0,c
 19764  004E7E  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19765  004E80                     l2817:
 19766                           
 19767                           ; BSR set to: 0
 19768                           
 19769                           ; BSR set to: 0
 19770  004E80  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19771  004E84  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19772  004E88  0012               	return	
 19773  004E8A                     __end_of___awmod:
 19774                           	opt stack 0
 19775                           tosu	equ	0xFFF
 19776                           tosh	equ	0xFFE
 19777                           tosl	equ	0xFFD
 19778                           pclath	equ	0xFFA
 19779                           tblptru	equ	0xFF8
 19780                           tblptrh	equ	0xFF7
 19781                           tblptrl	equ	0xFF6
 19782                           tablat	equ	0xFF5
 19783                           prodh	equ	0xFF4
 19784                           prodl	equ	0xFF3
 19785                           intcon	equ	0xFF2
 19786                           intcon2	equ	0xFF1
 19787                           intcon3	equ	0xFF0
 19788                           indf0	equ	0xFEF
 19789                           postinc0	equ	0xFEE
 19790                           plusw0	equ	0xFEB
 19791                           fsr0h	equ	0xFEA
 19792                           fsr0l	equ	0xFE9
 19793                           wreg	equ	0xFE8
 19794                           indf1	equ	0xFE7
 19795                           postinc1	equ	0xFE6
 19796                           postdec1	equ	0xFE5
 19797                           plusw1	equ	0xFE3
 19798                           fsr1h	equ	0xFE2
 19799                           fsr1l	equ	0xFE1
 19800                           indf2	equ	0xFDF
 19801                           postinc2	equ	0xFDE
 19802                           postdec2	equ	0xFDD
 19803                           plusw2	equ	0xFDB
 19804                           fsr2h	equ	0xFDA
 19805                           fsr2l	equ	0xFD9
 19806                           status	equ	0xFD8
 19807                           
 19808 ;; *************** function ___awdiv *****************
 19809 ;; Defined at:
 19810 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19811 ;; Parameters:    Size  Location     Type
 19812 ;;  dividend        2   29[BANK0 ] int 
 19813 ;;  divisor         2   31[BANK0 ] int 
 19814 ;; Auto vars:     Size  Location     Type
 19815 ;;  quotient        2   35[BANK0 ] int 
 19816 ;;  sign            1   34[BANK0 ] unsigned char 
 19817 ;;  counter         1   33[BANK0 ] unsigned char 
 19818 ;; Return value:  Size  Location     Type
 19819 ;;                  2   29[BANK0 ] int 
 19820 ;; Registers used:
 19821 ;;		wreg, status,2, status,0
 19822 ;; Tracked objects:
 19823 ;;		On entry : 0/0
 19824 ;;		On exit  : 0/0
 19825 ;;		Unchanged: 0/0
 19826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19827 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19828 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19830 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19831 ;;Total ram usage:        8 bytes
 19832 ;; Hardware stack levels used:    1
 19833 ;; Hardware stack levels required when called:   11
 19834 ;; This function calls:
 19835 ;;		Nothing
 19836 ;; This function is called by:
 19837 ;;		_Rtcc_SetRtccValue
 19838 ;;		_Rtcc_SetRtccAlarm
 19839 ;; This function uses a non-reentrant model
 19840 ;;
 19841                           
 19842                           	psect	text86
 19843  004BA0                     __ptext86:
 19844                           	opt stack 0
 19845  004BA0                     ___awdiv:
 19846                           	opt stack 14
 19847                           
 19848                           ; BSR set to: 0
 19849                           ;incstack = 0
 19850  004BA0  0E00               	movlw	0
 19851  004BA2  0100               	movlb	0	; () banked
 19852  004BA4  6F82               	movwf	___awdiv@sign& (0+255),b
 19853                           
 19854                           ; BSR set to: 0
 19855  004BA6  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19856  004BA8  D006               	goto	l2795
 19857                           
 19858                           ; BSR set to: 0
 19859  004BAA  6D7F               	negf	___awdiv@divisor& (0+255),b
 19860  004BAC  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19861  004BAE  B0D8               	btfsc	status,0,c
 19862  004BB0  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19863                           
 19864                           ; BSR set to: 0
 19865  004BB2  0E01               	movlw	1
 19866  004BB4  6F82               	movwf	___awdiv@sign& (0+255),b
 19867  004BB6                     l2795:
 19868                           
 19869                           ; BSR set to: 0
 19870                           
 19871                           ; BSR set to: 0
 19872  004BB6  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19873  004BB8  D006               	goto	l2796
 19874                           
 19875                           ; BSR set to: 0
 19876  004BBA  6D7D               	negf	___awdiv@dividend& (0+255),b
 19877  004BBC  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19878  004BBE  B0D8               	btfsc	status,0,c
 19879  004BC0  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19880                           
 19881                           ; BSR set to: 0
 19882  004BC2  0E01               	movlw	1
 19883  004BC4  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19884  004BC6                     l2796:
 19885                           
 19886                           ; BSR set to: 0
 19887                           
 19888                           ; BSR set to: 0
 19889  004BC6  0E00               	movlw	0
 19890  004BC8  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19891  004BCA  0E00               	movlw	0
 19892  004BCC  6F83               	movwf	___awdiv@quotient& (0+255),b
 19893                           
 19894                           ; BSR set to: 0
 19895  004BCE  517F               	movf	___awdiv@divisor& (0+255),w,b
 19896  004BD0  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19897  004BD2  B4D8               	btfsc	status,2,c
 19898  004BD4  D01C               	goto	l2803
 19899                           
 19900                           ; BSR set to: 0
 19901  004BD6  0E01               	movlw	1
 19902  004BD8  6F81               	movwf	___awdiv@counter& (0+255),b
 19903  004BDA  D004               	goto	l2798
 19904  004BDC                     
 19905                           ; BSR set to: 0
 19906                           
 19907                           ; BSR set to: 0
 19908  004BDC  90D8               	bcf	status,0,c
 19909  004BDE  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19910  004BE0  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19911  004BE2  2B81               	incf	___awdiv@counter& (0+255),f,b
 19912  004BE4                     l2798:
 19913                           
 19914                           ; BSR set to: 0
 19915                           
 19916                           ; BSR set to: 0
 19917  004BE4  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19918  004BE6  D7FA               	goto	l2799
 19919  004BE8                     u11990:
 19920                           
 19921                           ; BSR set to: 0
 19922                           
 19923                           ; BSR set to: 0
 19924                           
 19925                           ; BSR set to: 0
 19926  004BE8  90D8               	bcf	status,0,c
 19927  004BEA  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19928  004BEC  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19929                           
 19930                           ; BSR set to: 0
 19931  004BEE  517F               	movf	___awdiv@divisor& (0+255),w,b
 19932  004BF0  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19933  004BF2  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19934  004BF4  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19935  004BF6  A0D8               	btfss	status,0,c
 19936  004BF8  D005               	goto	l2802
 19937                           
 19938                           ; BSR set to: 0
 19939  004BFA  517F               	movf	___awdiv@divisor& (0+255),w,b
 19940  004BFC  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19941  004BFE  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19942  004C00  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19943                           
 19944                           ; BSR set to: 0
 19945  004C02  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19946  004C04                     l2802:
 19947                           
 19948                           ; BSR set to: 0
 19949                           
 19950                           ; BSR set to: 0
 19951  004C04  90D8               	bcf	status,0,c
 19952  004C06  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19953  004C08  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19954                           
 19955                           ; BSR set to: 0
 19956  004C0A  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19957  004C0C  D7ED               	goto	u11990
 19958  004C0E                     l2803:
 19959                           
 19960                           ; BSR set to: 0
 19961                           
 19962                           ; BSR set to: 0
 19963                           
 19964                           ; BSR set to: 0
 19965  004C0E  5182               	movf	___awdiv@sign& (0+255),w,b
 19966  004C10  B4D8               	btfsc	status,2,c
 19967  004C12  D004               	goto	l2804
 19968                           
 19969                           ; BSR set to: 0
 19970  004C14  6D83               	negf	___awdiv@quotient& (0+255),b
 19971  004C16  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19972  004C18  B0D8               	btfsc	status,0,c
 19973  004C1A  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19974  004C1C                     l2804:
 19975                           
 19976                           ; BSR set to: 0
 19977                           
 19978                           ; BSR set to: 0
 19979  004C1C  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19980  004C20  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19981  004C24  0012               	return	
 19982  004C26                     __end_of___awdiv:
 19983                           	opt stack 0
 19984                           tosu	equ	0xFFF
 19985                           tosh	equ	0xFFE
 19986                           tosl	equ	0xFFD
 19987                           pclath	equ	0xFFA
 19988                           tblptru	equ	0xFF8
 19989                           tblptrh	equ	0xFF7
 19990                           tblptrl	equ	0xFF6
 19991                           tablat	equ	0xFF5
 19992                           prodh	equ	0xFF4
 19993                           prodl	equ	0xFF3
 19994                           intcon	equ	0xFF2
 19995                           intcon2	equ	0xFF1
 19996                           intcon3	equ	0xFF0
 19997                           indf0	equ	0xFEF
 19998                           postinc0	equ	0xFEE
 19999                           plusw0	equ	0xFEB
 20000                           fsr0h	equ	0xFEA
 20001                           fsr0l	equ	0xFE9
 20002                           wreg	equ	0xFE8
 20003                           indf1	equ	0xFE7
 20004                           postinc1	equ	0xFE6
 20005                           postdec1	equ	0xFE5
 20006                           plusw1	equ	0xFE3
 20007                           fsr1h	equ	0xFE2
 20008                           fsr1l	equ	0xFE1
 20009                           indf2	equ	0xFDF
 20010                           postinc2	equ	0xFDE
 20011                           postdec2	equ	0xFDD
 20012                           plusw2	equ	0xFDB
 20013                           fsr2h	equ	0xFDA
 20014                           fsr2l	equ	0xFD9
 20015                           status	equ	0xFD8
 20016                           
 20017 ;; *************** function _Rtcc_LockRtc *****************
 20018 ;; Defined at:
 20019 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20020 ;; Parameters:    Size  Location     Type
 20021 ;;		None
 20022 ;; Auto vars:     Size  Location     Type
 20023 ;;		None
 20024 ;; Return value:  Size  Location     Type
 20025 ;;                  1    wreg      void 
 20026 ;; Registers used:
 20027 ;;		None
 20028 ;; Tracked objects:
 20029 ;;		On entry : 0/0
 20030 ;;		On exit  : 0/0
 20031 ;;		Unchanged: 0/0
 20032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20037 ;;Total ram usage:        0 bytes
 20038 ;; Hardware stack levels used:    1
 20039 ;; Hardware stack levels required when called:   11
 20040 ;; This function calls:
 20041 ;;		Nothing
 20042 ;; This function is called by:
 20043 ;;		_Rtcm_MainTask
 20044 ;;		_Rtcm_SetRtccDate
 20045 ;;		_Rtcm_SetRtccAlarm
 20046 ;; This function uses a non-reentrant model
 20047 ;;
 20048                           
 20049                           	psect	text87
 20050  0061CC                     __ptext87:
 20051                           	opt stack 0
 20052  0061CC                     _Rtcc_LockRtc:
 20053                           	opt stack 15
 20054                           
 20055                           ; BSR set to: 0
 20056                           ;incstack = 0
 20057  0061CC  010F               	movlb	15	;# 
 20058  0061CE  0E55               	movlw	85	;# 
 20059  0061D0  6EA7               	movwf	4007,c	;# 
 20060  0061D2  0EAA               	movlw	170	;# 
 20061  0061D4  6EA7               	movwf	4007,c	;# 
 20062                           
 20063                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 20064  0061D6  010F               	movlb	15	; () banked
 20065  0061D8  9B3F               	bcf	63,5,b	;volatile
 20066                           
 20067                           ; BSR set to: 15
 20068  0061DA  0012               	return		;funcret
 20069  0061DC                     __end_of_Rtcc_LockRtc:
 20070                           	opt stack 0
 20071                           tosu	equ	0xFFF
 20072                           tosh	equ	0xFFE
 20073                           tosl	equ	0xFFD
 20074                           pclath	equ	0xFFA
 20075                           tblptru	equ	0xFF8
 20076                           tblptrh	equ	0xFF7
 20077                           tblptrl	equ	0xFF6
 20078                           tablat	equ	0xFF5
 20079                           prodh	equ	0xFF4
 20080                           prodl	equ	0xFF3
 20081                           intcon	equ	0xFF2
 20082                           intcon2	equ	0xFF1
 20083                           intcon3	equ	0xFF0
 20084                           indf0	equ	0xFEF
 20085                           postinc0	equ	0xFEE
 20086                           plusw0	equ	0xFEB
 20087                           fsr0h	equ	0xFEA
 20088                           fsr0l	equ	0xFE9
 20089                           wreg	equ	0xFE8
 20090                           indf1	equ	0xFE7
 20091                           postinc1	equ	0xFE6
 20092                           postdec1	equ	0xFE5
 20093                           plusw1	equ	0xFE3
 20094                           fsr1h	equ	0xFE2
 20095                           fsr1l	equ	0xFE1
 20096                           indf2	equ	0xFDF
 20097                           postinc2	equ	0xFDE
 20098                           postdec2	equ	0xFDD
 20099                           plusw2	equ	0xFDB
 20100                           fsr2h	equ	0xFDA
 20101                           fsr2l	equ	0xFD9
 20102                           status	equ	0xFD8
 20103                           
 20104 ;; *************** function _Rtcm_GetRtccDate *****************
 20105 ;; Defined at:
 20106 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 20107 ;; Parameters:    Size  Location     Type
 20108 ;;		None
 20109 ;; Auto vars:     Size  Location     Type
 20110 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 20111 ;; Return value:  Size  Location     Type
 20112 ;;                  8   33[BANK0 ] struct _RtccDateType
 20113 ;; Registers used:
 20114 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20115 ;; Tracked objects:
 20116 ;;		On entry : 0/0
 20117 ;;		On exit  : 0/0
 20118 ;;		Unchanged: 0/0
 20119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20120 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20121 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20122 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20123 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20124 ;;Total ram usage:       17 bytes
 20125 ;; Hardware stack levels used:    1
 20126 ;; Hardware stack levels required when called:   12
 20127 ;; This function calls:
 20128 ;;		_Rtcc_GetRtccValue
 20129 ;; This function is called by:
 20130 ;;		_Rtcm_MainTask
 20131 ;; This function uses a non-reentrant model
 20132 ;;
 20133                           
 20134                           	psect	text88
 20135  00503A                     __ptext88:
 20136                           	opt stack 0
 20137  00503A                     _Rtcm_GetRtccDate:
 20138                           	opt stack 15
 20139                           
 20140                           ;rtcm.c: 204: RtccDateType LocalDate;
 20141                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 20142                           
 20143                           ; BSR set to: 15
 20144                           ;incstack = 0
 20145  00503A  0E00               	movlw	0
 20146  00503C  ECB1  F024         	call	_Rtcc_GetRtccValue
 20147  005040  0100               	movlb	0	; () banked
 20148  005042  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 20149  005044  0ED0               	movlw	208
 20150  005046  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 20151  005048  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 20152  00504A  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 20153  00504C  0E07               	movlw	7
 20154  00504E  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 20155                           
 20156                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 20157  005050  0E01               	movlw	1
 20158  005052  ECB1  F024         	call	_Rtcc_GetRtccValue
 20159  005056  0100               	movlb	0	; () banked
 20160  005058  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 20161                           
 20162                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 20163  00505A  0E02               	movlw	2
 20164  00505C  ECB1  F024         	call	_Rtcc_GetRtccValue
 20165  005060  0100               	movlb	0	; () banked
 20166  005062  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 20167                           
 20168                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 20169  005064  0E03               	movlw	3
 20170  005066  ECB1  F024         	call	_Rtcc_GetRtccValue
 20171  00506A  0100               	movlb	0	; () banked
 20172  00506C  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 20173                           
 20174                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 20175  00506E  0E04               	movlw	4
 20176  005070  ECB1  F024         	call	_Rtcc_GetRtccValue
 20177  005074  0100               	movlb	0	; () banked
 20178  005076  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 20179                           
 20180                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 20181  005078  0E05               	movlw	5
 20182  00507A  ECB1  F024         	call	_Rtcc_GetRtccValue
 20183  00507E  0100               	movlb	0	; () banked
 20184  005080  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 20185                           
 20186                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 20187  005082  0E06               	movlw	6
 20188  005084  ECB1  F024         	call	_Rtcc_GetRtccValue
 20189  005088  0100               	movlb	0	; () banked
 20190  00508A  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 20191                           
 20192                           ; BSR set to: 0
 20193                           ;rtcm.c: 216: return LocalDate;
 20194  00508C  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 20195  005090  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 20196  005094  0E07               	movlw	7
 20197  005096                     u14271:
 20198  005096  CFDB FFEB          	movff	plusw2,plusw0
 20199  00509A  06E8               	decf	wreg,f,c
 20200  00509C  E2FC               	bc	u14271
 20201  00509E  0012               	return	
 20202  0050A0                     __end_of_Rtcm_GetRtccDate:
 20203                           	opt stack 0
 20204                           tosu	equ	0xFFF
 20205                           tosh	equ	0xFFE
 20206                           tosl	equ	0xFFD
 20207                           pclath	equ	0xFFA
 20208                           tblptru	equ	0xFF8
 20209                           tblptrh	equ	0xFF7
 20210                           tblptrl	equ	0xFF6
 20211                           tablat	equ	0xFF5
 20212                           prodh	equ	0xFF4
 20213                           prodl	equ	0xFF3
 20214                           intcon	equ	0xFF2
 20215                           intcon2	equ	0xFF1
 20216                           intcon3	equ	0xFF0
 20217                           indf0	equ	0xFEF
 20218                           postinc0	equ	0xFEE
 20219                           plusw0	equ	0xFEB
 20220                           fsr0h	equ	0xFEA
 20221                           fsr0l	equ	0xFE9
 20222                           wreg	equ	0xFE8
 20223                           indf1	equ	0xFE7
 20224                           postinc1	equ	0xFE6
 20225                           postdec1	equ	0xFE5
 20226                           plusw1	equ	0xFE3
 20227                           fsr1h	equ	0xFE2
 20228                           fsr1l	equ	0xFE1
 20229                           indf2	equ	0xFDF
 20230                           postinc2	equ	0xFDE
 20231                           postdec2	equ	0xFDD
 20232                           plusw2	equ	0xFDB
 20233                           fsr2h	equ	0xFDA
 20234                           fsr2l	equ	0xFD9
 20235                           status	equ	0xFD8
 20236                           
 20237 ;; *************** function _Rtcc_GetRtccValue *****************
 20238 ;; Defined at:
 20239 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20240 ;; Parameters:    Size  Location     Type
 20241 ;;  RtccPtrVal      1    wreg     enum E7757
 20242 ;; Auto vars:     Size  Location     Type
 20243 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 20244 ;;  RegValue        1   32[BANK0 ] unsigned char 
 20245 ;;  RetValue        1   31[BANK0 ] unsigned char 
 20246 ;; Return value:  Size  Location     Type
 20247 ;;                  1    wreg      unsigned char 
 20248 ;; Registers used:
 20249 ;;		wreg, status,2, status,0, prodl, prodh
 20250 ;; Tracked objects:
 20251 ;;		On entry : 0/0
 20252 ;;		On exit  : 0/0
 20253 ;;		Unchanged: 0/0
 20254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20256 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20257 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20258 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20259 ;;Total ram usage:        4 bytes
 20260 ;; Hardware stack levels used:    1
 20261 ;; Hardware stack levels required when called:   11
 20262 ;; This function calls:
 20263 ;;		Nothing
 20264 ;; This function is called by:
 20265 ;;		_Rtcm_GetRtccDate
 20266 ;; This function uses a non-reentrant model
 20267 ;;
 20268                           
 20269                           	psect	text89
 20270  004962                     __ptext89:
 20271                           	opt stack 0
 20272  004962                     _Rtcc_GetRtccValue:
 20273                           	opt stack 15
 20274                           
 20275                           ; BSR set to: 0
 20276                           ;incstack = 0
 20277                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20278  004962  0100               	movlb	0	; () banked
 20279  004964  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20280                           
 20281                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20282                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20283                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20284  004966  D02D               	goto	l416
 20285  004968                     l417:
 20286                           
 20287                           ; BSR set to: 0
 20288                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20289  004968  010F               	movlb	15	; () banked
 20290  00496A  833F               	bsf	63,1,b	;volatile
 20291  00496C                     
 20292                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20293  00496C  813F               	bsf	63,0,b	;volatile
 20294  00496E  D01C               	goto	L20
 20295  004970                     l419:
 20296                           
 20297                           ; BSR set to: 0
 20298                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20299  004970  010F               	movlb	15	; () banked
 20300  004972  833F               	bsf	63,1,b	;volatile
 20301  004974  D01E               	goto	L21
 20302  004976                     l420:
 20303                           
 20304                           ; BSR set to: 0
 20305                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20306  004976  010F               	movlb	15	; () banked
 20307  004978  833F               	bsf	63,1,b	;volatile
 20308  00497A  D021               	goto	L24
 20309  00497C                     l13089:
 20310                           
 20311                           ; BSR set to: 15
 20312                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20313  00497C  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20314  004980  0E0F               	movlw	15
 20315  004982  0100               	movlb	0	; () banked
 20316  004984  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20317  004986  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20318  004988  0B0F               	andlw	15
 20319  00498A  0B0F               	andlw	15
 20320  00498C  0D0A               	mullw	10
 20321  00498E  50F3               	movf	prodl,w,c
 20322  004990  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20323  004992  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20324                           
 20325                           ;rtcc_drv.c: 241: break;
 20326  004994  D02D               	goto	l418
 20327  004996                     l421:
 20328                           
 20329                           ; BSR set to: 0
 20330                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20331  004996  010F               	movlb	15	; () banked
 20332  004998  933F               	bcf	63,1,b	;volatile
 20333                           
 20334                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20335  00499A  813F               	bsf	63,0,b	;volatile
 20336                           
 20337                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20338  00499C  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20339                           
 20340                           ;rtcc_drv.c: 249: break;
 20341  0049A0  D027               	goto	l418
 20342  0049A2                     l422:
 20343                           
 20344                           ; BSR set to: 0
 20345                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20346  0049A2  010F               	movlb	15	; () banked
 20347  0049A4  933F               	bcf	63,1,b	;volatile
 20348  0049A6  D7E2               	goto	L22
 20349  0049A8                     L20:
 20350                           
 20351                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20352  0049A8  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20353  0049AC  D7E7               	goto	l13089
 20354  0049AE                     l423:
 20355                           
 20356                           ; BSR set to: 0
 20357                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20358  0049AE  010F               	movlb	15	; () banked
 20359  0049B0  933F               	bcf	63,1,b	;volatile
 20360  0049B2                     L21:
 20361                           
 20362                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20363  0049B2  913F               	bcf	63,0,b	;volatile
 20364                           
 20365                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20366  0049B4  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20367  0049B8  D7E1               	goto	l13089
 20368  0049BA                     l424:
 20369                           
 20370                           ; BSR set to: 0
 20371                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20372  0049BA  010F               	movlb	15	; () banked
 20373  0049BC  933F               	bcf	63,1,b	;volatile
 20374  0049BE                     L24:
 20375                           
 20376                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20377  0049BE  913F               	bcf	63,0,b	;volatile
 20378  0049C0  D7F3               	goto	L20
 20379  0049C2                     l416:
 20380                           
 20381                           ; BSR set to: 0
 20382  0049C2  0100               	movlb	0	; () banked
 20383  0049C4  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20384                           
 20385                           ; Switch size 1, requested type "space"
 20386                           ; Number of cases is 7, Range of values is 0 to 6
 20387                           ; switch strategies available:
 20388                           ; Name         Instructions Cycles
 20389                           ; simple_byte           22    12 (average)
 20390                           ;	Chosen strategy is simple_byte
 20391  0049C6  0A00               	xorlw	0	; case 0
 20392  0049C8  B4D8               	btfsc	status,2,c
 20393  0049CA  D7CE               	goto	l417
 20394  0049CC  0A01               	xorlw	1	; case 1
 20395  0049CE  B4D8               	btfsc	status,2,c
 20396  0049D0  D7CF               	goto	l419
 20397  0049D2  0A03               	xorlw	3	; case 2
 20398  0049D4  B4D8               	btfsc	status,2,c
 20399  0049D6  D7CF               	goto	l420
 20400  0049D8  0A01               	xorlw	1	; case 3
 20401  0049DA  B4D8               	btfsc	status,2,c
 20402  0049DC  D7DC               	goto	l421
 20403  0049DE  0A07               	xorlw	7	; case 4
 20404  0049E0  B4D8               	btfsc	status,2,c
 20405  0049E2  D7DF               	goto	l422
 20406  0049E4  0A01               	xorlw	1	; case 5
 20407  0049E6  B4D8               	btfsc	status,2,c
 20408  0049E8  D7E2               	goto	l423
 20409  0049EA  0A03               	xorlw	3	; case 6
 20410  0049EC  B4D8               	btfsc	status,2,c
 20411  0049EE  D7E5               	goto	l424
 20412  0049F0                     l418:
 20413                           
 20414                           ;rtcc_drv.c: 286: return RetValue;
 20415                           
 20416                           ; BSR set to: 0
 20417  0049F0  0100               	movlb	0	; () banked
 20418  0049F2  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20419  0049F4  0012               	return	
 20420  0049F6                     __end_of_Rtcc_GetRtccValue:
 20421                           	opt stack 0
 20422                           tosu	equ	0xFFF
 20423                           tosh	equ	0xFFE
 20424                           tosl	equ	0xFFD
 20425                           pclath	equ	0xFFA
 20426                           tblptru	equ	0xFF8
 20427                           tblptrh	equ	0xFF7
 20428                           tblptrl	equ	0xFF6
 20429                           tablat	equ	0xFF5
 20430                           prodh	equ	0xFF4
 20431                           prodl	equ	0xFF3
 20432                           intcon	equ	0xFF2
 20433                           intcon2	equ	0xFF1
 20434                           intcon3	equ	0xFF0
 20435                           indf0	equ	0xFEF
 20436                           postinc0	equ	0xFEE
 20437                           plusw0	equ	0xFEB
 20438                           fsr0h	equ	0xFEA
 20439                           fsr0l	equ	0xFE9
 20440                           wreg	equ	0xFE8
 20441                           indf1	equ	0xFE7
 20442                           postinc1	equ	0xFE6
 20443                           postdec1	equ	0xFE5
 20444                           plusw1	equ	0xFE3
 20445                           fsr1h	equ	0xFE2
 20446                           fsr1l	equ	0xFE1
 20447                           indf2	equ	0xFDF
 20448                           postinc2	equ	0xFDE
 20449                           postdec2	equ	0xFDD
 20450                           plusw2	equ	0xFDB
 20451                           fsr2h	equ	0xFDA
 20452                           fsr2l	equ	0xFD9
 20453                           status	equ	0xFD8
 20454                           
 20455 ;; *************** function _Rtcc_SetRtcStatus *****************
 20456 ;; Defined at:
 20457 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20458 ;; Parameters:    Size  Location     Type
 20459 ;;  Status          1    wreg     unsigned char 
 20460 ;; Auto vars:     Size  Location     Type
 20461 ;;  Status          1   29[BANK0 ] unsigned char 
 20462 ;; Return value:  Size  Location     Type
 20463 ;;                  1    wreg      void 
 20464 ;; Registers used:
 20465 ;;		wreg
 20466 ;; Tracked objects:
 20467 ;;		On entry : 0/0
 20468 ;;		On exit  : 0/0
 20469 ;;		Unchanged: 0/0
 20470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20474 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20475 ;;Total ram usage:        1 bytes
 20476 ;; Hardware stack levels used:    1
 20477 ;; Hardware stack levels required when called:   11
 20478 ;; This function calls:
 20479 ;;		Nothing
 20480 ;; This function is called by:
 20481 ;;		_Rtcm_MainTask
 20482 ;; This function uses a non-reentrant model
 20483 ;;
 20484                           
 20485                           	psect	text90
 20486  00611A                     __ptext90:
 20487                           	opt stack 0
 20488  00611A                     _Rtcc_SetRtcStatus:
 20489                           	opt stack 16
 20490                           
 20491                           ; BSR set to: 0
 20492                           ;incstack = 0
 20493                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20494  00611A  0100               	movlb	0	; () banked
 20495  00611C  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20496                           
 20497                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20498  00611E  0100               	movlb	0	; () banked
 20499  006120  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20500  006122  D003               	bra	u13175
 20501  006124  010F               	movlb	15	; () banked
 20502  006126  9F3F               	bcf	63,7,b	;volatile
 20503  006128  D002               	bra	u13176
 20504  00612A                     u13175:
 20505  00612A  010F               	movlb	15	; () banked
 20506  00612C  8F3F               	bsf	63,7,b	;volatile
 20507  00612E                     u13176:
 20508                           
 20509                           ; BSR set to: 15
 20510  00612E  0012               	return		;funcret
 20511  006130                     __end_of_Rtcc_SetRtcStatus:
 20512                           	opt stack 0
 20513                           tosu	equ	0xFFF
 20514                           tosh	equ	0xFFE
 20515                           tosl	equ	0xFFD
 20516                           pclath	equ	0xFFA
 20517                           tblptru	equ	0xFF8
 20518                           tblptrh	equ	0xFF7
 20519                           tblptrl	equ	0xFF6
 20520                           tablat	equ	0xFF5
 20521                           prodh	equ	0xFF4
 20522                           prodl	equ	0xFF3
 20523                           intcon	equ	0xFF2
 20524                           intcon2	equ	0xFF1
 20525                           intcon3	equ	0xFF0
 20526                           indf0	equ	0xFEF
 20527                           postinc0	equ	0xFEE
 20528                           plusw0	equ	0xFEB
 20529                           fsr0h	equ	0xFEA
 20530                           fsr0l	equ	0xFE9
 20531                           wreg	equ	0xFE8
 20532                           indf1	equ	0xFE7
 20533                           postinc1	equ	0xFE6
 20534                           postdec1	equ	0xFE5
 20535                           plusw1	equ	0xFE3
 20536                           fsr1h	equ	0xFE2
 20537                           fsr1l	equ	0xFE1
 20538                           indf2	equ	0xFDF
 20539                           postinc2	equ	0xFDE
 20540                           postdec2	equ	0xFDD
 20541                           plusw2	equ	0xFDB
 20542                           fsr2h	equ	0xFDA
 20543                           fsr2l	equ	0xFD9
 20544                           status	equ	0xFD8
 20545                           
 20546 ;; *************** function _Rtcc_RtcConfig *****************
 20547 ;; Defined at:
 20548 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20549 ;; Parameters:    Size  Location     Type
 20550 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20551 ;;		 -> RtcConfig(4), 
 20552 ;; Auto vars:     Size  Location     Type
 20553 ;;		None
 20554 ;; Return value:  Size  Location     Type
 20555 ;;                  1    wreg      void 
 20556 ;; Registers used:
 20557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20558 ;; Tracked objects:
 20559 ;;		On entry : 0/0
 20560 ;;		On exit  : 0/0
 20561 ;;		Unchanged: 0/0
 20562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20563 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20565 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20566 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20567 ;;Total ram usage:        3 bytes
 20568 ;; Hardware stack levels used:    1
 20569 ;; Hardware stack levels required when called:   12
 20570 ;; This function calls:
 20571 ;;		_RtccIrqInit
 20572 ;; This function is called by:
 20573 ;;		_Rtcm_MainTask
 20574 ;; This function uses a non-reentrant model
 20575 ;;
 20576                           
 20577                           	psect	text91
 20578  00452E                     __ptext91:
 20579                           	opt stack 0
 20580  00452E                     _Rtcc_RtcConfig:
 20581                           	opt stack 15
 20582                           
 20583                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20584                           
 20585                           ; BSR set to: 15
 20586                           ;incstack = 0
 20587  00452E  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20588  004532  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20589  004536  50DF               	movf	indf2,w,c
 20590  004538  0100               	movlb	0	; () banked
 20591  00453A  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20592  00453C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20593  00453E  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20594  004540  010F               	movlb	15	; () banked
 20595  004542  513F               	movf	63,w,b	;volatile
 20596  004544  0100               	movlb	0	; () banked
 20597  004546  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20598  004548  0BFB               	andlw	-5
 20599  00454A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20600  00454C  010F               	movlb	15	; () banked
 20601  00454E  6F3F               	movwf	63,b	;volatile
 20602                           
 20603                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20604  004550  0100               	movlb	0	; () banked
 20605  004552  EE20 F001          	lfsr	2,1
 20606  004556  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20607  004558  26D9               	addwf	fsr2l,f,c
 20608  00455A  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20609  00455C  22DA               	addwfc	fsr2h,f,c
 20610  00455E  50DF               	movf	indf2,w,c
 20611  004560  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20612  004562  0E01               	movlw	1
 20613  004564  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20614  004566  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20615  004568  010F               	movlb	15	; () banked
 20616  00456A  513C               	movf	60,w,b	;volatile
 20617  00456C  0100               	movlb	0	; () banked
 20618  00456E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20619  004570  0BFD               	andlw	-3
 20620  004572  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20621  004574  010F               	movlb	15	; () banked
 20622  004576  6F3C               	movwf	60,b	;volatile
 20623                           
 20624                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20625  004578  0100               	movlb	0	; () banked
 20626  00457A  EE20 F001          	lfsr	2,1
 20627  00457E  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20628  004580  26D9               	addwf	fsr2l,f,c
 20629  004582  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20630  004584  22DA               	addwfc	fsr2h,f,c
 20631  004586  50DF               	movf	indf2,w,c
 20632  004588  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20633  00458A  90D8               	bcf	status,0,c
 20634  00458C  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20635  00458E  0E01               	movlw	1
 20636  004590  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20637  004592  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20638  004594  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20639  004596  010F               	movlb	15	; () banked
 20640  004598  513C               	movf	60,w,b	;volatile
 20641  00459A  0100               	movlb	0	; () banked
 20642  00459C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20643  00459E  0BFB               	andlw	-5
 20644  0045A0  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20645  0045A2  010F               	movlb	15	; () banked
 20646  0045A4  6F3C               	movwf	60,b	;volatile
 20647                           
 20648                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20649  0045A6  0100               	movlb	0	; () banked
 20650  0045A8  EE20 F002          	lfsr	2,2
 20651  0045AC  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20652  0045AE  26D9               	addwf	fsr2l,f,c
 20653  0045B0  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20654  0045B2  22DA               	addwfc	fsr2h,f,c
 20655  0045B4  04DE               	decf	postinc2,w,c
 20656  0045B6  A4D8               	btfss	status,2,c
 20657  0045B8  0012               	return	
 20658                           
 20659                           ; BSR set to: 0
 20660                           ;rtcc_drv.c: 115: {
 20661                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20662  0045BA  EE20 F003          	lfsr	2,3
 20663  0045BE  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20664  0045C0  26D9               	addwf	fsr2l,f,c
 20665  0045C2  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20666  0045C4  22DA               	addwfc	fsr2h,f,c
 20667  0045C6  50DF               	movf	indf2,w,c
 20668  0045C8  EC98  F030         	call	_RtccIrqInit
 20669  0045CC  0012               	return	
 20670  0045CE                     __end_of_Rtcc_RtcConfig:
 20671                           	opt stack 0
 20672                           tosu	equ	0xFFF
 20673                           tosh	equ	0xFFE
 20674                           tosl	equ	0xFFD
 20675                           pclath	equ	0xFFA
 20676                           tblptru	equ	0xFF8
 20677                           tblptrh	equ	0xFF7
 20678                           tblptrl	equ	0xFF6
 20679                           tablat	equ	0xFF5
 20680                           prodh	equ	0xFF4
 20681                           prodl	equ	0xFF3
 20682                           intcon	equ	0xFF2
 20683                           intcon2	equ	0xFF1
 20684                           intcon3	equ	0xFF0
 20685                           indf0	equ	0xFEF
 20686                           postinc0	equ	0xFEE
 20687                           plusw0	equ	0xFEB
 20688                           fsr0h	equ	0xFEA
 20689                           fsr0l	equ	0xFE9
 20690                           wreg	equ	0xFE8
 20691                           indf1	equ	0xFE7
 20692                           postinc1	equ	0xFE6
 20693                           postdec1	equ	0xFE5
 20694                           plusw1	equ	0xFE3
 20695                           fsr1h	equ	0xFE2
 20696                           fsr1l	equ	0xFE1
 20697                           indf2	equ	0xFDF
 20698                           postinc2	equ	0xFDE
 20699                           postdec2	equ	0xFDD
 20700                           plusw2	equ	0xFDB
 20701                           fsr2h	equ	0xFDA
 20702                           fsr2l	equ	0xFD9
 20703                           status	equ	0xFD8
 20704                           
 20705 ;; *************** function _RtccIrqInit *****************
 20706 ;; Defined at:
 20707 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20708 ;; Parameters:    Size  Location     Type
 20709 ;;  Priority        1    wreg     enum E7716
 20710 ;; Auto vars:     Size  Location     Type
 20711 ;;  Priority        1   29[BANK0 ] enum E7716
 20712 ;; Return value:  Size  Location     Type
 20713 ;;                  1    wreg      void 
 20714 ;; Registers used:
 20715 ;;		wreg
 20716 ;; Tracked objects:
 20717 ;;		On entry : 0/0
 20718 ;;		On exit  : 0/0
 20719 ;;		Unchanged: 0/0
 20720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20722 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20724 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20725 ;;Total ram usage:        1 bytes
 20726 ;; Hardware stack levels used:    1
 20727 ;; Hardware stack levels required when called:   11
 20728 ;; This function calls:
 20729 ;;		Nothing
 20730 ;; This function is called by:
 20731 ;;		_Rtcc_RtcConfig
 20732 ;; This function uses a non-reentrant model
 20733 ;;
 20734                           
 20735                           	psect	text92
 20736  006130                     __ptext92:
 20737                           	opt stack 0
 20738  006130                     _RtccIrqInit:
 20739                           	opt stack 15
 20740                           
 20741                           ;incstack = 0
 20742                           ;RtccIrqInit@Priority stored from wreg
 20743  006130  0100               	movlb	0	; () banked
 20744  006132  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20745                           
 20746                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20747  006134  90A4               	bcf	4004,0,c	;volatile
 20748                           
 20749                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20750  006136  0100               	movlb	0	; () banked
 20751  006138  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20752  00613A  D002               	bra	u12205
 20753  00613C  90A5               	bcf	4005,0,c	;volatile
 20754  00613E  D001               	bra	u12206
 20755  006140                     u12205:
 20756  006140  80A5               	bsf	4005,0,c	;volatile
 20757  006142                     u12206:
 20758                           
 20759                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20760  006142  80A3               	bsf	4003,0,c	;volatile
 20761  006144  0012               	return		;funcret
 20762  006146                     __end_of_RtccIrqInit:
 20763                           	opt stack 0
 20764                           tosu	equ	0xFFF
 20765                           tosh	equ	0xFFE
 20766                           tosl	equ	0xFFD
 20767                           pclath	equ	0xFFA
 20768                           tblptru	equ	0xFF8
 20769                           tblptrh	equ	0xFF7
 20770                           tblptrl	equ	0xFF6
 20771                           tablat	equ	0xFF5
 20772                           prodh	equ	0xFF4
 20773                           prodl	equ	0xFF3
 20774                           intcon	equ	0xFF2
 20775                           intcon2	equ	0xFF1
 20776                           intcon3	equ	0xFF0
 20777                           indf0	equ	0xFEF
 20778                           postinc0	equ	0xFEE
 20779                           plusw0	equ	0xFEB
 20780                           fsr0h	equ	0xFEA
 20781                           fsr0l	equ	0xFE9
 20782                           wreg	equ	0xFE8
 20783                           indf1	equ	0xFE7
 20784                           postinc1	equ	0xFE6
 20785                           postdec1	equ	0xFE5
 20786                           plusw1	equ	0xFE3
 20787                           fsr1h	equ	0xFE2
 20788                           fsr1l	equ	0xFE1
 20789                           indf2	equ	0xFDF
 20790                           postinc2	equ	0xFDE
 20791                           postdec2	equ	0xFDD
 20792                           plusw2	equ	0xFDB
 20793                           fsr2h	equ	0xFDA
 20794                           fsr2l	equ	0xFD9
 20795                           status	equ	0xFD8
 20796                           
 20797 ;; *************** function _Rtcc_AlarmConfig *****************
 20798 ;; Defined at:
 20799 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20800 ;; Parameters:    Size  Location     Type
 20801 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20802 ;;		 -> AlCfg(4), 
 20803 ;; Auto vars:     Size  Location     Type
 20804 ;;		None
 20805 ;; Return value:  Size  Location     Type
 20806 ;;                  1    wreg      void 
 20807 ;; Registers used:
 20808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20809 ;; Tracked objects:
 20810 ;;		On entry : 0/0
 20811 ;;		On exit  : 0/0
 20812 ;;		Unchanged: 0/0
 20813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20814 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20816 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20817 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20818 ;;Total ram usage:        3 bytes
 20819 ;; Hardware stack levels used:    1
 20820 ;; Hardware stack levels required when called:   11
 20821 ;; This function calls:
 20822 ;;		Nothing
 20823 ;; This function is called by:
 20824 ;;		_Rtcm_MainTask
 20825 ;; This function uses a non-reentrant model
 20826 ;;
 20827                           
 20828                           	psect	text93
 20829  004F68                     __ptext93:
 20830                           	opt stack 0
 20831  004F68                     _Rtcc_AlarmConfig:
 20832                           	opt stack 16
 20833                           
 20834                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20835                           
 20836                           ;incstack = 0
 20837  004F68  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20838  004F6C  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20839  004F70  50DF               	movf	indf2,w,c
 20840  004F72  0100               	movlb	0	; () banked
 20841  004F74  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20842  004F76  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20843  004F78  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20844  004F7A  5091               	movf	3985,w,c	;volatile
 20845  004F7C  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20846  004F7E  0B7F               	andlw	-129
 20847  004F80  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20848  004F82  6E91               	movwf	3985,c	;volatile
 20849                           
 20850                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20851  004F84  EE20 F001          	lfsr	2,1
 20852  004F88  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20853  004F8A  26D9               	addwf	fsr2l,f,c
 20854  004F8C  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20855  004F8E  22DA               	addwfc	fsr2h,f,c
 20856  004F90  50DF               	movf	indf2,w,c
 20857  004F92  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20858  004F94  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20859  004F96  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20860  004F98  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20861  004F9A  5091               	movf	3985,w,c	;volatile
 20862  004F9C  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20863  004F9E  0BBF               	andlw	-65
 20864  004FA0  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20865  004FA2  6E91               	movwf	3985,c	;volatile
 20866                           
 20867                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20868  004FA4  EE20 F002          	lfsr	2,2
 20869  004FA8  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20870  004FAA  26D9               	addwf	fsr2l,f,c
 20871  004FAC  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20872  004FAE  22DA               	addwfc	fsr2h,f,c
 20873  004FB0  50DF               	movf	indf2,w,c
 20874  004FB2  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20875  004FB4  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20876  004FB6  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20877  004FB8  5091               	movf	3985,w,c	;volatile
 20878  004FBA  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20879  004FBC  0BC3               	andlw	-61
 20880  004FBE  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20881  004FC0  6E91               	movwf	3985,c	;volatile
 20882                           
 20883                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20884  004FC2  EE20 F003          	lfsr	2,3
 20885  004FC6  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20886  004FC8  26D9               	addwf	fsr2l,f,c
 20887  004FCA  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20888  004FCC  22DA               	addwfc	fsr2h,f,c
 20889  004FCE  50DF               	movf	indf2,w,c
 20890  004FD0  6E90               	movwf	3984,c	;volatile
 20891                           
 20892                           ; BSR set to: 0
 20893  004FD2  0012               	return		;funcret
 20894  004FD4                     __end_of_Rtcc_AlarmConfig:
 20895                           	opt stack 0
 20896                           tosu	equ	0xFFF
 20897                           tosh	equ	0xFFE
 20898                           tosl	equ	0xFFD
 20899                           pclath	equ	0xFFA
 20900                           tblptru	equ	0xFF8
 20901                           tblptrh	equ	0xFF7
 20902                           tblptrl	equ	0xFF6
 20903                           tablat	equ	0xFF5
 20904                           prodh	equ	0xFF4
 20905                           prodl	equ	0xFF3
 20906                           intcon	equ	0xFF2
 20907                           intcon2	equ	0xFF1
 20908                           intcon3	equ	0xFF0
 20909                           indf0	equ	0xFEF
 20910                           postinc0	equ	0xFEE
 20911                           plusw0	equ	0xFEB
 20912                           fsr0h	equ	0xFEA
 20913                           fsr0l	equ	0xFE9
 20914                           wreg	equ	0xFE8
 20915                           indf1	equ	0xFE7
 20916                           postinc1	equ	0xFE6
 20917                           postdec1	equ	0xFE5
 20918                           plusw1	equ	0xFE3
 20919                           fsr1h	equ	0xFE2
 20920                           fsr1l	equ	0xFE1
 20921                           indf2	equ	0xFDF
 20922                           postinc2	equ	0xFDE
 20923                           postdec2	equ	0xFDD
 20924                           plusw2	equ	0xFDB
 20925                           fsr2h	equ	0xFDA
 20926                           fsr2l	equ	0xFD9
 20927                           status	equ	0xFD8
 20928                           
 20929 ;; *************** function _initGprsModem *****************
 20930 ;; Defined at:
 20931 ;;		line 109 in file "../Source/c/04_App/app.c"
 20932 ;; Parameters:    Size  Location     Type
 20933 ;;		None
 20934 ;; Auto vars:     Size  Location     Type
 20935 ;;		None
 20936 ;; Return value:  Size  Location     Type
 20937 ;;                  1    wreg      unsigned char 
 20938 ;; Registers used:
 20939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20940 ;; Tracked objects:
 20941 ;;		On entry : 0/0
 20942 ;;		On exit  : 0/0
 20943 ;;		Unchanged: 0/0
 20944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20949 ;;Total ram usage:        0 bytes
 20950 ;; Hardware stack levels used:    1
 20951 ;; Hardware stack levels required when called:   14
 20952 ;; This function calls:
 20953 ;;		_Led_SetLedStatus
 20954 ;;		_Mdm_SetSmsFormat
 20955 ;;		_Uart_WriteConstString
 20956 ;;		_secondsAppTimer
 20957 ;; This function is called by:
 20958 ;;		_MyApp_Task
 20959 ;; This function uses a non-reentrant model
 20960 ;;
 20961                           
 20962                           	psect	text94
 20963  00466C                     __ptext94:
 20964                           	opt stack 0
 20965  00466C                     _initGprsModem:
 20966                           	opt stack 13
 20967                           
 20968                           ;app.c: 111: static uint16_t modemCounter = 0;
 20969                           ;app.c: 112: static bool isInitialized = 0;
 20970                           ;app.c: 113: static uint8_t initMdm = 0;
 20971                           ;app.c: 115: switch(initMdm)
 20972                           
 20973                           ; BSR set to: 0
 20974                           ;incstack = 0
 20975  00466C  D040               	goto	l2553
 20976  00466E                     
 20977                           ;app.c: 118: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 20978  00466E  0E03               	movlw	3
 20979  004670  0100               	movlb	0	; () banked
 20980  004672  19D3               	xorwf	_MdmStatus& (0+255),w,b
 20981  004674  B4D8               	btfsc	status,2,c
 20982  004676  D003               	goto	u14370
 20983                           
 20984                           ; BSR set to: 0
 20985  004678  05D3               	decf	_MdmStatus& (0+255),w,b
 20986  00467A  A4D8               	btfss	status,2,c
 20987  00467C  D043               	goto	l2559
 20988  00467E                     u14370:
 20989                           
 20990                           ; BSR set to: 0
 20991                           ;app.c: 119: {
 20992                           ;app.c: 120: if (secondsAppTimer(5, &modemCounter, 0))
 20993                           
 20994                           ; BSR set to: 0
 20995  00467E  0EBC               	movlw	low initGprsModem@modemCounter
 20996  004680  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20997  004682  0E03               	movlw	high initGprsModem@modemCounter
 20998  004684  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20999  004686  0E00               	movlw	0
 21000  004688  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21001  00468A  0E05               	movlw	5
 21002  00468C  EC46  F022         	call	_secondsAppTimer
 21003  004690  0900               	iorlw	0
 21004  004692  B4D8               	btfsc	status,2,c
 21005  004694  D037               	goto	l2559
 21006                           
 21007                           ;app.c: 121: {
 21008                           ;app.c: 122: Mdm_SetSmsFormat(1);
 21009  004696  0E01               	movlw	1
 21010  004698  ECDE  F02A         	call	_Mdm_SetSmsFormat
 21011                           
 21012                           ;app.c: 123: Led_SetLedStatus(1u, LED_STS_ON);
 21013  00469C  0E01               	movlw	1
 21014  00469E  0100               	movlb	0	; () banked
 21015  0046A0  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21016  0046A2  0E01               	movlw	1
 21017  0046A4  EC8E  F02E         	call	_Led_SetLedStatus
 21018                           
 21019                           ;app.c: 124: initMdm = 1;
 21020  0046A8  0E01               	movlw	1
 21021  0046AA  D009               	goto	L25
 21022  0046AC                     
 21023                           ; BSR set to: 1
 21024                           ;app.c: 129: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 21025                           
 21026                           ; BSR set to: 1
 21027  0046AC  0EF9               	movlw	low STR_29
 21028  0046AE  0100               	movlb	0	; () banked
 21029  0046B0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21030  0046B2  0EFE               	movlw	high STR_29
 21031  0046B4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21032  0046B6  0E01               	movlw	1
 21033  0046B8  EC6F  F02C         	call	_Uart_WriteConstString
 21034                           
 21035                           ;app.c: 130: initMdm = 2;
 21036  0046BC  0E02               	movlw	2
 21037  0046BE                     L25:
 21038  0046BE  0101               	movlb	1	; () banked
 21039  0046C0  6FD4               	movwf	initGprsModem@initMdm& (0+255),b
 21040                           
 21041                           ;app.c: 131: break;
 21042  0046C2  D020               	goto	l2559
 21043  0046C4                     
 21044                           ; BSR set to: 1
 21045                           ;app.c: 133: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 21046                           
 21047                           ; BSR set to: 1
 21048  0046C4  0EA9               	movlw	low STR_30
 21049  0046C6  0100               	movlb	0	; () banked
 21050  0046C8  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21051  0046CA  0EFF               	movlw	high STR_30
 21052  0046CC  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21053  0046CE  0E01               	movlw	1
 21054  0046D0  EC6F  F02C         	call	_Uart_WriteConstString
 21055                           
 21056                           ;app.c: 134: initMdm = 3;
 21057  0046D4  0E03               	movlw	3
 21058  0046D6  0101               	movlb	1	; () banked
 21059  0046D8  6FD4               	movwf	initGprsModem@initMdm& (0+255),b
 21060                           
 21061                           ; BSR set to: 1
 21062                           ;app.c: 135: Led_SetLedStatus(1u, LED_STS_ON);
 21063  0046DA  0E01               	movlw	1
 21064  0046DC  0100               	movlb	0	; () banked
 21065  0046DE  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21066  0046E0  0E01               	movlw	1
 21067  0046E2  EC8E  F02E         	call	_Led_SetLedStatus
 21068                           
 21069                           ;app.c: 136: isInitialized = 1;
 21070  0046E6  0E01               	movlw	1
 21071  0046E8  0101               	movlb	1	; () banked
 21072  0046EA  6FD5               	movwf	initGprsModem@isInitialized& (0+255),b
 21073                           
 21074                           ; BSR set to: 1
 21075                           ;app.c: 140: }
 21076                           
 21077                           ; BSR set to: 1
 21078                           ;app.c: 139: break;
 21079                           
 21080                           ;app.c: 138: default:
 21081                           
 21082                           ;app.c: 137: break;
 21083  0046EC  D00B               	goto	l2559
 21084  0046EE                     l2553:
 21085                           
 21086                           ; BSR set to: 1
 21087  0046EE  0101               	movlb	1	; () banked
 21088  0046F0  51D4               	movf	initGprsModem@initMdm& (0+255),w,b
 21089                           
 21090                           ; Switch size 1, requested type "space"
 21091                           ; Number of cases is 3, Range of values is 0 to 2
 21092                           ; switch strategies available:
 21093                           ; Name         Instructions Cycles
 21094                           ; simple_byte           10     6 (average)
 21095                           ;	Chosen strategy is simple_byte
 21096  0046F2  0A00               	xorlw	0	; case 0
 21097  0046F4  B4D8               	btfsc	status,2,c
 21098  0046F6  D7BB               	goto	l2554
 21099  0046F8  0A01               	xorlw	1	; case 1
 21100  0046FA  B4D8               	btfsc	status,2,c
 21101  0046FC  D7D7               	goto	l2560
 21102  0046FE  0A03               	xorlw	3	; case 2
 21103  004700  B4D8               	btfsc	status,2,c
 21104  004702  D7E0               	goto	l2561
 21105  004704                     l2559:
 21106                           
 21107                           ;app.c: 141: return isInitialized;
 21108                           
 21109                           ; BSR set to: 1
 21110  004704  0101               	movlb	1	; () banked
 21111  004706  51D5               	movf	initGprsModem@isInitialized& (0+255),w,b
 21112  004708  0012               	return	
 21113  00470A                     __end_of_initGprsModem:
 21114                           	opt stack 0
 21115                           tosu	equ	0xFFF
 21116                           tosh	equ	0xFFE
 21117                           tosl	equ	0xFFD
 21118                           pclath	equ	0xFFA
 21119                           tblptru	equ	0xFF8
 21120                           tblptrh	equ	0xFF7
 21121                           tblptrl	equ	0xFF6
 21122                           tablat	equ	0xFF5
 21123                           prodh	equ	0xFF4
 21124                           prodl	equ	0xFF3
 21125                           intcon	equ	0xFF2
 21126                           intcon2	equ	0xFF1
 21127                           intcon3	equ	0xFF0
 21128                           indf0	equ	0xFEF
 21129                           postinc0	equ	0xFEE
 21130                           plusw0	equ	0xFEB
 21131                           fsr0h	equ	0xFEA
 21132                           fsr0l	equ	0xFE9
 21133                           wreg	equ	0xFE8
 21134                           indf1	equ	0xFE7
 21135                           postinc1	equ	0xFE6
 21136                           postdec1	equ	0xFE5
 21137                           plusw1	equ	0xFE3
 21138                           fsr1h	equ	0xFE2
 21139                           fsr1l	equ	0xFE1
 21140                           indf2	equ	0xFDF
 21141                           postinc2	equ	0xFDE
 21142                           postdec2	equ	0xFDD
 21143                           plusw2	equ	0xFDB
 21144                           fsr2h	equ	0xFDA
 21145                           fsr2l	equ	0xFD9
 21146                           status	equ	0xFD8
 21147                           
 21148 ;; *************** function _Mdm_SetSmsFormat *****************
 21149 ;; Defined at:
 21150 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21151 ;; Parameters:    Size  Location     Type
 21152 ;;  TextFormat      1    wreg     unsigned char 
 21153 ;; Auto vars:     Size  Location     Type
 21154 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 21155 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 21156 ;;  Index           1   35[BANK0 ] unsigned char 
 21157 ;; Return value:  Size  Location     Type
 21158 ;;                  1    wreg      void 
 21159 ;; Registers used:
 21160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21161 ;; Tracked objects:
 21162 ;;		On entry : 0/0
 21163 ;;		On exit  : 0/0
 21164 ;;		Unchanged: 0/0
 21165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21167 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21169 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21170 ;;Total ram usage:       22 bytes
 21171 ;; Hardware stack levels used:    1
 21172 ;; Hardware stack levels required when called:   13
 21173 ;; This function calls:
 21174 ;;		_Uart_WriteString
 21175 ;; This function is called by:
 21176 ;;		_initGprsModem
 21177 ;; This function uses a non-reentrant model
 21178 ;;
 21179                           
 21180                           	psect	text95
 21181  0055BC                     __ptext95:
 21182                           	opt stack 0
 21183  0055BC                     _Mdm_SetSmsFormat:
 21184                           	opt stack 13
 21185                           
 21186                           ; BSR set to: 1
 21187                           ;incstack = 0
 21188                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 21189  0055BC  0100               	movlb	0	; () banked
 21190  0055BE  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 21191                           
 21192                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 21193                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 21194  0055C0  0E00               	movlw	0
 21195  0055C2  0100               	movlb	0	; () banked
 21196  0055C4  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 21197                           
 21198                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 21199  0055C6  0E41               	movlw	65
 21200  0055C8  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 21201                           
 21202                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 21203  0055CA  0E54               	movlw	84
 21204  0055CC  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 21205                           
 21206                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 21207  0055CE  0E2B               	movlw	43
 21208  0055D0  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 21209                           
 21210                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 21211  0055D2  0E43               	movlw	67
 21212  0055D4  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 21213                           
 21214                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 21215  0055D6  0E4D               	movlw	77
 21216  0055D8  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 21217                           
 21218                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 21219  0055DA  0E47               	movlw	71
 21220  0055DC  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 21221                           
 21222                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 21223  0055DE  0E46               	movlw	70
 21224  0055E0  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 21225                           
 21226                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 21227  0055E2  0E3D               	movlw	61
 21228  0055E4  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 21229                           
 21230                           ; BSR set to: 0
 21231                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 21232  0055E6  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 21233  0055E8  A4D8               	btfss	status,2,c
 21234  0055EA  D002               	goto	l1121
 21235                           
 21236                           ; BSR set to: 0
 21237                           ;mdm_gsm_gprs.c: 854: {
 21238                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 21239  0055EC  0E31               	movlw	49
 21240  0055EE  D001               	goto	L26
 21241  0055F0                     l1121:
 21242                           
 21243                           ; BSR set to: 0
 21244                           ;mdm_gsm_gprs.c: 857: else
 21245                           ;mdm_gsm_gprs.c: 858: {
 21246                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 21247                           
 21248                           ; BSR set to: 0
 21249  0055F0  0E30               	movlw	48
 21250  0055F2                     L26:
 21251  0055F2  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 21252                           
 21253                           ; BSR set to: 0
 21254                           ;mdm_gsm_gprs.c: 860: }
 21255                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 21256  0055F4  0E0D               	movlw	13
 21257  0055F6  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 21258                           
 21259                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 21260  0055F8  0E00               	movlw	0
 21261  0055FA  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 21262                           
 21263                           ; BSR set to: 0
 21264                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 21265  0055FC  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 21266  0055FE  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 21267  005600  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 21268  005602  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 21269  005604  0E01               	movlw	1
 21270  005606  EC30  F02D         	call	_Uart_WriteString
 21271  00560A  0012               	return		;funcret
 21272  00560C                     __end_of_Mdm_SetSmsFormat:
 21273                           	opt stack 0
 21274                           tosu	equ	0xFFF
 21275                           tosh	equ	0xFFE
 21276                           tosl	equ	0xFFD
 21277                           pclath	equ	0xFFA
 21278                           tblptru	equ	0xFF8
 21279                           tblptrh	equ	0xFF7
 21280                           tblptrl	equ	0xFF6
 21281                           tablat	equ	0xFF5
 21282                           prodh	equ	0xFF4
 21283                           prodl	equ	0xFF3
 21284                           intcon	equ	0xFF2
 21285                           intcon2	equ	0xFF1
 21286                           intcon3	equ	0xFF0
 21287                           indf0	equ	0xFEF
 21288                           postinc0	equ	0xFEE
 21289                           plusw0	equ	0xFEB
 21290                           fsr0h	equ	0xFEA
 21291                           fsr0l	equ	0xFE9
 21292                           wreg	equ	0xFE8
 21293                           indf1	equ	0xFE7
 21294                           postinc1	equ	0xFE6
 21295                           postdec1	equ	0xFE5
 21296                           plusw1	equ	0xFE3
 21297                           fsr1h	equ	0xFE2
 21298                           fsr1l	equ	0xFE1
 21299                           indf2	equ	0xFDF
 21300                           postinc2	equ	0xFDE
 21301                           postdec2	equ	0xFDD
 21302                           plusw2	equ	0xFDB
 21303                           fsr2h	equ	0xFDA
 21304                           fsr2l	equ	0xFD9
 21305                           status	equ	0xFD8
 21306                           
 21307 ;; *************** function _blinkForSeconds *****************
 21308 ;; Defined at:
 21309 ;;		line 144 in file "../Source/c/04_App/app.c"
 21310 ;; Parameters:    Size  Location     Type
 21311 ;;  seconds         1    wreg     unsigned char 
 21312 ;;  blickTicks      2   51[BANK0 ] PTR unsigned int 
 21313 ;;		 -> MyApp_Task@blickTicks(2), 
 21314 ;; Auto vars:     Size  Location     Type
 21315 ;;  seconds         1   53[BANK0 ] unsigned char 
 21316 ;; Return value:  Size  Location     Type
 21317 ;;                  1    wreg      void 
 21318 ;; Registers used:
 21319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21320 ;; Tracked objects:
 21321 ;;		On entry : 0/0
 21322 ;;		On exit  : 0/0
 21323 ;;		Unchanged: 0/0
 21324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21325 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21326 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21328 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21329 ;;Total ram usage:        3 bytes
 21330 ;; Hardware stack levels used:    1
 21331 ;; Hardware stack levels required when called:   13
 21332 ;; This function calls:
 21333 ;;		_Led_SetLedStatus
 21334 ;;		_secondsAppTimer
 21335 ;; This function is called by:
 21336 ;;		_MyApp_Task
 21337 ;; This function uses a non-reentrant model
 21338 ;;
 21339                           
 21340                           	psect	text96
 21341  005B14                     __ptext96:
 21342                           	opt stack 0
 21343  005B14                     _blinkForSeconds:
 21344                           	opt stack 14
 21345                           
 21346                           ;incstack = 0
 21347                           ;blinkForSeconds@seconds stored from wreg
 21348  005B14  0100               	movlb	0	; () banked
 21349  005B16  6F95               	movwf	blinkForSeconds@seconds& (0+255),b
 21350                           
 21351                           ;app.c: 146: if (secondsAppTimer(seconds, blickTicks, 0))
 21352  005B18  C093  F08A         	movff	blinkForSeconds@blickTicks,secondsAppTimer@counter
 21353  005B1C  C094  F08B         	movff	blinkForSeconds@blickTicks+1,secondsAppTimer@counter+1
 21354  005B20  0E00               	movlw	0
 21355  005B22  0100               	movlb	0	; () banked
 21356  005B24  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21357  005B26  5195               	movf	blinkForSeconds@seconds& (0+255),w,b
 21358  005B28  EC46  F022         	call	_secondsAppTimer
 21359  005B2C  0900               	iorlw	0
 21360  005B2E  B4D8               	btfsc	status,2,c
 21361  005B30  D007               	goto	l2566
 21362                           
 21363                           ;app.c: 147: {
 21364                           ;app.c: 148: Led_SetLedStatus(1u, LED_STS_ON);
 21365  005B32  0E01               	movlw	1
 21366  005B34  0100               	movlb	0	; () banked
 21367  005B36  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21368  005B38  0E01               	movlw	1
 21369  005B3A  EC8E  F02E         	call	_Led_SetLedStatus
 21370                           
 21371                           ;app.c: 149: }
 21372  005B3E  0012               	return	
 21373  005B40                     l2566:
 21374                           
 21375                           ;app.c: 150: else
 21376                           ;app.c: 151: {
 21377                           ;app.c: 152: Led_SetLedStatus(1u, LED_STS_BLINK);
 21378  005B40  0E03               	movlw	3
 21379  005B42  0100               	movlb	0	; () banked
 21380  005B44  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21381  005B46  0E01               	movlw	1
 21382  005B48  EC8E  F02E         	call	_Led_SetLedStatus
 21383  005B4C  0012               	return	
 21384  005B4E                     __end_of_blinkForSeconds:
 21385                           	opt stack 0
 21386                           tosu	equ	0xFFF
 21387                           tosh	equ	0xFFE
 21388                           tosl	equ	0xFFD
 21389                           pclath	equ	0xFFA
 21390                           tblptru	equ	0xFF8
 21391                           tblptrh	equ	0xFF7
 21392                           tblptrl	equ	0xFF6
 21393                           tablat	equ	0xFF5
 21394                           prodh	equ	0xFF4
 21395                           prodl	equ	0xFF3
 21396                           intcon	equ	0xFF2
 21397                           intcon2	equ	0xFF1
 21398                           intcon3	equ	0xFF0
 21399                           indf0	equ	0xFEF
 21400                           postinc0	equ	0xFEE
 21401                           plusw0	equ	0xFEB
 21402                           fsr0h	equ	0xFEA
 21403                           fsr0l	equ	0xFE9
 21404                           wreg	equ	0xFE8
 21405                           indf1	equ	0xFE7
 21406                           postinc1	equ	0xFE6
 21407                           postdec1	equ	0xFE5
 21408                           plusw1	equ	0xFE3
 21409                           fsr1h	equ	0xFE2
 21410                           fsr1l	equ	0xFE1
 21411                           indf2	equ	0xFDF
 21412                           postinc2	equ	0xFDE
 21413                           postdec2	equ	0xFDD
 21414                           plusw2	equ	0xFDB
 21415                           fsr2h	equ	0xFDA
 21416                           fsr2l	equ	0xFD9
 21417                           status	equ	0xFD8
 21418                           
 21419 ;; *************** function _secondsAppTimer *****************
 21420 ;; Defined at:
 21421 ;;		line 85 in file "../Source/c/04_App/app.c"
 21422 ;; Parameters:    Size  Location     Type
 21423 ;;  seconds         1    wreg     unsigned char 
 21424 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 21425 ;;		 -> MyApp_Task@blickTicks(2), initGprsModem@modemCounter(2), 
 21426 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 21427 ;; Auto vars:     Size  Location     Type
 21428 ;;  seconds         1   47[BANK0 ] unsigned char 
 21429 ;;  destinationT    2   49[BANK0 ] unsigned int 
 21430 ;;  isExpired       1   48[BANK0 ] unsigned char 
 21431 ;; Return value:  Size  Location     Type
 21432 ;;                  1    wreg      unsigned char 
 21433 ;; Registers used:
 21434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21435 ;; Tracked objects:
 21436 ;;		On entry : 0/0
 21437 ;;		On exit  : 0/0
 21438 ;;		Unchanged: 0/0
 21439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21440 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21441 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21442 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21443 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21444 ;;Total ram usage:        9 bytes
 21445 ;; Hardware stack levels used:    1
 21446 ;; Hardware stack levels required when called:   12
 21447 ;; This function calls:
 21448 ;;		___lwdiv
 21449 ;;		___wmul
 21450 ;; This function is called by:
 21451 ;;		_initGprsModem
 21452 ;;		_blinkForSeconds
 21453 ;; This function uses a non-reentrant model
 21454 ;;
 21455                           
 21456                           	psect	text97
 21457  00448C                     __ptext97:
 21458                           	opt stack 0
 21459  00448C                     _secondsAppTimer:
 21460                           	opt stack 14
 21461                           
 21462                           ;incstack = 0
 21463                           ;secondsAppTimer@seconds stored from wreg
 21464  00448C  0100               	movlb	0	; () banked
 21465  00448E  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 21466                           
 21467                           ;app.c: 87: bool isExpired = 1;
 21468  004490  0E01               	movlw	1
 21469  004492  0100               	movlb	0	; () banked
 21470  004494  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21471                           
 21472                           ; BSR set to: 0
 21473                           ;app.c: 88: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(100));
 21474  004496  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 21475  00449A  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 21476  00449C  0E03               	movlw	3
 21477  00449E  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21478  0044A0  0EE8               	movlw	232
 21479  0044A2  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 21480  0044A4  EC14  F02F         	call	___wmul	;wreg free
 21481  0044A8  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 21482  0044AC  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 21483  0044B0  0E00               	movlw	0
 21484  0044B2  0100               	movlb	0	; () banked
 21485  0044B4  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21486  0044B6  0E64               	movlw	100
 21487  0044B8  6F85               	movwf	___lwdiv@divisor& (0+255),b
 21488  0044BA  EC3B  F02A         	call	___lwdiv	;wreg free
 21489  0044BE  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 21490  0044C2  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 21491                           
 21492                           ;app.c: 90: if (*counter < destinationTicks)
 21493  0044C6  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21494  0044CA  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21495  0044CE  0100               	movlb	0	; () banked
 21496  0044D0  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21497  0044D2  5CDE               	subwf	postinc2,w,c
 21498  0044D4  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21499  0044D6  58DE               	subwfb	postinc2,w,c
 21500  0044D8  B0D8               	btfsc	status,0,c
 21501  0044DA  D009               	goto	l2540
 21502                           
 21503                           ; BSR set to: 0
 21504                           ;app.c: 91: {
 21505                           ;app.c: 92: *counter += 1;
 21506  0044DC  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21507  0044E0  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21508  0044E4  2ADE               	incf	postinc2,f,c
 21509  0044E6  0E00               	movlw	0
 21510  0044E8  22DD               	addwfc	postdec2,f,c
 21511                           
 21512                           ; BSR set to: 0
 21513                           ;app.c: 93: isExpired = 0;
 21514  0044EA  0E00               	movlw	0
 21515  0044EC  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21516  0044EE                     l2540:
 21517                           
 21518                           ; BSR set to: 0
 21519                           ;app.c: 94: }
 21520                           ;app.c: 95: if (*counter == destinationTicks)
 21521                           
 21522                           ; BSR set to: 0
 21523  0044EE  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21524  0044F2  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21525  0044F6  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21526  0044F8  18DE               	xorwf	postinc2,w,c
 21527  0044FA  E117               	bnz	l13727
 21528  0044FC  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21529  0044FE  18DE               	xorwf	postinc2,w,c
 21530  004500  A4D8               	btfss	status,2,c
 21531  004502  D013               	goto	l2543
 21532                           
 21533                           ; BSR set to: 0
 21534                           ;app.c: 96: {
 21535                           ;app.c: 97: if (isCyclic)
 21536  004504  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 21537  004506  B4D8               	btfsc	status,2,c
 21538  004508  D008               	goto	l2542
 21539                           
 21540                           ; BSR set to: 0
 21541                           ;app.c: 98: {
 21542                           ;app.c: 99: *counter = 0;
 21543  00450A  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21544  00450E  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21545  004512  0E00               	movlw	0
 21546  004514  6EDE               	movwf	postinc2,c
 21547  004516  0E00               	movlw	0
 21548  004518  D007               	goto	L27
 21549  00451A                     l2542:
 21550                           
 21551                           ; BSR set to: 0
 21552                           ;app.c: 101: else
 21553                           ;app.c: 102: {
 21554                           ;app.c: 103: *counter = 0xFFFF;
 21555                           
 21556                           ; BSR set to: 0
 21557  00451A  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21558  00451E  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21559  004522  0EFF               	movlw	255
 21560  004524  6EDE               	movwf	postinc2,c
 21561  004526  0EFF               	movlw	255
 21562  004528                     L27:
 21563  004528  6EDD               	movwf	postdec2,c
 21564  00452A                     l2543:
 21565  00452A                     l13727:
 21566                           
 21567                           ; BSR set to: 0
 21568                           ;app.c: 104: }
 21569                           ;app.c: 105: }
 21570                           ;app.c: 106: return isExpired;
 21571  00452A  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 21572  00452C  0012               	return	
 21573  00452E                     __end_of_secondsAppTimer:
 21574                           	opt stack 0
 21575                           tosu	equ	0xFFF
 21576                           tosh	equ	0xFFE
 21577                           tosl	equ	0xFFD
 21578                           pclath	equ	0xFFA
 21579                           tblptru	equ	0xFF8
 21580                           tblptrh	equ	0xFF7
 21581                           tblptrl	equ	0xFF6
 21582                           tablat	equ	0xFF5
 21583                           prodh	equ	0xFF4
 21584                           prodl	equ	0xFF3
 21585                           intcon	equ	0xFF2
 21586                           intcon2	equ	0xFF1
 21587                           intcon3	equ	0xFF0
 21588                           indf0	equ	0xFEF
 21589                           postinc0	equ	0xFEE
 21590                           plusw0	equ	0xFEB
 21591                           fsr0h	equ	0xFEA
 21592                           fsr0l	equ	0xFE9
 21593                           wreg	equ	0xFE8
 21594                           indf1	equ	0xFE7
 21595                           postinc1	equ	0xFE6
 21596                           postdec1	equ	0xFE5
 21597                           plusw1	equ	0xFE3
 21598                           fsr1h	equ	0xFE2
 21599                           fsr1l	equ	0xFE1
 21600                           indf2	equ	0xFDF
 21601                           postinc2	equ	0xFDE
 21602                           postdec2	equ	0xFDD
 21603                           plusw2	equ	0xFDB
 21604                           fsr2h	equ	0xFDA
 21605                           fsr2l	equ	0xFD9
 21606                           status	equ	0xFD8
 21607                           
 21608 ;; *************** function _Mdm_RequestSmsData *****************
 21609 ;; Defined at:
 21610 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21611 ;; Parameters:    Size  Location     Type
 21612 ;;		None
 21613 ;; Auto vars:     Size  Location     Type
 21614 ;;		None
 21615 ;; Return value:  Size  Location     Type
 21616 ;;                  1    wreg      void 
 21617 ;; Registers used:
 21618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21619 ;; Tracked objects:
 21620 ;;		On entry : 0/0
 21621 ;;		On exit  : 0/0
 21622 ;;		Unchanged: 0/0
 21623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21628 ;;Total ram usage:        0 bytes
 21629 ;; Hardware stack levels used:    1
 21630 ;; Hardware stack levels required when called:   12
 21631 ;; This function calls:
 21632 ;;		_GenerateEvt
 21633 ;; This function is called by:
 21634 ;;		_MyApp_Task
 21635 ;; This function uses a non-reentrant model
 21636 ;;
 21637                           
 21638                           	psect	text98
 21639  0061DC                     __ptext98:
 21640                           	opt stack 0
 21641  0061DC                     _Mdm_RequestSmsData:
 21642                           	opt stack 15
 21643                           
 21644                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 21645                           
 21646                           ; BSR set to: 0
 21647                           ;incstack = 0
 21648  0061DC  0EDD               	movlw	low _GetSmsText
 21649  0061DE  0100               	movlb	0	; () banked
 21650  0061E0  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21651  0061E2  0E00               	movlw	high _GetSmsText
 21652  0061E4  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21653  0061E6  EC81  F030         	call	_GenerateEvt	;wreg free
 21654  0061EA  0012               	return		;funcret
 21655  0061EC                     __end_of_Mdm_RequestSmsData:
 21656                           	opt stack 0
 21657                           tosu	equ	0xFFF
 21658                           tosh	equ	0xFFE
 21659                           tosl	equ	0xFFD
 21660                           pclath	equ	0xFFA
 21661                           tblptru	equ	0xFF8
 21662                           tblptrh	equ	0xFF7
 21663                           tblptrl	equ	0xFF6
 21664                           tablat	equ	0xFF5
 21665                           prodh	equ	0xFF4
 21666                           prodl	equ	0xFF3
 21667                           intcon	equ	0xFF2
 21668                           intcon2	equ	0xFF1
 21669                           intcon3	equ	0xFF0
 21670                           indf0	equ	0xFEF
 21671                           postinc0	equ	0xFEE
 21672                           plusw0	equ	0xFEB
 21673                           fsr0h	equ	0xFEA
 21674                           fsr0l	equ	0xFE9
 21675                           wreg	equ	0xFE8
 21676                           indf1	equ	0xFE7
 21677                           postinc1	equ	0xFE6
 21678                           postdec1	equ	0xFE5
 21679                           plusw1	equ	0xFE3
 21680                           fsr1h	equ	0xFE2
 21681                           fsr1l	equ	0xFE1
 21682                           indf2	equ	0xFDF
 21683                           postinc2	equ	0xFDE
 21684                           postdec2	equ	0xFDD
 21685                           plusw2	equ	0xFDB
 21686                           fsr2h	equ	0xFDA
 21687                           fsr2l	equ	0xFD9
 21688                           status	equ	0xFD8
 21689                           
 21690 ;; *************** function _Mdm_IsSmsReceived *****************
 21691 ;; Defined at:
 21692 ;;		line 942 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21693 ;; Parameters:    Size  Location     Type
 21694 ;;		None
 21695 ;; Auto vars:     Size  Location     Type
 21696 ;;  Ret             1   33[BANK0 ] enum E8914
 21697 ;; Return value:  Size  Location     Type
 21698 ;;                  1    wreg      enum E8914
 21699 ;; Registers used:
 21700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21701 ;; Tracked objects:
 21702 ;;		On entry : 0/0
 21703 ;;		On exit  : 0/0
 21704 ;;		Unchanged: 0/0
 21705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21707 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21709 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21710 ;;Total ram usage:        1 bytes
 21711 ;; Hardware stack levels used:    1
 21712 ;; Hardware stack levels required when called:   12
 21713 ;; This function calls:
 21714 ;;		_ReceiveEvt
 21715 ;; This function is called by:
 21716 ;;		_MyApp_Task
 21717 ;; This function uses a non-reentrant model
 21718 ;;
 21719                           
 21720                           	psect	text99
 21721  005E9A                     __ptext99:
 21722                           	opt stack 0
 21723  005E9A                     _Mdm_IsSmsReceived:
 21724                           	opt stack 15
 21725                           
 21726                           ;mdm_gsm_gprs.c: 944: SmsRxStsType Ret = SmsNotReceived;
 21727                           
 21728                           ;incstack = 0
 21729  005E9A  0E00               	movlw	0
 21730  005E9C  0100               	movlb	0	; () banked
 21731  005E9E  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21732                           
 21733                           ; BSR set to: 0
 21734                           ;mdm_gsm_gprs.c: 947: if (ReceiveEvt(&SmsEvent))
 21735  005EA0  0EDE               	movlw	low _SmsEvent
 21736  005EA2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21737  005EA4  0E00               	movlw	high _SmsEvent
 21738  005EA6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21739  005EA8  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 21740  005EAC  0900               	iorlw	0
 21741  005EAE  B4D8               	btfsc	status,2,c
 21742  005EB0  D003               	goto	l1136
 21743                           
 21744                           ;mdm_gsm_gprs.c: 948: {
 21745                           ;mdm_gsm_gprs.c: 949: Ret = SmsReceived;
 21746  005EB2  0E01               	movlw	1
 21747  005EB4  0100               	movlb	0	; () banked
 21748  005EB6  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21749  005EB8                     l1136:
 21750                           
 21751                           ;mdm_gsm_gprs.c: 950: }
 21752                           ;mdm_gsm_gprs.c: 952: return Ret;
 21753  005EB8  0100               	movlb	0	; () banked
 21754  005EBA  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 21755  005EBC  0012               	return	
 21756  005EBE                     __end_of_Mdm_IsSmsReceived:
 21757                           	opt stack 0
 21758                           tosu	equ	0xFFF
 21759                           tosh	equ	0xFFE
 21760                           tosl	equ	0xFFD
 21761                           pclath	equ	0xFFA
 21762                           tblptru	equ	0xFF8
 21763                           tblptrh	equ	0xFF7
 21764                           tblptrl	equ	0xFF6
 21765                           tablat	equ	0xFF5
 21766                           prodh	equ	0xFF4
 21767                           prodl	equ	0xFF3
 21768                           intcon	equ	0xFF2
 21769                           intcon2	equ	0xFF1
 21770                           intcon3	equ	0xFF0
 21771                           indf0	equ	0xFEF
 21772                           postinc0	equ	0xFEE
 21773                           plusw0	equ	0xFEB
 21774                           fsr0h	equ	0xFEA
 21775                           fsr0l	equ	0xFE9
 21776                           wreg	equ	0xFE8
 21777                           indf1	equ	0xFE7
 21778                           postinc1	equ	0xFE6
 21779                           postdec1	equ	0xFE5
 21780                           plusw1	equ	0xFE3
 21781                           fsr1h	equ	0xFE2
 21782                           fsr1l	equ	0xFE1
 21783                           indf2	equ	0xFDF
 21784                           postinc2	equ	0xFDE
 21785                           postdec2	equ	0xFDD
 21786                           plusw2	equ	0xFDB
 21787                           fsr2h	equ	0xFDA
 21788                           fsr2l	equ	0xFD9
 21789                           status	equ	0xFD8
 21790                           
 21791 ;; *************** function _Mdm_IsRinging *****************
 21792 ;; Defined at:
 21793 ;;		line 1025 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21794 ;; Parameters:    Size  Location     Type
 21795 ;;		None
 21796 ;; Auto vars:     Size  Location     Type
 21797 ;;  Ret             1   33[BANK0 ] enum E8910
 21798 ;; Return value:  Size  Location     Type
 21799 ;;                  1    wreg      enum E8910
 21800 ;; Registers used:
 21801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21802 ;; Tracked objects:
 21803 ;;		On entry : 0/0
 21804 ;;		On exit  : 0/0
 21805 ;;		Unchanged: 0/0
 21806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21808 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21810 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21811 ;;Total ram usage:        1 bytes
 21812 ;; Hardware stack levels used:    1
 21813 ;; Hardware stack levels required when called:   12
 21814 ;; This function calls:
 21815 ;;		_ReceiveEvt
 21816 ;; This function is called by:
 21817 ;;		_MyApp_Task
 21818 ;; This function uses a non-reentrant model
 21819 ;;
 21820                           
 21821                           	psect	text100
 21822  005EBE                     __ptext100:
 21823                           	opt stack 0
 21824  005EBE                     _Mdm_IsRinging:
 21825                           	opt stack 15
 21826                           
 21827                           ;mdm_gsm_gprs.c: 1027: RingStsType Ret = PhoneNotRinging;
 21828                           
 21829                           ; BSR set to: 0
 21830                           ;incstack = 0
 21831  005EBE  0E00               	movlw	0
 21832  005EC0  0100               	movlb	0	; () banked
 21833  005EC2  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21834                           
 21835                           ; BSR set to: 0
 21836                           ;mdm_gsm_gprs.c: 1030: if (ReceiveEvt(&RingEvent))
 21837  005EC4  0EE0               	movlw	low _RingEvent
 21838  005EC6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21839  005EC8  0E00               	movlw	high _RingEvent
 21840  005ECA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21841  005ECC  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 21842  005ED0  0900               	iorlw	0
 21843  005ED2  B4D8               	btfsc	status,2,c
 21844  005ED4  D003               	goto	l1152
 21845                           
 21846                           ;mdm_gsm_gprs.c: 1031: {
 21847                           ;mdm_gsm_gprs.c: 1032: Ret = PhoneRinging;
 21848  005ED6  0E01               	movlw	1
 21849  005ED8  0100               	movlb	0	; () banked
 21850  005EDA  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21851  005EDC                     l1152:
 21852                           
 21853                           ;mdm_gsm_gprs.c: 1033: }
 21854                           ;mdm_gsm_gprs.c: 1035: return Ret;
 21855  005EDC  0100               	movlb	0	; () banked
 21856  005EDE  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21857  005EE0  0012               	return	
 21858  005EE2                     __end_of_Mdm_IsRinging:
 21859                           	opt stack 0
 21860                           tosu	equ	0xFFF
 21861                           tosh	equ	0xFFE
 21862                           tosl	equ	0xFFD
 21863                           pclath	equ	0xFFA
 21864                           tblptru	equ	0xFF8
 21865                           tblptrh	equ	0xFF7
 21866                           tblptrl	equ	0xFF6
 21867                           tablat	equ	0xFF5
 21868                           prodh	equ	0xFF4
 21869                           prodl	equ	0xFF3
 21870                           intcon	equ	0xFF2
 21871                           intcon2	equ	0xFF1
 21872                           intcon3	equ	0xFF0
 21873                           indf0	equ	0xFEF
 21874                           postinc0	equ	0xFEE
 21875                           plusw0	equ	0xFEB
 21876                           fsr0h	equ	0xFEA
 21877                           fsr0l	equ	0xFE9
 21878                           wreg	equ	0xFE8
 21879                           indf1	equ	0xFE7
 21880                           postinc1	equ	0xFE6
 21881                           postdec1	equ	0xFE5
 21882                           plusw1	equ	0xFE3
 21883                           fsr1h	equ	0xFE2
 21884                           fsr1l	equ	0xFE1
 21885                           indf2	equ	0xFDF
 21886                           postinc2	equ	0xFDE
 21887                           postdec2	equ	0xFDD
 21888                           plusw2	equ	0xFDB
 21889                           fsr2h	equ	0xFDA
 21890                           fsr2l	equ	0xFD9
 21891                           status	equ	0xFD8
 21892                           
 21893 ;; *************** function _Mdm_HangPhoneCall *****************
 21894 ;; Defined at:
 21895 ;;		line 997 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21896 ;; Parameters:    Size  Location     Type
 21897 ;;		None
 21898 ;; Auto vars:     Size  Location     Type
 21899 ;;		None
 21900 ;; Return value:  Size  Location     Type
 21901 ;;                  1    wreg      void 
 21902 ;; Registers used:
 21903 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21904 ;; Tracked objects:
 21905 ;;		On entry : 0/0
 21906 ;;		On exit  : 0/0
 21907 ;;		Unchanged: 0/0
 21908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21913 ;;Total ram usage:        0 bytes
 21914 ;; Hardware stack levels used:    1
 21915 ;; Hardware stack levels required when called:   13
 21916 ;; This function calls:
 21917 ;;		_Uart_WriteConstString
 21918 ;; This function is called by:
 21919 ;;		_MyApp_Task
 21920 ;; This function uses a non-reentrant model
 21921 ;;
 21922                           
 21923                           	psect	text101
 21924  006198                     __ptext101:
 21925                           	opt stack 0
 21926  006198                     _Mdm_HangPhoneCall:
 21927                           	opt stack 14
 21928                           
 21929                           ;mdm_gsm_gprs.c: 1000: Uart_WriteConstString(1, "ATH\r");
 21930                           
 21931                           ; BSR set to: 0
 21932                           ;incstack = 0
 21933  006198  0EEF               	movlw	low STR_6
 21934  00619A  0100               	movlb	0	; () banked
 21935  00619C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21936  00619E  0EFF               	movlw	high STR_6
 21937  0061A0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21938  0061A2  0E01               	movlw	1
 21939  0061A4  EC6F  F02C         	call	_Uart_WriteConstString
 21940  0061A8  0012               	return		;funcret
 21941  0061AA                     __end_of_Mdm_HangPhoneCall:
 21942                           	opt stack 0
 21943                           tosu	equ	0xFFF
 21944                           tosh	equ	0xFFE
 21945                           tosl	equ	0xFFD
 21946                           pclath	equ	0xFFA
 21947                           tblptru	equ	0xFF8
 21948                           tblptrh	equ	0xFF7
 21949                           tblptrl	equ	0xFF6
 21950                           tablat	equ	0xFF5
 21951                           prodh	equ	0xFF4
 21952                           prodl	equ	0xFF3
 21953                           intcon	equ	0xFF2
 21954                           intcon2	equ	0xFF1
 21955                           intcon3	equ	0xFF0
 21956                           indf0	equ	0xFEF
 21957                           postinc0	equ	0xFEE
 21958                           plusw0	equ	0xFEB
 21959                           fsr0h	equ	0xFEA
 21960                           fsr0l	equ	0xFE9
 21961                           wreg	equ	0xFE8
 21962                           indf1	equ	0xFE7
 21963                           postinc1	equ	0xFE6
 21964                           postdec1	equ	0xFE5
 21965                           plusw1	equ	0xFE3
 21966                           fsr1h	equ	0xFE2
 21967                           fsr1l	equ	0xFE1
 21968                           indf2	equ	0xFDF
 21969                           postinc2	equ	0xFDE
 21970                           postdec2	equ	0xFDD
 21971                           plusw2	equ	0xFDB
 21972                           fsr2h	equ	0xFDA
 21973                           fsr2l	equ	0xFD9
 21974                           status	equ	0xFD8
 21975                           
 21976 ;; *************** function _Mdm_GetSmsData *****************
 21977 ;; Defined at:
 21978 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21979 ;; Parameters:    Size  Location     Type
 21980 ;;  MessageText     2   39[BANK0 ] PTR unsigned char 
 21981 ;;		 -> MyApp_Task@smsText(50), 
 21982 ;;  MessageHeade    2   41[BANK0 ] PTR unsigned char 
 21983 ;;		 -> MyApp_Task@smsNumber(14), 
 21984 ;; Auto vars:     Size  Location     Type
 21985 ;;  GetSmsStatus    1   43[BANK0 ] enum E8906
 21986 ;; Return value:  Size  Location     Type
 21987 ;;                  1    wreg      enum E8906
 21988 ;; Registers used:
 21989 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21990 ;; Tracked objects:
 21991 ;;		On entry : 0/0
 21992 ;;		On exit  : 0/0
 21993 ;;		Unchanged: 0/0
 21994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21995 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21998 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21999 ;;Total ram usage:        5 bytes
 22000 ;; Hardware stack levels used:    1
 22001 ;; Hardware stack levels required when called:   12
 22002 ;; This function calls:
 22003 ;;		_ReceiveEvt
 22004 ;;		_StringCopy
 22005 ;; This function is called by:
 22006 ;;		_MyApp_Task
 22007 ;; This function uses a non-reentrant model
 22008 ;;
 22009                           
 22010                           	psect	text102
 22011  004D2C                     __ptext102:
 22012                           	opt stack 0
 22013  004D2C                     _Mdm_GetSmsData:
 22014                           	opt stack 15
 22015                           
 22016                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 22017                           
 22018                           ;incstack = 0
 22019  004D2C  0E00               	movlw	0
 22020  004D2E  0100               	movlb	0	; () banked
 22021  004D30  6F8B               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 22022                           
 22023                           ; BSR set to: 0
 22024                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 22025  004D32  0EDC               	movlw	low _SmsTxtReady
 22026  004D34  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22027  004D36  0E00               	movlw	high _SmsTxtReady
 22028  004D38  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22029  004D3A  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 22030  004D3E  0900               	iorlw	0
 22031  004D40  B4D8               	btfsc	status,2,c
 22032  004D42  D02D               	goto	l1129
 22033                           
 22034                           ;mdm_gsm_gprs.c: 898: {
 22035                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer,MessageText,Mdm_SmsRx.TextLen +
      +                           1);
 22036  004D44  0E50               	movlw	low (_Mdm_SmsRx+80)
 22037  004D46  0100               	movlb	0	; () banked
 22038  004D48  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22039  004D4A  0E07               	movlw	high (_Mdm_SmsRx+80)
 22040  004D4C  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22041  004D4E  C087  F07F         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 22042  004D52  C088  F080         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 22043  004D56  0E01               	movlw	1
 22044  004D58  0107               	movlb	7	; () banked
 22045  004D5A  2583               	addwf	(_Mdm_SmsRx+131)& (0+255),w,b
 22046  004D5C  0100               	movlb	0	; () banked
 22047  004D5E  6F81               	movwf	StringCopy@Len& (0+255),b
 22048  004D60  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22049  004D62  0E00               	movlw	0
 22050  004D64  2382               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 22051  004D66  EC50  F028         	call	_StringCopy	;wreg free
 22052                           
 22053                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, MessageHeader,14);
 22054  004D6A  0E15               	movlw	low (_Mdm_SmsRx+21)
 22055  004D6C  0100               	movlb	0	; () banked
 22056  004D6E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22057  004D70  0E07               	movlw	high (_Mdm_SmsRx+21)
 22058  004D72  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22059  004D74  C089  F07F         	movff	Mdm_GetSmsData@MessageHeader,StringCopy@DestStr
 22060  004D78  C08A  F080         	movff	Mdm_GetSmsData@MessageHeader+1,StringCopy@DestStr+1
 22061  004D7C  0E00               	movlw	0
 22062  004D7E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 22063  004D80  0E0E               	movlw	14
 22064  004D82  6F81               	movwf	StringCopy@Len& (0+255),b
 22065  004D84  EC50  F028         	call	_StringCopy	;wreg free
 22066                           
 22067                           ;mdm_gsm_gprs.c: 902: MessageHeader[13] = '\0';
 22068  004D88  0100               	movlb	0	; () banked
 22069  004D8A  EE20 F00D          	lfsr	2,13
 22070  004D8E  5189               	movf	Mdm_GetSmsData@MessageHeader& (0+255),w,b
 22071  004D90  26D9               	addwf	fsr2l,f,c
 22072  004D92  518A               	movf	(Mdm_GetSmsData@MessageHeader+1)& (0+255),w,b
 22073  004D94  22DA               	addwfc	fsr2h,f,c
 22074  004D96  0E00               	movlw	0
 22075  004D98  6EDF               	movwf	indf2,c
 22076                           
 22077                           ; BSR set to: 0
 22078                           ;mdm_gsm_gprs.c: 904: GetSmsStatus = SmsDataReady;
 22079  004D9A  0E01               	movlw	1
 22080  004D9C  6F8B               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 22081  004D9E                     l1129:
 22082                           
 22083                           ;mdm_gsm_gprs.c: 905: }
 22084                           ;mdm_gsm_gprs.c: 908: return GetSmsStatus;
 22085                           
 22086                           ; BSR set to: 0
 22087  004D9E  0100               	movlb	0	; () banked
 22088  004DA0  518B               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 22089  004DA2  0012               	return	
 22090  004DA4                     __end_of_Mdm_GetSmsData:
 22091                           	opt stack 0
 22092                           tosu	equ	0xFFF
 22093                           tosh	equ	0xFFE
 22094                           tosl	equ	0xFFD
 22095                           pclath	equ	0xFFA
 22096                           tblptru	equ	0xFF8
 22097                           tblptrh	equ	0xFF7
 22098                           tblptrl	equ	0xFF6
 22099                           tablat	equ	0xFF5
 22100                           prodh	equ	0xFF4
 22101                           prodl	equ	0xFF3
 22102                           intcon	equ	0xFF2
 22103                           intcon2	equ	0xFF1
 22104                           intcon3	equ	0xFF0
 22105                           indf0	equ	0xFEF
 22106                           postinc0	equ	0xFEE
 22107                           plusw0	equ	0xFEB
 22108                           fsr0h	equ	0xFEA
 22109                           fsr0l	equ	0xFE9
 22110                           wreg	equ	0xFE8
 22111                           indf1	equ	0xFE7
 22112                           postinc1	equ	0xFE6
 22113                           postdec1	equ	0xFE5
 22114                           plusw1	equ	0xFE3
 22115                           fsr1h	equ	0xFE2
 22116                           fsr1l	equ	0xFE1
 22117                           indf2	equ	0xFDF
 22118                           postinc2	equ	0xFDE
 22119                           postdec2	equ	0xFDD
 22120                           plusw2	equ	0xFDB
 22121                           fsr2h	equ	0xFDA
 22122                           fsr2l	equ	0xFD9
 22123                           status	equ	0xFD8
 22124                           
 22125 ;; *************** function _Led_SetLedBlinkTime *****************
 22126 ;; Defined at:
 22127 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 22128 ;; Parameters:    Size  Location     Type
 22129 ;;  Led             1    wreg     unsigned char 
 22130 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 22131 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 22132 ;; Auto vars:     Size  Location     Type
 22133 ;;  Led             1   33[BANK0 ] unsigned char 
 22134 ;; Return value:  Size  Location     Type
 22135 ;;                  1    wreg      void 
 22136 ;; Registers used:
 22137 ;;		wreg, status,2, status,0
 22138 ;; Tracked objects:
 22139 ;;		On entry : 0/0
 22140 ;;		On exit  : 0/0
 22141 ;;		Unchanged: 0/0
 22142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22143 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22144 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22146 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22147 ;;Total ram usage:        5 bytes
 22148 ;; Hardware stack levels used:    1
 22149 ;; Hardware stack levels required when called:   11
 22150 ;; This function calls:
 22151 ;;		Nothing
 22152 ;; This function is called by:
 22153 ;;		_MyApp_Task
 22154 ;; This function uses a non-reentrant model
 22155 ;;
 22156                           
 22157                           	psect	text103
 22158  005422                     __ptext103:
 22159                           	opt stack 0
 22160  005422                     _Led_SetLedBlinkTime:
 22161                           	opt stack 16
 22162                           
 22163                           ; BSR set to: 0
 22164                           ;incstack = 0
 22165                           ;Led_SetLedBlinkTime@Led stored from wreg
 22166  005422  0100               	movlb	0	; () banked
 22167  005424  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 22168                           
 22169                           ;led.c: 374: switch (Led)
 22170  005426  D01B               	goto	l2113
 22171  005428                     l2114:
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 22175  005428  C07D  F376         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 22176  00542C  C07E  F377         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 22177                           
 22178                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 22179  005430  C07F  F378         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 22180  005434  C080  F379         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 22181                           
 22182                           ;led.c: 379: break;
 22183  005438  0012               	return	
 22184  00543A                     l2116:
 22185                           
 22186                           ; BSR set to: 0
 22187                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 22188  00543A  C07D  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 22189  00543E  C07E  F36E         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 22190                           
 22191                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 22192  005442  C07F  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 22193  005446  C080  F370         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 22194                           
 22195                           ;led.c: 384: break;
 22196  00544A  0012               	return	
 22197  00544C                     l2117:
 22198                           
 22199                           ; BSR set to: 0
 22200                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 22201  00544C  C07D  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 22202  005450  C07E  F36E         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 22203                           
 22204                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 22205  005454  C07F  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 22206  005458  C080  F370         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 22207                           
 22208                           ; BSR set to: 0
 22209                           ;led.c: 393: }
 22210                           
 22211                           ; BSR set to: 0
 22212                           ;led.c: 392: break;
 22213                           
 22214                           ;led.c: 391: default:
 22215                           
 22216                           ;led.c: 389: break;
 22217  00545C  0012               	return	
 22218  00545E                     l2113:
 22219                           
 22220                           ; BSR set to: 0
 22221  00545E  0100               	movlb	0	; () banked
 22222  005460  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 22223                           
 22224                           ; Switch size 1, requested type "space"
 22225                           ; Number of cases is 3, Range of values is 1 to 3
 22226                           ; switch strategies available:
 22227                           ; Name         Instructions Cycles
 22228                           ; simple_byte           10     6 (average)
 22229                           ;	Chosen strategy is simple_byte
 22230  005462  0A01               	xorlw	1	; case 1
 22231  005464  B4D8               	btfsc	status,2,c
 22232  005466  D7E0               	goto	l2114
 22233  005468  0A03               	xorlw	3	; case 2
 22234  00546A  B4D8               	btfsc	status,2,c
 22235  00546C  D7E6               	goto	l2116
 22236  00546E  0A01               	xorlw	1	; case 3
 22237  005470  A4D8               	btfss	status,2,c
 22238  005472  0012               	return	
 22239  005474  D7EB               	goto	l2117
 22240  005476                     __end_of_Led_SetLedBlinkTime:
 22241                           	opt stack 0
 22242                           tosu	equ	0xFFF
 22243                           tosh	equ	0xFFE
 22244                           tosl	equ	0xFFD
 22245                           pclath	equ	0xFFA
 22246                           tblptru	equ	0xFF8
 22247                           tblptrh	equ	0xFF7
 22248                           tblptrl	equ	0xFF6
 22249                           tablat	equ	0xFF5
 22250                           prodh	equ	0xFF4
 22251                           prodl	equ	0xFF3
 22252                           intcon	equ	0xFF2
 22253                           intcon2	equ	0xFF1
 22254                           intcon3	equ	0xFF0
 22255                           indf0	equ	0xFEF
 22256                           postinc0	equ	0xFEE
 22257                           plusw0	equ	0xFEB
 22258                           fsr0h	equ	0xFEA
 22259                           fsr0l	equ	0xFE9
 22260                           wreg	equ	0xFE8
 22261                           indf1	equ	0xFE7
 22262                           postinc1	equ	0xFE6
 22263                           postdec1	equ	0xFE5
 22264                           plusw1	equ	0xFE3
 22265                           fsr1h	equ	0xFE2
 22266                           fsr1l	equ	0xFE1
 22267                           indf2	equ	0xFDF
 22268                           postinc2	equ	0xFDE
 22269                           postdec2	equ	0xFDD
 22270                           plusw2	equ	0xFDB
 22271                           fsr2h	equ	0xFDA
 22272                           fsr2l	equ	0xFD9
 22273                           status	equ	0xFD8
 22274                           
 22275 ;; *************** function _GetCallerNumber *****************
 22276 ;; Defined at:
 22277 ;;		line 1038 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22278 ;; Parameters:    Size  Location     Type
 22279 ;;		None
 22280 ;; Auto vars:     Size  Location     Type
 22281 ;;		None
 22282 ;; Return value:  Size  Location     Type
 22283 ;;                  2   35[BANK0 ] PTR unsigned char 
 22284 ;; Registers used:
 22285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22286 ;; Tracked objects:
 22287 ;;		On entry : 0/0
 22288 ;;		On exit  : 0/0
 22289 ;;		Unchanged: 0/0
 22290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22291 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22294 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22295 ;;Total ram usage:        2 bytes
 22296 ;; Hardware stack levels used:    1
 22297 ;; Hardware stack levels required when called:   12
 22298 ;; This function calls:
 22299 ;;		_ClearBuffer
 22300 ;;		_ReceiveEvt
 22301 ;; This function is called by:
 22302 ;;		_MyApp_Task
 22303 ;; This function uses a non-reentrant model
 22304 ;;
 22305                           
 22306                           	psect	text104
 22307  005B88                     __ptext104:
 22308                           	opt stack 0
 22309  005B88                     _GetCallerNumber:
 22310                           	opt stack 15
 22311                           
 22312                           ;mdm_gsm_gprs.c: 1040: if (!ReceiveEvt(&ClipEvent))
 22313                           
 22314                           ; BSR set to: 0
 22315                           ;incstack = 0
 22316  005B88  0EDF               	movlw	low _ClipEvent
 22317  005B8A  0100               	movlb	0	; () banked
 22318  005B8C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22319  005B8E  0E00               	movlw	high _ClipEvent
 22320  005B90  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22321  005B92  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 22322  005B96  0900               	iorlw	0
 22323  005B98  A4D8               	btfss	status,2,c
 22324  005B9A  D00B               	goto	l1156
 22325                           
 22326                           ;mdm_gsm_gprs.c: 1041: {
 22327                           ;mdm_gsm_gprs.c: 1042: ClearBuffer(callerNumber, 14);
 22328  005B9C  0E3D               	movlw	low _callerNumber
 22329  005B9E  0100               	movlb	0	; () banked
 22330  005BA0  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 22331  005BA2  0E03               	movlw	high _callerNumber
 22332  005BA4  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 22333  005BA6  0E00               	movlw	0
 22334  005BA8  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 22335  005BAA  0E0E               	movlw	14
 22336  005BAC  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 22337  005BAE  ECDF  F02D         	call	_ClearBuffer	;wreg free
 22338  005BB2                     l1156:
 22339                           
 22340                           ;mdm_gsm_gprs.c: 1043: }
 22341                           ;mdm_gsm_gprs.c: 1044: return callerNumber;
 22342  005BB2  0E3D               	movlw	low _callerNumber
 22343  005BB4  0100               	movlb	0	; () banked
 22344  005BB6  6F83               	movwf	?_GetCallerNumber& (0+255),b
 22345  005BB8  0E03               	movlw	high _callerNumber
 22346  005BBA  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 22347  005BBC  0012               	return	
 22348  005BBE                     __end_of_GetCallerNumber:
 22349                           	opt stack 0
 22350                           tosu	equ	0xFFF
 22351                           tosh	equ	0xFFE
 22352                           tosl	equ	0xFFD
 22353                           pclath	equ	0xFFA
 22354                           tblptru	equ	0xFF8
 22355                           tblptrh	equ	0xFF7
 22356                           tblptrl	equ	0xFF6
 22357                           tablat	equ	0xFF5
 22358                           prodh	equ	0xFF4
 22359                           prodl	equ	0xFF3
 22360                           intcon	equ	0xFF2
 22361                           intcon2	equ	0xFF1
 22362                           intcon3	equ	0xFF0
 22363                           indf0	equ	0xFEF
 22364                           postinc0	equ	0xFEE
 22365                           plusw0	equ	0xFEB
 22366                           fsr0h	equ	0xFEA
 22367                           fsr0l	equ	0xFE9
 22368                           wreg	equ	0xFE8
 22369                           indf1	equ	0xFE7
 22370                           postinc1	equ	0xFE6
 22371                           postdec1	equ	0xFE5
 22372                           plusw1	equ	0xFE3
 22373                           fsr1h	equ	0xFE2
 22374                           fsr1l	equ	0xFE1
 22375                           indf2	equ	0xFDF
 22376                           postinc2	equ	0xFDE
 22377                           postdec2	equ	0xFDD
 22378                           plusw2	equ	0xFDB
 22379                           fsr2h	equ	0xFDA
 22380                           fsr2l	equ	0xFD9
 22381                           status	equ	0xFD8
 22382                           
 22383 ;; *************** function _UartSetConfig *****************
 22384 ;; Defined at:
 22385 ;;		line 189 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22386 ;; Parameters:    Size  Location     Type
 22387 ;;		None
 22388 ;; Auto vars:     Size  Location     Type
 22389 ;;		None
 22390 ;; Return value:  Size  Location     Type
 22391 ;;                  1    wreg      void 
 22392 ;; Registers used:
 22393 ;;		wreg, status,2
 22394 ;; Tracked objects:
 22395 ;;		On entry : 0/0
 22396 ;;		On exit  : 0/0
 22397 ;;		Unchanged: 0/0
 22398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22403 ;;Total ram usage:        0 bytes
 22404 ;; Hardware stack levels used:    1
 22405 ;; Hardware stack levels required when called:   11
 22406 ;; This function calls:
 22407 ;;		Nothing
 22408 ;; This function is called by:
 22409 ;;		_Mdm_MainTask
 22410 ;; This function uses a non-reentrant model
 22411 ;;
 22412                           
 22413                           	psect	text105
 22414  00521A                     __ptext105:
 22415                           	opt stack 0
 22416  00521A                     _UartSetConfig:
 22417                           	opt stack 16
 22418                           
 22419                           ;mdm_gsm_gprs.c: 191: UartConfig.UartEnable = ((UINT8)(1));
 22420                           
 22421                           ; BSR set to: 0
 22422                           ;incstack = 0
 22423  00521A  0E01               	movlw	1
 22424  00521C  0103               	movlb	3	; () banked
 22425  00521E  6F28               	movwf	_UartConfig& (0+255),b
 22426                           
 22427                           ;mdm_gsm_gprs.c: 192: UartConfig.UartMode = ((UINT8)(0));
 22428  005220  0E00               	movlw	0
 22429  005222  6F29               	movwf	(_UartConfig+1)& (0+255),b
 22430                           
 22431                           ;mdm_gsm_gprs.c: 194: UartConfig.BaudRateMode = ((UINT8)(0));
 22432  005224  0E00               	movlw	0
 22433  005226  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 22434                           
 22435                           ;mdm_gsm_gprs.c: 199: UartConfig.HighBaudMode = ((UINT8)(0));
 22436  005228  0E00               	movlw	0
 22437  00522A  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 22438                           
 22439                           ;mdm_gsm_gprs.c: 203: UartConfig.Tx9bitMode = ((UINT8)(0));
 22440  00522C  0E00               	movlw	0
 22441  00522E  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 22442                           
 22443                           ;mdm_gsm_gprs.c: 204: UartConfig.Rx9bitMode = ((UINT8)(0));
 22444  005230  0E00               	movlw	0
 22445  005232  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 22446                           
 22447                           ;mdm_gsm_gprs.c: 205: UartConfig.TxEnable = ((UINT8)(1));
 22448  005234  0E01               	movlw	1
 22449  005236  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 22450                           
 22451                           ;mdm_gsm_gprs.c: 206: UartConfig.RxEnable = ((UINT8)(1));
 22452  005238  0E01               	movlw	1
 22453  00523A  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 22454                           
 22455                           ;mdm_gsm_gprs.c: 207: UartConfig.SendBreakEnable = ((UINT8)(0));
 22456  00523C  0E00               	movlw	0
 22457  00523E  6F30               	movwf	(_UartConfig+8)& (0+255),b
 22458                           
 22459                           ;mdm_gsm_gprs.c: 208: UartConfig.AutobaudEnable = ((UINT8)(0));
 22460  005240  0E00               	movlw	0
 22461  005242  6F31               	movwf	(_UartConfig+9)& (0+255),b
 22462                           
 22463                           ;mdm_gsm_gprs.c: 209: UartConfig.WakeUpEnable = ((UINT8)(0));
 22464  005244  0E00               	movlw	0
 22465  005246  6F32               	movwf	(_UartConfig+10)& (0+255),b
 22466                           
 22467                           ;mdm_gsm_gprs.c: 210: UartConfig.TxInterruptEnable = ((UINT8)(0));
 22468  005248  0E00               	movlw	0
 22469  00524A  6F33               	movwf	(_UartConfig+11)& (0+255),b
 22470                           
 22471                           ;mdm_gsm_gprs.c: 211: UartConfig.RxInterruptEnable = ((UINT8)(1));
 22472  00524C  0E01               	movlw	1
 22473  00524E  6F34               	movwf	(_UartConfig+12)& (0+255),b
 22474                           
 22475                           ;mdm_gsm_gprs.c: 212: UartConfig.McuBusClock = ((UINT32)(48000000));
 22476  005250  0E00               	movlw	0
 22477  005252  6F35               	movwf	(_UartConfig+13)& (0+255),b
 22478  005254  0E6C               	movlw	108
 22479  005256  6F36               	movwf	(_UartConfig+14)& (0+255),b
 22480  005258  0EDC               	movlw	220
 22481  00525A  6F37               	movwf	(_UartConfig+15)& (0+255),b
 22482  00525C  0E02               	movlw	2
 22483  00525E  6F38               	movwf	(_UartConfig+16)& (0+255),b
 22484                           
 22485                           ;mdm_gsm_gprs.c: 214: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 22486  005260  0E80               	movlw	128
 22487  005262  6F39               	movwf	(_UartConfig+17)& (0+255),b
 22488  005264  0E25               	movlw	37
 22489  005266  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 22490  005268  0E00               	movlw	0
 22491  00526A  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 22492  00526C  0E00               	movlw	0
 22493  00526E  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 22494                           
 22495                           ; BSR set to: 3
 22496  005270  0012               	return		;funcret
 22497  005272                     __end_of_UartSetConfig:
 22498                           	opt stack 0
 22499                           tosu	equ	0xFFF
 22500                           tosh	equ	0xFFE
 22501                           tosl	equ	0xFFD
 22502                           pclath	equ	0xFFA
 22503                           tblptru	equ	0xFF8
 22504                           tblptrh	equ	0xFF7
 22505                           tblptrl	equ	0xFF6
 22506                           tablat	equ	0xFF5
 22507                           prodh	equ	0xFF4
 22508                           prodl	equ	0xFF3
 22509                           intcon	equ	0xFF2
 22510                           intcon2	equ	0xFF1
 22511                           intcon3	equ	0xFF0
 22512                           indf0	equ	0xFEF
 22513                           postinc0	equ	0xFEE
 22514                           plusw0	equ	0xFEB
 22515                           fsr0h	equ	0xFEA
 22516                           fsr0l	equ	0xFE9
 22517                           wreg	equ	0xFE8
 22518                           indf1	equ	0xFE7
 22519                           postinc1	equ	0xFE6
 22520                           postdec1	equ	0xFE5
 22521                           plusw1	equ	0xFE3
 22522                           fsr1h	equ	0xFE2
 22523                           fsr1l	equ	0xFE1
 22524                           indf2	equ	0xFDF
 22525                           postinc2	equ	0xFDE
 22526                           postdec2	equ	0xFDD
 22527                           plusw2	equ	0xFDB
 22528                           fsr2h	equ	0xFDA
 22529                           fsr2l	equ	0xFD9
 22530                           status	equ	0xFD8
 22531                           
 22532 ;; *************** function _TurnOnModem *****************
 22533 ;; Defined at:
 22534 ;;		line 375 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22535 ;; Parameters:    Size  Location     Type
 22536 ;;		None
 22537 ;; Auto vars:     Size  Location     Type
 22538 ;;		None
 22539 ;; Return value:  Size  Location     Type
 22540 ;;                  1    wreg      void 
 22541 ;; Registers used:
 22542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22543 ;; Tracked objects:
 22544 ;;		On entry : 0/0
 22545 ;;		On exit  : 0/0
 22546 ;;		Unchanged: 0/0
 22547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22552 ;;Total ram usage:        0 bytes
 22553 ;; Hardware stack levels used:    1
 22554 ;; Hardware stack levels required when called:   12
 22555 ;; This function calls:
 22556 ;;		_GenerateEvt
 22557 ;; This function is called by:
 22558 ;;		_Mdm_MainTask
 22559 ;; This function uses a non-reentrant model
 22560 ;;
 22561                           
 22562                           	psect	text106
 22563  0056F4                     __ptext106:
 22564                           	opt stack 0
 22565  0056F4                     _TurnOnModem:
 22566                           	opt stack 15
 22567                           
 22568                           ;mdm_gsm_gprs.c: 377: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 22569                           ;mdm_gsm_gprs.c: 378: static UINT16 Counter = 0;
 22570                           ;mdm_gsm_gprs.c: 380: switch (TurnOnMdmState)
 22571                           
 22572                           ; BSR set to: 3
 22573                           ;incstack = 0
 22574  0056F4  D01B               	goto	l1009
 22575  0056F6                     
 22576                           ;mdm_gsm_gprs.c: 384: Counter++;
 22577  0056F6  0102               	movlb	2	; () banked
 22578  0056F8  4BD9               	infsnz	TurnOnModem@Counter& (0+255),f,b
 22579  0056FA  2BDA               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 22580                           
 22581                           ; BSR set to: 2
 22582                           ;mdm_gsm_gprs.c: 386: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 22583  0056FC  0EB8               	movlw	184
 22584  0056FE  5DD9               	subwf	TurnOnModem@Counter& (0+255),w,b
 22585  005700  0E0B               	movlw	11
 22586  005702  59DA               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 22587  005704  A0D8               	btfss	status,0,c
 22588  005706  0012               	return	
 22589                           
 22590                           ; BSR set to: 2
 22591                           ;mdm_gsm_gprs.c: 387: {
 22592                           ;mdm_gsm_gprs.c: 389: TurnOnMdmState = TurnOnModuleReq;
 22593  005708  0E01               	movlw	1
 22594  00570A  0101               	movlb	1	; () banked
 22595  00570C  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 22596                           
 22597                           ; BSR set to: 1
 22598                           ;mdm_gsm_gprs.c: 390: }
 22599                           ;mdm_gsm_gprs.c: 391: break;
 22600  00570E  0012               	return	
 22601  005710                     
 22602                           ; BSR set to: 1
 22603                           ;mdm_gsm_gprs.c: 395: GenerateEvt(&MdmOnOffPulseRequest);
 22604                           
 22605                           ; BSR set to: 1
 22606  005710  0EE2               	movlw	low _MdmOnOffPulseRequest
 22607  005712  0100               	movlb	0	; () banked
 22608  005714  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22609  005716  0E00               	movlw	high _MdmOnOffPulseRequest
 22610  005718  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22611  00571A  EC81  F030         	call	_GenerateEvt	;wreg free
 22612                           
 22613                           ;mdm_gsm_gprs.c: 397: MdmStatus = ModemOn;
 22614  00571E  0E01               	movlw	1
 22615  005720  0100               	movlb	0	; () banked
 22616  005722  6FD3               	movwf	_MdmStatus& (0+255),b
 22617                           
 22618                           ; BSR set to: 0
 22619                           ;mdm_gsm_gprs.c: 399: TurnOnMdmState = Stop;
 22620  005724  0E02               	movlw	2
 22621  005726  0101               	movlb	1	; () banked
 22622  005728  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 22623                           
 22624                           ; BSR set to: 1
 22625                           ;mdm_gsm_gprs.c: 407: }
 22626                           
 22627                           ; BSR set to: 1
 22628                           ;mdm_gsm_gprs.c: 406: break;
 22629                           
 22630                           ;mdm_gsm_gprs.c: 405: default:
 22631                           
 22632                           ; BSR set to: 1
 22633                           ;mdm_gsm_gprs.c: 403: break;
 22634                           
 22635                           ;mdm_gsm_gprs.c: 402: case Stop:
 22636                           
 22637                           ;mdm_gsm_gprs.c: 400: break;
 22638  00572A  0012               	return	
 22639  00572C                     l1009:
 22640                           
 22641                           ; BSR set to: 1
 22642  00572C  0101               	movlb	1	; () banked
 22643  00572E  51F4               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 22644                           
 22645                           ; Switch size 1, requested type "space"
 22646                           ; Number of cases is 3, Range of values is 0 to 2
 22647                           ; switch strategies available:
 22648                           ; Name         Instructions Cycles
 22649                           ; simple_byte           10     6 (average)
 22650                           ;	Chosen strategy is simple_byte
 22651  005730  0A00               	xorlw	0	; case 0
 22652  005732  B4D8               	btfsc	status,2,c
 22653  005734  D7E0               	goto	l1010
 22654  005736  0A01               	xorlw	1	; case 1
 22655  005738  B4D8               	btfsc	status,2,c
 22656  00573A  D7EA               	goto	l1013
 22657  00573C  0A03               	xorlw	3	; case 2
 22658  00573E  0012               	return	
 22659  005740                     __end_of_TurnOnModem:
 22660                           	opt stack 0
 22661                           tosu	equ	0xFFF
 22662                           tosh	equ	0xFFE
 22663                           tosl	equ	0xFFD
 22664                           pclath	equ	0xFFA
 22665                           tblptru	equ	0xFF8
 22666                           tblptrh	equ	0xFF7
 22667                           tblptrl	equ	0xFF6
 22668                           tablat	equ	0xFF5
 22669                           prodh	equ	0xFF4
 22670                           prodl	equ	0xFF3
 22671                           intcon	equ	0xFF2
 22672                           intcon2	equ	0xFF1
 22673                           intcon3	equ	0xFF0
 22674                           indf0	equ	0xFEF
 22675                           postinc0	equ	0xFEE
 22676                           plusw0	equ	0xFEB
 22677                           fsr0h	equ	0xFEA
 22678                           fsr0l	equ	0xFE9
 22679                           wreg	equ	0xFE8
 22680                           indf1	equ	0xFE7
 22681                           postinc1	equ	0xFE6
 22682                           postdec1	equ	0xFE5
 22683                           plusw1	equ	0xFE3
 22684                           fsr1h	equ	0xFE2
 22685                           fsr1l	equ	0xFE1
 22686                           indf2	equ	0xFDF
 22687                           postinc2	equ	0xFDE
 22688                           postdec2	equ	0xFDD
 22689                           plusw2	equ	0xFDB
 22690                           fsr2h	equ	0xFDA
 22691                           fsr2l	equ	0xFD9
 22692                           status	equ	0xFD8
 22693                           
 22694 ;; *************** function _SendSmsSm *****************
 22695 ;; Defined at:
 22696 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22697 ;; Parameters:    Size  Location     Type
 22698 ;;		None
 22699 ;; Auto vars:     Size  Location     Type
 22700 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 22701 ;; Return value:  Size  Location     Type
 22702 ;;                  1    wreg      void 
 22703 ;; Registers used:
 22704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22705 ;; Tracked objects:
 22706 ;;		On entry : 0/0
 22707 ;;		On exit  : 0/0
 22708 ;;		Unchanged: 0/0
 22709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22711 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22712 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22713 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22714 ;;Total ram usage:       52 bytes
 22715 ;; Hardware stack levels used:    1
 22716 ;; Hardware stack levels required when called:   14
 22717 ;; This function calls:
 22718 ;;		_OsTmr_GetTimerStatus
 22719 ;;		_OsTmr_StartTimer
 22720 ;;		_ReceiveEvt
 22721 ;;		_StringCopy
 22722 ;;		_Uart_WriteStringLen
 22723 ;; This function is called by:
 22724 ;;		_Mdm_MainTask
 22725 ;; This function uses a non-reentrant model
 22726 ;;
 22727                           
 22728                           	psect	text107
 22729  0019F2                     __ptext107:
 22730                           	opt stack 0
 22731  0019F2                     _SendSmsSm:
 22732                           	opt stack 13
 22733                           
 22734                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 22735                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 22736                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 22737                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 22738                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 22739                           
 22740                           ;incstack = 0
 22741  0019F2  0E03               	movlw	3
 22742  0019F4  0100               	movlb	0	; () banked
 22743  0019F6  19D3               	xorwf	_MdmStatus& (0+255),w,b
 22744  0019F8  A4D8               	btfss	status,2,c
 22745  0019FA  0012               	return	
 22746  0019FC  D0C1               	goto	l1091
 22747  0019FE                     
 22748                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 22749                           
 22750                           ; BSR set to: 0
 22751  0019FE  0EE1               	movlw	low _SendSmsEvent
 22752  001A00  0100               	movlb	0	; () banked
 22753  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22754  001A04  0E00               	movlw	high _SendSmsEvent
 22755  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22756  001A08  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 22757  001A0C  0900               	iorlw	0
 22758  001A0E  B4D8               	btfsc	status,2,c
 22759  001A10  0012               	return	
 22760                           
 22761                           ;mdm_gsm_gprs.c: 671: {
 22762                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 22763  001A12  0E01               	movlw	1
 22764  001A14  0101               	movlb	1	; () banked
 22765  001A16  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22766                           
 22767                           ; BSR set to: 1
 22768                           ;mdm_gsm_gprs.c: 674: }
 22769                           ;mdm_gsm_gprs.c: 675: break;
 22770  001A18  0012               	return	
 22771  001A1A                     
 22772                           ; BSR set to: 1
 22773                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 22774                           
 22775                           ; BSR set to: 1
 22776  001A1A  0ECD               	movlw	low STR_5
 22777  001A1C  0100               	movlb	0	; () banked
 22778  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22779  001A20  0EFF               	movlw	high STR_5
 22780  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22781  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 22782  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22783  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 22784  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22785  001A2C  0E00               	movlw	0
 22786  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 22787  001A30  0E09               	movlw	9
 22788  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 22789  001A34  EC50  F028         	call	_StringCopy	;wreg free
 22790                           
 22791                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 22792  001A38  0EB8               	movlw	low _PhoneNumber
 22793  001A3A  0100               	movlb	0	; () banked
 22794  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22795  001A3E  0E04               	movlw	high _PhoneNumber
 22796  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22797  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 22798  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22799  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 22800  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22801  001A4A  C0D4  F081         	movff	_PhoneNumbLen,StringCopy@Len
 22802  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22803  001A50  EC50  F028         	call	_StringCopy	;wreg free
 22804                           
 22805                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 22806  001A54  0100               	movlb	0	; () banked
 22807  001A56  51D4               	movf	_PhoneNumbLen& (0+255),w,b
 22808  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 22809  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 22810  001A5C  0E09               	movlw	9
 22811  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 22812  001A60  0E00               	movlw	0
 22813  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 22814  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 22815  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 22816  001A68  6ED9               	movwf	fsr2l,c
 22817  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 22818  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 22819  001A6E  6EDA               	movwf	fsr2h,c
 22820  001A70  0E22               	movlw	34
 22821  001A72  6EDF               	movwf	indf2,c
 22822                           
 22823                           ; BSR set to: 0
 22824                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 22825  001A74  51D4               	movf	_PhoneNumbLen& (0+255),w,b
 22826  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 22827  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 22828  001A7A  0E0A               	movlw	10
 22829  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 22830  001A7E  0E00               	movlw	0
 22831  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 22832  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 22833  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 22834  001A86  6ED9               	movwf	fsr2l,c
 22835  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 22836  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 22837  001A8C  6EDA               	movwf	fsr2h,c
 22838  001A8E  0E0D               	movlw	13
 22839  001A90  6EDF               	movwf	indf2,c
 22840                           
 22841                           ; BSR set to: 0
 22842                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 22843  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 22844  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22845  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 22846  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22847  001A9A  51D4               	movf	_PhoneNumbLen& (0+255),w,b
 22848  001A9C  0F0B               	addlw	11
 22849  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22850  001AA0  0E01               	movlw	1
 22851  001AA2  ECD2  F02C         	call	_Uart_WriteStringLen
 22852                           
 22853                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 22854  001AA6  0EE7               	movlw	low SendSmsSm@SwTimer
 22855  001AA8  0100               	movlb	0	; () banked
 22856  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 22857  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 22858  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 22859  001AB0  0EC4               	movlw	196
 22860  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 22861  001AB4  0E09               	movlw	9
 22862  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 22863  001AB8  0E00               	movlw	0
 22864  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 22865  001ABC  0E00               	movlw	0
 22866  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 22867  001AC0  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 22868                           
 22869                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 22870  001AC4  0E05               	movlw	5
 22871  001AC6  0101               	movlb	1	; () banked
 22872  001AC8  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22873                           
 22874                           ; BSR set to: 1
 22875                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 22876  001ACA  0E02               	movlw	2
 22877  001ACC  6FEF               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 22878                           
 22879                           ;mdm_gsm_gprs.c: 691: break;
 22880  001ACE  0012               	return	
 22881  001AD0                     
 22882                           ; BSR set to: 1
 22883                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 22884                           
 22885                           ; BSR set to: 1
 22886  001AD0  0E0A               	movlw	10
 22887  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 22888                           
 22889                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 22890  001AD4  0E0D               	movlw	13
 22891  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 22892                           
 22893                           ; BSR set to: 1
 22894                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 22895  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 22896  001ADA  0100               	movlb	0	; () banked
 22897  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22898  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 22899  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22900  001AE2  0E02               	movlw	2
 22901  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22902  001AE6  0E01               	movlw	1
 22903  001AE8  ECD2  F02C         	call	_Uart_WriteStringLen
 22904                           
 22905                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 22906  001AEC  0E03               	movlw	3
 22907  001AEE  0101               	movlb	1	; () banked
 22908  001AF0  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22909                           
 22910                           ;mdm_gsm_gprs.c: 701: break;
 22911  001AF2  0012               	return	
 22912  001AF4                     
 22913                           ; BSR set to: 1
 22914                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 22915                           
 22916                           ; BSR set to: 1
 22917  001AF4  0E3C               	movlw	low _NewStringReceived
 22918  001AF6  0100               	movlb	0	; () banked
 22919  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22920  001AFA  0E00               	movlw	high _NewStringReceived
 22921  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22922  001AFE  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 22923  001B02  0900               	iorlw	0
 22924  001B04  B4D8               	btfsc	status,2,c
 22925  001B06  0012               	return	
 22926                           
 22927                           ;mdm_gsm_gprs.c: 706: {
 22928                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 22929  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 22930  001B0C  0A3E               	xorlw	62
 22931  001B0E  A4D8               	btfss	status,2,c
 22932  001B10  0012               	return	
 22933                           
 22934                           ;mdm_gsm_gprs.c: 709: {
 22935                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 22936  001B12  0E04               	movlw	4
 22937  001B14  0101               	movlb	1	; () banked
 22938  001B16  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22939                           
 22940                           ; BSR set to: 1
 22941                           ;mdm_gsm_gprs.c: 712: }
 22942                           ;mdm_gsm_gprs.c: 713: }
 22943                           ;mdm_gsm_gprs.c: 714: break;
 22944                           
 22945                           ; BSR set to: 1
 22946  001B18  0012               	return	
 22947  001B1A                     
 22948                           ; BSR set to: 1
 22949                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 22950                           
 22951                           ; BSR set to: 1
 22952  001B1A  0EC4               	movlw	low _MessageText
 22953  001B1C  0100               	movlb	0	; () banked
 22954  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22955  001B20  0E07               	movlw	high _MessageText
 22956  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22957  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 22958  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22959  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 22960  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22961  001B2C  C0D5  F081         	movff	_SmsLen,StringCopy@Len
 22962  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22963  001B32  EC50  F028         	call	_StringCopy	;wreg free
 22964                           
 22965                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 22966  001B36  0100               	movlb	0	; () banked
 22967  001B38  51D5               	movf	_SmsLen& (0+255),w,b
 22968  001B3A  0D01               	mullw	1
 22969  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 22970  001B3E  24F3               	addwf	prodl,w,c
 22971  001B40  6ED9               	movwf	fsr2l,c
 22972  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 22973  001B44  20F4               	addwfc	prodh,w,c
 22974  001B46  6EDA               	movwf	fsr2h,c
 22975  001B48  0E1A               	movlw	26
 22976  001B4A  6EDF               	movwf	indf2,c
 22977                           
 22978                           ; BSR set to: 0
 22979                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 22980  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 22981  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22982  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 22983  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22984  001B54  29D5               	incf	_SmsLen& (0+255),w,b
 22985  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22986  001B58  0E01               	movlw	1
 22987  001B5A  ECD2  F02C         	call	_Uart_WriteStringLen
 22988                           
 22989                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 22990  001B5E  0E00               	movlw	0
 22991  001B60  0101               	movlb	1	; () banked
 22992  001B62  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22993                           
 22994                           ;mdm_gsm_gprs.c: 725: break;
 22995  001B64  0012               	return	
 22996  001B66                     
 22997                           ; BSR set to: 1
 22998                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 22999                           
 23000                           ; BSR set to: 1
 23001  001B66  0EE7               	movlw	low SendSmsSm@SwTimer
 23002  001B68  0100               	movlb	0	; () banked
 23003  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 23004  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 23005  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 23006  001B70  ECFB  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 23007  001B74  06E8               	decf	wreg,f,c
 23008  001B76  A4D8               	btfss	status,2,c
 23009  001B78  0012               	return	
 23010                           
 23011                           ;mdm_gsm_gprs.c: 730: {
 23012                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 23013  001B7A  C1EF  F1F0         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 23014                           
 23015                           ;mdm_gsm_gprs.c: 738: }
 23016                           
 23017                           ;mdm_gsm_gprs.c: 737: break;
 23018                           
 23019                           ;mdm_gsm_gprs.c: 736: default:
 23020                           
 23021                           ;mdm_gsm_gprs.c: 733: }
 23022                           ;mdm_gsm_gprs.c: 734: break;
 23023  001B7E  0012               	return	
 23024  001B80                     l1091:
 23025  001B80  0101               	movlb	1	; () banked
 23026  001B82  51F0               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 23027                           
 23028                           ; Switch size 1, requested type "space"
 23029                           ; Number of cases is 6, Range of values is 0 to 5
 23030                           ; switch strategies available:
 23031                           ; Name         Instructions Cycles
 23032                           ; simple_byte           19    10 (average)
 23033                           ;	Chosen strategy is simple_byte
 23034  001B84  0A00               	xorlw	0	; case 0
 23035  001B86  B4D8               	btfsc	status,2,c
 23036  001B88  D73A               	goto	l1092
 23037  001B8A  0A01               	xorlw	1	; case 1
 23038  001B8C  B4D8               	btfsc	status,2,c
 23039  001B8E  D745               	goto	l1095
 23040  001B90  0A03               	xorlw	3	; case 2
 23041  001B92  B4D8               	btfsc	status,2,c
 23042  001B94  D79D               	goto	l1096
 23043  001B96  0A01               	xorlw	1	; case 3
 23044  001B98  B4D8               	btfsc	status,2,c
 23045  001B9A  D7AC               	goto	l1097
 23046  001B9C  0A07               	xorlw	7	; case 4
 23047  001B9E  B4D8               	btfsc	status,2,c
 23048  001BA0  D7BC               	goto	l1100
 23049  001BA2  0A01               	xorlw	1	; case 5
 23050  001BA4  A4D8               	btfss	status,2,c
 23051                           
 23052                           ; BSR set to: 1
 23053  001BA6  0012               	return	
 23054  001BA8  D7DE               	goto	l1101
 23055  001BAA                     __end_of_SendSmsSm:
 23056                           	opt stack 0
 23057                           tosu	equ	0xFFF
 23058                           tosh	equ	0xFFE
 23059                           tosl	equ	0xFFD
 23060                           pclath	equ	0xFFA
 23061                           tblptru	equ	0xFF8
 23062                           tblptrh	equ	0xFF7
 23063                           tblptrl	equ	0xFF6
 23064                           tablat	equ	0xFF5
 23065                           prodh	equ	0xFF4
 23066                           prodl	equ	0xFF3
 23067                           intcon	equ	0xFF2
 23068                           intcon2	equ	0xFF1
 23069                           intcon3	equ	0xFF0
 23070                           indf0	equ	0xFEF
 23071                           postinc0	equ	0xFEE
 23072                           plusw0	equ	0xFEB
 23073                           fsr0h	equ	0xFEA
 23074                           fsr0l	equ	0xFE9
 23075                           wreg	equ	0xFE8
 23076                           indf1	equ	0xFE7
 23077                           postinc1	equ	0xFE6
 23078                           postdec1	equ	0xFE5
 23079                           plusw1	equ	0xFE3
 23080                           fsr1h	equ	0xFE2
 23081                           fsr1l	equ	0xFE1
 23082                           indf2	equ	0xFDF
 23083                           postinc2	equ	0xFDE
 23084                           postdec2	equ	0xFDD
 23085                           plusw2	equ	0xFDB
 23086                           fsr2h	equ	0xFDA
 23087                           fsr2l	equ	0xFD9
 23088                           status	equ	0xFD8
 23089                           
 23090 ;; *************** function _Uart_WriteStringLen *****************
 23091 ;; Defined at:
 23092 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23093 ;; Parameters:    Size  Location     Type
 23094 ;;  Module          1    wreg     unsigned char 
 23095 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 23096 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 23097 ;;  Len             1   34[BANK0 ] unsigned char 
 23098 ;; Auto vars:     Size  Location     Type
 23099 ;;  Module          1   36[BANK0 ] unsigned char 
 23100 ;;  Index           1   35[BANK0 ] unsigned char 
 23101 ;; Return value:  Size  Location     Type
 23102 ;;                  1    wreg      void 
 23103 ;; Registers used:
 23104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23105 ;; Tracked objects:
 23106 ;;		On entry : 0/0
 23107 ;;		On exit  : 0/0
 23108 ;;		Unchanged: 0/0
 23109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23110 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23111 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23113 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23114 ;;Total ram usage:        5 bytes
 23115 ;; Hardware stack levels used:    1
 23116 ;; Hardware stack levels required when called:   12
 23117 ;; This function calls:
 23118 ;;		_UartTxBufferStatus
 23119 ;;		_UartWriteByte
 23120 ;; This function is called by:
 23121 ;;		_SendSmsSm
 23122 ;;		_GsmGprsTerminal
 23123 ;; This function uses a non-reentrant model
 23124 ;;
 23125                           
 23126                           	psect	text108
 23127  0059A4                     __ptext108:
 23128                           	opt stack 0
 23129  0059A4                     _Uart_WriteStringLen:
 23130                           	opt stack 14
 23131                           
 23132                           ;incstack = 0
 23133                           ;Uart_WriteStringLen@Module stored from wreg
 23134  0059A4  0100               	movlb	0	; () banked
 23135  0059A6  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 23136                           
 23137                           ;uart_drv.c: 544: UINT8 Index;
 23138                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 23139  0059A8  0E00               	movlw	0
 23140  0059AA  0100               	movlb	0	; () banked
 23141  0059AC  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 23142  0059AE  D015               	goto	l715
 23143  0059B0                     
 23144                           ; BSR set to: 0
 23145                           ;uart_drv.c: 547: {
 23146                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 23147                           
 23148                           ; BSR set to: 0
 23149  0059B0  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 23150  0059B4  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 23151  0059B8  50DF               	movf	indf2,w,c
 23152  0059BA  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 23153  0059BC  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 23154  0059BE  ECF9  F02F         	call	_UartWriteByte
 23155                           
 23156                           ;uart_drv.c: 551: StringToWrite++;
 23157  0059C2  0100               	movlb	0	; () banked
 23158  0059C4  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 23159  0059C6  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 23160  0059C8                     
 23161                           ; BSR set to: 0
 23162                           
 23163                           ; BSR set to: 0
 23164  0059C8  0100               	movlb	0	; () banked
 23165  0059CA  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 23166  0059CC  EC06  F02B         	call	_UartTxBufferStatus
 23167  0059D0  06E8               	decf	wreg,f,c
 23168  0059D2  B4D8               	btfsc	status,2,c
 23169  0059D4  D7F9               	goto	l718
 23170  0059D6  0100               	movlb	0	; () banked
 23171  0059D8  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 23172  0059DA                     l715:
 23173                           
 23174                           ; BSR set to: 0
 23175                           
 23176                           ; BSR set to: 0
 23177  0059DA  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 23178  0059DC  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 23179  0059DE  B0D8               	btfsc	status,0,c
 23180  0059E0  0012               	return	
 23181  0059E2  D7E6               	goto	l716
 23182  0059E4                     __end_of_Uart_WriteStringLen:
 23183                           	opt stack 0
 23184                           tosu	equ	0xFFF
 23185                           tosh	equ	0xFFE
 23186                           tosl	equ	0xFFD
 23187                           pclath	equ	0xFFA
 23188                           tblptru	equ	0xFF8
 23189                           tblptrh	equ	0xFF7
 23190                           tblptrl	equ	0xFF6
 23191                           tablat	equ	0xFF5
 23192                           prodh	equ	0xFF4
 23193                           prodl	equ	0xFF3
 23194                           intcon	equ	0xFF2
 23195                           intcon2	equ	0xFF1
 23196                           intcon3	equ	0xFF0
 23197                           indf0	equ	0xFEF
 23198                           postinc0	equ	0xFEE
 23199                           plusw0	equ	0xFEB
 23200                           fsr0h	equ	0xFEA
 23201                           fsr0l	equ	0xFE9
 23202                           wreg	equ	0xFE8
 23203                           indf1	equ	0xFE7
 23204                           postinc1	equ	0xFE6
 23205                           postdec1	equ	0xFE5
 23206                           plusw1	equ	0xFE3
 23207                           fsr1h	equ	0xFE2
 23208                           fsr1l	equ	0xFE1
 23209                           indf2	equ	0xFDF
 23210                           postinc2	equ	0xFDE
 23211                           postdec2	equ	0xFDD
 23212                           plusw2	equ	0xFDB
 23213                           fsr2h	equ	0xFDA
 23214                           fsr2l	equ	0xFD9
 23215                           status	equ	0xFD8
 23216                           
 23217 ;; *************** function _ModemEvtParser *****************
 23218 ;; Defined at:
 23219 ;;		line 498 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23220 ;; Parameters:    Size  Location     Type
 23221 ;;		None
 23222 ;; Auto vars:     Size  Location     Type
 23223 ;;  CallReadyStr   10   48[BANK0 ] unsigned char [10]
 23224 ;;  SmsString       5   63[BANK0 ] unsigned char [5]
 23225 ;;  ClipString      5   58[BANK0 ] unsigned char [5]
 23226 ;;  RingString      4   68[BANK0 ] unsigned char [4]
 23227 ;;  CompareIdx      1   73[BANK0 ] unsigned char 
 23228 ;;  Match           1   72[BANK0 ] unsigned char 
 23229 ;; Return value:  Size  Location     Type
 23230 ;;                  1    wreg      void 
 23231 ;; Registers used:
 23232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23233 ;; Tracked objects:
 23234 ;;		On entry : 0/0
 23235 ;;		On exit  : 0/0
 23236 ;;		Unchanged: 0/0
 23237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23239 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23241 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23242 ;;Total ram usage:       26 bytes
 23243 ;; Hardware stack levels used:    1
 23244 ;; Hardware stack levels required when called:   12
 23245 ;; This function calls:
 23246 ;;		_GenerateEvt
 23247 ;;		_ReceiveEvt
 23248 ;;		_StringCompare
 23249 ;;		_StringCopy
 23250 ;;		_Uart_ClearRxBuffer
 23251 ;; This function is called by:
 23252 ;;		_Mdm_MainTask
 23253 ;; This function uses a non-reentrant model
 23254 ;;
 23255                           
 23256                           	psect	text109
 23257  001BAA                     __ptext109:
 23258                           	opt stack 0
 23259  001BAA                     _ModemEvtParser:
 23260                           	opt stack 15
 23261                           
 23262                           ;mdm_gsm_gprs.c: 500: UINT8 RingString[] = {'R','I','N','G'};
 23263                           
 23264                           ; BSR set to: 0
 23265                           ;incstack = 0
 23266  001BAA  C3C8  F0A4         	movff	ModemEvtParser@F9091,ModemEvtParser@RingString
 23267  001BAE  C3C9  F0A5         	movff	ModemEvtParser@F9091+1,ModemEvtParser@RingString+1
 23268  001BB2  C3CA  F0A6         	movff	ModemEvtParser@F9091+2,ModemEvtParser@RingString+2
 23269  001BB6  C3CB  F0A7         	movff	ModemEvtParser@F9091+3,ModemEvtParser@RingString+3
 23270                           
 23271                           ;mdm_gsm_gprs.c: 501: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 23272  001BBA  EE23  F0C3         	lfsr	2,ModemEvtParser@F9093
 23273  001BBE  EE10  F09A         	lfsr	1,ModemEvtParser@ClipString
 23274  001BC2  0E04               	movlw	4
 23275  001BC4                     u13301:
 23276  001BC4  CFDB FFE3          	movff	plusw2,plusw1
 23277  001BC8  06E8               	decf	wreg,f,c
 23278  001BCA  E2FC               	bc	u13301
 23279                           
 23280                           ;mdm_gsm_gprs.c: 502: UINT8 SmsString[] = {'+','C','M','T','I'};
 23281  001BCC  EE23  F0BE         	lfsr	2,ModemEvtParser@F9095
 23282  001BD0  EE10  F09F         	lfsr	1,ModemEvtParser@SmsString
 23283  001BD4  0E04               	movlw	4
 23284  001BD6                     u13311:
 23285  001BD6  CFDB FFE3          	movff	plusw2,plusw1
 23286  001BDA  06E8               	decf	wreg,f,c
 23287  001BDC  E2FC               	bc	u13311
 23288                           
 23289                           ;mdm_gsm_gprs.c: 503: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 23290  001BDE  EE24  F0F0         	lfsr	2,ModemEvtParser@F9097
 23291  001BE2  EE10  F090         	lfsr	1,ModemEvtParser@CallReadyString
 23292  001BE6  0E09               	movlw	9
 23293  001BE8                     u13321:
 23294  001BE8  CFDB FFE3          	movff	plusw2,plusw1
 23295  001BEC  06E8               	decf	wreg,f,c
 23296  001BEE  E2FC               	bc	u13321
 23297                           
 23298                           ;mdm_gsm_gprs.c: 504: UINT8 CompareIdx = 0;
 23299  001BF0  0E00               	movlw	0
 23300  001BF2  0100               	movlb	0	; () banked
 23301  001BF4  6FA9               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23302                           
 23303                           ; BSR set to: 0
 23304                           ;mdm_gsm_gprs.c: 505: UINT8 Match = 0;
 23305  001BF6  0E00               	movlw	0
 23306  001BF8  6FA8               	movwf	ModemEvtParser@Match& (0+255),b
 23307                           
 23308                           ; BSR set to: 0
 23309                           ;mdm_gsm_gprs.c: 508: if (ReceiveEvt(&NewMdmEvtParserRequest))
 23310  001BFA  0E3B               	movlw	low _NewMdmEvtParserRequest
 23311  001BFC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23312  001BFE  0E00               	movlw	high _NewMdmEvtParserRequest
 23313  001C00  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23314  001C02  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 23315  001C06  0900               	iorlw	0
 23316  001C08  B4D8               	btfsc	status,2,c
 23317  001C0A  0012               	return	
 23318                           
 23319                           ;mdm_gsm_gprs.c: 509: {
 23320                           ;mdm_gsm_gprs.c: 510: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 23321  001C0C  0E00               	movlw	0
 23322  001C0E  0100               	movlb	0	; () banked
 23323  001C10  6FA9               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23324  001C12                     l13933:
 23325                           
 23326                           ; BSR set to: 0
 23327  001C12  0E03               	movlw	3
 23328  001C14  65A9               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 23329  001C16  D077               	goto	l1052
 23330  001C18  D086               	goto	u13390
 23331  001C1A                     
 23332                           ; BSR set to: 0
 23333                           ;mdm_gsm_gprs.c: 516: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 23334                           
 23335                           ; BSR set to: 0
 23336  001C1A  0EA4               	movlw	low ModemEvtParser@RingString
 23337  001C1C  6F85               	movwf	StringCompare@String1& (0+255),b
 23338  001C1E  0E00               	movlw	high ModemEvtParser@RingString
 23339  001C20  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23340  001C22  0E58               	movlw	low _RxBuffer
 23341  001C24  6F87               	movwf	StringCompare@String2& (0+255),b
 23342  001C26  0E0C               	movlw	high _RxBuffer
 23343  001C28  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23344  001C2A  0E00               	movlw	0
 23345  001C2C  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23346  001C2E  0E04               	movlw	4
 23347  001C30  6F89               	movwf	StringCompare@Len& (0+255),b
 23348  001C32  EC65  F02A         	call	_StringCompare	;wreg free
 23349  001C36  0900               	iorlw	0
 23350  001C38  B4D8               	btfsc	status,2,c
 23351  001C3A  D072               	goto	l1055
 23352                           
 23353                           ;mdm_gsm_gprs.c: 517: {
 23354                           ;mdm_gsm_gprs.c: 519: GenerateEvt(&RingEvent);
 23355  001C3C  0EE0               	movlw	low _RingEvent
 23356  001C3E  0100               	movlb	0	; () banked
 23357  001C40  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23358  001C42  0E00               	movlw	high _RingEvent
 23359  001C44  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23360  001C46  EC81  F030         	call	_GenerateEvt	;wreg free
 23361  001C4A  D043               	goto	l13957
 23362  001C4C                     
 23363                           ; BSR set to: 0
 23364                           ;mdm_gsm_gprs.c: 527: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 23365                           
 23366                           ; BSR set to: 0
 23367  001C4C  0E9A               	movlw	low ModemEvtParser@ClipString
 23368  001C4E  6F85               	movwf	StringCompare@String1& (0+255),b
 23369  001C50  0E00               	movlw	high ModemEvtParser@ClipString
 23370  001C52  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23371  001C54  0E58               	movlw	low _RxBuffer
 23372  001C56  6F87               	movwf	StringCompare@String2& (0+255),b
 23373  001C58  0E0C               	movlw	high _RxBuffer
 23374  001C5A  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23375  001C5C  0E00               	movlw	0
 23376  001C5E  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23377  001C60  0E05               	movlw	5
 23378  001C62  6F89               	movwf	StringCompare@Len& (0+255),b
 23379  001C64  EC65  F02A         	call	_StringCompare	;wreg free
 23380  001C68  0900               	iorlw	0
 23381  001C6A  B4D8               	btfsc	status,2,c
 23382  001C6C  D059               	goto	l1055
 23383                           
 23384                           ;mdm_gsm_gprs.c: 528: {
 23385                           ;mdm_gsm_gprs.c: 529: StringCopy(RxBuffer + 8, callerNumber, 13);
 23386  001C6E  0E60               	movlw	low (_RxBuffer+8)
 23387  001C70  0100               	movlb	0	; () banked
 23388  001C72  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23389  001C74  0E0C               	movlw	high (_RxBuffer+8)
 23390  001C76  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23391  001C78  0E3D               	movlw	low _callerNumber
 23392  001C7A  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23393  001C7C  0E03               	movlw	high _callerNumber
 23394  001C7E  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23395  001C80  0E00               	movlw	0
 23396  001C82  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 23397  001C84  0E0D               	movlw	13
 23398  001C86  6F81               	movwf	StringCopy@Len& (0+255),b
 23399  001C88  EC50  F028         	call	_StringCopy	;wreg free
 23400                           
 23401                           ;mdm_gsm_gprs.c: 530: callerNumber[13] = '\0';
 23402  001C8C  0E00               	movlw	0
 23403  001C8E  0103               	movlb	3	; () banked
 23404  001C90  6F4A               	movwf	(_callerNumber+13)& (0+255),b
 23405                           
 23406                           ; BSR set to: 3
 23407                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 23408  001C92  0EDF               	movlw	low _ClipEvent
 23409  001C94  0100               	movlb	0	; () banked
 23410  001C96  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23411  001C98  0E00               	movlw	high _ClipEvent
 23412  001C9A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23413  001C9C  EC81  F030         	call	_GenerateEvt	;wreg free
 23414  001CA0  D018               	goto	l13957
 23415  001CA2                     
 23416                           ; BSR set to: 0
 23417                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 23418                           
 23419                           ; BSR set to: 0
 23420  001CA2  0E9F               	movlw	low ModemEvtParser@SmsString
 23421  001CA4  6F85               	movwf	StringCompare@String1& (0+255),b
 23422  001CA6  0E00               	movlw	high ModemEvtParser@SmsString
 23423  001CA8  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23424  001CAA  0E58               	movlw	low _RxBuffer
 23425  001CAC  6F87               	movwf	StringCompare@String2& (0+255),b
 23426  001CAE  0E0C               	movlw	high _RxBuffer
 23427  001CB0  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23428  001CB2  0E00               	movlw	0
 23429  001CB4  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23430  001CB6  0E05               	movlw	5
 23431  001CB8  6F89               	movwf	StringCompare@Len& (0+255),b
 23432  001CBA  EC65  F02A         	call	_StringCompare	;wreg free
 23433  001CBE  0900               	iorlw	0
 23434  001CC0  B4D8               	btfsc	status,2,c
 23435  001CC2  D02E               	goto	l1055
 23436                           
 23437                           ;mdm_gsm_gprs.c: 541: {
 23438                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 23439  001CC4  0EDE               	movlw	low _SmsEvent
 23440  001CC6  0100               	movlb	0	; () banked
 23441  001CC8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23442  001CCA  0E00               	movlw	high _SmsEvent
 23443  001CCC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23444  001CCE  EC81  F030         	call	_GenerateEvt	;wreg free
 23445  001CD2                     l13957:
 23446                           
 23447                           ;mdm_gsm_gprs.c: 545: Match = 1;
 23448  001CD2  0E01               	movlw	1
 23449  001CD4  0100               	movlb	0	; () banked
 23450  001CD6  D015               	goto	L28
 23451  001CD8                     
 23452                           ; BSR set to: 0
 23453                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 23454                           
 23455                           ; BSR set to: 0
 23456  001CD8  0E90               	movlw	low ModemEvtParser@CallReadyString
 23457  001CDA  6F85               	movwf	StringCompare@String1& (0+255),b
 23458  001CDC  0E00               	movlw	high ModemEvtParser@CallReadyString
 23459  001CDE  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23460  001CE0  0E58               	movlw	low _RxBuffer
 23461  001CE2  6F87               	movwf	StringCompare@String2& (0+255),b
 23462  001CE4  0E0C               	movlw	high _RxBuffer
 23463  001CE6  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23464  001CE8  0E00               	movlw	0
 23465  001CEA  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23466  001CEC  0E0A               	movlw	10
 23467  001CEE  6F89               	movwf	StringCompare@Len& (0+255),b
 23468  001CF0  EC65  F02A         	call	_StringCompare	;wreg free
 23469  001CF4  0900               	iorlw	0
 23470  001CF6  B4D8               	btfsc	status,2,c
 23471  001CF8  D013               	goto	l1055
 23472                           
 23473                           ;mdm_gsm_gprs.c: 552: {
 23474                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 23475  001CFA  0E02               	movlw	2
 23476  001CFC  0100               	movlb	0	; () banked
 23477  001CFE  6FD3               	movwf	_MdmStatus& (0+255),b
 23478                           
 23479                           ;mdm_gsm_gprs.c: 556: Match = 1;
 23480  001D00  0E01               	movlw	1
 23481  001D02                     L28:
 23482  001D02  6FA8               	movwf	ModemEvtParser@Match& (0+255),b
 23483                           
 23484                           ; BSR set to: 0
 23485                           ;mdm_gsm_gprs.c: 562: }
 23486                           
 23487                           ; BSR set to: 0
 23488                           ;mdm_gsm_gprs.c: 561: break;
 23489                           
 23490                           ;mdm_gsm_gprs.c: 560: default:
 23491                           
 23492                           ; BSR set to: 0
 23493                           ;mdm_gsm_gprs.c: 557: }
 23494                           ;mdm_gsm_gprs.c: 558: break;
 23495  001D04  D00D               	goto	l1055
 23496  001D06                     l1052:
 23497                           
 23498                           ; BSR set to: 0
 23499                           
 23500                           ; BSR set to: 0
 23501  001D06  51A9               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 23502                           
 23503                           ; Switch size 1, requested type "space"
 23504                           ; Number of cases is 4, Range of values is 0 to 3
 23505                           ; switch strategies available:
 23506                           ; Name         Instructions Cycles
 23507                           ; simple_byte           13     7 (average)
 23508                           ;	Chosen strategy is simple_byte
 23509  001D08  0A00               	xorlw	0	; case 0
 23510  001D0A  B4D8               	btfsc	status,2,c
 23511  001D0C  D786               	goto	l1053
 23512  001D0E  0A01               	xorlw	1	; case 1
 23513  001D10  B4D8               	btfsc	status,2,c
 23514  001D12  D7C7               	goto	l1058
 23515  001D14  0A03               	xorlw	3	; case 2
 23516  001D16  B4D8               	btfsc	status,2,c
 23517  001D18  D7DF               	goto	l1060
 23518  001D1A  0A01               	xorlw	1	; case 3
 23519  001D1C  B4D8               	btfsc	status,2,c
 23520  001D1E  D796               	goto	l1056
 23521  001D20                     l1055:
 23522                           
 23523                           ; BSR set to: 0
 23524  001D20  0100               	movlb	0	; () banked
 23525  001D22  2BA9               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 23526  001D24  D776               	goto	l13933
 23527  001D26                     u13390:
 23528                           
 23529                           ; BSR set to: 0
 23530                           ;mdm_gsm_gprs.c: 563: }
 23531                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 23532                           
 23533                           ; BSR set to: 0
 23534  001D26  05A8               	decf	ModemEvtParser@Match& (0+255),w,b
 23535  001D28  A4D8               	btfss	status,2,c
 23536  001D2A  0012               	return	
 23537                           
 23538                           ; BSR set to: 0
 23539                           ;mdm_gsm_gprs.c: 567: {
 23540                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 23541  001D2C  ECFA  F02D         	call	_Uart_ClearRxBuffer	;wreg free
 23542  001D30  0012               	return	
 23543  001D32                     __end_of_ModemEvtParser:
 23544                           	opt stack 0
 23545                           tosu	equ	0xFFF
 23546                           tosh	equ	0xFFE
 23547                           tosl	equ	0xFFD
 23548                           pclath	equ	0xFFA
 23549                           tblptru	equ	0xFF8
 23550                           tblptrh	equ	0xFF7
 23551                           tblptrl	equ	0xFF6
 23552                           tablat	equ	0xFF5
 23553                           prodh	equ	0xFF4
 23554                           prodl	equ	0xFF3
 23555                           intcon	equ	0xFF2
 23556                           intcon2	equ	0xFF1
 23557                           intcon3	equ	0xFF0
 23558                           indf0	equ	0xFEF
 23559                           postinc0	equ	0xFEE
 23560                           plusw0	equ	0xFEB
 23561                           fsr0h	equ	0xFEA
 23562                           fsr0l	equ	0xFE9
 23563                           wreg	equ	0xFE8
 23564                           indf1	equ	0xFE7
 23565                           postinc1	equ	0xFE6
 23566                           postdec1	equ	0xFE5
 23567                           plusw1	equ	0xFE3
 23568                           fsr1h	equ	0xFE2
 23569                           fsr1l	equ	0xFE1
 23570                           indf2	equ	0xFDF
 23571                           postinc2	equ	0xFDE
 23572                           postdec2	equ	0xFDD
 23573                           plusw2	equ	0xFDB
 23574                           fsr2h	equ	0xFDA
 23575                           fsr2l	equ	0xFD9
 23576                           status	equ	0xFD8
 23577                           
 23578 ;; *************** function _Uart_ClearRxBuffer *****************
 23579 ;; Defined at:
 23580 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23581 ;; Parameters:    Size  Location     Type
 23582 ;;		None
 23583 ;; Auto vars:     Size  Location     Type
 23584 ;;  Index           2   29[BANK0 ] unsigned short 
 23585 ;; Return value:  Size  Location     Type
 23586 ;;                  1    wreg      void 
 23587 ;; Registers used:
 23588 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23589 ;; Tracked objects:
 23590 ;;		On entry : 0/0
 23591 ;;		On exit  : 0/0
 23592 ;;		Unchanged: 0/0
 23593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23595 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23597 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23598 ;;Total ram usage:        2 bytes
 23599 ;; Hardware stack levels used:    1
 23600 ;; Hardware stack levels required when called:   11
 23601 ;; This function calls:
 23602 ;;		Nothing
 23603 ;; This function is called by:
 23604 ;;		_ModemEvtParser
 23605 ;; This function uses a non-reentrant model
 23606 ;;
 23607                           
 23608                           	psect	text110
 23609  005BF4                     __ptext110:
 23610                           	opt stack 0
 23611  005BF4                     _Uart_ClearRxBuffer:
 23612                           	opt stack 15
 23613                           
 23614                           ;uart_drv.c: 567: UINT16 Index = 0;
 23615                           
 23616                           ;incstack = 0
 23617  005BF4  0E00               	movlw	0
 23618  005BF6  0100               	movlb	0	; () banked
 23619  005BF8  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23620  005BFA  0E00               	movlw	0
 23621  005BFC  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23622                           
 23623                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 23624  005BFE  0E00               	movlw	0
 23625  005C00  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23626  005C02  0E00               	movlw	0
 23627  005C04  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23628  005C06                     l13225:
 23629                           
 23630                           ; BSR set to: 0
 23631  005C06  0E90               	movlw	144
 23632  005C08  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23633  005C0A  0E01               	movlw	1
 23634  005C0C  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23635  005C0E  B0D8               	btfsc	status,0,c
 23636  005C10  0012               	return	
 23637                           
 23638                           ; BSR set to: 0
 23639                           ;uart_drv.c: 571: {
 23640                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 23641                           
 23642                           ; BSR set to: 0
 23643                           
 23644                           ; BSR set to: 0
 23645  005C12  0E58               	movlw	low _RxBuffer
 23646  005C14  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23647  005C16  6ED9               	movwf	fsr2l,c
 23648  005C18  0E0C               	movlw	high _RxBuffer
 23649  005C1A  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23650  005C1C  6EDA               	movwf	fsr2h,c
 23651  005C1E  0E00               	movlw	0
 23652  005C20  6EDF               	movwf	indf2,c
 23653                           
 23654                           ; BSR set to: 0
 23655  005C22  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 23656  005C24  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 23657  005C26  D7EF               	goto	l13225
 23658  005C28                     __end_of_Uart_ClearRxBuffer:
 23659                           	opt stack 0
 23660                           tosu	equ	0xFFF
 23661                           tosh	equ	0xFFE
 23662                           tosl	equ	0xFFD
 23663                           pclath	equ	0xFFA
 23664                           tblptru	equ	0xFF8
 23665                           tblptrh	equ	0xFF7
 23666                           tblptrl	equ	0xFF6
 23667                           tablat	equ	0xFF5
 23668                           prodh	equ	0xFF4
 23669                           prodl	equ	0xFF3
 23670                           intcon	equ	0xFF2
 23671                           intcon2	equ	0xFF1
 23672                           intcon3	equ	0xFF0
 23673                           indf0	equ	0xFEF
 23674                           postinc0	equ	0xFEE
 23675                           plusw0	equ	0xFEB
 23676                           fsr0h	equ	0xFEA
 23677                           fsr0l	equ	0xFE9
 23678                           wreg	equ	0xFE8
 23679                           indf1	equ	0xFE7
 23680                           postinc1	equ	0xFE6
 23681                           postdec1	equ	0xFE5
 23682                           plusw1	equ	0xFE3
 23683                           fsr1h	equ	0xFE2
 23684                           fsr1l	equ	0xFE1
 23685                           indf2	equ	0xFDF
 23686                           postinc2	equ	0xFDE
 23687                           postdec2	equ	0xFDD
 23688                           plusw2	equ	0xFDB
 23689                           fsr2h	equ	0xFDA
 23690                           fsr2l	equ	0xFD9
 23691                           status	equ	0xFD8
 23692                           
 23693 ;; *************** function _StringCompare *****************
 23694 ;; Defined at:
 23695 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 23696 ;; Parameters:    Size  Location     Type
 23697 ;;  String1         2   37[BANK0 ] PTR unsigned char 
 23698 ;;		 -> MyApp_Task@smsNumber(14), MyApp_Task@smsText(50), MyApp_Task@phone(14), ModemEvtParser@CallReadyString(10), 
 23699 ;;		 -> ModemEvtParser@SmsString(5), ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 23700 ;;  String2         2   39[BANK0 ] PTR unsigned char 
 23701 ;;		 -> MyApp_Task@cmpString(3), MyApp_Task@phone(14), callerNumber(14), RxBuffer(400), 
 23702 ;;  Len             2   41[BANK0 ] unsigned short 
 23703 ;; Auto vars:     Size  Location     Type
 23704 ;;  Index           2   46[BANK0 ] unsigned short 
 23705 ;;  Result          1   45[BANK0 ] unsigned char 
 23706 ;; Return value:  Size  Location     Type
 23707 ;;                  1    wreg      unsigned char 
 23708 ;; Registers used:
 23709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23710 ;; Tracked objects:
 23711 ;;		On entry : 0/0
 23712 ;;		On exit  : 0/0
 23713 ;;		Unchanged: 0/0
 23714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23715 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23716 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23717 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23718 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23719 ;;Total ram usage:       11 bytes
 23720 ;; Hardware stack levels used:    1
 23721 ;; Hardware stack levels required when called:   11
 23722 ;; This function calls:
 23723 ;;		Nothing
 23724 ;; This function is called by:
 23725 ;;		_ModemEvtParser
 23726 ;;		_MyApp_Task
 23727 ;; This function uses a non-reentrant model
 23728 ;;
 23729                           
 23730                           	psect	text111
 23731  0054CA                     __ptext111:
 23732                           	opt stack 0
 23733  0054CA                     _StringCompare:
 23734                           	opt stack 16
 23735                           
 23736                           ;sf.c: 77: UINT16 Index = 0;
 23737                           
 23738                           ; BSR set to: 0
 23739                           ;incstack = 0
 23740  0054CA  0E00               	movlw	0
 23741  0054CC  0100               	movlb	0	; () banked
 23742  0054CE  6F8F               	movwf	(StringCompare@Index+1)& (0+255),b
 23743  0054D0  0E00               	movlw	0
 23744  0054D2  6F8E               	movwf	StringCompare@Index& (0+255),b
 23745                           
 23746                           ;sf.c: 78: UINT8 Result = 1;
 23747  0054D4  0E01               	movlw	1
 23748  0054D6  6F8D               	movwf	StringCompare@Result& (0+255),b
 23749                           
 23750                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 23751  0054D8  0E00               	movlw	0
 23752  0054DA  6F8F               	movwf	(StringCompare@Index+1)& (0+255),b
 23753  0054DC  0E00               	movlw	0
 23754  0054DE  6F8E               	movwf	StringCompare@Index& (0+255),b
 23755  0054E0  D015               	goto	l2211
 23756  0054E2                     
 23757                           ; BSR set to: 0
 23758                           ;sf.c: 82: {
 23759                           ;sf.c: 83: if (String1[Index] != String2[Index])
 23760                           
 23761                           ; BSR set to: 0
 23762  0054E2  518E               	movf	StringCompare@Index& (0+255),w,b
 23763  0054E4  2587               	addwf	StringCompare@String2& (0+255),w,b
 23764  0054E6  6ED9               	movwf	fsr2l,c
 23765  0054E8  518F               	movf	(StringCompare@Index+1)& (0+255),w,b
 23766  0054EA  2188               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 23767  0054EC  6EDA               	movwf	fsr2h,c
 23768  0054EE  518E               	movf	StringCompare@Index& (0+255),w,b
 23769  0054F0  2585               	addwf	StringCompare@String1& (0+255),w,b
 23770  0054F2  6EE1               	movwf	fsr1l,c
 23771  0054F4  518F               	movf	(StringCompare@Index+1)& (0+255),w,b
 23772  0054F6  2186               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 23773  0054F8  6EE2               	movwf	fsr1h,c
 23774  0054FA  50DE               	movf	postinc2,w,c
 23775  0054FC  18E6               	xorwf	postinc1,w,c
 23776  0054FE  B4D8               	btfsc	status,2,c
 23777  005500  D003               	goto	l2213
 23778                           
 23779                           ; BSR set to: 0
 23780                           ;sf.c: 84: {
 23781                           ;sf.c: 85: Result = 0;
 23782  005502  0E00               	movlw	0
 23783  005504  6F8D               	movwf	StringCompare@Result& (0+255),b
 23784                           
 23785                           ;sf.c: 86: break;
 23786  005506  D008               	goto	u12360
 23787  005508                     l2213:
 23788                           
 23789                           ; BSR set to: 0
 23790                           
 23791                           ; BSR set to: 0
 23792  005508  4B8E               	infsnz	StringCompare@Index& (0+255),f,b
 23793  00550A  2B8F               	incf	(StringCompare@Index+1)& (0+255),f,b
 23794  00550C                     l2211:
 23795                           
 23796                           ; BSR set to: 0
 23797                           
 23798                           ; BSR set to: 0
 23799  00550C  5189               	movf	StringCompare@Len& (0+255),w,b
 23800  00550E  5D8E               	subwf	StringCompare@Index& (0+255),w,b
 23801  005510  518A               	movf	(StringCompare@Len+1)& (0+255),w,b
 23802  005512  598F               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 23803  005514  A0D8               	btfss	status,0,c
 23804  005516  D7E5               	goto	l2212
 23805  005518                     u12360:
 23806                           
 23807                           ; BSR set to: 0
 23808                           ;sf.c: 87: }
 23809                           ;sf.c: 88: }
 23810                           ;sf.c: 91: return Result;
 23811                           
 23812                           ; BSR set to: 0
 23813  005518  518D               	movf	StringCompare@Result& (0+255),w,b
 23814  00551A  0012               	return	
 23815  00551C                     __end_of_StringCompare:
 23816                           	opt stack 0
 23817                           tosu	equ	0xFFF
 23818                           tosh	equ	0xFFE
 23819                           tosl	equ	0xFFD
 23820                           pclath	equ	0xFFA
 23821                           tblptru	equ	0xFF8
 23822                           tblptrh	equ	0xFF7
 23823                           tblptrl	equ	0xFF6
 23824                           tablat	equ	0xFF5
 23825                           prodh	equ	0xFF4
 23826                           prodl	equ	0xFF3
 23827                           intcon	equ	0xFF2
 23828                           intcon2	equ	0xFF1
 23829                           intcon3	equ	0xFF0
 23830                           indf0	equ	0xFEF
 23831                           postinc0	equ	0xFEE
 23832                           plusw0	equ	0xFEB
 23833                           fsr0h	equ	0xFEA
 23834                           fsr0l	equ	0xFE9
 23835                           wreg	equ	0xFE8
 23836                           indf1	equ	0xFE7
 23837                           postinc1	equ	0xFE6
 23838                           postdec1	equ	0xFE5
 23839                           plusw1	equ	0xFE3
 23840                           fsr1h	equ	0xFE2
 23841                           fsr1l	equ	0xFE1
 23842                           indf2	equ	0xFDF
 23843                           postinc2	equ	0xFDE
 23844                           postdec2	equ	0xFDD
 23845                           plusw2	equ	0xFDB
 23846                           fsr2h	equ	0xFDA
 23847                           fsr2l	equ	0xFD9
 23848                           status	equ	0xFD8
 23849                           
 23850 ;; *************** function _GetSmsSm *****************
 23851 ;; Defined at:
 23852 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23853 ;; Parameters:    Size  Location     Type
 23854 ;;		None
 23855 ;; Auto vars:     Size  Location     Type
 23856 ;;		None
 23857 ;; Return value:  Size  Location     Type
 23858 ;;                  1    wreg      void 
 23859 ;; Registers used:
 23860 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23861 ;; Tracked objects:
 23862 ;;		On entry : 0/0
 23863 ;;		On exit  : 0/0
 23864 ;;		Unchanged: 0/0
 23865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23870 ;;Total ram usage:        0 bytes
 23871 ;; Hardware stack levels used:    1
 23872 ;; Hardware stack levels required when called:   13
 23873 ;; This function calls:
 23874 ;;		_ClearBuffer
 23875 ;;		_GenerateEvt
 23876 ;;		_ReceiveEvt
 23877 ;;		_StringCopy
 23878 ;;		_Uart_WriteConstString
 23879 ;; This function is called by:
 23880 ;;		_Mdm_MainTask
 23881 ;; This function uses a non-reentrant model
 23882 ;;
 23883                           
 23884                           	psect	text112
 23885  002BFE                     __ptext112:
 23886                           	opt stack 0
 23887  002BFE                     _GetSmsSm:
 23888                           	opt stack 14
 23889                           
 23890                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 23891                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 23892                           
 23893                           ; BSR set to: 0
 23894                           ;incstack = 0
 23895  002BFE  0E03               	movlw	3
 23896  002C00  0100               	movlb	0	; () banked
 23897  002C02  19D3               	xorwf	_MdmStatus& (0+255),w,b
 23898  002C04  A4D8               	btfss	status,2,c
 23899  002C06  0012               	return	
 23900  002C08  D084               	goto	l1070
 23901  002C0A                     
 23902                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 23903                           
 23904                           ; BSR set to: 0
 23905  002C0A  0EDD               	movlw	low _GetSmsText
 23906  002C0C  0100               	movlb	0	; () banked
 23907  002C0E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23908  002C10  0E00               	movlw	high _GetSmsText
 23909  002C12  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23910  002C14  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 23911  002C18  0900               	iorlw	0
 23912  002C1A  B4D8               	btfsc	status,2,c
 23913  002C1C  0012               	return	
 23914                           
 23915                           ;mdm_gsm_gprs.c: 596: {
 23916                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 23917  002C1E  0E01               	movlw	1
 23918  002C20  0101               	movlb	1	; () banked
 23919  002C22  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 23920                           
 23921                           ; BSR set to: 1
 23922                           ;mdm_gsm_gprs.c: 599: }
 23923                           ;mdm_gsm_gprs.c: 600: break;
 23924  002C24  0012               	return	
 23925  002C26                     
 23926                           ; BSR set to: 1
 23927                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 23928                           
 23929                           ; BSR set to: 1
 23930  002C26  0EC1               	movlw	low STR_4
 23931  002C28  0100               	movlb	0	; () banked
 23932  002C2A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23933  002C2C  0EFF               	movlw	high STR_4
 23934  002C2E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23935  002C30  0E01               	movlw	1
 23936  002C32  EC6F  F02C         	call	_Uart_WriteConstString
 23937                           
 23938                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 23939  002C36  0E02               	movlw	2
 23940  002C38  0101               	movlb	1	; () banked
 23941  002C3A  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 23942                           
 23943                           ;mdm_gsm_gprs.c: 607: break;
 23944  002C3C  0012               	return	
 23945  002C3E                     
 23946                           ; BSR set to: 1
 23947                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 23948                           
 23949                           ; BSR set to: 1
 23950  002C3E  0E3C               	movlw	low _NewStringReceived
 23951  002C40  0100               	movlb	0	; () banked
 23952  002C42  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23953  002C44  0E00               	movlw	high _NewStringReceived
 23954  002C46  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23955  002C48  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 23956  002C4C  0900               	iorlw	0
 23957  002C4E  B4D8               	btfsc	status,2,c
 23958  002C50  0012               	return	
 23959                           
 23960                           ;mdm_gsm_gprs.c: 612: {
 23961                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 23962  002C52  CC58  FFE8         	movff	_RxBuffer,wreg
 23963  002C56  0A2B               	xorlw	43
 23964  002C58  A4D8               	btfss	status,2,c
 23965  002C5A  0012               	return	
 23966  002C5C  CC59  FFE8         	movff	_RxBuffer+1,wreg
 23967  002C60  0A43               	xorlw	67
 23968  002C62  A4D8               	btfss	status,2,c
 23969  002C64  0012               	return	
 23970  002C66  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 23971  002C6A  0A4D               	xorlw	77
 23972  002C6C  A4D8               	btfss	status,2,c
 23973  002C6E  0012               	return	
 23974                           
 23975                           ;mdm_gsm_gprs.c: 614: {
 23976                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 23977  002C70  0E00               	movlw	low _Mdm_SmsRx
 23978  002C72  0100               	movlb	0	; () banked
 23979  002C74  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23980  002C76  0E07               	movlw	high _Mdm_SmsRx
 23981  002C78  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23982  002C7A  0E00               	movlw	0
 23983  002C7C  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23984  002C7E  0E50               	movlw	80
 23985  002C80  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23986  002C82  ECDF  F02D         	call	_ClearBuffer	;wreg free
 23987                           
 23988                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 23989  002C86  0E58               	movlw	low _RxBuffer
 23990  002C88  0100               	movlb	0	; () banked
 23991  002C8A  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23992  002C8C  0E0C               	movlw	high _RxBuffer
 23993  002C8E  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23994  002C90  0E00               	movlw	low _Mdm_SmsRx
 23995  002C92  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23996  002C94  0E07               	movlw	high _Mdm_SmsRx
 23997  002C96  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23998  002C98  C0C7  F081         	movff	_RxLen,StringCopy@Len
 23999  002C9C  C0C8  F082         	movff	_RxLen+1,StringCopy@Len+1
 24000  002CA0  EC50  F028         	call	_StringCopy	;wreg free
 24001                           
 24002                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 24003  002CA4  C0C7  F782         	movff	_RxLen,_Mdm_SmsRx+130
 24004                           
 24005                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 24006  002CA8  0E03               	movlw	3
 24007  002CAA  0101               	movlb	1	; () banked
 24008  002CAC  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24009                           
 24010                           ; BSR set to: 1
 24011                           ;mdm_gsm_gprs.c: 622: }
 24012                           ;mdm_gsm_gprs.c: 623: }
 24013                           ;mdm_gsm_gprs.c: 624: break;
 24014                           
 24015                           ; BSR set to: 1
 24016  002CAE  0012               	return	
 24017  002CB0                     
 24018                           ; BSR set to: 1
 24019                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 24020                           
 24021                           ; BSR set to: 1
 24022  002CB0  0E3C               	movlw	low _NewStringReceived
 24023  002CB2  0100               	movlb	0	; () banked
 24024  002CB4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24025  002CB6  0E00               	movlw	high _NewStringReceived
 24026  002CB8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24027  002CBA  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 24028  002CBE  0900               	iorlw	0
 24029  002CC0  B4D8               	btfsc	status,2,c
 24030  002CC2  0012               	return	
 24031                           
 24032                           ;mdm_gsm_gprs.c: 629: {
 24033                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 24034  002CC4  0E50               	movlw	low (_Mdm_SmsRx+80)
 24035  002CC6  0100               	movlb	0	; () banked
 24036  002CC8  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24037  002CCA  0E07               	movlw	high (_Mdm_SmsRx+80)
 24038  002CCC  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24039  002CCE  0E00               	movlw	0
 24040  002CD0  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24041  002CD2  0E32               	movlw	50
 24042  002CD4  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24043  002CD6  ECDF  F02D         	call	_ClearBuffer	;wreg free
 24044                           
 24045                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 24046  002CDA  0E58               	movlw	low _RxBuffer
 24047  002CDC  0100               	movlb	0	; () banked
 24048  002CDE  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24049  002CE0  0E0C               	movlw	high _RxBuffer
 24050  002CE2  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24051  002CE4  0E50               	movlw	low (_Mdm_SmsRx+80)
 24052  002CE6  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24053  002CE8  0E07               	movlw	high (_Mdm_SmsRx+80)
 24054  002CEA  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24055  002CEC  C0C7  F081         	movff	_RxLen,StringCopy@Len
 24056  002CF0  C0C8  F082         	movff	_RxLen+1,StringCopy@Len+1
 24057  002CF4  EC50  F028         	call	_StringCopy	;wreg free
 24058                           
 24059                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 24060  002CF8  C0C7  F783         	movff	_RxLen,_Mdm_SmsRx+131
 24061                           
 24062                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 24063  002CFC  0E00               	movlw	0
 24064  002CFE  0101               	movlb	1	; () banked
 24065  002D00  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24066                           
 24067                           ; BSR set to: 1
 24068                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 24069  002D02  0EDC               	movlw	low _SmsTxtReady
 24070  002D04  0100               	movlb	0	; () banked
 24071  002D06  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24072  002D08  0E00               	movlw	high _SmsTxtReady
 24073  002D0A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24074  002D0C  EC81  F030         	call	_GenerateEvt	;wreg free
 24075                           
 24076                           ;mdm_gsm_gprs.c: 644: }
 24077                           
 24078                           ;mdm_gsm_gprs.c: 643: break;
 24079                           
 24080                           ;mdm_gsm_gprs.c: 642: default:
 24081                           
 24082                           ;mdm_gsm_gprs.c: 639: }
 24083                           ;mdm_gsm_gprs.c: 640: break;
 24084  002D10  0012               	return	
 24085  002D12                     l1070:
 24086  002D12  0101               	movlb	1	; () banked
 24087  002D14  51F1               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 24088                           
 24089                           ; Switch size 1, requested type "space"
 24090                           ; Number of cases is 4, Range of values is 0 to 3
 24091                           ; switch strategies available:
 24092                           ; Name         Instructions Cycles
 24093                           ; simple_byte           13     7 (average)
 24094                           ;	Chosen strategy is simple_byte
 24095  002D16  0A00               	xorlw	0	; case 0
 24096  002D18  B4D8               	btfsc	status,2,c
 24097  002D1A  D777               	goto	l1071
 24098  002D1C  0A01               	xorlw	1	; case 1
 24099  002D1E  B4D8               	btfsc	status,2,c
 24100  002D20  D782               	goto	l1074
 24101  002D22  0A03               	xorlw	3	; case 2
 24102  002D24  B4D8               	btfsc	status,2,c
 24103  002D26  D78B               	goto	l1075
 24104  002D28  0A01               	xorlw	1	; case 3
 24105  002D2A  A4D8               	btfss	status,2,c
 24106                           
 24107                           ; BSR set to: 1
 24108  002D2C  0012               	return	
 24109  002D2E  D7C0               	goto	l1078
 24110  002D30                     __end_of_GetSmsSm:
 24111                           	opt stack 0
 24112                           tosu	equ	0xFFF
 24113                           tosh	equ	0xFFE
 24114                           tosl	equ	0xFFD
 24115                           pclath	equ	0xFFA
 24116                           tblptru	equ	0xFF8
 24117                           tblptrh	equ	0xFF7
 24118                           tblptrl	equ	0xFF6
 24119                           tablat	equ	0xFF5
 24120                           prodh	equ	0xFF4
 24121                           prodl	equ	0xFF3
 24122                           intcon	equ	0xFF2
 24123                           intcon2	equ	0xFF1
 24124                           intcon3	equ	0xFF0
 24125                           indf0	equ	0xFEF
 24126                           postinc0	equ	0xFEE
 24127                           plusw0	equ	0xFEB
 24128                           fsr0h	equ	0xFEA
 24129                           fsr0l	equ	0xFE9
 24130                           wreg	equ	0xFE8
 24131                           indf1	equ	0xFE7
 24132                           postinc1	equ	0xFE6
 24133                           postdec1	equ	0xFE5
 24134                           plusw1	equ	0xFE3
 24135                           fsr1h	equ	0xFE2
 24136                           fsr1l	equ	0xFE1
 24137                           indf2	equ	0xFDF
 24138                           postinc2	equ	0xFDE
 24139                           postdec2	equ	0xFDD
 24140                           plusw2	equ	0xFDB
 24141                           fsr2h	equ	0xFDA
 24142                           fsr2l	equ	0xFD9
 24143                           status	equ	0xFD8
 24144                           
 24145 ;; *************** function _ConfigureModem *****************
 24146 ;; Defined at:
 24147 ;;		line 418 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24148 ;; Parameters:    Size  Location     Type
 24149 ;;		None
 24150 ;; Auto vars:     Size  Location     Type
 24151 ;;		None
 24152 ;; Return value:  Size  Location     Type
 24153 ;;                  1    wreg      void 
 24154 ;; Registers used:
 24155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24156 ;; Tracked objects:
 24157 ;;		On entry : 0/0
 24158 ;;		On exit  : 0/0
 24159 ;;		Unchanged: 0/0
 24160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24165 ;;Total ram usage:        0 bytes
 24166 ;; Hardware stack levels used:    1
 24167 ;; Hardware stack levels required when called:   14
 24168 ;; This function calls:
 24169 ;;		_GenerateEvt
 24170 ;;		_UartSetConfigLow
 24171 ;;		_Uart_InitUartModule
 24172 ;;		_Uart_WriteConstString
 24173 ;; This function is called by:
 24174 ;;		_Mdm_MainTask
 24175 ;; This function uses a non-reentrant model
 24176 ;;
 24177                           
 24178                           	psect	text113
 24179  00362C                     __ptext113:
 24180                           	opt stack 0
 24181  00362C                     _ConfigureModem:
 24182                           	opt stack 13
 24183                           
 24184                           ;mdm_gsm_gprs.c: 420: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 24185                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType NextState = MdmCfg_Init;
 24186                           ;mdm_gsm_gprs.c: 422: static UINT16 DelayValueMs = 0;
 24187                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayCounter = 0;
 24188                           ;mdm_gsm_gprs.c: 425: switch (MdmConfigState)
 24189                           
 24190                           ;incstack = 0
 24191  00362C  D05A               	goto	l1027
 24192  00362E                     
 24193                           ;mdm_gsm_gprs.c: 429: if (MdmStatus == ModemReady)
 24194  00362E  0E02               	movlw	2
 24195  003630  0100               	movlb	0	; () banked
 24196  003632  19D3               	xorwf	_MdmStatus& (0+255),w,b
 24197  003634  A4D8               	btfss	status,2,c
 24198  003636  0012               	return	
 24199                           
 24200                           ; BSR set to: 0
 24201                           ;mdm_gsm_gprs.c: 430: {
 24202                           ;mdm_gsm_gprs.c: 432: MdmConfigState = MdmCfg_ChangeBaud;
 24203  003638  0E01               	movlw	1
 24204  00363A  0101               	movlb	1	; () banked
 24205  00363C  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 24206                           
 24207                           ; BSR set to: 1
 24208                           ;mdm_gsm_gprs.c: 433: }
 24209                           ;mdm_gsm_gprs.c: 434: break;
 24210  00363E  0012               	return	
 24211  003640                     
 24212                           ; BSR set to: 1
 24213                           ;mdm_gsm_gprs.c: 438: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 24214                           
 24215                           ; BSR set to: 1
 24216  003640  0E74               	movlw	low STR_2
 24217  003642  0100               	movlb	0	; () banked
 24218  003644  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24219  003646  0EFF               	movlw	high STR_2
 24220  003648  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24221  00364A  0E01               	movlw	1
 24222  00364C  EC6F  F02C         	call	_Uart_WriteConstString
 24223                           
 24224                           ;mdm_gsm_gprs.c: 440: UartSetConfigLow();
 24225  003650  EC65  F029         	call	_UartSetConfigLow	;wreg free
 24226                           
 24227                           ;mdm_gsm_gprs.c: 442: Uart_InitUartModule(1,&UartConfig);
 24228  003654  0E28               	movlw	low _UartConfig
 24229  003656  0100               	movlb	0	; () banked
 24230  003658  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 24231  00365A  0E03               	movlw	high _UartConfig
 24232  00365C  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 24233  00365E  0E01               	movlw	1
 24234  003660  EC5E  F005         	call	_Uart_InitUartModule
 24235                           
 24236                           ;mdm_gsm_gprs.c: 444: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 24237  003664  0E03               	movlw	3
 24238  003666  0102               	movlb	2	; () banked
 24239  003668  6FD8               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 24240  00366A  0EE8               	movlw	232
 24241  00366C  6FD7               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 24242                           
 24243                           ; BSR set to: 2
 24244                           ;mdm_gsm_gprs.c: 446: NextState = MdmCfg_SetMdmEchoMode;
 24245  00366E  0E02               	movlw	2
 24246  003670  0101               	movlb	1	; () banked
 24247  003672  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 24248                           
 24249                           ; BSR set to: 1
 24250                           ;mdm_gsm_gprs.c: 447: MdmConfigState = MdmCfg_Delay;
 24251  003674  0E04               	movlw	4
 24252  003676  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 24253                           
 24254                           ;mdm_gsm_gprs.c: 448: break;
 24255  003678  0012               	return	
 24256  00367A                     
 24257                           ; BSR set to: 1
 24258                           ;mdm_gsm_gprs.c: 452: Uart_WriteConstString(1,"ATE0\r\n");
 24259                           
 24260                           ; BSR set to: 1
 24261  00367A  0EDE               	movlw	low STR_3
 24262  00367C  0100               	movlb	0	; () banked
 24263  00367E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24264  003680  0EFF               	movlw	high STR_3
 24265  003682  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24266  003684  0E01               	movlw	1
 24267  003686  EC6F  F02C         	call	_Uart_WriteConstString
 24268                           
 24269                           ;mdm_gsm_gprs.c: 454: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 24270  00368A  0E03               	movlw	3
 24271  00368C  0102               	movlb	2	; () banked
 24272  00368E  6FD8               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 24273  003690  0EE8               	movlw	232
 24274  003692  6FD7               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 24275                           
 24276                           ; BSR set to: 2
 24277                           ;mdm_gsm_gprs.c: 456: NextState = MdmCfg_UpdateMdmSts;
 24278  003694  0E05               	movlw	5
 24279  003696  0101               	movlb	1	; () banked
 24280  003698  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 24281                           
 24282                           ; BSR set to: 1
 24283                           ;mdm_gsm_gprs.c: 457: MdmConfigState = MdmCfg_Delay;
 24284  00369A  0E04               	movlw	4
 24285  00369C  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 24286                           
 24287                           ;mdm_gsm_gprs.c: 458: break;
 24288  00369E  0012               	return	
 24289  0036A0                     
 24290                           ; BSR set to: 1
 24291                           ;mdm_gsm_gprs.c: 462: DelayCounter++;
 24292                           
 24293                           ; BSR set to: 1
 24294  0036A0  0103               	movlb	3	; () banked
 24295  0036A2  4B26               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 24296  0036A4  2B27               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 24297                           
 24298                           ; BSR set to: 3
 24299                           ;mdm_gsm_gprs.c: 464: if (DelayCounter >= DelayValueMs)
 24300  0036A6  0102               	movlb	2	; () banked
 24301  0036A8  51D7               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 24302  0036AA  0103               	movlb	3	; () banked
 24303  0036AC  5D26               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 24304  0036AE  0102               	movlb	2	; () banked
 24305  0036B0  51D8               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 24306  0036B2  0103               	movlb	3	; () banked
 24307  0036B4  5927               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 24308  0036B6  A0D8               	btfss	status,0,c
 24309  0036B8  0012               	return	
 24310                           
 24311                           ; BSR set to: 3
 24312                           ;mdm_gsm_gprs.c: 465: {
 24313                           ;mdm_gsm_gprs.c: 467: DelayCounter = 0;
 24314  0036BA  0E00               	movlw	0
 24315  0036BC  6F27               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 24316  0036BE  0E00               	movlw	0
 24317  0036C0  6F26               	movwf	ConfigureModem@DelayCounter& (0+255),b
 24318                           
 24319                           ; BSR set to: 3
 24320                           ;mdm_gsm_gprs.c: 469: MdmConfigState = NextState;
 24321  0036C2  C1F2  F1F3         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 24322                           
 24323                           ; BSR set to: 3
 24324                           ;mdm_gsm_gprs.c: 470: }
 24325                           ;mdm_gsm_gprs.c: 471: break;
 24326  0036C6  0012               	return	
 24327  0036C8                     
 24328                           ;mdm_gsm_gprs.c: 475: MdmStatus = ModemConfigured;
 24329                           
 24330                           ; BSR set to: 3
 24331  0036C8  0E03               	movlw	3
 24332  0036CA  0100               	movlb	0	; () banked
 24333  0036CC  6FD3               	movwf	_MdmStatus& (0+255),b
 24334                           
 24335                           ; BSR set to: 0
 24336                           ;mdm_gsm_gprs.c: 477: GenerateEvt(&MdmStsReady);
 24337  0036CE  0EFE               	movlw	low _MdmStsReady
 24338  0036D0  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24339  0036D2  0E01               	movlw	high _MdmStsReady
 24340  0036D4  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24341  0036D6  EC81  F030         	call	_GenerateEvt	;wreg free
 24342                           
 24343                           ;mdm_gsm_gprs.c: 479: MdmConfigState = MdmCfg_Stop;
 24344  0036DA  0E06               	movlw	6
 24345  0036DC  0101               	movlb	1	; () banked
 24346  0036DE  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 24347                           
 24348                           ; BSR set to: 1
 24349                           ;mdm_gsm_gprs.c: 487: }
 24350                           
 24351                           ; BSR set to: 1
 24352                           ;mdm_gsm_gprs.c: 486: break;
 24353                           
 24354                           ;mdm_gsm_gprs.c: 485: default:
 24355                           
 24356                           ; BSR set to: 1
 24357                           ;mdm_gsm_gprs.c: 483: break;
 24358                           
 24359                           ;mdm_gsm_gprs.c: 482: case MdmCfg_Stop:
 24360                           
 24361                           ;mdm_gsm_gprs.c: 480: break;
 24362  0036E0  0012               	return	
 24363  0036E2                     l1027:
 24364                           
 24365                           ; BSR set to: 1
 24366  0036E2  0101               	movlb	1	; () banked
 24367  0036E4  51F3               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 24368                           
 24369                           ; Switch size 1, requested type "space"
 24370                           ; Number of cases is 6, Range of values is 0 to 6
 24371                           ; switch strategies available:
 24372                           ; Name         Instructions Cycles
 24373                           ; simple_byte           19    10 (average)
 24374                           ;	Chosen strategy is simple_byte
 24375  0036E6  0A00               	xorlw	0	; case 0
 24376  0036E8  B4D8               	btfsc	status,2,c
 24377  0036EA  D7A1               	goto	l1028
 24378  0036EC  0A01               	xorlw	1	; case 1
 24379  0036EE  B4D8               	btfsc	status,2,c
 24380  0036F0  D7A7               	goto	l1031
 24381  0036F2  0A03               	xorlw	3	; case 2
 24382  0036F4  B4D8               	btfsc	status,2,c
 24383  0036F6  D7C1               	goto	l1032
 24384  0036F8  0A06               	xorlw	6	; case 4
 24385  0036FA  B4D8               	btfsc	status,2,c
 24386  0036FC  D7D1               	goto	l1033
 24387  0036FE  0A01               	xorlw	1	; case 5
 24388  003700  B4D8               	btfsc	status,2,c
 24389  003702  D7E2               	goto	l1035
 24390  003704  0A03               	xorlw	3	; case 6
 24391  003706  0012               	return	
 24392  003708                     __end_of_ConfigureModem:
 24393                           	opt stack 0
 24394                           tosu	equ	0xFFF
 24395                           tosh	equ	0xFFE
 24396                           tosl	equ	0xFFD
 24397                           pclath	equ	0xFFA
 24398                           tblptru	equ	0xFF8
 24399                           tblptrh	equ	0xFF7
 24400                           tblptrl	equ	0xFF6
 24401                           tablat	equ	0xFF5
 24402                           prodh	equ	0xFF4
 24403                           prodl	equ	0xFF3
 24404                           intcon	equ	0xFF2
 24405                           intcon2	equ	0xFF1
 24406                           intcon3	equ	0xFF0
 24407                           indf0	equ	0xFEF
 24408                           postinc0	equ	0xFEE
 24409                           plusw0	equ	0xFEB
 24410                           fsr0h	equ	0xFEA
 24411                           fsr0l	equ	0xFE9
 24412                           wreg	equ	0xFE8
 24413                           indf1	equ	0xFE7
 24414                           postinc1	equ	0xFE6
 24415                           postdec1	equ	0xFE5
 24416                           plusw1	equ	0xFE3
 24417                           fsr1h	equ	0xFE2
 24418                           fsr1l	equ	0xFE1
 24419                           indf2	equ	0xFDF
 24420                           postinc2	equ	0xFDE
 24421                           postdec2	equ	0xFDD
 24422                           plusw2	equ	0xFDB
 24423                           fsr2h	equ	0xFDA
 24424                           fsr2l	equ	0xFD9
 24425                           status	equ	0xFD8
 24426                           
 24427 ;; *************** function _Uart_InitUartModule *****************
 24428 ;; Defined at:
 24429 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24430 ;; Parameters:    Size  Location     Type
 24431 ;;  Module          1    wreg     unsigned char 
 24432 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 24433 ;;		 -> UartConfig(21), 
 24434 ;; Auto vars:     Size  Location     Type
 24435 ;;  Module          1   65[BANK0 ] unsigned char 
 24436 ;; Return value:  Size  Location     Type
 24437 ;;                  1    wreg      void 
 24438 ;; Registers used:
 24439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24440 ;; Tracked objects:
 24441 ;;		On entry : 0/0
 24442 ;;		On exit  : 0/0
 24443 ;;		Unchanged: 0/0
 24444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24446 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24447 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24448 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24449 ;;Total ram usage:        5 bytes
 24450 ;; Hardware stack levels used:    1
 24451 ;; Hardware stack levels required when called:   13
 24452 ;; This function calls:
 24453 ;;		_SetUartBaudRate
 24454 ;; This function is called by:
 24455 ;;		_ConfigureModem
 24456 ;;		_Mdm_MainTask
 24457 ;; This function uses a non-reentrant model
 24458 ;;
 24459                           
 24460                           	psect	text114
 24461  000ABC                     __ptext114:
 24462                           	opt stack 0
 24463  000ABC                     _Uart_InitUartModule:
 24464                           	opt stack 14
 24465                           
 24466                           ;incstack = 0
 24467                           ;Uart_InitUartModule@Module stored from wreg
 24468  000ABC  0100               	movlb	0	; () banked
 24469  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 24470                           
 24471                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 24472  000AC0  0100               	movlb	0	; () banked
 24473  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 24474  000AC4  A4D8               	btfss	status,2,c
 24475  000AC6  D0BE               	goto	l668
 24476                           
 24477                           ; BSR set to: 0
 24478                           ;uart_drv.c: 291: {
 24479                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 24480  000AC8  9C94               	bcf	3988,6,c	;volatile
 24481                           
 24482                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 24483  000ACA  8E94               	bsf	3988,7,c	;volatile
 24484                           
 24485                           ; BSR set to: 0
 24486                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 24487  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24488  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24489  000AD4  0E01               	movlw	1
 24490  000AD6  EC63  F015         	call	_SetUartBaudRate
 24491                           
 24492                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 24493  000ADA  0E00               	movlw	0
 24494  000ADC  6EAD               	movwf	4013,c	;volatile
 24495                           
 24496                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24497  000ADE  0100               	movlb	0	; () banked
 24498  000AE0  EE20 F004          	lfsr	2,4
 24499  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24500  000AE6  26D9               	addwf	fsr2l,f,c
 24501  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24502  000AEA  22DA               	addwfc	fsr2h,f,c
 24503  000AEC  50DF               	movf	indf2,w,c
 24504  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24505  000AF0  0E06               	movlw	6
 24506  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24507  000AF4                     u12225:
 24508  000AF4  90D8               	bcf	status,0,c
 24509  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24510  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24511  000AFA  D7FC               	goto	u12225
 24512  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24513  000AFE  12AD               	iorwf	4013,f,c	;volatile
 24514                           
 24515                           ; BSR set to: 0
 24516                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24517  000B00  EE20 F006          	lfsr	2,6
 24518  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24519  000B06  26D9               	addwf	fsr2l,f,c
 24520  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24521  000B0A  22DA               	addwfc	fsr2h,f,c
 24522  000B0C  50DF               	movf	indf2,w,c
 24523  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24524  000B10  0E05               	movlw	5
 24525  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24526  000B14                     u12235:
 24527  000B14  90D8               	bcf	status,0,c
 24528  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24529  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24530  000B1A  D7FC               	goto	u12235
 24531  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24532  000B1E  12AD               	iorwf	4013,f,c	;volatile
 24533                           
 24534                           ; BSR set to: 0
 24535                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 24536  000B20  EE20 F001          	lfsr	2,1
 24537  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24538  000B26  26D9               	addwf	fsr2l,f,c
 24539  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24540  000B2A  22DA               	addwfc	fsr2h,f,c
 24541  000B2C  50DF               	movf	indf2,w,c
 24542  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24543  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24544  000B32  0BF0               	andlw	240
 24545  000B34  12AD               	iorwf	4013,f,c	;volatile
 24546                           
 24547                           ; BSR set to: 0
 24548                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 24549  000B36  EE20 F008          	lfsr	2,8
 24550  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24551  000B3C  26D9               	addwf	fsr2l,f,c
 24552  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24553  000B40  22DA               	addwfc	fsr2h,f,c
 24554  000B42  50DF               	movf	indf2,w,c
 24555  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24556  000B46  90D8               	bcf	status,0,c
 24557  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24558  000B4A  90D8               	bcf	status,0,c
 24559  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24560  000B4E  90D8               	bcf	status,0,c
 24561  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24562  000B52  12AD               	iorwf	4013,f,c	;volatile
 24563                           
 24564                           ; BSR set to: 0
 24565                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 24566  000B54  EE20 F003          	lfsr	2,3
 24567  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24568  000B5A  26D9               	addwf	fsr2l,f,c
 24569  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24570  000B5E  22DA               	addwfc	fsr2h,f,c
 24571  000B60  50DF               	movf	indf2,w,c
 24572  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24573  000B64  90D8               	bcf	status,0,c
 24574  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24575  000B68  90D8               	bcf	status,0,c
 24576  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24577  000B6C  12AD               	iorwf	4013,f,c	;volatile
 24578                           
 24579                           ; BSR set to: 0
 24580                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 24581  000B6E  0E00               	movlw	0
 24582  000B70  6EAC               	movwf	4012,c	;volatile
 24583                           
 24584                           ; BSR set to: 0
 24585                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 24586  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 24587  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 24588  000B7A  50DF               	movf	indf2,w,c
 24589  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24590  000B7E  0E00               	movlw	0
 24591  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 24592  000B82  0E80               	movlw	128
 24593  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24594  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24595  000B88  12AC               	iorwf	4012,f,c	;volatile
 24596                           
 24597                           ; BSR set to: 0
 24598                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 24599  000B8A  EE20 F005          	lfsr	2,5
 24600  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24601  000B90  26D9               	addwf	fsr2l,f,c
 24602  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24603  000B94  22DA               	addwfc	fsr2h,f,c
 24604  000B96  50DF               	movf	indf2,w,c
 24605  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24606  000B9A  0E06               	movlw	6
 24607  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24608  000B9E                     u12245:
 24609  000B9E  90D8               	bcf	status,0,c
 24610  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24611  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24612  000BA4  D7FC               	goto	u12245
 24613  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24614  000BA8  12AC               	iorwf	4012,f,c	;volatile
 24615                           
 24616                           ; BSR set to: 0
 24617                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 24618  000BAA  EE20 F007          	lfsr	2,7
 24619  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24620  000BB0  26D9               	addwf	fsr2l,f,c
 24621  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24622  000BB4  22DA               	addwfc	fsr2h,f,c
 24623  000BB6  50DF               	movf	indf2,w,c
 24624  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24625  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24626  000BBC  0BF0               	andlw	240
 24627  000BBE  12AC               	iorwf	4012,f,c	;volatile
 24628                           
 24629                           ; BSR set to: 0
 24630                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 24631  000BC0  0E00               	movlw	0
 24632  000BC2  6E7E               	movwf	3966,c	;volatile
 24633                           
 24634                           ; BSR set to: 0
 24635                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 24636  000BC4  EE20 F002          	lfsr	2,2
 24637  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24638  000BCA  26D9               	addwf	fsr2l,f,c
 24639  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24640  000BCE  22DA               	addwfc	fsr2h,f,c
 24641  000BD0  50DF               	movf	indf2,w,c
 24642  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24643  000BD4  90D8               	bcf	status,0,c
 24644  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24645  000BD8  90D8               	bcf	status,0,c
 24646  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24647  000BDC  90D8               	bcf	status,0,c
 24648  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24649  000BE0  127E               	iorwf	3966,f,c	;volatile
 24650                           
 24651                           ; BSR set to: 0
 24652                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 24653  000BE2  EE20 F00A          	lfsr	2,10
 24654  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24655  000BE8  26D9               	addwf	fsr2l,f,c
 24656  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24657  000BEC  22DA               	addwfc	fsr2h,f,c
 24658  000BEE  50DF               	movf	indf2,w,c
 24659  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24660  000BF2  90D8               	bcf	status,0,c
 24661  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24662  000BF6  127E               	iorwf	3966,f,c	;volatile
 24663                           
 24664                           ; BSR set to: 0
 24665                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 24666  000BF8  EE20 F009          	lfsr	2,9
 24667  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24668  000BFE  26D9               	addwf	fsr2l,f,c
 24669  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24670  000C02  22DA               	addwfc	fsr2h,f,c
 24671  000C04  50DF               	movf	indf2,w,c
 24672  000C06  127E               	iorwf	3966,f,c	;volatile
 24673                           
 24674                           ; BSR set to: 0
 24675                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 24676  000C08  EE20 F00B          	lfsr	2,11
 24677  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24678  000C0E  26D9               	addwf	fsr2l,f,c
 24679  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24680  000C12  22DA               	addwfc	fsr2h,f,c
 24681  000C14  50DF               	movf	indf2,w,c
 24682  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24683  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24684  000C1A  509D               	movf	3997,w,c	;volatile
 24685  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24686  000C1E  0BEF               	andlw	-17
 24687  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24688  000C22  6E9D               	movwf	3997,c	;volatile
 24689                           
 24690                           ; BSR set to: 0
 24691                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 24692  000C24  EE20 F00C          	lfsr	2,12
 24693  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24694  000C2A  26D9               	addwf	fsr2l,f,c
 24695  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24696  000C2E  22DA               	addwfc	fsr2h,f,c
 24697  000C30  50DF               	movf	indf2,w,c
 24698  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24699  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24700  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 24701  000C38  509D               	movf	3997,w,c	;volatile
 24702  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24703  000C3C  0BDF               	andlw	-33
 24704  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24705  000C40  6E9D               	movwf	3997,c	;volatile
 24706                           
 24707                           ;uart_drv.c: 326: }
 24708  000C42  0012               	return	
 24709  000C44                     l668:
 24710                           
 24711                           ; BSR set to: 0
 24712                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 24713                           
 24714                           ; BSR set to: 0
 24715  000C44  0E02               	movlw	2
 24716  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 24717  000C48  A4D8               	btfss	status,2,c
 24718  000C4A  0012               	return	
 24719                           
 24720                           ; BSR set to: 0
 24721                           ;uart_drv.c: 328: {
 24722                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 24723  000C4C  9094               	bcf	3988,0,c	;volatile
 24724                           
 24725                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 24726  000C4E  8294               	bsf	3988,1,c	;volatile
 24727                           
 24728                           ; BSR set to: 0
 24729                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 24730  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24731  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24732  000C58  0E02               	movlw	2
 24733  000C5A  EC63  F015         	call	_SetUartBaudRate
 24734                           
 24735                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 24736  000C5E  0E00               	movlw	0
 24737  000C60  6EA8               	movwf	4008,c	;volatile
 24738                           
 24739                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24740  000C62  0100               	movlb	0	; () banked
 24741  000C64  EE20 F004          	lfsr	2,4
 24742  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24743  000C6A  26D9               	addwf	fsr2l,f,c
 24744  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24745  000C6E  22DA               	addwfc	fsr2h,f,c
 24746  000C70  50DF               	movf	indf2,w,c
 24747  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24748  000C74  0E06               	movlw	6
 24749  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24750  000C78                     u12265:
 24751  000C78  90D8               	bcf	status,0,c
 24752  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24753  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24754  000C7E  D7FC               	goto	u12265
 24755  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24756  000C82  12A8               	iorwf	4008,f,c	;volatile
 24757                           
 24758                           ; BSR set to: 0
 24759                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24760  000C84  EE20 F006          	lfsr	2,6
 24761  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24762  000C8A  26D9               	addwf	fsr2l,f,c
 24763  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24764  000C8E  22DA               	addwfc	fsr2h,f,c
 24765  000C90  50DF               	movf	indf2,w,c
 24766  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24767  000C94  0E05               	movlw	5
 24768  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24769  000C98                     u12275:
 24770  000C98  90D8               	bcf	status,0,c
 24771  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24772  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24773  000C9E  D7FC               	goto	u12275
 24774  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24775  000CA2  12A8               	iorwf	4008,f,c	;volatile
 24776                           
 24777                           ; BSR set to: 0
 24778                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 24779  000CA4  EE20 F001          	lfsr	2,1
 24780  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24781  000CAA  26D9               	addwf	fsr2l,f,c
 24782  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24783  000CAE  22DA               	addwfc	fsr2h,f,c
 24784  000CB0  50DF               	movf	indf2,w,c
 24785  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24786  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24787  000CB6  0BF0               	andlw	240
 24788  000CB8  12A8               	iorwf	4008,f,c	;volatile
 24789                           
 24790                           ; BSR set to: 0
 24791                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 24792  000CBA  EE20 F008          	lfsr	2,8
 24793  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24794  000CC0  26D9               	addwf	fsr2l,f,c
 24795  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24796  000CC4  22DA               	addwfc	fsr2h,f,c
 24797  000CC6  50DF               	movf	indf2,w,c
 24798  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24799  000CCA  90D8               	bcf	status,0,c
 24800  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24801  000CCE  90D8               	bcf	status,0,c
 24802  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24803  000CD2  90D8               	bcf	status,0,c
 24804  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24805  000CD6  12A8               	iorwf	4008,f,c	;volatile
 24806                           
 24807                           ; BSR set to: 0
 24808                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 24809  000CD8  EE20 F003          	lfsr	2,3
 24810  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24811  000CDE  26D9               	addwf	fsr2l,f,c
 24812  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24813  000CE2  22DA               	addwfc	fsr2h,f,c
 24814  000CE4  50DF               	movf	indf2,w,c
 24815  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24816  000CE8  90D8               	bcf	status,0,c
 24817  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24818  000CEC  90D8               	bcf	status,0,c
 24819  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24820  000CF0  12A8               	iorwf	4008,f,c	;volatile
 24821                           
 24822                           ; BSR set to: 0
 24823                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 24824  000CF2  0E00               	movlw	0
 24825  000CF4  6E9C               	movwf	3996,c	;volatile
 24826                           
 24827                           ; BSR set to: 0
 24828                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 24829  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 24830  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 24831  000CFE  50DF               	movf	indf2,w,c
 24832  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24833  000D02  0E00               	movlw	0
 24834  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 24835  000D06  0E80               	movlw	128
 24836  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24837  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24838  000D0C  129C               	iorwf	3996,f,c	;volatile
 24839                           
 24840                           ; BSR set to: 0
 24841                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 24842  000D0E  EE20 F005          	lfsr	2,5
 24843  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24844  000D14  26D9               	addwf	fsr2l,f,c
 24845  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24846  000D18  22DA               	addwfc	fsr2h,f,c
 24847  000D1A  50DF               	movf	indf2,w,c
 24848  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24849  000D1E  0E06               	movlw	6
 24850  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24851  000D22                     u12285:
 24852  000D22  90D8               	bcf	status,0,c
 24853  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24854  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24855  000D28  D7FC               	goto	u12285
 24856  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24857  000D2C  129C               	iorwf	3996,f,c	;volatile
 24858                           
 24859                           ; BSR set to: 0
 24860                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 24861  000D2E  EE20 F007          	lfsr	2,7
 24862  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24863  000D34  26D9               	addwf	fsr2l,f,c
 24864  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24865  000D38  22DA               	addwfc	fsr2h,f,c
 24866  000D3A  50DF               	movf	indf2,w,c
 24867  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24868  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24869  000D40  0BF0               	andlw	240
 24870  000D42  129C               	iorwf	3996,f,c	;volatile
 24871                           
 24872                           ; BSR set to: 0
 24873                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 24874  000D44  0E00               	movlw	0
 24875  000D46  6E7C               	movwf	3964,c	;volatile
 24876                           
 24877                           ; BSR set to: 0
 24878                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 24879  000D48  EE20 F002          	lfsr	2,2
 24880  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24881  000D4E  26D9               	addwf	fsr2l,f,c
 24882  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24883  000D52  22DA               	addwfc	fsr2h,f,c
 24884  000D54  50DF               	movf	indf2,w,c
 24885  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24886  000D58  90D8               	bcf	status,0,c
 24887  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24888  000D5C  90D8               	bcf	status,0,c
 24889  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24890  000D60  90D8               	bcf	status,0,c
 24891  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24892  000D64  127C               	iorwf	3964,f,c	;volatile
 24893                           
 24894                           ; BSR set to: 0
 24895                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 24896  000D66  EE20 F00A          	lfsr	2,10
 24897  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24898  000D6C  26D9               	addwf	fsr2l,f,c
 24899  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24900  000D70  22DA               	addwfc	fsr2h,f,c
 24901  000D72  50DF               	movf	indf2,w,c
 24902  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24903  000D76  90D8               	bcf	status,0,c
 24904  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24905  000D7A  127C               	iorwf	3964,f,c	;volatile
 24906                           
 24907                           ; BSR set to: 0
 24908                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 24909  000D7C  EE20 F009          	lfsr	2,9
 24910  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24911  000D82  26D9               	addwf	fsr2l,f,c
 24912  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24913  000D86  22DA               	addwfc	fsr2h,f,c
 24914  000D88  50DF               	movf	indf2,w,c
 24915  000D8A  127C               	iorwf	3964,f,c	;volatile
 24916                           
 24917                           ; BSR set to: 0
 24918                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 24919  000D8C  EE20 F00B          	lfsr	2,11
 24920  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24921  000D92  26D9               	addwf	fsr2l,f,c
 24922  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24923  000D96  22DA               	addwfc	fsr2h,f,c
 24924  000D98  50DF               	movf	indf2,w,c
 24925  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24926  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24927  000D9E  50A3               	movf	4003,w,c	;volatile
 24928  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24929  000DA2  0BEF               	andlw	-17
 24930  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24931  000DA6  6EA3               	movwf	4003,c	;volatile
 24932                           
 24933                           ; BSR set to: 0
 24934                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 24935  000DA8  EE20 F00C          	lfsr	2,12
 24936  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24937  000DAE  26D9               	addwf	fsr2l,f,c
 24938  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24939  000DB2  22DA               	addwfc	fsr2h,f,c
 24940  000DB4  50DF               	movf	indf2,w,c
 24941  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24942  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24943  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 24944  000DBC  50A3               	movf	4003,w,c	;volatile
 24945  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24946  000DC0  0BDF               	andlw	-33
 24947  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24948  000DC4  6EA3               	movwf	4003,c	;volatile
 24949                           
 24950                           ; BSR set to: 0
 24951  000DC6  0012               	return	
 24952  000DC8                     __end_of_Uart_InitUartModule:
 24953                           	opt stack 0
 24954                           tosu	equ	0xFFF
 24955                           tosh	equ	0xFFE
 24956                           tosl	equ	0xFFD
 24957                           pclath	equ	0xFFA
 24958                           tblptru	equ	0xFF8
 24959                           tblptrh	equ	0xFF7
 24960                           tblptrl	equ	0xFF6
 24961                           tablat	equ	0xFF5
 24962                           prodh	equ	0xFF4
 24963                           prodl	equ	0xFF3
 24964                           intcon	equ	0xFF2
 24965                           intcon2	equ	0xFF1
 24966                           intcon3	equ	0xFF0
 24967                           indf0	equ	0xFEF
 24968                           postinc0	equ	0xFEE
 24969                           plusw0	equ	0xFEB
 24970                           fsr0h	equ	0xFEA
 24971                           fsr0l	equ	0xFE9
 24972                           wreg	equ	0xFE8
 24973                           indf1	equ	0xFE7
 24974                           postinc1	equ	0xFE6
 24975                           postdec1	equ	0xFE5
 24976                           plusw1	equ	0xFE3
 24977                           fsr1h	equ	0xFE2
 24978                           fsr1l	equ	0xFE1
 24979                           indf2	equ	0xFDF
 24980                           postinc2	equ	0xFDE
 24981                           postdec2	equ	0xFDD
 24982                           plusw2	equ	0xFDB
 24983                           fsr2h	equ	0xFDA
 24984                           fsr2l	equ	0xFD9
 24985                           status	equ	0xFD8
 24986                           
 24987 ;; *************** function _SetUartBaudRate *****************
 24988 ;; Defined at:
 24989 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24990 ;; Parameters:    Size  Location     Type
 24991 ;;  Module          1    wreg     unsigned char 
 24992 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 24993 ;;		 -> UartConfig(21), 
 24994 ;; Auto vars:     Size  Location     Type
 24995 ;;  Module          1   57[BANK0 ] unsigned char 
 24996 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 24997 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 24998 ;; Return value:  Size  Location     Type
 24999 ;;                  1    wreg      void 
 25000 ;; Registers used:
 25001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25002 ;; Tracked objects:
 25003 ;;		On entry : 0/0
 25004 ;;		On exit  : 0/0
 25005 ;;		Unchanged: 0/0
 25006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25007 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25008 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25009 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25010 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25011 ;;Total ram usage:        7 bytes
 25012 ;; Hardware stack levels used:    1
 25013 ;; Hardware stack levels required when called:   12
 25014 ;; This function calls:
 25015 ;;		___lldiv
 25016 ;;		___lmul
 25017 ;; This function is called by:
 25018 ;;		_Uart_InitUartModule
 25019 ;; This function uses a non-reentrant model
 25020 ;;
 25021                           
 25022                           	psect	text115
 25023  002AC6                     __ptext115:
 25024                           	opt stack 0
 25025  002AC6                     _SetUartBaudRate:
 25026                           	opt stack 14
 25027                           
 25028                           ; BSR set to: 0
 25029                           ;incstack = 0
 25030                           ;SetUartBaudRate@Module stored from wreg
 25031  002AC6  0100               	movlb	0	; () banked
 25032  002AC8  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 25033                           
 25034                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 25035  002ACA  0E00               	movlw	0
 25036  002ACC  0100               	movlb	0	; () banked
 25037  002ACE  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 25038  002AD0  0E00               	movlw	0
 25039  002AD2  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 25040                           
 25041                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 25042  002AD4  0E00               	movlw	0
 25043  002AD6  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 25044                           
 25045                           ; BSR set to: 0
 25046                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 25047  002AD8  EE20 F002          	lfsr	2,2
 25048  002ADC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25049  002ADE  26D9               	addwf	fsr2l,f,c
 25050  002AE0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25051  002AE2  22DA               	addwfc	fsr2h,f,c
 25052  002AE4  50DF               	movf	indf2,w,c
 25053  002AE6  A4D8               	btfss	status,2,c
 25054  002AE8  D00B               	goto	l625
 25055                           
 25056                           ; BSR set to: 0
 25057  002AEA  EE20 F002          	lfsr	2,2
 25058  002AEE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25059  002AF0  26D9               	addwf	fsr2l,f,c
 25060  002AF2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25061  002AF4  22DA               	addwfc	fsr2h,f,c
 25062  002AF6  50DF               	movf	indf2,w,c
 25063  002AF8  A4D8               	btfss	status,2,c
 25064  002AFA  D002               	goto	l625
 25065                           
 25066                           ; BSR set to: 0
 25067                           ;uart_drv.c: 128: {
 25068                           ;uart_drv.c: 129: DivisionFactor = 64;
 25069  002AFC  0E40               	movlw	64
 25070  002AFE  D039               	goto	L30
 25071  002B00                     l625:
 25072                           
 25073                           ; BSR set to: 0
 25074                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 25075                           
 25076                           ; BSR set to: 0
 25077  002B00  EE20 F002          	lfsr	2,2
 25078  002B04  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25079  002B06  26D9               	addwf	fsr2l,f,c
 25080  002B08  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25081  002B0A  22DA               	addwfc	fsr2h,f,c
 25082  002B0C  04DE               	decf	postinc2,w,c
 25083  002B0E  A4D8               	btfss	status,2,c
 25084  002B10  D009               	goto	l627
 25085                           
 25086                           ; BSR set to: 0
 25087  002B12  EE20 F002          	lfsr	2,2
 25088  002B16  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25089  002B18  26D9               	addwf	fsr2l,f,c
 25090  002B1A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25091  002B1C  22DA               	addwfc	fsr2h,f,c
 25092  002B1E  50DF               	movf	indf2,w,c
 25093  002B20  B4D8               	btfsc	status,2,c
 25094  002B22  D012               	goto	u11410
 25095  002B24                     l627:
 25096                           
 25097                           ; BSR set to: 0
 25098                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 25099                           
 25100                           ; BSR set to: 0
 25101  002B24  EE20 F002          	lfsr	2,2
 25102  002B28  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25103  002B2A  26D9               	addwf	fsr2l,f,c
 25104  002B2C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25105  002B2E  22DA               	addwfc	fsr2h,f,c
 25106  002B30  50DF               	movf	indf2,w,c
 25107  002B32  A4D8               	btfss	status,2,c
 25108  002B34  D00B               	goto	l629
 25109                           
 25110                           ; BSR set to: 0
 25111  002B36  EE20 F002          	lfsr	2,2
 25112  002B3A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25113  002B3C  26D9               	addwf	fsr2l,f,c
 25114  002B3E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25115  002B40  22DA               	addwfc	fsr2h,f,c
 25116  002B42  04DE               	decf	postinc2,w,c
 25117  002B44  A4D8               	btfss	status,2,c
 25118  002B46  D002               	goto	l629
 25119  002B48                     u11410:
 25120                           
 25121                           ; BSR set to: 0
 25122                           ;uart_drv.c: 136: {
 25123                           ;uart_drv.c: 137: DivisionFactor = 16;
 25124  002B48  0E10               	movlw	16
 25125  002B4A  D013               	goto	L30
 25126  002B4C                     l629:
 25127                           
 25128                           ; BSR set to: 0
 25129                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 25130                           
 25131                           ; BSR set to: 0
 25132  002B4C  EE20 F002          	lfsr	2,2
 25133  002B50  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25134  002B52  26D9               	addwf	fsr2l,f,c
 25135  002B54  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25136  002B56  22DA               	addwfc	fsr2h,f,c
 25137  002B58  04DE               	decf	postinc2,w,c
 25138  002B5A  A4D8               	btfss	status,2,c
 25139  002B5C  D00B               	goto	l631
 25140                           
 25141                           ; BSR set to: 0
 25142  002B5E  EE20 F002          	lfsr	2,2
 25143  002B62  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25144  002B64  26D9               	addwf	fsr2l,f,c
 25145  002B66  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25146  002B68  22DA               	addwfc	fsr2h,f,c
 25147  002B6A  04DE               	decf	postinc2,w,c
 25148  002B6C  A4D8               	btfss	status,2,c
 25149  002B6E  D002               	goto	l631
 25150                           
 25151                           ; BSR set to: 0
 25152                           ;uart_drv.c: 140: {
 25153                           ;uart_drv.c: 141: DivisionFactor = 4;
 25154  002B70  0E04               	movlw	4
 25155  002B72                     L30:
 25156  002B72  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 25157  002B74                     l631:
 25158                           
 25159                           ; BSR set to: 0
 25160                           ;uart_drv.c: 146: }
 25161                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 25162                           
 25163                           ; BSR set to: 0
 25164                           
 25165                           ; BSR set to: 0
 25166                           
 25167                           ; BSR set to: 0
 25168                           
 25169                           ; BSR set to: 0
 25170                           
 25171                           ;uart_drv.c: 143: else
 25172                           ;uart_drv.c: 144: {
 25173                           
 25174                           ; BSR set to: 0
 25175  002B74  EE20 F00D          	lfsr	2,13
 25176  002B78  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25177  002B7A  26D9               	addwf	fsr2l,f,c
 25178  002B7C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25179  002B7E  22DA               	addwfc	fsr2h,f,c
 25180  002B80  CFDE F089          	movff	postinc2,___lldiv@dividend
 25181  002B84  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 25182  002B88  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 25183  002B8C  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 25184  002B90  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 25185  002B92  6F7D               	movwf	___lmul@multiplier& (0+255),b
 25186  002B94  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 25187  002B96  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 25188  002B98  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 25189  002B9A  EE20 F011          	lfsr	2,17
 25190  002B9E  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25191  002BA0  26D9               	addwf	fsr2l,f,c
 25192  002BA2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25193  002BA4  22DA               	addwfc	fsr2h,f,c
 25194  002BA6  CFDE F081          	movff	postinc2,___lmul@multiplicand
 25195  002BAA  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 25196  002BAE  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 25197  002BB2  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 25198  002BB6  EC39  F029         	call	___lmul	;wreg free
 25199  002BBA  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 25200  002BBE  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 25201  002BC2  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 25202  002BC6  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 25203  002BCA  EC13  F026         	call	___lldiv	;wreg free
 25204  002BCE  0EFF               	movlw	255
 25205  002BD0  0100               	movlb	0	; () banked
 25206  002BD2  2589               	addwf	?___lldiv& (0+255),w,b
 25207  002BD4  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 25208  002BD6  0EFF               	movlw	255
 25209  002BD8  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 25210  002BDA  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 25211                           
 25212                           ; BSR set to: 0
 25213                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 25214  002BDC  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 25215  002BDE  A4D8               	btfss	status,2,c
 25216  002BE0  D005               	goto	l633
 25217                           
 25218                           ; BSR set to: 0
 25219                           ;uart_drv.c: 152: {
 25220                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 25221  002BE2  0E00               	movlw	0
 25222  002BE4  6E7F               	movwf	3967,c	;volatile
 25223                           
 25224                           ; BSR set to: 0
 25225                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 25226  002BE6  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 25227                           
 25228                           ;uart_drv.c: 156: }
 25229  002BEA  0012               	return	
 25230  002BEC                     l633:
 25231                           
 25232                           ; BSR set to: 0
 25233                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 25234                           
 25235                           ; BSR set to: 0
 25236  002BEC  0E02               	movlw	2
 25237  002BEE  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 25238  002BF0  A4D8               	btfss	status,2,c
 25239  002BF2  0012               	return	
 25240                           
 25241                           ; BSR set to: 0
 25242                           ;uart_drv.c: 158: {
 25243                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 25244  002BF4  0E00               	movlw	0
 25245  002BF6  6E7D               	movwf	3965,c	;volatile
 25246                           
 25247                           ; BSR set to: 0
 25248                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 25249  002BF8  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 25250                           
 25251                           ; BSR set to: 0
 25252  002BFC  0012               	return	
 25253  002BFE                     __end_of_SetUartBaudRate:
 25254                           	opt stack 0
 25255                           tosu	equ	0xFFF
 25256                           tosh	equ	0xFFE
 25257                           tosl	equ	0xFFD
 25258                           pclath	equ	0xFFA
 25259                           tblptru	equ	0xFF8
 25260                           tblptrh	equ	0xFF7
 25261                           tblptrl	equ	0xFF6
 25262                           tablat	equ	0xFF5
 25263                           prodh	equ	0xFF4
 25264                           prodl	equ	0xFF3
 25265                           intcon	equ	0xFF2
 25266                           intcon2	equ	0xFF1
 25267                           intcon3	equ	0xFF0
 25268                           indf0	equ	0xFEF
 25269                           postinc0	equ	0xFEE
 25270                           plusw0	equ	0xFEB
 25271                           fsr0h	equ	0xFEA
 25272                           fsr0l	equ	0xFE9
 25273                           wreg	equ	0xFE8
 25274                           indf1	equ	0xFE7
 25275                           postinc1	equ	0xFE6
 25276                           postdec1	equ	0xFE5
 25277                           plusw1	equ	0xFE3
 25278                           fsr1h	equ	0xFE2
 25279                           fsr1l	equ	0xFE1
 25280                           indf2	equ	0xFDF
 25281                           postinc2	equ	0xFDE
 25282                           postdec2	equ	0xFDD
 25283                           plusw2	equ	0xFDB
 25284                           fsr2h	equ	0xFDA
 25285                           fsr2l	equ	0xFD9
 25286                           status	equ	0xFD8
 25287                           
 25288 ;; *************** function ___lmul *****************
 25289 ;; Defined at:
 25290 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 25291 ;; Parameters:    Size  Location     Type
 25292 ;;  multiplier      4   29[BANK0 ] unsigned long 
 25293 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 25294 ;; Auto vars:     Size  Location     Type
 25295 ;;  product         4   37[BANK0 ] unsigned long 
 25296 ;; Return value:  Size  Location     Type
 25297 ;;                  4   29[BANK0 ] unsigned long 
 25298 ;; Registers used:
 25299 ;;		wreg, status,2, status,0
 25300 ;; Tracked objects:
 25301 ;;		On entry : 0/0
 25302 ;;		On exit  : 0/0
 25303 ;;		Unchanged: 0/0
 25304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25305 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25306 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25308 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25309 ;;Total ram usage:       12 bytes
 25310 ;; Hardware stack levels used:    1
 25311 ;; Hardware stack levels required when called:   11
 25312 ;; This function calls:
 25313 ;;		Nothing
 25314 ;; This function is called by:
 25315 ;;		_Tmr_TmrBPrSet
 25316 ;;		_SetUartBaudRate
 25317 ;;		_strtol
 25318 ;; This function uses a non-reentrant model
 25319 ;;
 25320                           
 25321                           	psect	text116
 25322  005272                     __ptext116:
 25323                           	opt stack 0
 25324  005272                     ___lmul:
 25325                           	opt stack 15
 25326                           
 25327                           ; BSR set to: 0
 25328                           ;incstack = 0
 25329  005272  0E00               	movlw	0
 25330  005274  0100               	movlb	0	; () banked
 25331  005276  6F85               	movwf	___lmul@product& (0+255),b
 25332  005278  0E00               	movlw	0
 25333  00527A  6F86               	movwf	(___lmul@product+1)& (0+255),b
 25334  00527C  0E00               	movlw	0
 25335  00527E  6F87               	movwf	(___lmul@product+2)& (0+255),b
 25336  005280  0E00               	movlw	0
 25337  005282  6F88               	movwf	(___lmul@product+3)& (0+255),b
 25338  005284                     
 25339                           ; BSR set to: 0
 25340                           
 25341                           ; BSR set to: 0
 25342  005284  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 25343  005286  D008               	goto	l2625
 25344                           
 25345                           ; BSR set to: 0
 25346  005288  5181               	movf	___lmul@multiplicand& (0+255),w,b
 25347  00528A  2785               	addwf	___lmul@product& (0+255),f,b
 25348  00528C  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 25349  00528E  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 25350  005290  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 25351  005292  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 25352  005294  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 25353  005296  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 25354  005298                     l2625:
 25355                           
 25356                           ; BSR set to: 0
 25357                           
 25358                           ; BSR set to: 0
 25359  005298  90D8               	bcf	status,0,c
 25360  00529A  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 25361  00529C  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 25362  00529E  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 25363  0052A0  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 25364                           
 25365                           ; BSR set to: 0
 25366  0052A2  90D8               	bcf	status,0,c
 25367  0052A4  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 25368  0052A6  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 25369  0052A8  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 25370  0052AA  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 25371  0052AC  517D               	movf	___lmul@multiplier& (0+255),w,b
 25372  0052AE  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 25373  0052B0  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 25374  0052B2  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 25375  0052B4  A4D8               	btfss	status,2,c
 25376  0052B6  D7E6               	goto	l2624
 25377                           
 25378                           ; BSR set to: 0
 25379  0052B8  C085  F07D         	movff	___lmul@product,?___lmul
 25380  0052BC  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 25381  0052C0  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 25382  0052C4  C088  F080         	movff	___lmul@product+3,?___lmul+3
 25383                           
 25384                           ; BSR set to: 0
 25385  0052C8  0012               	return		;funcret
 25386  0052CA                     __end_of___lmul:
 25387                           	opt stack 0
 25388                           tosu	equ	0xFFF
 25389                           tosh	equ	0xFFE
 25390                           tosl	equ	0xFFD
 25391                           pclath	equ	0xFFA
 25392                           tblptru	equ	0xFF8
 25393                           tblptrh	equ	0xFF7
 25394                           tblptrl	equ	0xFF6
 25395                           tablat	equ	0xFF5
 25396                           prodh	equ	0xFF4
 25397                           prodl	equ	0xFF3
 25398                           intcon	equ	0xFF2
 25399                           intcon2	equ	0xFF1
 25400                           intcon3	equ	0xFF0
 25401                           indf0	equ	0xFEF
 25402                           postinc0	equ	0xFEE
 25403                           plusw0	equ	0xFEB
 25404                           fsr0h	equ	0xFEA
 25405                           fsr0l	equ	0xFE9
 25406                           wreg	equ	0xFE8
 25407                           indf1	equ	0xFE7
 25408                           postinc1	equ	0xFE6
 25409                           postdec1	equ	0xFE5
 25410                           plusw1	equ	0xFE3
 25411                           fsr1h	equ	0xFE2
 25412                           fsr1l	equ	0xFE1
 25413                           indf2	equ	0xFDF
 25414                           postinc2	equ	0xFDE
 25415                           postdec2	equ	0xFDD
 25416                           plusw2	equ	0xFDB
 25417                           fsr2h	equ	0xFDA
 25418                           fsr2l	equ	0xFD9
 25419                           status	equ	0xFD8
 25420                           
 25421 ;; *************** function _UartSetConfigLow *****************
 25422 ;; Defined at:
 25423 ;;		line 228 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25424 ;; Parameters:    Size  Location     Type
 25425 ;;		None
 25426 ;; Auto vars:     Size  Location     Type
 25427 ;;		None
 25428 ;; Return value:  Size  Location     Type
 25429 ;;                  1    wreg      void 
 25430 ;; Registers used:
 25431 ;;		wreg, status,2
 25432 ;; Tracked objects:
 25433 ;;		On entry : 0/0
 25434 ;;		On exit  : 0/0
 25435 ;;		Unchanged: 0/0
 25436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25441 ;;Total ram usage:        0 bytes
 25442 ;; Hardware stack levels used:    1
 25443 ;; Hardware stack levels required when called:   11
 25444 ;; This function calls:
 25445 ;;		Nothing
 25446 ;; This function is called by:
 25447 ;;		_ConfigureModem
 25448 ;; This function uses a non-reentrant model
 25449 ;;
 25450                           
 25451                           	psect	text117
 25452  0052CA                     __ptext117:
 25453                           	opt stack 0
 25454  0052CA                     _UartSetConfigLow:
 25455                           	opt stack 15
 25456                           
 25457                           ;mdm_gsm_gprs.c: 230: UartConfig.UartEnable = ((UINT8)(1));
 25458                           
 25459                           ; BSR set to: 0
 25460                           ;incstack = 0
 25461  0052CA  0E01               	movlw	1
 25462  0052CC  0103               	movlb	3	; () banked
 25463  0052CE  6F28               	movwf	_UartConfig& (0+255),b
 25464                           
 25465                           ;mdm_gsm_gprs.c: 231: UartConfig.UartMode = ((UINT8)(0));
 25466  0052D0  0E00               	movlw	0
 25467  0052D2  6F29               	movwf	(_UartConfig+1)& (0+255),b
 25468                           
 25469                           ;mdm_gsm_gprs.c: 232: UartConfig.BaudRateMode = ((UINT8)(0));
 25470  0052D4  0E00               	movlw	0
 25471  0052D6  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 25472                           
 25473                           ;mdm_gsm_gprs.c: 233: UartConfig.HighBaudMode = ((UINT8)(0));
 25474  0052D8  0E00               	movlw	0
 25475  0052DA  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 25476                           
 25477                           ;mdm_gsm_gprs.c: 234: UartConfig.Tx9bitMode = ((UINT8)(0));
 25478  0052DC  0E00               	movlw	0
 25479  0052DE  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 25480                           
 25481                           ;mdm_gsm_gprs.c: 235: UartConfig.Rx9bitMode = ((UINT8)(0));
 25482  0052E0  0E00               	movlw	0
 25483  0052E2  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 25484                           
 25485                           ;mdm_gsm_gprs.c: 236: UartConfig.TxEnable = ((UINT8)(1));
 25486  0052E4  0E01               	movlw	1
 25487  0052E6  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 25488                           
 25489                           ;mdm_gsm_gprs.c: 237: UartConfig.RxEnable = ((UINT8)(1));
 25490  0052E8  0E01               	movlw	1
 25491  0052EA  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 25492                           
 25493                           ;mdm_gsm_gprs.c: 238: UartConfig.SendBreakEnable = ((UINT8)(0));
 25494  0052EC  0E00               	movlw	0
 25495  0052EE  6F30               	movwf	(_UartConfig+8)& (0+255),b
 25496                           
 25497                           ;mdm_gsm_gprs.c: 239: UartConfig.AutobaudEnable = ((UINT8)(0));
 25498  0052F0  0E00               	movlw	0
 25499  0052F2  6F31               	movwf	(_UartConfig+9)& (0+255),b
 25500                           
 25501                           ;mdm_gsm_gprs.c: 240: UartConfig.WakeUpEnable = ((UINT8)(0));
 25502  0052F4  0E00               	movlw	0
 25503  0052F6  6F32               	movwf	(_UartConfig+10)& (0+255),b
 25504                           
 25505                           ;mdm_gsm_gprs.c: 241: UartConfig.TxInterruptEnable = ((UINT8)(0));
 25506  0052F8  0E00               	movlw	0
 25507  0052FA  6F33               	movwf	(_UartConfig+11)& (0+255),b
 25508                           
 25509                           ;mdm_gsm_gprs.c: 242: UartConfig.RxInterruptEnable = ((UINT8)(1));
 25510  0052FC  0E01               	movlw	1
 25511  0052FE  6F34               	movwf	(_UartConfig+12)& (0+255),b
 25512                           
 25513                           ;mdm_gsm_gprs.c: 243: UartConfig.McuBusClock = ((UINT32)(48000000));
 25514  005300  0E00               	movlw	0
 25515  005302  6F35               	movwf	(_UartConfig+13)& (0+255),b
 25516  005304  0E6C               	movlw	108
 25517  005306  6F36               	movwf	(_UartConfig+14)& (0+255),b
 25518  005308  0EDC               	movlw	220
 25519  00530A  6F37               	movwf	(_UartConfig+15)& (0+255),b
 25520  00530C  0E02               	movlw	2
 25521  00530E  6F38               	movwf	(_UartConfig+16)& (0+255),b
 25522                           
 25523                           ;mdm_gsm_gprs.c: 244: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 25524  005310  0E80               	movlw	128
 25525  005312  6F39               	movwf	(_UartConfig+17)& (0+255),b
 25526  005314  0E25               	movlw	37
 25527  005316  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 25528  005318  0E00               	movlw	0
 25529  00531A  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 25530  00531C  0E00               	movlw	0
 25531  00531E  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 25532                           
 25533                           ; BSR set to: 3
 25534  005320  0012               	return		;funcret
 25535  005322                     __end_of_UartSetConfigLow:
 25536                           	opt stack 0
 25537                           tosu	equ	0xFFF
 25538                           tosh	equ	0xFFE
 25539                           tosl	equ	0xFFD
 25540                           pclath	equ	0xFFA
 25541                           tblptru	equ	0xFF8
 25542                           tblptrh	equ	0xFF7
 25543                           tblptrl	equ	0xFF6
 25544                           tablat	equ	0xFF5
 25545                           prodh	equ	0xFF4
 25546                           prodl	equ	0xFF3
 25547                           intcon	equ	0xFF2
 25548                           intcon2	equ	0xFF1
 25549                           intcon3	equ	0xFF0
 25550                           indf0	equ	0xFEF
 25551                           postinc0	equ	0xFEE
 25552                           plusw0	equ	0xFEB
 25553                           fsr0h	equ	0xFEA
 25554                           fsr0l	equ	0xFE9
 25555                           wreg	equ	0xFE8
 25556                           indf1	equ	0xFE7
 25557                           postinc1	equ	0xFE6
 25558                           postdec1	equ	0xFE5
 25559                           plusw1	equ	0xFE3
 25560                           fsr1h	equ	0xFE2
 25561                           fsr1l	equ	0xFE1
 25562                           indf2	equ	0xFDF
 25563                           postinc2	equ	0xFDE
 25564                           postdec2	equ	0xFDD
 25565                           plusw2	equ	0xFDB
 25566                           fsr2h	equ	0xFDA
 25567                           fsr2l	equ	0xFD9
 25568                           status	equ	0xFD8
 25569                           
 25570 ;; *************** function _CheckModem *****************
 25571 ;; Defined at:
 25572 ;;		line 282 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25573 ;; Parameters:    Size  Location     Type
 25574 ;;		None
 25575 ;; Auto vars:     Size  Location     Type
 25576 ;;		None
 25577 ;; Return value:  Size  Location     Type
 25578 ;;                  1    wreg      void 
 25579 ;; Registers used:
 25580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25581 ;; Tracked objects:
 25582 ;;		On entry : 0/0
 25583 ;;		On exit  : 0/0
 25584 ;;		Unchanged: 0/0
 25585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25590 ;;Total ram usage:        0 bytes
 25591 ;; Hardware stack levels used:    1
 25592 ;; Hardware stack levels required when called:   14
 25593 ;; This function calls:
 25594 ;;		_GenerateEvt
 25595 ;;		_OsTmr_GetTimerStatus
 25596 ;;		_OsTmr_StartTimer
 25597 ;;		_ReceiveEvt
 25598 ;;		_Uart_WriteConstString
 25599 ;; This function is called by:
 25600 ;;		_Mdm_MainTask
 25601 ;; This function uses a non-reentrant model
 25602 ;;
 25603                           
 25604                           	psect	text118
 25605  00219A                     __ptext118:
 25606                           	opt stack 0
 25607  00219A                     _CheckModem:
 25608                           	opt stack 13
 25609                           
 25610                           ;mdm_gsm_gprs.c: 284: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 25611                           ;mdm_gsm_gprs.c: 285: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 25612                           ;mdm_gsm_gprs.c: 287: switch (CheckMdmSts)
 25613                           
 25614                           ; BSR set to: 3
 25615                           ;incstack = 0
 25616  00219A  D09C               	goto	l982
 25617  00219C                     
 25618                           ;mdm_gsm_gprs.c: 291: OsTmr_StartTimer(&Timeout,2000);
 25619  00219C  0EF2               	movlw	low CheckModem@Timeout
 25620  00219E  0100               	movlb	0	; () banked
 25621  0021A0  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25622  0021A2  0E03               	movlw	high CheckModem@Timeout
 25623  0021A4  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25624  0021A6  0ED0               	movlw	208
 25625  0021A8  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25626  0021AA  0E07               	movlw	7
 25627  0021AC  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25628  0021AE  0E00               	movlw	0
 25629  0021B0  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25630  0021B2  0E00               	movlw	0
 25631  0021B4  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25632  0021B6  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 25633                           
 25634                           ;mdm_gsm_gprs.c: 293: CheckMdmSts = MdmCh_InitialDelay;
 25635  0021BA  0E01               	movlw	1
 25636  0021BC  0101               	movlb	1	; () banked
 25637  0021BE  6FF5               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25638                           
 25639                           ;mdm_gsm_gprs.c: 294: break;
 25640  0021C0  0012               	return	
 25641  0021C2                     
 25642                           ; BSR set to: 1
 25643                           ;mdm_gsm_gprs.c: 298: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25644                           
 25645                           ; BSR set to: 1
 25646  0021C2  0EF2               	movlw	low CheckModem@Timeout
 25647  0021C4  0100               	movlb	0	; () banked
 25648  0021C6  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25649  0021C8  0E03               	movlw	high CheckModem@Timeout
 25650  0021CA  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25651  0021CC  ECFB  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 25652  0021D0  06E8               	decf	wreg,f,c
 25653  0021D2  A4D8               	btfss	status,2,c
 25654  0021D4  0012               	return	
 25655                           
 25656                           ;mdm_gsm_gprs.c: 299: {
 25657                           ;mdm_gsm_gprs.c: 301: CheckMdmSts = MdmCh_SendATE1;
 25658  0021D6  0E02               	movlw	2
 25659  0021D8  0101               	movlb	1	; () banked
 25660  0021DA  6FF5               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25661                           
 25662                           ; BSR set to: 1
 25663                           ;mdm_gsm_gprs.c: 302: }
 25664                           ;mdm_gsm_gprs.c: 303: break;
 25665  0021DC  0012               	return	
 25666  0021DE                     
 25667                           ; BSR set to: 1
 25668                           ;mdm_gsm_gprs.c: 307: Uart_WriteConstString(1,"AT\r\n");
 25669                           
 25670                           ; BSR set to: 1
 25671  0021DE  0EE5               	movlw	low STR_1
 25672  0021E0  0100               	movlb	0	; () banked
 25673  0021E2  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25674  0021E4  0EFF               	movlw	high STR_1
 25675  0021E6  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25676  0021E8  0E01               	movlw	1
 25677  0021EA  EC6F  F02C         	call	_Uart_WriteConstString
 25678                           
 25679                           ;mdm_gsm_gprs.c: 309: OsTmr_StartTimer(&Timeout,2000u);
 25680  0021EE  0EF2               	movlw	low CheckModem@Timeout
 25681  0021F0  0100               	movlb	0	; () banked
 25682  0021F2  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25683  0021F4  0E03               	movlw	high CheckModem@Timeout
 25684  0021F6  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25685  0021F8  0ED0               	movlw	208
 25686  0021FA  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25687  0021FC  0E07               	movlw	7
 25688  0021FE  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25689  002200  0E00               	movlw	0
 25690  002202  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25691  002204  0E00               	movlw	0
 25692  002206  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25693  002208  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 25694                           
 25695                           ;mdm_gsm_gprs.c: 311: CheckMdmSts = MdmCh_WaitEcho;
 25696  00220C  0E03               	movlw	3
 25697  00220E  0101               	movlb	1	; () banked
 25698  002210  6FF5               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25699                           
 25700                           ;mdm_gsm_gprs.c: 312: break;
 25701  002212  0012               	return	
 25702  002214                     
 25703                           ; BSR set to: 1
 25704                           ;mdm_gsm_gprs.c: 316: if (ReceiveEvt(&NewStringReceived))
 25705                           
 25706                           ; BSR set to: 1
 25707  002214  0E3C               	movlw	low _NewStringReceived
 25708  002216  0100               	movlb	0	; () banked
 25709  002218  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25710  00221A  0E00               	movlw	high _NewStringReceived
 25711  00221C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25712  00221E  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 25713  002222  0900               	iorlw	0
 25714  002224  B4D8               	btfsc	status,2,c
 25715  002226  D030               	goto	l989
 25716                           
 25717                           ;mdm_gsm_gprs.c: 317: {
 25718                           ;mdm_gsm_gprs.c: 319: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 25719  002228  CC58  FFE8         	movff	_RxBuffer,wreg
 25720  00222C  0A4F               	xorlw	79
 25721  00222E  A4D8               	btfss	status,2,c
 25722  002230  D005               	goto	u13220
 25723  002232  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25724  002236  0A4B               	xorlw	75
 25725  002238  B4D8               	btfsc	status,2,c
 25726  00223A  D00A               	goto	u13240
 25727  00223C                     u13220:
 25728  00223C  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25729  002240  0A4F               	xorlw	79
 25730  002242  A4D8               	btfss	status,2,c
 25731  002244  0012               	return	
 25732  002246  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 25733  00224A  0A4B               	xorlw	75
 25734  00224C  A4D8               	btfss	status,2,c
 25735  00224E  0012               	return	
 25736  002250                     u13240:
 25737                           
 25738                           ;mdm_gsm_gprs.c: 320: {
 25739                           ;mdm_gsm_gprs.c: 321: MdmStatus = ModemReady;
 25740  002250  0E02               	movlw	2
 25741  002252  0100               	movlb	0	; () banked
 25742  002254  6FD3               	movwf	_MdmStatus& (0+255),b
 25743                           
 25744                           ; BSR set to: 0
 25745                           ;mdm_gsm_gprs.c: 323: GenerateEvt(&MdmOnOffPulseRequest);
 25746  002256  0EE2               	movlw	low _MdmOnOffPulseRequest
 25747  002258  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25748  00225A  0E00               	movlw	high _MdmOnOffPulseRequest
 25749  00225C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25750  00225E  EC81  F030         	call	_GenerateEvt	;wreg free
 25751                           
 25752                           ;mdm_gsm_gprs.c: 325: OsTmr_StartTimer(&Timeout,1000u);
 25753  002262  0EF2               	movlw	low CheckModem@Timeout
 25754  002264  0100               	movlb	0	; () banked
 25755  002266  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25756  002268  0E03               	movlw	high CheckModem@Timeout
 25757  00226A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25758  00226C  0EE8               	movlw	232
 25759  00226E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25760  002270  0E03               	movlw	3
 25761  002272  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25762  002274  0E00               	movlw	0
 25763  002276  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25764  002278  0E00               	movlw	0
 25765  00227A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25766  00227C  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 25767                           
 25768                           ;mdm_gsm_gprs.c: 327: CheckMdmSts = MdmCh_Delay;
 25769  002280  0E04               	movlw	4
 25770  002282  0101               	movlb	1	; () banked
 25771  002284  6FF5               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25772                           
 25773                           ; BSR set to: 1
 25774                           ;mdm_gsm_gprs.c: 328: }
 25775                           ;mdm_gsm_gprs.c: 329: }
 25776  002286  0012               	return	
 25777  002288                     l989:
 25778                           
 25779                           ;mdm_gsm_gprs.c: 330: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25780                           
 25781                           ; BSR set to: 1
 25782  002288  0EF2               	movlw	low CheckModem@Timeout
 25783  00228A  0100               	movlb	0	; () banked
 25784  00228C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25785  00228E  0E03               	movlw	high CheckModem@Timeout
 25786  002290  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25787  002292  ECFB  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 25788  002296  06E8               	decf	wreg,f,c
 25789  002298  A4D8               	btfss	status,2,c
 25790  00229A  0012               	return	
 25791                           
 25792                           ;mdm_gsm_gprs.c: 331: {
 25793                           ;mdm_gsm_gprs.c: 333: MdmStatus = ModemOff;
 25794  00229C  0E00               	movlw	0
 25795  00229E  0100               	movlb	0	; () banked
 25796  0022A0  6FD3               	movwf	_MdmStatus& (0+255),b
 25797                           
 25798                           ;mdm_gsm_gprs.c: 335: ComChecCompleted = 1u;
 25799  0022A2  0E01               	movlw	1
 25800  0022A4  6E2B               	movwf	_ComChecCompleted,c
 25801                           
 25802                           ;mdm_gsm_gprs.c: 337: CheckMdmSts = MdmCh_Done;
 25803  0022A6  0E05               	movlw	5
 25804  0022A8  0101               	movlb	1	; () banked
 25805  0022AA  6FF5               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25806                           
 25807                           ; BSR set to: 1
 25808                           ;mdm_gsm_gprs.c: 342: }
 25809                           ;mdm_gsm_gprs.c: 343: break;
 25810                           
 25811                           ; BSR set to: 1
 25812                           
 25813                           ;mdm_gsm_gprs.c: 339: else
 25814                           ;mdm_gsm_gprs.c: 340: {
 25815                           
 25816                           ; BSR set to: 1
 25817                           
 25818                           ;mdm_gsm_gprs.c: 338: }
 25819  0022AC  0012               	return	
 25820  0022AE                     
 25821                           ; BSR set to: 1
 25822                           ;mdm_gsm_gprs.c: 347: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25823                           
 25824                           ; BSR set to: 1
 25825  0022AE  0EF2               	movlw	low CheckModem@Timeout
 25826  0022B0  0100               	movlb	0	; () banked
 25827  0022B2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25828  0022B4  0E03               	movlw	high CheckModem@Timeout
 25829  0022B6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25830  0022B8  ECFB  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 25831  0022BC  06E8               	decf	wreg,f,c
 25832  0022BE  A4D8               	btfss	status,2,c
 25833  0022C0  0012               	return	
 25834                           
 25835                           ;mdm_gsm_gprs.c: 348: {
 25836                           ;mdm_gsm_gprs.c: 350: MdmStatus = ModemOff;
 25837  0022C2  0E00               	movlw	0
 25838  0022C4  0100               	movlb	0	; () banked
 25839  0022C6  6FD3               	movwf	_MdmStatus& (0+255),b
 25840                           
 25841                           ;mdm_gsm_gprs.c: 352: ComChecCompleted = 1u;
 25842  0022C8  0E01               	movlw	1
 25843  0022CA  6E2B               	movwf	_ComChecCompleted,c
 25844                           
 25845                           ;mdm_gsm_gprs.c: 354: CheckMdmSts = MdmCh_Done;
 25846  0022CC  0E05               	movlw	5
 25847  0022CE  0101               	movlb	1	; () banked
 25848  0022D0  6FF5               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25849                           
 25850                           ; BSR set to: 1
 25851                           ;mdm_gsm_gprs.c: 364: }
 25852                           
 25853                           ; BSR set to: 1
 25854                           ;mdm_gsm_gprs.c: 363: break;
 25855                           
 25856                           ;mdm_gsm_gprs.c: 362: default:
 25857                           
 25858                           ; BSR set to: 1
 25859                           ;mdm_gsm_gprs.c: 360: break;
 25860                           
 25861                           ;mdm_gsm_gprs.c: 358: case MdmCh_Done:
 25862                           
 25863                           ; BSR set to: 1
 25864                           ;mdm_gsm_gprs.c: 355: }
 25865                           ;mdm_gsm_gprs.c: 356: break;
 25866  0022D2  0012               	return	
 25867  0022D4                     l982:
 25868                           
 25869                           ; BSR set to: 1
 25870  0022D4  0101               	movlb	1	; () banked
 25871  0022D6  51F5               	movf	CheckModem@CheckMdmSts& (0+255),w,b
 25872                           
 25873                           ; Switch size 1, requested type "space"
 25874                           ; Number of cases is 6, Range of values is 0 to 5
 25875                           ; switch strategies available:
 25876                           ; Name         Instructions Cycles
 25877                           ; simple_byte           19    10 (average)
 25878                           ;	Chosen strategy is simple_byte
 25879  0022D8  0A00               	xorlw	0	; case 0
 25880  0022DA  B4D8               	btfsc	status,2,c
 25881  0022DC  D75F               	goto	l983
 25882  0022DE  0A01               	xorlw	1	; case 1
 25883  0022E0  B4D8               	btfsc	status,2,c
 25884  0022E2  D76F               	goto	l985
 25885  0022E4  0A03               	xorlw	3	; case 2
 25886  0022E6  B4D8               	btfsc	status,2,c
 25887  0022E8  D77A               	goto	l987
 25888  0022EA  0A01               	xorlw	1	; case 3
 25889  0022EC  B4D8               	btfsc	status,2,c
 25890  0022EE  D792               	goto	l988
 25891  0022F0  0A07               	xorlw	7	; case 4
 25892  0022F2  B4D8               	btfsc	status,2,c
 25893  0022F4  D7DC               	goto	l998
 25894  0022F6  0A01               	xorlw	1	; case 5
 25895  0022F8  0012               	return	
 25896  0022FA                     __end_of_CheckModem:
 25897                           	opt stack 0
 25898                           tosu	equ	0xFFF
 25899                           tosh	equ	0xFFE
 25900                           tosl	equ	0xFFD
 25901                           pclath	equ	0xFFA
 25902                           tblptru	equ	0xFF8
 25903                           tblptrh	equ	0xFF7
 25904                           tblptrl	equ	0xFF6
 25905                           tablat	equ	0xFF5
 25906                           prodh	equ	0xFF4
 25907                           prodl	equ	0xFF3
 25908                           intcon	equ	0xFF2
 25909                           intcon2	equ	0xFF1
 25910                           intcon3	equ	0xFF0
 25911                           indf0	equ	0xFEF
 25912                           postinc0	equ	0xFEE
 25913                           plusw0	equ	0xFEB
 25914                           fsr0h	equ	0xFEA
 25915                           fsr0l	equ	0xFE9
 25916                           wreg	equ	0xFE8
 25917                           indf1	equ	0xFE7
 25918                           postinc1	equ	0xFE6
 25919                           postdec1	equ	0xFE5
 25920                           plusw1	equ	0xFE3
 25921                           fsr1h	equ	0xFE2
 25922                           fsr1l	equ	0xFE1
 25923                           indf2	equ	0xFDF
 25924                           postinc2	equ	0xFDE
 25925                           postdec2	equ	0xFDD
 25926                           plusw2	equ	0xFDB
 25927                           fsr2h	equ	0xFDA
 25928                           fsr2l	equ	0xFD9
 25929                           status	equ	0xFD8
 25930                           
 25931 ;; *************** function _MdmCntSm *****************
 25932 ;; Defined at:
 25933 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 25934 ;; Parameters:    Size  Location     Type
 25935 ;;		None
 25936 ;; Auto vars:     Size  Location     Type
 25937 ;;		None
 25938 ;; Return value:  Size  Location     Type
 25939 ;;                  1    wreg      void 
 25940 ;; Registers used:
 25941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25942 ;; Tracked objects:
 25943 ;;		On entry : 0/0
 25944 ;;		On exit  : 0/0
 25945 ;;		Unchanged: 0/0
 25946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25951 ;;Total ram usage:        0 bytes
 25952 ;; Hardware stack levels used:    1
 25953 ;; Hardware stack levels required when called:   12
 25954 ;; This function calls:
 25955 ;;		_InitModemInterface
 25956 ;;		_ReceiveEvt
 25957 ;; This function is called by:
 25958 ;;		_Mdm_DrvMainFn
 25959 ;; This function uses a non-reentrant model
 25960 ;;
 25961                           
 25962                           	psect	text119
 25963  00433C                     __ptext119:
 25964                           	opt stack 0
 25965  00433C                     _MdmCntSm:
 25966                           	opt stack 15
 25967                           
 25968                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 25969                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 25970                           ;mdm_drv.c: 204: switch (MdmCntState)
 25971                           
 25972                           ;incstack = 0
 25973  00433C  D045               	goto	l315
 25974  00433E                     
 25975                           ;mdm_drv.c: 208: InitModemInterface();
 25976  00433E  EC33  F031         	call	_InitModemInterface	;wreg free
 25977                           
 25978                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 25979  004342  0E01               	movlw	1
 25980  004344  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25981                           
 25982                           ;mdm_drv.c: 211: break;
 25983  004346  0012               	return	
 25984  004348                     
 25985                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 25986  004348  0EE2               	movlw	low _MdmOnOffPulseRequest
 25987  00434A  0100               	movlb	0	; () banked
 25988  00434C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25989  00434E  0E00               	movlw	high _MdmOnOffPulseRequest
 25990  004350  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25991  004352  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 25992  004356  0900               	iorlw	0
 25993  004358  B4D8               	btfsc	status,2,c
 25994  00435A  D009               	goto	l319
 25995                           
 25996                           ;mdm_drv.c: 216: {
 25997                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 25998  00435C  0E02               	movlw	2
 25999  00435E  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26000                           
 26001                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 26002  004360  8284               	bsf	3972,1,c	;volatile
 26003                           
 26004                           ;mdm_drv.c: 222: Counter = 0;
 26005  004362  0E00               	movlw	0
 26006  004364  0102               	movlb	2	; () banked
 26007  004366  6FDE               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 26008  004368  0E00               	movlw	0
 26009  00436A  6FDD               	movwf	MdmCntSm@Counter& (0+255),b
 26010                           
 26011                           ;mdm_drv.c: 223: }
 26012  00436C  0012               	return	
 26013  00436E                     l319:
 26014                           
 26015                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 26016                           
 26017                           ; BSR set to: 2
 26018  00436E  0E3D               	movlw	low _MdmResetRequest
 26019  004370  0100               	movlb	0	; () banked
 26020  004372  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26021  004374  0E00               	movlw	high _MdmResetRequest
 26022  004376  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26023  004378  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 26024  00437C  0900               	iorlw	0
 26025  00437E  B4D8               	btfsc	status,2,c
 26026  004380  0012               	return	
 26027                           
 26028                           ;mdm_drv.c: 225: {
 26029                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 26030  004382  0E03               	movlw	3
 26031  004384  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26032                           
 26033                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 26034  004386  8084               	bsf	3972,0,c	;volatile
 26035                           
 26036                           ;mdm_drv.c: 231: Counter = 0;
 26037  004388  0E00               	movlw	0
 26038  00438A  0102               	movlb	2	; () banked
 26039  00438C  6FDE               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 26040  00438E  0E00               	movlw	0
 26041  004390  6FDD               	movwf	MdmCntSm@Counter& (0+255),b
 26042                           
 26043                           ; BSR set to: 2
 26044                           ;mdm_drv.c: 236: }
 26045                           ;mdm_drv.c: 237: break;
 26046                           
 26047                           ; BSR set to: 2
 26048                           
 26049                           ;mdm_drv.c: 233: else
 26050                           ;mdm_drv.c: 234: {
 26051                           
 26052                           ; BSR set to: 2
 26053                           
 26054                           ;mdm_drv.c: 232: }
 26055  004392  0012               	return	
 26056  004394                     
 26057                           ;mdm_drv.c: 241: Counter++;
 26058                           
 26059                           ; BSR set to: 2
 26060  004394  0102               	movlb	2	; () banked
 26061  004396  4BDD               	infsnz	MdmCntSm@Counter& (0+255),f,b
 26062  004398  2BDE               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 26063                           
 26064                           ; BSR set to: 2
 26065                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 26066  00439A  51DE               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 26067  00439C  E104               	bnz	u13140
 26068  00439E  0E96               	movlw	150
 26069  0043A0  5DDD               	subwf	MdmCntSm@Counter& (0+255),w,b
 26070  0043A2  A0D8               	btfss	status,0,c
 26071  0043A4  0012               	return	
 26072  0043A6                     u13140:
 26073                           
 26074                           ; BSR set to: 2
 26075                           ;mdm_drv.c: 244: {
 26076                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 26077  0043A6  9284               	bcf	3972,1,c	;volatile
 26078                           
 26079                           ; BSR set to: 2
 26080                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 26081  0043A8  0E01               	movlw	1
 26082  0043AA  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26083                           
 26084                           ; BSR set to: 2
 26085                           ;mdm_drv.c: 249: }
 26086                           ;mdm_drv.c: 250: break;
 26087  0043AC  0012               	return	
 26088  0043AE                     
 26089                           ;mdm_drv.c: 254: Counter++;
 26090                           
 26091                           ; BSR set to: 2
 26092  0043AE  0102               	movlb	2	; () banked
 26093  0043B0  4BDD               	infsnz	MdmCntSm@Counter& (0+255),f,b
 26094  0043B2  2BDE               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 26095                           
 26096                           ; BSR set to: 2
 26097                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 26098  0043B4  51DE               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 26099  0043B6  E104               	bnz	u13150
 26100  0043B8  0E0A               	movlw	10
 26101  0043BA  5DDD               	subwf	MdmCntSm@Counter& (0+255),w,b
 26102  0043BC  A0D8               	btfss	status,0,c
 26103  0043BE  0012               	return	
 26104  0043C0                     u13150:
 26105                           
 26106                           ; BSR set to: 2
 26107                           ;mdm_drv.c: 257: {
 26108                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 26109  0043C0  9084               	bcf	3972,0,c	;volatile
 26110                           
 26111                           ; BSR set to: 2
 26112                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 26113  0043C2  0E01               	movlw	1
 26114  0043C4  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26115                           
 26116                           ; BSR set to: 2
 26117                           ;mdm_drv.c: 267: }
 26118                           
 26119                           ; BSR set to: 2
 26120                           ;mdm_drv.c: 266: break;
 26121                           
 26122                           ;mdm_drv.c: 265: default:
 26123                           
 26124                           ; BSR set to: 2
 26125                           ;mdm_drv.c: 262: }
 26126                           ;mdm_drv.c: 263: break;
 26127  0043C6  0012               	return	
 26128  0043C8                     l315:
 26129                           
 26130                           ; BSR set to: 2
 26131  0043C8  502E               	movf	MdmCntSm@MdmCntState,w,c
 26132                           
 26133                           ; Switch size 1, requested type "space"
 26134                           ; Number of cases is 4, Range of values is 0 to 3
 26135                           ; switch strategies available:
 26136                           ; Name         Instructions Cycles
 26137                           ; simple_byte           13     7 (average)
 26138                           ;	Chosen strategy is simple_byte
 26139  0043CA  0A00               	xorlw	0	; case 0
 26140  0043CC  B4D8               	btfsc	status,2,c
 26141  0043CE  D7B7               	goto	l316
 26142  0043D0  0A01               	xorlw	1	; case 1
 26143  0043D2  B4D8               	btfsc	status,2,c
 26144  0043D4  D7B9               	goto	l318
 26145  0043D6  0A03               	xorlw	3	; case 2
 26146  0043D8  B4D8               	btfsc	status,2,c
 26147  0043DA  D7DC               	goto	l323
 26148  0043DC  0A01               	xorlw	1	; case 3
 26149  0043DE  A4D8               	btfss	status,2,c
 26150  0043E0  0012               	return	
 26151  0043E2  D7E5               	goto	l325
 26152  0043E4                     __end_of_MdmCntSm:
 26153                           	opt stack 0
 26154                           tosu	equ	0xFFF
 26155                           tosh	equ	0xFFE
 26156                           tosl	equ	0xFFD
 26157                           pclath	equ	0xFFA
 26158                           tblptru	equ	0xFF8
 26159                           tblptrh	equ	0xFF7
 26160                           tblptrl	equ	0xFF6
 26161                           tablat	equ	0xFF5
 26162                           prodh	equ	0xFF4
 26163                           prodl	equ	0xFF3
 26164                           intcon	equ	0xFF2
 26165                           intcon2	equ	0xFF1
 26166                           intcon3	equ	0xFF0
 26167                           indf0	equ	0xFEF
 26168                           postinc0	equ	0xFEE
 26169                           plusw0	equ	0xFEB
 26170                           fsr0h	equ	0xFEA
 26171                           fsr0l	equ	0xFE9
 26172                           wreg	equ	0xFE8
 26173                           indf1	equ	0xFE7
 26174                           postinc1	equ	0xFE6
 26175                           postdec1	equ	0xFE5
 26176                           plusw1	equ	0xFE3
 26177                           fsr1h	equ	0xFE2
 26178                           fsr1l	equ	0xFE1
 26179                           indf2	equ	0xFDF
 26180                           postinc2	equ	0xFDE
 26181                           postdec2	equ	0xFDD
 26182                           plusw2	equ	0xFDB
 26183                           fsr2h	equ	0xFDA
 26184                           fsr2l	equ	0xFD9
 26185                           status	equ	0xFD8
 26186                           
 26187 ;; *************** function _InitModemInterface *****************
 26188 ;; Defined at:
 26189 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 26190 ;; Parameters:    Size  Location     Type
 26191 ;;		None
 26192 ;; Auto vars:     Size  Location     Type
 26193 ;;		None
 26194 ;; Return value:  Size  Location     Type
 26195 ;;                  1    wreg      void 
 26196 ;; Registers used:
 26197 ;;		None
 26198 ;; Tracked objects:
 26199 ;;		On entry : 0/0
 26200 ;;		On exit  : 0/0
 26201 ;;		Unchanged: 0/0
 26202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26207 ;;Total ram usage:        0 bytes
 26208 ;; Hardware stack levels used:    1
 26209 ;; Hardware stack levels required when called:   11
 26210 ;; This function calls:
 26211 ;;		Nothing
 26212 ;; This function is called by:
 26213 ;;		_MdmCntSm
 26214 ;; This function uses a non-reentrant model
 26215 ;;
 26216                           
 26217                           	psect	text120
 26218  006266                     __ptext120:
 26219                           	opt stack 0
 26220  006266                     _InitModemInterface:
 26221                           	opt stack 15
 26222                           
 26223                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 26224                           
 26225                           ;incstack = 0
 26226  006266  9096               	bcf	3990,0,c	;volatile
 26227                           
 26228                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 26229  006268  9296               	bcf	3990,1,c	;volatile
 26230                           
 26231                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 26232  00626A  8496               	bsf	3990,2,c	;volatile
 26233  00626C  0012               	return		;funcret
 26234  00626E                     __end_of_InitModemInterface:
 26235                           	opt stack 0
 26236                           tosu	equ	0xFFF
 26237                           tosh	equ	0xFFE
 26238                           tosl	equ	0xFFD
 26239                           pclath	equ	0xFFA
 26240                           tblptru	equ	0xFF8
 26241                           tblptrh	equ	0xFF7
 26242                           tblptrl	equ	0xFF6
 26243                           tablat	equ	0xFF5
 26244                           prodh	equ	0xFF4
 26245                           prodl	equ	0xFF3
 26246                           intcon	equ	0xFF2
 26247                           intcon2	equ	0xFF1
 26248                           intcon3	equ	0xFF0
 26249                           indf0	equ	0xFEF
 26250                           postinc0	equ	0xFEE
 26251                           plusw0	equ	0xFEB
 26252                           fsr0h	equ	0xFEA
 26253                           fsr0l	equ	0xFE9
 26254                           wreg	equ	0xFE8
 26255                           indf1	equ	0xFE7
 26256                           postinc1	equ	0xFE6
 26257                           postdec1	equ	0xFE5
 26258                           plusw1	equ	0xFE3
 26259                           fsr1h	equ	0xFE2
 26260                           fsr1l	equ	0xFE1
 26261                           indf2	equ	0xFDF
 26262                           postinc2	equ	0xFDE
 26263                           postdec2	equ	0xFDD
 26264                           plusw2	equ	0xFDB
 26265                           fsr2h	equ	0xFDA
 26266                           fsr2l	equ	0xFD9
 26267                           status	equ	0xFD8
 26268                           
 26269 ;; *************** function _InitGprsNetwork *****************
 26270 ;; Defined at:
 26271 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 26272 ;; Parameters:    Size  Location     Type
 26273 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 26274 ;;		 -> NULL(0), 
 26275 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 26276 ;; Auto vars:     Size  Location     Type
 26277 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 26278 ;;  Index           1   50[BANK1 ] unsigned char 
 26279 ;; Return value:  Size  Location     Type
 26280 ;;                  1    wreg      enum E8908
 26281 ;; Registers used:
 26282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26283 ;; Tracked objects:
 26284 ;;		On entry : 0/0
 26285 ;;		On exit  : 0/0
 26286 ;;		Unchanged: 0/0
 26287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26288 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26289 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26290 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26291 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26292 ;;Total ram usage:       56 bytes
 26293 ;; Hardware stack levels used:    1
 26294 ;; Hardware stack levels required when called:   14
 26295 ;; This function calls:
 26296 ;;		_ClearBuffer
 26297 ;;		_OsTmr_GetTimerStatus
 26298 ;;		_OsTmr_StartTimer
 26299 ;;		_ReceiveEvt
 26300 ;;		_StringCopy
 26301 ;;		_Uart_WriteConstString
 26302 ;;		_Uart_WriteString
 26303 ;; This function is called by:
 26304 ;;		_MdmHttp_MainTask
 26305 ;; This function uses a non-reentrant model
 26306 ;;
 26307                           
 26308                           	psect	text121
 26309  000DC8                     __ptext121:
 26310                           	opt stack 0
 26311  000DC8                     _InitGprsNetwork:
 26312                           	opt stack 13
 26313                           
 26314                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 26315                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 26316                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 26317                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 26318                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 26319                           
 26320                           ;incstack = 0
 26321  000DC8  0E00               	movlw	0
 26322  000DCA  0101               	movlb	1	; () banked
 26323  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26324                           
 26325                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 26326  000DCE  D154               	goto	l1216
 26327  000DD0                     
 26328                           ; BSR set to: 1
 26329                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 26330                           
 26331                           ; BSR set to: 1
 26332  000DD0  0EDB               	movlw	low _InitNetwork
 26333  000DD2  0100               	movlb	0	; () banked
 26334  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26335  000DD6  0E00               	movlw	high _InitNetwork
 26336  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26337  000DDA  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 26338  000DDE  0900               	iorlw	0
 26339  000DE0  B4D8               	btfsc	status,2,c
 26340  000DE2  D166               	goto	l1219
 26341                           
 26342                           ;mdm_gsm_gprs_http.c: 137: {
 26343                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 26344  000DE4  0E01               	movlw	1
 26345  000DE6  D141               	goto	L70
 26346  000DE8                     
 26347                           ; BSR set to: 1
 26348                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 26349                           
 26350                           ; BSR set to: 1
 26351  000DE8  0E88               	movlw	low STR_8
 26352  000DEA  0100               	movlb	0	; () banked
 26353  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26354  000DEE  0EFE               	movlw	high STR_8
 26355  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26356  000DF2  0E01               	movlw	1
 26357  000DF4  EC6F  F02C         	call	_Uart_WriteConstString
 26358                           
 26359                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 26360  000DF8  0E07               	movlw	7
 26361  000DFA  0101               	movlb	1	; () banked
 26362  000DFC  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26363                           
 26364                           ; BSR set to: 1
 26365                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 26366  000DFE  0E02               	movlw	2
 26367  000E00  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26368                           
 26369                           ; BSR set to: 1
 26370                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 26371  000E02  0EF5               	movlw	low _ConnTimeout
 26372  000E04  0100               	movlb	0	; () banked
 26373  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26374  000E08  0E02               	movlw	high _ConnTimeout
 26375  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26376  000E0C  0E20               	movlw	32
 26377  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26378  000E10  0E4E               	movlw	78
 26379  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26380  000E14  0E00               	movlw	0
 26381  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26382  000E18  0E00               	movlw	0
 26383  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26384  000E1C  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 26385  000E20  D0C7               	goto	l14169
 26386  000E22                     
 26387                           ; BSR set to: 1
 26388                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 26389                           
 26390                           ; BSR set to: 1
 26391  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 26392  000E24  0100               	movlb	0	; () banked
 26393  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26394  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 26395  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26396  000E2C  0E00               	movlw	0
 26397  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26398  000E30  0E32               	movlw	50
 26399  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26400  000E34  ECDF  F02D         	call	_ClearBuffer	;wreg free
 26401                           
 26402                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 26403  000E38  0EBC               	movlw	low STR_9
 26404  000E3A  0100               	movlb	0	; () banked
 26405  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26406  000E3E  0EFE               	movlw	high STR_9
 26407  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26408  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 26409  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26410  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 26411  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26412  000E4A  0E00               	movlw	0
 26413  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26414  000E4E  0E14               	movlw	20
 26415  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 26416  000E52  EC50  F028         	call	_StringCopy	;wreg free
 26417                           
 26418                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 26419  000E56  0E00               	movlw	0
 26420  000E58  0101               	movlb	1	; () banked
 26421  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26422  000E5C  D01C               	goto	l1222
 26423  000E5E                     
 26424                           ; BSR set to: 1
 26425                           ;mdm_gsm_gprs_http.c: 161: {
 26426                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 26427                           
 26428                           ; BSR set to: 1
 26429  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26430  000E60  0D01               	mullw	1
 26431  000E62  50F3               	movf	prodl,w,c
 26432  000E64  0100               	movlb	0	; () banked
 26433  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 26434  000E68  6ED9               	movwf	fsr2l,c
 26435  000E6A  50F4               	movf	prodh,w,c
 26436  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 26437  000E6E  6EDA               	movwf	fsr2h,c
 26438  000E70  0101               	movlb	1	; () banked
 26439  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26440  000E74  0100               	movlb	0	; () banked
 26441  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26442  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26443  000E7A  0E14               	movlw	20
 26444  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26445  000E7E  0E00               	movlw	0
 26446  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26447  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 26448  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26449  000E86  6EE1               	movwf	fsr1l,c
 26450  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 26451  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26452  000E8C  6EE2               	movwf	fsr1h,c
 26453  000E8E  CFDF FFE7          	movff	indf2,indf1
 26454                           
 26455                           ; BSR set to: 0
 26456  000E92  0101               	movlb	1	; () banked
 26457  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 26458  000E96                     l1222:
 26459                           
 26460                           ; BSR set to: 1
 26461                           
 26462                           ; BSR set to: 1
 26463  000E96  0100               	movlb	0	; () banked
 26464  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 26465  000E9A  0101               	movlb	1	; () banked
 26466  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 26467  000E9E  A0D8               	btfss	status,0,c
 26468  000EA0  D7DE               	goto	l1223
 26469                           
 26470                           ; BSR set to: 1
 26471                           ;mdm_gsm_gprs_http.c: 163: }
 26472                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 26473                           
 26474                           ; BSR set to: 1
 26475  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26476  000EA4  0100               	movlb	0	; () banked
 26477  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26478  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26479  000EAA  0E14               	movlw	20
 26480  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26481  000EAE  0E00               	movlw	0
 26482  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26483  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 26484  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26485  000EB6  6ED9               	movwf	fsr2l,c
 26486  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 26487  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26488  000EBC  6EDA               	movwf	fsr2h,c
 26489  000EBE  0E22               	movlw	34
 26490  000EC0  6EDF               	movwf	indf2,c
 26491                           
 26492                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 26493  000EC2  0101               	movlb	1	; () banked
 26494  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26495  000EC6  0100               	movlb	0	; () banked
 26496  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26497  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26498  000ECC  0E15               	movlw	21
 26499  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26500  000ED0  0E00               	movlw	0
 26501  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26502  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 26503  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26504  000ED8  6ED9               	movwf	fsr2l,c
 26505  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 26506  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26507  000EDE  6EDA               	movwf	fsr2h,c
 26508  000EE0  0E0D               	movlw	13
 26509  000EE2  6EDF               	movwf	indf2,c
 26510                           
 26511                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 26512  000EE4  0101               	movlb	1	; () banked
 26513  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26514  000EE8  0100               	movlb	0	; () banked
 26515  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26516  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26517  000EEE  0E16               	movlw	22
 26518  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26519  000EF2  0E00               	movlw	0
 26520  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26521  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 26522  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26523  000EFA  6ED9               	movwf	fsr2l,c
 26524  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 26525  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26526  000F00  6EDA               	movwf	fsr2h,c
 26527  000F02  0E00               	movlw	0
 26528  000F04  6EDF               	movwf	indf2,c
 26529                           
 26530                           ; BSR set to: 0
 26531                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 26532  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 26533  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 26534  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 26535  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 26536  000F0E  0E01               	movlw	1
 26537  000F10  EC30  F02D         	call	_Uart_WriteString
 26538                           
 26539                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 26540  000F14  0E07               	movlw	7
 26541  000F16  0101               	movlb	1	; () banked
 26542  000F18  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26543                           
 26544                           ; BSR set to: 1
 26545                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 26546  000F1A  0E03               	movlw	3
 26547  000F1C  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26548                           
 26549                           ; BSR set to: 1
 26550                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 26551  000F1E  0EF5               	movlw	low _ConnTimeout
 26552  000F20  0100               	movlb	0	; () banked
 26553  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26554  000F24  0E02               	movlw	high _ConnTimeout
 26555  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26556  000F28  0E20               	movlw	32
 26557  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26558  000F2C  0E4E               	movlw	78
 26559  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26560  000F30  0E00               	movlw	0
 26561  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26562  000F34  0E00               	movlw	0
 26563  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26564  000F38  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 26565  000F3C  D039               	goto	l14169
 26566  000F3E                     
 26567                           ; BSR set to: 1
 26568                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 26569                           
 26570                           ; BSR set to: 1
 26571  000F3E  0E4A               	movlw	low STR_10
 26572  000F40  0100               	movlb	0	; () banked
 26573  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26574  000F44  0EFF               	movlw	high STR_10
 26575  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26576  000F48  0E01               	movlw	1
 26577  000F4A  EC6F  F02C         	call	_Uart_WriteConstString
 26578                           
 26579                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 26580  000F4E  0E07               	movlw	7
 26581  000F50  0101               	movlb	1	; () banked
 26582  000F52  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26583                           
 26584                           ; BSR set to: 1
 26585                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 26586  000F54  0E05               	movlw	5
 26587  000F56  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26588                           
 26589                           ; BSR set to: 1
 26590                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 26591  000F58  0EF5               	movlw	low _ConnTimeout
 26592  000F5A  0100               	movlb	0	; () banked
 26593  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26594  000F5E  0E02               	movlw	high _ConnTimeout
 26595  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26596  000F62  0E20               	movlw	32
 26597  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26598  000F66  0E4E               	movlw	78
 26599  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26600  000F6A  0E00               	movlw	0
 26601  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26602  000F6E  0E00               	movlw	0
 26603  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26604  000F72  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 26605  000F76  D01C               	goto	l14169
 26606  000F78                     
 26607                           ; BSR set to: 1
 26608                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 26609                           
 26610                           ; BSR set to: 1
 26611  000F78  0E58               	movlw	low STR_11
 26612  000F7A  0100               	movlb	0	; () banked
 26613  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26614  000F7E  0EFF               	movlw	high STR_11
 26615  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26616  000F82  0E01               	movlw	1
 26617  000F84  EC6F  F02C         	call	_Uart_WriteConstString
 26618                           
 26619                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 26620  000F88  0E08               	movlw	8
 26621  000F8A  0101               	movlb	1	; () banked
 26622  000F8C  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26623                           
 26624                           ; BSR set to: 1
 26625                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 26626  000F8E  0E05               	movlw	5
 26627  000F90  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26628                           
 26629                           ; BSR set to: 1
 26630                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 26631  000F92  0EF5               	movlw	low _ConnTimeout
 26632  000F94  0100               	movlb	0	; () banked
 26633  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26634  000F98  0E02               	movlw	high _ConnTimeout
 26635  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26636  000F9C  0E20               	movlw	32
 26637  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26638  000FA0  0E4E               	movlw	78
 26639  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26640  000FA4  0E00               	movlw	0
 26641  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26642  000FA8  0E00               	movlw	0
 26643  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26644  000FAC  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 26645  000FB0                     l14169:
 26646                           
 26647                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 26648  000FB0  0E01               	movlw	1
 26649  000FB2  0101               	movlb	1	; () banked
 26650  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26651                           
 26652                           ;mdm_gsm_gprs_http.c: 201: break;
 26653  000FB6  D07C               	goto	l1219
 26654  000FB8                     
 26655                           ; BSR set to: 1
 26656                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 26657                           
 26658                           ; BSR set to: 1
 26659  000FB8  0E02               	movlw	2
 26660  000FBA  D05A               	goto	L69
 26661  000FBC                     
 26662                           ; BSR set to: 1
 26663                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 26664                           
 26665                           ; BSR set to: 1
 26666  000FBC  0E3C               	movlw	low _NewStringReceived
 26667  000FBE  0100               	movlb	0	; () banked
 26668  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26669  000FC2  0E00               	movlw	high _NewStringReceived
 26670  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26671  000FC6  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 26672  000FCA  0900               	iorlw	0
 26673  000FCC  B4D8               	btfsc	status,2,c
 26674  000FCE  D018               	goto	l1229
 26675                           
 26676                           ;mdm_gsm_gprs_http.c: 212: {
 26677                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 26678  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 26679  000FD4  0A4F               	xorlw	79
 26680  000FD6  A4D8               	btfss	status,2,c
 26681  000FD8  D06B               	goto	l1219
 26682  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26683  000FDE  0A4B               	xorlw	75
 26684  000FE0  A4D8               	btfss	status,2,c
 26685  000FE2  D066               	goto	l1219
 26686                           
 26687                           ;mdm_gsm_gprs_http.c: 215: {
 26688                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 26689  000FE4  C02A  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26690                           
 26691                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 26692  000FE8  0E58               	movlw	low _RxBuffer
 26693  000FEA  0100               	movlb	0	; () banked
 26694  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26695  000FEE  0E0C               	movlw	high _RxBuffer
 26696  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26697  000FF2  0E01               	movlw	1
 26698  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26699  000FF6  0E90               	movlw	144
 26700  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26701  000FFA  ECDF  F02D         	call	_ClearBuffer	;wreg free
 26702                           
 26703                           ;mdm_gsm_gprs_http.c: 220: }
 26704                           ;mdm_gsm_gprs_http.c: 221: }
 26705  000FFE  D058               	goto	l1219
 26706  001000                     l1229:
 26707                           
 26708                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26709  001000  0EF5               	movlw	low _ConnTimeout
 26710  001002  0100               	movlb	0	; () banked
 26711  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26712  001006  0E02               	movlw	high _ConnTimeout
 26713  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26714  00100A  ECFB  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 26715  00100E  D029               	goto	L34
 26716  001010                     
 26717                           ; BSR set to: 1
 26718                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 26719                           
 26720                           ; BSR set to: 1
 26721  001010  0E3C               	movlw	low _NewStringReceived
 26722  001012  0100               	movlb	0	; () banked
 26723  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26724  001016  0E00               	movlw	high _NewStringReceived
 26725  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26726  00101A  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 26727  00101E  0900               	iorlw	0
 26728  001020  B4D8               	btfsc	status,2,c
 26729  001022  D018               	goto	l1234
 26730                           
 26731                           ;mdm_gsm_gprs_http.c: 232: {
 26732                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 26733  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 26734  001028  0A2B               	xorlw	43
 26735  00102A  A4D8               	btfss	status,2,c
 26736  00102C  D041               	goto	l1219
 26737  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26738  001032  0A53               	xorlw	83
 26739  001034  A4D8               	btfss	status,2,c
 26740  001036  D03C               	goto	l1219
 26741                           
 26742                           ;mdm_gsm_gprs_http.c: 235: {
 26743                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 26744  001038  C02A  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26745                           
 26746                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 26747  00103C  0E58               	movlw	low _RxBuffer
 26748  00103E  0100               	movlb	0	; () banked
 26749  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26750  001042  0E0C               	movlw	high _RxBuffer
 26751  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26752  001046  0E01               	movlw	1
 26753  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26754  00104A  0E90               	movlw	144
 26755  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26756  00104E  ECDF  F02D         	call	_ClearBuffer	;wreg free
 26757                           
 26758                           ;mdm_gsm_gprs_http.c: 240: }
 26759                           ;mdm_gsm_gprs_http.c: 241: }
 26760  001052  D02E               	goto	l1219
 26761  001054                     l1234:
 26762                           
 26763                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26764  001054  0EF5               	movlw	low _ConnTimeout
 26765  001056  0100               	movlb	0	; () banked
 26766  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26767  00105A  0E02               	movlw	high _ConnTimeout
 26768  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26769  00105E  ECFB  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 26770  001062                     L34:
 26771  001062  06E8               	decf	wreg,f,c
 26772  001064  A4D8               	btfss	status,2,c
 26773  001066  D024               	goto	l1219
 26774                           
 26775                           ;mdm_gsm_gprs_http.c: 243: {
 26776                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 26777  001068  0E06               	movlw	6
 26778  00106A                     L70:
 26779  00106A  0101               	movlb	1	; () banked
 26780  00106C  D003               	goto	L33
 26781  00106E                     
 26782                           ; BSR set to: 1
 26783                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 26784                           
 26785                           ; BSR set to: 1
 26786  00106E  0E03               	movlw	3
 26787  001070                     L69:
 26788  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26789                           
 26790                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 26791  001072  0E00               	movlw	0
 26792  001074                     L33:
 26793  001074  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26794                           
 26795                           ; BSR set to: 1
 26796                           ;mdm_gsm_gprs_http.c: 257: }
 26797                           
 26798                           ; BSR set to: 1
 26799                           ;mdm_gsm_gprs_http.c: 256: break;
 26800                           
 26801                           ;mdm_gsm_gprs_http.c: 255: default:
 26802                           
 26803                           ;mdm_gsm_gprs_http.c: 253: break;
 26804  001076  D01C               	goto	l1219
 26805  001078                     l1216:
 26806                           
 26807                           ; BSR set to: 1
 26808                           
 26809                           ; BSR set to: 1
 26810  001078  51EA               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 26811                           
 26812                           ; Switch size 1, requested type "space"
 26813                           ; Number of cases is 9, Range of values is 0 to 8
 26814                           ; switch strategies available:
 26815                           ; Name         Instructions Cycles
 26816                           ; simple_byte           28    15 (average)
 26817                           ;	Chosen strategy is simple_byte
 26818  00107A  0A00               	xorlw	0	; case 0
 26819  00107C  B4D8               	btfsc	status,2,c
 26820  00107E  D6A8               	goto	l1217
 26821  001080  0A01               	xorlw	1	; case 1
 26822  001082  B4D8               	btfsc	status,2,c
 26823  001084  D6B1               	goto	l1220
 26824  001086  0A03               	xorlw	3	; case 2
 26825  001088  B4D8               	btfsc	status,2,c
 26826  00108A  D6CB               	goto	l1221
 26827  00108C  0A01               	xorlw	1	; case 3
 26828  00108E  B4D8               	btfsc	status,2,c
 26829  001090  D756               	goto	l1225
 26830  001092  0A07               	xorlw	7	; case 4
 26831  001094  B4D8               	btfsc	status,2,c
 26832  001096  D770               	goto	l1226
 26833  001098  0A01               	xorlw	1	; case 5
 26834  00109A  B4D8               	btfsc	status,2,c
 26835  00109C  D78D               	goto	l1227
 26836  00109E  0A03               	xorlw	3	; case 6
 26837  0010A0  B4D8               	btfsc	status,2,c
 26838  0010A2  D7E5               	goto	l1238
 26839  0010A4  0A01               	xorlw	1	; case 7
 26840  0010A6  B4D8               	btfsc	status,2,c
 26841  0010A8  D789               	goto	l1228
 26842  0010AA  0A0F               	xorlw	15	; case 8
 26843  0010AC  B4D8               	btfsc	status,2,c
 26844  0010AE  D7B0               	goto	l1233
 26845  0010B0                     l1219:
 26846                           
 26847                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 26848                           
 26849                           ; BSR set to: 1
 26850  0010B0  0101               	movlb	1	; () banked
 26851  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 26852  0010B4  0012               	return	
 26853  0010B6                     __end_of_InitGprsNetwork:
 26854                           	opt stack 0
 26855                           tosu	equ	0xFFF
 26856                           tosh	equ	0xFFE
 26857                           tosl	equ	0xFFD
 26858                           pclath	equ	0xFFA
 26859                           tblptru	equ	0xFF8
 26860                           tblptrh	equ	0xFF7
 26861                           tblptrl	equ	0xFF6
 26862                           tablat	equ	0xFF5
 26863                           prodh	equ	0xFF4
 26864                           prodl	equ	0xFF3
 26865                           intcon	equ	0xFF2
 26866                           intcon2	equ	0xFF1
 26867                           intcon3	equ	0xFF0
 26868                           indf0	equ	0xFEF
 26869                           postinc0	equ	0xFEE
 26870                           plusw0	equ	0xFEB
 26871                           fsr0h	equ	0xFEA
 26872                           fsr0l	equ	0xFE9
 26873                           wreg	equ	0xFE8
 26874                           indf1	equ	0xFE7
 26875                           postinc1	equ	0xFE6
 26876                           postdec1	equ	0xFE5
 26877                           plusw1	equ	0xFE3
 26878                           fsr1h	equ	0xFE2
 26879                           fsr1l	equ	0xFE1
 26880                           indf2	equ	0xFDF
 26881                           postinc2	equ	0xFDE
 26882                           postdec2	equ	0xFDD
 26883                           plusw2	equ	0xFDB
 26884                           fsr2h	equ	0xFDA
 26885                           fsr2l	equ	0xFD9
 26886                           status	equ	0xFD8
 26887                           
 26888 ;; *************** function _HttpGetMethod *****************
 26889 ;; Defined at:
 26890 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 26891 ;; Parameters:    Size  Location     Type
 26892 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 26893 ;;		 -> HttpGetDataLocal(5), 
 26894 ;; Auto vars:     Size  Location     Type
 26895 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 26896 ;;  Index           1  200[BANK1 ] unsigned char 
 26897 ;; Return value:  Size  Location     Type
 26898 ;;                  1    wreg      enum E8908
 26899 ;; Registers used:
 26900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26901 ;; Tracked objects:
 26902 ;;		On entry : 0/0
 26903 ;;		On exit  : 0/0
 26904 ;;		Unchanged: 0/0
 26905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26906 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26907 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26908 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26909 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26910 ;;Total ram usage:      207 bytes
 26911 ;; Hardware stack levels used:    1
 26912 ;; Hardware stack levels required when called:   14
 26913 ;; This function calls:
 26914 ;;		_ClearBuffer
 26915 ;;		_OsTmr_GetTimerStatus
 26916 ;;		_OsTmr_StartTimer
 26917 ;;		_ReceiveEvt
 26918 ;;		_StringCopy
 26919 ;;		_Uart_WriteConstString
 26920 ;;		_Uart_WriteString
 26921 ;; This function is called by:
 26922 ;;		_MdmHttp_MainTask
 26923 ;; This function uses a non-reentrant model
 26924 ;;
 26925                           
 26926                           	psect	text122
 26927  0005EC                     __ptext122:
 26928                           	opt stack 0
 26929  0005EC                     _HttpGetMethod:
 26930                           	opt stack 13
 26931                           
 26932                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 26933                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 26934                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 26935                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 26936                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 26937                           
 26938                           ; BSR set to: 1
 26939                           ;incstack = 0
 26940  0005EC  0E00               	movlw	0
 26941  0005EE  0101               	movlb	1	; () banked
 26942  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 26943                           
 26944                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 26945  0005F2  D230               	goto	l1249
 26946  0005F4                     
 26947                           ; BSR set to: 1
 26948                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 26949                           
 26950                           ; BSR set to: 1
 26951  0005F4  0EDA               	movlw	low _GetMethod
 26952  0005F6  0100               	movlb	0	; () banked
 26953  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26954  0005FA  0E00               	movlw	high _GetMethod
 26955  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26956  0005FE  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 26957  000602  0900               	iorlw	0
 26958  000604  B4D8               	btfsc	status,2,c
 26959  000606  D257               	goto	l1252
 26960                           
 26961                           ;mdm_gsm_gprs_http.c: 284: {
 26962                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 26963  000608  0E01               	movlw	1
 26964  00060A  D18C               	goto	L36
 26965  00060C                     
 26966                           ; BSR set to: 1
 26967                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 26968                           
 26969                           ; BSR set to: 1
 26970  00060C  0E9C               	movlw	low STR_12
 26971  00060E  0100               	movlb	0	; () banked
 26972  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26973  000612  0EFF               	movlw	high STR_12
 26974  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26975  000616  0E01               	movlw	1
 26976  000618  EC6F  F02C         	call	_Uart_WriteConstString
 26977                           
 26978                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 26979  00061C  0E0A               	movlw	10
 26980  00061E  0101               	movlb	1	; () banked
 26981  000620  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26982                           
 26983                           ; BSR set to: 1
 26984                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 26985  000622  0E02               	movlw	2
 26986  000624  0100               	movlb	0	; () banked
 26987  000626  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26988                           
 26989                           ; BSR set to: 0
 26990                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 26991  000628  0EF5               	movlw	low _ConnTimeout
 26992  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26993  00062C  0E02               	movlw	high _ConnTimeout
 26994  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26995  000630  0E20               	movlw	32
 26996  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26997  000634  0E4E               	movlw	78
 26998  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26999  000638  0E00               	movlw	0
 27000  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27001  00063C  0E00               	movlw	0
 27002  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27003  000640  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 27004  000644  D1AF               	goto	l14335
 27005  000646                     
 27006                           ; BSR set to: 1
 27007                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 27008                           
 27009                           ; BSR set to: 1
 27010  000646  0E66               	movlw	low STR_13
 27011  000648  0100               	movlb	0	; () banked
 27012  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27013  00064C  0EFF               	movlw	high STR_13
 27014  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27015  000650  0E01               	movlw	1
 27016  000652  EC6F  F02C         	call	_Uart_WriteConstString
 27017                           
 27018                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 27019  000656  0E0A               	movlw	10
 27020  000658  0101               	movlb	1	; () banked
 27021  00065A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27022                           
 27023                           ; BSR set to: 1
 27024                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 27025  00065C  0E03               	movlw	3
 27026  00065E  0100               	movlb	0	; () banked
 27027  000660  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27028                           
 27029                           ; BSR set to: 0
 27030                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 27031  000662  0EF5               	movlw	low _ConnTimeout
 27032  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27033  000666  0E02               	movlw	high _ConnTimeout
 27034  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27035  00066A  0E20               	movlw	32
 27036  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27037  00066E  0E4E               	movlw	78
 27038  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27039  000672  0E00               	movlw	0
 27040  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27041  000676  0E00               	movlw	0
 27042  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27043  00067A  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 27044  00067E  D192               	goto	l14335
 27045  000680                     
 27046                           ; BSR set to: 1
 27047                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 27048                           
 27049                           ; BSR set to: 1
 27050  000680  0EA7               	movlw	low STR_14
 27051  000682  0100               	movlb	0	; () banked
 27052  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27053  000686  0EFE               	movlw	high STR_14
 27054  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27055  00068A  0E01               	movlw	1
 27056  00068C  EC6F  F02C         	call	_Uart_WriteConstString
 27057                           
 27058                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 27059  000690  0E0A               	movlw	10
 27060  000692  0101               	movlb	1	; () banked
 27061  000694  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27062                           
 27063                           ; BSR set to: 1
 27064                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 27065  000696  0E04               	movlw	4
 27066  000698  0100               	movlb	0	; () banked
 27067  00069A  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27068                           
 27069                           ; BSR set to: 0
 27070                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 27071  00069C  0EF5               	movlw	low _ConnTimeout
 27072  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27073  0006A0  0E02               	movlw	high _ConnTimeout
 27074  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27075  0006A4  0E20               	movlw	32
 27076  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27077  0006A8  0E4E               	movlw	78
 27078  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27079  0006AC  0E00               	movlw	0
 27080  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27081  0006B0  0E00               	movlw	0
 27082  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27083  0006B4  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 27084  0006B8  D175               	goto	l14335
 27085  0006BA                     
 27086                           ; BSR set to: 1
 27087                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 27088                           
 27089                           ; BSR set to: 1
 27090  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 27091  0006BC  0100               	movlb	0	; () banked
 27092  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27093  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 27094  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27095  0006C4  0E00               	movlw	0
 27096  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27097  0006C8  0EC8               	movlw	200
 27098  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27099  0006CC  ECDF  F02D         	call	_ClearBuffer	;wreg free
 27100                           
 27101                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 27102  0006D0  0EE5               	movlw	low STR_15
 27103  0006D2  0100               	movlb	0	; () banked
 27104  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27105  0006D6  0EFE               	movlw	high STR_15
 27106  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27107  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 27108  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 27109  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 27110  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27111  0006E2  0E00               	movlw	0
 27112  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27113  0006E6  0E13               	movlw	19
 27114  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 27115  0006EA  EC50  F028         	call	_StringCopy	;wreg free
 27116                           
 27117                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 27118  0006EE  0E00               	movlw	0
 27119  0006F0  0101               	movlb	1	; () banked
 27120  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 27121  0006F4  D024               	goto	l1257
 27122  0006F6                     
 27123                           ; BSR set to: 1
 27124                           ;mdm_gsm_gprs_http.c: 332: {
 27125                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 27126                           
 27127                           ; BSR set to: 1
 27128  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27129  0006F8  0D01               	mullw	1
 27130  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 27131  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 27132  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 27133  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 27134  00070A  50F3               	movf	prodl,w,c
 27135  00070C  0100               	movlb	0	; () banked
 27136  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27137  000710  6ED9               	movwf	fsr2l,c
 27138  000712  50F4               	movf	prodh,w,c
 27139  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27140  000716  6EDA               	movwf	fsr2h,c
 27141  000718  0101               	movlb	1	; () banked
 27142  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27143  00071C  0100               	movlb	0	; () banked
 27144  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 27145  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 27146  000722  0E13               	movlw	19
 27147  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 27148  000726  0E00               	movlw	0
 27149  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 27150  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 27151  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 27152  00072E  6EE1               	movwf	fsr1l,c
 27153  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 27154  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 27155  000734  6EE2               	movwf	fsr1h,c
 27156  000736  CFDF FFE7          	movff	indf2,indf1
 27157                           
 27158                           ; BSR set to: 0
 27159  00073A  0101               	movlb	1	; () banked
 27160  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 27161  00073E                     l1257:
 27162                           
 27163                           ; BSR set to: 1
 27164                           
 27165                           ; BSR set to: 1
 27166  00073E  0100               	movlb	0	; () banked
 27167  000740  EE20 F002          	lfsr	2,2
 27168  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 27169  000746  26D9               	addwf	fsr2l,f,c
 27170  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 27171  00074A  22DA               	addwfc	fsr2h,f,c
 27172  00074C  50DE               	movf	postinc2,w,c
 27173  00074E  0101               	movlb	1	; () banked
 27174  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 27175  000752  A0D8               	btfss	status,0,c
 27176  000754  D7D0               	goto	l1258
 27177                           
 27178                           ; BSR set to: 1
 27179                           ;mdm_gsm_gprs_http.c: 334: }
 27180                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 27181                           
 27182                           ; BSR set to: 1
 27183  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27184  000758  0100               	movlb	0	; () banked
 27185  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27186  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27187  00075E  0E13               	movlw	19
 27188  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27189  000762  0E00               	movlw	0
 27190  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27191  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 27192  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27193  00076A  6ED9               	movwf	fsr2l,c
 27194  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 27195  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27196  000770  6EDA               	movwf	fsr2h,c
 27197  000772  0E22               	movlw	34
 27198  000774  6EDF               	movwf	indf2,c
 27199                           
 27200                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 27201  000776  0101               	movlb	1	; () banked
 27202  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27203  00077A  0100               	movlb	0	; () banked
 27204  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27205  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27206  000780  0E14               	movlw	20
 27207  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27208  000784  0E00               	movlw	0
 27209  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27210  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 27211  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27212  00078C  6ED9               	movwf	fsr2l,c
 27213  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 27214  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27215  000792  6EDA               	movwf	fsr2h,c
 27216  000794  0E0D               	movlw	13
 27217  000796  6EDF               	movwf	indf2,c
 27218                           
 27219                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 27220  000798  0101               	movlb	1	; () banked
 27221  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27222  00079C  0100               	movlb	0	; () banked
 27223  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27224  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27225  0007A2  0E15               	movlw	21
 27226  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27227  0007A6  0E00               	movlw	0
 27228  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27229  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 27230  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27231  0007AE  6ED9               	movwf	fsr2l,c
 27232  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 27233  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27234  0007B4  6EDA               	movwf	fsr2h,c
 27235  0007B6  0E00               	movlw	0
 27236  0007B8  6EDF               	movwf	indf2,c
 27237                           
 27238                           ; BSR set to: 0
 27239                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 27240  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 27241  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 27242  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 27243  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 27244  0007C2  0E01               	movlw	1
 27245  0007C4  EC30  F02D         	call	_Uart_WriteString
 27246                           
 27247                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 27248  0007C8  0E0A               	movlw	10
 27249  0007CA  0101               	movlb	1	; () banked
 27250  0007CC  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27251                           
 27252                           ; BSR set to: 1
 27253                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 27254  0007CE  0E05               	movlw	5
 27255  0007D0  0100               	movlb	0	; () banked
 27256  0007D2  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27257                           
 27258                           ; BSR set to: 0
 27259                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 27260  0007D4  0EF5               	movlw	low _ConnTimeout
 27261  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27262  0007D8  0E02               	movlw	high _ConnTimeout
 27263  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27264  0007DC  0E20               	movlw	32
 27265  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27266  0007E0  0E4E               	movlw	78
 27267  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27268  0007E4  0E00               	movlw	0
 27269  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27270  0007E8  0E00               	movlw	0
 27271  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27272  0007EC  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 27273  0007F0  D0D9               	goto	l14335
 27274  0007F2                     
 27275                           ; BSR set to: 1
 27276                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 27277                           
 27278                           ; BSR set to: 1
 27279  0007F2  0E1D               	movlw	low STR_16
 27280  0007F4  0100               	movlb	0	; () banked
 27281  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27282  0007F8  0EFF               	movlw	high STR_16
 27283  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27284  0007FC  0E01               	movlw	1
 27285  0007FE  EC6F  F02C         	call	_Uart_WriteConstString
 27286                           
 27287                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 27288  000802  0E0A               	movlw	10
 27289  000804  0101               	movlb	1	; () banked
 27290  000806  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27291                           
 27292                           ; BSR set to: 1
 27293                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 27294  000808  0E06               	movlw	6
 27295  00080A  0100               	movlb	0	; () banked
 27296  00080C  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27297                           
 27298                           ; BSR set to: 0
 27299                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 27300  00080E  0EF5               	movlw	low _ConnTimeout
 27301  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27302  000812  0E02               	movlw	high _ConnTimeout
 27303  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27304  000816  0E20               	movlw	32
 27305  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27306  00081A  0E4E               	movlw	78
 27307  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27308  00081E  0E00               	movlw	0
 27309  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27310  000822  0E00               	movlw	0
 27311  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27312  000826  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 27313                           
 27314                           ;mdm_gsm_gprs_http.c: 358: break;
 27315  00082A  D145               	goto	l1252
 27316  00082C                     
 27317                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 27318  00082C  0E07               	movlw	7
 27319  00082E  0101               	movlb	1	; () banked
 27320  000830  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27321                           
 27322                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 27323  000832  0E09               	movlw	9
 27324  000834  0100               	movlb	0	; () banked
 27325  000836  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27326                           
 27327                           ; BSR set to: 0
 27328                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 27329  000838  0EF5               	movlw	low _ConnTimeout
 27330  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27331  00083C  0E02               	movlw	high _ConnTimeout
 27332  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27333  000840  0E20               	movlw	32
 27334  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27335  000844  0E4E               	movlw	78
 27336  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27337  000848  0E00               	movlw	0
 27338  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27339  00084C  0E00               	movlw	0
 27340  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27341  000850  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 27342                           
 27343                           ;mdm_gsm_gprs_http.c: 371: break;
 27344  000854  D130               	goto	l1252
 27345  000856                     
 27346                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 27347  000856  0E82               	movlw	low STR_17
 27348  000858  0100               	movlb	0	; () banked
 27349  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27350  00085C  0EFF               	movlw	high STR_17
 27351  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27352  000860  0E01               	movlw	1
 27353  000862  EC6F  F02C         	call	_Uart_WriteConstString
 27354                           
 27355                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 27356  000866  0E0D               	movlw	13
 27357  000868  0101               	movlb	1	; () banked
 27358  00086A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27359                           
 27360                           ; BSR set to: 1
 27361                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 27362  00086C  0E09               	movlw	9
 27363  00086E  0100               	movlb	0	; () banked
 27364  000870  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27365                           
 27366                           ; BSR set to: 0
 27367                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 27368  000872  0EF5               	movlw	low _ConnTimeout
 27369  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27370  000876  0E02               	movlw	high _ConnTimeout
 27371  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27372  00087A  0E20               	movlw	32
 27373  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27374  00087E  0E4E               	movlw	78
 27375  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27376  000882  0E00               	movlw	0
 27377  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27378  000886  0E00               	movlw	0
 27379  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27380  00088A  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 27381  00088E  D08A               	goto	l14335
 27382  000890                     
 27383                           ; BSR set to: 1
 27384                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 27385                           
 27386                           ; BSR set to: 1
 27387  000890  0E8F               	movlw	low STR_18
 27388  000892  0100               	movlb	0	; () banked
 27389  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27390  000896  0EFF               	movlw	high STR_18
 27391  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27392  00089A  0E01               	movlw	1
 27393  00089C  EC6F  F02C         	call	_Uart_WriteConstString
 27394                           
 27395                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 27396  0008A0  0E0A               	movlw	10
 27397  0008A2  0101               	movlb	1	; () banked
 27398  0008A4  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27399                           
 27400                           ; BSR set to: 1
 27401                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 27402  0008A6  0E0E               	movlw	14
 27403  0008A8  0100               	movlb	0	; () banked
 27404  0008AA  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27405                           
 27406                           ; BSR set to: 0
 27407                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 27408  0008AC  0EF5               	movlw	low _ConnTimeout
 27409  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27410  0008B0  0E02               	movlw	high _ConnTimeout
 27411  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27412  0008B4  0E20               	movlw	32
 27413  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27414  0008B8  0E4E               	movlw	78
 27415  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27416  0008BC  0E00               	movlw	0
 27417  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27418  0008C0  0E00               	movlw	0
 27419  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27420  0008C4  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 27421  0008C8  D06D               	goto	l14335
 27422  0008CA                     
 27423                           ; BSR set to: 1
 27424                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 27425                           
 27426                           ; BSR set to: 1
 27427  0008CA  0E3C               	movlw	low _NewStringReceived
 27428  0008CC  0100               	movlb	0	; () banked
 27429  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27430  0008D0  0E00               	movlw	high _NewStringReceived
 27431  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27432  0008D4  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 27433  0008D8  0900               	iorlw	0
 27434  0008DA  B4D8               	btfsc	status,2,c
 27435  0008DC  D018               	goto	l1265
 27436                           
 27437                           ;mdm_gsm_gprs_http.c: 400: {
 27438                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 27439  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 27440  0008E2  0A4F               	xorlw	79
 27441  0008E4  A4D8               	btfss	status,2,c
 27442  0008E6  D0E7               	goto	l1252
 27443  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27444  0008EC  0A4B               	xorlw	75
 27445  0008EE  A4D8               	btfss	status,2,c
 27446  0008F0  D0E2               	goto	l1252
 27447                           
 27448                           ;mdm_gsm_gprs_http.c: 403: {
 27449                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 27450  0008F2  C0D2  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27451                           
 27452                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 27453  0008F6  0E58               	movlw	low _RxBuffer
 27454  0008F8  0100               	movlb	0	; () banked
 27455  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27456  0008FC  0E0C               	movlw	high _RxBuffer
 27457  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27458  000900  0E01               	movlw	1
 27459  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27460  000904  0E90               	movlw	144
 27461  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27462  000908  ECDF  F02D         	call	_ClearBuffer	;wreg free
 27463                           
 27464                           ;mdm_gsm_gprs_http.c: 408: }
 27465                           ;mdm_gsm_gprs_http.c: 409: }
 27466  00090C  D0D4               	goto	l1252
 27467  00090E                     l1265:
 27468                           
 27469                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27470  00090E  0EF5               	movlw	low _ConnTimeout
 27471  000910  0100               	movlb	0	; () banked
 27472  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27473  000914  0E02               	movlw	high _ConnTimeout
 27474  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27475  000918  ECFB  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27476  00091C                     L37:
 27477  00091C  06E8               	decf	wreg,f,c
 27478  00091E  A4D8               	btfss	status,2,c
 27479  000920  D0CA               	goto	l1252
 27480                           
 27481                           ;mdm_gsm_gprs_http.c: 411: {
 27482                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 27483  000922  0E0F               	movlw	15
 27484  000924                     L36:
 27485  000924  0101               	movlb	1	; () banked
 27486  000926  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27487                           
 27488                           ; BSR set to: 1
 27489                           ;mdm_gsm_gprs_http.c: 414: }
 27490                           ;mdm_gsm_gprs_http.c: 415: break;
 27491                           
 27492                           ; BSR set to: 1
 27493  000928  D0C6               	goto	l1252
 27494  00092A                     
 27495                           ; BSR set to: 1
 27496                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 27497                           
 27498                           ; BSR set to: 1
 27499  00092A  0E3C               	movlw	low _NewStringReceived
 27500  00092C  0100               	movlb	0	; () banked
 27501  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27502  000930  0E00               	movlw	high _NewStringReceived
 27503  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27504  000934  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 27505  000938  0900               	iorlw	0
 27506  00093A  B4D8               	btfsc	status,2,c
 27507  00093C  D018               	goto	l1270
 27508                           
 27509                           ;mdm_gsm_gprs_http.c: 420: {
 27510                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 27511  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 27512  000942  0A2B               	xorlw	43
 27513  000944  A4D8               	btfss	status,2,c
 27514  000946  D0B7               	goto	l1252
 27515  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27516  00094C  0A48               	xorlw	72
 27517  00094E  A4D8               	btfss	status,2,c
 27518  000950  D0B2               	goto	l1252
 27519                           
 27520                           ;mdm_gsm_gprs_http.c: 423: {
 27521                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 27522  000952  C0D2  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27523                           
 27524                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 27525  000956  0E58               	movlw	low _RxBuffer
 27526  000958  0100               	movlb	0	; () banked
 27527  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27528  00095C  0E0C               	movlw	high _RxBuffer
 27529  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27530  000960  0E01               	movlw	1
 27531  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27532  000964  0E90               	movlw	144
 27533  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27534  000968  ECDF  F02D         	call	_ClearBuffer	;wreg free
 27535                           
 27536                           ;mdm_gsm_gprs_http.c: 428: }
 27537                           ;mdm_gsm_gprs_http.c: 429: }
 27538  00096C  D0A4               	goto	l1252
 27539  00096E                     l1270:
 27540                           
 27541                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27542  00096E  0EF5               	movlw	low _ConnTimeout
 27543  000970  0100               	movlb	0	; () banked
 27544  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27545  000974  0E02               	movlw	high _ConnTimeout
 27546  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27547  000978  ECFB  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27548  00097C  D7CF               	goto	L37
 27549  00097E                     
 27550                           ; BSR set to: 1
 27551                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 27552                           
 27553                           ; BSR set to: 1
 27554  00097E  0E0C               	movlw	12
 27555  000980  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27556                           
 27557                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 27558  000982  0E05               	movlw	5
 27559  000984  0100               	movlb	0	; () banked
 27560  000986  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27561                           
 27562                           ; BSR set to: 0
 27563                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 27564  000988  0EDC               	movlw	low _ConnWait
 27565  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27566  00098C  0E03               	movlw	high _ConnWait
 27567  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27568  000990  0EE8               	movlw	232
 27569  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27570  000994  0E03               	movlw	3
 27571  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27572  000998  0E00               	movlw	0
 27573  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27574  00099C  0E00               	movlw	0
 27575  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27576  0009A0  ECB0  F028         	call	_OsTmr_StartTimer	;wreg free
 27577  0009A4                     l14335:
 27578                           
 27579                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 27580  0009A4  0E01               	movlw	1
 27581  0009A6  0101               	movlb	1	; () banked
 27582  0009A8  D053               	goto	L39
 27583  0009AA                     
 27584                           ; BSR set to: 1
 27585                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 27586                           
 27587                           ; BSR set to: 1
 27588  0009AA  0EDC               	movlw	low _ConnWait
 27589  0009AC  0100               	movlb	0	; () banked
 27590  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27591  0009B0  0E03               	movlw	high _ConnWait
 27592  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27593  0009B4  ECFB  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27594  0009B8  06E8               	decf	wreg,f,c
 27595  0009BA  A4D8               	btfss	status,2,c
 27596  0009BC  D07C               	goto	l1252
 27597                           
 27598                           ;mdm_gsm_gprs_http.c: 450: {
 27599                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 27600  0009BE  C0D2  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27601                           
 27602                           ;mdm_gsm_gprs_http.c: 453: }
 27603                           ;mdm_gsm_gprs_http.c: 454: break;
 27604  0009C2  D079               	goto	l1252
 27605  0009C4                     
 27606                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 27607  0009C4  0E3C               	movlw	low _NewStringReceived
 27608  0009C6  0100               	movlb	0	; () banked
 27609  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27610  0009CA  0E00               	movlw	high _NewStringReceived
 27611  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27612  0009CE  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 27613  0009D2  0900               	iorlw	0
 27614  0009D4  B4D8               	btfsc	status,2,c
 27615  0009D6  D02D               	goto	l1278
 27616                           
 27617                           ;mdm_gsm_gprs_http.c: 459: {
 27618                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 27619  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 27620  0009DC  0A2B               	xorlw	43
 27621  0009DE  A4D8               	btfss	status,2,c
 27622  0009E0  D06A               	goto	l1252
 27623  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27624  0009E6  0A48               	xorlw	72
 27625  0009E8  A4D8               	btfss	status,2,c
 27626  0009EA  D065               	goto	l1252
 27627                           
 27628                           ;mdm_gsm_gprs_http.c: 462: {
 27629                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 27630  0009EC  C0D2  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27631                           
 27632                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 27633  0009F0  0E58               	movlw	low _RxBuffer
 27634  0009F2  0100               	movlb	0	; () banked
 27635  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27636  0009F6  0E0C               	movlw	high _RxBuffer
 27637  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27638  0009FA  EE20 F003          	lfsr	2,3
 27639  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 27640  000A00  26D9               	addwf	fsr2l,f,c
 27641  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 27642  000A04  22DA               	addwfc	fsr2h,f,c
 27643  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 27644  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 27645  000A0E  0E01               	movlw	1
 27646  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27647  000A12  0E90               	movlw	144
 27648  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 27649  000A16  EC50  F028         	call	_StringCopy	;wreg free
 27650                           
 27651                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 27652  000A1A  0E58               	movlw	low _RxBuffer
 27653  000A1C  0100               	movlb	0	; () banked
 27654  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27655  000A20  0E0C               	movlw	high _RxBuffer
 27656  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27657  000A24  0E01               	movlw	1
 27658  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27659  000A28  0E90               	movlw	144
 27660  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27661  000A2C  ECDF  F02D         	call	_ClearBuffer	;wreg free
 27662                           
 27663                           ;mdm_gsm_gprs_http.c: 469: }
 27664                           ;mdm_gsm_gprs_http.c: 470: }
 27665  000A30  D042               	goto	l1252
 27666  000A32                     l1278:
 27667                           
 27668                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27669  000A32  0EF5               	movlw	low _ConnTimeout
 27670  000A34  0100               	movlb	0	; () banked
 27671  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27672  000A38  0E02               	movlw	high _ConnTimeout
 27673  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27674  000A3C  ECFB  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27675  000A40  D76D               	goto	L37
 27676  000A42                     
 27677                           ; BSR set to: 1
 27678                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 27679                           
 27680                           ; BSR set to: 1
 27681  000A42  0E00               	movlw	0
 27682  000A44  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27683                           
 27684                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 27685  000A46  0E02               	movlw	2
 27686  000A48  D003               	goto	L39
 27687  000A4A                     
 27688                           ; BSR set to: 1
 27689                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 27690                           
 27691                           ; BSR set to: 1
 27692  000A4A  0E00               	movlw	0
 27693  000A4C  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27694                           
 27695                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 27696  000A4E  0E03               	movlw	3
 27697  000A50                     L39:
 27698  000A50  6FE8               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 27699                           
 27700                           ; BSR set to: 1
 27701                           ;mdm_gsm_gprs_http.c: 494: }
 27702                           
 27703                           ; BSR set to: 1
 27704                           ;mdm_gsm_gprs_http.c: 493: break;
 27705                           
 27706                           ;mdm_gsm_gprs_http.c: 492: default:
 27707                           
 27708                           ;mdm_gsm_gprs_http.c: 490: break;
 27709  000A52  D031               	goto	l1252
 27710  000A54                     l1249:
 27711                           
 27712                           ; BSR set to: 1
 27713                           
 27714                           ; BSR set to: 1
 27715  000A54  51E9               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 27716                           
 27717                           ; Switch size 1, requested type "space"
 27718                           ; Number of cases is 16, Range of values is 0 to 15
 27719                           ; switch strategies available:
 27720                           ; Name         Instructions Cycles
 27721                           ; simple_byte           49    25 (average)
 27722                           ;	Chosen strategy is simple_byte
 27723  000A56  0A00               	xorlw	0	; case 0
 27724  000A58  B4D8               	btfsc	status,2,c
 27725  000A5A  D5CC               	goto	l1250
 27726  000A5C  0A01               	xorlw	1	; case 1
 27727  000A5E  B4D8               	btfsc	status,2,c
 27728  000A60  D5D5               	goto	l1253
 27729  000A62  0A03               	xorlw	3	; case 2
 27730  000A64  B4D8               	btfsc	status,2,c
 27731  000A66  D5EF               	goto	l1254
 27732  000A68  0A01               	xorlw	1	; case 3
 27733  000A6A  B4D8               	btfsc	status,2,c
 27734  000A6C  D609               	goto	l1255
 27735  000A6E  0A07               	xorlw	7	; case 4
 27736  000A70  B4D8               	btfsc	status,2,c
 27737  000A72  D623               	goto	l1256
 27738  000A74  0A01               	xorlw	1	; case 5
 27739  000A76  B4D8               	btfsc	status,2,c
 27740  000A78  D6BC               	goto	l1260
 27741  000A7A  0A03               	xorlw	3	; case 6
 27742  000A7C  B4D8               	btfsc	status,2,c
 27743  000A7E  D6D6               	goto	l1261
 27744  000A80  0A01               	xorlw	1	; case 7
 27745  000A82  B4D8               	btfsc	status,2,c
 27746  000A84  D752               	goto	l1269
 27747  000A86  0A0F               	xorlw	15	; case 8
 27748  000A88  B4D8               	btfsc	status,2,c
 27749  000A8A  D6E5               	goto	l1262
 27750  000A8C  0A01               	xorlw	1	; case 9
 27751  000A8E  B4D8               	btfsc	status,2,c
 27752  000A90  D6FF               	goto	l1263
 27753  000A92  0A03               	xorlw	3	; case 10
 27754  000A94  B4D8               	btfsc	status,2,c
 27755  000A96  D719               	goto	l1264
 27756  000A98  0A01               	xorlw	1	; case 11
 27757  000A9A  B4D8               	btfsc	status,2,c
 27758  000A9C  D770               	goto	l1274
 27759  000A9E  0A07               	xorlw	7	; case 12
 27760  000AA0  B4D8               	btfsc	status,2,c
 27761  000AA2  D783               	goto	l1275
 27762  000AA4  0A01               	xorlw	1	; case 13
 27763  000AA6  B4D8               	btfsc	status,2,c
 27764  000AA8  D78D               	goto	l1277
 27765  000AAA  0A03               	xorlw	3	; case 14
 27766  000AAC  B4D8               	btfsc	status,2,c
 27767  000AAE  D7C9               	goto	l1282
 27768  000AB0  0A01               	xorlw	1	; case 15
 27769  000AB2  B4D8               	btfsc	status,2,c
 27770  000AB4  D7CA               	goto	l1283
 27771  000AB6                     l1252:
 27772                           
 27773                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 27774                           
 27775                           ; BSR set to: 1
 27776  000AB6  0101               	movlb	1	; () banked
 27777  000AB8  51E8               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 27778  000ABA  0012               	return	
 27779  000ABC                     __end_of_HttpGetMethod:
 27780                           	opt stack 0
 27781                           tosu	equ	0xFFF
 27782                           tosh	equ	0xFFE
 27783                           tosl	equ	0xFFD
 27784                           pclath	equ	0xFFA
 27785                           tblptru	equ	0xFF8
 27786                           tblptrh	equ	0xFF7
 27787                           tblptrl	equ	0xFF6
 27788                           tablat	equ	0xFF5
 27789                           prodh	equ	0xFF4
 27790                           prodl	equ	0xFF3
 27791                           intcon	equ	0xFF2
 27792                           intcon2	equ	0xFF1
 27793                           intcon3	equ	0xFF0
 27794                           indf0	equ	0xFEF
 27795                           postinc0	equ	0xFEE
 27796                           plusw0	equ	0xFEB
 27797                           fsr0h	equ	0xFEA
 27798                           fsr0l	equ	0xFE9
 27799                           wreg	equ	0xFE8
 27800                           indf1	equ	0xFE7
 27801                           postinc1	equ	0xFE6
 27802                           postdec1	equ	0xFE5
 27803                           plusw1	equ	0xFE3
 27804                           fsr1h	equ	0xFE2
 27805                           fsr1l	equ	0xFE1
 27806                           indf2	equ	0xFDF
 27807                           postinc2	equ	0xFDE
 27808                           postdec2	equ	0xFDD
 27809                           plusw2	equ	0xFDB
 27810                           fsr2h	equ	0xFDA
 27811                           fsr2l	equ	0xFD9
 27812                           status	equ	0xFD8
 27813                           
 27814 ;; *************** function _Uart_WriteString *****************
 27815 ;; Defined at:
 27816 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27817 ;; Parameters:    Size  Location     Type
 27818 ;;  Module          1    wreg     unsigned char 
 27819 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 27820 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 27821 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 27822 ;; Auto vars:     Size  Location     Type
 27823 ;;  Module          1   34[BANK0 ] unsigned char 
 27824 ;; Return value:  Size  Location     Type
 27825 ;;                  1    wreg      void 
 27826 ;; Registers used:
 27827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27828 ;; Tracked objects:
 27829 ;;		On entry : 0/0
 27830 ;;		On exit  : 0/0
 27831 ;;		Unchanged: 0/0
 27832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27833 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27836 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27837 ;;Total ram usage:        3 bytes
 27838 ;; Hardware stack levels used:    1
 27839 ;; Hardware stack levels required when called:   12
 27840 ;; This function calls:
 27841 ;;		_UartTxBufferStatus
 27842 ;;		_UartWriteByte
 27843 ;; This function is called by:
 27844 ;;		_Mdm_SetSmsFormat
 27845 ;;		_InitGprsNetwork
 27846 ;;		_HttpGetMethod
 27847 ;;		_Mdm_PinUnlock
 27848 ;;		_Mdm_MakePhoneCall
 27849 ;; This function uses a non-reentrant model
 27850 ;;
 27851                           
 27852                           	psect	text123
 27853  005A60                     __ptext123:
 27854                           	opt stack 0
 27855  005A60                     _Uart_WriteString:
 27856                           	opt stack 13
 27857                           
 27858                           ; BSR set to: 1
 27859                           ;incstack = 0
 27860                           ;Uart_WriteString@Module stored from wreg
 27861  005A60  0100               	movlb	0	; () banked
 27862  005A62  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 27863                           
 27864                           ;uart_drv.c: 521: while (*StringToWrite)
 27865  005A64  D014               	goto	u11460
 27866  005A66                     
 27867                           ;uart_drv.c: 522: {
 27868                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 27869  005A66  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 27870  005A6A  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 27871  005A6E  50DF               	movf	indf2,w,c
 27872  005A70  0100               	movlb	0	; () banked
 27873  005A72  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 27874  005A74  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 27875  005A76  ECF9  F02F         	call	_UartWriteByte
 27876                           
 27877                           ;uart_drv.c: 526: StringToWrite++;
 27878  005A7A  0100               	movlb	0	; () banked
 27879  005A7C  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 27880  005A7E  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 27881  005A80                     
 27882                           ; BSR set to: 0
 27883                           
 27884                           ; BSR set to: 0
 27885  005A80  0100               	movlb	0	; () banked
 27886  005A82  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 27887  005A84  EC06  F02B         	call	_UartTxBufferStatus
 27888  005A88  06E8               	decf	wreg,f,c
 27889  005A8A  B4D8               	btfsc	status,2,c
 27890  005A8C  D7F9               	goto	l709
 27891  005A8E                     u11460:
 27892  005A8E  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 27893  005A92  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 27894  005A96  50DF               	movf	indf2,w,c
 27895  005A98  B4D8               	btfsc	status,2,c
 27896  005A9A  0012               	return	
 27897  005A9C  D7E4               	goto	l707
 27898  005A9E                     __end_of_Uart_WriteString:
 27899                           	opt stack 0
 27900                           tosu	equ	0xFFF
 27901                           tosh	equ	0xFFE
 27902                           tosl	equ	0xFFD
 27903                           pclath	equ	0xFFA
 27904                           tblptru	equ	0xFF8
 27905                           tblptrh	equ	0xFF7
 27906                           tblptrl	equ	0xFF6
 27907                           tablat	equ	0xFF5
 27908                           prodh	equ	0xFF4
 27909                           prodl	equ	0xFF3
 27910                           intcon	equ	0xFF2
 27911                           intcon2	equ	0xFF1
 27912                           intcon3	equ	0xFF0
 27913                           indf0	equ	0xFEF
 27914                           postinc0	equ	0xFEE
 27915                           plusw0	equ	0xFEB
 27916                           fsr0h	equ	0xFEA
 27917                           fsr0l	equ	0xFE9
 27918                           wreg	equ	0xFE8
 27919                           indf1	equ	0xFE7
 27920                           postinc1	equ	0xFE6
 27921                           postdec1	equ	0xFE5
 27922                           plusw1	equ	0xFE3
 27923                           fsr1h	equ	0xFE2
 27924                           fsr1l	equ	0xFE1
 27925                           indf2	equ	0xFDF
 27926                           postinc2	equ	0xFDE
 27927                           postdec2	equ	0xFDD
 27928                           plusw2	equ	0xFDB
 27929                           fsr2h	equ	0xFDA
 27930                           fsr2l	equ	0xFD9
 27931                           status	equ	0xFD8
 27932                           
 27933 ;; *************** function _Uart_WriteConstString *****************
 27934 ;; Defined at:
 27935 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27936 ;; Parameters:    Size  Location     Type
 27937 ;;  Module          1    wreg     unsigned char 
 27938 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 27939 ;;		 -> STR_31(14), STR_30(12), STR_29(19), STR_20(14), 
 27940 ;;		 -> STR_19(14), STR_18(13), STR_17(13), STR_16(17), 
 27941 ;;		 -> STR_14(21), STR_13(14), STR_12(13), STR_11(14), 
 27942 ;;		 -> STR_10(14), STR_8(31), STR_7(5), STR_6(5), 
 27943 ;;		 -> STR_4(12), STR_3(7), STR_2(14), STR_1(5), 
 27944 ;; Auto vars:     Size  Location     Type
 27945 ;;  Module          1   34[BANK0 ] unsigned char 
 27946 ;; Return value:  Size  Location     Type
 27947 ;;                  1    wreg      void 
 27948 ;; Registers used:
 27949 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27950 ;; Tracked objects:
 27951 ;;		On entry : 0/0
 27952 ;;		On exit  : 0/0
 27953 ;;		Unchanged: 0/0
 27954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27955 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27956 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27958 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27959 ;;Total ram usage:        3 bytes
 27960 ;; Hardware stack levels used:    1
 27961 ;; Hardware stack levels required when called:   12
 27962 ;; This function calls:
 27963 ;;		_UartTxBufferStatus
 27964 ;;		_UartWriteByte
 27965 ;; This function is called by:
 27966 ;;		_CheckModem
 27967 ;;		_ConfigureModem
 27968 ;;		_GetSmsSm
 27969 ;;		_Mdm_HangPhoneCall
 27970 ;;		_InitGprsNetwork
 27971 ;;		_HttpGetMethod
 27972 ;;		_initGprsModem
 27973 ;;		_MyApp_Task
 27974 ;;		_Mdm_GetPhoneCall
 27975 ;;		_MdmHttp_SetSsl
 27976 ;; This function uses a non-reentrant model
 27977 ;;
 27978                           
 27979                           	psect	text124
 27980  0058DE                     __ptext124:
 27981                           	opt stack 0
 27982  0058DE                     _Uart_WriteConstString:
 27983                           	opt stack 14
 27984                           
 27985                           ;incstack = 0
 27986                           ;Uart_WriteConstString@Module stored from wreg
 27987  0058DE  0100               	movlb	0	; () banked
 27988  0058E0  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 27989                           
 27990                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 27991  0058E2  D015               	goto	u12290
 27992  0058E4                     
 27993                           ;uart_drv.c: 500: {
 27994                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 27995  0058E4  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 27996  0058E8  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 27997  0058EC                     	if	0	;tblptru may be non-zero
 27998  0058EC                     	endif
 27999  0058EC                     	if	0	;tblptru may be non-zero
 28000  0058EC                     	endif
 28001  0058EC  0008               	tblrd		*
 28002  0058EE  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 28003  0058F2  0100               	movlb	0	; () banked
 28004  0058F4  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 28005  0058F6  ECF9  F02F         	call	_UartWriteByte
 28006                           
 28007                           ;uart_drv.c: 504: ConstStringToWrite++;
 28008  0058FA  0100               	movlb	0	; () banked
 28009  0058FC  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 28010  0058FE  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 28011  005900                     
 28012                           ; BSR set to: 0
 28013                           
 28014                           ; BSR set to: 0
 28015  005900  0100               	movlb	0	; () banked
 28016  005902  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 28017  005904  EC06  F02B         	call	_UartTxBufferStatus
 28018  005908  06E8               	decf	wreg,f,c
 28019  00590A  B4D8               	btfsc	status,2,c
 28020  00590C  D7F9               	goto	l700
 28021  00590E                     u12290:
 28022  00590E  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 28023  005912  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 28024  005916                     	if	0	;tblptru may be non-zero
 28025  005916                     	endif
 28026  005916                     	if	0	;tblptru may be non-zero
 28027  005916                     	endif
 28028  005916  0008               	tblrd		*
 28029  005918  50F5               	movf	tablat,w,c
 28030  00591A  0900               	iorlw	0
 28031  00591C  B4D8               	btfsc	status,2,c
 28032  00591E  0012               	return	
 28033  005920  D7E1               	goto	l698
 28034  005922                     __end_of_Uart_WriteConstString:
 28035                           	opt stack 0
 28036                           tosu	equ	0xFFF
 28037                           tosh	equ	0xFFE
 28038                           tosl	equ	0xFFD
 28039                           pclath	equ	0xFFA
 28040                           tblptru	equ	0xFF8
 28041                           tblptrh	equ	0xFF7
 28042                           tblptrl	equ	0xFF6
 28043                           tablat	equ	0xFF5
 28044                           prodh	equ	0xFF4
 28045                           prodl	equ	0xFF3
 28046                           intcon	equ	0xFF2
 28047                           intcon2	equ	0xFF1
 28048                           intcon3	equ	0xFF0
 28049                           indf0	equ	0xFEF
 28050                           postinc0	equ	0xFEE
 28051                           plusw0	equ	0xFEB
 28052                           fsr0h	equ	0xFEA
 28053                           fsr0l	equ	0xFE9
 28054                           wreg	equ	0xFE8
 28055                           indf1	equ	0xFE7
 28056                           postinc1	equ	0xFE6
 28057                           postdec1	equ	0xFE5
 28058                           plusw1	equ	0xFE3
 28059                           fsr1h	equ	0xFE2
 28060                           fsr1l	equ	0xFE1
 28061                           indf2	equ	0xFDF
 28062                           postinc2	equ	0xFDE
 28063                           postdec2	equ	0xFDD
 28064                           plusw2	equ	0xFDB
 28065                           fsr2h	equ	0xFDA
 28066                           fsr2l	equ	0xFD9
 28067                           status	equ	0xFD8
 28068                           
 28069 ;; *************** function _UartWriteByte *****************
 28070 ;; Defined at:
 28071 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28072 ;; Parameters:    Size  Location     Type
 28073 ;;  Module          1    wreg     unsigned char 
 28074 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 28075 ;; Auto vars:     Size  Location     Type
 28076 ;;  Module          1   30[BANK0 ] unsigned char 
 28077 ;; Return value:  Size  Location     Type
 28078 ;;                  1    wreg      void 
 28079 ;; Registers used:
 28080 ;;		wreg, status,2, status,0
 28081 ;; Tracked objects:
 28082 ;;		On entry : 0/0
 28083 ;;		On exit  : 0/0
 28084 ;;		Unchanged: 0/0
 28085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28086 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28089 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28090 ;;Total ram usage:        2 bytes
 28091 ;; Hardware stack levels used:    1
 28092 ;; Hardware stack levels required when called:   11
 28093 ;; This function calls:
 28094 ;;		Nothing
 28095 ;; This function is called by:
 28096 ;;		_Uart_WriteConstString
 28097 ;;		_Uart_WriteString
 28098 ;;		_Uart_WriteStringLen
 28099 ;; This function uses a non-reentrant model
 28100 ;;
 28101                           
 28102                           	psect	text125
 28103  005FF2                     __ptext125:
 28104                           	opt stack 0
 28105  005FF2                     _UartWriteByte:
 28106                           	opt stack 14
 28107                           
 28108                           ;incstack = 0
 28109                           ;UartWriteByte@Module stored from wreg
 28110  005FF2  0100               	movlb	0	; () banked
 28111  005FF4  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 28112                           
 28113                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 28114  005FF6  0100               	movlb	0	; () banked
 28115  005FF8  057E               	decf	UartWriteByte@Module& (0+255),w,b
 28116  005FFA  A4D8               	btfss	status,2,c
 28117  005FFC  D003               	goto	l639
 28118                           
 28119                           ; BSR set to: 0
 28120                           ;uart_drv.c: 176: {
 28121                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 28122  005FFE  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 28123                           
 28124                           ;uart_drv.c: 179: }
 28125  006002  0012               	return	
 28126  006004                     l639:
 28127                           
 28128                           ; BSR set to: 0
 28129                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 28130                           
 28131                           ; BSR set to: 0
 28132  006004  0E02               	movlw	2
 28133  006006  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 28134  006008  A4D8               	btfss	status,2,c
 28135  00600A  0012               	return	
 28136                           
 28137                           ; BSR set to: 0
 28138                           ;uart_drv.c: 181: {
 28139                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 28140  00600C  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 28141                           
 28142                           ; BSR set to: 0
 28143  006010  0012               	return	
 28144  006012                     __end_of_UartWriteByte:
 28145                           	opt stack 0
 28146                           tosu	equ	0xFFF
 28147                           tosh	equ	0xFFE
 28148                           tosl	equ	0xFFD
 28149                           pclath	equ	0xFFA
 28150                           tblptru	equ	0xFF8
 28151                           tblptrh	equ	0xFF7
 28152                           tblptrl	equ	0xFF6
 28153                           tablat	equ	0xFF5
 28154                           prodh	equ	0xFF4
 28155                           prodl	equ	0xFF3
 28156                           intcon	equ	0xFF2
 28157                           intcon2	equ	0xFF1
 28158                           intcon3	equ	0xFF0
 28159                           indf0	equ	0xFEF
 28160                           postinc0	equ	0xFEE
 28161                           plusw0	equ	0xFEB
 28162                           fsr0h	equ	0xFEA
 28163                           fsr0l	equ	0xFE9
 28164                           wreg	equ	0xFE8
 28165                           indf1	equ	0xFE7
 28166                           postinc1	equ	0xFE6
 28167                           postdec1	equ	0xFE5
 28168                           plusw1	equ	0xFE3
 28169                           fsr1h	equ	0xFE2
 28170                           fsr1l	equ	0xFE1
 28171                           indf2	equ	0xFDF
 28172                           postinc2	equ	0xFDE
 28173                           postdec2	equ	0xFDD
 28174                           plusw2	equ	0xFDB
 28175                           fsr2h	equ	0xFDA
 28176                           fsr2l	equ	0xFD9
 28177                           status	equ	0xFD8
 28178                           
 28179 ;; *************** function _UartTxBufferStatus *****************
 28180 ;; Defined at:
 28181 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28182 ;; Parameters:    Size  Location     Type
 28183 ;;  Module          1    wreg     unsigned char 
 28184 ;; Auto vars:     Size  Location     Type
 28185 ;;  Module          1   30[BANK0 ] unsigned char 
 28186 ;;  TxBufferStat    1   31[BANK0 ] enum E9020
 28187 ;; Return value:  Size  Location     Type
 28188 ;;                  1    wreg      enum E9020
 28189 ;; Registers used:
 28190 ;;		wreg, status,2, status,0
 28191 ;; Tracked objects:
 28192 ;;		On entry : 0/0
 28193 ;;		On exit  : 0/0
 28194 ;;		Unchanged: 0/0
 28195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28197 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28198 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28199 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28200 ;;Total ram usage:        3 bytes
 28201 ;; Hardware stack levels used:    1
 28202 ;; Hardware stack levels required when called:   11
 28203 ;; This function calls:
 28204 ;;		Nothing
 28205 ;; This function is called by:
 28206 ;;		_Uart_WriteConstString
 28207 ;;		_Uart_WriteString
 28208 ;;		_Uart_WriteStringLen
 28209 ;; This function uses a non-reentrant model
 28210 ;;
 28211                           
 28212                           	psect	text126
 28213  00560C                     __ptext126:
 28214                           	opt stack 0
 28215  00560C                     _UartTxBufferStatus:
 28216                           	opt stack 14
 28217                           
 28218                           ; BSR set to: 0
 28219                           ;incstack = 0
 28220                           ;UartTxBufferStatus@Module stored from wreg
 28221  00560C  0100               	movlb	0	; () banked
 28222  00560E  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 28223                           
 28224                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 28225  005610  0E00               	movlw	0
 28226  005612  0100               	movlb	0	; () banked
 28227  005614  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 28228                           
 28229                           ; BSR set to: 0
 28230                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 28231  005616  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 28232  005618  A4D8               	btfss	status,2,c
 28233  00561A  D00B               	goto	l651
 28234                           
 28235                           ; BSR set to: 0
 28236                           ;uart_drv.c: 228: {
 28237                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 28238  00561C  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 28239  005620  90D8               	bcf	status,0,c
 28240  005622  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28241  005624  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 28242  005626  D002               	goto	l652
 28243  005628                     u10920:
 28244                           
 28245                           ; BSR set to: 0
 28246                           ;uart_drv.c: 231: {
 28247                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 28248  005628  0E01               	movlw	1
 28249  00562A  D014               	goto	L42
 28250  00562C                     l652:
 28251                           
 28252                           ; BSR set to: 0
 28253                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 28254                           
 28255                           ; BSR set to: 0
 28256  00562C  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 28257  005630  D00C               	goto	L71
 28258  005632                     l651:
 28259                           
 28260                           ; BSR set to: 0
 28261                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 28262                           
 28263                           ; BSR set to: 0
 28264  005632  0E02               	movlw	2
 28265  005634  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 28266  005636  A4D8               	btfss	status,2,c
 28267  005638  D00E               	goto	l660
 28268                           
 28269                           ; BSR set to: 0
 28270                           ;uart_drv.c: 244: {
 28271                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 28272  00563A  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 28273  00563E  90D8               	bcf	status,0,c
 28274  005640  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28275  005642  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 28276  005644  D7F1               	goto	u10920
 28277                           
 28278                           ; BSR set to: 0
 28279                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 28280                           
 28281                           ; BSR set to: 0
 28282                           
 28283                           ;uart_drv.c: 249: }
 28284                           
 28285                           ; BSR set to: 0
 28286                           ;uart_drv.c: 247: {
 28287                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 28288  005646  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 28289  00564A                     L71:
 28290  00564A  90D8               	bcf	status,0,c
 28291  00564C  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28292  00564E  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 28293  005650  D002               	goto	l660
 28294                           
 28295                           ; BSR set to: 0
 28296                           ;uart_drv.c: 251: {
 28297                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 28298  005652  0E02               	movlw	2
 28299  005654                     L42:
 28300  005654  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 28301  005656                     l660:
 28302                           
 28303                           ; BSR set to: 0
 28304                           ;uart_drv.c: 257: }
 28305                           ;uart_drv.c: 258: }
 28306                           ;uart_drv.c: 260: return TxBufferStatus;
 28307                           
 28308                           ; BSR set to: 0
 28309                           
 28310                           ; BSR set to: 0
 28311                           
 28312                           ; BSR set to: 0
 28313                           
 28314                           ; BSR set to: 0
 28315                           
 28316                           ;uart_drv.c: 254: else
 28317                           ;uart_drv.c: 255: {
 28318                           
 28319                           ; BSR set to: 0
 28320  005656  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 28321  005658  0012               	return	
 28322  00565A                     __end_of_UartTxBufferStatus:
 28323                           	opt stack 0
 28324                           tosu	equ	0xFFF
 28325                           tosh	equ	0xFFE
 28326                           tosl	equ	0xFFD
 28327                           pclath	equ	0xFFA
 28328                           tblptru	equ	0xFF8
 28329                           tblptrh	equ	0xFF7
 28330                           tblptrl	equ	0xFF6
 28331                           tablat	equ	0xFF5
 28332                           prodh	equ	0xFF4
 28333                           prodl	equ	0xFF3
 28334                           intcon	equ	0xFF2
 28335                           intcon2	equ	0xFF1
 28336                           intcon3	equ	0xFF0
 28337                           indf0	equ	0xFEF
 28338                           postinc0	equ	0xFEE
 28339                           plusw0	equ	0xFEB
 28340                           fsr0h	equ	0xFEA
 28341                           fsr0l	equ	0xFE9
 28342                           wreg	equ	0xFE8
 28343                           indf1	equ	0xFE7
 28344                           postinc1	equ	0xFE6
 28345                           postdec1	equ	0xFE5
 28346                           plusw1	equ	0xFE3
 28347                           fsr1h	equ	0xFE2
 28348                           fsr1l	equ	0xFE1
 28349                           indf2	equ	0xFDF
 28350                           postinc2	equ	0xFDE
 28351                           postdec2	equ	0xFDD
 28352                           plusw2	equ	0xFDB
 28353                           fsr2h	equ	0xFDA
 28354                           fsr2l	equ	0xFD9
 28355                           status	equ	0xFD8
 28356                           
 28357 ;; *************** function _StringCopy *****************
 28358 ;; Defined at:
 28359 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28360 ;; Parameters:    Size  Location     Type
 28361 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 28362 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 28363 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(132), RxBuffer(400), 
 28364 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 28365 ;;		 -> MyApp_Task@smsNumber(14), MyApp_Task@smsText(50), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50
      +), 
 28366 ;;		 -> MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(132), 
 28367 ;;		 -> callerNumber(14), 
 28368 ;;  Len             2   33[BANK0 ] unsigned short 
 28369 ;; Auto vars:     Size  Location     Type
 28370 ;;  Index           2   37[BANK0 ] unsigned short 
 28371 ;; Return value:  Size  Location     Type
 28372 ;;                  1    wreg      void 
 28373 ;; Registers used:
 28374 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28375 ;; Tracked objects:
 28376 ;;		On entry : 0/0
 28377 ;;		On exit  : 0/0
 28378 ;;		Unchanged: 0/0
 28379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28380 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28381 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28382 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28383 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28384 ;;Total ram usage:       10 bytes
 28385 ;; Hardware stack levels used:    1
 28386 ;; Hardware stack levels required when called:   11
 28387 ;; This function calls:
 28388 ;;		Nothing
 28389 ;; This function is called by:
 28390 ;;		_ModemEvtParser
 28391 ;;		_GetSmsSm
 28392 ;;		_SendSmsSm
 28393 ;;		_Mdm_GetSmsData
 28394 ;;		_InitGprsNetwork
 28395 ;;		_HttpGetMethod
 28396 ;;		_Mdm_SendSmsData
 28397 ;; This function uses a non-reentrant model
 28398 ;;
 28399                           
 28400                           	psect	text127
 28401  0050A0                     __ptext127:
 28402                           	opt stack 0
 28403  0050A0                     _StringCopy:
 28404                           	opt stack 15
 28405                           
 28406                           ;sf.c: 106: UINT16 Index = 0;
 28407                           
 28408                           ; BSR set to: 0
 28409                           ;incstack = 0
 28410  0050A0  0E00               	movlw	0
 28411  0050A2  0100               	movlb	0	; () banked
 28412  0050A4  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 28413  0050A6  0E00               	movlw	0
 28414  0050A8  6F85               	movwf	StringCopy@Index& (0+255),b
 28415                           
 28416                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 28417  0050AA  0E00               	movlw	0
 28418  0050AC  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 28419  0050AE  0E00               	movlw	0
 28420  0050B0  6F85               	movwf	StringCopy@Index& (0+255),b
 28421  0050B2  D020               	goto	l2218
 28422  0050B4                     
 28423                           ; BSR set to: 0
 28424                           ;sf.c: 110: {
 28425                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 28426                           
 28427                           ; BSR set to: 0
 28428  0050B4  5185               	movf	StringCopy@Index& (0+255),w,b
 28429  0050B6  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 28430  0050B8  6F83               	movwf	??_StringCopy& (0+255),b
 28431  0050BA  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 28432  0050BC  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 28433  0050BE  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 28434  0050C0  C083  FFF6         	movff	??_StringCopy,tblptrl
 28435  0050C4  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 28436  0050C8  6AF8               	clrf	tblptru,c
 28437  0050CA  5185               	movf	StringCopy@Index& (0+255),w,b
 28438  0050CC  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 28439  0050CE  6ED9               	movwf	fsr2l,c
 28440  0050D0  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 28441  0050D2  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 28442  0050D4  6EDA               	movwf	fsr2h,c
 28443  0050D6  0E0E               	movlw	(high __ramtop+-1)
 28444  0050D8  64F7               	cpfsgt	tblptrh,c
 28445  0050DA  D003               	bra	u12377
 28446  0050DC  0008               	tblrd		*
 28447  0050DE  50F5               	movf	tablat,w,c
 28448  0050E0  D005               	bra	u12370
 28449  0050E2                     u12377:
 28450  0050E2  CFF6 FFE9          	movff	tblptrl,fsr0l
 28451  0050E6  CFF7 FFEA          	movff	tblptrh,fsr0h
 28452  0050EA  50EF               	movf	indf0,w,c
 28453  0050EC                     u12370:
 28454  0050EC  6EDF               	movwf	indf2,c
 28455  0050EE  0100               	movlb	0	; () banked
 28456  0050F0  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 28457  0050F2  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 28458  0050F4                     l2218:
 28459                           
 28460                           ; BSR set to: 0
 28461                           
 28462                           ; BSR set to: 0
 28463  0050F4  5181               	movf	StringCopy@Len& (0+255),w,b
 28464  0050F6  5D85               	subwf	StringCopy@Index& (0+255),w,b
 28465  0050F8  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 28466  0050FA  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 28467  0050FC  B0D8               	btfsc	status,0,c
 28468  0050FE  0012               	return	
 28469  005100  D7D9               	goto	l2219
 28470  005102                     __end_of_StringCopy:
 28471                           	opt stack 0
 28472                           tosu	equ	0xFFF
 28473                           tosh	equ	0xFFE
 28474                           tosl	equ	0xFFD
 28475                           pclath	equ	0xFFA
 28476                           tblptru	equ	0xFF8
 28477                           tblptrh	equ	0xFF7
 28478                           tblptrl	equ	0xFF6
 28479                           tablat	equ	0xFF5
 28480                           prodh	equ	0xFF4
 28481                           prodl	equ	0xFF3
 28482                           intcon	equ	0xFF2
 28483                           intcon2	equ	0xFF1
 28484                           intcon3	equ	0xFF0
 28485                           indf0	equ	0xFEF
 28486                           postinc0	equ	0xFEE
 28487                           plusw0	equ	0xFEB
 28488                           fsr0h	equ	0xFEA
 28489                           fsr0l	equ	0xFE9
 28490                           wreg	equ	0xFE8
 28491                           indf1	equ	0xFE7
 28492                           postinc1	equ	0xFE6
 28493                           postdec1	equ	0xFE5
 28494                           plusw1	equ	0xFE3
 28495                           fsr1h	equ	0xFE2
 28496                           fsr1l	equ	0xFE1
 28497                           indf2	equ	0xFDF
 28498                           postinc2	equ	0xFDE
 28499                           postdec2	equ	0xFDD
 28500                           plusw2	equ	0xFDB
 28501                           fsr2h	equ	0xFDA
 28502                           fsr2l	equ	0xFD9
 28503                           status	equ	0xFD8
 28504                           
 28505 ;; *************** function _OsTmr_StartTimer *****************
 28506 ;; Defined at:
 28507 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28508 ;; Parameters:    Size  Location     Type
 28509 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 28510 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 28511 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 28512 ;;  Timeout         4   35[BANK0 ] unsigned long 
 28513 ;; Auto vars:     Size  Location     Type
 28514 ;;		None
 28515 ;; Return value:  Size  Location     Type
 28516 ;;                  1    wreg      void 
 28517 ;; Registers used:
 28518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28519 ;; Tracked objects:
 28520 ;;		On entry : 0/0
 28521 ;;		On exit  : 0/0
 28522 ;;		Unchanged: 0/0
 28523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28524 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28527 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28528 ;;Total ram usage:        6 bytes
 28529 ;; Hardware stack levels used:    1
 28530 ;; Hardware stack levels required when called:   12
 28531 ;; This function calls:
 28532 ;;		_GetOsTickCounter
 28533 ;; This function is called by:
 28534 ;;		_OsTmr_Wait
 28535 ;;		_CheckModem
 28536 ;;		_SendSmsSm
 28537 ;;		_InitGprsNetwork
 28538 ;;		_HttpGetMethod
 28539 ;;		_Term_MainSm
 28540 ;;		_I2cSlv_QueryI2cData
 28541 ;; This function uses a non-reentrant model
 28542 ;;
 28543                           
 28544                           	psect	text128
 28545  005160                     __ptext128:
 28546                           	opt stack 0
 28547  005160                     _OsTmr_StartTimer:
 28548                           	opt stack 12
 28549                           
 28550                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 28551                           
 28552                           ; BSR set to: 0
 28553                           ;incstack = 0
 28554  005160  0100               	movlb	0	; () banked
 28555  005162  EE20 F001          	lfsr	2,1
 28556  005166  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28557  005168  26D9               	addwf	fsr2l,f,c
 28558  00516A  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28559  00516C  22DA               	addwfc	fsr2h,f,c
 28560  00516E  0E00               	movlw	0
 28561  005170  6EDF               	movwf	indf2,c
 28562                           
 28563                           ; BSR set to: 0
 28564                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 28565  005172  ECD5  F030         	call	_GetOsTickCounter	;wreg free
 28566  005176  0100               	movlb	0	; () banked
 28567  005178  EE20 F002          	lfsr	2,2
 28568  00517C  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28569  00517E  26D9               	addwf	fsr2l,f,c
 28570  005180  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28571  005182  22DA               	addwfc	fsr2h,f,c
 28572  005184  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 28573  005188  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 28574  00518C  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 28575  005190  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 28576                           
 28577                           ; BSR set to: 0
 28578                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 28579  005194  EE20 F006          	lfsr	2,6
 28580  005198  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28581  00519A  26D9               	addwf	fsr2l,f,c
 28582  00519C  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28583  00519E  22DA               	addwfc	fsr2h,f,c
 28584  0051A0  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 28585  0051A4  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 28586  0051A8  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 28587  0051AC  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 28588                           
 28589                           ; BSR set to: 0
 28590                           ;os_timers.c: 127: Timer->Enabled = 1u;
 28591  0051B0  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 28592  0051B4  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 28593  0051B8  0E01               	movlw	1
 28594  0051BA  6EDF               	movwf	indf2,c
 28595                           
 28596                           ; BSR set to: 0
 28597  0051BC  0012               	return		;funcret
 28598  0051BE                     __end_of_OsTmr_StartTimer:
 28599                           	opt stack 0
 28600                           tosu	equ	0xFFF
 28601                           tosh	equ	0xFFE
 28602                           tosl	equ	0xFFD
 28603                           pclath	equ	0xFFA
 28604                           tblptru	equ	0xFF8
 28605                           tblptrh	equ	0xFF7
 28606                           tblptrl	equ	0xFF6
 28607                           tablat	equ	0xFF5
 28608                           prodh	equ	0xFF4
 28609                           prodl	equ	0xFF3
 28610                           intcon	equ	0xFF2
 28611                           intcon2	equ	0xFF1
 28612                           intcon3	equ	0xFF0
 28613                           indf0	equ	0xFEF
 28614                           postinc0	equ	0xFEE
 28615                           plusw0	equ	0xFEB
 28616                           fsr0h	equ	0xFEA
 28617                           fsr0l	equ	0xFE9
 28618                           wreg	equ	0xFE8
 28619                           indf1	equ	0xFE7
 28620                           postinc1	equ	0xFE6
 28621                           postdec1	equ	0xFE5
 28622                           plusw1	equ	0xFE3
 28623                           fsr1h	equ	0xFE2
 28624                           fsr1l	equ	0xFE1
 28625                           indf2	equ	0xFDF
 28626                           postinc2	equ	0xFDE
 28627                           postdec2	equ	0xFDD
 28628                           plusw2	equ	0xFDB
 28629                           fsr2h	equ	0xFDA
 28630                           fsr2l	equ	0xFD9
 28631                           status	equ	0xFD8
 28632                           
 28633 ;; *************** function _OsTmr_GetTimerStatus *****************
 28634 ;; Defined at:
 28635 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28636 ;; Parameters:    Size  Location     Type
 28637 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 28638 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 28639 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 28640 ;; Auto vars:     Size  Location     Type
 28641 ;;		None
 28642 ;; Return value:  Size  Location     Type
 28643 ;;                  1    wreg      enum E7740
 28644 ;; Registers used:
 28645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28646 ;; Tracked objects:
 28647 ;;		On entry : 0/0
 28648 ;;		On exit  : 0/0
 28649 ;;		Unchanged: 0/0
 28650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28651 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28653 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28654 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28655 ;;Total ram usage:        6 bytes
 28656 ;; Hardware stack levels used:    1
 28657 ;; Hardware stack levels required when called:   13
 28658 ;; This function calls:
 28659 ;;		_GetElapsedTime
 28660 ;; This function is called by:
 28661 ;;		_OsTmr_Wait
 28662 ;;		_CheckModem
 28663 ;;		_SendSmsSm
 28664 ;;		_InitGprsNetwork
 28665 ;;		_HttpGetMethod
 28666 ;;		_Term_MainSm
 28667 ;;		_I2cSlv_QueryI2cData
 28668 ;; This function uses a non-reentrant model
 28669 ;;
 28670                           
 28671                           	psect	text129
 28672  0049F6                     __ptext129:
 28673                           	opt stack 0
 28674  0049F6                     _OsTmr_GetTimerStatus:
 28675                           	opt stack 11
 28676                           
 28677                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 28678                           
 28679                           ; BSR set to: 0
 28680                           ;incstack = 0
 28681  0049F6  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28682  0049FA  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28683  0049FE  04DE               	decf	postinc2,w,c
 28684  004A00  A4D8               	btfss	status,2,c
 28685  004A02  D030               	goto	l864
 28686                           
 28687                           ;os_timers.c: 197: {
 28688                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 28689  004A04  0100               	movlb	0	; () banked
 28690  004A06  EE20 F006          	lfsr	2,6
 28691  004A0A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28692  004A0C  26D9               	addwf	fsr2l,f,c
 28693  004A0E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28694  004A10  22DA               	addwfc	fsr2h,f,c
 28695  004A12  EE10 F002          	lfsr	1,2
 28696  004A16  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28697  004A18  26E1               	addwf	fsr1l,f,c
 28698  004A1A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28699  004A1C  22E2               	addwfc	fsr1h,f,c
 28700  004A1E  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 28701  004A22  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 28702  004A26  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 28703  004A2A  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 28704  004A2E  EC58  F01E         	call	_GetElapsedTime	;wreg free
 28705  004A32  50DE               	movf	postinc2,w,c
 28706  004A34  0100               	movlb	0	; () banked
 28707  004A36  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 28708  004A38  50DE               	movf	postinc2,w,c
 28709  004A3A  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 28710  004A3C  50DE               	movf	postinc2,w,c
 28711  004A3E  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 28712  004A40  50DE               	movf	postinc2,w,c
 28713  004A42  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 28714  004A44  A0D8               	btfss	status,0,c
 28715  004A46  D017               	goto	l867
 28716                           
 28717                           ; BSR set to: 0
 28718                           ;os_timers.c: 200: {
 28719                           ;os_timers.c: 202: Timer->Enabled = 0u;
 28720  004A48  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28721  004A4C  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28722  004A50  0E00               	movlw	0
 28723  004A52  6EDF               	movwf	indf2,c
 28724                           
 28725                           ; BSR set to: 0
 28726                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 28727  004A54  EE20 F001          	lfsr	2,1
 28728  004A58  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28729  004A5A  26D9               	addwf	fsr2l,f,c
 28730  004A5C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28731  004A5E  22DA               	addwfc	fsr2h,f,c
 28732  004A60  0E01               	movlw	1
 28733  004A62  D008               	goto	L72
 28734  004A64                     l864:
 28735                           
 28736                           ;os_timers.c: 211: else
 28737                           ;os_timers.c: 212: {
 28738                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 28739                           
 28740                           ; BSR set to: 0
 28741  004A64  0100               	movlb	0	; () banked
 28742  004A66  EE20 F001          	lfsr	2,1
 28743  004A6A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28744  004A6C  26D9               	addwf	fsr2l,f,c
 28745  004A6E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28746  004A70  22DA               	addwfc	fsr2h,f,c
 28747  004A72  0E02               	movlw	2
 28748  004A74                     L72:
 28749  004A74  6EDF               	movwf	indf2,c
 28750  004A76                     l867:
 28751                           
 28752                           ; BSR set to: 0
 28753                           ;os_timers.c: 215: }
 28754                           ;os_timers.c: 218: return Timer->Status;
 28755  004A76  EE20 F001          	lfsr	2,1
 28756  004A7A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28757  004A7C  26D9               	addwf	fsr2l,f,c
 28758  004A7E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28759  004A80  22DA               	addwfc	fsr2h,f,c
 28760  004A82  50DF               	movf	indf2,w,c
 28761  004A84  0012               	return	
 28762  004A86                     __end_of_OsTmr_GetTimerStatus:
 28763                           	opt stack 0
 28764                           tosu	equ	0xFFF
 28765                           tosh	equ	0xFFE
 28766                           tosl	equ	0xFFD
 28767                           pclath	equ	0xFFA
 28768                           tblptru	equ	0xFF8
 28769                           tblptrh	equ	0xFF7
 28770                           tblptrl	equ	0xFF6
 28771                           tablat	equ	0xFF5
 28772                           prodh	equ	0xFF4
 28773                           prodl	equ	0xFF3
 28774                           intcon	equ	0xFF2
 28775                           intcon2	equ	0xFF1
 28776                           intcon3	equ	0xFF0
 28777                           indf0	equ	0xFEF
 28778                           postinc0	equ	0xFEE
 28779                           plusw0	equ	0xFEB
 28780                           fsr0h	equ	0xFEA
 28781                           fsr0l	equ	0xFE9
 28782                           wreg	equ	0xFE8
 28783                           indf1	equ	0xFE7
 28784                           postinc1	equ	0xFE6
 28785                           postdec1	equ	0xFE5
 28786                           plusw1	equ	0xFE3
 28787                           fsr1h	equ	0xFE2
 28788                           fsr1l	equ	0xFE1
 28789                           indf2	equ	0xFDF
 28790                           postinc2	equ	0xFDE
 28791                           postdec2	equ	0xFDD
 28792                           plusw2	equ	0xFDB
 28793                           fsr2h	equ	0xFDA
 28794                           fsr2l	equ	0xFD9
 28795                           status	equ	0xFD8
 28796                           
 28797 ;; *************** function _GetElapsedTime *****************
 28798 ;; Defined at:
 28799 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28800 ;; Parameters:    Size  Location     Type
 28801 ;;  StartTime       4   33[BANK0 ] unsigned long 
 28802 ;; Auto vars:     Size  Location     Type
 28803 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 28804 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 28805 ;; Return value:  Size  Location     Type
 28806 ;;                  4   33[BANK0 ] unsigned long 
 28807 ;; Registers used:
 28808 ;;		wreg, status,2, status,0, cstack
 28809 ;; Tracked objects:
 28810 ;;		On entry : 0/0
 28811 ;;		On exit  : 0/0
 28812 ;;		Unchanged: 0/0
 28813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28814 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28815 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28816 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28817 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28818 ;;Total ram usage:       20 bytes
 28819 ;; Hardware stack levels used:    1
 28820 ;; Hardware stack levels required when called:   12
 28821 ;; This function calls:
 28822 ;;		_GetOsTickCounter
 28823 ;; This function is called by:
 28824 ;;		_OsTmr_GetTimerStatus
 28825 ;;		_OsTmr_GetRemainingTime
 28826 ;; This function uses a non-reentrant model
 28827 ;;
 28828                           
 28829                           	psect	text130
 28830  003CB0                     __ptext130:
 28831                           	opt stack 0
 28832  003CB0                     _GetElapsedTime:
 28833                           	opt stack 11
 28834                           
 28835                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 28836                           ;os_timers.c: 87: UINT32 TimeValue;
 28837                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 28838                           
 28839                           ; BSR set to: 0
 28840                           ;incstack = 0
 28841  003CB0  ECD5  F030         	call	_GetOsTickCounter	;wreg free
 28842  003CB4  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 28843  003CB8  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 28844  003CBC  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 28845  003CC0  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 28846                           
 28847                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 28848  003CC4  0100               	movlb	0	; () banked
 28849  003CC6  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 28850  003CC8  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28851  003CCA  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 28852  003CCC  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28853  003CCE  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 28854  003CD0  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28855  003CD2  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 28856  003CD4  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28857  003CD6  A0D8               	btfss	status,0,c
 28858  003CD8  D01D               	goto	l844
 28859                           
 28860                           ; BSR set to: 0
 28861                           ;os_timers.c: 94: {
 28862                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 28863  003CDA  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 28864  003CDE  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 28865  003CE2  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 28866  003CE6  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 28867  003CEA  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 28868  003CEC  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 28869  003CEE  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 28870  003CF0  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 28871  003CF2  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 28872  003CF4  0E00               	movlw	0
 28873  003CF6  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 28874  003CF8  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 28875  003CFA  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 28876  003CFC  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28877  003CFE  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 28878  003D00  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 28879  003D02  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28880  003D04  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 28881  003D06  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 28882  003D08  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28883  003D0A  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 28884  003D0C  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 28885  003D0E  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28886  003D10  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 28887  003D12  D028               	goto	L43
 28888  003D14                     l844:
 28889                           
 28890                           ; BSR set to: 0
 28891                           ;os_timers.c: 97: else
 28892                           ;os_timers.c: 98: {
 28893                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 28894                           
 28895                           ; BSR set to: 0
 28896  003D14  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 28897  003D18  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 28898  003D1C  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 28899  003D20  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 28900  003D24  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 28901  003D26  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 28902  003D28  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 28903  003D2A  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 28904  003D2C  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 28905  003D2E  0E00               	movlw	0
 28906  003D30  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 28907  003D32  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 28908  003D34  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 28909  003D36  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28910  003D38  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 28911  003D3A  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 28912  003D3C  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28913  003D3E  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 28914  003D40  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 28915  003D42  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28916  003D44  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 28917  003D46  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 28918  003D48  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28919  003D4A  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 28920  003D4C  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 28921  003D4E  0EFF               	movlw	255
 28922  003D50  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 28923  003D52  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 28924  003D54  0EFF               	movlw	255
 28925  003D56  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 28926  003D58  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 28927  003D5A  0EFF               	movlw	255
 28928  003D5C  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 28929  003D5E  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 28930  003D60  0EFF               	movlw	255
 28931  003D62  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 28932  003D64                     L43:
 28933  003D64  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 28934                           
 28935                           ; BSR set to: 0
 28936                           ;os_timers.c: 100: }
 28937                           ;os_timers.c: 102: return TimeValue;
 28938                           
 28939                           ; BSR set to: 0
 28940  003D66  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 28941  003D6A  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 28942  003D6E  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 28943  003D72  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 28944  003D76  0012               	return	
 28945  003D78                     __end_of_GetElapsedTime:
 28946                           	opt stack 0
 28947                           tosu	equ	0xFFF
 28948                           tosh	equ	0xFFE
 28949                           tosl	equ	0xFFD
 28950                           pclath	equ	0xFFA
 28951                           tblptru	equ	0xFF8
 28952                           tblptrh	equ	0xFF7
 28953                           tblptrl	equ	0xFF6
 28954                           tablat	equ	0xFF5
 28955                           prodh	equ	0xFF4
 28956                           prodl	equ	0xFF3
 28957                           intcon	equ	0xFF2
 28958                           intcon2	equ	0xFF1
 28959                           intcon3	equ	0xFF0
 28960                           indf0	equ	0xFEF
 28961                           postinc0	equ	0xFEE
 28962                           plusw0	equ	0xFEB
 28963                           fsr0h	equ	0xFEA
 28964                           fsr0l	equ	0xFE9
 28965                           wreg	equ	0xFE8
 28966                           indf1	equ	0xFE7
 28967                           postinc1	equ	0xFE6
 28968                           postdec1	equ	0xFE5
 28969                           plusw1	equ	0xFE3
 28970                           fsr1h	equ	0xFE2
 28971                           fsr1l	equ	0xFE1
 28972                           indf2	equ	0xFDF
 28973                           postinc2	equ	0xFDE
 28974                           postdec2	equ	0xFDD
 28975                           plusw2	equ	0xFDB
 28976                           fsr2h	equ	0xFDA
 28977                           fsr2l	equ	0xFD9
 28978                           status	equ	0xFD8
 28979                           
 28980 ;; *************** function _GetOsTickCounter *****************
 28981 ;; Defined at:
 28982 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28983 ;; Parameters:    Size  Location     Type
 28984 ;;		None
 28985 ;; Auto vars:     Size  Location     Type
 28986 ;;		None
 28987 ;; Return value:  Size  Location     Type
 28988 ;;                  4   29[BANK0 ] unsigned long 
 28989 ;; Registers used:
 28990 ;;		None
 28991 ;; Tracked objects:
 28992 ;;		On entry : 0/0
 28993 ;;		On exit  : 0/0
 28994 ;;		Unchanged: 0/0
 28995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28996 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28999 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29000 ;;Total ram usage:        4 bytes
 29001 ;; Hardware stack levels used:    1
 29002 ;; Hardware stack levels required when called:   11
 29003 ;; This function calls:
 29004 ;;		Nothing
 29005 ;; This function is called by:
 29006 ;;		_GetElapsedTime
 29007 ;;		_OsTmr_StartTimer
 29008 ;;		_OsTmr_GetElapsedTime
 29009 ;; This function uses a non-reentrant model
 29010 ;;
 29011                           
 29012                           	psect	text131
 29013  0061AA                     __ptext131:
 29014                           	opt stack 0
 29015  0061AA                     _GetOsTickCounter:
 29016                           	opt stack 12
 29017                           
 29018                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 29019                           
 29020                           ; BSR set to: 0
 29021                           ;incstack = 0
 29022  0061AA  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 29023  0061AE  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 29024  0061B2  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 29025  0061B6  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 29026  0061BA  0012               	return		;funcret
 29027  0061BC                     __end_of_GetOsTickCounter:
 29028                           	opt stack 0
 29029                           tosu	equ	0xFFF
 29030                           tosh	equ	0xFFE
 29031                           tosl	equ	0xFFD
 29032                           pclath	equ	0xFFA
 29033                           tblptru	equ	0xFF8
 29034                           tblptrh	equ	0xFF7
 29035                           tblptrl	equ	0xFF6
 29036                           tablat	equ	0xFF5
 29037                           prodh	equ	0xFF4
 29038                           prodl	equ	0xFF3
 29039                           intcon	equ	0xFF2
 29040                           intcon2	equ	0xFF1
 29041                           intcon3	equ	0xFF0
 29042                           indf0	equ	0xFEF
 29043                           postinc0	equ	0xFEE
 29044                           plusw0	equ	0xFEB
 29045                           fsr0h	equ	0xFEA
 29046                           fsr0l	equ	0xFE9
 29047                           wreg	equ	0xFE8
 29048                           indf1	equ	0xFE7
 29049                           postinc1	equ	0xFE6
 29050                           postdec1	equ	0xFE5
 29051                           plusw1	equ	0xFE3
 29052                           fsr1h	equ	0xFE2
 29053                           fsr1l	equ	0xFE1
 29054                           indf2	equ	0xFDF
 29055                           postinc2	equ	0xFDE
 29056                           postdec2	equ	0xFDD
 29057                           plusw2	equ	0xFDB
 29058                           fsr2h	equ	0xFDA
 29059                           fsr2l	equ	0xFD9
 29060                           status	equ	0xFD8
 29061                           
 29062 ;; *************** function _ClearBuffer *****************
 29063 ;; Defined at:
 29064 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 29065 ;; Parameters:    Size  Location     Type
 29066 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 29067 ;;		 -> MyApp_Task@smsNumber(14), MyApp_Task@smsText(50), GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200
      +), 
 29068 ;;		 -> InitGprsNetwork@UartMessage(50), Mdm_SmsRx(132), callerNumber(14), RxBuffer(400), 
 29069 ;;  Len             2   31[BANK0 ] unsigned short 
 29070 ;; Auto vars:     Size  Location     Type
 29071 ;;  Index           2   33[BANK0 ] unsigned short 
 29072 ;; Return value:  Size  Location     Type
 29073 ;;                  1    wreg      void 
 29074 ;; Registers used:
 29075 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29076 ;; Tracked objects:
 29077 ;;		On entry : 0/0
 29078 ;;		On exit  : 0/0
 29079 ;;		Unchanged: 0/0
 29080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29081 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29082 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29084 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29085 ;;Total ram usage:        6 bytes
 29086 ;; Hardware stack levels used:    1
 29087 ;; Hardware stack levels required when called:   11
 29088 ;; This function calls:
 29089 ;;		Nothing
 29090 ;; This function is called by:
 29091 ;;		_GetSmsSm
 29092 ;;		_GetCallerNumber
 29093 ;;		_InitGprsNetwork
 29094 ;;		_HttpGetMethod
 29095 ;;		_MyApp_Task
 29096 ;;		_GsmGprsTerminal
 29097 ;; This function uses a non-reentrant model
 29098 ;;
 29099                           
 29100                           	psect	text132
 29101  005BBE                     __ptext132:
 29102                           	opt stack 0
 29103  005BBE                     _ClearBuffer:
 29104                           	opt stack 15
 29105                           
 29106                           ;sf.c: 126: UINT16 Index = 0;
 29107                           
 29108                           ;incstack = 0
 29109  005BBE  0E00               	movlw	0
 29110  005BC0  0100               	movlb	0	; () banked
 29111  005BC2  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 29112  005BC4  0E00               	movlw	0
 29113  005BC6  6F81               	movwf	ClearBuffer@Index& (0+255),b
 29114                           
 29115                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 29116  005BC8  0E00               	movlw	0
 29117  005BCA  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 29118  005BCC  0E00               	movlw	0
 29119  005BCE  6F81               	movwf	ClearBuffer@Index& (0+255),b
 29120  005BD0  D00A               	goto	l2224
 29121  005BD2                     
 29122                           ; BSR set to: 0
 29123                           ;sf.c: 130: {
 29124                           ;sf.c: 131: *(Buffer + Index) = 0;
 29125                           
 29126                           ; BSR set to: 0
 29127  005BD2  5181               	movf	ClearBuffer@Index& (0+255),w,b
 29128  005BD4  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 29129  005BD6  6ED9               	movwf	fsr2l,c
 29130  005BD8  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 29131  005BDA  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 29132  005BDC  6EDA               	movwf	fsr2h,c
 29133  005BDE  0E00               	movlw	0
 29134  005BE0  6EDF               	movwf	indf2,c
 29135                           
 29136                           ; BSR set to: 0
 29137  005BE2  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 29138  005BE4  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 29139  005BE6                     l2224:
 29140                           
 29141                           ; BSR set to: 0
 29142                           
 29143                           ; BSR set to: 0
 29144  005BE6  5181               	movf	ClearBuffer@Index& (0+255),w,b
 29145  005BE8  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 29146  005BEA  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 29147  005BEC  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 29148  005BEE  A0D8               	btfss	status,0,c
 29149  005BF0  0012               	return	
 29150  005BF2  D7EF               	goto	l2225
 29151  005BF4                     __end_of_ClearBuffer:
 29152                           	opt stack 0
 29153                           tosu	equ	0xFFF
 29154                           tosh	equ	0xFFE
 29155                           tosl	equ	0xFFD
 29156                           pclath	equ	0xFFA
 29157                           tblptru	equ	0xFF8
 29158                           tblptrh	equ	0xFF7
 29159                           tblptrl	equ	0xFF6
 29160                           tablat	equ	0xFF5
 29161                           prodh	equ	0xFF4
 29162                           prodl	equ	0xFF3
 29163                           intcon	equ	0xFF2
 29164                           intcon2	equ	0xFF1
 29165                           intcon3	equ	0xFF0
 29166                           indf0	equ	0xFEF
 29167                           postinc0	equ	0xFEE
 29168                           plusw0	equ	0xFEB
 29169                           fsr0h	equ	0xFEA
 29170                           fsr0l	equ	0xFE9
 29171                           wreg	equ	0xFE8
 29172                           indf1	equ	0xFE7
 29173                           postinc1	equ	0xFE6
 29174                           postdec1	equ	0xFE5
 29175                           plusw1	equ	0xFE3
 29176                           fsr1h	equ	0xFE2
 29177                           fsr1l	equ	0xFE1
 29178                           indf2	equ	0xFDF
 29179                           postinc2	equ	0xFDE
 29180                           postdec2	equ	0xFDD
 29181                           plusw2	equ	0xFDB
 29182                           fsr2h	equ	0xFDA
 29183                           fsr2l	equ	0xFD9
 29184                           status	equ	0xFD8
 29185                           
 29186 ;; *************** function _LedStateMachine *****************
 29187 ;; Defined at:
 29188 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29189 ;; Parameters:    Size  Location     Type
 29190 ;;  Led             1    wreg     unsigned char 
 29191 ;;  LedSts          2   47[BANK0 ] PTR enum E8937
 29192 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 29193 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 29194 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 29195 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 29196 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 29197 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 29198 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 29199 ;; Auto vars:     Size  Location     Type
 29200 ;;  Led             1   57[BANK0 ] unsigned char 
 29201 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 29202 ;; Return value:  Size  Location     Type
 29203 ;;                  1    wreg      unsigned char 
 29204 ;; Registers used:
 29205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29206 ;; Tracked objects:
 29207 ;;		On entry : 0/0
 29208 ;;		On exit  : 0/0
 29209 ;;		Unchanged: 0/0
 29210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29211 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29212 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29213 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29214 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29215 ;;Total ram usage:       11 bytes
 29216 ;; Hardware stack levels used:    1
 29217 ;; Hardware stack levels required when called:   13
 29218 ;; This function calls:
 29219 ;;		_LedBlinkStateMachine
 29220 ;;		_LedPulseStateMachine
 29221 ;;		_Led_SetLedStatus
 29222 ;; This function is called by:
 29223 ;;		_Led_MainTask
 29224 ;; This function uses a non-reentrant model
 29225 ;;
 29226                           
 29227                           	psect	text133
 29228  0043E4                     __ptext133:
 29229                           	opt stack 0
 29230  0043E4                     _LedStateMachine:
 29231                           	opt stack 14
 29232                           
 29233                           ; BSR set to: 0
 29234                           ;incstack = 0
 29235                           ;LedStateMachine@Led stored from wreg
 29236  0043E4  0100               	movlb	0	; () banked
 29237  0043E6  6F99               	movwf	LedStateMachine@Led& (0+255),b
 29238                           
 29239                           ;led.c: 238: UINT8 LedOutSts = 0u;
 29240  0043E8  0E00               	movlw	0
 29241  0043EA  0100               	movlb	0	; () banked
 29242  0043EC  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29243                           
 29244                           ;led.c: 241: switch (*LedSts)
 29245  0043EE  D037               	goto	l2083
 29246  0043F0                     
 29247                           ; BSR set to: 0
 29248                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 29249                           
 29250                           ; BSR set to: 0
 29251  0043F0  0E00               	movlw	0
 29252  0043F2  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29253                           
 29254                           ; BSR set to: 0
 29255                           ;led.c: 246: *LedOut = ((UINT8)(0));
 29256  0043F4  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29257  0043F8  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29258  0043FC  0E00               	movlw	0
 29259  0043FE  D007               	goto	L44
 29260  004400                     
 29261                           ; BSR set to: 0
 29262                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 29263                           
 29264                           ; BSR set to: 0
 29265  004400  0E01               	movlw	1
 29266  004402  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29267                           
 29268                           ; BSR set to: 0
 29269                           ;led.c: 252: *LedOut = ((UINT8)(1));
 29270  004404  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29271  004408  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29272  00440C  0E01               	movlw	1
 29273  00440E                     L44:
 29274  00440E  6EDF               	movwf	indf2,c
 29275                           
 29276                           ;led.c: 253: break;
 29277  004410  D03A               	goto	l2085
 29278  004412                     
 29279                           ; BSR set to: 0
 29280                           ;led.c: 257: if (*LedOut == 1)
 29281                           
 29282                           ; BSR set to: 0
 29283  004412  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29284  004416  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29285  00441A  04DE               	decf	postinc2,w,c
 29286  00441C  A4D8               	btfss	status,2,c
 29287  00441E  D006               	goto	l2088
 29288                           
 29289                           ; BSR set to: 0
 29290                           ;led.c: 258: {
 29291                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 29292  004420  0E00               	movlw	0
 29293  004422  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29294  004424  5199               	movf	LedStateMachine@Led& (0+255),w,b
 29295  004426  EC8E  F02E         	call	_Led_SetLedStatus
 29296                           
 29297                           ;led.c: 261: }
 29298  00442A  D02D               	goto	l2085
 29299  00442C                     l2088:
 29300                           
 29301                           ;led.c: 262: else
 29302                           ;led.c: 263: {
 29303                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 29304  00442C  0E01               	movlw	1
 29305  00442E  0100               	movlb	0	; () banked
 29306  004430  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29307  004432  5199               	movf	LedStateMachine@Led& (0+255),w,b
 29308  004434  EC8E  F02E         	call	_Led_SetLedStatus
 29309                           
 29310                           ;led.c: 266: }
 29311                           ;led.c: 267: break;
 29312  004438  D026               	goto	l2085
 29313  00443A                     
 29314                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 29315  00443A  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 29316  00443E  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 29317  004442  EC80  F013         	call	_LedBlinkStateMachine	;wreg free
 29318  004446  D008               	goto	L45
 29319  004448                     
 29320                           ; BSR set to: 0
 29321                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 29322                           
 29323                           ; BSR set to: 0
 29324  004448  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 29325  00444C  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 29326  004450  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 29327  004454  EC4A  F019         	call	_LedPulseStateMachine	;wreg free
 29328  004458                     L45:
 29329  004458  0100               	movlb	0	; () banked
 29330  00445A  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29331                           
 29332                           ; BSR set to: 0
 29333                           ;led.c: 281: }
 29334                           
 29335                           ; BSR set to: 0
 29336                           ;led.c: 280: break;
 29337                           
 29338                           ;led.c: 279: default:
 29339                           
 29340                           ;led.c: 277: break;
 29341  00445C  D014               	goto	l2085
 29342  00445E                     l2083:
 29343                           
 29344                           ; BSR set to: 0
 29345                           
 29346                           ; BSR set to: 0
 29347  00445E  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 29348  004462  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 29349  004466  50DF               	movf	indf2,w,c
 29350                           
 29351                           ; Switch size 1, requested type "space"
 29352                           ; Number of cases is 5, Range of values is 0 to 4
 29353                           ; switch strategies available:
 29354                           ; Name         Instructions Cycles
 29355                           ; simple_byte           16     9 (average)
 29356                           ;	Chosen strategy is simple_byte
 29357  004468  0A00               	xorlw	0	; case 0
 29358  00446A  B4D8               	btfsc	status,2,c
 29359  00446C  D7C1               	goto	l2084
 29360  00446E  0A01               	xorlw	1	; case 1
 29361  004470  B4D8               	btfsc	status,2,c
 29362  004472  D7C6               	goto	l2086
 29363  004474  0A03               	xorlw	3	; case 2
 29364  004476  B4D8               	btfsc	status,2,c
 29365  004478  D7CC               	goto	l2087
 29366  00447A  0A01               	xorlw	1	; case 3
 29367  00447C  B4D8               	btfsc	status,2,c
 29368  00447E  D7DD               	goto	l2090
 29369  004480  0A07               	xorlw	7	; case 4
 29370  004482  B4D8               	btfsc	status,2,c
 29371  004484  D7E1               	goto	l2091
 29372  004486                     l2085:
 29373                           
 29374                           ;led.c: 283: return LedOutSts;
 29375                           
 29376                           ; BSR set to: 0
 29377  004486  0100               	movlb	0	; () banked
 29378  004488  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 29379  00448A  0012               	return	
 29380  00448C                     __end_of_LedStateMachine:
 29381                           	opt stack 0
 29382                           tosu	equ	0xFFF
 29383                           tosh	equ	0xFFE
 29384                           tosl	equ	0xFFD
 29385                           pclath	equ	0xFFA
 29386                           tblptru	equ	0xFF8
 29387                           tblptrh	equ	0xFF7
 29388                           tblptrl	equ	0xFF6
 29389                           tablat	equ	0xFF5
 29390                           prodh	equ	0xFF4
 29391                           prodl	equ	0xFF3
 29392                           intcon	equ	0xFF2
 29393                           intcon2	equ	0xFF1
 29394                           intcon3	equ	0xFF0
 29395                           indf0	equ	0xFEF
 29396                           postinc0	equ	0xFEE
 29397                           plusw0	equ	0xFEB
 29398                           fsr0h	equ	0xFEA
 29399                           fsr0l	equ	0xFE9
 29400                           wreg	equ	0xFE8
 29401                           indf1	equ	0xFE7
 29402                           postinc1	equ	0xFE6
 29403                           postdec1	equ	0xFE5
 29404                           plusw1	equ	0xFE3
 29405                           fsr1h	equ	0xFE2
 29406                           fsr1l	equ	0xFE1
 29407                           indf2	equ	0xFDF
 29408                           postinc2	equ	0xFDE
 29409                           postdec2	equ	0xFDD
 29410                           plusw2	equ	0xFDB
 29411                           fsr2h	equ	0xFDA
 29412                           fsr2l	equ	0xFD9
 29413                           status	equ	0xFD8
 29414                           
 29415 ;; *************** function _LedPulseStateMachine *****************
 29416 ;; Defined at:
 29417 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29418 ;; Parameters:    Size  Location     Type
 29419 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 29420 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 29421 ;;  Led             1   44[BANK0 ] unsigned char 
 29422 ;; Auto vars:     Size  Location     Type
 29423 ;;		None
 29424 ;; Return value:  Size  Location     Type
 29425 ;;                  1    wreg      unsigned char 
 29426 ;; Registers used:
 29427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29428 ;; Tracked objects:
 29429 ;;		On entry : 0/0
 29430 ;;		On exit  : 0/0
 29431 ;;		Unchanged: 0/0
 29432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29433 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29435 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29436 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29437 ;;Total ram usage:        5 bytes
 29438 ;; Hardware stack levels used:    1
 29439 ;; Hardware stack levels required when called:   12
 29440 ;; This function calls:
 29441 ;;		_Led_SetLedStatus
 29442 ;;		___lwdiv
 29443 ;; This function is called by:
 29444 ;;		_LedStateMachine
 29445 ;; This function uses a non-reentrant model
 29446 ;;
 29447                           
 29448                           	psect	text134
 29449  003294                     __ptext134:
 29450                           	opt stack 0
 29451  003294                     _LedPulseStateMachine:
 29452                           	opt stack 14
 29453                           
 29454                           ;led.c: 185: switch (LedPulse->LedPulseState)
 29455                           
 29456                           ; BSR set to: 0
 29457                           ;incstack = 0
 29458  003294  D05C               	goto	l2073
 29459  003296                     
 29460                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 29461  003296  0100               	movlb	0	; () banked
 29462  003298  EE20 F001          	lfsr	2,1
 29463  00329C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29464  00329E  26D9               	addwf	fsr2l,f,c
 29465  0032A0  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29466  0032A2  22DA               	addwfc	fsr2h,f,c
 29467  0032A4  0E01               	movlw	1
 29468  0032A6  6EDF               	movwf	indf2,c
 29469                           
 29470                           ; BSR set to: 0
 29471                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 29472  0032A8  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29473  0032AC  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29474  0032B0  0E01               	movlw	1
 29475  0032B2  D036               	goto	L46
 29476  0032B4                     
 29477                           ;led.c: 196: LedPulse->LedPulseCounter++;
 29478                           
 29479                           ; BSR set to: 0
 29480  0032B4  0100               	movlb	0	; () banked
 29481  0032B6  EE20 F002          	lfsr	2,2
 29482  0032BA  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29483  0032BC  26D9               	addwf	fsr2l,f,c
 29484  0032BE  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29485  0032C0  22DA               	addwfc	fsr2h,f,c
 29486  0032C2  2ADE               	incf	postinc2,f,c
 29487  0032C4  0E00               	movlw	0
 29488  0032C6  22DD               	addwfc	postdec2,f,c
 29489                           
 29490                           ; BSR set to: 0
 29491                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 29492  0032C8  EE20 F004          	lfsr	2,4
 29493  0032CC  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29494  0032CE  26D9               	addwf	fsr2l,f,c
 29495  0032D0  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29496  0032D2  22DA               	addwfc	fsr2h,f,c
 29497  0032D4  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29498  0032D8  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29499  0032DC  0E00               	movlw	0
 29500  0032DE  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29501  0032E0  0E32               	movlw	50
 29502  0032E2  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29503  0032E4  EC3B  F02A         	call	___lwdiv	;wreg free
 29504  0032E8  0100               	movlb	0	; () banked
 29505  0032EA  EE20 F002          	lfsr	2,2
 29506  0032EE  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29507  0032F0  26D9               	addwf	fsr2l,f,c
 29508  0032F2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29509  0032F4  22DA               	addwfc	fsr2h,f,c
 29510  0032F6  5183               	movf	?___lwdiv& (0+255),w,b
 29511  0032F8  5CDE               	subwf	postinc2,w,c
 29512  0032FA  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29513  0032FC  58DE               	subwfb	postinc2,w,c
 29514  0032FE  A0D8               	btfss	status,0,c
 29515  003300  D034               	goto	l2075
 29516                           
 29517                           ; BSR set to: 0
 29518                           ;led.c: 199: {
 29519                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 29520  003302  EE20 F002          	lfsr	2,2
 29521  003306  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29522  003308  26D9               	addwf	fsr2l,f,c
 29523  00330A  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29524  00330C  22DA               	addwfc	fsr2h,f,c
 29525  00330E  0E00               	movlw	0
 29526  003310  6EDE               	movwf	postinc2,c
 29527  003312  0E00               	movlw	0
 29528  003314  6EDD               	movwf	postdec2,c
 29529                           
 29530                           ; BSR set to: 0
 29531                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 29532  003316  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29533  00331A  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29534  00331E  0E02               	movlw	2
 29535  003320                     L46:
 29536  003320  6EDF               	movwf	indf2,c
 29537                           
 29538                           ; BSR set to: 0
 29539                           ;led.c: 204: }
 29540                           ;led.c: 205: break;
 29541  003322  D023               	goto	l2075
 29542  003324                     
 29543                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 29544                           
 29545                           ; BSR set to: 0
 29546  003324  0100               	movlb	0	; () banked
 29547  003326  EE20 F001          	lfsr	2,1
 29548  00332A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29549  00332C  26D9               	addwf	fsr2l,f,c
 29550  00332E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29551  003330  22DA               	addwfc	fsr2h,f,c
 29552  003332  0E00               	movlw	0
 29553  003334  6EDF               	movwf	indf2,c
 29554                           
 29555                           ; BSR set to: 0
 29556                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 29557  003336  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29558  00333A  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29559  00333E  0E00               	movlw	0
 29560  003340  6EDF               	movwf	indf2,c
 29561                           
 29562                           ; BSR set to: 0
 29563                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 29564  003342  0E00               	movlw	0
 29565  003344  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29566  003346  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 29567  003348  EC8E  F02E         	call	_Led_SetLedStatus
 29568                           
 29569                           ;led.c: 218: }
 29570                           
 29571                           ;led.c: 217: break;
 29572                           
 29573                           ;led.c: 216: default:
 29574                           
 29575                           ;led.c: 214: break;
 29576  00334C  D00E               	goto	l2075
 29577  00334E                     l2073:
 29578  00334E  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29579  003352  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29580  003356  50DF               	movf	indf2,w,c
 29581                           
 29582                           ; Switch size 1, requested type "space"
 29583                           ; Number of cases is 3, Range of values is 0 to 2
 29584                           ; switch strategies available:
 29585                           ; Name         Instructions Cycles
 29586                           ; simple_byte           10     6 (average)
 29587                           ;	Chosen strategy is simple_byte
 29588  003358  0A00               	xorlw	0	; case 0
 29589  00335A  B4D8               	btfsc	status,2,c
 29590  00335C  D79C               	goto	l2074
 29591  00335E  0A01               	xorlw	1	; case 1
 29592  003360  B4D8               	btfsc	status,2,c
 29593  003362  D7A8               	goto	l2076
 29594  003364  0A03               	xorlw	3	; case 2
 29595  003366  B4D8               	btfsc	status,2,c
 29596  003368  D7DD               	goto	l2078
 29597  00336A                     l2075:
 29598                           
 29599                           ;led.c: 221: return (LedPulse->LedOutState);
 29600  00336A  0100               	movlb	0	; () banked
 29601  00336C  EE20 F001          	lfsr	2,1
 29602  003370  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29603  003372  26D9               	addwf	fsr2l,f,c
 29604  003374  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29605  003376  22DA               	addwfc	fsr2h,f,c
 29606  003378  50DF               	movf	indf2,w,c
 29607  00337A  0012               	return	
 29608  00337C                     __end_of_LedPulseStateMachine:
 29609                           	opt stack 0
 29610                           tosu	equ	0xFFF
 29611                           tosh	equ	0xFFE
 29612                           tosl	equ	0xFFD
 29613                           pclath	equ	0xFFA
 29614                           tblptru	equ	0xFF8
 29615                           tblptrh	equ	0xFF7
 29616                           tblptrl	equ	0xFF6
 29617                           tablat	equ	0xFF5
 29618                           prodh	equ	0xFF4
 29619                           prodl	equ	0xFF3
 29620                           intcon	equ	0xFF2
 29621                           intcon2	equ	0xFF1
 29622                           intcon3	equ	0xFF0
 29623                           indf0	equ	0xFEF
 29624                           postinc0	equ	0xFEE
 29625                           plusw0	equ	0xFEB
 29626                           fsr0h	equ	0xFEA
 29627                           fsr0l	equ	0xFE9
 29628                           wreg	equ	0xFE8
 29629                           indf1	equ	0xFE7
 29630                           postinc1	equ	0xFE6
 29631                           postdec1	equ	0xFE5
 29632                           plusw1	equ	0xFE3
 29633                           fsr1h	equ	0xFE2
 29634                           fsr1l	equ	0xFE1
 29635                           indf2	equ	0xFDF
 29636                           postinc2	equ	0xFDE
 29637                           postdec2	equ	0xFDD
 29638                           plusw2	equ	0xFDB
 29639                           fsr2h	equ	0xFDA
 29640                           fsr2l	equ	0xFD9
 29641                           status	equ	0xFD8
 29642                           
 29643 ;; *************** function _Led_SetLedStatus *****************
 29644 ;; Defined at:
 29645 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29646 ;; Parameters:    Size  Location     Type
 29647 ;;  Led             1    wreg     unsigned char 
 29648 ;;  LedSts          1   29[BANK0 ] enum E8937
 29649 ;; Auto vars:     Size  Location     Type
 29650 ;;  Led             1   30[BANK0 ] unsigned char 
 29651 ;; Return value:  Size  Location     Type
 29652 ;;                  1    wreg      void 
 29653 ;; Registers used:
 29654 ;;		wreg, status,2, status,0
 29655 ;; Tracked objects:
 29656 ;;		On entry : 0/0
 29657 ;;		On exit  : 0/0
 29658 ;;		Unchanged: 0/0
 29659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29660 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29663 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29664 ;;Total ram usage:        2 bytes
 29665 ;; Hardware stack levels used:    1
 29666 ;; Hardware stack levels required when called:   11
 29667 ;; This function calls:
 29668 ;;		Nothing
 29669 ;; This function is called by:
 29670 ;;		_LedPulseStateMachine
 29671 ;;		_LedStateMachine
 29672 ;;		_initGprsModem
 29673 ;;		_blinkForSeconds
 29674 ;; This function uses a non-reentrant model
 29675 ;;
 29676                           
 29677                           	psect	text135
 29678  005D1C                     __ptext135:
 29679                           	opt stack 0
 29680  005D1C                     _Led_SetLedStatus:
 29681                           	opt stack 15
 29682                           
 29683                           ; BSR set to: 0
 29684                           ;incstack = 0
 29685                           ;Led_SetLedStatus@Led stored from wreg
 29686  005D1C  0100               	movlb	0	; () banked
 29687  005D1E  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 29688                           
 29689                           ;led.c: 341: switch (Led)
 29690  005D20  D009               	goto	l2104
 29691  005D22                     l2105:
 29692                           
 29693                           ; BSR set to: 0
 29694                           ;led.c: 344: Led1Sts = LedSts;
 29695  005D22  C07D  F1FC         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 29696                           
 29697                           ;led.c: 345: break;
 29698  005D26  0012               	return	
 29699  005D28                     l2107:
 29700                           
 29701                           ; BSR set to: 0
 29702                           ;led.c: 348: Led2Sts = LedSts;
 29703  005D28  C07D  F1FA         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 29704                           
 29705                           ;led.c: 349: break;
 29706  005D2C  0012               	return	
 29707  005D2E                     l2108:
 29708                           
 29709                           ; BSR set to: 0
 29710                           ;led.c: 352: Led3Sts = LedSts;
 29711  005D2E  C07D  F1F8         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 29712                           
 29713                           ; BSR set to: 0
 29714                           ;led.c: 357: }
 29715                           
 29716                           ; BSR set to: 0
 29717                           ;led.c: 356: break;
 29718                           
 29719                           ;led.c: 355: default:
 29720                           
 29721                           ;led.c: 353: break;
 29722  005D32  0012               	return	
 29723  005D34                     l2104:
 29724                           
 29725                           ; BSR set to: 0
 29726  005D34  0100               	movlb	0	; () banked
 29727  005D36  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 29728                           
 29729                           ; Switch size 1, requested type "space"
 29730                           ; Number of cases is 3, Range of values is 1 to 3
 29731                           ; switch strategies available:
 29732                           ; Name         Instructions Cycles
 29733                           ; simple_byte           10     6 (average)
 29734                           ;	Chosen strategy is simple_byte
 29735  005D38  0A01               	xorlw	1	; case 1
 29736  005D3A  B4D8               	btfsc	status,2,c
 29737  005D3C  D7F2               	goto	l2105
 29738  005D3E  0A03               	xorlw	3	; case 2
 29739  005D40  B4D8               	btfsc	status,2,c
 29740  005D42  D7F2               	goto	l2107
 29741  005D44  0A01               	xorlw	1	; case 3
 29742  005D46  A4D8               	btfss	status,2,c
 29743  005D48  0012               	return	
 29744  005D4A  D7F1               	goto	l2108
 29745  005D4C                     __end_of_Led_SetLedStatus:
 29746                           	opt stack 0
 29747                           tosu	equ	0xFFF
 29748                           tosh	equ	0xFFE
 29749                           tosl	equ	0xFFD
 29750                           pclath	equ	0xFFA
 29751                           tblptru	equ	0xFF8
 29752                           tblptrh	equ	0xFF7
 29753                           tblptrl	equ	0xFF6
 29754                           tablat	equ	0xFF5
 29755                           prodh	equ	0xFF4
 29756                           prodl	equ	0xFF3
 29757                           intcon	equ	0xFF2
 29758                           intcon2	equ	0xFF1
 29759                           intcon3	equ	0xFF0
 29760                           indf0	equ	0xFEF
 29761                           postinc0	equ	0xFEE
 29762                           plusw0	equ	0xFEB
 29763                           fsr0h	equ	0xFEA
 29764                           fsr0l	equ	0xFE9
 29765                           wreg	equ	0xFE8
 29766                           indf1	equ	0xFE7
 29767                           postinc1	equ	0xFE6
 29768                           postdec1	equ	0xFE5
 29769                           plusw1	equ	0xFE3
 29770                           fsr1h	equ	0xFE2
 29771                           fsr1l	equ	0xFE1
 29772                           indf2	equ	0xFDF
 29773                           postinc2	equ	0xFDE
 29774                           postdec2	equ	0xFDD
 29775                           plusw2	equ	0xFDB
 29776                           fsr2h	equ	0xFDA
 29777                           fsr2l	equ	0xFD9
 29778                           status	equ	0xFD8
 29779                           
 29780 ;; *************** function _LedBlinkStateMachine *****************
 29781 ;; Defined at:
 29782 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29783 ;; Parameters:    Size  Location     Type
 29784 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 29785 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 29786 ;; Auto vars:     Size  Location     Type
 29787 ;;		None
 29788 ;; Return value:  Size  Location     Type
 29789 ;;                  1    wreg      unsigned char 
 29790 ;; Registers used:
 29791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29792 ;; Tracked objects:
 29793 ;;		On entry : 0/0
 29794 ;;		On exit  : 0/0
 29795 ;;		Unchanged: 0/0
 29796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29797 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29799 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29800 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29801 ;;Total ram usage:        4 bytes
 29802 ;; Hardware stack levels used:    1
 29803 ;; Hardware stack levels required when called:   12
 29804 ;; This function calls:
 29805 ;;		___lwdiv
 29806 ;; This function is called by:
 29807 ;;		_LedStateMachine
 29808 ;; This function uses a non-reentrant model
 29809 ;;
 29810                           
 29811                           	psect	text136
 29812  002700                     __ptext136:
 29813                           	opt stack 0
 29814  002700                     _LedBlinkStateMachine:
 29815                           	opt stack 14
 29816                           
 29817                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 29818                           
 29819                           ; BSR set to: 0
 29820                           ;incstack = 0
 29821  002700  D08F               	goto	l2060
 29822  002702                     
 29823                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 29824  002702  0100               	movlb	0	; () banked
 29825  002704  EE20 F008          	lfsr	2,8
 29826  002708  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29827  00270A  26D9               	addwf	fsr2l,f,c
 29828  00270C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29829  00270E  22DA               	addwfc	fsr2h,f,c
 29830  002710  EE10 F001          	lfsr	1,1
 29831  002714  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29832  002716  26E1               	addwf	fsr1l,f,c
 29833  002718  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29834  00271A  22E2               	addwfc	fsr1h,f,c
 29835  00271C  CFDF FFE7          	movff	indf2,indf1
 29836                           
 29837                           ; BSR set to: 0
 29838                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 29839  002720  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 29840  002724  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 29841  002728  D040               	goto	L47
 29842  00272A                     
 29843                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 29844                           
 29845                           ; BSR set to: 0
 29846  00272A  0100               	movlb	0	; () banked
 29847  00272C  EE20 F002          	lfsr	2,2
 29848  002730  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29849  002732  26D9               	addwf	fsr2l,f,c
 29850  002734  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29851  002736  22DA               	addwfc	fsr2h,f,c
 29852  002738  2ADE               	incf	postinc2,f,c
 29853  00273A  0E00               	movlw	0
 29854  00273C  22DD               	addwfc	postdec2,f,c
 29855                           
 29856                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 29857  00273E  EE20 F001          	lfsr	2,1
 29858  002742  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29859  002744  26D9               	addwf	fsr2l,f,c
 29860  002746  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29861  002748  22DA               	addwfc	fsr2h,f,c
 29862  00274A  50DF               	movf	indf2,w,c
 29863  00274C  A4D8               	btfss	status,2,c
 29864  00274E  D02F               	goto	l2064
 29865                           
 29866                           ; BSR set to: 0
 29867                           ;led.c: 142: {
 29868                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 29869  002750  EE20 F006          	lfsr	2,6
 29870  002754  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29871  002756  26D9               	addwf	fsr2l,f,c
 29872  002758  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29873  00275A  22DA               	addwfc	fsr2h,f,c
 29874  00275C  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29875  002760  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29876  002764  0E00               	movlw	0
 29877  002766  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29878  002768  0E32               	movlw	50
 29879  00276A  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29880  00276C  EC3B  F02A         	call	___lwdiv	;wreg free
 29881  002770  0100               	movlb	0	; () banked
 29882  002772  EE20 F002          	lfsr	2,2
 29883  002776  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29884  002778  26D9               	addwf	fsr2l,f,c
 29885  00277A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29886  00277C  22DA               	addwfc	fsr2h,f,c
 29887  00277E  5183               	movf	?___lwdiv& (0+255),w,b
 29888  002780  5CDE               	subwf	postinc2,w,c
 29889  002782  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29890  002784  58DE               	subwfb	postinc2,w,c
 29891  002786  A0D8               	btfss	status,0,c
 29892  002788  D056               	goto	l2062
 29893                           
 29894                           ; BSR set to: 0
 29895                           ;led.c: 145: {
 29896                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 29897  00278A  EE20 F002          	lfsr	2,2
 29898  00278E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29899  002790  26D9               	addwf	fsr2l,f,c
 29900  002792  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29901  002794  22DA               	addwfc	fsr2h,f,c
 29902  002796  0E00               	movlw	0
 29903  002798  6EDE               	movwf	postinc2,c
 29904  00279A  0E00               	movlw	0
 29905  00279C  6EDD               	movwf	postdec2,c
 29906                           
 29907                           ;led.c: 149: LedBlink->LedOutState = OnState;
 29908  00279E  EE20 F001          	lfsr	2,1
 29909  0027A2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29910  0027A4  26D9               	addwf	fsr2l,f,c
 29911  0027A6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29912  0027A8  22DA               	addwfc	fsr2h,f,c
 29913  0027AA                     L47:
 29914  0027AA  0E01               	movlw	1
 29915  0027AC  D037               	goto	L48
 29916  0027AE                     l2064:
 29917                           
 29918                           ; BSR set to: 0
 29919                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 29920                           
 29921                           ; BSR set to: 0
 29922  0027AE  EE20 F001          	lfsr	2,1
 29923  0027B2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29924  0027B4  26D9               	addwf	fsr2l,f,c
 29925  0027B6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29926  0027B8  22DA               	addwfc	fsr2h,f,c
 29927  0027BA  04DE               	decf	postinc2,w,c
 29928  0027BC  A4D8               	btfss	status,2,c
 29929  0027BE  D03B               	goto	l2062
 29930                           
 29931                           ; BSR set to: 0
 29932                           ;led.c: 153: {
 29933                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 29934  0027C0  EE20 F004          	lfsr	2,4
 29935  0027C4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29936  0027C6  26D9               	addwf	fsr2l,f,c
 29937  0027C8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29938  0027CA  22DA               	addwfc	fsr2h,f,c
 29939  0027CC  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29940  0027D0  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29941  0027D4  0E00               	movlw	0
 29942  0027D6  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29943  0027D8  0E32               	movlw	50
 29944  0027DA  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29945  0027DC  EC3B  F02A         	call	___lwdiv	;wreg free
 29946  0027E0  0100               	movlb	0	; () banked
 29947  0027E2  EE20 F002          	lfsr	2,2
 29948  0027E6  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29949  0027E8  26D9               	addwf	fsr2l,f,c
 29950  0027EA  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29951  0027EC  22DA               	addwfc	fsr2h,f,c
 29952  0027EE  5183               	movf	?___lwdiv& (0+255),w,b
 29953  0027F0  5CDE               	subwf	postinc2,w,c
 29954  0027F2  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29955  0027F4  58DE               	subwfb	postinc2,w,c
 29956  0027F6  A0D8               	btfss	status,0,c
 29957  0027F8  D01E               	goto	l2062
 29958                           
 29959                           ; BSR set to: 0
 29960                           ;led.c: 156: {
 29961                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 29962  0027FA  EE20 F002          	lfsr	2,2
 29963  0027FE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29964  002800  26D9               	addwf	fsr2l,f,c
 29965  002802  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29966  002804  22DA               	addwfc	fsr2h,f,c
 29967  002806  0E00               	movlw	0
 29968  002808  6EDE               	movwf	postinc2,c
 29969  00280A  0E00               	movlw	0
 29970  00280C  6EDD               	movwf	postdec2,c
 29971                           
 29972                           ;led.c: 160: LedBlink->LedOutState = OffState;
 29973  00280E  EE20 F001          	lfsr	2,1
 29974  002812  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29975  002814  26D9               	addwf	fsr2l,f,c
 29976  002816  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29977  002818  22DA               	addwfc	fsr2h,f,c
 29978  00281A  0E00               	movlw	0
 29979  00281C                     L48:
 29980  00281C  6EDF               	movwf	indf2,c
 29981                           
 29982                           ; BSR set to: 0
 29983                           ;led.c: 167: }
 29984                           
 29985                           ; BSR set to: 0
 29986                           ;led.c: 166: break;
 29987                           
 29988                           ;led.c: 165: default:
 29989                           
 29990                           ; BSR set to: 0
 29991                           ;led.c: 161: }
 29992                           ;led.c: 162: }
 29993                           ;led.c: 163: break;
 29994                           
 29995                           ; BSR set to: 0
 29996                           
 29997                           ; BSR set to: 0
 29998  00281E  D00B               	goto	l2062
 29999  002820                     l2060:
 30000                           
 30001                           ; BSR set to: 0
 30002  002820  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 30003  002824  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 30004  002828  50DF               	movf	indf2,w,c
 30005                           
 30006                           ; Switch size 1, requested type "space"
 30007                           ; Number of cases is 2, Range of values is 0 to 1
 30008                           ; switch strategies available:
 30009                           ; Name         Instructions Cycles
 30010                           ; simple_byte            7     4 (average)
 30011                           ;	Chosen strategy is simple_byte
 30012  00282A  0A00               	xorlw	0	; case 0
 30013  00282C  B4D8               	btfsc	status,2,c
 30014  00282E  D769               	goto	l2061
 30015  002830  0A01               	xorlw	1	; case 1
 30016  002832  B4D8               	btfsc	status,2,c
 30017  002834  D77A               	goto	l2063
 30018  002836                     l2062:
 30019                           
 30020                           ;led.c: 170: return (LedBlink->LedOutState);
 30021  002836  0100               	movlb	0	; () banked
 30022  002838  EE20 F001          	lfsr	2,1
 30023  00283C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30024  00283E  26D9               	addwf	fsr2l,f,c
 30025  002840  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30026  002842  22DA               	addwfc	fsr2h,f,c
 30027  002844  50DF               	movf	indf2,w,c
 30028  002846  0012               	return	
 30029  002848                     __end_of_LedBlinkStateMachine:
 30030                           	opt stack 0
 30031                           tosu	equ	0xFFF
 30032                           tosh	equ	0xFFE
 30033                           tosl	equ	0xFFD
 30034                           pclath	equ	0xFFA
 30035                           tblptru	equ	0xFF8
 30036                           tblptrh	equ	0xFF7
 30037                           tblptrl	equ	0xFF6
 30038                           tablat	equ	0xFF5
 30039                           prodh	equ	0xFF4
 30040                           prodl	equ	0xFF3
 30041                           intcon	equ	0xFF2
 30042                           intcon2	equ	0xFF1
 30043                           intcon3	equ	0xFF0
 30044                           indf0	equ	0xFEF
 30045                           postinc0	equ	0xFEE
 30046                           plusw0	equ	0xFEB
 30047                           fsr0h	equ	0xFEA
 30048                           fsr0l	equ	0xFE9
 30049                           wreg	equ	0xFE8
 30050                           indf1	equ	0xFE7
 30051                           postinc1	equ	0xFE6
 30052                           postdec1	equ	0xFE5
 30053                           plusw1	equ	0xFE3
 30054                           fsr1h	equ	0xFE2
 30055                           fsr1l	equ	0xFE1
 30056                           indf2	equ	0xFDF
 30057                           postinc2	equ	0xFDE
 30058                           postdec2	equ	0xFDD
 30059                           plusw2	equ	0xFDB
 30060                           fsr2h	equ	0xFDA
 30061                           fsr2l	equ	0xFD9
 30062                           status	equ	0xFD8
 30063                           
 30064 ;; *************** function ___lwdiv *****************
 30065 ;; Defined at:
 30066 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 30067 ;; Parameters:    Size  Location     Type
 30068 ;;  dividend        2   35[BANK0 ] unsigned int 
 30069 ;;  divisor         2   37[BANK0 ] unsigned int 
 30070 ;; Auto vars:     Size  Location     Type
 30071 ;;  quotient        2   40[BANK0 ] unsigned int 
 30072 ;;  counter         1   39[BANK0 ] unsigned char 
 30073 ;; Return value:  Size  Location     Type
 30074 ;;                  2   35[BANK0 ] unsigned int 
 30075 ;; Registers used:
 30076 ;;		wreg, status,2, status,0
 30077 ;; Tracked objects:
 30078 ;;		On entry : 0/0
 30079 ;;		On exit  : 0/0
 30080 ;;		Unchanged: 0/0
 30081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30082 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30083 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30085 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30086 ;;Total ram usage:        7 bytes
 30087 ;; Hardware stack levels used:    1
 30088 ;; Hardware stack levels required when called:   11
 30089 ;; This function calls:
 30090 ;;		Nothing
 30091 ;; This function is called by:
 30092 ;;		_LedBlinkStateMachine
 30093 ;;		_LedPulseStateMachine
 30094 ;;		_secondsAppTimer
 30095 ;;		_utoa
 30096 ;; This function uses a non-reentrant model
 30097 ;;
 30098                           
 30099                           	psect	text137
 30100  005476                     __ptext137:
 30101                           	opt stack 0
 30102  005476                     ___lwdiv:
 30103                           	opt stack 14
 30104                           
 30105                           ; BSR set to: 0
 30106                           ;incstack = 0
 30107  005476  0E00               	movlw	0
 30108  005478  0100               	movlb	0	; () banked
 30109  00547A  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 30110  00547C  0E00               	movlw	0
 30111  00547E  6F88               	movwf	___lwdiv@quotient& (0+255),b
 30112                           
 30113                           ; BSR set to: 0
 30114  005480  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30115  005482  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 30116  005484  B4D8               	btfsc	status,2,c
 30117  005486  D01C               	goto	l3055
 30118                           
 30119                           ; BSR set to: 0
 30120  005488  0E01               	movlw	1
 30121  00548A  6F87               	movwf	___lwdiv@counter& (0+255),b
 30122  00548C  D004               	goto	l3050
 30123  00548E                     
 30124                           ; BSR set to: 0
 30125                           
 30126                           ; BSR set to: 0
 30127  00548E  90D8               	bcf	status,0,c
 30128  005490  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 30129  005492  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 30130  005494  2B87               	incf	___lwdiv@counter& (0+255),f,b
 30131  005496                     l3050:
 30132                           
 30133                           ; BSR set to: 0
 30134                           
 30135                           ; BSR set to: 0
 30136  005496  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 30137  005498  D7FA               	goto	l3051
 30138  00549A                     u10810:
 30139                           
 30140                           ; BSR set to: 0
 30141                           
 30142                           ; BSR set to: 0
 30143                           
 30144                           ; BSR set to: 0
 30145  00549A  90D8               	bcf	status,0,c
 30146  00549C  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 30147  00549E  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 30148                           
 30149                           ; BSR set to: 0
 30150  0054A0  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30151  0054A2  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 30152  0054A4  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30153  0054A6  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 30154  0054A8  A0D8               	btfss	status,0,c
 30155  0054AA  D005               	goto	l3054
 30156                           
 30157                           ; BSR set to: 0
 30158  0054AC  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30159  0054AE  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 30160  0054B0  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30161  0054B2  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 30162                           
 30163                           ; BSR set to: 0
 30164  0054B4  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 30165  0054B6                     l3054:
 30166                           
 30167                           ; BSR set to: 0
 30168                           
 30169                           ; BSR set to: 0
 30170  0054B6  90D8               	bcf	status,0,c
 30171  0054B8  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 30172  0054BA  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 30173                           
 30174                           ; BSR set to: 0
 30175  0054BC  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 30176  0054BE  D7ED               	goto	u10810
 30177  0054C0                     l3055:
 30178                           
 30179                           ; BSR set to: 0
 30180                           
 30181                           ; BSR set to: 0
 30182  0054C0  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 30183  0054C4  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30184                           
 30185                           ; BSR set to: 0
 30186  0054C8  0012               	return		;funcret
 30187  0054CA                     __end_of___lwdiv:
 30188                           	opt stack 0
 30189                           tosu	equ	0xFFF
 30190                           tosh	equ	0xFFE
 30191                           tosl	equ	0xFFD
 30192                           pclath	equ	0xFFA
 30193                           tblptru	equ	0xFF8
 30194                           tblptrh	equ	0xFF7
 30195                           tblptrl	equ	0xFF6
 30196                           tablat	equ	0xFF5
 30197                           prodh	equ	0xFF4
 30198                           prodl	equ	0xFF3
 30199                           intcon	equ	0xFF2
 30200                           intcon2	equ	0xFF1
 30201                           intcon3	equ	0xFF0
 30202                           indf0	equ	0xFEF
 30203                           postinc0	equ	0xFEE
 30204                           plusw0	equ	0xFEB
 30205                           fsr0h	equ	0xFEA
 30206                           fsr0l	equ	0xFE9
 30207                           wreg	equ	0xFE8
 30208                           indf1	equ	0xFE7
 30209                           postinc1	equ	0xFE6
 30210                           postdec1	equ	0xFE5
 30211                           plusw1	equ	0xFE3
 30212                           fsr1h	equ	0xFE2
 30213                           fsr1l	equ	0xFE1
 30214                           indf2	equ	0xFDF
 30215                           postinc2	equ	0xFDE
 30216                           postdec2	equ	0xFDD
 30217                           plusw2	equ	0xFDB
 30218                           fsr2h	equ	0xFDA
 30219                           fsr2l	equ	0xFD9
 30220                           status	equ	0xFD8
 30221                           
 30222 ;; *************** function _OsAlrm_SetOsAlarm *****************
 30223 ;; Defined at:
 30224 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 30225 ;; Parameters:    Size  Location     Type
 30226 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 30227 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 30228 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 30229 ;;		 -> I2cDummyTx(1), 
 30230 ;; Auto vars:     Size  Location     Type
 30231 ;;		None
 30232 ;; Return value:  Size  Location     Type
 30233 ;;                  1    wreg      void 
 30234 ;; Registers used:
 30235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30236 ;; Tracked objects:
 30237 ;;		On entry : 0/0
 30238 ;;		On exit  : 0/0
 30239 ;;		Unchanged: 0/0
 30240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30241 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30244 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30245 ;;Total ram usage:        8 bytes
 30246 ;; Hardware stack levels used:    1
 30247 ;; Hardware stack levels required when called:   12
 30248 ;; This function calls:
 30249 ;;		___wmul
 30250 ;; This function is called by:
 30251 ;;		_I2cSlv_MainTask
 30252 ;; This function uses a non-reentrant model
 30253 ;;
 30254                           
 30255                           	psect	text138
 30256  003D78                     __ptext138:
 30257                           	opt stack 0
 30258  003D78                     _OsAlrm_SetOsAlarm:
 30259                           	opt stack 15
 30260                           
 30261                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 30262                           
 30263                           ; BSR set to: 0
 30264                           ;incstack = 0
 30265  003D78  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30266  003D7C  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30267  003D80  0E00               	movlw	0
 30268  003D82  0100               	movlb	0	; () banked
 30269  003D84  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30270  003D86  0E0B               	movlw	11
 30271  003D88  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30272  003D8A  EC14  F02F         	call	___wmul	;wreg free
 30273  003D8E  0E00               	movlw	low _OsAlarms
 30274  003D90  0100               	movlb	0	; () banked
 30275  003D92  257D               	addwf	?___wmul& (0+255),w,b
 30276  003D94  6ED9               	movwf	fsr2l,c
 30277  003D96  0E06               	movlw	high _OsAlarms
 30278  003D98  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30279  003D9A  6EDA               	movwf	fsr2h,c
 30280  003D9C  0E01               	movlw	1
 30281  003D9E  6EDF               	movwf	indf2,c
 30282                           
 30283                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 30284  003DA0  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30285  003DA4  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30286  003DA8  0E00               	movlw	0
 30287  003DAA  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30288  003DAC  0E0B               	movlw	11
 30289  003DAE  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30290  003DB0  EC14  F02F         	call	___wmul	;wreg free
 30291  003DB4  0E01               	movlw	1
 30292  003DB6  0100               	movlb	0	; () banked
 30293  003DB8  277D               	addwf	?___wmul& (0+255),f,b
 30294  003DBA  0E00               	movlw	0
 30295  003DBC  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30296  003DBE  0E00               	movlw	low _OsAlarms
 30297  003DC0  257D               	addwf	?___wmul& (0+255),w,b
 30298  003DC2  6ED9               	movwf	fsr2l,c
 30299  003DC4  0E06               	movlw	high _OsAlarms
 30300  003DC6  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30301  003DC8  6EDA               	movwf	fsr2h,c
 30302  003DCA  6ADE               	clrf	postinc2,c
 30303  003DCC  6ADE               	clrf	postinc2,c
 30304  003DCE  6ADE               	clrf	postinc2,c
 30305  003DD0  6ADD               	clrf	postdec2,c
 30306                           
 30307                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 30308  003DD2  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30309  003DD6  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30310  003DDA  0E00               	movlw	0
 30311  003DDC  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30312  003DDE  0E0B               	movlw	11
 30313  003DE0  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30314  003DE2  EC14  F02F         	call	___wmul	;wreg free
 30315  003DE6  0E05               	movlw	5
 30316  003DE8  0100               	movlb	0	; () banked
 30317  003DEA  277D               	addwf	?___wmul& (0+255),f,b
 30318  003DEC  0E00               	movlw	0
 30319  003DEE  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30320  003DF0  0E00               	movlw	low _OsAlarms
 30321  003DF2  257D               	addwf	?___wmul& (0+255),w,b
 30322  003DF4  6ED9               	movwf	fsr2l,c
 30323  003DF6  0E06               	movlw	high _OsAlarms
 30324  003DF8  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30325  003DFA  6EDA               	movwf	fsr2h,c
 30326  003DFC  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 30327  003E00  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 30328  003E04  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 30329  003E08  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 30330                           
 30331                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 30332  003E0C  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30333  003E10  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30334  003E14  0E00               	movlw	0
 30335  003E16  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30336  003E18  0E0B               	movlw	11
 30337  003E1A  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30338  003E1C  EC14  F02F         	call	___wmul	;wreg free
 30339  003E20  0E09               	movlw	9
 30340  003E22  0100               	movlb	0	; () banked
 30341  003E24  277D               	addwf	?___wmul& (0+255),f,b
 30342  003E26  0E00               	movlw	0
 30343  003E28  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30344  003E2A  0E00               	movlw	low _OsAlarms
 30345  003E2C  257D               	addwf	?___wmul& (0+255),w,b
 30346  003E2E  6ED9               	movwf	fsr2l,c
 30347  003E30  0E06               	movlw	high _OsAlarms
 30348  003E32  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30349  003E34  6EDA               	movwf	fsr2h,c
 30350  003E36  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 30351  003E3A  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 30352                           
 30353                           ; BSR set to: 0
 30354  003E3E  0012               	return		;funcret
 30355  003E40                     __end_of_OsAlrm_SetOsAlarm:
 30356                           	opt stack 0
 30357                           tosu	equ	0xFFF
 30358                           tosh	equ	0xFFE
 30359                           tosl	equ	0xFFD
 30360                           pclath	equ	0xFFA
 30361                           tblptru	equ	0xFF8
 30362                           tblptrh	equ	0xFF7
 30363                           tblptrl	equ	0xFF6
 30364                           tablat	equ	0xFF5
 30365                           prodh	equ	0xFF4
 30366                           prodl	equ	0xFF3
 30367                           intcon	equ	0xFF2
 30368                           intcon2	equ	0xFF1
 30369                           intcon3	equ	0xFF0
 30370                           indf0	equ	0xFEF
 30371                           postinc0	equ	0xFEE
 30372                           plusw0	equ	0xFEB
 30373                           fsr0h	equ	0xFEA
 30374                           fsr0l	equ	0xFE9
 30375                           wreg	equ	0xFE8
 30376                           indf1	equ	0xFE7
 30377                           postinc1	equ	0xFE6
 30378                           postdec1	equ	0xFE5
 30379                           plusw1	equ	0xFE3
 30380                           fsr1h	equ	0xFE2
 30381                           fsr1l	equ	0xFE1
 30382                           indf2	equ	0xFDF
 30383                           postinc2	equ	0xFDE
 30384                           postdec2	equ	0xFDD
 30385                           plusw2	equ	0xFDB
 30386                           fsr2h	equ	0xFDA
 30387                           fsr2l	equ	0xFD9
 30388                           status	equ	0xFD8
 30389                           
 30390 ;; *************** function ___wmul *****************
 30391 ;; Defined at:
 30392 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 30393 ;; Parameters:    Size  Location     Type
 30394 ;;  multiplier      2   29[BANK0 ] unsigned int 
 30395 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 30396 ;; Auto vars:     Size  Location     Type
 30397 ;;  product         2   33[BANK0 ] unsigned int 
 30398 ;; Return value:  Size  Location     Type
 30399 ;;                  2   29[BANK0 ] unsigned int 
 30400 ;; Registers used:
 30401 ;;		wreg, status,2, status,0, prodl, prodh
 30402 ;; Tracked objects:
 30403 ;;		On entry : 0/0
 30404 ;;		On exit  : 0/0
 30405 ;;		Unchanged: 0/0
 30406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30407 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30408 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30410 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30411 ;;Total ram usage:        6 bytes
 30412 ;; Hardware stack levels used:    1
 30413 ;; Hardware stack levels required when called:   11
 30414 ;; This function calls:
 30415 ;;		Nothing
 30416 ;; This function is called by:
 30417 ;;		_OsAlrm_SetOsAlarm
 30418 ;;		_secondsAppTimer
 30419 ;;		_atoi
 30420 ;; This function uses a non-reentrant model
 30421 ;;
 30422                           
 30423                           	psect	text139
 30424  005E28                     __ptext139:
 30425                           	opt stack 0
 30426  005E28                     ___wmul:
 30427                           	opt stack 13
 30428                           
 30429                           ; BSR set to: 0
 30430                           ;incstack = 0
 30431  005E28  0100               	movlb	0	; () banked
 30432  005E2A  517D               	movf	___wmul@multiplier& (0+255),w,b
 30433  005E2C  037F               	mulwf	___wmul@multiplicand& (0+255),b
 30434  005E2E  CFF3 F081          	movff	prodl,___wmul@product
 30435  005E32  CFF4 F082          	movff	prodh,___wmul@product+1
 30436  005E36  517D               	movf	___wmul@multiplier& (0+255),w,b
 30437  005E38  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 30438  005E3A  50F3               	movf	prodl,w,c
 30439  005E3C  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 30440  005E3E  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 30441  005E40  037F               	mulwf	___wmul@multiplicand& (0+255),b
 30442  005E42  50F3               	movf	prodl,w,c
 30443  005E44  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 30444                           
 30445                           ; BSR set to: 0
 30446  005E46  C081  F07D         	movff	___wmul@product,?___wmul
 30447  005E4A  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 30448  005E4E  0012               	return	
 30449  005E50                     __end_of___wmul:
 30450                           	opt stack 0
 30451                           tosu	equ	0xFFF
 30452                           tosh	equ	0xFFE
 30453                           tosl	equ	0xFFD
 30454                           pclath	equ	0xFFA
 30455                           tblptru	equ	0xFF8
 30456                           tblptrh	equ	0xFF7
 30457                           tblptrl	equ	0xFF6
 30458                           tablat	equ	0xFF5
 30459                           prodh	equ	0xFF4
 30460                           prodl	equ	0xFF3
 30461                           intcon	equ	0xFF2
 30462                           intcon2	equ	0xFF1
 30463                           intcon3	equ	0xFF0
 30464                           indf0	equ	0xFEF
 30465                           postinc0	equ	0xFEE
 30466                           plusw0	equ	0xFEB
 30467                           fsr0h	equ	0xFEA
 30468                           fsr0l	equ	0xFE9
 30469                           wreg	equ	0xFE8
 30470                           indf1	equ	0xFE7
 30471                           postinc1	equ	0xFE6
 30472                           postdec1	equ	0xFE5
 30473                           plusw1	equ	0xFE3
 30474                           fsr1h	equ	0xFE2
 30475                           fsr1l	equ	0xFE1
 30476                           indf2	equ	0xFDF
 30477                           postinc2	equ	0xFDE
 30478                           postdec2	equ	0xFDD
 30479                           plusw2	equ	0xFDB
 30480                           fsr2h	equ	0xFDA
 30481                           fsr2l	equ	0xFD9
 30482                           status	equ	0xFD8
 30483                           
 30484 ;; *************** function _I2c_InitI2cModule *****************
 30485 ;; Defined at:
 30486 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30487 ;; Parameters:    Size  Location     Type
 30488 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 30489 ;;		 -> I2cConfig(10), 
 30490 ;; Auto vars:     Size  Location     Type
 30491 ;;		None
 30492 ;; Return value:  Size  Location     Type
 30493 ;;                  1    wreg      void 
 30494 ;; Registers used:
 30495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30496 ;; Tracked objects:
 30497 ;;		On entry : 0/0
 30498 ;;		On exit  : 0/0
 30499 ;;		Unchanged: 0/0
 30500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30501 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30503 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30504 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30505 ;;Total ram usage:        4 bytes
 30506 ;; Hardware stack levels used:    1
 30507 ;; Hardware stack levels required when called:   13
 30508 ;; This function calls:
 30509 ;;		_SetBaudRate
 30510 ;; This function is called by:
 30511 ;;		_I2cSlv_MainTask
 30512 ;; This function uses a non-reentrant model
 30513 ;;
 30514                           
 30515                           	psect	text140
 30516  004E8A                     __ptext140:
 30517                           	opt stack 0
 30518  004E8A                     _I2c_InitI2cModule:
 30519                           	opt stack 14
 30520                           
 30521                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 30522                           
 30523                           ; BSR set to: 0
 30524                           ;incstack = 0
 30525  004E8A  8295               	bsf	3989,1,c	;volatile
 30526                           
 30527                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 30528  004E8C  8095               	bsf	3989,0,c	;volatile
 30529                           
 30530                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 30531  004E8E  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 30532  004E92  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 30533  004E96  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 30534  004E9A  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 30535  004E9E  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 30536  004EA2  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 30537  004EA6  0100               	movlb	0	; () banked
 30538  004EA8  EE20 F004          	lfsr	2,4
 30539  004EAC  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30540  004EAE  26D9               	addwf	fsr2l,f,c
 30541  004EB0  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30542  004EB2  22DA               	addwfc	fsr2h,f,c
 30543  004EB4  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 30544  004EB8  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 30545  004EBC  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 30546  004EC0  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 30547  004EC4  EC2D  F02B         	call	_SetBaudRate	;wreg free
 30548                           
 30549                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 30550  004EC8  0100               	movlb	0	; () banked
 30551  004ECA  EE20 F008          	lfsr	2,8
 30552  004ECE  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30553  004ED0  26D9               	addwf	fsr2l,f,c
 30554  004ED2  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30555  004ED4  22DA               	addwfc	fsr2h,f,c
 30556  004ED6  50DF               	movf	indf2,w,c
 30557  004ED8  1272               	iorwf	3954,f,c	;volatile
 30558                           
 30559                           ; BSR set to: 0
 30560                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 30561  004EDA  EE20 F009          	lfsr	2,9
 30562  004EDE  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30563  004EE0  26D9               	addwf	fsr2l,f,c
 30564  004EE2  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30565  004EE4  22DA               	addwfc	fsr2h,f,c
 30566  004EE6  50DF               	movf	indf2,w,c
 30567  004EE8  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 30568  004EEA  0E05               	movlw	5
 30569  004EEC  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 30570  004EEE                     u13105:
 30571  004EEE  90D8               	bcf	status,0,c
 30572  004EF0  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 30573  004EF2  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 30574  004EF4  D7FC               	goto	u13105
 30575  004EF6  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 30576  004EF8  1272               	iorwf	3954,f,c	;volatile
 30577                           
 30578                           ; BSR set to: 0
 30579  004EFA  0012               	return		;funcret
 30580  004EFC                     __end_of_I2c_InitI2cModule:
 30581                           	opt stack 0
 30582                           tosu	equ	0xFFF
 30583                           tosh	equ	0xFFE
 30584                           tosl	equ	0xFFD
 30585                           pclath	equ	0xFFA
 30586                           tblptru	equ	0xFF8
 30587                           tblptrh	equ	0xFF7
 30588                           tblptrl	equ	0xFF6
 30589                           tablat	equ	0xFF5
 30590                           prodh	equ	0xFF4
 30591                           prodl	equ	0xFF3
 30592                           intcon	equ	0xFF2
 30593                           intcon2	equ	0xFF1
 30594                           intcon3	equ	0xFF0
 30595                           indf0	equ	0xFEF
 30596                           postinc0	equ	0xFEE
 30597                           plusw0	equ	0xFEB
 30598                           fsr0h	equ	0xFEA
 30599                           fsr0l	equ	0xFE9
 30600                           wreg	equ	0xFE8
 30601                           indf1	equ	0xFE7
 30602                           postinc1	equ	0xFE6
 30603                           postdec1	equ	0xFE5
 30604                           plusw1	equ	0xFE3
 30605                           fsr1h	equ	0xFE2
 30606                           fsr1l	equ	0xFE1
 30607                           indf2	equ	0xFDF
 30608                           postinc2	equ	0xFDE
 30609                           postdec2	equ	0xFDD
 30610                           plusw2	equ	0xFDB
 30611                           fsr2h	equ	0xFDA
 30612                           fsr2l	equ	0xFD9
 30613                           status	equ	0xFD8
 30614                           
 30615 ;; *************** function _SetBaudRate *****************
 30616 ;; Defined at:
 30617 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30618 ;; Parameters:    Size  Location     Type
 30619 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 30620 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 30621 ;; Auto vars:     Size  Location     Type
 30622 ;;		None
 30623 ;; Return value:  Size  Location     Type
 30624 ;;                  1    wreg      void 
 30625 ;; Registers used:
 30626 ;;		wreg, status,2, status,0, cstack
 30627 ;; Tracked objects:
 30628 ;;		On entry : 0/0
 30629 ;;		On exit  : 0/0
 30630 ;;		Unchanged: 0/0
 30631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30632 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30634 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30635 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30636 ;;Total ram usage:       12 bytes
 30637 ;; Hardware stack levels used:    1
 30638 ;; Hardware stack levels required when called:   12
 30639 ;; This function calls:
 30640 ;;		___lldiv
 30641 ;; This function is called by:
 30642 ;;		_I2c_InitI2cModule
 30643 ;; This function uses a non-reentrant model
 30644 ;;
 30645                           
 30646                           	psect	text141
 30647  00565A                     __ptext141:
 30648                           	opt stack 0
 30649  00565A                     _SetBaudRate:
 30650                           	opt stack 14
 30651                           
 30652                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 30653                           
 30654                           ; BSR set to: 0
 30655                           ;incstack = 0
 30656  00565A  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 30657  00565E  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 30658  005662  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 30659  005666  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 30660  00566A  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 30661  00566E  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 30662  005672  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 30663  005676  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 30664  00567A  0E02               	movlw	2
 30665  00567C                     u12085:
 30666  00567C  90D8               	bcf	status,0,c
 30667  00567E  0100               	movlb	0	; () banked
 30668  005680  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 30669  005682  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 30670  005684  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 30671  005686  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 30672  005688  2EE8               	decfsz	wreg,f,c
 30673  00568A  D7F8               	goto	u12085
 30674  00568C  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 30675  005690  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 30676  005694  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 30677  005698  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 30678  00569C  EC13  F026         	call	___lldiv	;wreg free
 30679  0056A0  0100               	movlb	0	; () banked
 30680  0056A2  0589               	decf	?___lldiv& (0+255),w,b
 30681  0056A4  6E74               	movwf	3956,c	;volatile
 30682                           
 30683                           ; BSR set to: 0
 30684  0056A6  0012               	return		;funcret
 30685  0056A8                     __end_of_SetBaudRate:
 30686                           	opt stack 0
 30687                           tosu	equ	0xFFF
 30688                           tosh	equ	0xFFE
 30689                           tosl	equ	0xFFD
 30690                           pclath	equ	0xFFA
 30691                           tblptru	equ	0xFF8
 30692                           tblptrh	equ	0xFF7
 30693                           tblptrl	equ	0xFF6
 30694                           tablat	equ	0xFF5
 30695                           prodh	equ	0xFF4
 30696                           prodl	equ	0xFF3
 30697                           intcon	equ	0xFF2
 30698                           intcon2	equ	0xFF1
 30699                           intcon3	equ	0xFF0
 30700                           indf0	equ	0xFEF
 30701                           postinc0	equ	0xFEE
 30702                           plusw0	equ	0xFEB
 30703                           fsr0h	equ	0xFEA
 30704                           fsr0l	equ	0xFE9
 30705                           wreg	equ	0xFE8
 30706                           indf1	equ	0xFE7
 30707                           postinc1	equ	0xFE6
 30708                           postdec1	equ	0xFE5
 30709                           plusw1	equ	0xFE3
 30710                           fsr1h	equ	0xFE2
 30711                           fsr1l	equ	0xFE1
 30712                           indf2	equ	0xFDF
 30713                           postinc2	equ	0xFDE
 30714                           postdec2	equ	0xFDD
 30715                           plusw2	equ	0xFDB
 30716                           fsr2h	equ	0xFDA
 30717                           fsr2l	equ	0xFD9
 30718                           status	equ	0xFD8
 30719                           
 30720 ;; *************** function ___lldiv *****************
 30721 ;; Defined at:
 30722 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 30723 ;; Parameters:    Size  Location     Type
 30724 ;;  dividend        4   41[BANK0 ] unsigned long 
 30725 ;;  divisor         4   45[BANK0 ] unsigned long 
 30726 ;; Auto vars:     Size  Location     Type
 30727 ;;  quotient        4   49[BANK0 ] unsigned long 
 30728 ;;  counter         1   53[BANK0 ] unsigned char 
 30729 ;; Return value:  Size  Location     Type
 30730 ;;                  4   41[BANK0 ] unsigned long 
 30731 ;; Registers used:
 30732 ;;		wreg, status,2, status,0
 30733 ;; Tracked objects:
 30734 ;;		On entry : 0/0
 30735 ;;		On exit  : 0/0
 30736 ;;		Unchanged: 0/0
 30737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30738 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30739 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30741 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30742 ;;Total ram usage:       13 bytes
 30743 ;; Hardware stack levels used:    1
 30744 ;; Hardware stack levels required when called:   11
 30745 ;; This function calls:
 30746 ;;		Nothing
 30747 ;; This function is called by:
 30748 ;;		_SetBaudRate
 30749 ;;		_Tmr_TmrBPrSet
 30750 ;;		_SetUartBaudRate
 30751 ;; This function uses a non-reentrant model
 30752 ;;
 30753                           
 30754                           	psect	text142
 30755  004C26                     __ptext142:
 30756                           	opt stack 0
 30757  004C26                     ___lldiv:
 30758                           	opt stack 15
 30759                           
 30760                           ; BSR set to: 0
 30761                           ;incstack = 0
 30762  004C26  0E00               	movlw	0
 30763  004C28  0100               	movlb	0	; () banked
 30764  004C2A  6F91               	movwf	___lldiv@quotient& (0+255),b
 30765  004C2C  0E00               	movlw	0
 30766  004C2E  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 30767  004C30  0E00               	movlw	0
 30768  004C32  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 30769  004C34  0E00               	movlw	0
 30770  004C36  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 30771                           
 30772                           ; BSR set to: 0
 30773  004C38  518D               	movf	___lldiv@divisor& (0+255),w,b
 30774  004C3A  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30775  004C3C  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30776  004C3E  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30777  004C40  B4D8               	btfsc	status,2,c
 30778  004C42  D02A               	goto	l3002
 30779                           
 30780                           ; BSR set to: 0
 30781  004C44  0E01               	movlw	1
 30782  004C46  6F95               	movwf	___lldiv@counter& (0+255),b
 30783  004C48  D006               	goto	l2997
 30784  004C4A                     
 30785                           ; BSR set to: 0
 30786                           
 30787                           ; BSR set to: 0
 30788  004C4A  90D8               	bcf	status,0,c
 30789  004C4C  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 30790  004C4E  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30791  004C50  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30792  004C52  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30793  004C54  2B95               	incf	___lldiv@counter& (0+255),f,b
 30794  004C56                     l2997:
 30795                           
 30796                           ; BSR set to: 0
 30797                           
 30798                           ; BSR set to: 0
 30799  004C56  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 30800  004C58  D7F8               	goto	l2998
 30801  004C5A                     u11180:
 30802                           
 30803                           ; BSR set to: 0
 30804                           
 30805                           ; BSR set to: 0
 30806                           
 30807                           ; BSR set to: 0
 30808  004C5A  90D8               	bcf	status,0,c
 30809  004C5C  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 30810  004C5E  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30811  004C60  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 30812  004C62  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 30813                           
 30814                           ; BSR set to: 0
 30815  004C64  518D               	movf	___lldiv@divisor& (0+255),w,b
 30816  004C66  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 30817  004C68  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30818  004C6A  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 30819  004C6C  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30820  004C6E  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 30821  004C70  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30822  004C72  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 30823  004C74  A0D8               	btfss	status,0,c
 30824  004C76  D009               	goto	l3001
 30825                           
 30826                           ; BSR set to: 0
 30827  004C78  518D               	movf	___lldiv@divisor& (0+255),w,b
 30828  004C7A  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 30829  004C7C  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30830  004C7E  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 30831  004C80  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30832  004C82  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 30833  004C84  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30834  004C86  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 30835                           
 30836                           ; BSR set to: 0
 30837  004C88  8191               	bsf	___lldiv@quotient& (0+255),0,b
 30838  004C8A                     l3001:
 30839                           
 30840                           ; BSR set to: 0
 30841                           
 30842                           ; BSR set to: 0
 30843  004C8A  90D8               	bcf	status,0,c
 30844  004C8C  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 30845  004C8E  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 30846  004C90  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 30847  004C92  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 30848                           
 30849                           ; BSR set to: 0
 30850  004C94  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 30851  004C96  D7E1               	goto	u11180
 30852  004C98                     l3002:
 30853                           
 30854                           ; BSR set to: 0
 30855                           
 30856                           ; BSR set to: 0
 30857  004C98  C091  F089         	movff	___lldiv@quotient,?___lldiv
 30858  004C9C  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 30859  004CA0  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 30860  004CA4  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 30861                           
 30862                           ; BSR set to: 0
 30863  004CA8  0012               	return		;funcret
 30864  004CAA                     __end_of___lldiv:
 30865                           	opt stack 0
 30866                           tosu	equ	0xFFF
 30867                           tosh	equ	0xFFE
 30868                           tosl	equ	0xFFD
 30869                           pclath	equ	0xFFA
 30870                           tblptru	equ	0xFF8
 30871                           tblptrh	equ	0xFF7
 30872                           tblptrl	equ	0xFF6
 30873                           tablat	equ	0xFF5
 30874                           prodh	equ	0xFF4
 30875                           prodl	equ	0xFF3
 30876                           intcon	equ	0xFF2
 30877                           intcon2	equ	0xFF1
 30878                           intcon3	equ	0xFF0
 30879                           indf0	equ	0xFEF
 30880                           postinc0	equ	0xFEE
 30881                           plusw0	equ	0xFEB
 30882                           fsr0h	equ	0xFEA
 30883                           fsr0l	equ	0xFE9
 30884                           wreg	equ	0xFE8
 30885                           indf1	equ	0xFE7
 30886                           postinc1	equ	0xFE6
 30887                           postdec1	equ	0xFE5
 30888                           plusw1	equ	0xFE3
 30889                           fsr1h	equ	0xFE2
 30890                           fsr1l	equ	0xFE1
 30891                           indf2	equ	0xFDF
 30892                           postinc2	equ	0xFDE
 30893                           postdec2	equ	0xFDD
 30894                           plusw2	equ	0xFDB
 30895                           fsr2h	equ	0xFDA
 30896                           fsr2l	equ	0xFD9
 30897                           status	equ	0xFD8
 30898                           
 30899 ;; *************** function _I2cSetConfig *****************
 30900 ;; Defined at:
 30901 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 30902 ;; Parameters:    Size  Location     Type
 30903 ;;		None
 30904 ;; Auto vars:     Size  Location     Type
 30905 ;;		None
 30906 ;; Return value:  Size  Location     Type
 30907 ;;                  1    wreg      void 
 30908 ;; Registers used:
 30909 ;;		wreg, status,2
 30910 ;; Tracked objects:
 30911 ;;		On entry : 0/0
 30912 ;;		On exit  : 0/0
 30913 ;;		Unchanged: 0/0
 30914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30919 ;;Total ram usage:        0 bytes
 30920 ;; Hardware stack levels used:    1
 30921 ;; Hardware stack levels required when called:   11
 30922 ;; This function calls:
 30923 ;;		Nothing
 30924 ;; This function is called by:
 30925 ;;		_I2cSlv_MainTask
 30926 ;; This function uses a non-reentrant model
 30927 ;;
 30928                           
 30929                           	psect	text143
 30930  005DA8                     __ptext143:
 30931                           	opt stack 0
 30932  005DA8                     _I2cSetConfig:
 30933                           	opt stack 16
 30934                           
 30935                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 30936                           
 30937                           ; BSR set to: 0
 30938                           ;incstack = 0
 30939  005DA8  0E80               	movlw	128
 30940  005DAA  0103               	movlb	3	; () banked
 30941  005DAC  6F56               	movwf	_I2cConfig& (0+255),b
 30942  005DAE  0E1A               	movlw	26
 30943  005DB0  6F57               	movwf	(_I2cConfig+1)& (0+255),b
 30944  005DB2  0E06               	movlw	6
 30945  005DB4  6F58               	movwf	(_I2cConfig+2)& (0+255),b
 30946  005DB6  0E00               	movlw	0
 30947  005DB8  6F59               	movwf	(_I2cConfig+3)& (0+255),b
 30948                           
 30949                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 30950  005DBA  0E00               	movlw	0
 30951  005DBC  6F5A               	movwf	(_I2cConfig+4)& (0+255),b
 30952  005DBE  0E6C               	movlw	108
 30953  005DC0  6F5B               	movwf	(_I2cConfig+5)& (0+255),b
 30954  005DC2  0EDC               	movlw	220
 30955  005DC4  6F5C               	movwf	(_I2cConfig+6)& (0+255),b
 30956  005DC6  0E02               	movlw	2
 30957  005DC8  6F5D               	movwf	(_I2cConfig+7)& (0+255),b
 30958                           
 30959                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 30960  005DCA  0E08               	movlw	8
 30961  005DCC  6F5E               	movwf	(_I2cConfig+8)& (0+255),b
 30962                           
 30963                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 30964  005DCE  0E01               	movlw	1
 30965  005DD0  6F5F               	movwf	(_I2cConfig+9)& (0+255),b
 30966                           
 30967                           ; BSR set to: 3
 30968  005DD2  0012               	return		;funcret
 30969  005DD4                     __end_of_I2cSetConfig:
 30970                           	opt stack 0
 30971                           tosu	equ	0xFFF
 30972                           tosh	equ	0xFFE
 30973                           tosl	equ	0xFFD
 30974                           pclath	equ	0xFFA
 30975                           tblptru	equ	0xFF8
 30976                           tblptrh	equ	0xFF7
 30977                           tblptrl	equ	0xFF6
 30978                           tablat	equ	0xFF5
 30979                           prodh	equ	0xFF4
 30980                           prodl	equ	0xFF3
 30981                           intcon	equ	0xFF2
 30982                           intcon2	equ	0xFF1
 30983                           intcon3	equ	0xFF0
 30984                           indf0	equ	0xFEF
 30985                           postinc0	equ	0xFEE
 30986                           plusw0	equ	0xFEB
 30987                           fsr0h	equ	0xFEA
 30988                           fsr0l	equ	0xFE9
 30989                           wreg	equ	0xFE8
 30990                           indf1	equ	0xFE7
 30991                           postinc1	equ	0xFE6
 30992                           postdec1	equ	0xFE5
 30993                           plusw1	equ	0xFE3
 30994                           fsr1h	equ	0xFE2
 30995                           fsr1l	equ	0xFE1
 30996                           indf2	equ	0xFDF
 30997                           postinc2	equ	0xFDE
 30998                           postdec2	equ	0xFDD
 30999                           plusw2	equ	0xFDB
 31000                           fsr2h	equ	0xFDA
 31001                           fsr2l	equ	0xFD9
 31002                           status	equ	0xFD8
 31003                           
 31004 ;; *************** function _I2cSendMsgSm *****************
 31005 ;; Defined at:
 31006 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 31007 ;; Parameters:    Size  Location     Type
 31008 ;;		None
 31009 ;; Auto vars:     Size  Location     Type
 31010 ;;		None
 31011 ;; Return value:  Size  Location     Type
 31012 ;;                  1    wreg      void 
 31013 ;; Registers used:
 31014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31015 ;; Tracked objects:
 31016 ;;		On entry : 0/0
 31017 ;;		On exit  : 0/0
 31018 ;;		Unchanged: 0/0
 31019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31024 ;;Total ram usage:        0 bytes
 31025 ;; Hardware stack levels used:    1
 31026 ;; Hardware stack levels required when called:   13
 31027 ;; This function calls:
 31028 ;;		_I2c_ReadData
 31029 ;;		_I2c_WriteData
 31030 ;;		_ReceiveEvt
 31031 ;; This function is called by:
 31032 ;;		_I2cSlv_MainTask
 31033 ;; This function uses a non-reentrant model
 31034 ;;
 31035                           
 31036                           	psect	text144
 31037  003E40                     __ptext144:
 31038                           	opt stack 0
 31039  003E40                     _I2cSendMsgSm:
 31040                           	opt stack 14
 31041                           
 31042                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 31043                           ;i2c_slv.c: 122: switch(I2cComState)
 31044                           
 31045                           ; BSR set to: 3
 31046                           ;incstack = 0
 31047  003E40  D04F               	goto	l1379
 31048  003E42                     
 31049                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 31050  003E42  0ED9               	movlw	low _I2cWriteDataEvt
 31051  003E44  0100               	movlb	0	; () banked
 31052  003E46  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31053  003E48  0E00               	movlw	high _I2cWriteDataEvt
 31054  003E4A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31055  003E4C  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 31056  003E50  0900               	iorlw	0
 31057  003E52  B4D8               	btfsc	status,2,c
 31058  003E54  D007               	goto	l1381
 31059                           
 31060                           ;i2c_slv.c: 127: {
 31061                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 31062  003E56  0E01               	movlw	1
 31063  003E58  0101               	movlb	1	; () banked
 31064  003E5A  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31065                           
 31066                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 31067  003E5C  0E01               	movlw	1
 31068  003E5E  0100               	movlb	0	; () banked
 31069  003E60  6FD1               	movwf	_I2cComSts& (0+255),b
 31070                           
 31071                           ;i2c_slv.c: 132: }
 31072  003E62  0012               	return	
 31073  003E64                     l1381:
 31074                           
 31075                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 31076                           
 31077                           ; BSR set to: 0
 31078  003E64  0E39               	movlw	low _I2cReadDataEvt
 31079  003E66  0100               	movlb	0	; () banked
 31080  003E68  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31081  003E6A  0E00               	movlw	high _I2cReadDataEvt
 31082  003E6C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31083  003E6E  ECBD  F02E         	call	_ReceiveEvt	;wreg free
 31084  003E72  0900               	iorlw	0
 31085  003E74  B4D8               	btfsc	status,2,c
 31086  003E76  D007               	goto	l1383
 31087                           
 31088                           ;i2c_slv.c: 134: {
 31089                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 31090  003E78  0E02               	movlw	2
 31091  003E7A  0101               	movlb	1	; () banked
 31092  003E7C  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31093                           
 31094                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 31095  003E7E  0E02               	movlw	2
 31096  003E80  0100               	movlb	0	; () banked
 31097  003E82  6FD1               	movwf	_I2cComSts& (0+255),b
 31098                           
 31099                           ;i2c_slv.c: 139: }
 31100  003E84  0012               	return	
 31101  003E86                     l1383:
 31102                           
 31103                           ;i2c_slv.c: 140: else
 31104                           ;i2c_slv.c: 141: {
 31105                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 31106                           
 31107                           ; BSR set to: 0
 31108  003E86  0E00               	movlw	0
 31109  003E88  0100               	movlb	0	; () banked
 31110  003E8A  6FD1               	movwf	_I2cComSts& (0+255),b
 31111                           
 31112                           ; BSR set to: 0
 31113                           ;i2c_slv.c: 144: }
 31114                           ;i2c_slv.c: 145: break;
 31115                           
 31116                           ; BSR set to: 0
 31117  003E8C  0012               	return	
 31118  003E8E                     
 31119                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 31120                           
 31121                           ; BSR set to: 0
 31122  003E8E  0EA2               	movlw	low _I2cTxPacket
 31123  003E90  0100               	movlb	0	; () banked
 31124  003E92  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 31125  003E94  0E03               	movlw	high _I2cTxPacket
 31126  003E96  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 31127  003E98  EC16  F010         	call	_I2c_WriteData	;wreg free
 31128  003E9C  0900               	iorlw	0
 31129  003E9E  B4D8               	btfsc	status,2,c
 31130  003EA0  0012               	return	
 31131                           
 31132                           ;i2c_slv.c: 150: {
 31133                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 31134  003EA2  0E03               	movlw	3
 31135  003EA4  0101               	movlb	1	; () banked
 31136  003EA6  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31137                           
 31138                           ; BSR set to: 1
 31139                           ;i2c_slv.c: 153: }
 31140                           ;i2c_slv.c: 154: break;
 31141  003EA8  0012               	return	
 31142  003EAA                     
 31143                           ; BSR set to: 1
 31144                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 31145                           
 31146                           ; BSR set to: 1
 31147  003EAA  0E9C               	movlw	low _I2cRxPacket
 31148  003EAC  0100               	movlb	0	; () banked
 31149  003EAE  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 31150  003EB0  0E03               	movlw	high _I2cRxPacket
 31151  003EB2  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 31152  003EB4  EC7D  F011         	call	_I2c_ReadData	;wreg free
 31153  003EB8  0900               	iorlw	0
 31154  003EBA  B4D8               	btfsc	status,2,c
 31155  003EBC  0012               	return	
 31156                           
 31157                           ;i2c_slv.c: 159: {
 31158                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 31159  003EBE  0E04               	movlw	4
 31160  003EC0  0101               	movlb	1	; () banked
 31161  003EC2  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31162                           
 31163                           ; BSR set to: 1
 31164                           ;i2c_slv.c: 162: }
 31165                           ;i2c_slv.c: 164: break;
 31166  003EC4  0012               	return	
 31167  003EC6                     
 31168                           ; BSR set to: 1
 31169                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 31170                           
 31171                           ; BSR set to: 1
 31172  003EC6  0E00               	movlw	0
 31173  003EC8  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31174                           
 31175                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 31176  003ECA  0E00               	movlw	0
 31177  003ECC  0100               	movlb	0	; () banked
 31178  003ECE  6FD1               	movwf	_I2cComSts& (0+255),b
 31179                           
 31180                           ;i2c_slv.c: 171: break;
 31181  003ED0  0012               	return	
 31182  003ED2                     
 31183                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 31184                           
 31185                           ; BSR set to: 0
 31186  003ED2  0E00               	movlw	0
 31187  003ED4  0101               	movlb	1	; () banked
 31188  003ED6  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31189                           
 31190                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 31191  003ED8  0E00               	movlw	0
 31192  003EDA  0100               	movlb	0	; () banked
 31193  003EDC  6FD1               	movwf	_I2cComSts& (0+255),b
 31194                           
 31195                           ; BSR set to: 0
 31196                           ;i2c_slv.c: 182: }
 31197                           
 31198                           ; BSR set to: 0
 31199                           ;i2c_slv.c: 181: break;
 31200                           
 31201                           ;i2c_slv.c: 180: default:
 31202                           
 31203                           ;i2c_slv.c: 178: break;
 31204  003EDE  0012               	return	
 31205  003EE0                     l1379:
 31206                           
 31207                           ; BSR set to: 0
 31208  003EE0  0101               	movlb	1	; () banked
 31209  003EE2  51E6               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 31210                           
 31211                           ; Switch size 1, requested type "space"
 31212                           ; Number of cases is 5, Range of values is 0 to 4
 31213                           ; switch strategies available:
 31214                           ; Name         Instructions Cycles
 31215                           ; simple_byte           16     9 (average)
 31216                           ;	Chosen strategy is simple_byte
 31217  003EE4  0A00               	xorlw	0	; case 0
 31218  003EE6  B4D8               	btfsc	status,2,c
 31219  003EE8  D7AC               	goto	l1380
 31220  003EEA  0A01               	xorlw	1	; case 1
 31221  003EEC  B4D8               	btfsc	status,2,c
 31222  003EEE  D7CF               	goto	l1386
 31223  003EF0  0A03               	xorlw	3	; case 2
 31224  003EF2  B4D8               	btfsc	status,2,c
 31225  003EF4  D7DA               	goto	l1388
 31226  003EF6  0A01               	xorlw	1	; case 3
 31227  003EF8  B4D8               	btfsc	status,2,c
 31228  003EFA  D7E5               	goto	l1390
 31229  003EFC  0A07               	xorlw	7	; case 4
 31230  003EFE  A4D8               	btfss	status,2,c
 31231  003F00  0012               	return	
 31232  003F02  D7E7               	goto	l1391
 31233  003F04                     __end_of_I2cSendMsgSm:
 31234                           	opt stack 0
 31235                           tosu	equ	0xFFF
 31236                           tosh	equ	0xFFE
 31237                           tosl	equ	0xFFD
 31238                           pclath	equ	0xFFA
 31239                           tblptru	equ	0xFF8
 31240                           tblptrh	equ	0xFF7
 31241                           tblptrl	equ	0xFF6
 31242                           tablat	equ	0xFF5
 31243                           prodh	equ	0xFF4
 31244                           prodl	equ	0xFF3
 31245                           intcon	equ	0xFF2
 31246                           intcon2	equ	0xFF1
 31247                           intcon3	equ	0xFF0
 31248                           indf0	equ	0xFEF
 31249                           postinc0	equ	0xFEE
 31250                           plusw0	equ	0xFEB
 31251                           fsr0h	equ	0xFEA
 31252                           fsr0l	equ	0xFE9
 31253                           wreg	equ	0xFE8
 31254                           indf1	equ	0xFE7
 31255                           postinc1	equ	0xFE6
 31256                           postdec1	equ	0xFE5
 31257                           plusw1	equ	0xFE3
 31258                           fsr1h	equ	0xFE2
 31259                           fsr1l	equ	0xFE1
 31260                           indf2	equ	0xFDF
 31261                           postinc2	equ	0xFDE
 31262                           postdec2	equ	0xFDD
 31263                           plusw2	equ	0xFDB
 31264                           fsr2h	equ	0xFDA
 31265                           fsr2l	equ	0xFD9
 31266                           status	equ	0xFD8
 31267                           
 31268 ;; *************** function _ReceiveEvt *****************
 31269 ;; Defined at:
 31270 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 31271 ;; Parameters:    Size  Location     Type
 31272 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 31273 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 31274 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 31275 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 31276 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 31277 ;;		 -> ActivateRiDetection(1), 
 31278 ;; Auto vars:     Size  Location     Type
 31279 ;;  EventStatus     1   32[BANK0 ] enum E7727
 31280 ;; Return value:  Size  Location     Type
 31281 ;;                  1    wreg      enum E7699
 31282 ;; Registers used:
 31283 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31284 ;; Tracked objects:
 31285 ;;		On entry : 0/0
 31286 ;;		On exit  : 0/0
 31287 ;;		Unchanged: 0/0
 31288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31289 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31291 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31292 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31293 ;;Total ram usage:        4 bytes
 31294 ;; Hardware stack levels used:    1
 31295 ;; Hardware stack levels required when called:   11
 31296 ;; This function calls:
 31297 ;;		Nothing
 31298 ;; This function is called by:
 31299 ;;		_MdmCntSm
 31300 ;;		_CheckModem
 31301 ;;		_ModemEvtParser
 31302 ;;		_GetSmsSm
 31303 ;;		_SendSmsSm
 31304 ;;		_Mdm_GetSmsData
 31305 ;;		_Mdm_IsSmsReceived
 31306 ;;		_Mdm_IsRinging
 31307 ;;		_GetCallerNumber
 31308 ;;		_InitGprsNetwork
 31309 ;;		_HttpGetMethod
 31310 ;;		_I2cSendMsgSm
 31311 ;;		_I2cSlv_I2cReadMsgSts
 31312 ;;		_RiSm
 31313 ;;		_GsmGprsTerminal
 31314 ;; This function uses a non-reentrant model
 31315 ;;
 31316                           
 31317                           	psect	text145
 31318  005D7A                     __ptext145:
 31319                           	opt stack 0
 31320  005D7A                     _ReceiveEvt:
 31321                           	opt stack 13
 31322                           
 31323                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 31324                           
 31325                           ;incstack = 0
 31326  005D7A  0E00               	movlw	0
 31327  005D7C  0100               	movlb	0	; () banked
 31328  005D7E  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31329                           
 31330                           ; BSR set to: 0
 31331                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 31332  005D80  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31333  005D84  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31334  005D88  0E02               	movlw	2
 31335  005D8A  18DE               	xorwf	postinc2,w,c
 31336  005D8C  A4D8               	btfss	status,2,c
 31337  005D8E  D008               	goto	l832
 31338                           
 31339                           ; BSR set to: 0
 31340                           ;os_ser.c: 106: {
 31341                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 31342  005D90  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31343  005D94  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31344  005D98  0E01               	movlw	1
 31345  005D9A  6EDF               	movwf	indf2,c
 31346                           
 31347                           ; BSR set to: 0
 31348                           ;os_ser.c: 110: EventStatus = EventReceived;
 31349  005D9C  0E01               	movlw	1
 31350  005D9E  D001               	goto	L49
 31351  005DA0                     l832:
 31352                           
 31353                           ; BSR set to: 0
 31354                           ;os_ser.c: 112: else
 31355                           ;os_ser.c: 113: {
 31356                           ;os_ser.c: 115: EventStatus = EventIdle;
 31357                           
 31358                           ; BSR set to: 0
 31359  005DA0  0E00               	movlw	0
 31360  005DA2                     L49:
 31361  005DA2  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31362                           
 31363                           ; BSR set to: 0
 31364                           ;os_ser.c: 116: }
 31365                           ;os_ser.c: 119: return(EventStatus);
 31366  005DA4  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 31367  005DA6  0012               	return	
 31368  005DA8                     __end_of_ReceiveEvt:
 31369                           	opt stack 0
 31370                           tosu	equ	0xFFF
 31371                           tosh	equ	0xFFE
 31372                           tosl	equ	0xFFD
 31373                           pclath	equ	0xFFA
 31374                           tblptru	equ	0xFF8
 31375                           tblptrh	equ	0xFF7
 31376                           tblptrl	equ	0xFF6
 31377                           tablat	equ	0xFF5
 31378                           prodh	equ	0xFF4
 31379                           prodl	equ	0xFF3
 31380                           intcon	equ	0xFF2
 31381                           intcon2	equ	0xFF1
 31382                           intcon3	equ	0xFF0
 31383                           indf0	equ	0xFEF
 31384                           postinc0	equ	0xFEE
 31385                           plusw0	equ	0xFEB
 31386                           fsr0h	equ	0xFEA
 31387                           fsr0l	equ	0xFE9
 31388                           wreg	equ	0xFE8
 31389                           indf1	equ	0xFE7
 31390                           postinc1	equ	0xFE6
 31391                           postdec1	equ	0xFE5
 31392                           plusw1	equ	0xFE3
 31393                           fsr1h	equ	0xFE2
 31394                           fsr1l	equ	0xFE1
 31395                           indf2	equ	0xFDF
 31396                           postinc2	equ	0xFDE
 31397                           postdec2	equ	0xFDD
 31398                           plusw2	equ	0xFDB
 31399                           fsr2h	equ	0xFDA
 31400                           fsr2l	equ	0xFD9
 31401                           status	equ	0xFD8
 31402                           
 31403 ;; *************** function _I2c_WriteData *****************
 31404 ;; Defined at:
 31405 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31406 ;; Parameters:    Size  Location     Type
 31407 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 31408 ;;		 -> I2cTxPacket(5), 
 31409 ;; Auto vars:     Size  Location     Type
 31410 ;;		None
 31411 ;; Return value:  Size  Location     Type
 31412 ;;                  1    wreg      enum E7740
 31413 ;; Registers used:
 31414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31415 ;; Tracked objects:
 31416 ;;		On entry : 0/0
 31417 ;;		On exit  : 0/0
 31418 ;;		Unchanged: 0/0
 31419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31420 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31422 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31423 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31424 ;;Total ram usage:        4 bytes
 31425 ;; Hardware stack levels used:    1
 31426 ;; Hardware stack levels required when called:   12
 31427 ;; This function calls:
 31428 ;;		_CheckAckStatus
 31429 ;;		_CheckTxStatus
 31430 ;;		_StartCondition
 31431 ;;		_StopCondition
 31432 ;;		_WriteByte
 31433 ;; This function is called by:
 31434 ;;		_I2cSendMsgSm
 31435 ;; This function uses a non-reentrant model
 31436 ;;
 31437                           
 31438                           	psect	text146
 31439  00202C                     __ptext146:
 31440                           	opt stack 0
 31441  00202C                     _I2c_WriteData:
 31442                           	opt stack 14
 31443                           
 31444                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 31445                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 31446                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 31447                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 31448                           ;i2c_drv.c: 260: switch (I2cWriteState)
 31449                           
 31450                           ; BSR set to: 0
 31451                           ;incstack = 0
 31452  00202C  D095               	goto	l160
 31453  00202E                     
 31454                           ;i2c_drv.c: 264: StartCondition();
 31455  00202E  EC41  F031         	call	_StartCondition	;wreg free
 31456                           
 31457                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 31458  002032  0E00               	movlw	0
 31459  002034  6E35               	movwf	I2c_WriteData@WriteStatus,c
 31460                           
 31461                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 31462  002036  0E01               	movlw	1
 31463  002038  D084               	goto	L56
 31464  00203A                     
 31465                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 31466  00203A  0100               	movlb	0	; () banked
 31467  00203C  EE20 F001          	lfsr	2,1
 31468  002040  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31469  002042  26D9               	addwf	fsr2l,f,c
 31470  002044  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31471  002046  22DA               	addwfc	fsr2h,f,c
 31472  002048  50DF               	movf	indf2,w,c
 31473  00204A  6F80               	movwf	??_I2c_WriteData& (0+255),b
 31474  00204C  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31475  002050  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31476  002054  50DF               	movf	indf2,w,c
 31477  002056  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 31478  002058  90D8               	bcf	status,0,c
 31479  00205A  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 31480  00205C  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 31481  00205E  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31482  002062  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31483  002066  6EDF               	movwf	indf2,c
 31484                           
 31485                           ; BSR set to: 0
 31486                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 31487  002068  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31488  00206C  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31489  002070  50DF               	movf	indf2,w,c
 31490  002072  EC1F  F031         	call	_WriteByte
 31491                           
 31492                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 31493  002076  0E02               	movlw	2
 31494  002078  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31495  00207A                     
 31496                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 31497  00207A  EC29  F031         	call	_CheckTxStatus	;wreg free
 31498  00207E  0900               	iorlw	0
 31499  002080  A4D8               	btfss	status,2,c
 31500  002082  D089               	goto	l162
 31501                           
 31502                           ;i2c_drv.c: 282: {
 31503                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 31504  002084  0E03               	movlw	3
 31505  002086  D01A               	goto	L58
 31506  002088                     
 31507                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 31508  002088  0100               	movlb	0	; () banked
 31509  00208A  EE20 F002          	lfsr	2,2
 31510  00208E  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31511  002090  26D9               	addwf	fsr2l,f,c
 31512  002092  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31513  002094  22DA               	addwfc	fsr2h,f,c
 31514  002096  CFDE F080          	movff	postinc2,??_I2c_WriteData
 31515  00209A  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 31516  00209E  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 31517  0020A2  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 31518  0020A6  50DF               	movf	indf2,w,c
 31519  0020A8  EC1F  F031         	call	_WriteByte
 31520                           
 31521                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 31522  0020AC  0E04               	movlw	4
 31523  0020AE  D049               	goto	L56
 31524  0020B0                     
 31525                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 31526  0020B0  EC29  F031         	call	_CheckTxStatus	;wreg free
 31527  0020B4  0900               	iorlw	0
 31528  0020B6  A4D8               	btfss	status,2,c
 31529  0020B8  D06E               	goto	l162
 31530                           
 31531                           ;i2c_drv.c: 300: {
 31532                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 31533  0020BA  0E05               	movlw	5
 31534  0020BC                     L58:
 31535  0020BC  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31536                           
 31537                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 31538  0020BE  0E08               	movlw	8
 31539  0020C0  D040               	goto	L56
 31540  0020C2                     
 31541                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 31542  0020C2  0100               	movlb	0	; () banked
 31543  0020C4  EE20 F004          	lfsr	2,4
 31544  0020C8  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31545  0020CA  26D9               	addwf	fsr2l,f,c
 31546  0020CC  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31547  0020CE  22DA               	addwfc	fsr2h,f,c
 31548  0020D0  50DF               	movf	indf2,w,c
 31549  0020D2  B4D8               	btfsc	status,2,c
 31550  0020D4  D010               	goto	l170
 31551                           
 31552                           ; BSR set to: 0
 31553                           ;i2c_drv.c: 310: {
 31554                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 31555  0020D6  EE20 F004          	lfsr	2,4
 31556  0020DA  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31557  0020DC  26D9               	addwf	fsr2l,f,c
 31558  0020DE  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31559  0020E0  22DA               	addwfc	fsr2h,f,c
 31560  0020E2  06DF               	decf	indf2,f,c
 31561                           
 31562                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 31563  0020E4  EE20 F002          	lfsr	2,2
 31564  0020E8  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31565  0020EA  26D9               	addwf	fsr2l,f,c
 31566  0020EC  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31567  0020EE  22DA               	addwfc	fsr2h,f,c
 31568  0020F0  2ADE               	incf	postinc2,f,c
 31569  0020F2  0E00               	movlw	0
 31570  0020F4  22DD               	addwfc	postdec2,f,c
 31571  0020F6                     l170:
 31572                           
 31573                           ; BSR set to: 0
 31574                           ;i2c_drv.c: 315: }
 31575                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 31576  0020F6  EE20 F004          	lfsr	2,4
 31577  0020FA  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31578  0020FC  26D9               	addwf	fsr2l,f,c
 31579  0020FE  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31580  002100  22DA               	addwfc	fsr2h,f,c
 31581  002102  50DF               	movf	indf2,w,c
 31582  002104  A4D8               	btfss	status,2,c
 31583  002106  D002               	goto	l171
 31584                           
 31585                           ; BSR set to: 0
 31586                           ;i2c_drv.c: 319: {
 31587                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 31588  002108  0E06               	movlw	6
 31589  00210A  D01B               	goto	L56
 31590  00210C                     l171:
 31591                           
 31592                           ; BSR set to: 0
 31593                           ;i2c_drv.c: 323: else
 31594                           ;i2c_drv.c: 324: {
 31595                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 31596                           
 31597                           ; BSR set to: 0
 31598  00210C  0E03               	movlw	3
 31599  00210E  D019               	goto	L56
 31600  002110                     
 31601                           ;i2c_drv.c: 332: StopCondition();
 31602                           
 31603                           ; BSR set to: 0
 31604  002110  EC3F  F031         	call	_StopCondition	;wreg free
 31605                           
 31606                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 31607  002114  0E07               	movlw	7
 31608  002116  D015               	goto	L56
 31609  002118                     
 31610                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 31611  002118  0E00               	movlw	0
 31612  00211A  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31613                           
 31614                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 31615  00211C  0E00               	movlw	0
 31616  00211E  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31617                           
 31618                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 31619  002120  0E02               	movlw	2
 31620  002122  D018               	goto	L57
 31621  002124                     
 31622                           ;i2c_drv.c: 347: TentativeCounter++;
 31623  002124  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 31624                           
 31625                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 31626  002126  EC2E  F031         	call	_CheckAckStatus	;wreg free
 31627  00212A  0900               	iorlw	0
 31628  00212C  A4D8               	btfss	status,2,c
 31629  00212E  D005               	goto	l176
 31630                           
 31631                           ;i2c_drv.c: 350: {
 31632                           ;i2c_drv.c: 352: TentativeCounter = 0;
 31633  002130  0E00               	movlw	0
 31634  002132  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 31635                           
 31636                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 31637  002134  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 31638                           
 31639                           ;i2c_drv.c: 355: }
 31640  002138  D02E               	goto	l162
 31641  00213A                     l176:
 31642                           
 31643                           ;i2c_drv.c: 356: else
 31644                           ;i2c_drv.c: 357: {
 31645                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 31646  00213A  0E02               	movlw	2
 31647  00213C  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 31648  00213E  D02B               	goto	l162
 31649                           
 31650                           ;i2c_drv.c: 360: {
 31651                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 31652  002140  0E09               	movlw	9
 31653  002142                     L56:
 31654  002142  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31655                           
 31656                           ;i2c_drv.c: 363: }
 31657                           ;i2c_drv.c: 364: }
 31658                           ;i2c_drv.c: 365: break;
 31659  002144  D028               	goto	l162
 31660  002146                     
 31661                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 31662  002146  0E00               	movlw	0
 31663  002148  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31664                           
 31665                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 31666  00214A  0E00               	movlw	0
 31667  00214C  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31668                           
 31669                           ;i2c_drv.c: 372: TentativeCounter = 0;
 31670  00214E  0E00               	movlw	0
 31671  002150  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 31672                           
 31673                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 31674  002152  0E01               	movlw	1
 31675  002154                     L57:
 31676  002154  6E35               	movwf	I2c_WriteData@WriteStatus,c
 31677                           
 31678                           ;i2c_drv.c: 379: }
 31679                           
 31680                           ;i2c_drv.c: 378: break;
 31681                           
 31682                           ;i2c_drv.c: 377: default:
 31683                           
 31684                           ;i2c_drv.c: 375: break;
 31685  002156  D01F               	goto	l162
 31686  002158                     l160:
 31687  002158  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 31688                           
 31689                           ; Switch size 1, requested type "space"
 31690                           ; Number of cases is 10, Range of values is 0 to 9
 31691                           ; switch strategies available:
 31692                           ; Name         Instructions Cycles
 31693                           ; simple_byte           31    16 (average)
 31694                           ;	Chosen strategy is simple_byte
 31695  00215A  0A00               	xorlw	0	; case 0
 31696  00215C  B4D8               	btfsc	status,2,c
 31697  00215E  D767               	goto	l161
 31698  002160  0A01               	xorlw	1	; case 1
 31699  002162  B4D8               	btfsc	status,2,c
 31700  002164  D76A               	goto	l163
 31701  002166  0A03               	xorlw	3	; case 2
 31702  002168  B4D8               	btfsc	status,2,c
 31703  00216A  D787               	goto	l164
 31704  00216C  0A01               	xorlw	1	; case 3
 31705  00216E  B4D8               	btfsc	status,2,c
 31706  002170  D78B               	goto	l166
 31707  002172  0A07               	xorlw	7	; case 4
 31708  002174  B4D8               	btfsc	status,2,c
 31709  002176  D79C               	goto	l167
 31710  002178  0A01               	xorlw	1	; case 5
 31711  00217A  B4D8               	btfsc	status,2,c
 31712  00217C  D7A2               	goto	l169
 31713  00217E  0A03               	xorlw	3	; case 6
 31714  002180  B4D8               	btfsc	status,2,c
 31715  002182  D7C6               	goto	l173
 31716  002184  0A01               	xorlw	1	; case 7
 31717  002186  B4D8               	btfsc	status,2,c
 31718  002188  D7C7               	goto	l174
 31719  00218A  0A0F               	xorlw	15	; case 8
 31720  00218C  B4D8               	btfsc	status,2,c
 31721  00218E  D7CA               	goto	l175
 31722  002190  0A01               	xorlw	1	; case 9
 31723  002192  B4D8               	btfsc	status,2,c
 31724  002194  D7D8               	goto	l179
 31725  002196                     l162:
 31726                           
 31727                           ;i2c_drv.c: 382: return WriteStatus;
 31728  002196  5035               	movf	I2c_WriteData@WriteStatus,w,c
 31729  002198  0012               	return	
 31730  00219A                     __end_of_I2c_WriteData:
 31731                           	opt stack 0
 31732                           tosu	equ	0xFFF
 31733                           tosh	equ	0xFFE
 31734                           tosl	equ	0xFFD
 31735                           pclath	equ	0xFFA
 31736                           tblptru	equ	0xFF8
 31737                           tblptrh	equ	0xFF7
 31738                           tblptrl	equ	0xFF6
 31739                           tablat	equ	0xFF5
 31740                           prodh	equ	0xFF4
 31741                           prodl	equ	0xFF3
 31742                           intcon	equ	0xFF2
 31743                           intcon2	equ	0xFF1
 31744                           intcon3	equ	0xFF0
 31745                           indf0	equ	0xFEF
 31746                           postinc0	equ	0xFEE
 31747                           plusw0	equ	0xFEB
 31748                           fsr0h	equ	0xFEA
 31749                           fsr0l	equ	0xFE9
 31750                           wreg	equ	0xFE8
 31751                           indf1	equ	0xFE7
 31752                           postinc1	equ	0xFE6
 31753                           postdec1	equ	0xFE5
 31754                           plusw1	equ	0xFE3
 31755                           fsr1h	equ	0xFE2
 31756                           fsr1l	equ	0xFE1
 31757                           indf2	equ	0xFDF
 31758                           postinc2	equ	0xFDE
 31759                           postdec2	equ	0xFDD
 31760                           plusw2	equ	0xFDB
 31761                           fsr2h	equ	0xFDA
 31762                           fsr2l	equ	0xFD9
 31763                           status	equ	0xFD8
 31764                           
 31765 ;; *************** function _I2c_ReadData *****************
 31766 ;; Defined at:
 31767 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31768 ;; Parameters:    Size  Location     Type
 31769 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 31770 ;;		 -> I2cRxPacket(6), 
 31771 ;; Auto vars:     Size  Location     Type
 31772 ;;		None
 31773 ;; Return value:  Size  Location     Type
 31774 ;;                  1    wreg      enum E7787
 31775 ;; Registers used:
 31776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31777 ;; Tracked objects:
 31778 ;;		On entry : 0/0
 31779 ;;		On exit  : 0/0
 31780 ;;		Unchanged: 0/0
 31781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31782 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31784 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31785 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31786 ;;Total ram usage:        4 bytes
 31787 ;; Hardware stack levels used:    1
 31788 ;; Hardware stack levels required when called:   12
 31789 ;; This function calls:
 31790 ;;		_CheckAckStatus
 31791 ;;		_CheckTxStatus
 31792 ;;		_EnableReceiver
 31793 ;;		_GenerateEvt
 31794 ;;		_ReadByte
 31795 ;;		_SetAckStatus
 31796 ;;		_StartCondition
 31797 ;;		_StopCondition
 31798 ;;		_WriteByte
 31799 ;; This function is called by:
 31800 ;;		_I2cSendMsgSm
 31801 ;; This function uses a non-reentrant model
 31802 ;;
 31803                           
 31804                           	psect	text147
 31805  0022FA                     __ptext147:
 31806                           	opt stack 0
 31807  0022FA                     _I2c_ReadData:
 31808                           	opt stack 14
 31809                           
 31810                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 31811                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 31812                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 31813                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 31814                           ;i2c_drv.c: 402: switch (I2cReadState)
 31815                           
 31816                           ;incstack = 0
 31817  0022FA  D090               	goto	l192
 31818  0022FC                     
 31819                           ;i2c_drv.c: 406: StartCondition();
 31820  0022FC  EC41  F031         	call	_StartCondition	;wreg free
 31821                           
 31822                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 31823  002300  0E00               	movlw	0
 31824  002302  6E31               	movwf	I2c_ReadData@ReadStatus,c
 31825                           
 31826                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 31827  002304  0E01               	movlw	1
 31828  002306  D083               	goto	L66
 31829  002308                     
 31830                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 31831  002308  0100               	movlb	0	; () banked
 31832  00230A  EE20 F001          	lfsr	2,1
 31833  00230E  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31834  002310  26D9               	addwf	fsr2l,f,c
 31835  002312  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31836  002314  22DA               	addwfc	fsr2h,f,c
 31837  002316  50DF               	movf	indf2,w,c
 31838  002318  6F82               	movwf	??_I2c_ReadData& (0+255),b
 31839  00231A  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31840  00231E  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31841  002322  50DF               	movf	indf2,w,c
 31842  002324  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 31843  002326  90D8               	bcf	status,0,c
 31844  002328  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 31845  00232A  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 31846  00232C  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31847  002330  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31848  002334  6EDF               	movwf	indf2,c
 31849                           
 31850                           ; BSR set to: 0
 31851                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 31852  002336  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31853  00233A  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31854  00233E  50DF               	movf	indf2,w,c
 31855  002340  EC1F  F031         	call	_WriteByte
 31856                           
 31857                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 31858  002344  0E02               	movlw	2
 31859  002346  D063               	goto	L66
 31860  002348                     
 31861                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 31862  002348  EC29  F031         	call	_CheckTxStatus	;wreg free
 31863  00234C  0900               	iorlw	0
 31864  00234E  A4D8               	btfss	status,2,c
 31865  002350  D081               	goto	l194
 31866                           
 31867                           ;i2c_drv.c: 425: {
 31868                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 31869  002352  0E03               	movlw	3
 31870  002354  D05C               	goto	L66
 31871  002356                     
 31872                           ;i2c_drv.c: 433: TentativeCounter++;
 31873  002356  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 31874                           
 31875                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 31876  002358  EC2E  F031         	call	_CheckAckStatus	;wreg free
 31877  00235C  0900               	iorlw	0
 31878  00235E  A4D8               	btfss	status,2,c
 31879  002360  D004               	goto	l199
 31880                           
 31881                           ;i2c_drv.c: 436: {
 31882                           ;i2c_drv.c: 438: TentativeCounter = 0;
 31883  002362  0E00               	movlw	0
 31884  002364  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 31885  002366                     
 31886                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 31887  002366  0E04               	movlw	4
 31888  002368  D052               	goto	L66
 31889  00236A                     l199:
 31890                           
 31891                           ;i2c_drv.c: 442: else
 31892                           ;i2c_drv.c: 443: {
 31893                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 31894  00236A  0E02               	movlw	2
 31895  00236C  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 31896  00236E  D072               	goto	l194
 31897                           
 31898                           ;i2c_drv.c: 446: {
 31899                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 31900  002370  0E08               	movlw	8
 31901  002372  D04D               	goto	L66
 31902  002374                     
 31903                           ;i2c_drv.c: 455: EnableReceiver();
 31904  002374  EC43  F031         	call	_EnableReceiver	;wreg free
 31905                           
 31906                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 31907  002378  0E05               	movlw	5
 31908  00237A  D049               	goto	L66
 31909  00237C                     
 31910                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 31911  00237C  EC29  F031         	call	_CheckTxStatus	;wreg free
 31912  002380  0900               	iorlw	0
 31913  002382  A4D8               	btfss	status,2,c
 31914  002384  D067               	goto	l194
 31915                           
 31916                           ;i2c_drv.c: 463: {
 31917                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 31918  002386  0100               	movlb	0	; () banked
 31919  002388  EE20 F002          	lfsr	2,2
 31920  00238C  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31921  00238E  26D9               	addwf	fsr2l,f,c
 31922  002390  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31923  002392  22DA               	addwfc	fsr2h,f,c
 31924  002394  CFDE F082          	movff	postinc2,??_I2c_ReadData
 31925  002398  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 31926  00239C  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 31927  0023A0  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 31928  0023A4  EC24  F031         	call	_ReadByte	;wreg free
 31929  0023A8  6EDF               	movwf	indf2,c
 31930                           
 31931                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 31932  0023AA  0100               	movlb	0	; () banked
 31933  0023AC  EE20 F002          	lfsr	2,2
 31934  0023B0  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31935  0023B2  26D9               	addwf	fsr2l,f,c
 31936  0023B4  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31937  0023B6  22DA               	addwfc	fsr2h,f,c
 31938  0023B8  2ADE               	incf	postinc2,f,c
 31939  0023BA  0E00               	movlw	0
 31940  0023BC  22DD               	addwfc	postdec2,f,c
 31941                           
 31942                           ; BSR set to: 0
 31943                           ;i2c_drv.c: 469: DataCounter++;
 31944  0023BE  2A33               	incf	I2c_ReadData@DataCounter,f,c
 31945                           
 31946                           ; BSR set to: 0
 31947                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 31948  0023C0  0E06               	movlw	6
 31949  0023C2  D025               	goto	L66
 31950  0023C4                     
 31951                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 31952                           
 31953                           ; BSR set to: 0
 31954  0023C4  0100               	movlb	0	; () banked
 31955  0023C6  EE20 F004          	lfsr	2,4
 31956  0023CA  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31957  0023CC  26D9               	addwf	fsr2l,f,c
 31958  0023CE  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31959  0023D0  22DA               	addwfc	fsr2h,f,c
 31960  0023D2  50DE               	movf	postinc2,w,c
 31961  0023D4  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 31962  0023D6  A0D8               	btfss	status,0,c
 31963  0023D8  D008               	goto	l206
 31964                           
 31965                           ; BSR set to: 0
 31966                           ;i2c_drv.c: 478: {
 31967                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 31968  0023DA  0E01               	movlw	1
 31969  0023DC  ECB9  F030         	call	_SetAckStatus
 31970                           
 31971                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 31972  0023E0  0E07               	movlw	7
 31973  0023E2  6E34               	movwf	I2c_ReadData@I2cReadState,c
 31974                           
 31975                           ;i2c_drv.c: 484: DataCounter = 0;
 31976  0023E4  0E00               	movlw	0
 31977  0023E6  6E33               	movwf	I2c_ReadData@DataCounter,c
 31978                           
 31979                           ;i2c_drv.c: 485: }
 31980  0023E8  D035               	goto	l194
 31981  0023EA                     l206:
 31982                           
 31983                           ;i2c_drv.c: 486: else
 31984                           ;i2c_drv.c: 487: {
 31985                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 31986  0023EA  0E00               	movlw	0
 31987  0023EC  ECB9  F030         	call	_SetAckStatus
 31988  0023F0  D7BA               	goto	L67
 31989  0023F2                     
 31990                           ;i2c_drv.c: 497: StopCondition();
 31991  0023F2  EC3F  F031         	call	_StopCondition	;wreg free
 31992                           
 31993                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 31994  0023F6  0E02               	movlw	2
 31995  0023F8  6E31               	movwf	I2c_ReadData@ReadStatus,c
 31996                           
 31997                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 31998  0023FA  0E05               	movlw	5
 31999  0023FC  0100               	movlb	0	; () banked
 32000  0023FE  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 32001  002400  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 32002  002402  0E00               	movlw	0
 32003  002404  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32004  002406  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 32005  002408  EC81  F030         	call	_GenerateEvt	;wreg free
 32006                           
 32007                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 32008  00240C  0E00               	movlw	0
 32009  00240E                     L66:
 32010  00240E  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32011                           
 32012                           ;i2c_drv.c: 504: break;
 32013  002410  D021               	goto	l194
 32014  002412                     
 32015                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 32016  002412  0E00               	movlw	0
 32017  002414  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32018                           
 32019                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 32020  002416  0E01               	movlw	1
 32021  002418  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32022                           
 32023                           ;i2c_drv.c: 515: }
 32024                           
 32025                           ;i2c_drv.c: 514: break;
 32026                           
 32027                           ;i2c_drv.c: 513: default:
 32028                           
 32029                           ;i2c_drv.c: 511: break;
 32030  00241A  D01C               	goto	l194
 32031  00241C                     l192:
 32032  00241C  5034               	movf	I2c_ReadData@I2cReadState,w,c
 32033                           
 32034                           ; Switch size 1, requested type "space"
 32035                           ; Number of cases is 9, Range of values is 0 to 8
 32036                           ; switch strategies available:
 32037                           ; Name         Instructions Cycles
 32038                           ; simple_byte           28    15 (average)
 32039                           ;	Chosen strategy is simple_byte
 32040  00241E  0A00               	xorlw	0	; case 0
 32041  002420  B4D8               	btfsc	status,2,c
 32042  002422  D76C               	goto	l193
 32043  002424  0A01               	xorlw	1	; case 1
 32044  002426  B4D8               	btfsc	status,2,c
 32045  002428  D76F               	goto	l195
 32046  00242A  0A03               	xorlw	3	; case 2
 32047  00242C  B4D8               	btfsc	status,2,c
 32048  00242E  D78C               	goto	l196
 32049  002430  0A01               	xorlw	1	; case 3
 32050  002432  B4D8               	btfsc	status,2,c
 32051  002434  D790               	goto	l198
 32052  002436  0A07               	xorlw	7	; case 4
 32053  002438  B4D8               	btfsc	status,2,c
 32054  00243A  D79C               	goto	l202
 32055  00243C  0A01               	xorlw	1	; case 5
 32056  00243E  B4D8               	btfsc	status,2,c
 32057  002440  D79D               	goto	l203
 32058  002442  0A03               	xorlw	3	; case 6
 32059  002444  B4D8               	btfsc	status,2,c
 32060  002446  D7BE               	goto	l205
 32061  002448  0A01               	xorlw	1	; case 7
 32062  00244A  B4D8               	btfsc	status,2,c
 32063  00244C  D7D2               	goto	l208
 32064  00244E  0A0F               	xorlw	15	; case 8
 32065  002450  B4D8               	btfsc	status,2,c
 32066  002452  D7DF               	goto	l209
 32067  002454                     l194:
 32068                           
 32069                           ;i2c_drv.c: 518: return ReadStatus;
 32070  002454  5031               	movf	I2c_ReadData@ReadStatus,w,c
 32071  002456  0012               	return	
 32072  002458                     __end_of_I2c_ReadData:
 32073                           	opt stack 0
 32074                           tosu	equ	0xFFF
 32075                           tosh	equ	0xFFE
 32076                           tosl	equ	0xFFD
 32077                           pclath	equ	0xFFA
 32078                           tblptru	equ	0xFF8
 32079                           tblptrh	equ	0xFF7
 32080                           tblptrl	equ	0xFF6
 32081                           tablat	equ	0xFF5
 32082                           prodh	equ	0xFF4
 32083                           prodl	equ	0xFF3
 32084                           intcon	equ	0xFF2
 32085                           intcon2	equ	0xFF1
 32086                           intcon3	equ	0xFF0
 32087                           indf0	equ	0xFEF
 32088                           postinc0	equ	0xFEE
 32089                           plusw0	equ	0xFEB
 32090                           fsr0h	equ	0xFEA
 32091                           fsr0l	equ	0xFE9
 32092                           wreg	equ	0xFE8
 32093                           indf1	equ	0xFE7
 32094                           postinc1	equ	0xFE6
 32095                           postdec1	equ	0xFE5
 32096                           plusw1	equ	0xFE3
 32097                           fsr1h	equ	0xFE2
 32098                           fsr1l	equ	0xFE1
 32099                           indf2	equ	0xFDF
 32100                           postinc2	equ	0xFDE
 32101                           postdec2	equ	0xFDD
 32102                           plusw2	equ	0xFDB
 32103                           fsr2h	equ	0xFDA
 32104                           fsr2l	equ	0xFD9
 32105                           status	equ	0xFD8
 32106                           
 32107 ;; *************** function _WriteByte *****************
 32108 ;; Defined at:
 32109 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32110 ;; Parameters:    Size  Location     Type
 32111 ;;  Byte            1    wreg     unsigned char 
 32112 ;; Auto vars:     Size  Location     Type
 32113 ;;  Byte            1   29[BANK0 ] unsigned char 
 32114 ;; Return value:  Size  Location     Type
 32115 ;;                  1    wreg      void 
 32116 ;; Registers used:
 32117 ;;		wreg
 32118 ;; Tracked objects:
 32119 ;;		On entry : 0/0
 32120 ;;		On exit  : 0/0
 32121 ;;		Unchanged: 0/0
 32122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32124 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32126 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32127 ;;Total ram usage:        1 bytes
 32128 ;; Hardware stack levels used:    1
 32129 ;; Hardware stack levels required when called:   11
 32130 ;; This function calls:
 32131 ;;		Nothing
 32132 ;; This function is called by:
 32133 ;;		_I2c_WriteData
 32134 ;;		_I2c_ReadData
 32135 ;; This function uses a non-reentrant model
 32136 ;;
 32137                           
 32138                           	psect	text148
 32139  00623E                     __ptext148:
 32140                           	opt stack 0
 32141  00623E                     _WriteByte:
 32142                           	opt stack 14
 32143                           
 32144                           ;incstack = 0
 32145                           ;WriteByte@Byte stored from wreg
 32146  00623E  0100               	movlb	0	; () banked
 32147  006240  6F7D               	movwf	WriteByte@Byte& (0+255),b
 32148                           
 32149                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 32150  006242  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 32151  006246  0012               	return		;funcret
 32152  006248                     __end_of_WriteByte:
 32153                           	opt stack 0
 32154                           tosu	equ	0xFFF
 32155                           tosh	equ	0xFFE
 32156                           tosl	equ	0xFFD
 32157                           pclath	equ	0xFFA
 32158                           tblptru	equ	0xFF8
 32159                           tblptrh	equ	0xFF7
 32160                           tblptrl	equ	0xFF6
 32161                           tablat	equ	0xFF5
 32162                           prodh	equ	0xFF4
 32163                           prodl	equ	0xFF3
 32164                           intcon	equ	0xFF2
 32165                           intcon2	equ	0xFF1
 32166                           intcon3	equ	0xFF0
 32167                           indf0	equ	0xFEF
 32168                           postinc0	equ	0xFEE
 32169                           plusw0	equ	0xFEB
 32170                           fsr0h	equ	0xFEA
 32171                           fsr0l	equ	0xFE9
 32172                           wreg	equ	0xFE8
 32173                           indf1	equ	0xFE7
 32174                           postinc1	equ	0xFE6
 32175                           postdec1	equ	0xFE5
 32176                           plusw1	equ	0xFE3
 32177                           fsr1h	equ	0xFE2
 32178                           fsr1l	equ	0xFE1
 32179                           indf2	equ	0xFDF
 32180                           postinc2	equ	0xFDE
 32181                           postdec2	equ	0xFDD
 32182                           plusw2	equ	0xFDB
 32183                           fsr2h	equ	0xFDA
 32184                           fsr2l	equ	0xFD9
 32185                           status	equ	0xFD8
 32186                           
 32187 ;; *************** function _StopCondition *****************
 32188 ;; Defined at:
 32189 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32190 ;; Parameters:    Size  Location     Type
 32191 ;;		None
 32192 ;; Auto vars:     Size  Location     Type
 32193 ;;		None
 32194 ;; Return value:  Size  Location     Type
 32195 ;;                  1    wreg      void 
 32196 ;; Registers used:
 32197 ;;		status,2, status,0
 32198 ;; Tracked objects:
 32199 ;;		On entry : 0/0
 32200 ;;		On exit  : 0/0
 32201 ;;		Unchanged: 0/0
 32202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32207 ;;Total ram usage:        0 bytes
 32208 ;; Hardware stack levels used:    1
 32209 ;; Hardware stack levels required when called:   11
 32210 ;; This function calls:
 32211 ;;		Nothing
 32212 ;; This function is called by:
 32213 ;;		_I2c_WriteData
 32214 ;;		_I2c_ReadData
 32215 ;; This function uses a non-reentrant model
 32216 ;;
 32217                           
 32218                           	psect	text149
 32219  00627E                     __ptext149:
 32220                           	opt stack 0
 32221  00627E                     _StopCondition:
 32222                           	opt stack 14
 32223                           
 32224                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 32225                           
 32226                           ;incstack = 0
 32227  00627E  8471               	bsf	3953,2,c	;volatile
 32228  006280  0012               	return		;funcret
 32229  006282                     __end_of_StopCondition:
 32230                           	opt stack 0
 32231                           tosu	equ	0xFFF
 32232                           tosh	equ	0xFFE
 32233                           tosl	equ	0xFFD
 32234                           pclath	equ	0xFFA
 32235                           tblptru	equ	0xFF8
 32236                           tblptrh	equ	0xFF7
 32237                           tblptrl	equ	0xFF6
 32238                           tablat	equ	0xFF5
 32239                           prodh	equ	0xFF4
 32240                           prodl	equ	0xFF3
 32241                           intcon	equ	0xFF2
 32242                           intcon2	equ	0xFF1
 32243                           intcon3	equ	0xFF0
 32244                           indf0	equ	0xFEF
 32245                           postinc0	equ	0xFEE
 32246                           plusw0	equ	0xFEB
 32247                           fsr0h	equ	0xFEA
 32248                           fsr0l	equ	0xFE9
 32249                           wreg	equ	0xFE8
 32250                           indf1	equ	0xFE7
 32251                           postinc1	equ	0xFE6
 32252                           postdec1	equ	0xFE5
 32253                           plusw1	equ	0xFE3
 32254                           fsr1h	equ	0xFE2
 32255                           fsr1l	equ	0xFE1
 32256                           indf2	equ	0xFDF
 32257                           postinc2	equ	0xFDE
 32258                           postdec2	equ	0xFDD
 32259                           plusw2	equ	0xFDB
 32260                           fsr2h	equ	0xFDA
 32261                           fsr2l	equ	0xFD9
 32262                           status	equ	0xFD8
 32263                           
 32264 ;; *************** function _StartCondition *****************
 32265 ;; Defined at:
 32266 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32267 ;; Parameters:    Size  Location     Type
 32268 ;;		None
 32269 ;; Auto vars:     Size  Location     Type
 32270 ;;		None
 32271 ;; Return value:  Size  Location     Type
 32272 ;;                  1    wreg      void 
 32273 ;; Registers used:
 32274 ;;		status,2, status,0
 32275 ;; Tracked objects:
 32276 ;;		On entry : 0/0
 32277 ;;		On exit  : 0/0
 32278 ;;		Unchanged: 0/0
 32279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32284 ;;Total ram usage:        0 bytes
 32285 ;; Hardware stack levels used:    1
 32286 ;; Hardware stack levels required when called:   11
 32287 ;; This function calls:
 32288 ;;		Nothing
 32289 ;; This function is called by:
 32290 ;;		_I2c_WriteData
 32291 ;;		_I2c_ReadData
 32292 ;; This function uses a non-reentrant model
 32293 ;;
 32294                           
 32295                           	psect	text150
 32296  006282                     __ptext150:
 32297                           	opt stack 0
 32298  006282                     _StartCondition:
 32299                           	opt stack 14
 32300                           
 32301                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 32302                           
 32303                           ;incstack = 0
 32304  006282  8071               	bsf	3953,0,c	;volatile
 32305  006284  0012               	return		;funcret
 32306  006286                     __end_of_StartCondition:
 32307                           	opt stack 0
 32308                           tosu	equ	0xFFF
 32309                           tosh	equ	0xFFE
 32310                           tosl	equ	0xFFD
 32311                           pclath	equ	0xFFA
 32312                           tblptru	equ	0xFF8
 32313                           tblptrh	equ	0xFF7
 32314                           tblptrl	equ	0xFF6
 32315                           tablat	equ	0xFF5
 32316                           prodh	equ	0xFF4
 32317                           prodl	equ	0xFF3
 32318                           intcon	equ	0xFF2
 32319                           intcon2	equ	0xFF1
 32320                           intcon3	equ	0xFF0
 32321                           indf0	equ	0xFEF
 32322                           postinc0	equ	0xFEE
 32323                           plusw0	equ	0xFEB
 32324                           fsr0h	equ	0xFEA
 32325                           fsr0l	equ	0xFE9
 32326                           wreg	equ	0xFE8
 32327                           indf1	equ	0xFE7
 32328                           postinc1	equ	0xFE6
 32329                           postdec1	equ	0xFE5
 32330                           plusw1	equ	0xFE3
 32331                           fsr1h	equ	0xFE2
 32332                           fsr1l	equ	0xFE1
 32333                           indf2	equ	0xFDF
 32334                           postinc2	equ	0xFDE
 32335                           postdec2	equ	0xFDD
 32336                           plusw2	equ	0xFDB
 32337                           fsr2h	equ	0xFDA
 32338                           fsr2l	equ	0xFD9
 32339                           status	equ	0xFD8
 32340                           
 32341 ;; *************** function _SetAckStatus *****************
 32342 ;; Defined at:
 32343 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32344 ;; Parameters:    Size  Location     Type
 32345 ;;  AckSts          1    wreg     unsigned char 
 32346 ;; Auto vars:     Size  Location     Type
 32347 ;;  AckSts          1   29[BANK0 ] unsigned char 
 32348 ;; Return value:  Size  Location     Type
 32349 ;;                  1    wreg      void 
 32350 ;; Registers used:
 32351 ;;		wreg
 32352 ;; Tracked objects:
 32353 ;;		On entry : 0/0
 32354 ;;		On exit  : 0/0
 32355 ;;		Unchanged: 0/0
 32356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32358 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32360 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32361 ;;Total ram usage:        1 bytes
 32362 ;; Hardware stack levels used:    1
 32363 ;; Hardware stack levels required when called:   11
 32364 ;; This function calls:
 32365 ;;		Nothing
 32366 ;; This function is called by:
 32367 ;;		_I2c_ReadData
 32368 ;; This function uses a non-reentrant model
 32369 ;;
 32370                           
 32371                           	psect	text151
 32372  006172                     __ptext151:
 32373                           	opt stack 0
 32374  006172                     _SetAckStatus:
 32375                           	opt stack 14
 32376                           
 32377                           ;incstack = 0
 32378                           ;SetAckStatus@AckSts stored from wreg
 32379  006172  0100               	movlb	0	; () banked
 32380  006174  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 32381                           
 32382                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 32383  006176  0100               	movlb	0	; () banked
 32384  006178  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 32385  00617A  D002               	bra	u11355
 32386  00617C  9A71               	bcf	3953,5,c	;volatile
 32387  00617E  D001               	bra	u11356
 32388  006180                     u11355:
 32389  006180  8A71               	bsf	3953,5,c	;volatile
 32390  006182                     u11356:
 32391                           
 32392                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 32393  006182  8871               	bsf	3953,4,c	;volatile
 32394  006184  0012               	return		;funcret
 32395  006186                     __end_of_SetAckStatus:
 32396                           	opt stack 0
 32397                           tosu	equ	0xFFF
 32398                           tosh	equ	0xFFE
 32399                           tosl	equ	0xFFD
 32400                           pclath	equ	0xFFA
 32401                           tblptru	equ	0xFF8
 32402                           tblptrh	equ	0xFF7
 32403                           tblptrl	equ	0xFF6
 32404                           tablat	equ	0xFF5
 32405                           prodh	equ	0xFF4
 32406                           prodl	equ	0xFF3
 32407                           intcon	equ	0xFF2
 32408                           intcon2	equ	0xFF1
 32409                           intcon3	equ	0xFF0
 32410                           indf0	equ	0xFEF
 32411                           postinc0	equ	0xFEE
 32412                           plusw0	equ	0xFEB
 32413                           fsr0h	equ	0xFEA
 32414                           fsr0l	equ	0xFE9
 32415                           wreg	equ	0xFE8
 32416                           indf1	equ	0xFE7
 32417                           postinc1	equ	0xFE6
 32418                           postdec1	equ	0xFE5
 32419                           plusw1	equ	0xFE3
 32420                           fsr1h	equ	0xFE2
 32421                           fsr1l	equ	0xFE1
 32422                           indf2	equ	0xFDF
 32423                           postinc2	equ	0xFDE
 32424                           postdec2	equ	0xFDD
 32425                           plusw2	equ	0xFDB
 32426                           fsr2h	equ	0xFDA
 32427                           fsr2l	equ	0xFD9
 32428                           status	equ	0xFD8
 32429                           
 32430 ;; *************** function _ReadByte *****************
 32431 ;; Defined at:
 32432 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32433 ;; Parameters:    Size  Location     Type
 32434 ;;		None
 32435 ;; Auto vars:     Size  Location     Type
 32436 ;;  Byte            1   29[BANK0 ] unsigned char 
 32437 ;; Return value:  Size  Location     Type
 32438 ;;                  1    wreg      unsigned char 
 32439 ;; Registers used:
 32440 ;;		wreg, status,2
 32441 ;; Tracked objects:
 32442 ;;		On entry : 0/0
 32443 ;;		On exit  : 0/0
 32444 ;;		Unchanged: 0/0
 32445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32447 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32449 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32450 ;;Total ram usage:        1 bytes
 32451 ;; Hardware stack levels used:    1
 32452 ;; Hardware stack levels required when called:   11
 32453 ;; This function calls:
 32454 ;;		Nothing
 32455 ;; This function is called by:
 32456 ;;		_I2c_ReadData
 32457 ;; This function uses a non-reentrant model
 32458 ;;
 32459                           
 32460                           	psect	text152
 32461  006248                     __ptext152:
 32462                           	opt stack 0
 32463  006248                     _ReadByte:
 32464                           	opt stack 14
 32465                           
 32466                           ;i2c_drv.c: 207: UINT8 Byte;
 32467                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 32468                           
 32469                           ;incstack = 0
 32470  006248  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 32471                           
 32472                           ;i2c_drv.c: 213: return Byte;
 32473  00624C  0100               	movlb	0	; () banked
 32474  00624E  517D               	movf	ReadByte@Byte& (0+255),w,b
 32475  006250  0012               	return	
 32476  006252                     __end_of_ReadByte:
 32477                           	opt stack 0
 32478                           tosu	equ	0xFFF
 32479                           tosh	equ	0xFFE
 32480                           tosl	equ	0xFFD
 32481                           pclath	equ	0xFFA
 32482                           tblptru	equ	0xFF8
 32483                           tblptrh	equ	0xFF7
 32484                           tblptrl	equ	0xFF6
 32485                           tablat	equ	0xFF5
 32486                           prodh	equ	0xFF4
 32487                           prodl	equ	0xFF3
 32488                           intcon	equ	0xFF2
 32489                           intcon2	equ	0xFF1
 32490                           intcon3	equ	0xFF0
 32491                           indf0	equ	0xFEF
 32492                           postinc0	equ	0xFEE
 32493                           plusw0	equ	0xFEB
 32494                           fsr0h	equ	0xFEA
 32495                           fsr0l	equ	0xFE9
 32496                           wreg	equ	0xFE8
 32497                           indf1	equ	0xFE7
 32498                           postinc1	equ	0xFE6
 32499                           postdec1	equ	0xFE5
 32500                           plusw1	equ	0xFE3
 32501                           fsr1h	equ	0xFE2
 32502                           fsr1l	equ	0xFE1
 32503                           indf2	equ	0xFDF
 32504                           postinc2	equ	0xFDE
 32505                           postdec2	equ	0xFDD
 32506                           plusw2	equ	0xFDB
 32507                           fsr2h	equ	0xFDA
 32508                           fsr2l	equ	0xFD9
 32509                           status	equ	0xFD8
 32510                           
 32511 ;; *************** function _GenerateEvt *****************
 32512 ;; Defined at:
 32513 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 32514 ;; Parameters:    Size  Location     Type
 32515 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 32516 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 32517 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 32518 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 32519 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 32520 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 32521 ;; Auto vars:     Size  Location     Type
 32522 ;;  EventStatus     1   31[BANK0 ] enum E7727
 32523 ;; Return value:  Size  Location     Type
 32524 ;;                  1    wreg      enum E7699
 32525 ;; Registers used:
 32526 ;;		wreg, fsr2l, fsr2h, status,2
 32527 ;; Tracked objects:
 32528 ;;		On entry : 0/0
 32529 ;;		On exit  : 0/0
 32530 ;;		Unchanged: 0/0
 32531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32532 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32533 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32535 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32536 ;;Total ram usage:        3 bytes
 32537 ;; Hardware stack levels used:    1
 32538 ;; Hardware stack levels required when called:   11
 32539 ;; This function calls:
 32540 ;;		Nothing
 32541 ;; This function is called by:
 32542 ;;		_I2c_ReadData
 32543 ;;		_CheckModem
 32544 ;;		_TurnOnModem
 32545 ;;		_ConfigureModem
 32546 ;;		_ModemEvtParser
 32547 ;;		_GetSmsSm
 32548 ;;		_Mdm_RequestSmsData
 32549 ;;		_I2cSlv_SendI2cMsg
 32550 ;;		_I2cSlv_ReceiveI2cMsg
 32551 ;;		_RiSm
 32552 ;;		_Mdm_SendSmsData
 32553 ;;		_MdmHttp_InitGprsNetwork
 32554 ;;		_MdmHttp_GetMethod
 32555 ;;		_Alarm
 32556 ;; This function uses a non-reentrant model
 32557 ;;
 32558                           
 32559                           	psect	text153
 32560  006102                     __ptext153:
 32561                           	opt stack 0
 32562  006102                     _GenerateEvt:
 32563                           	opt stack 13
 32564                           
 32565                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 32566                           
 32567                           ; BSR set to: 0
 32568                           ;incstack = 0
 32569  006102  0E00               	movlw	0
 32570  006104  0100               	movlb	0	; () banked
 32571  006106  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 32572                           
 32573                           ; BSR set to: 0
 32574                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 32575  006108  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 32576  00610C  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 32577  006110  0E02               	movlw	2
 32578  006112  6EDF               	movwf	indf2,c
 32579                           
 32580                           ; BSR set to: 0
 32581                           ;os_ser.c: 83: EventStatus = EventSent;
 32582  006114  0E02               	movlw	2
 32583  006116  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 32584  006118  0012               	return	
 32585  00611A                     __end_of_GenerateEvt:
 32586                           	opt stack 0
 32587                           tosu	equ	0xFFF
 32588                           tosh	equ	0xFFE
 32589                           tosl	equ	0xFFD
 32590                           pclath	equ	0xFFA
 32591                           tblptru	equ	0xFF8
 32592                           tblptrh	equ	0xFF7
 32593                           tblptrl	equ	0xFF6
 32594                           tablat	equ	0xFF5
 32595                           prodh	equ	0xFF4
 32596                           prodl	equ	0xFF3
 32597                           intcon	equ	0xFF2
 32598                           intcon2	equ	0xFF1
 32599                           intcon3	equ	0xFF0
 32600                           indf0	equ	0xFEF
 32601                           postinc0	equ	0xFEE
 32602                           plusw0	equ	0xFEB
 32603                           fsr0h	equ	0xFEA
 32604                           fsr0l	equ	0xFE9
 32605                           wreg	equ	0xFE8
 32606                           indf1	equ	0xFE7
 32607                           postinc1	equ	0xFE6
 32608                           postdec1	equ	0xFE5
 32609                           plusw1	equ	0xFE3
 32610                           fsr1h	equ	0xFE2
 32611                           fsr1l	equ	0xFE1
 32612                           indf2	equ	0xFDF
 32613                           postinc2	equ	0xFDE
 32614                           postdec2	equ	0xFDD
 32615                           plusw2	equ	0xFDB
 32616                           fsr2h	equ	0xFDA
 32617                           fsr2l	equ	0xFD9
 32618                           status	equ	0xFD8
 32619                           
 32620 ;; *************** function _EnableReceiver *****************
 32621 ;; Defined at:
 32622 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32623 ;; Parameters:    Size  Location     Type
 32624 ;;		None
 32625 ;; Auto vars:     Size  Location     Type
 32626 ;;		None
 32627 ;; Return value:  Size  Location     Type
 32628 ;;                  1    wreg      void 
 32629 ;; Registers used:
 32630 ;;		status,2, status,0
 32631 ;; Tracked objects:
 32632 ;;		On entry : 0/0
 32633 ;;		On exit  : 0/0
 32634 ;;		Unchanged: 0/0
 32635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32640 ;;Total ram usage:        0 bytes
 32641 ;; Hardware stack levels used:    1
 32642 ;; Hardware stack levels required when called:   11
 32643 ;; This function calls:
 32644 ;;		Nothing
 32645 ;; This function is called by:
 32646 ;;		_I2c_ReadData
 32647 ;; This function uses a non-reentrant model
 32648 ;;
 32649                           
 32650                           	psect	text154
 32651  006286                     __ptext154:
 32652                           	opt stack 0
 32653  006286                     _EnableReceiver:
 32654                           	opt stack 14
 32655                           
 32656                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 32657                           
 32658                           ; BSR set to: 0
 32659                           ;incstack = 0
 32660  006286  8671               	bsf	3953,3,c	;volatile
 32661  006288  0012               	return		;funcret
 32662  00628A                     __end_of_EnableReceiver:
 32663                           	opt stack 0
 32664                           tosu	equ	0xFFF
 32665                           tosh	equ	0xFFE
 32666                           tosl	equ	0xFFD
 32667                           pclath	equ	0xFFA
 32668                           tblptru	equ	0xFF8
 32669                           tblptrh	equ	0xFF7
 32670                           tblptrl	equ	0xFF6
 32671                           tablat	equ	0xFF5
 32672                           prodh	equ	0xFF4
 32673                           prodl	equ	0xFF3
 32674                           intcon	equ	0xFF2
 32675                           intcon2	equ	0xFF1
 32676                           intcon3	equ	0xFF0
 32677                           indf0	equ	0xFEF
 32678                           postinc0	equ	0xFEE
 32679                           plusw0	equ	0xFEB
 32680                           fsr0h	equ	0xFEA
 32681                           fsr0l	equ	0xFE9
 32682                           wreg	equ	0xFE8
 32683                           indf1	equ	0xFE7
 32684                           postinc1	equ	0xFE6
 32685                           postdec1	equ	0xFE5
 32686                           plusw1	equ	0xFE3
 32687                           fsr1h	equ	0xFE2
 32688                           fsr1l	equ	0xFE1
 32689                           indf2	equ	0xFDF
 32690                           postinc2	equ	0xFDE
 32691                           postdec2	equ	0xFDD
 32692                           plusw2	equ	0xFDB
 32693                           fsr2h	equ	0xFDA
 32694                           fsr2l	equ	0xFD9
 32695                           status	equ	0xFD8
 32696                           
 32697 ;; *************** function _CheckTxStatus *****************
 32698 ;; Defined at:
 32699 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32700 ;; Parameters:    Size  Location     Type
 32701 ;;		None
 32702 ;; Auto vars:     Size  Location     Type
 32703 ;;		None
 32704 ;; Return value:  Size  Location     Type
 32705 ;;                  1    wreg      unsigned char 
 32706 ;; Registers used:
 32707 ;;		wreg, status,2, status,0
 32708 ;; Tracked objects:
 32709 ;;		On entry : 0/0
 32710 ;;		On exit  : 0/0
 32711 ;;		Unchanged: 0/0
 32712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32717 ;;Total ram usage:        0 bytes
 32718 ;; Hardware stack levels used:    1
 32719 ;; Hardware stack levels required when called:   11
 32720 ;; This function calls:
 32721 ;;		Nothing
 32722 ;; This function is called by:
 32723 ;;		_I2c_WriteData
 32724 ;;		_I2c_ReadData
 32725 ;; This function uses a non-reentrant model
 32726 ;;
 32727                           
 32728                           	psect	text155
 32729  006252                     __ptext155:
 32730                           	opt stack 0
 32731  006252                     _CheckTxStatus:
 32732                           	opt stack 14
 32733                           
 32734                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 32735                           
 32736                           ;incstack = 0
 32737  006252  4073               	rrncf	3955,w,c	;volatile
 32738  006254  42E8               	rrncf	wreg,f,c
 32739  006256  0B3F               	andlw	63
 32740  006258  0B01               	andlw	1
 32741  00625A  0012               	return	
 32742  00625C                     __end_of_CheckTxStatus:
 32743                           	opt stack 0
 32744                           tosu	equ	0xFFF
 32745                           tosh	equ	0xFFE
 32746                           tosl	equ	0xFFD
 32747                           pclath	equ	0xFFA
 32748                           tblptru	equ	0xFF8
 32749                           tblptrh	equ	0xFF7
 32750                           tblptrl	equ	0xFF6
 32751                           tablat	equ	0xFF5
 32752                           prodh	equ	0xFF4
 32753                           prodl	equ	0xFF3
 32754                           intcon	equ	0xFF2
 32755                           intcon2	equ	0xFF1
 32756                           intcon3	equ	0xFF0
 32757                           indf0	equ	0xFEF
 32758                           postinc0	equ	0xFEE
 32759                           plusw0	equ	0xFEB
 32760                           fsr0h	equ	0xFEA
 32761                           fsr0l	equ	0xFE9
 32762                           wreg	equ	0xFE8
 32763                           indf1	equ	0xFE7
 32764                           postinc1	equ	0xFE6
 32765                           postdec1	equ	0xFE5
 32766                           plusw1	equ	0xFE3
 32767                           fsr1h	equ	0xFE2
 32768                           fsr1l	equ	0xFE1
 32769                           indf2	equ	0xFDF
 32770                           postinc2	equ	0xFDE
 32771                           postdec2	equ	0xFDD
 32772                           plusw2	equ	0xFDB
 32773                           fsr2h	equ	0xFDA
 32774                           fsr2l	equ	0xFD9
 32775                           status	equ	0xFD8
 32776                           
 32777 ;; *************** function _CheckAckStatus *****************
 32778 ;; Defined at:
 32779 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32780 ;; Parameters:    Size  Location     Type
 32781 ;;		None
 32782 ;; Auto vars:     Size  Location     Type
 32783 ;;		None
 32784 ;; Return value:  Size  Location     Type
 32785 ;;                  1    wreg      unsigned char 
 32786 ;; Registers used:
 32787 ;;		wreg, status,2, status,0
 32788 ;; Tracked objects:
 32789 ;;		On entry : 0/0
 32790 ;;		On exit  : 0/0
 32791 ;;		Unchanged: 0/0
 32792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32797 ;;Total ram usage:        0 bytes
 32798 ;; Hardware stack levels used:    1
 32799 ;; Hardware stack levels required when called:   11
 32800 ;; This function calls:
 32801 ;;		Nothing
 32802 ;; This function is called by:
 32803 ;;		_I2c_WriteData
 32804 ;;		_I2c_ReadData
 32805 ;; This function uses a non-reentrant model
 32806 ;;
 32807                           
 32808                           	psect	text156
 32809  00625C                     __ptext156:
 32810                           	opt stack 0
 32811  00625C                     _CheckAckStatus:
 32812                           	opt stack 14
 32813                           
 32814                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 32815                           
 32816                           ;incstack = 0
 32817  00625C  4471               	rlncf	3953,w,c	;volatile
 32818  00625E  46E8               	rlncf	wreg,f,c
 32819  006260  0B03               	andlw	3
 32820  006262  0B01               	andlw	1
 32821  006264  0012               	return	
 32822  006266                     __end_of_CheckAckStatus:
 32823                           	opt stack 0
 32824                           tosu	equ	0xFFF
 32825                           tosh	equ	0xFFE
 32826                           tosl	equ	0xFFD
 32827                           pclath	equ	0xFFA
 32828                           tblptru	equ	0xFF8
 32829                           tblptrh	equ	0xFF7
 32830                           tblptrl	equ	0xFF6
 32831                           tablat	equ	0xFF5
 32832                           prodh	equ	0xFF4
 32833                           prodl	equ	0xFF3
 32834                           intcon	equ	0xFF2
 32835                           intcon2	equ	0xFF1
 32836                           intcon3	equ	0xFF0
 32837                           indf0	equ	0xFEF
 32838                           postinc0	equ	0xFEE
 32839                           plusw0	equ	0xFEB
 32840                           fsr0h	equ	0xFEA
 32841                           fsr0l	equ	0xFE9
 32842                           wreg	equ	0xFE8
 32843                           indf1	equ	0xFE7
 32844                           postinc1	equ	0xFE6
 32845                           postdec1	equ	0xFE5
 32846                           plusw1	equ	0xFE3
 32847                           fsr1h	equ	0xFE2
 32848                           fsr1l	equ	0xFE1
 32849                           indf2	equ	0xFDF
 32850                           postinc2	equ	0xFDE
 32851                           postdec2	equ	0xFDD
 32852                           plusw2	equ	0xFDB
 32853                           fsr2h	equ	0xFDA
 32854                           fsr2l	equ	0xFD9
 32855                           status	equ	0xFD8
 32856                           
 32857 ;; *************** function _LowPriorityIsr *****************
 32858 ;; Defined at:
 32859 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 32860 ;; Parameters:    Size  Location     Type
 32861 ;;		None
 32862 ;; Auto vars:     Size  Location     Type
 32863 ;;		None
 32864 ;; Return value:  Size  Location     Type
 32865 ;;                  1    wreg      void 
 32866 ;; Registers used:
 32867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32868 ;; Tracked objects:
 32869 ;;		On entry : 0/0
 32870 ;;		On exit  : 0/0
 32871 ;;		Unchanged: 0/0
 32872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32875 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32876 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32877 ;;Total ram usage:       21 bytes
 32878 ;; Hardware stack levels used:    1
 32879 ;; Hardware stack levels required when called:   10
 32880 ;; This function calls:
 32881 ;;		_Tmr_Tmr2Isr
 32882 ;; This function is called by:
 32883 ;;		Interrupt level 1
 32884 ;; This function uses a non-reentrant model
 32885 ;;
 32886                           
 32887                           	psect	intcodelo
 32888  000018                     __pintcodelo:
 32889                           	opt stack 0
 32890  000018                     _LowPriorityIsr:
 32891                           	opt stack 8
 32892                           
 32893                           ;incstack = 0
 32894  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 32895  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 32896  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 32897  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 32898  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 32899  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 32900  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 32901  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 32902  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 32903  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 32904  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 32905  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 32906  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 32907  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 32908  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 32909  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 32910  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 32911  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 32912  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 32913  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 32914  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 32915  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 32916                           
 32917                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 32918  00006E  B29E               	btfsc	3998,1,c	;volatile
 32919                           
 32920                           ;irq.c: 259: {
 32921                           ;irq.c: 261: Tmr_Tmr2Isr();
 32922  000070  EC71  F02F         	call	_Tmr_Tmr2Isr	;wreg free
 32923  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 32924  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 32925  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 32926  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 32927  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 32928  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 32929  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 32930  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 32931  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 32932  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 32933  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 32934  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 32935  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 32936  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 32937  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 32938  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 32939  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 32940  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 32941  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 32942  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 32943  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 32944  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 32945  0000CA  0010               	retfie	
 32946  0000CC                     __end_of_LowPriorityIsr:
 32947                           	opt stack 0
 32948                           tosu	equ	0xFFF
 32949                           tosh	equ	0xFFE
 32950                           tosl	equ	0xFFD
 32951                           pclatu	equ	0xFFB
 32952                           pclath	equ	0xFFA
 32953                           tblptru	equ	0xFF8
 32954                           tblptrh	equ	0xFF7
 32955                           tblptrl	equ	0xFF6
 32956                           tablat	equ	0xFF5
 32957                           prodh	equ	0xFF4
 32958                           prodl	equ	0xFF3
 32959                           intcon	equ	0xFF2
 32960                           intcon2	equ	0xFF1
 32961                           intcon3	equ	0xFF0
 32962                           indf0	equ	0xFEF
 32963                           postinc0	equ	0xFEE
 32964                           plusw0	equ	0xFEB
 32965                           fsr0h	equ	0xFEA
 32966                           fsr0l	equ	0xFE9
 32967                           wreg	equ	0xFE8
 32968                           indf1	equ	0xFE7
 32969                           postinc1	equ	0xFE6
 32970                           postdec1	equ	0xFE5
 32971                           plusw1	equ	0xFE3
 32972                           fsr1h	equ	0xFE2
 32973                           fsr1l	equ	0xFE1
 32974                           bsr	equ	0xFE0
 32975                           indf2	equ	0xFDF
 32976                           postinc2	equ	0xFDE
 32977                           postdec2	equ	0xFDD
 32978                           plusw2	equ	0xFDB
 32979                           fsr2h	equ	0xFDA
 32980                           fsr2l	equ	0xFD9
 32981                           status	equ	0xFD8
 32982                           
 32983 ;; *************** function _Tmr_Tmr2Isr *****************
 32984 ;; Defined at:
 32985 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 32986 ;; Parameters:    Size  Location     Type
 32987 ;;		None
 32988 ;; Auto vars:     Size  Location     Type
 32989 ;;		None
 32990 ;; Return value:  Size  Location     Type
 32991 ;;                  1    wreg      void 
 32992 ;; Registers used:
 32993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32994 ;; Tracked objects:
 32995 ;;		On entry : 0/0
 32996 ;;		On exit  : 0/0
 32997 ;;		Unchanged: 0/0
 32998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33003 ;;Total ram usage:        0 bytes
 33004 ;; Hardware stack levels used:    1
 33005 ;; Hardware stack levels required when called:    9
 33006 ;; This function calls:
 33007 ;;		Absolute function
 33008 ;;		_Sch_SchmIntService
 33009 ;; This function is called by:
 33010 ;;		_LowPriorityIsr
 33011 ;; This function uses a non-reentrant model
 33012 ;;
 33013                           
 33014                           	psect	text158
 33015  005EE2                     __ptext158:
 33016                           	opt stack 0
 33017  005EE2                     _Tmr_Tmr2Isr:
 33018                           	opt stack 8
 33019                           
 33020                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 33021                           
 33022                           ;incstack = 0
 33023  005EE2  929E               	bcf	3998,1,c	;volatile
 33024                           
 33025                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 33026  005EE4  0102               	movlb	2	; () banked
 33027  005EE6  51E9               	movf	_Tmr2IsrCallback& (0+255),w,b
 33028  005EE8  11EA               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 33029  005EEA  B4D8               	btfsc	status,2,c
 33030  005EEC  0012               	return	
 33031                           
 33032                           ; BSR set to: 2
 33033                           ;tmr_drv.c: 315: {
 33034                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 33035  005EEE  D801               	call	i1u1470_28
 33036  005EF0  0012               	return	
 33037  005EF2                     i1u1470_28:
 33038  005EF2  0005               	push	
 33039  005EF4  6EFA               	movwf	pclath,c
 33040  005EF6  51E9               	movf	_Tmr2IsrCallback& (0+255),w,b
 33041  005EF8  6EFD               	movwf	tosl,c
 33042  005EFA  51EA               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 33043  005EFC  6EFE               	movwf	tosh,c
 33044  005EFE  50F8               	movf	tblptru,w,c
 33045  005F00  6EFF               	movwf	tosu,c
 33046  005F02  50FA               	movf	pclath,w,c
 33047  005F04  0012               	return		;indir
 33048  005F06                     __end_of_Tmr_Tmr2Isr:
 33049                           	opt stack 0
 33050                           tosu	equ	0xFFF
 33051                           tosh	equ	0xFFE
 33052                           tosl	equ	0xFFD
 33053                           pclatu	equ	0xFFB
 33054                           pclath	equ	0xFFA
 33055                           tblptru	equ	0xFF8
 33056                           tblptrh	equ	0xFF7
 33057                           tblptrl	equ	0xFF6
 33058                           tablat	equ	0xFF5
 33059                           prodh	equ	0xFF4
 33060                           prodl	equ	0xFF3
 33061                           intcon	equ	0xFF2
 33062                           intcon2	equ	0xFF1
 33063                           intcon3	equ	0xFF0
 33064                           indf0	equ	0xFEF
 33065                           postinc0	equ	0xFEE
 33066                           plusw0	equ	0xFEB
 33067                           fsr0h	equ	0xFEA
 33068                           fsr0l	equ	0xFE9
 33069                           wreg	equ	0xFE8
 33070                           indf1	equ	0xFE7
 33071                           postinc1	equ	0xFE6
 33072                           postdec1	equ	0xFE5
 33073                           plusw1	equ	0xFE3
 33074                           fsr1h	equ	0xFE2
 33075                           fsr1l	equ	0xFE1
 33076                           bsr	equ	0xFE0
 33077                           indf2	equ	0xFDF
 33078                           postinc2	equ	0xFDE
 33079                           postdec2	equ	0xFDD
 33080                           plusw2	equ	0xFDB
 33081                           fsr2h	equ	0xFDA
 33082                           fsr2l	equ	0xFD9
 33083                           status	equ	0xFD8
 33084                           
 33085 ;; *************** function _Sch_SchmIntService *****************
 33086 ;; Defined at:
 33087 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33088 ;; Parameters:    Size  Location     Type
 33089 ;;		None
 33090 ;; Auto vars:     Size  Location     Type
 33091 ;;		None
 33092 ;; Return value:  Size  Location     Type
 33093 ;;                  1    wreg      void 
 33094 ;; Registers used:
 33095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33096 ;; Tracked objects:
 33097 ;;		On entry : 0/0
 33098 ;;		On exit  : 0/0
 33099 ;;		Unchanged: 0/0
 33100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33105 ;;Total ram usage:        0 bytes
 33106 ;; Hardware stack levels used:    1
 33107 ;; Hardware stack levels required when called:    8
 33108 ;; This function calls:
 33109 ;;		_OsAlrm_ProcessOsAlarms
 33110 ;;		_UpdateOsCounters
 33111 ;;		_UpdateSchFlag
 33112 ;; This function is called by:
 33113 ;;		_SystemInit
 33114 ;;		_Tmr_Tmr2Isr
 33115 ;; This function uses a non-reentrant model
 33116 ;;
 33117                           
 33118                           	psect	text159
 33119  00620C                     __ptext159:
 33120                           	opt stack 0
 33121  00620C                     _Sch_SchmIntService:
 33122                           	opt stack 8
 33123                           
 33124                           ;os_sched.c: 217: UpdateSchFlag();
 33125                           
 33126                           ;incstack = 0
 33127  00620C  EC27  F030         	call	_UpdateSchFlag	;wreg free
 33128                           
 33129                           ;os_sched.c: 219: UpdateOsCounters();
 33130  006210  ECF6  F030         	call	_UpdateOsCounters	;wreg free
 33131                           
 33132                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 33133  006214  EC2C  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 33134  006218  0012               	return		;funcret
 33135  00621A                     __end_of_Sch_SchmIntService:
 33136                           	opt stack 0
 33137                           tosu	equ	0xFFF
 33138                           tosh	equ	0xFFE
 33139                           tosl	equ	0xFFD
 33140                           pclatu	equ	0xFFB
 33141                           pclath	equ	0xFFA
 33142                           tblptru	equ	0xFF8
 33143                           tblptrh	equ	0xFF7
 33144                           tblptrl	equ	0xFF6
 33145                           tablat	equ	0xFF5
 33146                           prodh	equ	0xFF4
 33147                           prodl	equ	0xFF3
 33148                           intcon	equ	0xFF2
 33149                           intcon2	equ	0xFF1
 33150                           intcon3	equ	0xFF0
 33151                           indf0	equ	0xFEF
 33152                           postinc0	equ	0xFEE
 33153                           plusw0	equ	0xFEB
 33154                           fsr0h	equ	0xFEA
 33155                           fsr0l	equ	0xFE9
 33156                           wreg	equ	0xFE8
 33157                           indf1	equ	0xFE7
 33158                           postinc1	equ	0xFE6
 33159                           postdec1	equ	0xFE5
 33160                           plusw1	equ	0xFE3
 33161                           fsr1h	equ	0xFE2
 33162                           fsr1l	equ	0xFE1
 33163                           bsr	equ	0xFE0
 33164                           indf2	equ	0xFDF
 33165                           postinc2	equ	0xFDE
 33166                           postdec2	equ	0xFDD
 33167                           plusw2	equ	0xFDB
 33168                           fsr2h	equ	0xFDA
 33169                           fsr2l	equ	0xFD9
 33170                           status	equ	0xFD8
 33171                           
 33172 ;; *************** function _UpdateSchFlag *****************
 33173 ;; Defined at:
 33174 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33175 ;; Parameters:    Size  Location     Type
 33176 ;;		None
 33177 ;; Auto vars:     Size  Location     Type
 33178 ;;		None
 33179 ;; Return value:  Size  Location     Type
 33180 ;;                  1    wreg      void 
 33181 ;; Registers used:
 33182 ;;		wreg, status,2, status,0
 33183 ;; Tracked objects:
 33184 ;;		On entry : 0/0
 33185 ;;		On exit  : 0/0
 33186 ;;		Unchanged: 0/0
 33187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33192 ;;Total ram usage:        0 bytes
 33193 ;; Hardware stack levels used:    1
 33194 ;; Hardware stack levels required when called:    4
 33195 ;; This function calls:
 33196 ;;		Nothing
 33197 ;; This function is called by:
 33198 ;;		_Sch_SchmIntService
 33199 ;; This function uses a non-reentrant model
 33200 ;;
 33201                           
 33202                           	psect	text160
 33203  00604E                     __ptext160:
 33204                           	opt stack 0
 33205  00604E                     _UpdateSchFlag:
 33206                           	opt stack 11
 33207                           
 33208                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 33209                           ;os_sched.c: 138: InterruptCounter++;
 33210                           
 33211                           ;incstack = 0
 33212  00604E  0102               	movlb	2	; () banked
 33213  006050  4BDB               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 33214  006052  2BDC               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 33215                           
 33216                           ; BSR set to: 2
 33217                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 33218  006054  51DB               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 33219  006056  11DC               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 33220  006058  B4D8               	btfsc	status,2,c
 33221  00605A  0012               	return	
 33222                           
 33223                           ; BSR set to: 2
 33224                           ;os_sched.c: 141: {
 33225                           ;os_sched.c: 143: InterruptCounter = 0;
 33226  00605C  0E00               	movlw	0
 33227  00605E  6FDC               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 33228  006060  0E00               	movlw	0
 33229  006062  6FDB               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 33230                           
 33231                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 33232  006064  0E00               	movlw	0
 33233  006066  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 33234  006068  0012               	return	
 33235  00606A                     __end_of_UpdateSchFlag:
 33236                           	opt stack 0
 33237                           tosu	equ	0xFFF
 33238                           tosh	equ	0xFFE
 33239                           tosl	equ	0xFFD
 33240                           pclatu	equ	0xFFB
 33241                           pclath	equ	0xFFA
 33242                           tblptru	equ	0xFF8
 33243                           tblptrh	equ	0xFF7
 33244                           tblptrl	equ	0xFF6
 33245                           tablat	equ	0xFF5
 33246                           prodh	equ	0xFF4
 33247                           prodl	equ	0xFF3
 33248                           intcon	equ	0xFF2
 33249                           intcon2	equ	0xFF1
 33250                           intcon3	equ	0xFF0
 33251                           indf0	equ	0xFEF
 33252                           postinc0	equ	0xFEE
 33253                           plusw0	equ	0xFEB
 33254                           fsr0h	equ	0xFEA
 33255                           fsr0l	equ	0xFE9
 33256                           wreg	equ	0xFE8
 33257                           indf1	equ	0xFE7
 33258                           postinc1	equ	0xFE6
 33259                           postdec1	equ	0xFE5
 33260                           plusw1	equ	0xFE3
 33261                           fsr1h	equ	0xFE2
 33262                           fsr1l	equ	0xFE1
 33263                           bsr	equ	0xFE0
 33264                           indf2	equ	0xFDF
 33265                           postinc2	equ	0xFDE
 33266                           postdec2	equ	0xFDD
 33267                           plusw2	equ	0xFDB
 33268                           fsr2h	equ	0xFDA
 33269                           fsr2l	equ	0xFD9
 33270                           status	equ	0xFD8
 33271                           
 33272 ;; *************** function _UpdateOsCounters *****************
 33273 ;; Defined at:
 33274 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33275 ;; Parameters:    Size  Location     Type
 33276 ;;		None
 33277 ;; Auto vars:     Size  Location     Type
 33278 ;;		None
 33279 ;; Return value:  Size  Location     Type
 33280 ;;                  1    wreg      void 
 33281 ;; Registers used:
 33282 ;;		wreg, status,2, status,0
 33283 ;; Tracked objects:
 33284 ;;		On entry : 0/0
 33285 ;;		On exit  : 0/0
 33286 ;;		Unchanged: 0/0
 33287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33292 ;;Total ram usage:        0 bytes
 33293 ;; Hardware stack levels used:    1
 33294 ;; Hardware stack levels required when called:    4
 33295 ;; This function calls:
 33296 ;;		Nothing
 33297 ;; This function is called by:
 33298 ;;		_Sch_SchmIntService
 33299 ;; This function uses a non-reentrant model
 33300 ;;
 33301                           
 33302                           	psect	text161
 33303  0061EC                     __ptext161:
 33304                           	opt stack 0
 33305  0061EC                     _UpdateOsCounters:
 33306                           	opt stack 11
 33307                           
 33308                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 33309                           
 33310                           ; BSR set to: 2
 33311                           ;incstack = 0
 33312  0061EC  0E01               	movlw	1
 33313  0061EE  0103               	movlb	3	; () banked
 33314  0061F0  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 33315  0061F2  0E00               	movlw	0
 33316  0061F4  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 33317  0061F6  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 33318  0061F8  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 33319                           
 33320                           ; BSR set to: 3
 33321  0061FA  0012               	return		;funcret
 33322  0061FC                     __end_of_UpdateOsCounters:
 33323                           	opt stack 0
 33324                           tosu	equ	0xFFF
 33325                           tosh	equ	0xFFE
 33326                           tosl	equ	0xFFD
 33327                           pclatu	equ	0xFFB
 33328                           pclath	equ	0xFFA
 33329                           tblptru	equ	0xFF8
 33330                           tblptrh	equ	0xFF7
 33331                           tblptrl	equ	0xFF6
 33332                           tablat	equ	0xFF5
 33333                           prodh	equ	0xFF4
 33334                           prodl	equ	0xFF3
 33335                           intcon	equ	0xFF2
 33336                           intcon2	equ	0xFF1
 33337                           intcon3	equ	0xFF0
 33338                           indf0	equ	0xFEF
 33339                           postinc0	equ	0xFEE
 33340                           plusw0	equ	0xFEB
 33341                           fsr0h	equ	0xFEA
 33342                           fsr0l	equ	0xFE9
 33343                           wreg	equ	0xFE8
 33344                           indf1	equ	0xFE7
 33345                           postinc1	equ	0xFE6
 33346                           postdec1	equ	0xFE5
 33347                           plusw1	equ	0xFE3
 33348                           fsr1h	equ	0xFE2
 33349                           fsr1l	equ	0xFE1
 33350                           bsr	equ	0xFE0
 33351                           indf2	equ	0xFDF
 33352                           postinc2	equ	0xFDE
 33353                           postdec2	equ	0xFDD
 33354                           plusw2	equ	0xFDB
 33355                           fsr2h	equ	0xFDA
 33356                           fsr2l	equ	0xFD9
 33357                           status	equ	0xFD8
 33358                           
 33359 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 33360 ;; Defined at:
 33361 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33362 ;; Parameters:    Size  Location     Type
 33363 ;;		None
 33364 ;; Auto vars:     Size  Location     Type
 33365 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 33366 ;; Return value:  Size  Location     Type
 33367 ;;                  1    wreg      void 
 33368 ;; Registers used:
 33369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33370 ;; Tracked objects:
 33371 ;;		On entry : 0/0
 33372 ;;		On exit  : 0/0
 33373 ;;		Unchanged: 0/0
 33374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33376 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33377 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33378 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33379 ;;Total ram usage:       10 bytes
 33380 ;; Hardware stack levels used:    1
 33381 ;; Hardware stack levels required when called:    7
 33382 ;; This function calls:
 33383 ;;		_I2cDummyTx
 33384 ;;		_OsAlrm_ClearOsAlarm
 33385 ;;		i1___wmul
 33386 ;; This function is called by:
 33387 ;;		_Sch_SchmIntService
 33388 ;; This function uses a non-reentrant model
 33389 ;;
 33390                           
 33391                           	psect	text162
 33392  002458                     __ptext162:
 33393                           	opt stack 0
 33394  002458                     _OsAlrm_ProcessOsAlarms:
 33395                           	opt stack 8
 33396                           
 33397                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 33398                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 33399                           
 33400                           ; BSR set to: 3
 33401                           ;incstack = 0
 33402  002458  0E00               	movlw	0
 33403  00245A  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 33404  00245C  0E00               	movlw	0
 33405  00245E  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 33406  002460  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 33407  002462  E105               	bnz	i1u1442_20
 33408  002464  0E14               	movlw	20
 33409  002466  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 33410  002468  B0D8               	btfsc	status,0,c
 33411  00246A  0012               	return	
 33412  00246C  D001               	goto	i1l742
 33413  00246E                     i1u1442_20:
 33414  00246E  0012               	return	
 33415  002470                     i1l742:
 33416                           
 33417                           ;os_alarms.c: 121: {
 33418                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 33419  002470  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33420  002474  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33421  002478  0E00               	movlw	0
 33422  00247A  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33423  00247C  0E0B               	movlw	11
 33424  00247E  6E1B               	movwf	i1___wmul@multiplicand,c
 33425  002480  EC28  F02F         	call	i1___wmul	;wreg free
 33426  002484  0E00               	movlw	low _OsAlarms
 33427  002486  2419               	addwf	?i1___wmul,w,c
 33428  002488  6ED9               	movwf	fsr2l,c
 33429  00248A  0E06               	movlw	high _OsAlarms
 33430  00248C  201A               	addwfc	?i1___wmul+1,w,c
 33431  00248E  6EDA               	movwf	fsr2h,c
 33432  002490  04DE               	decf	postinc2,w,c
 33433  002492  A4D8               	btfss	status,2,c
 33434  002494  D086               	goto	i1u1446_29
 33435                           
 33436                           ;os_alarms.c: 124: {
 33437                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 33438  002496  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33439  00249A  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33440  00249E  0E00               	movlw	0
 33441  0024A0  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33442  0024A2  0E0B               	movlw	11
 33443  0024A4  6E1B               	movwf	i1___wmul@multiplicand,c
 33444  0024A6  EC28  F02F         	call	i1___wmul	;wreg free
 33445  0024AA  0E01               	movlw	1
 33446  0024AC  2619               	addwf	?i1___wmul,f,c
 33447  0024AE  0E00               	movlw	0
 33448  0024B0  221A               	addwfc	?i1___wmul+1,f,c
 33449  0024B2  0E00               	movlw	low _OsAlarms
 33450  0024B4  2419               	addwf	?i1___wmul,w,c
 33451  0024B6  6ED9               	movwf	fsr2l,c
 33452  0024B8  0E06               	movlw	high _OsAlarms
 33453  0024BA  201A               	addwfc	?i1___wmul+1,w,c
 33454  0024BC  6EDA               	movwf	fsr2h,c
 33455  0024BE  2ADE               	incf	postinc2,f,c
 33456  0024C0  0E00               	movlw	0
 33457  0024C2  22DE               	addwfc	postinc2,f,c
 33458  0024C4  22DE               	addwfc	postinc2,f,c
 33459  0024C6  22DE               	addwfc	postinc2,f,c
 33460                           
 33461                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 33462  0024C8  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33463  0024CC  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33464  0024D0  0E00               	movlw	0
 33465  0024D2  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33466  0024D4  0E0B               	movlw	11
 33467  0024D6  6E1B               	movwf	i1___wmul@multiplicand,c
 33468  0024D8  EC28  F02F         	call	i1___wmul	;wreg free
 33469  0024DC  0E05               	movlw	5
 33470  0024DE  2619               	addwf	?i1___wmul,f,c
 33471  0024E0  0E00               	movlw	0
 33472  0024E2  221A               	addwfc	?i1___wmul+1,f,c
 33473  0024E4  0E00               	movlw	low _OsAlarms
 33474  0024E6  2419               	addwf	?i1___wmul,w,c
 33475  0024E8  6ED9               	movwf	fsr2l,c
 33476  0024EA  0E06               	movlw	high _OsAlarms
 33477  0024EC  201A               	addwfc	?i1___wmul+1,w,c
 33478  0024EE  6EDA               	movwf	fsr2h,c
 33479  0024F0  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33480  0024F4  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33481  0024F8  0E00               	movlw	0
 33482  0024FA  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33483  0024FC  0E0B               	movlw	11
 33484  0024FE  6E1B               	movwf	i1___wmul@multiplicand,c
 33485  002500  EC28  F02F         	call	i1___wmul	;wreg free
 33486  002504  0E01               	movlw	1
 33487  002506  2619               	addwf	?i1___wmul,f,c
 33488  002508  0E00               	movlw	0
 33489  00250A  221A               	addwfc	?i1___wmul+1,f,c
 33490  00250C  0E00               	movlw	low _OsAlarms
 33491  00250E  2419               	addwf	?i1___wmul,w,c
 33492  002510  6EE1               	movwf	fsr1l,c
 33493  002512  0E06               	movlw	high _OsAlarms
 33494  002514  201A               	addwfc	?i1___wmul+1,w,c
 33495  002516  6EE2               	movwf	fsr1h,c
 33496  002518  50DE               	movf	postinc2,w,c
 33497  00251A  5CE6               	subwf	postinc1,w,c
 33498  00251C  50DE               	movf	postinc2,w,c
 33499  00251E  58E6               	subwfb	postinc1,w,c
 33500  002520  50DE               	movf	postinc2,w,c
 33501  002522  58E6               	subwfb	postinc1,w,c
 33502  002524  50DE               	movf	postinc2,w,c
 33503  002526  58E6               	subwfb	postinc1,w,c
 33504  002528  A0D8               	btfss	status,0,c
 33505  00252A  D03B               	goto	i1u1446_29
 33506                           
 33507                           ;os_alarms.c: 129: {
 33508                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 33509  00252C  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 33510  00252E  EC91  F029         	call	_OsAlrm_ClearOsAlarm
 33511                           
 33512                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 33513  002532  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33514  002536  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33515  00253A  0E00               	movlw	0
 33516  00253C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33517  00253E  0E0B               	movlw	11
 33518  002540  6E1B               	movwf	i1___wmul@multiplicand,c
 33519  002542  EC28  F02F         	call	i1___wmul	;wreg free
 33520  002546  0E09               	movlw	9
 33521  002548  2619               	addwf	?i1___wmul,f,c
 33522  00254A  0E00               	movlw	0
 33523  00254C  221A               	addwfc	?i1___wmul+1,f,c
 33524  00254E  0E00               	movlw	low _OsAlarms
 33525  002550  2419               	addwf	?i1___wmul,w,c
 33526  002552  6ED9               	movwf	fsr2l,c
 33527  002554  0E06               	movlw	high _OsAlarms
 33528  002556  201A               	addwfc	?i1___wmul+1,w,c
 33529  002558  6EDA               	movwf	fsr2h,c
 33530  00255A  50DE               	movf	postinc2,w,c
 33531  00255C  10DE               	iorwf	postinc2,w,c
 33532  00255E  B4D8               	btfsc	status,2,c
 33533  002560  D020               	goto	i1u1446_29
 33534                           
 33535                           ;os_alarms.c: 134: {
 33536                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 33537  002562  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33538  002566  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33539  00256A  0E00               	movlw	0
 33540  00256C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33541  00256E  0E0B               	movlw	11
 33542  002570  6E1B               	movwf	i1___wmul@multiplicand,c
 33543  002572  EC28  F02F         	call	i1___wmul	;wreg free
 33544  002576  0E09               	movlw	9
 33545  002578  2619               	addwf	?i1___wmul,f,c
 33546  00257A  0E00               	movlw	0
 33547  00257C  221A               	addwfc	?i1___wmul+1,f,c
 33548  00257E  0E00               	movlw	low _OsAlarms
 33549  002580  2419               	addwf	?i1___wmul,w,c
 33550  002582  6ED9               	movwf	fsr2l,c
 33551  002584  0E06               	movlw	high _OsAlarms
 33552  002586  201A               	addwfc	?i1___wmul+1,w,c
 33553  002588  6EDA               	movwf	fsr2h,c
 33554  00258A  D801               	call	i1u1446_28
 33555  00258C  D00A               	goto	i1u1446_29
 33556  00258E                     i1u1446_28:
 33557  00258E  0005               	push	
 33558  002590  6EFA               	movwf	pclath,c
 33559  002592  50DE               	movf	postinc2,w,c
 33560  002594  6EFD               	movwf	tosl,c
 33561  002596  50DE               	movf	postinc2,w,c
 33562  002598  6EFE               	movwf	tosh,c
 33563  00259A  50F8               	movf	tblptru,w,c
 33564  00259C  6EFF               	movwf	tosu,c
 33565  00259E  50FA               	movf	pclath,w,c
 33566  0025A0  0012               	return		;indir
 33567  0025A2                     i1u1446_29:
 33568  0025A2  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 33569  0025A4  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 33570  0025A6  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 33571  0025A8  E101               	bnz	i1l747
 33572  0025AA  D75C               	goto	L68
 33573  0025AC                     i1l747:
 33574  0025AC  0012               	return		;funcret
 33575  0025AE                     __end_of_OsAlrm_ProcessOsAlarms:
 33576                           	opt stack 0
 33577                           tosu	equ	0xFFF
 33578                           tosh	equ	0xFFE
 33579                           tosl	equ	0xFFD
 33580                           pclatu	equ	0xFFB
 33581                           pclath	equ	0xFFA
 33582                           tblptru	equ	0xFF8
 33583                           tblptrh	equ	0xFF7
 33584                           tblptrl	equ	0xFF6
 33585                           tablat	equ	0xFF5
 33586                           prodh	equ	0xFF4
 33587                           prodl	equ	0xFF3
 33588                           intcon	equ	0xFF2
 33589                           intcon2	equ	0xFF1
 33590                           intcon3	equ	0xFF0
 33591                           indf0	equ	0xFEF
 33592                           postinc0	equ	0xFEE
 33593                           plusw0	equ	0xFEB
 33594                           fsr0h	equ	0xFEA
 33595                           fsr0l	equ	0xFE9
 33596                           wreg	equ	0xFE8
 33597                           indf1	equ	0xFE7
 33598                           postinc1	equ	0xFE6
 33599                           postdec1	equ	0xFE5
 33600                           plusw1	equ	0xFE3
 33601                           fsr1h	equ	0xFE2
 33602                           fsr1l	equ	0xFE1
 33603                           bsr	equ	0xFE0
 33604                           indf2	equ	0xFDF
 33605                           postinc2	equ	0xFDE
 33606                           postdec2	equ	0xFDD
 33607                           plusw2	equ	0xFDB
 33608                           fsr2h	equ	0xFDA
 33609                           fsr2l	equ	0xFD9
 33610                           status	equ	0xFD8
 33611                           
 33612 ;; *************** function i1___wmul *****************
 33613 ;; Defined at:
 33614 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 33615 ;; Parameters:    Size  Location     Type
 33616 ;;  multiplier      2   24[COMRAM] unsigned int 
 33617 ;;  multiplicand    2   26[COMRAM] unsigned int 
 33618 ;; Auto vars:     Size  Location     Type
 33619 ;;  __wmul          2   28[COMRAM] unsigned int 
 33620 ;; Return value:  Size  Location     Type
 33621 ;;                  2   24[COMRAM] unsigned int 
 33622 ;; Registers used:
 33623 ;;		wreg, status,2, status,0, prodl, prodh
 33624 ;; Tracked objects:
 33625 ;;		On entry : 0/0
 33626 ;;		On exit  : 0/0
 33627 ;;		Unchanged: 0/0
 33628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33629 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33632 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33633 ;;Total ram usage:        6 bytes
 33634 ;; Hardware stack levels used:    1
 33635 ;; Hardware stack levels required when called:    4
 33636 ;; This function calls:
 33637 ;;		Nothing
 33638 ;; This function is called by:
 33639 ;;		_OsAlrm_ProcessOsAlarms
 33640 ;; This function uses a non-reentrant model
 33641 ;;
 33642                           
 33643                           	psect	text163
 33644  005E50                     __ptext163:
 33645                           	opt stack 0
 33646  005E50                     i1___wmul:
 33647                           	opt stack 10
 33648                           
 33649                           ;incstack = 0
 33650  005E50  5019               	movf	i1___wmul@multiplier,w,c
 33651  005E52  021B               	mulwf	i1___wmul@multiplicand,c
 33652  005E54  CFF3 F01D          	movff	prodl,i1___wmul@product
 33653  005E58  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 33654  005E5C  5019               	movf	i1___wmul@multiplier,w,c
 33655  005E5E  021C               	mulwf	i1___wmul@multiplicand+1,c
 33656  005E60  50F3               	movf	prodl,w,c
 33657  005E62  261E               	addwf	i1___wmul@product+1,f,c
 33658  005E64  501A               	movf	i1___wmul@multiplier+1,w,c
 33659  005E66  021B               	mulwf	i1___wmul@multiplicand,c
 33660  005E68  50F3               	movf	prodl,w,c
 33661  005E6A  261E               	addwf	i1___wmul@product+1,f,c
 33662  005E6C  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 33663  005E70  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 33664  005E74  0012               	return	
 33665  005E76                     __end_ofi1___wmul:
 33666                           	opt stack 0
 33667                           tosu	equ	0xFFF
 33668                           tosh	equ	0xFFE
 33669                           tosl	equ	0xFFD
 33670                           pclatu	equ	0xFFB
 33671                           pclath	equ	0xFFA
 33672                           tblptru	equ	0xFF8
 33673                           tblptrh	equ	0xFF7
 33674                           tblptrl	equ	0xFF6
 33675                           tablat	equ	0xFF5
 33676                           prodh	equ	0xFF4
 33677                           prodl	equ	0xFF3
 33678                           intcon	equ	0xFF2
 33679                           intcon2	equ	0xFF1
 33680                           intcon3	equ	0xFF0
 33681                           indf0	equ	0xFEF
 33682                           postinc0	equ	0xFEE
 33683                           plusw0	equ	0xFEB
 33684                           fsr0h	equ	0xFEA
 33685                           fsr0l	equ	0xFE9
 33686                           wreg	equ	0xFE8
 33687                           indf1	equ	0xFE7
 33688                           postinc1	equ	0xFE6
 33689                           postdec1	equ	0xFE5
 33690                           plusw1	equ	0xFE3
 33691                           fsr1h	equ	0xFE2
 33692                           fsr1l	equ	0xFE1
 33693                           bsr	equ	0xFE0
 33694                           indf2	equ	0xFDF
 33695                           postinc2	equ	0xFDE
 33696                           postdec2	equ	0xFDD
 33697                           plusw2	equ	0xFDB
 33698                           fsr2h	equ	0xFDA
 33699                           fsr2l	equ	0xFD9
 33700                           status	equ	0xFD8
 33701                           
 33702 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 33703 ;; Defined at:
 33704 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33705 ;; Parameters:    Size  Location     Type
 33706 ;;  OsAlarmId       1    wreg     unsigned char 
 33707 ;; Auto vars:     Size  Location     Type
 33708 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 33709 ;; Return value:  Size  Location     Type
 33710 ;;                  1    wreg      void 
 33711 ;; Registers used:
 33712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33713 ;; Tracked objects:
 33714 ;;		On entry : 0/0
 33715 ;;		On exit  : 0/0
 33716 ;;		Unchanged: 0/0
 33717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33722 ;;Total ram usage:        1 bytes
 33723 ;; Hardware stack levels used:    1
 33724 ;; Hardware stack levels required when called:    4
 33725 ;; This function calls:
 33726 ;;		Nothing
 33727 ;; This function is called by:
 33728 ;;		_OsAlrm_ProcessOsAlarms
 33729 ;; This function uses a non-reentrant model
 33730 ;;
 33731                           
 33732                           	psect	text164
 33733  005322                     __ptext164:
 33734                           	opt stack 0
 33735  005322                     _OsAlrm_ClearOsAlarm:
 33736                           	opt stack 10
 33737                           
 33738                           ;incstack = 0
 33739                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 33740  005322  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 33741                           
 33742                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 33743  005324  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33744  005326  0D0B               	mullw	11
 33745  005328  0E00               	movlw	low _OsAlarms
 33746  00532A  24F3               	addwf	prodl,w,c
 33747  00532C  6ED9               	movwf	fsr2l,c
 33748  00532E  0E06               	movlw	high _OsAlarms
 33749  005330  20F4               	addwfc	prodh,w,c
 33750  005332  6EDA               	movwf	fsr2h,c
 33751  005334  0E00               	movlw	0
 33752  005336  6EDF               	movwf	indf2,c
 33753                           
 33754                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 33755  005338  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33756  00533A  0D0B               	mullw	11
 33757  00533C  0E01               	movlw	1
 33758  00533E  26F3               	addwf	prodl,f,c
 33759  005340  0E00               	movlw	0
 33760  005342  22F4               	addwfc	prodh,f,c
 33761  005344  0E00               	movlw	low _OsAlarms
 33762  005346  24F3               	addwf	prodl,w,c
 33763  005348  6ED9               	movwf	fsr2l,c
 33764  00534A  0E06               	movlw	high _OsAlarms
 33765  00534C  20F4               	addwfc	prodh,w,c
 33766  00534E  6EDA               	movwf	fsr2h,c
 33767  005350  6ADE               	clrf	postinc2,c
 33768  005352  6ADE               	clrf	postinc2,c
 33769  005354  6ADE               	clrf	postinc2,c
 33770  005356  6ADD               	clrf	postdec2,c
 33771                           
 33772                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 33773  005358  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33774  00535A  0D0B               	mullw	11
 33775  00535C  0E05               	movlw	5
 33776  00535E  26F3               	addwf	prodl,f,c
 33777  005360  0E00               	movlw	0
 33778  005362  22F4               	addwfc	prodh,f,c
 33779  005364  0E00               	movlw	low _OsAlarms
 33780  005366  24F3               	addwf	prodl,w,c
 33781  005368  6ED9               	movwf	fsr2l,c
 33782  00536A  0E06               	movlw	high _OsAlarms
 33783  00536C  20F4               	addwfc	prodh,w,c
 33784  00536E  6EDA               	movwf	fsr2h,c
 33785  005370  6ADE               	clrf	postinc2,c
 33786  005372  6ADE               	clrf	postinc2,c
 33787  005374  6ADE               	clrf	postinc2,c
 33788  005376  6ADD               	clrf	postdec2,c
 33789  005378  0012               	return		;funcret
 33790  00537A                     __end_of_OsAlrm_ClearOsAlarm:
 33791                           	opt stack 0
 33792                           tosu	equ	0xFFF
 33793                           tosh	equ	0xFFE
 33794                           tosl	equ	0xFFD
 33795                           pclatu	equ	0xFFB
 33796                           pclath	equ	0xFFA
 33797                           tblptru	equ	0xFF8
 33798                           tblptrh	equ	0xFF7
 33799                           tblptrl	equ	0xFF6
 33800                           tablat	equ	0xFF5
 33801                           prodh	equ	0xFF4
 33802                           prodl	equ	0xFF3
 33803                           intcon	equ	0xFF2
 33804                           intcon2	equ	0xFF1
 33805                           intcon3	equ	0xFF0
 33806                           indf0	equ	0xFEF
 33807                           postinc0	equ	0xFEE
 33808                           plusw0	equ	0xFEB
 33809                           fsr0h	equ	0xFEA
 33810                           fsr0l	equ	0xFE9
 33811                           wreg	equ	0xFE8
 33812                           indf1	equ	0xFE7
 33813                           postinc1	equ	0xFE6
 33814                           postdec1	equ	0xFE5
 33815                           plusw1	equ	0xFE3
 33816                           fsr1h	equ	0xFE2
 33817                           fsr1l	equ	0xFE1
 33818                           bsr	equ	0xFE0
 33819                           indf2	equ	0xFDF
 33820                           postinc2	equ	0xFDE
 33821                           postdec2	equ	0xFDD
 33822                           plusw2	equ	0xFDB
 33823                           fsr2h	equ	0xFDA
 33824                           fsr2l	equ	0xFD9
 33825                           status	equ	0xFD8
 33826                           
 33827 ;; *************** function _I2cDummyTx *****************
 33828 ;; Defined at:
 33829 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33830 ;; Parameters:    Size  Location     Type
 33831 ;;		None
 33832 ;; Auto vars:     Size  Location     Type
 33833 ;;		None
 33834 ;; Return value:  Size  Location     Type
 33835 ;;                  1    wreg      void 
 33836 ;; Registers used:
 33837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33838 ;; Tracked objects:
 33839 ;;		On entry : 0/0
 33840 ;;		On exit  : 0/0
 33841 ;;		Unchanged: 0/0
 33842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33847 ;;Total ram usage:        0 bytes
 33848 ;; Hardware stack levels used:    1
 33849 ;; Hardware stack levels required when called:    6
 33850 ;; This function calls:
 33851 ;;		i1_I2cSlv_SendI2cMsg
 33852 ;; This function is called by:
 33853 ;;		_I2cSlv_MainTask
 33854 ;;		_OsAlrm_ProcessOsAlarms
 33855 ;; This function uses a non-reentrant model
 33856 ;;
 33857                           
 33858                           	psect	text165
 33859  00606A                     __ptext165:
 33860                           	opt stack 0
 33861  00606A                     _I2cDummyTx:
 33862                           	opt stack 8
 33863                           
 33864                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 33865                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 33866                           
 33867                           ;incstack = 0
 33868  00606A  0EFD               	movlw	low I2cDummyTx@DummyBuffer
 33869  00606C  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 33870  00606E  0E01               	movlw	high I2cDummyTx@DummyBuffer
 33871  006070  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 33872  006072  0E00               	movlw	0
 33873  006074  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 33874  006076  0E01               	movlw	1
 33875  006078  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 33876  00607A  ECA7  F02D         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 33877                           
 33878                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 33879  00607E  0E01               	movlw	1
 33880  006080  0101               	movlb	1	; () banked
 33881  006082  6FE7               	movwf	_I2cBusStatus& (0+255),b
 33882                           
 33883                           ; BSR set to: 1
 33884  006084  0012               	return		;funcret
 33885  006086                     __end_of_I2cDummyTx:
 33886                           	opt stack 0
 33887                           tosu	equ	0xFFF
 33888                           tosh	equ	0xFFE
 33889                           tosl	equ	0xFFD
 33890                           pclatu	equ	0xFFB
 33891                           pclath	equ	0xFFA
 33892                           tblptru	equ	0xFF8
 33893                           tblptrh	equ	0xFF7
 33894                           tblptrl	equ	0xFF6
 33895                           tablat	equ	0xFF5
 33896                           prodh	equ	0xFF4
 33897                           prodl	equ	0xFF3
 33898                           intcon	equ	0xFF2
 33899                           intcon2	equ	0xFF1
 33900                           intcon3	equ	0xFF0
 33901                           indf0	equ	0xFEF
 33902                           postinc0	equ	0xFEE
 33903                           plusw0	equ	0xFEB
 33904                           fsr0h	equ	0xFEA
 33905                           fsr0l	equ	0xFE9
 33906                           wreg	equ	0xFE8
 33907                           indf1	equ	0xFE7
 33908                           postinc1	equ	0xFE6
 33909                           postdec1	equ	0xFE5
 33910                           plusw1	equ	0xFE3
 33911                           fsr1h	equ	0xFE2
 33912                           fsr1l	equ	0xFE1
 33913                           bsr	equ	0xFE0
 33914                           indf2	equ	0xFDF
 33915                           postinc2	equ	0xFDE
 33916                           postdec2	equ	0xFDD
 33917                           plusw2	equ	0xFDB
 33918                           fsr2h	equ	0xFDA
 33919                           fsr2l	equ	0xFD9
 33920                           status	equ	0xFD8
 33921                           
 33922 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 33923 ;; Defined at:
 33924 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33925 ;; Parameters:    Size  Location     Type
 33926 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 33927 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 33928 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 33929 ;;  DataLenght      1   30[COMRAM] unsigned char 
 33930 ;; Auto vars:     Size  Location     Type
 33931 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 33932 ;; Return value:  Size  Location     Type
 33933 ;;                  1    wreg      unsigned char 
 33934 ;; Registers used:
 33935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33936 ;; Tracked objects:
 33937 ;;		On entry : 0/0
 33938 ;;		On exit  : 0/0
 33939 ;;		Unchanged: 0/0
 33940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33941 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33944 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33945 ;;Total ram usage:        5 bytes
 33946 ;; Hardware stack levels used:    1
 33947 ;; Hardware stack levels required when called:    5
 33948 ;; This function calls:
 33949 ;;		i1_GenerateEvt
 33950 ;; This function is called by:
 33951 ;;		_I2cDummyTx
 33952 ;; This function uses a non-reentrant model
 33953 ;;
 33954                           
 33955                           	psect	text166
 33956  005B4E                     __ptext166:
 33957                           	opt stack 0
 33958  005B4E                     i1_I2cSlv_SendI2cMsg:
 33959                           	opt stack 8
 33960                           
 33961                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 33962                           
 33963                           ; BSR set to: 1
 33964                           ;incstack = 0
 33965  005B4E  0E00               	movlw	0
 33966  005B50  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33967                           
 33968                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 33969  005B52  0100               	movlb	0	; () banked
 33970  005B54  05D1               	decf	_I2cComSts& (0+255),w,b
 33971  005B56  B4D8               	btfsc	status,2,c
 33972  005B58  D014               	goto	i1l1409
 33973                           
 33974                           ; BSR set to: 0
 33975                           ;i2c_slv.c: 257: {
 33976                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 33977  005B5A  C01E  F3A2         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 33978                           
 33979                           ; BSR set to: 0
 33980                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 33981  005B5E  0E00               	movlw	0
 33982  005B60  0103               	movlb	3	; () banked
 33983  005B62  6FA3               	movwf	(_I2cTxPacket+1)& (0+255),b
 33984                           
 33985                           ; BSR set to: 3
 33986                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 33987  005B64  C01F  F3A6         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 33988                           
 33989                           ; BSR set to: 3
 33990                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 33991  005B68  C01C  F3A4         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 33992  005B6C  C01D  F3A5         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 33993                           
 33994                           ; BSR set to: 3
 33995                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 33996  005B70  0ED9               	movlw	low _I2cWriteDataEvt
 33997  005B72  6E19               	movwf	i1GenerateEvt@Event,c
 33998  005B74  0E00               	movlw	high _I2cWriteDataEvt
 33999  005B76  6E1A               	movwf	i1GenerateEvt@Event+1,c
 34000  005B78  ECA3  F030         	call	i1_GenerateEvt	;wreg free
 34001                           
 34002                           ;i2c_slv.c: 267: TxSts = 1u;
 34003  005B7C  0E01               	movlw	1
 34004  005B7E  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34005                           
 34006                           ;i2c_slv.c: 268: }
 34007  005B80  0012               	return	
 34008  005B82                     i1l1409:
 34009                           
 34010                           ;i2c_slv.c: 269: else
 34011                           ;i2c_slv.c: 270: {
 34012                           ;i2c_slv.c: 272: TxSts = 0u;
 34013  005B82  0E00               	movlw	0
 34014  005B84  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34015  005B86  0012               	return	
 34016  005B88                     __end_ofi1_I2cSlv_SendI2cMsg:
 34017                           	opt stack 0
 34018                           tosu	equ	0xFFF
 34019                           tosh	equ	0xFFE
 34020                           tosl	equ	0xFFD
 34021                           pclatu	equ	0xFFB
 34022                           pclath	equ	0xFFA
 34023                           tblptru	equ	0xFF8
 34024                           tblptrh	equ	0xFF7
 34025                           tblptrl	equ	0xFF6
 34026                           tablat	equ	0xFF5
 34027                           prodh	equ	0xFF4
 34028                           prodl	equ	0xFF3
 34029                           intcon	equ	0xFF2
 34030                           intcon2	equ	0xFF1
 34031                           intcon3	equ	0xFF0
 34032                           indf0	equ	0xFEF
 34033                           postinc0	equ	0xFEE
 34034                           plusw0	equ	0xFEB
 34035                           fsr0h	equ	0xFEA
 34036                           fsr0l	equ	0xFE9
 34037                           wreg	equ	0xFE8
 34038                           indf1	equ	0xFE7
 34039                           postinc1	equ	0xFE6
 34040                           postdec1	equ	0xFE5
 34041                           plusw1	equ	0xFE3
 34042                           fsr1h	equ	0xFE2
 34043                           fsr1l	equ	0xFE1
 34044                           bsr	equ	0xFE0
 34045                           indf2	equ	0xFDF
 34046                           postinc2	equ	0xFDE
 34047                           postdec2	equ	0xFDD
 34048                           plusw2	equ	0xFDB
 34049                           fsr2h	equ	0xFDA
 34050                           fsr2l	equ	0xFD9
 34051                           status	equ	0xFD8
 34052                           
 34053 ;; *************** function i1_GenerateEvt *****************
 34054 ;; Defined at:
 34055 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34056 ;; Parameters:    Size  Location     Type
 34057 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 34058 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34059 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34060 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 34061 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 34062 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34063 ;; Auto vars:     Size  Location     Type
 34064 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 34065 ;; Return value:  Size  Location     Type
 34066 ;;                  1    wreg      enum E7699
 34067 ;; Registers used:
 34068 ;;		wreg, fsr2l, fsr2h, status,2
 34069 ;; Tracked objects:
 34070 ;;		On entry : 0/0
 34071 ;;		On exit  : 0/0
 34072 ;;		Unchanged: 0/0
 34073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34077 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34078 ;;Total ram usage:        3 bytes
 34079 ;; Hardware stack levels used:    1
 34080 ;; Hardware stack levels required when called:    4
 34081 ;; This function calls:
 34082 ;;		Nothing
 34083 ;; This function is called by:
 34084 ;;		i1_I2cSlv_SendI2cMsg
 34085 ;; This function uses a non-reentrant model
 34086 ;;
 34087                           
 34088                           	psect	text167
 34089  006146                     __ptext167:
 34090                           	opt stack 0
 34091  006146                     i1_GenerateEvt:
 34092                           	opt stack 8
 34093                           
 34094                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34095                           
 34096                           ;incstack = 0
 34097  006146  0E00               	movlw	0
 34098  006148  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 34099                           
 34100                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34101  00614A  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 34102  00614E  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 34103  006152  0E02               	movlw	2
 34104  006154  6EDF               	movwf	indf2,c
 34105                           
 34106                           ;os_ser.c: 83: EventStatus = EventSent;
 34107  006156  0E02               	movlw	2
 34108  006158  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 34109  00615A  0012               	return	
 34110  00615C                     __end_ofi1_GenerateEvt:
 34111                           	opt stack 0
 34112                           tosu	equ	0xFFF
 34113                           tosh	equ	0xFFE
 34114                           tosl	equ	0xFFD
 34115                           pclatu	equ	0xFFB
 34116                           pclath	equ	0xFFA
 34117                           tblptru	equ	0xFF8
 34118                           tblptrh	equ	0xFF7
 34119                           tblptrl	equ	0xFF6
 34120                           tablat	equ	0xFF5
 34121                           prodh	equ	0xFF4
 34122                           prodl	equ	0xFF3
 34123                           intcon	equ	0xFF2
 34124                           intcon2	equ	0xFF1
 34125                           intcon3	equ	0xFF0
 34126                           indf0	equ	0xFEF
 34127                           postinc0	equ	0xFEE
 34128                           plusw0	equ	0xFEB
 34129                           fsr0h	equ	0xFEA
 34130                           fsr0l	equ	0xFE9
 34131                           wreg	equ	0xFE8
 34132                           indf1	equ	0xFE7
 34133                           postinc1	equ	0xFE6
 34134                           postdec1	equ	0xFE5
 34135                           plusw1	equ	0xFE3
 34136                           fsr1h	equ	0xFE2
 34137                           fsr1l	equ	0xFE1
 34138                           bsr	equ	0xFE0
 34139                           indf2	equ	0xFDF
 34140                           postinc2	equ	0xFDE
 34141                           postdec2	equ	0xFDD
 34142                           plusw2	equ	0xFDB
 34143                           fsr2h	equ	0xFDA
 34144                           fsr2l	equ	0xFD9
 34145                           status	equ	0xFD8
 34146                           
 34147 ;; *************** function _HighPriorityIsr *****************
 34148 ;; Defined at:
 34149 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 34150 ;; Parameters:    Size  Location     Type
 34151 ;;		None
 34152 ;; Auto vars:     Size  Location     Type
 34153 ;;		None
 34154 ;; Return value:  Size  Location     Type
 34155 ;;                  1    wreg      void 
 34156 ;; Registers used:
 34157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34158 ;; Tracked objects:
 34159 ;;		On entry : 0/0
 34160 ;;		On exit  : 0/0
 34161 ;;		Unchanged: 0/0
 34162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34165 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34166 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34167 ;;Total ram usage:       18 bytes
 34168 ;; Hardware stack levels used:    1
 34169 ;; Hardware stack levels required when called:    3
 34170 ;; This function calls:
 34171 ;;		_Mcu_Int0Isr
 34172 ;;		_Mcu_Int1Isr
 34173 ;;		_Rtcc_RtcIsr
 34174 ;;		_Uart_Uart1RxIsr
 34175 ;; This function is called by:
 34176 ;;		Interrupt level 2
 34177 ;; This function uses a non-reentrant model
 34178 ;;
 34179                           
 34180                           	psect	intcode
 34181  000008                     __pintcode:
 34182                           	opt stack 0
 34183  000008                     _HighPriorityIsr:
 34184                           	opt stack 8
 34185                           
 34186                           ;incstack = 0
 34187  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34188  00000A  EFF3  F020         	goto	int_func
 34189                           tosu	equ	0xFFF
 34190                           tosh	equ	0xFFE
 34191                           tosl	equ	0xFFD
 34192                           pclatu	equ	0xFFB
 34193                           pclath	equ	0xFFA
 34194                           tblptru	equ	0xFF8
 34195                           tblptrh	equ	0xFF7
 34196                           tblptrl	equ	0xFF6
 34197                           tablat	equ	0xFF5
 34198                           prodh	equ	0xFF4
 34199                           prodl	equ	0xFF3
 34200                           intcon	equ	0xFF2
 34201                           intcon2	equ	0xFF1
 34202                           intcon3	equ	0xFF0
 34203                           indf0	equ	0xFEF
 34204                           postinc0	equ	0xFEE
 34205                           plusw0	equ	0xFEB
 34206                           fsr0h	equ	0xFEA
 34207                           fsr0l	equ	0xFE9
 34208                           wreg	equ	0xFE8
 34209                           indf1	equ	0xFE7
 34210                           postinc1	equ	0xFE6
 34211                           postdec1	equ	0xFE5
 34212                           plusw1	equ	0xFE3
 34213                           fsr1h	equ	0xFE2
 34214                           fsr1l	equ	0xFE1
 34215                           bsr	equ	0xFE0
 34216                           indf2	equ	0xFDF
 34217                           postinc2	equ	0xFDE
 34218                           postdec2	equ	0xFDD
 34219                           plusw2	equ	0xFDB
 34220                           fsr2h	equ	0xFDA
 34221                           fsr2l	equ	0xFD9
 34222                           status	equ	0xFD8
 34223                           
 34224                           	psect	intcode_body
 34225  0041E6                     __pintcode_body:
 34226                           	opt stack 8
 34227  0041E6                     int_func:
 34228                           	opt stack 8
 34229  0041E6  CFFA F007          	movff	pclath,??_HighPriorityIsr
 34230  0041EA  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 34231  0041EE  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 34232  0041F2  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 34233  0041F6  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 34234  0041FA  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 34235  0041FE  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 34236  004202  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 34237  004206  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 34238  00420A  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 34239  00420E  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 34240  004212  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 34241  004216  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 34242  00421A  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 34243  00421E  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 34244  004222  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 34245  004226  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 34246  00422A  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 34247                           
 34248                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 34249  00422E  B2F2               	btfsc	intcon,1,c	;volatile
 34250                           
 34251                           ;irq.c: 158: {
 34252                           ;irq.c: 160: Mcu_Int0Isr();
 34253  004230  EC49  F031         	call	_Mcu_Int0Isr	;wreg free
 34254                           
 34255                           ;irq.c: 161: }
 34256                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 34257  004234  B0F0               	btfsc	intcon3,0,c	;volatile
 34258                           
 34259                           ;irq.c: 167: {
 34260                           ;irq.c: 169: Mcu_Int1Isr();
 34261  004236  EC47  F031         	call	_Mcu_Int1Isr	;wreg free
 34262                           
 34263                           ;irq.c: 170: }
 34264                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 34265  00423A  B0A4               	btfsc	4004,0,c	;volatile
 34266                           
 34267                           ;irq.c: 203: {
 34268                           ;irq.c: 205: Rtcc_RtcIsr();
 34269  00423C  EC45  F031         	call	_Rtcc_RtcIsr	;wreg free
 34270                           
 34271                           ;irq.c: 206: }
 34272                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 34273  004240  BA9E               	btfsc	3998,5,c	;volatile
 34274                           
 34275                           ;irq.c: 212: {
 34276                           ;irq.c: 214: Uart_Uart1RxIsr();
 34277  004242  ECFE  F030         	call	_Uart_Uart1RxIsr	;wreg free
 34278  004246  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 34279  00424A  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 34280  00424E  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 34281  004252  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 34282  004256  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 34283  00425A  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 34284  00425E  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 34285  004262  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 34286  004266  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 34287  00426A  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 34288  00426E  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 34289  004272  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 34290  004276  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 34291  00427A  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 34292  00427E  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 34293  004282  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 34294  004286  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 34295  00428A  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 34296  00428E  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 34297  004290  0011               	retfie		f
 34298  004292                     __end_of_HighPriorityIsr:
 34299                           	opt stack 0
 34300                           tosu	equ	0xFFF
 34301                           tosh	equ	0xFFE
 34302                           tosl	equ	0xFFD
 34303                           pclatu	equ	0xFFB
 34304                           pclath	equ	0xFFA
 34305                           tblptru	equ	0xFF8
 34306                           tblptrh	equ	0xFF7
 34307                           tblptrl	equ	0xFF6
 34308                           tablat	equ	0xFF5
 34309                           prodh	equ	0xFF4
 34310                           prodl	equ	0xFF3
 34311                           intcon	equ	0xFF2
 34312                           intcon2	equ	0xFF1
 34313                           intcon3	equ	0xFF0
 34314                           indf0	equ	0xFEF
 34315                           postinc0	equ	0xFEE
 34316                           plusw0	equ	0xFEB
 34317                           fsr0h	equ	0xFEA
 34318                           fsr0l	equ	0xFE9
 34319                           wreg	equ	0xFE8
 34320                           indf1	equ	0xFE7
 34321                           postinc1	equ	0xFE6
 34322                           postdec1	equ	0xFE5
 34323                           plusw1	equ	0xFE3
 34324                           fsr1h	equ	0xFE2
 34325                           fsr1l	equ	0xFE1
 34326                           bsr	equ	0xFE0
 34327                           indf2	equ	0xFDF
 34328                           postinc2	equ	0xFDE
 34329                           postdec2	equ	0xFDD
 34330                           plusw2	equ	0xFDB
 34331                           fsr2h	equ	0xFDA
 34332                           fsr2l	equ	0xFD9
 34333                           status	equ	0xFD8
 34334                           
 34335 ;; *************** function _Uart_Uart1RxIsr *****************
 34336 ;; Defined at:
 34337 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34338 ;; Parameters:    Size  Location     Type
 34339 ;;		None
 34340 ;; Auto vars:     Size  Location     Type
 34341 ;;		None
 34342 ;; Return value:  Size  Location     Type
 34343 ;;                  1    wreg      void 
 34344 ;; Registers used:
 34345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34346 ;; Tracked objects:
 34347 ;;		On entry : 0/0
 34348 ;;		On exit  : 0/0
 34349 ;;		Unchanged: 0/0
 34350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34355 ;;Total ram usage:        0 bytes
 34356 ;; Hardware stack levels used:    1
 34357 ;; Hardware stack levels required when called:    2
 34358 ;; This function calls:
 34359 ;;		_Uart_MdmGsmGprsReadService
 34360 ;; This function is called by:
 34361 ;;		_HighPriorityIsr
 34362 ;; This function uses a non-reentrant model
 34363 ;;
 34364                           
 34365                           	psect	text169
 34366  0061FC                     __ptext169:
 34367                           	opt stack 0
 34368  0061FC                     _Uart_Uart1RxIsr:
 34369                           	opt stack 8
 34370                           
 34371                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 34372                           ;uart_drv.c: 590: UartRxData = RCREG1;
 34373                           
 34374                           ;incstack = 0
 34375  0061FC  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 34376                           
 34377                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 34378  006200  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 34379  006204  0E01               	movlw	1
 34380  006206  EC8F  F01D         	call	_Uart_MdmGsmGprsReadService
 34381  00620A  0012               	return		;funcret
 34382  00620C                     __end_of_Uart_Uart1RxIsr:
 34383                           	opt stack 0
 34384                           tosu	equ	0xFFF
 34385                           tosh	equ	0xFFE
 34386                           tosl	equ	0xFFD
 34387                           pclatu	equ	0xFFB
 34388                           pclath	equ	0xFFA
 34389                           tblptru	equ	0xFF8
 34390                           tblptrh	equ	0xFF7
 34391                           tblptrl	equ	0xFF6
 34392                           tablat	equ	0xFF5
 34393                           prodh	equ	0xFF4
 34394                           prodl	equ	0xFF3
 34395                           intcon	equ	0xFF2
 34396                           intcon2	equ	0xFF1
 34397                           intcon3	equ	0xFF0
 34398                           indf0	equ	0xFEF
 34399                           postinc0	equ	0xFEE
 34400                           plusw0	equ	0xFEB
 34401                           fsr0h	equ	0xFEA
 34402                           fsr0l	equ	0xFE9
 34403                           wreg	equ	0xFE8
 34404                           indf1	equ	0xFE7
 34405                           postinc1	equ	0xFE6
 34406                           postdec1	equ	0xFE5
 34407                           plusw1	equ	0xFE3
 34408                           fsr1h	equ	0xFE2
 34409                           fsr1l	equ	0xFE1
 34410                           bsr	equ	0xFE0
 34411                           indf2	equ	0xFDF
 34412                           postinc2	equ	0xFDE
 34413                           postdec2	equ	0xFDD
 34414                           plusw2	equ	0xFDB
 34415                           fsr2h	equ	0xFDA
 34416                           fsr2l	equ	0xFD9
 34417                           status	equ	0xFD8
 34418                           
 34419 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 34420 ;; Defined at:
 34421 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34422 ;; Parameters:    Size  Location     Type
 34423 ;;  Module          1    wreg     unsigned char 
 34424 ;;  UartData        1    3[COMRAM] unsigned char 
 34425 ;; Auto vars:     Size  Location     Type
 34426 ;;  Module          1    0[COMRAM] unsigned char 
 34427 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 34428 ;; Return value:  Size  Location     Type
 34429 ;;                  1    wreg      void 
 34430 ;; Registers used:
 34431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34432 ;; Tracked objects:
 34433 ;;		On entry : 0/0
 34434 ;;		On exit  : 0/0
 34435 ;;		Unchanged: 0/0
 34436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34437 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34440 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34441 ;;Total ram usage:        3 bytes
 34442 ;; Hardware stack levels used:    1
 34443 ;; Hardware stack levels required when called:    1
 34444 ;; This function calls:
 34445 ;;		i2_GenerateEvt
 34446 ;; This function is called by:
 34447 ;;		_Uart_Uart1RxIsr
 34448 ;; This function uses a non-reentrant model
 34449 ;;
 34450                           
 34451                           	psect	text170
 34452  003B1E                     __ptext170:
 34453                           	opt stack 0
 34454  003B1E                     _Uart_MdmGsmGprsReadService:
 34455                           	opt stack 8
 34456                           
 34457                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 34458                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 34459                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 34460                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 34461                           
 34462                           ;incstack = 0
 34463  003B1E  0E00               	movlw	0
 34464  003B20  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 34465  003B22  0E00               	movlw	0
 34466  003B24  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 34467                           
 34468                           ;uart_drv.c: 383: switch (RxState)
 34469  003B26  D058               	goto	i2l680
 34470  003B28                     
 34471                           ;uart_drv.c: 387: if (UartData == '\r')
 34472  003B28  0E0D               	movlw	13
 34473  003B2A  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 34474  003B2C  A4D8               	btfss	status,2,c
 34475  003B2E  D003               	goto	i2l682
 34476                           
 34477                           ;uart_drv.c: 388: {
 34478                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 34479  003B30  0E01               	movlw	1
 34480  003B32  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 34481                           
 34482                           ;uart_drv.c: 391: }
 34483  003B34  0012               	return	
 34484  003B36                     i2l682:
 34485                           
 34486                           ;uart_drv.c: 392: else
 34487                           ;uart_drv.c: 393: {
 34488                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 34489  003B36  0E90               	movlw	144
 34490  003B38  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34491  003B3A  0E01               	movlw	1
 34492  003B3C  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34493  003B3E  B0D8               	btfsc	status,0,c
 34494  003B40  0012               	return	
 34495                           
 34496                           ;uart_drv.c: 395: {
 34497                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 34498  003B42  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 34499  003B44  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34500  003B46  6ED9               	movwf	fsr2l,c
 34501  003B48  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 34502  003B4A  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34503  003B4C  6EDA               	movwf	fsr2h,c
 34504  003B4E  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 34505                           
 34506                           ;uart_drv.c: 399: RxCounter++;
 34507  003B52  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 34508  003B54  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 34509                           
 34510                           ;uart_drv.c: 400: }
 34511                           ;uart_drv.c: 401: }
 34512                           ;uart_drv.c: 402: break;
 34513  003B56  0012               	return	
 34514  003B58                     
 34515                           ;uart_drv.c: 406: if (UartData == '\n')
 34516  003B58  0E0A               	movlw	10
 34517  003B5A  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 34518  003B5C  A4D8               	btfss	status,2,c
 34519  003B5E  D035               	goto	i2l688
 34520                           
 34521                           ;uart_drv.c: 407: {
 34522                           ;uart_drv.c: 409: if (RxCounter > 0)
 34523  003B60  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34524  003B62  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34525  003B64  B4D8               	btfsc	status,2,c
 34526  003B66  D031               	goto	i2l688
 34527                           
 34528                           ;uart_drv.c: 410: {
 34529                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 34530  003B68  0E00               	movlw	0
 34531  003B6A  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 34532  003B6C  0E00               	movlw	0
 34533  003B6E  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 34534  003B70  D010               	goto	i2l689
 34535  003B72                     
 34536                           ;uart_drv.c: 413: {
 34537                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 34538  003B72  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 34539  003B74  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34540  003B76  6ED9               	movwf	fsr2l,c
 34541  003B78  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 34542  003B7A  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34543  003B7C  6EDA               	movwf	fsr2h,c
 34544  003B7E  0E58               	movlw	low _RxBuffer
 34545  003B80  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34546  003B82  6EE1               	movwf	fsr1l,c
 34547  003B84  0E0C               	movlw	high _RxBuffer
 34548  003B86  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34549  003B88  6EE2               	movwf	fsr1h,c
 34550  003B8A  CFDF FFE7          	movff	indf2,indf1
 34551  003B8E  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 34552  003B90  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 34553  003B92                     i2l689:
 34554  003B92  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34555  003B94  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34556  003B96  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34557  003B98  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34558  003B9A  A0D8               	btfss	status,0,c
 34559  003B9C  D7EA               	goto	i2l690
 34560                           
 34561                           ;uart_drv.c: 415: }
 34562                           ;uart_drv.c: 417: RxLen = RxCounter;
 34563  003B9E  C023  F0C7         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 34564  003BA2  C024  F0C8         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 34565                           
 34566                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 34567  003BA6  0E3C               	movlw	low _NewStringReceived
 34568  003BA8  6E01               	movwf	i2GenerateEvt@Event,c
 34569  003BAA  0E00               	movlw	high _NewStringReceived
 34570  003BAC  6E02               	movwf	i2GenerateEvt@Event+1,c
 34571  003BAE  ECAE  F030         	call	i2_GenerateEvt	;wreg free
 34572                           
 34573                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 34574  003BB2  0E3B               	movlw	low _NewMdmEvtParserRequest
 34575  003BB4  6E01               	movwf	i2GenerateEvt@Event,c
 34576  003BB6  0E00               	movlw	high _NewMdmEvtParserRequest
 34577  003BB8  6E02               	movwf	i2GenerateEvt@Event+1,c
 34578  003BBA  ECAE  F030         	call	i2_GenerateEvt	;wreg free
 34579                           
 34580                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 34581  003BBE  0E3A               	movlw	low _NewStringMdmTerminal
 34582  003BC0  6E01               	movwf	i2GenerateEvt@Event,c
 34583  003BC2  0E00               	movlw	high _NewStringMdmTerminal
 34584  003BC4  6E02               	movwf	i2GenerateEvt@Event+1,c
 34585  003BC6  ECAE  F030         	call	i2_GenerateEvt	;wreg free
 34586  003BCA                     i2l688:
 34587                           
 34588                           ;uart_drv.c: 427: }
 34589                           ;uart_drv.c: 429: RxState = ReadData;
 34590                           
 34591                           ;uart_drv.c: 424: else
 34592                           ;uart_drv.c: 425: {
 34593                           
 34594                           ;uart_drv.c: 422: }
 34595                           ;uart_drv.c: 423: }
 34596  003BCA  0E00               	movlw	0
 34597  003BCC  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 34598                           
 34599                           ;uart_drv.c: 431: RxCounter = 0;
 34600  003BCE  0E00               	movlw	0
 34601  003BD0  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 34602  003BD2  0E00               	movlw	0
 34603  003BD4  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 34604                           
 34605                           ;uart_drv.c: 436: }
 34606                           
 34607                           ;uart_drv.c: 435: break;
 34608                           
 34609                           ;uart_drv.c: 434: default:
 34610                           
 34611                           ;uart_drv.c: 432: break;
 34612  003BD6  0012               	return	
 34613  003BD8                     i2l680:
 34614  003BD8  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 34615                           
 34616                           ; Switch size 1, requested type "space"
 34617                           ; Number of cases is 2, Range of values is 0 to 1
 34618                           ; switch strategies available:
 34619                           ; Name         Instructions Cycles
 34620                           ; simple_byte            7     4 (average)
 34621                           ;	Chosen strategy is simple_byte
 34622  003BDA  0A00               	xorlw	0	; case 0
 34623  003BDC  B4D8               	btfsc	status,2,c
 34624  003BDE  D7A4               	goto	i2l681
 34625  003BE0  0A01               	xorlw	1	; case 1
 34626  003BE2  A4D8               	btfss	status,2,c
 34627  003BE4  0012               	return	
 34628  003BE6  D7B8               	goto	i2l686
 34629  003BE8                     __end_of_Uart_MdmGsmGprsReadService:
 34630                           	opt stack 0
 34631                           tosu	equ	0xFFF
 34632                           tosh	equ	0xFFE
 34633                           tosl	equ	0xFFD
 34634                           pclatu	equ	0xFFB
 34635                           pclath	equ	0xFFA
 34636                           tblptru	equ	0xFF8
 34637                           tblptrh	equ	0xFF7
 34638                           tblptrl	equ	0xFF6
 34639                           tablat	equ	0xFF5
 34640                           prodh	equ	0xFF4
 34641                           prodl	equ	0xFF3
 34642                           intcon	equ	0xFF2
 34643                           intcon2	equ	0xFF1
 34644                           intcon3	equ	0xFF0
 34645                           indf0	equ	0xFEF
 34646                           postinc0	equ	0xFEE
 34647                           plusw0	equ	0xFEB
 34648                           fsr0h	equ	0xFEA
 34649                           fsr0l	equ	0xFE9
 34650                           wreg	equ	0xFE8
 34651                           indf1	equ	0xFE7
 34652                           postinc1	equ	0xFE6
 34653                           postdec1	equ	0xFE5
 34654                           plusw1	equ	0xFE3
 34655                           fsr1h	equ	0xFE2
 34656                           fsr1l	equ	0xFE1
 34657                           bsr	equ	0xFE0
 34658                           indf2	equ	0xFDF
 34659                           postinc2	equ	0xFDE
 34660                           postdec2	equ	0xFDD
 34661                           plusw2	equ	0xFDB
 34662                           fsr2h	equ	0xFDA
 34663                           fsr2l	equ	0xFD9
 34664                           status	equ	0xFD8
 34665                           
 34666 ;; *************** function i2_GenerateEvt *****************
 34667 ;; Defined at:
 34668 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34669 ;; Parameters:    Size  Location     Type
 34670 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 34671 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34672 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34673 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 34674 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 34675 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34676 ;; Auto vars:     Size  Location     Type
 34677 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 34678 ;; Return value:  Size  Location     Type
 34679 ;;                  1    wreg      enum E7699
 34680 ;; Registers used:
 34681 ;;		wreg, fsr2l, fsr2h, status,2
 34682 ;; Tracked objects:
 34683 ;;		On entry : 0/0
 34684 ;;		On exit  : 0/0
 34685 ;;		Unchanged: 0/0
 34686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34690 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34691 ;;Total ram usage:        3 bytes
 34692 ;; Hardware stack levels used:    1
 34693 ;; This function calls:
 34694 ;;		Nothing
 34695 ;; This function is called by:
 34696 ;;		_Uart_MdmGsmGprsReadService
 34697 ;; This function uses a non-reentrant model
 34698 ;;
 34699                           
 34700                           	psect	text171
 34701  00615C                     __ptext171:
 34702                           	opt stack 0
 34703  00615C                     i2_GenerateEvt:
 34704                           	opt stack 8
 34705                           
 34706                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34707                           
 34708                           ;incstack = 0
 34709  00615C  0E00               	movlw	0
 34710  00615E  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34711                           
 34712                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34713  006160  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 34714  006164  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 34715  006168  0E02               	movlw	2
 34716  00616A  6EDF               	movwf	indf2,c
 34717                           
 34718                           ;os_ser.c: 83: EventStatus = EventSent;
 34719  00616C  0E02               	movlw	2
 34720  00616E  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34721  006170  0012               	return	
 34722  006172                     __end_ofi2_GenerateEvt:
 34723                           	opt stack 0
 34724                           tosu	equ	0xFFF
 34725                           tosh	equ	0xFFE
 34726                           tosl	equ	0xFFD
 34727                           pclatu	equ	0xFFB
 34728                           pclath	equ	0xFFA
 34729                           tblptru	equ	0xFF8
 34730                           tblptrh	equ	0xFF7
 34731                           tblptrl	equ	0xFF6
 34732                           tablat	equ	0xFF5
 34733                           prodh	equ	0xFF4
 34734                           prodl	equ	0xFF3
 34735                           intcon	equ	0xFF2
 34736                           intcon2	equ	0xFF1
 34737                           intcon3	equ	0xFF0
 34738                           indf0	equ	0xFEF
 34739                           postinc0	equ	0xFEE
 34740                           plusw0	equ	0xFEB
 34741                           fsr0h	equ	0xFEA
 34742                           fsr0l	equ	0xFE9
 34743                           wreg	equ	0xFE8
 34744                           indf1	equ	0xFE7
 34745                           postinc1	equ	0xFE6
 34746                           postdec1	equ	0xFE5
 34747                           plusw1	equ	0xFE3
 34748                           fsr1h	equ	0xFE2
 34749                           fsr1l	equ	0xFE1
 34750                           bsr	equ	0xFE0
 34751                           indf2	equ	0xFDF
 34752                           postinc2	equ	0xFDE
 34753                           postdec2	equ	0xFDD
 34754                           plusw2	equ	0xFDB
 34755                           fsr2h	equ	0xFDA
 34756                           fsr2l	equ	0xFD9
 34757                           status	equ	0xFD8
 34758                           
 34759 ;; *************** function _Rtcc_RtcIsr *****************
 34760 ;; Defined at:
 34761 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 34762 ;; Parameters:    Size  Location     Type
 34763 ;;		None
 34764 ;; Auto vars:     Size  Location     Type
 34765 ;;		None
 34766 ;; Return value:  Size  Location     Type
 34767 ;;                  1    wreg      void 
 34768 ;; Registers used:
 34769 ;;		wreg, status,2, status,0
 34770 ;; Tracked objects:
 34771 ;;		On entry : 0/0
 34772 ;;		On exit  : 0/0
 34773 ;;		Unchanged: 0/0
 34774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34779 ;;Total ram usage:        0 bytes
 34780 ;; Hardware stack levels used:    1
 34781 ;; This function calls:
 34782 ;;		Nothing
 34783 ;; This function is called by:
 34784 ;;		_HighPriorityIsr
 34785 ;; This function uses a non-reentrant model
 34786 ;;
 34787                           
 34788                           	psect	text172
 34789  00628A                     __ptext172:
 34790                           	opt stack 0
 34791  00628A                     _Rtcc_RtcIsr:
 34792                           	opt stack 10
 34793                           
 34794                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 34795                           
 34796                           ;incstack = 0
 34797  00628A  90A4               	bcf	4004,0,c	;volatile
 34798  00628C  0012               	return	
 34799  00628E                     __end_of_Rtcc_RtcIsr:
 34800                           	opt stack 0
 34801                           tosu	equ	0xFFF
 34802                           tosh	equ	0xFFE
 34803                           tosl	equ	0xFFD
 34804                           pclatu	equ	0xFFB
 34805                           pclath	equ	0xFFA
 34806                           tblptru	equ	0xFF8
 34807                           tblptrh	equ	0xFF7
 34808                           tblptrl	equ	0xFF6
 34809                           tablat	equ	0xFF5
 34810                           prodh	equ	0xFF4
 34811                           prodl	equ	0xFF3
 34812                           intcon	equ	0xFF2
 34813                           intcon2	equ	0xFF1
 34814                           intcon3	equ	0xFF0
 34815                           indf0	equ	0xFEF
 34816                           postinc0	equ	0xFEE
 34817                           plusw0	equ	0xFEB
 34818                           fsr0h	equ	0xFEA
 34819                           fsr0l	equ	0xFE9
 34820                           wreg	equ	0xFE8
 34821                           indf1	equ	0xFE7
 34822                           postinc1	equ	0xFE6
 34823                           postdec1	equ	0xFE5
 34824                           plusw1	equ	0xFE3
 34825                           fsr1h	equ	0xFE2
 34826                           fsr1l	equ	0xFE1
 34827                           bsr	equ	0xFE0
 34828                           indf2	equ	0xFDF
 34829                           postinc2	equ	0xFDE
 34830                           postdec2	equ	0xFDD
 34831                           plusw2	equ	0xFDB
 34832                           fsr2h	equ	0xFDA
 34833                           fsr2l	equ	0xFD9
 34834                           status	equ	0xFD8
 34835                           
 34836 ;; *************** function _Mcu_Int1Isr *****************
 34837 ;; Defined at:
 34838 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 34839 ;; Parameters:    Size  Location     Type
 34840 ;;		None
 34841 ;; Auto vars:     Size  Location     Type
 34842 ;;		None
 34843 ;; Return value:  Size  Location     Type
 34844 ;;                  1    wreg      void 
 34845 ;; Registers used:
 34846 ;;		wreg, status,2, status,0
 34847 ;; Tracked objects:
 34848 ;;		On entry : 0/0
 34849 ;;		On exit  : 0/0
 34850 ;;		Unchanged: 0/0
 34851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34856 ;;Total ram usage:        0 bytes
 34857 ;; Hardware stack levels used:    1
 34858 ;; This function calls:
 34859 ;;		Nothing
 34860 ;; This function is called by:
 34861 ;;		_HighPriorityIsr
 34862 ;; This function uses a non-reentrant model
 34863 ;;
 34864                           
 34865                           	psect	text173
 34866  00628E                     __ptext173:
 34867                           	opt stack 0
 34868  00628E                     _Mcu_Int1Isr:
 34869                           	opt stack 10
 34870                           
 34871                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 34872                           
 34873                           ;incstack = 0
 34874  00628E  90F0               	bcf	intcon3,0,c	;volatile
 34875  006290  0012               	return	
 34876  006292                     __end_of_Mcu_Int1Isr:
 34877                           	opt stack 0
 34878                           tosu	equ	0xFFF
 34879                           tosh	equ	0xFFE
 34880                           tosl	equ	0xFFD
 34881                           pclatu	equ	0xFFB
 34882                           pclath	equ	0xFFA
 34883                           tblptru	equ	0xFF8
 34884                           tblptrh	equ	0xFF7
 34885                           tblptrl	equ	0xFF6
 34886                           tablat	equ	0xFF5
 34887                           prodh	equ	0xFF4
 34888                           prodl	equ	0xFF3
 34889                           intcon	equ	0xFF2
 34890                           intcon2	equ	0xFF1
 34891                           intcon3	equ	0xFF0
 34892                           indf0	equ	0xFEF
 34893                           postinc0	equ	0xFEE
 34894                           plusw0	equ	0xFEB
 34895                           fsr0h	equ	0xFEA
 34896                           fsr0l	equ	0xFE9
 34897                           wreg	equ	0xFE8
 34898                           indf1	equ	0xFE7
 34899                           postinc1	equ	0xFE6
 34900                           postdec1	equ	0xFE5
 34901                           plusw1	equ	0xFE3
 34902                           fsr1h	equ	0xFE2
 34903                           fsr1l	equ	0xFE1
 34904                           bsr	equ	0xFE0
 34905                           indf2	equ	0xFDF
 34906                           postinc2	equ	0xFDE
 34907                           postdec2	equ	0xFDD
 34908                           plusw2	equ	0xFDB
 34909                           fsr2h	equ	0xFDA
 34910                           fsr2l	equ	0xFD9
 34911                           status	equ	0xFD8
 34912                           
 34913 ;; *************** function _Mcu_Int0Isr *****************
 34914 ;; Defined at:
 34915 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 34916 ;; Parameters:    Size  Location     Type
 34917 ;;		None
 34918 ;; Auto vars:     Size  Location     Type
 34919 ;;		None
 34920 ;; Return value:  Size  Location     Type
 34921 ;;                  1    wreg      void 
 34922 ;; Registers used:
 34923 ;;		wreg, status,2, status,0
 34924 ;; Tracked objects:
 34925 ;;		On entry : 0/0
 34926 ;;		On exit  : 0/0
 34927 ;;		Unchanged: 0/0
 34928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34933 ;;Total ram usage:        0 bytes
 34934 ;; Hardware stack levels used:    1
 34935 ;; This function calls:
 34936 ;;		Nothing
 34937 ;; This function is called by:
 34938 ;;		_HighPriorityIsr
 34939 ;; This function uses a non-reentrant model
 34940 ;;
 34941                           
 34942                           	psect	text174
 34943  006292                     __ptext174:
 34944                           	opt stack 0
 34945  006292                     _Mcu_Int0Isr:
 34946                           	opt stack 10
 34947                           
 34948                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 34949                           
 34950                           ;incstack = 0
 34951  006292  92F2               	bcf	intcon,1,c	;volatile
 34952  006294  0012               	return	
 34953  006296                     __end_of_Mcu_Int0Isr:
 34954                           	opt stack 0
 34955                           tosu	equ	0xFFF
 34956                           tosh	equ	0xFFE
 34957                           tosl	equ	0xFFD
 34958                           pclatu	equ	0xFFB
 34959                           pclath	equ	0xFFA
 34960                           tblptru	equ	0xFF8
 34961                           tblptrh	equ	0xFF7
 34962                           tblptrl	equ	0xFF6
 34963                           tablat	equ	0xFF5
 34964                           prodh	equ	0xFF4
 34965                           prodl	equ	0xFF3
 34966                           intcon	equ	0xFF2
 34967                           intcon2	equ	0xFF1
 34968                           intcon3	equ	0xFF0
 34969                           indf0	equ	0xFEF
 34970                           postinc0	equ	0xFEE
 34971                           plusw0	equ	0xFEB
 34972                           fsr0h	equ	0xFEA
 34973                           fsr0l	equ	0xFE9
 34974                           wreg	equ	0xFE8
 34975                           indf1	equ	0xFE7
 34976                           postinc1	equ	0xFE6
 34977                           postdec1	equ	0xFE5
 34978                           plusw1	equ	0xFE3
 34979                           fsr1h	equ	0xFE2
 34980                           fsr1l	equ	0xFE1
 34981                           bsr	equ	0xFE0
 34982                           indf2	equ	0xFDF
 34983                           postinc2	equ	0xFDE
 34984                           postdec2	equ	0xFDD
 34985                           plusw2	equ	0xFDB
 34986                           fsr2h	equ	0xFDA
 34987                           fsr2l	equ	0xFD9
 34988                           status	equ	0xFD8
 34989                           tosu	equ	0xFFF
 34990                           tosh	equ	0xFFE
 34991                           tosl	equ	0xFFD
 34992                           pclatu	equ	0xFFB
 34993                           pclath	equ	0xFFA
 34994                           tblptru	equ	0xFF8
 34995                           tblptrh	equ	0xFF7
 34996                           tblptrl	equ	0xFF6
 34997                           tablat	equ	0xFF5
 34998                           prodh	equ	0xFF4
 34999                           prodl	equ	0xFF3
 35000                           intcon	equ	0xFF2
 35001                           intcon2	equ	0xFF1
 35002                           intcon3	equ	0xFF0
 35003                           indf0	equ	0xFEF
 35004                           postinc0	equ	0xFEE
 35005                           plusw0	equ	0xFEB
 35006                           fsr0h	equ	0xFEA
 35007                           fsr0l	equ	0xFE9
 35008                           wreg	equ	0xFE8
 35009                           indf1	equ	0xFE7
 35010                           postinc1	equ	0xFE6
 35011                           postdec1	equ	0xFE5
 35012                           plusw1	equ	0xFE3
 35013                           fsr1h	equ	0xFE2
 35014                           fsr1l	equ	0xFE1
 35015                           bsr	equ	0xFE0
 35016                           indf2	equ	0xFDF
 35017                           postinc2	equ	0xFDE
 35018                           postdec2	equ	0xFDD
 35019                           plusw2	equ	0xFDB
 35020                           fsr2h	equ	0xFDA
 35021                           fsr2l	equ	0xFD9
 35022                           status	equ	0xFD8
 35023                           
 35024                           	psect	text175
 35025  000000                     __ptext175:
 35026                           	opt stack 0
 35027                           tosu	equ	0xFFF
 35028                           tosh	equ	0xFFE
 35029                           tosl	equ	0xFFD
 35030                           pclatu	equ	0xFFB
 35031                           pclath	equ	0xFFA
 35032                           tblptru	equ	0xFF8
 35033                           tblptrh	equ	0xFF7
 35034                           tblptrl	equ	0xFF6
 35035                           tablat	equ	0xFF5
 35036                           prodh	equ	0xFF4
 35037                           prodl	equ	0xFF3
 35038                           intcon	equ	0xFF2
 35039                           intcon2	equ	0xFF1
 35040                           intcon3	equ	0xFF0
 35041                           indf0	equ	0xFEF
 35042                           postinc0	equ	0xFEE
 35043                           plusw0	equ	0xFEB
 35044                           fsr0h	equ	0xFEA
 35045                           fsr0l	equ	0xFE9
 35046                           wreg	equ	0xFE8
 35047                           indf1	equ	0xFE7
 35048                           postinc1	equ	0xFE6
 35049                           postdec1	equ	0xFE5
 35050                           plusw1	equ	0xFE3
 35051                           fsr1h	equ	0xFE2
 35052                           fsr1l	equ	0xFE1
 35053                           bsr	equ	0xFE0
 35054                           indf2	equ	0xFDF
 35055                           postinc2	equ	0xFDE
 35056                           postdec2	equ	0xFDD
 35057                           plusw2	equ	0xFDB
 35058                           fsr2h	equ	0xFDA
 35059                           fsr2l	equ	0xFD9
 35060                           status	equ	0xFD8
 35061                           
 35062                           	psect	rparam
 35063  0000                     tosu	equ	0xFFF
 35064                           tosh	equ	0xFFE
 35065                           tosl	equ	0xFFD
 35066                           pclatu	equ	0xFFB
 35067                           pclath	equ	0xFFA
 35068                           tblptru	equ	0xFF8
 35069                           tblptrh	equ	0xFF7
 35070                           tblptrl	equ	0xFF6
 35071                           tablat	equ	0xFF5
 35072                           prodh	equ	0xFF4
 35073                           prodl	equ	0xFF3
 35074                           intcon	equ	0xFF2
 35075                           intcon2	equ	0xFF1
 35076                           intcon3	equ	0xFF0
 35077                           indf0	equ	0xFEF
 35078                           postinc0	equ	0xFEE
 35079                           plusw0	equ	0xFEB
 35080                           fsr0h	equ	0xFEA
 35081                           fsr0l	equ	0xFE9
 35082                           wreg	equ	0xFE8
 35083                           indf1	equ	0xFE7
 35084                           postinc1	equ	0xFE6
 35085                           postdec1	equ	0xFE5
 35086                           plusw1	equ	0xFE3
 35087                           fsr1h	equ	0xFE2
 35088                           fsr1l	equ	0xFE1
 35089                           bsr	equ	0xFE0
 35090                           indf2	equ	0xFDF
 35091                           postinc2	equ	0xFDE
 35092                           postdec2	equ	0xFDD
 35093                           plusw2	equ	0xFDB
 35094                           fsr2h	equ	0xFDA
 35095                           fsr2l	equ	0xFD9
 35096                           status	equ	0xFD8
 35097                           
 35098                           	psect	temp
 35099  000042                     btemp:
 35100                           	opt stack 0
 35101  000042                     	ds	1
 35102  0000                     int$flags	set	btemp
 35103  0000                     wtemp6	set	btemp+1
 35104                           tosu	equ	0xFFF
 35105                           tosh	equ	0xFFE
 35106                           tosl	equ	0xFFD
 35107                           pclatu	equ	0xFFB
 35108                           pclath	equ	0xFFA
 35109                           tblptru	equ	0xFF8
 35110                           tblptrh	equ	0xFF7
 35111                           tblptrl	equ	0xFF6
 35112                           tablat	equ	0xFF5
 35113                           prodh	equ	0xFF4
 35114                           prodl	equ	0xFF3
 35115                           intcon	equ	0xFF2
 35116                           intcon2	equ	0xFF1
 35117                           intcon3	equ	0xFF0
 35118                           indf0	equ	0xFEF
 35119                           postinc0	equ	0xFEE
 35120                           plusw0	equ	0xFEB
 35121                           fsr0h	equ	0xFEA
 35122                           fsr0l	equ	0xFE9
 35123                           wreg	equ	0xFE8
 35124                           indf1	equ	0xFE7
 35125                           postinc1	equ	0xFE6
 35126                           postdec1	equ	0xFE5
 35127                           plusw1	equ	0xFE3
 35128                           fsr1h	equ	0xFE2
 35129                           fsr1l	equ	0xFE1
 35130                           bsr	equ	0xFE0
 35131                           indf2	equ	0xFDF
 35132                           postinc2	equ	0xFDE
 35133                           postdec2	equ	0xFDD
 35134                           plusw2	equ	0xFDB
 35135                           fsr2h	equ	0xFDA
 35136                           fsr2l	equ	0xFD9
 35137                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    567
    Data        183
    BSS         2335
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     85     131
    BANK1           256    201     256
    BANK2           256    201     256
    BANK3           256      0     255
    BANK4           192      4     190
    BANK5           256      0     224
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK0[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK5[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_32(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    blinkForSeconds@blickTicks	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blickTicks(BANK3[2]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blickTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK5[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> MyApp_Task@smsNumber(BANK1[14]), MyApp_Task@smsText(BANK1[50]), GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[132]), callerNumber(BANK3[14]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK7[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[132]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> MyApp_Task@smsNumber(BANK1[14]), MyApp_Task@smsText(BANK1[50]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> MessageText(BANK7[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[132]), 
		 -> callerNumber(BANK3[14]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> MyApp_Task@cmpString(BANK1[3]), MyApp_Task@phone(BANK1[14]), callerNumber(BANK3[14]), RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@smsNumber(BANK1[14]), MyApp_Task@smsText(BANK1[50]), MyApp_Task@phone(BANK1[14]), ModemEvtParser@CallReadyString(BANK0[10]), 
		 -> ModemEvtParser@SmsString(BANK0[5]), ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8937 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK4[50]), Terminal@Payload(BANK5[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4613$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4613$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4613$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4613$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3066$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3056$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3056$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3032$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3032$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3032$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3032$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2533_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2533_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 14
		 -> callerNumber(BANK3[14]), 

    Mdm_GetSmsData@MessageHeader	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@smsNumber(BANK1[14]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@smsText(BANK1[50]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(BANK1[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_31(CODE[14]), STR_30(CODE[12]), STR_29(CODE[19]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), 
		 -> STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), 
		 -> STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_InitializeTasks
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _initGprsModem->_Mdm_SetSmsFormat
    _Mdm_SetSmsFormat->_Uart_WriteString
    _blinkForSeconds->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _StringCompare->_GetCallerNumber
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainSm->_Terminal
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Sch_MainScheduler->_InitializeTasks
    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  645469
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  640838
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  320512
                                             83 BANK0      1     1      0
                                              0 BANK4      4     4      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  320326
                                             83 BANK0      2     2      0
                                            200 BANK2      1     1      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   58730
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   58730
                                             71 BANK0     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41520
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3399
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          82    82      0   60054
                                              0 BANK1     81    81      0
                        _ClearBuffer
                    _GetCallerNumber
                _Led_SetLedBlinkTime
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
              _Uart_WriteConstString
                    _blinkForSeconds
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (4) _initGprsModem                                        0     0      0   16185
                   _Led_SetLedStatus
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _blinkForSeconds                                      3     1      2   11928
                                             51 BANK0      3     1      2
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   10910
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_HangPhoneCall                                    0     0      0    2751
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Mdm_GetSmsData                                       5     1      4    7291
                                             39 BANK0      5     1      4
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _GetCallerNumber                                      2     0      2    5539
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   70556
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   15261
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   11890
                                             48 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _StringCompare                                       11     5      6    2416
                                             37 BANK0     11     5      6
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   14664
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8747
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13998
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   41683
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   20878
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   20805
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (6) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteConstString                                3     1      2    2751
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (6) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                          10     4      6    4251
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    2837
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    6931
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    6931
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2669
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1     852
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      E0      16       87.5%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FF      12       99.6%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C9     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      4      BE      14       99.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     55      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     98B       8        0.0%
DATA                 0      0     CAB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Mar 16 10:58:01 2022

                  __size_of_StringCompare 0052               Mdm_GetSmsData@MessageHeader 0089  
                __end_of_UartSetConfigLow 5322                                _USB_SD_Ptr FC27  
               __size_of_Mdm_SetSmsFormat 0050                      __size_of_TurnOnModem 004C  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 6012  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 25AE                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0031                                       l202 2374  
                                     l203 237C                                       l205 23C4  
                                     l206 23EA                                       l208 23F2  
                                     l160 2158                                       l209 2412  
                                     l161 202E                                       l162 2196  
                                     l170 20F6                                       l171 210C  
                                     l163 203A                                       l315 43C8  
                                     l323 4394                                       l164 207A  
                                     l316 433E                                       l420 4976  
                                     l500 4826                                       l173 2110  
                                     l325 43AE                                       l421 4996  
                                     l237 601E                                       l174 2118  
                                     l166 2088                                       l318 4348  
                                     l422 49A2               __end_of_USBStdGetDscHandler 2E5E  
                                     l510 47F8                                       l502 47B8  
                                     l175 2124                                       l167 20B0  
                                     l319 436E                                       l423 49AE  
                                     l511 47E8                                       l503 47A8  
                                     l192 241C                                       l176 213A  
                                     l416 49C2                                       l424 49BA  
                                     l512 480C                                       l504 47CE  
                                     l520 56E2                                       l193 22FC  
                                     l169 20C2                                       l417 4968  
                                     l441 17EC                                       l513 47EC  
                                     l505 47AC                                       l521 56AE  
                                     l194 2454                                       l418 49F0  
                                     l442 15F4                                       l514 47F2  
                                     l506 47B2                                       l530 3222  
                                     l195 2308                                       l179 2146  
                                     l419 4970                                       l523 56C8  
                                     l531 3288                                       l196 2348  
                                     l700 5900                                       l444 163C  
                                     l532 324E                                       l445 1684  
                                     l541 5FDC                                       l198 2356  
                                     l446 16CC                                       l199 236A  
                                     l631 2B74                                       l447 1714  
                                     l448 175C                                       l528 328E  
                                     l633 2BEC                                       l625 2B00  
                                     l449 17A4                                       l529 327A  
                                     l538 5FE0                                       l546 3C40  
                                     l651 5632                                       l707 5A66  
                                     l627 2B24                                       l715 59DA  
                                     l539 5FD8                                       l547 3C5C  
                                     l660 5656                                       l652 562C  
                                     l716 59B0                                       l709 5A80  
                                     l629 2B4C                                       l718 59C8  
                                     l639 6004                                       l832 5DA0  
                                     l844 3D14                                       l668 0C44  
                                     _BDT 000400                                       l790 603A  
                                     l855 4D0C                                       l775 2F80  
                                     l864 4A64                                       l856 4CB2  
                                     l857 4D26                                       l698 58E4  
                                     l858 4CE2                                       l867 4A76  
                                     l982 22D4                                       l983 219C  
                                     l985 21C2                                       l987 21DE  
                                     l988 2214                                       l989 2288  
                                     l998 22AE                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                          ?_blinkForSeconds 0093  
                 __end_of_HighPriorityIsr 4292                            ??_Mdm_MainTask 00AA  
                     ?_Mcu_StartSystemPll 0001                                _USBSuspend 5C28  
                            ___awmod@sign 0082                      USBStdSetCfgHandler@i 0091  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8              I2cSlv_ReceiveI2cMsg@RxBuffer 0080  
                          _USBDeviceTasks 1D32                              __CFG_IESO$ON 000000  
                          _USBDeviceState 00D0               Rtcc_AlarmConfig@AlarmConfig 007D  
            __end_of_I2cSlv_ReceiveI2cMsg 59A4                             ??_Mcu_Int0Isr 0001  
                           ??_Mcu_Int1Isr 0001                     ??_USBCtrlTrfRxService 007D  
                          ??_getsUSBUSART 0087                  USBEnableEndpoint@options 0085  
                              _CheckModem 219A             ??_Tmr_RegisterTmr2IsrCallback 007F  
                                    l1010 56F6           InitGprsNetwork@GprsNetInitState 01EA  
                                    l1100 1B1A                                      l1101 1B66  
                                    l1013 5710                                      l1110 5584  
                             RiSm@Counter 02DF                                      l1031 3640  
                                    l1111 5598                                      l1032 367A  
                                    l1033 36A0                                      l1009 572C  
                                    l1121 55F0                                      l1027 36E2  
                                    l1035 36C8                                      l2003 5104  
                                    l1107 55AA                                      l1220 0DE8  
                                    l1028 362E                                      l1052 1D06  
                                    l1060 1CD8                                      l1108 556E  
                                    l1221 0E22                                      l1053 1C1A  
                                    l2005 510A                                      l1222 0E96  
                                    l1070 2D12                                      l1223 0E5E  
                                    l1071 2C0A                                      l1055 1D20  
                                    l2104 5D34                                      l1216 1078  
                                    l1056 1C4C                                      l1152 5EDC  
                                    l1136 5EB8                                      l3001 4C8A  
                                    l2105 5D22                                      l1233 1010  
                                    l1225 0F3E                                      l1217 0DD0  
                                    l2113 545E                                      l1129 4D9E  
                                    l1401 53BC                                      l3002 4C98  
                                    l1250 05F4                                      l1234 1054  
                                    l1226 0F78                                      l1074 2C26  
                                    l1058 1CA2                                      l2114 5428  
                                    l1402 537C                                      l2107 5D28  
                                    l1219 10B0                                      l1227 0FB8  
                                    l1075 2C3E                                      l2211 550C  
                                    l1091 1B80                                      l2060 2820  
                                    l2108 5D2E                                      l1252 0AB6  
                                    l1260 07F2                                      l1228 0FBC  
                                    l2212 54E2                                      l1092 19FE  
                                    l1156 5BB2                                      l2116 543A  
                                    l1404 53B6                                      l2061 2702  
                                    l1261 082C                                      l1253 060C  
                                    l1229 1000                                      l2213 5508  
                                    l2117 544C                                      l2062 2836  
                                    l1270 096E                                      l1262 0856  
                                    l1254 0646                                      l1238 106E  
                                    l1078 2CB0                                      l1414 599E  
                                    l2063 272A                                      l1263 0890  
                                    l1255 0680                                      l1095 1A1A  
                                    l2064 27AE                                      l2224 5BE6  
                                    l1264 08CA                                      l1256 06BA  
                                    l1096 1AD0                                      l2073 334E  
                                    l2225 5BD2                                      l1249 0A54  
                                    l1265 090E                                      l1257 073E  
                                    l1097 1AF4                                      l1409 5A58  
                                    l1601 25F8                                      l3050 5496  
                                    l2074 3296                                      l2090 443A  
                                    l2218 50F4                                      l1282 0A42  
                                    l1274 097E                                      l1258 06F6  
                                    l3210 51DE                                      l3051 548E  
                                    l2075 336A                                      l2083 445E  
                                    l2091 4448                                      l2219 50B4  
                                    l1283 0A4A                                      l1275 09AA  
                                    l1419 5FC8                                      l2403 041E  
                                    l1603 2620                                      l1291 578A  
                                    l1380 3E42                                      l2076 32B4  
                                    l2084 43F0                                      l3060 58B2  
                                    l2412 0524                                      l1700 375C  
                                    l1620 1DA8                                      l1612 1D5E  
                                    l1381 3E64                                      l2085 4486  
                                    l1277 09C4                                      l1269 092A  
                                    l3061 58AA                                      l2413 0570  
                                    l2405 045E                                      l3221 59F4  
                                    l1605 265C                                      l1621 1DB4  
                                    l1613 1D54                                      l1390 3EC6  
                                    l3054 54B6                                      l2078 3324  
                                    l2086 4400                                      l1278 0A32  
                                    l2406 0578                                      l3206 51CE  
                                    l3222 59EE                                      l2430 10DE  
                                    l1710 2FE0                                      l1630 1E46  
                                    l1614 1D52                                      l2182 4B02  
                                    l1391 3ED2                                      l1383 3E86  
                                    l3055 54C0                                      l2087 4412  
                                    l3215 5C6E                                      l3207 51C8  
                                    l1703 37D8                                      l1711 2FBA  
                                    l1623 1DDC                                      l2183 4A88  
                                    l2088 442C                                      l3064 58CA  
                                    l3216 5C64                                      l2408 04B4  
                                    l3080 5CD8                                      l2600 38DE  
                                    l2432 10FA                                      l1704 379E  
                                    l1640 5826                                      l1288 57BC  
                                    l2096 3A40                                      l3065 58D4  
                                    l3313 5D12                                      l3241 18C8  
                                    l2409 0478                                      l3081 5CC6  
                                    l2601 3940                                      l3209 51E8  
                                    l2441 114E                                      l1713 3058  
                                    l1641 5836                                      l1633 1E6C  
                                    l1625 1DF0                                      l1617 1D7A  
                                    l2097 3988                                      l2185 4AEE  
                                    l1386 3E8E                                      l3250 1902  
                                    l3330 5AD0                                      l2610 3960  
                                    l1714 303E                                      l1730 2E46  
                                    l1722 33CA                                      l1810 356E  
                                    l3074 5774                                      l1626 1DFC  
                                    l1618 1D8A                                      l1379 3EE0  
                                    l3323 5F64                                      l2371 0152  
                                    l2427 131E                                      l2443 128E  
                                    l1731 2D42                                      l1811 3582  
                                    l3075 5752                                      l1635 1E90  
                                    l1627 1E26                                      l1619 1D92  
                                    l2099 3996                                      l1388 3EAA  
                                    l2540 44EE                                      l2372 01E2  
                                    l2380 01D0                                      l2604 38E4  
                                    l2428 10B8                                      l1900 415C  
                                    l1724 343E                                      l1812 3588  
                                    l1628 1E32                                      l2452 60A8  
              USBConfigureEndpoint@handle 0083                                      l1645 3FE0  
                                    l3261 60FE                                      l3253 1914  
                                    l3237 185C                                      l2445 12F8  
                                    l2437 110E                                      l1733 2D56  
                                    l1805 35E8                                      l1637 1EAE  
                                    l2542 451A                                      l3318 5E20  
                                    l3254 1980                                      l3334 60E6  
                                    l2390 0304                                      l2374 01AE  
                                    l2606 392C                                      l1902 4174  
                                    l1822 137E                                      l1734 2DDE  
                                    l1750 40C8                                      l1814 358E  
                                    l1806 3558                                      l1670 461E  
                                    l2543 452A                                      l1647 400A  
                                    l3247 18D8                                      l3239 1874  
                                    l2367 05D2                                      l2391 02C6  
                                    l2375 019C                                      l2607 390E  
                                    l2447 1318                                      l2439 112E  
                                    l1903 4182                                      l1831 14EA  
                                    l1823 1384                                      l1743 410A  
                                    l1815 35AC                                      l2455 60A2  
                                    l2624 5284                                      l2560 46AC  
                                    l3256 19A6                                      l3248 18E8  
                                    l2368 00E2                                      l1664 3A9A  
                                    l1904 41A0                                      l1736 2DE6  
                                    l1744 4090                                      l1816 35C8  
                                    l1808 3562                                      l1672 4638  
                                    l2472 5F16                                      l2625 5298  
                                    l2553 46EE                                      l2561 46C4  
                                    l1649 4066                                      l1921 48C8  
                                    l3257 19E0                                      l3281 3500  
                                    l2385 0392                                      l1905 41B8  
                                    l1841 1570                                      l1833 14B2  
                                    l1825 13F6                                      l1737 2E36  
                                    l1809 3568                                      l1681 3126  
                                    l2473 5F08                                      l2554 466E  
                                    l2802 4C04                                      l3282 34B8  
                                    l2386 0326                                      l1834 14D0  
                                    l1682 30CE                                      l2803 4C0E  
                                    l2811 4E50                                      l3283 34D0  
                                    l3275 3478                                      l2387 02B4  
                                    l1843 15C6                                      l1827 143E  
                                    l1739 2E3E                                      l1747 4120  
                                    l1771 4950                                      l2475 5F10  
                                    l2804 4C1C                                      l2812 4E48  
                                    l1924 4876                                      l3284 34E0  
                                    l3276 3472                                      l2388 0250  
                                    l1676 4770                                      l1836 1532  
                                    l1828 1440                                      l1748 40A2  
                                    l1772 494A                                      l2580 1ED8  
                                    l1925 48A2                                      l2397 0402  
                                    l1837 153E                                      l1829 145C  
                                    l1749 40A8                                      l1757 580E  
                                    l1765 5B08                                      l2566 5B40  
                                    l1926 487C                                      l3278 34A0  
                                    l2398 03D2                                      l1790 3F36  
                                    l1782 4FE4                                      l1838 15BA  
                                    l1686 3150                                      l1758 580C  
                                    l1766 5B06                                      l2582 1EF2  
                                    l2559 4704                                      l2815 4E68  
                                    l3287 353E                                      l1951 286C  
                                    l1695 3728                                      l1791 3F3C  
                                    l2816 4E72                                      l2808 4E2E  
                                    l1960 28D6                                      l1792 3FB8  
                                    l1784 5032                                      l2584 1F44  
                                    l2817 4E80                                      l2809 4E3A  
                                    l1953 28A0                                      l1697 3732  
                                    l1793 3F7E                                      l2585 1F40  
                                    l1963 2950                                      l1699 3796  
                                    l1795 3F9E                                      l2579 201A  
                                    l2587 2006                                      l1964 2918  
                                    l1956 28B2                                      l1957 28B6  
                                    l1949 285E                                      l2589 1FDA  
                                    l2782 387A                                      l1990 5E78  
                                    l2783 383C                                      l2599 38C4  
                                    l1967 296A                                      l1959 290E  
              __size_of_Mdm_IsSmsReceived 0024                                      l2776 37E8  
                                    l1968 296E                                      l1992 5E7E  
                              _Led1OutSts 01FB                                      l2785 38AE  
                                    l2777 37E2                                      l2970 4318  
                                    l2795 4BB6                                      l2779 382A  
                                    l2963 587C                                      l1899 41C2  
                                    l2796 4BC6                                      l2957 5FA8  
                                    l1997 5110                                      l1989 5E88  
                                    l2798 4BE4                                      l2799 4BDC  
                                    l2967 429A                                      l2969 42D6  
                                    l2997 4C56                                      l2998 4C4A  
                                    STR_1 FFE5                                      STR_2 FF74  
                                    STR_3 FFDE                                      STR_4 FFC1  
                                    STR_5 FFCD                                      STR_6 FFEF  
                                    STR_7 FFEA                                      STR_8 FE88  
                                    STR_9 FEBC                                _Led2OutSts 01F9  
                              _Led3OutSts 01F7                                      u8115 56B8  
                                    u8116 56BA                                      u8125 56C4  
                                    u8126 56C6                                      u8135 56D2  
                   ??_USBCtrlTrfTxService 007D                                      u8136 56D4  
                                    u8145 56DE                                      u8146 56E0  
                                    _UCFG 000F39                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                                    u9605 5DEE                  __size_of_Uart_Uart1RxIsr 0010  
                                    u9606 5DF0                                      u9615 5DFA  
                                    u9616 5DFC                                      _UEIR 000F63  
                                    _UCON 000F65                                      u9595 5DE2  
                                    u9596 5DE4                                _AlarmEvent 01F6  
                          ?_StopCondition 0001                           ??_Mdm_DrvMainFn 0081  
                     _OsTmr_OsTickCounter 031C                             __CFG_FCMEN$ON 000000  
                      _InitModemInterface 6266                  secondsAppTimer@isExpired 0090  
                         _CDCDataInHandle 01D1              I2c_ReadData@TentativeCounter 0032  
             Led_SetLedBlinkTime@OnTimeMs 007D    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D5                      _NewStringMdmTerminal 003A  
                                    _atoi 37E0                                      _main 6228  
                         ??_Mdm_IsRinging 0081                                      _itoa 5856  
                        ?_SetUartBaudRate 0096                   __end_of_GetCallerNumber 5BBE  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 0314                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                                      _utoa 4292  
                                    _xtoi 3462                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 626E               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 4962               I2cSlv_SendI2cMsg@DataLenght 0083  
                    ??_Mcu_StartSystemPll 007D               __end_of_Uart_WriteStringLen 59E4  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00CC   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 611A  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
              __end_of_USBCheckStdRequest 362C                           _Rtcm_SystemDate 0300  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 61BC  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 008E                            _GetElapsedTime 3CB0  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                       StringCopy@SourceStr 007D  
             __end_of_OsAlrm_ClearOsAlarm 537A                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
                     __size_of_I2cDummyTx 001C                          ??_Mdm_GetSmsData 008B  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 5A60                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDAA                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DD  
                                   l11027 601E                                     l13225 5C06  
                                   l11707 5CC6                                     l13319 2654  
                                   l13089 497C                                     l11745 3732  
                                   l12723 3876                                     l11851 33C2  
                                   l13291 25F0                                     l12573 5752  
                                   l14335 09A4                                     l14169 0FB0  
                                   l15307 512A                                     l15309 515A  
                                   l13727 452A                                     l13807 328E  
                                   l13933 1C12                                     l14487 1E3E  
                                   l13957 1CD2                                     l14941 4DAE  
                                   l14953 2E68                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 0093  
                         __end_of___awdiv 4C26                                     STR_10 FF4A  
                                   STR_11 FF58                                     STR_12 FF9C  
                                   STR_20 FF3C                                     STR_13 FF66  
                                   STR_21 FE5E                                     STR_30 FFA9  
                                   STR_14 FEA7                                     STR_31 FF2E  
                                   STR_15 FEE5                                     STR_23 FED1  
                                   STR_24 FFF4                                     STR_32 FFD7  
                                   STR_16 FF1D                                     STR_25 FFF4  
                                   STR_17 FF82                                     STR_26 FE85  
                                   STR_18 FF8F                                     STR_27 FF0C  
                                   STR_28 FFB5                           __end_of___awmod 4E8A  
                                   STR_29 FEF9         __size_of_USBCtrlEPServiceComplete 00FE  
                         __end_of___lldiv 4CAA                                     ?_utoa 008A  
                                   u11220 5E1C                                     u11310 5AB4  
                                   u10350 3784                                     u10510 2DA8  
                                   u11240 5D02                                     u13000 5210  
                                   u10520 2DD8                                     u11410 2B48  
                                   u12050 4E54                                     u11330 5AC0  
                                   u10370 37C6                                     u11180 4C5A  
                                   u10540 2E2A                           ___awdiv@divisor 007F  
                                   u12205 6140                                     u10357 377A  
                                   u10517 2D9E                                     u12206 6142  
                                   u10470 33F6                                     u13007 5206  
                                   u10527 2DCE                                     u13105 4EEE  
                                   u12225 0AF4                                     u10377 37BC  
                                   u10810 549A                    __end_of_USBDeviceTasks 1EB8  
                                   u11355 6180                                     u12235 0B14  
                                   u10547 2E20                                     u13115 6194  
                                   u11356 6182                                     u11460 5A8E  
                                   u13140 43A6                                     u13220 223C  
                                   u11620 4852                                     u13060 3978  
                                   u12420 2614                                     u13116 6196  
                                   u12085 567C                                     u12245 0B9E  
                                   u13301 1BC4                                     u13150 43C0  
                                   u14110 1EB4                                     u13311 1BD6  
                                   ?_xtoi 0083                                     u10920 5628  
                                   u13240 2250                                     u12360 5518  
                                   u10840 58B6                                     u14200 28FE  
                                   u10760 1554                                     u12265 0C78  
                                   u13321 1BE8                                     u12370 50EC  
                                   u12290 590E                                     u11810 1864  
                                   u12450 26B8                                     u12275 0C98  
                                   u14220 2940                                     u12285 0D22  
                                   u14230 2958                                     u13175 612A  
                                   u14207 28F4                                     u13176 612E  
                                   u11840 189E                                     u12377 50E2  
                                   u14227 2936                                     u11860 18AE  
                                   u13390 1D26                                     u14271 5096  
                                   u14511 4AE0                                     u14521 4AF8  
                                   u14370 467E                 ?_USBCtrlEPServiceComplete 0001  
                                   u14531 1EC2                                     u12940 04BE  
                                   u11990 4BE8                                     u14628 4DE4  
                                   u14629 4E12                                     u14668 2F34  
                                   u14669 2F62                           __end_of___lwdiv 54CA  
                         __end_of___lwmod 58DE                 TurnOnModem@TurnOnMdmState 01F4  
                      ??_UpdateOsCounters 0019                                     i1l742 2470  
                                   i1l747 25AC                                     i2l680 3BD8  
                                   i2l681 3B28                                     i2l690 3B72  
                                   i2l682 3B36                                     i2l686 3B58  
                                   i2l688 3BCA                                     i2l689 3B92  
                                   _UADDR 000F38                           ___awdiv@counter 0081  
                                   _AlCfg 03B4              Led_SetLedBlinkTime@OffTimeMs 007F  
                 I2cSendMsgSm@I2cComState 01E6                                     _USTAT 000F64  
                 __end_of_LedStateMachine 448C        __size_of_USBCtrlEPAllowStatusStage 00CC  
                     ___lmul@multiplicand 0081                      ??_InitModemInterface 007D  
                                   _RxLen 00C7           __end_of_USBCtrlEPAllowDataStage 466C  
                           _StringCompare 54CA                                     _sd000 FE5A  
                                   _sd001 FE13                                     _sd002 FDED  
          ?_USBIncrement1msInternalTimers 0001               Rtcc_GetRtccValue@RtccPtrVal 007E  
                    __end_of_Led_MainTask 3A52                               _ApnLenLocal 01EE  
                  ??_OsTmr_GetTimerStatus 0097              LedPulseStateMachine@LedPulse 008A  
                         __end_of_isalpha 5D1C                           __end_of_isdigit 5FB0  
                                   atoi@a 0088                                     atoi@s 0083  
                             _ClearBuffer 5BBE                           __end_of_isspace 5E28  
              I2c_WriteData@I2cWriteState 0038                 Rtcc_GetRtccValue@RegValue 0080  
                 __size_of_Rtcc_RtcConfig 00A0                           __end_of_isupper 5F6C  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi1___wmul 5E76                 __end_of_Rtcc_GetRtccValue 49F6  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                         __end_of_CDCInitEP 4F68  
                                   utoa@c 0092                             ??_SetBaudRate 009E  
                                   utoa@v 0090                                     status 000FD8  
                         _I2cSlv_MainTask 537A                 Rtcc_GetRtccValue@RetValue 007F  
                     i1___wmul@multiplier 0019                                     wtemp6 0043  
                         __end_of_sprintf 3986                           __end_of_tolower 60EA  
                     __end_of_Mcu_Int0Isr 6296                       __end_of_Mcu_Int1Isr 6292  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 6102                    __end_of_GetElapsedTime 3D78  
                   __end_of_UartSetConfig 5272                    __size_of_initGprsModem 009E  
             Rtcc_SetRtccValue@RtccPtrVal 0088                     __end_of_Term_MainTask 60BA  
                 LedStateMachine@LedBlink 0093                          __end_of_GetSmsSm 2D30  
                 __CFG_DSWDTOSC$INTOSCREF 000000                           putUSBUSART@data 0083  
            __size_of_USBStdSetCfgHandler 00E6                   OsTmr_StartTimer@Timeout 0083  
                    __end_of_I2cSetConfig 5DD4                            _InitSchedTimer 5D4C  
                         __initialization 298E                          __end_of_MdmCntSm 43E4  
                    __end_of_I2c_ReadData 2458                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 3F04                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 1EB8                              __end_of_atoi 38B8  
                            __end_of_main 6234                       StringCompare@Result 008D  
                            __end_of_itoa 589A                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 01DE                              __end_of_utoa 433C  
                            __end_of_xtoi 3548                  __end_of_Rtcm_SetRtccDate 5422  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 6252                      initGprsModem@initMdm 01D4  
                    Term_MainSm@TermDelay 03D1                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE48                 __size_of_USBCtrlEPService 0094  
                                  ??_atoi 0085                                    ??_main 00B5  
            __size_of_Uart_InitUartModule 030C                                    ??_itoa 0099  
                                  ??_utoa 0090                                    ??_xtoi 0085  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                        __end_of_TmrBInit 4838                                _ReceiveEvt 5D7A  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                      _Mdm_RequestSmsData 61DC                            ?_StringCompare 0085  
                        __end_of_Terminal 05EC                             ?_SetAckStatus 0001  
                       ?_Led_SetLedStatus 007D                                _OsTmr_Wait 4CAA  
                            _cdc_mem_type 01DF                        ??_Mcu_ConfigExtInt 007D  
                       CheckModem@Timeout 03F2                           ReceiveEvt@Event 007D  
                             ?_CheckModem 0001                          _CDCDataOutHandle 00C1  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 3BE8  
              _Uart_MdmGsmGprsReadService 3B1E                __end_of_UsbDevice_MainTask 5E9A  
                         getsUSBUSART@len 0086                       ?_Mdm_RequestSmsData 0001  
                   __end_of_UartWriteByte 6012                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1409 5B82                               _GenerateEvt 6102  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                 Uart_Uart1RxIsr@UartRxData 002C  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC2F  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                          ?_GetCallerNumber 0083  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F5                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 4FD4                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 5D7A                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 6286  
                              _UartConfig 0328                      __end_of_Mdm_MainTask 55BC  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CF  
                           ??_Term_MainSm 00A7                                    _Relay1 01D9  
                                  _Relay2 01D8                                    _Relay3 01D7  
                                  _Relay4 01D6                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 57CE  
                                  _SmsLen 00D5                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 56A8                                    ___lmul 5272  
                    _I2cSlv_ReceiveI2cMsg 5964                        TurnOnModem@Counter 02D9  
                            ?_putUSBUSART 0083                                    ___wmul 5E28  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 55BC  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5422  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 48CE  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
                       _USBEnableEndpoint 5812           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                                  _memcpy 5740                    __size_of_HttpGetMethod 04D0  
                                  _memset 5CBC                                    clear_0 2A28  
                                  clear_1 2A3A                                    clear_2 2A46  
                                  clear_3 2A52                                    clear_4 2A5E  
                                  clear_5 2A6A                                    clear_6 2A76  
                                  clear_7 2A82                                    clear_8 2A8E  
                                  clear_9 2A9A                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02E3                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01EB                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01F1  
                      ?_USBEnableEndpoint 0085                                    _strcat 51BE  
                                  _strcpy 5C5A                                    _strlen 59E4  
                                  _strtol 181C                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 5ADA  
                HttpGetMethod@UartMessage 0100                             _initGprsModem 466C  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                              _CDCTxService 2848  
                     ModemEvtParser@F9091 03C8                       ModemEvtParser@F9093 03C3  
                     ModemEvtParser@F9095 03BE                       ModemEvtParser@F9097 04F0  
                     MdmCntSm@MdmCntState 002E                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC26  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 033D                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 627E  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 01FE  
                 __end_of_I2cSlv_MainTask 53CE                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 6292  
                             _Mcu_Int1Isr 628E                      ?_Led_SetLedBlinkTime 007D  
                               ??_sprintf 0083                                 ??_tolower 007D  
                  __size_of_ScheduleTasks 0126                               _CtrlTrfData 000438  
                               ??_toupper 007D                       ModemEvtParser@Match 00A8  
                    _controlTransferState 00CE                     __end_ofi1_GenerateEvt 615C  
                   __end_of_Rtcm_MainTask 4B14                __size_of_Rtcc_GetRtccValue 0094  
                      _ExtInt1IsrCallback 02E1                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 2AB8  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                  __end_of_EnableReceiver 628A                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0188               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0001  
              __end_of_UartTxBufferStatus 565A           I2cSlv_QueryI2cData@TimeoutTimer 034B  
                    Terminal@FormatOption 02ED                           __CFG_IOL1WAY$ON 000000  
                              _StringCopy 50A0                            __pcstackBANK10 0A00  
                   I2cDummyTx@DummyBuffer 01FD                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0032  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02DD                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 5856  
                             _InitNetwork 00DB                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE5E  
                           __end_of_sd001 FE31                             __end_of_sd002 FE13  
                            __pidataBANK1 6296                              __pidataBANK2 621A  
                            __pidataBANK3 5922                              __pidataBANK4 60BA  
                            __pidataBANK5 551C                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 58DE  
                     __size_of_CheckModem 0160                __end_of_Uart_ClearRxBuffer 5C28  
           __size_of_USBConfigureEndpoint 0098                  __size_of_InitializeTasks 0074  
                      __end_of_I2cDummyTx 6086               __end_of_USBCtrlTrfInHandler 3FC6  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 0085  
                    StringCompare@String2 0087                        ??_UartSetConfigLow 007D  
                     __end_of_Term_MainSm 135A                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 6146                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 008B             I2cSlv_QueryI2cData@I2cOpState 01E5  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 5C8C                                _cdc_notice 044A  
                   __end_of_Tmr_TmrBPrSet 3294                       __end_of_Rtcc_RtcIsr 628E  
                              _cdc_rx_len 00CB                         __end_of_MsgFormat FD21  
                              _cdc_tx_len 00C9                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 5B88                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01E0                            ClearBuffer@Len 007F  
                         _secondsAppTimer 448C                                 ?_MdmCntSm 0001  
                   _Irq_InitIntController 5DD4                    _USBStdGetStatusHandler 4084  
                       __end_of_SendSmsSm 1BAA       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01ED                            _Rtcc_RtcConfig 452E  
                              __pbssBANK0 00B5                                __pbssBANK1 01C9  
                              __pbssBANK2 02C9                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 07C4                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 6172                  __end_of_Uart_WriteString 5A9E  
                               ?_ReadByte 0001                         MyApp_Task@Options 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                   __size_of_I2c_ReadData 015E                     __size_of_I2cSendMsgSm 00C4  
                     __end_of_Tmr_Tmr2Isr 5F06                               _SetBaudRate 565A  
               initGprsModem@modemCounter 03BC               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01EF                               _pBDTEntryIn 00BB  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 31A6  
                               ?_TmrBInit 007D                             _CheckTxStatus 6252  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                       MyApp_Task@cmpString 014E  
                               ?_Terminal 0001                                   ?___lmul 007D  
                            _Led_MainTask 3986                            _Rtcc_UnlockRtc 61BC  
                            _I2cBusStatus 01E7                                   ?___wmul 007D  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 2E5E  
               Uart_InitUartModule@Module 00A1                     __end_of_I2c_WriteData 219A  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE48                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 48CE                     __end_of_UpdateSchFlag 606A  
                       MyApp_Task@smsText 0100                                _ep_data_in 02D2  
                         _I2cWriteDataEvt 00D9                  i1GenerateEvt@EventStatus 001B  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 007D  
                              ??i1___wmul 001D                   __end_of_InitGprsNetwork 10B6  
                                 ?_strcpy 007D                                   ?_strlen 007D  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 30A8                         __end_of_WriteByte 6248  
                      _USBCheckStdRequest 3548                         _configDescriptor1 FDAA  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 04B8  
             __end_of_USBCtrlTrfTxService 37E0                       _USBStdSetCfgHandler 337C  
                       triggerRelay@F8969 03CF                   __size_of_ConfigureModem 00DC  
                  I2cSlv_QueryI2cData@Ret 01E4                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 5DA8                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 45CE  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 0087  
                                 _SSP2BUF 000F75                              _I2c_ReadData 22FA  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 3E40                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DC            __end_of_Pm_DsReleasePinControl 6274  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 0174                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00E2                  __size_of_blinkForSeconds 003A  
                                 _UIRbits 000F62                     CheckModem@CheckMdmSts 01F5  
               __size_of_UpdateOsCounters 0010                                   _Led1Sts 01FC  
                                 _Led2Sts 01FA                                   _Led3Sts 01F8  
              __end_of_Sch_SchmIntService 621A                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 0090                             _cdc_trf_state 00CA  
                              ??_ReadByte 007D                       _Uart_InitUartModule 0ABC  
                   __end_of_Mdm_DrvMainFn 627A                          _ComChecCompleted 002B  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C9                     __end_of_Mdm_IsRinging 5EE2  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CC  
                   __size_of_getsUSBUSART 0096                                   _RelayB1 01DB  
                                 _RelayB2 01DA                               ?_StringCopy 007D  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 0039  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 4EFC                    __end_of_Rtcc_UnlockRtc 61CC  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 6186                               _Term_MainSm 10B6  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD21  
              __size_of_USBEnableEndpoint 0044                       MyApp_Task@smsNumber 0140  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 6030                    ?_Uart_WriteConstString 0080  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 6130             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 4BA0                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 4E18                                   ___lldiv 4C26  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                                 ___lwdiv 5476                         ??_USBStallHandler 007D  
                                 ___lwmod 589A                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                         ??_initGprsModem 0099                               _Rtcc_RtcIsr 628A  
                    __size_of_putUSBUSART 0022                                   __pcinit 298E  
                      getsUSBUSART@buffer 0084                           __size_of_memcpy 0048  
                               _I2cComSts 00D1                       __end_of_TurnOnModem 5740  
                         __size_of_memset 0030                                 _I2cConfig 0356  
                          ??_Rtcc_LockRtc 007D                 __end_of_configDescriptor1 FDED  
                                 __ramtop 0F00                Mdm_GetSmsData@GetSmsStatus 008B  
                             Terminal@Len 03B0                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 6228                                   __ptext1 5C8C  
                                 __ptext2 6234                                   __ptext3 626E  
                                 __ptext4 6012                                   __ptext5 6086  
                                 __ptext6 5DD4                                   __ptext7 5D4C  
                                 __ptext8 3BE8                                   __ptext9 31A6  
                                 _inPipes 00B5                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 452E  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 5CEC                                   _isdigit 5F8E  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00B5  
                             ?_SystemInit 0001                                   clear_10 2AA6  
                                 clear_11 2AB2                          ___awmod@dividend 007D  
                       ??_InitializeTasks 00B3                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 02E9       __end_of_Tmr_RegisterTmr2IsrCallback 623E  
             _Tmr_RegisterTmr2IsrCallback 6234                                   _isspace 5DFE  
                            _Mdm_MainTask 556C                                   _isupper 5F4A  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                    Term_MainSm@FwkBuildStr 00AF  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 2458  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC2F  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 5EE2  
                                 _sprintf 38B8                                   _tolower 60D2  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 61FC  
                        _HttpGetDataLocal 03A7                  __end_of_Mdm_SetSmsFormat 560C  
                  Term_MainSm@FwkMajorStr 00A7                            __pintcode_body 41E6  
                                 _toupper 60EA           secondsAppTimer@destinationTicks 0091  
                       ClearBuffer@Buffer 007D                      end_of_initialization 2AB8  
                            _getsUSBUSART 4838                          ??_GetElapsedTime 0085  
                             _SmsTxtReady 00DC               ?_Uart_MdmGsmGprsReadService 0004  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F4             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC2D       Irq_InitIntController@PerInt_LowPInt 007E  
                                 memcpy@d 0084                                   memcpy@n 0081  
                                 memcpy@s 0086                       _pBDTEntryEP0OutNext 00C3  
                                 itoa@buf 0093                                   memset@c 007F  
                  Term_MainSm@FwkMinorStr 00AB                                   itoa@val 0095  
                                 memset@n 0081                                   memset@p 0083  
                           __Lmediumconst FC26                            _ModemEvtParser 1BAA  
                                 int_func 41E6                                 i1u1442_20 246E  
                         _USB1msTickCount 0318           _dummy_encapsulated_cmd_response 037B  
                               i1u1446_28 258E                                 i1u1470_28 5EF2  
                               i1u1446_29 25A2                  ?_USBStdFeatureReqHandler 0001  
               __size_of_Mcu_ConfigExtInt 001A                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 604E                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 15EE  
                       _Rtcc_SetRtcStatus 611A                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 5C5A                             StringCopy@Len 0081  
                       ?_MdmHttp_MainTask 0001                   _USBCtrlEPAllowDataStage 45CE  
                      _UsbDevice_MainTask 5E76                              _Mcu_ClearWdg 627A  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 30A8  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01E8  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 22FA  
                         _RtccIsrCallback 02E5          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                _USBStatusStageEnabledFlag1 0028  
              _USBStatusStageEnabledFlag2 0027                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 5F28                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0308  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                       _Mdm_HangPhoneCall 6198                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 5FD2                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 007F                          __CFG_CPUDIV$OSC1 000000  
                      ?_Mdm_HangPhoneCall 0001                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02E7                          _HttpGetMethodSts 01EC  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                      _BothEP0OutUOWNsSet 01E1                           ??_HttpGetMethod 009D  
                 __size_of_Mdm_GetSmsData 0078                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0037                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 1D32  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D7                     __end_of_StopCondition 6282  
                __size_of_HighPriorityIsr 428A                       ??_Mdm_HangPhoneCall 0083  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 0372  
                               _Led2Blink 0369                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 0360              __end_of_USBTransferOnePacket 4084  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0396  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 181C                 __end_of_Rtcc_SetRtcStatus 6130  
                               _Led2Pulse 0390                                 _Led3Pulse 038A  
                       _I2cSlv_SendI2cMsg 5A22           SetBaudRate@DesiredI2cBusClockHz 0096  
                       ??_blinkForSeconds 0095                           ??_ScheduleTasks 04FA  
                          _Tmr_TmrBConfig 3BE8                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 6198                         _OsAlrm_SetOsAlarm 3D78  
                    Terminal@TermRxBuffer 0486                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 56A8  
                     __CFG_MSSP7B_EN$MSK7 000000                               _TurnOnModem 56F4  
                               _ClipEvent 00DF                              ??_MyApp_Task 0099  
                    Terminal@TermTxBuffer 0100                                 _GetMethod 00DA  
                  _USBCtrlTrfSetupHandler 4B14                        ?_OsAlrm_SetOsAlarm 0083  
                __size_of_GetCallerNumber 0036                     __end_of_USBDeviceInit 2700  
   __end_of_USBIncrement1msInternalTimers 5F4A    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 5F28               __size_of_Mdm_RequestSmsData 0010  
                          __end_of___lmul 52CA                            _CheckAckStatus 625C  
                          __end_of___wmul 5E50                       ??_I2cSlv_SendI2cMsg 0084  
               __end_of_Mdm_HangPhoneCall 61AA                    __size_of_UartWriteByte 0020  
                          __end_of_memcpy 5788                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 5CEC  
                      _UartTxBufferStatus 560C                       ??_OsAlrm_SetOsAlarm 008B  
                        __CFG_DSWDTEN$OFF 000000                              ??_ReceiveEvt 007F  
                       _USBBusIsSuspended 01E2                                 _Mdm_SmsRx 0700  
                        ?_secondsAppTimer 008A                         ??_SetUartBaudRate 0098  
                 __end_of_Uart_Uart1RxIsr 620C                                 _MdmStatus 00D3  
                          __end_of_strcat 521A                            __end_of_strcpy 5C8C  
                          __end_of_strlen 5A22                            __end_of_strtol 19F2  
                     start_initialization 298E                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 362C  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 5BF4  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0550                               _cdc_data_tx 0784  
            __end_of_USBConfigureEndpoint 47A2           __end_of_USBStdFeatureReqHandler 15EE  
                               _MsgFormat FC31                        __end_of_MyApp_Task 202C  
                        _UpdateOsCounters 61EC                           ?_ModemEvtParser 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3B1E                 __end_of_I2cSlv_SendI2cMsg 5A60  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4962                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 61DC  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3CB0                                 _SendSmsSm 19F2  
               __end_of_OsAlrm_SetOsAlarm 3E40                    __end_of_Tmr_TmrBIrqSet 56F4  
                               _TaskTable 0590                                 _RingEvent 00E0  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D6                         __size_of_ReadByte 000A  
                               _RtcConfig 03B8                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 521A  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 5DA8  
                  _pBDTEntryEP0OutCurrent 00C5                             _Term_MainTask 60A0  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                    __end_of_CheckAckStatus 6266  
                                ??___lmul 0085                             _isxdigit$6427 0081  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2D30                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 4D2C                        HttpGetMethod@Index 01C8  
                             __pdataBANK1 01FF                               __pdataBANK2 02F3  
                             __pdataBANK3 03BE                               __pdataBANK4 04E2  
                             __pdataBANK5 0590                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 051C                                  ??_memcpy 0083  
                                ??_memset 0083                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 007D                      ??_Uart_ClearRxBuffer 007D  
     __size_of_Uart_MdmGsmGprsReadService 00CA                                  ??_strcat 0081  
                                ??_strcpy 0081                                  ??_strlen 007F  
                  __size_of_Rtcm_MainTask 008E                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 5476                    __end_of_ConfigureModem 3708  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D8  
          __end_of_USBStdGetStatusHandler 4136                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC31                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 551C  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00C2                             __pcstackBANK4 04FA  
                         RiSm@MdmDrvState 002F                    MyApp_Task@blinkSeconds 01D3  
                            _SetAckStatus 6172                              _isalpha$6417 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 623E  
                            _isdigit$6151 007E                      ?_USBStdGetDscHandler 0001  
           UpdateSchFlag@InterruptCounter 02DB                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 59A4       InitGprsNetwork@GprsNetInitNextState 002A  
                    MyApp_Task@blickTicks 03FD                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 5FF2                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 5B14              __end_of_LedBlinkStateMachine 2848  
                             sprintf@flag 0083                           _USBStallHandler 57CE  
                              ?_SendSmsSm 0001                              _pBDTEntryOut 030E  
              __size_of_Rtcc_SetRtccValue 022E                      __size_of_GenerateEvt 0018  
                         ?_Tmr_TmrBConfig 00A0                __size_of_Rtcc_SetRtcStatus 0016  
                        _Mcu_ConfigExtInt 6086                __end_of_USBCheckCDCRequest 41E6  
            __size_ofi1_I2cSlv_SendI2cMsg 003A                       _OsAlrm_ClearOsAlarm 5322  
                         ?_Tmr_TmrBIrqSet 007D                   ??_Uart_WriteConstString 0082  
                          ?_UartSetConfig 0001                      __end_of_Tmr_StartTmr 5FF2  
                            ??_StringCopy 0083                          _Led_SetLedStatus 5D1C  
                       ??_HighPriorityIsr 0007                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0083                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts 5FB0                          GenerateEvt@Event 007D  
                  __size_of_Tmr_TmrBPrSet 00EE                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008             Uart_WriteString@StringToWrite 0080  
                           __pmediumconst FC26                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 007E  
                       __size_of_isxdigit 003C                                  ?___awdiv 007D  
                               __ptext100 5EBE                                 __ptext101 6198  
                               __ptext110 5BF4                                 __ptext102 4D2C  
                               __ptext111 54CA                                 __ptext103 5422  
                               __ptext120 6266                                 __ptext112 2BFE  
                               __ptext104 5B88                                 __ptext121 0DC8  
                               __ptext113 362C                                 __ptext105 521A  
                               __ptext130 3CB0                                 __ptext122 05EC  
                               __ptext114 0ABC                                 __ptext106 56F4  
                           Terminal@Index 00A6                                 __ptext131 61AA  
                               __ptext123 5A60                                 __ptext115 2AC6  
                               __ptext107 19F2                                 __ptext140 4E8A  
                               __ptext132 5BBE                                 __ptext124 58DE  
                               __ptext116 5272                                 __ptext108 59A4  
                               __ptext141 565A                                 __ptext133 43E4  
                               __ptext125 5FF2                                 __ptext117 52CA  
                               __ptext109 1BAA                                 __ptext150 6282  
                               __ptext142 4C26                                 __ptext134 3294  
                               __ptext126 560C                                 __ptext118 219A  
                               __ptext151 6172                                 __ptext143 5DA8  
                               __ptext135 5D1C                                 __ptext127 50A0  
                               __ptext119 433C                                 __ptext160 604E  
                               __ptext152 6248                                 __ptext144 3E40  
                               __ptext136 2700                                 __ptext128 5160  
                               __ptext161 61EC                                 __ptext153 6102  
                               __ptext145 5D7A                                 __ptext137 5476  
                               __ptext129 49F6                                 __ptext170 3B1E  
                               __ptext162 2458                                 __ptext154 6286  
                               __ptext146 202C                                 __ptext138 3D78  
                               __ptext171 615C                                 __ptext163 5E50  
                               __ptext155 6252                                 __ptext147 22FA  
                               __ptext139 5E28                                 __ptext172 628A  
                               __ptext164 5322                                 __ptext156 625C  
                               __ptext148 623E                                 __ptext173 628E  
                               __ptext165 606A                                 __ptext149 627E  
                               __ptext174 6292                                 __ptext166 5B4E  
                               __ptext158 5EE2                                 __ptext175 0000  
                               __ptext167 6146                                 __ptext159 620C  
                               __ptext169 61FC                                  ?___awmod 007D  
                      _Sch_SchmIntService 620C                           _InitializeTasks 4DA4  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                __size_of_Mdm_HangPhoneCall 0012  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 04D7  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 039C                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 3FC6  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
      Uart_MdmGsmGprsReadService@UartData 0004                               _I2cTxBuffer 0440  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                       ??_GetCallerNumber 0085                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 03A2            InitializeTasks@ActiveTaskIndex 02C8  
                    __CFG_RTCOSC$T1OSCREF 000000                                  ?_isspace 0001  
                          _Mdm_GetSmsData 4D2C                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02EC  
                         Terminal@Payload 0500                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 503A                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 503A  
              ConfigureModem@DelayCounter 0326                        __end_of_StringCopy 5102  
                             _ep_data_out 02CF                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00E1  
                         Terminal@SwTimer 04CC                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                  _I2cReady 02EB  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 02D7  
                        _OsTmr_StartTimer 5160                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 6146  
              __end_of_Mcu_StartSystemPll 6030                              _PhoneNumbLen 00D4  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 5F06  
                           _Rtcm_MainTask 4A86                            ___wmul@product 0081  
                ModemEvtParser@ClipString 009A                          SendSmsSm@SwTimer 03E7  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 01F3  
         HttpGetMethod@GetMethodNextState 00D2                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 4E8A                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 5CBC                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0086                                  _UEP0bits 000F26  
           __size_of_I2cSlv_ReceiveI2cMsg 0040                _USBDeferINDataStagePackets 0026  
                      ?_I2c_InitI2cModule 00A2                     ??_Uart_WriteStringLen 0083  
                                _SSP2CON1 000F72                                  _SSP2CON2 000F71  
             __size_of_USBCheckStdRequest 00E4                      Rtcm_MainTask@Options 0001  
            __end_of_OsTmr_GetTimerStatus 4A86                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                  ModemEvtParser@CompareIdx 00A9  
                    _USBConfigureEndpoint 470A          __size_of_USBStdFeatureReqHandler 0294  
                   SetUartBaudRate@Module 0099            __end_of_OsAlrm_ProcessOsAlarms 25AE  
                   ??_OsAlrm_ClearOsAlarm 0019                         ___wmul@multiplier 007D  
                   ?_USBTransferOnePacket 007D                                  i1___wmul 5E50  
                   __end_of_initGprsModem 470A                       ??_I2c_InitI2cModule 00A4  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 626E  
                  __end_of_Mdm_GetSmsData 4DA4                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                            _RemoteWakeup 01E3                                  _ApnLocal 0324  
                          _StartCondition 6282                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                    __size_of_Mdm_IsRinging 0024  
                        StringCompare@Len 0089               HttpGetMethod@GetMethodState 01E9  
                           _Tmr_TmrBPrSet 31A6                         _NewStringReceived 003C  
                            _isspace$6420 007E                          _UartSetConfigLow 52CA  
                                _GetSmsSm 2BFE                   __end_of_USBStallHandler 5812  
                    Mdm_DrvMainFn@Options 0001                           _blinkForSeconds 5B14  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03DC  
                                _MdmCntSm 433C                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 29A2  
                               copy_data1 29C2                                 copy_data2 29E2  
                               copy_data3 2A14              __end_of_LedPulseStateMachine 337C  
                  I2cSlv_SendI2cMsg@TxSts 0084               ??_USBCtrlEPAllowStatusStage 007D  
             __end_of_USBStdSetCfgHandler 3462                            ?i1_GenerateEvt 0019  
                Tmr_TmrBConfig@TmrBConfig 00A0                                  _OsAlarms 0600  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0081  
            LedBlinkStateMachine@LedBlink 008A                                  _ReadByte 6248  
                           i2_GenerateEvt 615C                           ??_UartSetConfig 007D  
                             ??_SendSmsSm 009B                        __end_of_device_dsc FE5A  
               __end_of_I2c_InitI2cModule 4EFC                                  _MsgReady FE31  
                         ??_Term_MainTask 00B3                   __end_of_InitializeTasks 4E18  
              initGprsModem@isInitialized 01D5                   ?_USBCtrlTrfSetupHandler 0001  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 47A2                      __size_of_SetBaudRate 004E  
                            ?_TurnOnModem 0001                                  _TxBuffer 0320  
                          _LowPriorityIsr 0018                                 memcpy@tmp 0083  
                    Tmr_TmrBPrSet@Divisor 009C                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0081               __end_of_Uart_InitUartModule 0DC8  
                                _SmsEvent 00DE                           _SetUartBaudRate 2AC6  
            i1I2cSlv_SendI2cMsg@SlaveAddr 001E                                  _Terminal 00D0  
                                _SetupPkt 000430                 I2cSlv_SendI2cMsg@TxBuffer 0080  
                   SetBaudRate@McuClockHz 009A                     ?_USBConfigureEndpoint 007D  
            OsAlrm_ClearOsAlarm@OsAlarmId 0019                             _I2c_WriteData 202C  
                        __size_of___awdiv 0086                          __size_of___awmod 0072  
                __end_of_UpdateOsCounters 61FC                          __size_of___lldiv 0084  
                         MyApp_Task@F8996 03CC                           MyApp_Task@F8989 04E2  
                       Terminal@SlaveAddr 02EE                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                        __size_of___lwmod 0044                  I2c_WriteData@WritePacket 007E  
                       Terminal@TermState 02F0                             _UpdateSchFlag 604E  
                     __end_of_putUSBUSART 5F8E                               _line_coding 0383  
                            _Rtcc_LockRtc 61CC                      _LedBlinkStateMachine 2700  
                  __end_of_StartCondition 6286                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01F0  
               Rtcm_GetRtccDate@LocalDate 008A                           ?_Mdm_GetSmsData 0087  
                I2c_WriteData@WriteStatus 0035                              _isupper$6423 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 0033  
                          ?_Tmr_TmrBPrSet 0096                          ??_ModemEvtParser 0090  
                        _GetOsTickCounter 61AA                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0186  
                         ___lwdiv@divisor 0085                              Terminal@Addr 03AC  
                ModemEvtParser@RingString 00A4                               ??_WriteByte 007D  
                        __size_of_isspace 002A                           ___lwdiv@counter 0087  
                         MyApp_Task@phone 0132                                  __ptext10 56A8  
                                __ptext11 5FD2                                  __ptext20 5E76  
                                __ptext12 47A2                                  __ptext21 5788  
                                __ptext13 6030                           ??_UartWriteByte 007E  
                                __ptext30 5C28                                  __ptext22 556C  
                                __ptext14 2E5E                                  __ptext31 57CE  
                                __ptext23 537A                                  __ptext15 4DA4  
                                __ptext40 337C                                  __ptext32 5F28  
                                __ptext24 6274                                  __ptext16 1EB8  
                                __ptext41 4084                                  __ptext33 25AE  
                                __ptext25 5F06                                  __ptext17 60A0  
                                __ptext50 2F84                                  __ptext42 2D30  
                                __ptext34 48CE                                  __ptext26 6186  
                                __ptext18 4A86                                  __ptext51 3A52  
                                __ptext43 135A                                  __ptext35 5740  
                                __ptext27 627A                                  __ptext19 3986  
                                __ptext60 00D0                                  __ptext52 3F04  
                                __ptext44 5102                                  __ptext36 4B14  
                                __ptext28 1D32                                  __ptext61 3462  
                                __ptext53 3708                                  __ptext45 4136  
                                __ptext37 30A8                                  __ptext29 5ADA  
                                __ptext70 5F6C                                  __ptext62 60D2  
                                __ptext54 2848                                  __ptext46 4EFC  
                                __ptext38 45CE                                  __ptext71 5856  
                                __ptext63 5A9E                                  __ptext55 10B6  
                                __ptext47 5812                                  __ptext39 3548  
                                __ptext80 5964                                  __ptext72 4292  
                                __ptext64 181C                                  __ptext56 59E4  
                                __ptext48 470A                                  __ptext81 5FB0  
                                __ptext73 589A                                  __ptext65 60EA  
                                __ptext57 51BE                                  __ptext49 4FD4  
                                __ptext90 611A                                  __ptext82 53CE  
                                __ptext74 4838                                  __ptext66 5DFE  
                                __ptext58 38B8                                  __ptext91 452E  
                                __ptext83 61BC                                  __ptext75 3FC6  
                                __ptext67 5CEC                                  __ptext59 5CBC  
                                __ptext92 6130                                  __ptext84 15EE  
                                __ptext76 37E0                                  __ptext68 5F4A  
                                __ptext93 4F68                                  __ptext85 4E18  
                                __ptext77 5F8E                                  __ptext69 5C5A  
                                __ptext94 466C                                  __ptext86 4BA0  
                                __ptext78 4CAA                                  __ptext95 55BC  
                                __ptext87 61CC                                  __ptext79 5A22  
                                __ptext96 5B14                                  __ptext88 503A  
                                __ptext97 448C                                  __ptext89 4962  
                                __ptext98 61DC                                  __ptext99 5E9A  
                        __size_of_isupper 0022                                _I2cDummyTx 606A  
                  Tmr_TmrBIrqSet@Priority 007D                     __end_of_HttpGetMethod 0ABC  
                __size_of_InitGprsNetwork 02EE                              _SSP2CON2bits 000F71  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 007F  
                       _Mmd_RingIndicator 0030                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0019                         _Mdm_IsSmsReceived 5E9A  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 4BA0  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 0087  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 625C  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 6274  
                      ??_USBCtrlEPService 0097                                  _isxdigit 5A9E  
                           _Mdm_IsRinging 5EBE                       _USBCtrlTrfInHandler 3F04  
                I2c_ReadData@I2cReadState 0034                __end_of_Mdm_RequestSmsData 61EC  
                   __end_of_ScheduleTasks 2F84                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                 blinkForSeconds@blickTicks 0093  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 4FD4  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 0085                 _USBCtrlEPAllowStatusStage 3A52  
                     ??_Mdm_IsSmsReceived 0081                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 00B3                                strtol@sign 0093  
                         Term_MainSm@Data 0454                            _PhoneNumberLen 0322  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                 __end_of_blinkForSeconds 5B4E                      __size_of_Rtcc_RtcIsr 0004  
                     i1_I2cSlv_SendI2cMsg 5B4E                  __end_of_Mcu_ConfigExtInt 60A0  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00CC  
                CDCTxService@byte_to_send 0085             I2c_WriteData@TentativeCounter 0036  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                UartWriteByte@ByteToWrite 007D                              _Tmr_StartTmr 5FD2  
                __end_of_Led_SetLedStatus 5D4C                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 007D                                  memcpy@s1 007F  
              I2cSlv_I2cReadMsgSts@Result 0081             USBCtrlTrfTxService@byteToSend 007D  
                           ?_I2cSetConfig 0001                                  itoa@base 0097  
             i1I2cSlv_SendI2cMsg@TxBuffer 001C                             ?_I2c_ReadData 0080  
                           ?_I2cSendMsgSm 0001                                  isalpha@c 0082  
                  __size_of_Mcu_SetWdgSts 0012                                  isdigit@c 007F  
                                memset@p1 007D                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 53CE  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 5EBE  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    _OsTmr_GetTimerStatus 49F6                                 sprintf@ap 0084  
                               sprintf@cp 0087                                 sprintf@sp 007D  
                       TmrBInit@Prescaler 007D                      __size_of_Tmr_Tmr2Isr 0024  
                  __size_of_USBDeviceInit 0152   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5160  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 008F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0089           _USER_USB_CALLBACK_EVENT_HANDLER 5102  
                 Rtcc_SetRtcStatus@Status 007D                          ___lwmod@dividend 007D  
                 __end_of_SetUartBaudRate 2BFE                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                  blinkForSeconds@seconds 0095                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 009F                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 5922                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                           _GetCallerNumber 5B88  
                __end_of_Rtcm_GetRtccDate 50A0                               _putUSBUSART 5F6C  
                     _USBCtrlTrfRxService 2F84                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 5ADA  
                 _USBStdFeatureReqHandler 135A                  __end_of_OsTmr_StartTimer 51BE  
                    _LedPulseStateMachine 3294                        _USBCheckCDCRequest 4136  
                     _USBCtrlTrfTxService 3708                       RtccIrqInit@Priority 007D  
                                utoa@base 008E                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                          _Rtcc_AlarmConfig 4F68  
                         ??_Tmr_TmrBPrSet 009A                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FF  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01DD  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 5788  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 5DFE                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00CD                                _WDTCONbits 000FC0  
                             ?_I2cDummyTx 0001                                  xtoi@sign 0087  
                  _NewMdmEvtParserRequest 003B       Uart_MdmGsmGprsReadService@RxCounter 0023  
                    ?_USBCtrlTrfRxService 0001                           ??i2_GenerateEvt 0003  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 0084  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 43E4  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                             _StopCondition 627E  
                   ??i1_I2cSlv_SendI2cMsg 0020                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 0029                          Mdm_IsRinging@Ret 0081  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 5BF4  
                    __end_of_CDCTxService 298E                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC2D  
                         ??_I2c_WriteData 0080                   ConfigureModem@NextState 01F2  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 6186  
